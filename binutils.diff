diff --git a/include/gdb/ChangeLog b/include/gdb/ChangeLog
index 8d3a514ae6..89e09d3edd 100644
--- a/include/gdb/ChangeLog
+++ b/include/gdb/ChangeLog
@@ -340,7 +340,7 @@ Wed Jul 17 19:36:38 2002  J"orn Rennecke <joern.rennecke@superh.com>
 	* signals.h: New file, from gdb/defs.h.
 
 
-Copyright (C) 2002-2019 Free Software Foundation, Inc.
+Copyright (C) 2002-2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/include/ChangeLog b/include/ChangeLog
index 58c7202f5c..c7fd4ab141 100644
--- a/include/ChangeLog
+++ b/include/ChangeLog
@@ -1,554 +1,95 @@
-2020-01-20  Mihail Ionescu  <mihail.ionescu@arm.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	Backport from trunk:
-	2019-11-21  Mihail Ionescu  <mihail.ionescu@arm.com>
+	Binutils 2.34 branch created.
 
-	* opcode/arm.h (ARM_EXT2_CRC): New extension feature
-	to replace CRC_EXT_ARMV8.
-	(CRC_EXT_ARMV8): Remove and mark bit as unused.
-	(ARM_ARCH_V8A_CRC, ARM_ARCH_V8_1A, ARM_ARCH_V8_2A,
-	ARM_ARCH_V8_3A, ARM_ARCH_V8_4A, ARM_ARCH_V8_5A):
-	Redefine using ARM_EXT2_CRC instead of
-	CRC_EXT_ARMV8.
+2020-01-17  Nick Clifton  <nickc@redhat.com>
 
-	2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	* Import from gcc mainline:
+	2019-06-10  Martin Liska  <mliska@suse.cz>
 
-	PR 25376
-	* opcodes/arm.h (FPU_MVE, FPU_MVE_FPU): Move these features to...
-	(ARM_EXT2_MVE, ARM_EXT2_MVE_FP): ... the CORE_HIGH space.
-	(ARM_ANY): Redefine to not include any MVE bits.
-	(ARM_FEATURE_ALL): Removed.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
-
-2019-08-30  Claudiu Zissulescu <claziss@gmail.com>
-
-	* opcode/arc.h (FASTMATH): Move it from insn_class_t to
-	insn_subclass_t enum.
-
-2019-08-22  Alan Modra  <amodra@gmail.com>
-
-	* elf/arm.h (ARM_GET_SYM_CMSE_SPCL, ARM_SET_SYM_CMSE_SPCL): Delete.
-
-2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>
-
-	* elf/mips.h (SHT_GNU_XHASH): New define.
-	(DT_GNU_XHASH): New define.
-
-2019-08-08  Yoshinori Sato  <ysato@users.sourceforge.jp>
-
-	* opcode/h8300.h (EXPAND_UNOP_EXTENDED_B): Add MODEL.
-	(EXPAND_UNOP_EXTENDED_W): Likewise.
-	(EXPAND_UNOP_EXTENDED_L): Likewise.
-	(struct h8_opcode h8_opcodes): Likewise.
-	(struct h8_opcode h8_opcodes): tas / ldm / stm supported H8S or
-	later.
-
-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
-
-	* opcode/arc.h (FASTMATH): Add.
-	(SWITCH): Likewise.
-
-2019-07-24  Alan Modra  <amodra@gmail.com>
-
-	* elf/internal.h (ELF_SECTION_IN_SEGMENT_1): Exclude non-alloc
-	sections in GNU_MBIND segments.
-
-2019-07-23  Omar Majid  <omajid@redhat.com>
-
-	* coff/i386.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.
-	(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.
-	(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.
-	(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.
-	(I386_APPLE_MAGIC): Define.
-	(I386_FREEBSD_MAGIC): Define.
-	(I386_LINUX_MAGIC): Define.
-	(I386_NETBSD_MAGIC): Define.
-	(I386BADMAG): Extend macro to allow new magic numbers.
-	* coff/x86_64.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.
-	(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.
-	(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.
-	(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.
-	(AMD64_APPLE_MAGIC): Define.
-	(AMD64_FREEBSD_MAGIC): Define.
-	(AMD64_LINUX_MAGIC): Define.
-	(AMD64_NETBSD_MAGIC): Define.
-	(AMD64BADMAG): Extend macro to allow new magic numbers.
-
-2019-07-19  Alan Modra  <amodra@gmail.com>
-
-	* elf/ppc64.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),
-	(R_PPC64_GOT_TLSGD34, R_PPC64_GOT_TLSLD34),
-	(R_PPC64_GOT_TPREL34, R_PPC64_GOT_DTPREL34): Define.
-	(IS_PPC64_TLS_RELOC): Include new tls relocs.
-
-2019-07-18  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ECTF_NOTFUNC): Fix description.
-	(ctf_func_type_info): New.
-	(ctf_func_type_args): Likewise.
-	(ctf_type_aname_raw): Likewise.
-
-2019-07-16  Jan Beulich  <jbeulich@suse.com>
-
-	* opcode/i386.h (POP_SEG386_SHORT): New.
-
-2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_insn_class): sve_size_013
-	renamed to sve_size_13.
-
-2019-06-19  Nick Alcock <nick.alcock@oracle.com>
-
-	* ctf.h (ctf_slice_t): Make cts_offset and cts_bits unsigned
-	short, so following structures are properly aligned.
-
-2019-06-14  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* elf/aarch64.h (R_AARCH64_P32_MOVW_PREL_G0): Define.
-	(R_AARCH64_P32_MOVW_PREL_G0_NC): Define.
-	(R_AARCH64_P32_MOVW_PREL_G1): Define.
-
-2019-06-03  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf.h (ctf_enum.cte_value): Fix type to int32_t.
-
-2019-05-29  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_sect_t): Drop cts_type, cts_flags, and cts_offset.
-	(ctf_id_t): This is now an unsigned type.
-	(CTF_ERR): Cast it to ctf_id_t.  Note that it should only be used
-	for ctf_id_t-returning functions.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_dump_decorate_f): New.
-	(ctf_dump_state_t): new.
-	(ctf_dump): New.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_label_f): New.
-	(ctf_label_set): New.
-	(ctf_label_get): New.
-	(ctf_label_topmost): New.
-	(ctf_label_info): New.
-	(ctf_label_iter): New.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_version): New.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_func_info): New.
-	(ctf_func_args): Likewise.
-	(ctf_lookup_by_symbol): Likewise.
-	(ctf_lookup_by_symbol): Likewise.
-	(ctf_lookup_variable): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_visit_f): New definition.
-	(ctf_member_f): Likewise.
-	(ctf_enum_f): Likewise.
-	(ctf_variable_f): Likewise.
-	(ctf_type_f): Likewise.
-	(ctf_type_isparent): Likewise.
-	(ctf_type_ischild): Likewise.
-	(ctf_type_resolve): Likewise.
-	(ctf_type_aname): Likewise.
-	(ctf_type_lname): Likewise.
-	(ctf_type_name): Likewise.
-	(ctf_type_sizee): Likewise.
-	(ctf_type_align): Likewise.
-	(ctf_type_kind): Likewise.
-	(ctf_type_reference): Likewise.
-	(ctf_type_pointer): Likewise.
-	(ctf_type_encoding): Likewise.
-	(ctf_type_visit): Likewise.
-	(ctf_type_cmp): Likewise.
-	(ctf_type_compat): Likewise.
-	(ctf_member_info): Likewise.
-	(ctf_array_info): Likewise.
-	(ctf_enum_name): Likewise.
-	(ctf_enum_value): Likewise.
-	(ctf_member_iter): Likewise.
-	(ctf_enum_iter): Likewise.
-	(ctf_type_iter): Likewise.
-	(ctf_variable_iter): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (struct bfd): New forward.
-	(ctf_fdopen): New.
-	(ctf_bfdopen): Likewise.
-	(ctf_open): Likewise.
-	(ctf_arc_open): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf.h (CTFA_MAGIC): New.
-	(struct ctf_archive): New.
-	(struct ctf_archive_modent): Likewise.
-	* ctf-api.h (ctf_archive_member_f): New.
-	(ctf_archive_raw_member_f): Likewise.
-	(ctf_arc_write): Likewise.
-	(ctf_arc_close): Likewise.
-	(ctf_arc_open_by_name): Likewise.
-	(ctf_archive_iter): Likewise.
-	(ctf_archive_raw_iter): Likewise.
-	(ctf_get_arc): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_file_close): New declaration.
-	(ctf_getdatasect): Likewise.
-	(ctf_parent_file): Likewise.
-	(ctf_parent_name): Likewise.
-	(ctf_parent_name_set): Likewise.
-	(ctf_import): Likewise.
-	(ctf_setmodel): Likewise.
-	(ctf_getmodel): Likewise.
-	(ctf_setspecific): Likewise.
-	(ctf_getspecific): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (zlib.h): New include.
-	(ctf_sect_t): New.
-	(ctf_sect_names_t): Likewise.
-	(ctf_encoding_t): Likewise.
-	(ctf_membinfo_t): Likewise.
-	(ctf_arinfo_t): Likewise.
-	(ctf_funcinfo_t): Likewise.
-	(ctf_lblinfo_t): Likewise.
-	(ctf_snapshot_id_t): Likewise.
-	(CTF_FUNC_VARARG): Likewise.
-	(ctf_simple_open): Likewise.
-	(ctf_bufopen): Likewise.
-	(ctf_create): Likewise.
-	(ctf_add_array): Likewise.
-	(ctf_add_const): Likewise.
-	(ctf_add_enum_encoded): Likewise.
-	(ctf_add_enum): Likewise.
-	(ctf_add_float): Likewise.
-	(ctf_add_forward): Likewise.
-	(ctf_add_function): Likewise.
-	(ctf_add_integer): Likewise.
-	(ctf_add_slice): Likewise.
-	(ctf_add_pointer): Likewise.
-	(ctf_add_type): Likewise.
-	(ctf_add_typedef): Likewise.
-	(ctf_add_restrict): Likewise.
-	(ctf_add_struct): Likewise.
-	(ctf_add_union): Likewise.
-	(ctf_add_struct_sized): Likewise.
-	(ctf_add_union_sized): Likewise.
-	(ctf_add_volatile): Likewise.
-	(ctf_add_enumerator): Likewise.
-	(ctf_add_member): Likewise.
-	(ctf_add_member_offset): Likewise.
-	(ctf_add_member_encoded): Likewise.
-	(ctf_add_variable): Likewise.
-	(ctf_set_array): Likewise.
-	(ctf_update): Likewise.
-	(ctf_snapshot): Likewise.
-	(ctf_rollback): Likewise.
-	(ctf_discard): Likewise.
-	(ctf_write): Likewise.
-	(ctf_gzwrite): Likewise.
-	(ctf_compress_write): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_errno): New declaration.
-	(ctf_errmsg): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h (ctf_setdebug): New.
-	(ctf_getdebug): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-api.h: New file.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf.h: New file.
-
-2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* elf/aarch64.h (DT_AARCH64_VARIANT_PCS): Define.
-	(STO_AARCH64_VARIANT_PCS): Define.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* elf/ppc64.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC),
-	(R_PPC64_PCREL_OPT, R_PPC64_D34, R_PPC64_D34_LO, R_PPC64_D34_HI30),
-	(R_PPC64_D34_HA30, R_PPC64_PCREL34, R_PPC64_GOT_PCREL34),
-	(R_PPC64_PLT_PCREL34, R_PPC64_PLT_PCREL34_NOTOC),
-	(R_PPC64_ADDR16_HIGHER34, R_PPC64_ADDR16_HIGHERA34),
-	(R_PPC64_ADDR16_HIGHEST34, R_PPC64_ADDR16_HIGHESTA34),
-	(R_PPC64_REL16_HIGHER34, R_PPC64_REL16_HIGHERA34),
-	(R_PPC64_REL16_HIGHEST34, R_PPC64_REL16_HIGHESTA34),
-	(R_PPC64_D28, R_PPC64_PCREL28): Define.
-
-2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
-	    Alan Modra  <amodra@gmail.com>
-
-	* dis-asm.h (WIDE_OUTPUT): Define.
-	* opcode/ppc.h (prefix_opcodes, prefix_num_opcodes): Declare.
-	(PPC_OPCODE_POWERXX, PPC_GET_PREFIX, PPC_GET_SUFFIX),
-	(PPC_PREFIX_P, PPC_PREFIX_SEG): Define.
-
-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* elf/bpf.h: New file.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* elf/arm.h (Tag_MVE_arch): Define new enum value.
-	* opcode/arm.h (FPU_MVE, FPU_MVE_FP): New MACROs for new features.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHLIMM_UNPRED_22
-	operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_tsz_bhs
-	iclass.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_opnd): New SVE_Zm4_11_INDEX operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_shift_tsz_bhsd
-	iclass.
+	* ansidecl.h (ATTRIBUTE_WARN_UNUSED_RESULT): New macro.
+	* libiberty.h (xmalloc): Use it.
+	(xrealloc): Likewise.
+	(xcalloc): Likewise.
+	(xstrdup): Likewise.
+	(xstrndup): Likewise.
+	(xmemdup): Likewise.
 
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+	2019-06-10  Martin Liska  <mliska@suse.cz>
 
-	* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHRIMM_UNPRED_22
-	operand.
-	(enum aarch64_insn_class): Add sve_shift_tsz_hsd iclass.
+	* ansidecl.h:
+	(ATTRIBUTE_RESULT_SIZE_1): Define new macro.
+	(ATTRIBUTE_RESULT_SIZE_2): Likewise.
+	(ATTRIBUTE_RESULT_SIZE_1_2): Likewise.
+	* libiberty.h (xmalloc): Add RESULT_SIZE attribute.
+	(xrealloc): Likewise.
+	(xcalloc): Likewise.
 
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+	2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>
 
-	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_013 iclass.
+	* demangle.h (struct demangle_component): Add member
+	d_counting.
 
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+	2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
 
-	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_bh iclass.
+	* demangle.h (rust_demangle_callback): Add.
 
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+	2019-07-18  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
 
-	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_sd2 iclass.
+	* demangle.h (rust_is_mangled): Move to libiberty/rust-demangle.h.
+	(rust_demangle_sym): Move to libiberty/rust-demangle.h.
 
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
 
-	* opcode/aarch64.h (enum aarch64_opnd): New SVE_ADDR_ZX operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_opnd): New SVE_Zm3_11_INDEX operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_hsd2 iclass.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_opnd): New SVE_IMM_ROT3 operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/aarch64.h (AARCH64_FEATURE_SVE2
-	AARCH64_FEATURE_SVE2_AES, AARCH64_FEATURE_SVE2_BITPERM,
-	AARCH64_FEATURE_SVE2_SM4, AARCH64_FEATURE_SVE2_SHA3): New
-	feature macros.
-
-2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>
-	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* opcode/mips.h (ASE_EVA_R6): New macro.
-	(M_LLWPE_AB, M_SCWPE_AB): New enum values.
-
-2019-05-01  Sudakshina Das  <sudi.das@arm.com>
-
-	* opcode/aarch64.h (AARCH64_FEATURE_TME): New.
-	(enum aarch64_opnd): Add AARCH64_OPND_TME_UIMM16.
-
-2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>
-	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* opcode/mips.h (M_LLWP_AB, M_LLDP_AB): New enum values.
-	(M_SCWP_AB, M_SCDP_AB): Likewise.
-
-2019-04-25  Maciej W. Rozycki  <macro@linux-mips.org>
-
-	* opcode/mips.h: Update comment for MIPS32 CODE20 operand.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF12.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF18.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF16.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* elf/arm.h (TAG_CPU_ARCH_V8_1M_MAIN): new macro.
-	(MAX_TAG_CPU_ARCH): Set value to above macro.
-	* opcode/arm.h (ARM_EXT2_V8_1M_MAIN): New macro.
-	(ARM_AEXT_V8_1M_MAIN): Likewise.
-	(ARM_AEXT2_V8_1M_MAIN): Likewise.
-	(ARM_ARCH_V8_1M_MAIN): Likewise.
-
-2019-04-11  Sudakshina Das  <sudi.das@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_opnd): Add AARCH64_OPND_Rt_SP.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf/common.h (GNU_PROPERTY_X86_ISA_1_AVX512_BF16): New.
-
-2019-04-07  Alan Modra  <amodra@gmail.com>
-
-	Merge from gcc.
-	2019-04-03  Vineet Gupta  <vgupta@synopsys.com>
-	PR89877
-	* longlong.h [__arc__] (add_ssaaaa): Add cc clobber.
-	(sub_ddmmss): Likewise.
-
-2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* bfdlink.h (bfd_link_info): Remove x86-specific linker options.
-
-2019-04-01  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* opcode/arm.h (FPU_NEON_ARMV8_1): New.
-	(FPU_ARCH_NEON_VFP_ARMV8_1): Use FPU_NEON_ARMV8_1.
-	(FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_1): Likewise.
-	(FPU_ARCH_DOTPROD_NEON_VFP_ARMV8): Likewise.
-	(FPU_ARCH_NEON_VFP_ARMV8_2_FP16): New.
-	(FPU_ARCH_NEON_VFP_ARMV8_2_FP16FML): New.
-	(FPU_ARCH_NEON_VFP_ARMV8_4_FP16FML): New.
-	(FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_4): New.
-
-2019-03-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24390
-	* opcode/ppc.h (PPC_OPERAND_CR_REG): Comment.
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* dis-asm.h (struct disassemble_info): Add stop_offset.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-
-	* elf/aarch64.h (DT_AARCH64_PAC_PLT): New.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-	    Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* elf/aarch64.h (DT_AARCH64_BTI_PLT): New.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-
-	* elf/common.h (GNU_PROPERTY_AARCH64_FEATURE_1_AND): New.
-	(GNU_PROPERTY_AARCH64_FEATURE_1_BTI): New.
-	(GNU_PROPERTY_AARCH64_FEATURE_1_PAC): New.
-
-2019-02-20  Alan Hayward  <alan.hayward@arm.com>
-
-	* elf/common.h (NT_ARM_PAC_MASK): Add define.
-
-2019-02-15  Saagar Jha  <saagar@saagarjha.com>
-
-	* mach-o/loader.h: Use new OS names in comments.
-
-2019-02-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* splay-tree.h (splay_tree_delete_key_fn): Update comment.
-	(splay_tree_delete_value_fn): Likewise.
-
-2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>
-
-	* opcode/s390.h (enum s390_opcode_cpu_val): Add
-	S390_OPCODE_ARCH13.
-
-2019-01-25  Sudakshina Das  <sudi.das@arm.com>
-	    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_opnd): Remove
-	AARCH64_OPND_ADDR_SIMPLE_2.
-	(enum aarch64_insn_class): Remove ldstgv_indexed.
-
-2019-01-22  Tom Tromey  <tom@tromey.com>
-
-	* coff/ecoff.h: Include coff/sym.h.
+	PR 25376
+	* opcodes/arm.h (FPU_MVE, FPU_MVE_FPU): Move these features to...
+	(ARM_EXT2_MVE, ARM_EXT2_MVE_FP): ... the CORE_HIGH space.
+	(ARM_ANY): Redefine to not include any MVE bits.
+	(ARM_FEATURE_ALL): Removed.
 
-2018-06-24  Nick Clifton  <nickc@redhat.com>
+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
-	2.32 branch created.
+	* opcode/msp430.h (enum msp430_expp_e): New.
+	(struct msp430_operand_s): Add expp member to struct.
 
-2019-01-16  Kito Cheng  <kito@andestech.com>
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
 
-	* elf/riscv.h (SHT_RISCV_ATTRIBUTES): Define.
-	(Tag_RISCV_arch): Likewise.
-	(Tag_RISCV_priv_spec): Likewise.
-	(Tag_RISCV_priv_spec_minor): Likewise.
-	(Tag_RISCV_priv_spec_revision): Likewise.
-	(Tag_RISCV_unaligned_access): Likewise.
-	(Tag_RISCV_stack_align): Likewise.
+	* elf/arc-cpu.def: Update ARC cpu list.
 
-2019-01-14  Pavel I. Kryukov  <kryukov@frtk.ru>
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-	* dis-asm.h: include <string.h>
+	* opcode/tic4x.h (EXTR): Delete.
+	(EXTRU, EXTRS, INSERTU, INSERTS): Rewrite without zero/sign
+	extension using shifts.  Do trim INSERTU value to specified bitfield.
 
-2019-01-10  Nick Clifton  <nickc@redhat.com>
+2020-01-10  Alan Modra  <amodra@gmail.com>
 
-	* Merge from GCC:
-	2018-12-22  Jason Merrill  <jason@redhat.com>
+	* opcode/spu.h: Formatting.
+	(UNSIGNED_EXTRACT): Use 1u.
+	(SIGNED_EXTRACT): Don't sign extend with shifts.
+	(DECODE_INSN_I9a, DECODE_INSN_I9b): Avoid left shift of signed value.
+	Keep result signed.
+	(DECODE_INSN_U9a, DECODE_INSN_U9b): Delete.
 
-	* demangle.h: Remove support for ancient GNU (pre-3.0), Lucid,
-	ARM, HP, and EDG demangling styles.
+2020-01-07  Shahab Vahedi  <shahab@synopsys.com>
 
-2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>
+	* opcode/arc.h (insn_class_t): Add 'LLOCK' and 'SCOND'.
 
-	Merge from GCC:
-	PR other/16615
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
-	* libiberty.h: Mechanically replace "can not" with "cannot".
-	* plugin-api.h: Likewise.
+	* coff/internal.h: Add defintions of Z80 reloc names.
 
-2018-12-25  Yoshinori Sato <ysato@users.sourceforge.jp>
+2020-01-02  Christian Biesinger  <cbiesinger@google.com>
 
-	* elf/rx.h (EF_RX_CPU_MASK): Update new bits.
-	(E_FLAG_RX_V3): New RXv3 type.
-	* opcode/rx.h (RX_Size): Add double size.
-	(RX_Operand_Type): Add double FPU registers.
-	(RX_Opcode_ID): Add new instuctions.
+	* opcode/s12z.h: Undef REG_Y.
 
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/libctf/ChangeLog b/libctf/ChangeLog
index e56e2c0b86..93462c7e45 100644
--- a/libctf/ChangeLog
+++ b/libctf/ChangeLog
@@ -1,3 +1,576 @@
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 release.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-05  Joel Brobecker  <brobecker@adacore.com>
+
+	PR binutils/25155:
+	* configure.ac: Add AC_CHECK_DECLS([asprintf]).
+	* configure, config.h.in: Regenerate.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+2019-10-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* swap.h (bswap_16, bswap_32, bswap_64): Make static.
+
+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (ctf_bufopen_internal): Fix tabdamage.
+	* ctf-types.c (ctf_type_lname): Likewise.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (ctf_import): Do not leak a ctf_file_t ref on every
+	ctf_import after the first for a given file.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_str_append_noerr): Declare.
+	* ctf-util.c (ctf_str_append_noerr): Define in terms of
+	ctf_str_append.
+	* ctf-dump.c (str_append): New, call it.
+	(ctf_dump_format_type): Use str_append, not ctf_str_append.
+	(ctf_dump_label): Likewise.
+	(ctf_dump_objts): Likewise.
+	(ctf_dump_funcs): Likewise.
+	(ctf_dump_var): Likewise.
+	(ctf_dump_member): Likewise.
+	(ctf_dump_type): Likewise.
+	(ctf_dump): Likewise.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_alloc): Remove.
+	(ctf_free): Likewise.
+	(ctf_strdup): Likewise.
+	* ctf-subr.c (ctf_alloc): Remove.
+	(ctf_free): Likewise.
+	* ctf-util.c (ctf_strdup): Remove.
+
+	* ctf-create.c (ctf_serialize): Use malloc, not ctf_alloc; free, not
+	ctf_free; strdup, not ctf_strdup.
+	(ctf_dtd_delete): Likewise.
+	(ctf_dvd_delete): Likewise.
+	(ctf_add_generic): Likewise.
+	(ctf_add_function): Likewise.
+	(ctf_add_enumerator): Likewise.
+	(ctf_add_member_offset): Likewise.
+	(ctf_add_variable): Likewise.
+	(membadd): Likewise.
+	(ctf_compress_write): Likewise.
+	(ctf_write_mem): Likewise.
+	* ctf-decl.c (ctf_decl_push): Likewise.
+	(ctf_decl_fini): Likewise.
+	(ctf_decl_sprintf): Likewise.  Check for OOM.
+	* ctf-dump.c (ctf_dump_append): Use malloc, not ctf_alloc; free, not
+	ctf_free; strdup, not ctf_strdup.
+	(ctf_dump_free): Likewise.
+	(ctf_dump): Likewise.
+	* ctf-open.c (upgrade_types_v1): Likewise.
+	(init_types): Likewise.
+	(ctf_file_close): Likewise.
+	(ctf_bufopen_internal): Likewise.  Check for OOM.
+	(ctf_parent_name_set): Likewise: report the OOM to the caller.
+	(ctf_cuname_set): Likewise.
+	(ctf_import): Likewise.
+	* ctf-string.c (ctf_str_purge_atom_refs): Use malloc, not ctf_alloc;
+	free, not ctf_free; strdup, not ctf_strdup.
+	(ctf_str_free_atom): Likewise.
+	(ctf_str_create_atoms): Likewise.
+	(ctf_str_add_ref_internal): Likewise.
+	(ctf_str_remove_ref): Likewise.
+	(ctf_str_write_strtab): Likewise.
+
+2019-08-09  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_encoding): Fix the dynamic case to
+	work right for non-int/fps.
+
+2019-08-08  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_name): Don't strlen a potentially-
+	null pointer.
+
+2019-08-07  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t) <ctf_add_processing>: New.
+	* ctf-open.c (ctf_file_close): Free it.
+	* ctf-create.c (ctf_serialize): Adjust.
+	(membcmp): When reporting a conflict due to an error, report the
+	error.
+	(ctf_add_type): Turn into a ctf_add_processing wrapper.  Rename to...
+	(ctf_add_type_internal): ... this.  Hand back types we are already
+	in the middle of adding immediately.  Hand back structs/unions with
+	the same number of members immediately.  Do not walk the dynamic
+	list.  Call ctf_add_type_internal, not ctf_add_type.  Handle
+	forwards promoted to other types and the inverse case identically.
+	Add structs to the mapping as soon as we intern them, before they
+	gain any members.
+
+2019-08-09  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_names_t): New.
+	(ctf_lookup_t) <ctf_hash>: Now a ctf_names_t, not a ctf_hash_t.
+	(ctf_file_t) <ctf_structs>: Likewise.
+	<ctf_unions>: Likewise.
+	<ctf_enums>: Likewise.
+	<ctf_names>: Likewise.
+	<ctf_lookups>: Improve comment.
+	<ctf_ptrtab_len>: New.
+	<ctf_prov_strtab>: New.
+	<ctf_str_prov_offset>: New.
+	<ctf_dtbyname>: Remove, redundant to the names hashes.
+	<ctf_dtnextid>: Remove, redundant to ctf_typemax.
+	(ctf_dtdef_t) <dtd_name>: Remove.
+	<dtd_data>: Note that the ctt_name is now populated.
+	(ctf_str_atom_t) <csa_offset>: This is now the strtab
+	offset for internal strings too.
+	<csa_external_offset>: New, the external strtab offset.
+	(CTF_INDEX_TO_TYPEPTR): Handle the LCTF_RDWR case.
+	(ctf_name_table): New declaration.
+	(ctf_lookup_by_rawname): Likewise.
+	(ctf_lookup_by_rawhash): Likewise.
+	(ctf_set_ctl_hashes): Likewise.
+	(ctf_serialize): Likewise.
+	(ctf_dtd_insert): Adjust.
+	(ctf_simple_open_internal): Likewise.
+	(ctf_bufopen_internal): Likewise.
+	(ctf_list_empty_p): Likewise.
+	(ctf_str_remove_ref): Likewise.
+	(ctf_str_add): Returns uint32_t now.
+	(ctf_str_add_ref): Likewise.
+	(ctf_str_add_external): Now returns a boolean (int).
+	* ctf-string.c (ctf_strraw_explicit): Check the ctf_prov_strtab
+	for strings in the appropriate range.
+	(ctf_str_create_atoms): Create the ctf_prov_strtab.  Detect OOM
+	when adding the null string to the new strtab.
+	(ctf_str_free_atoms): Destroy the ctf_prov_strtab.
+	(ctf_str_add_ref_internal): Add make_provisional argument.  If
+	make_provisional, populate the offset and fill in the
+	ctf_prov_strtab accordingly.
+	(ctf_str_add): Return the offset, not the string.
+	(ctf_str_add_ref): Likewise.
+	(ctf_str_add_external): Return a success integer.
+	(ctf_str_remove_ref): New, remove a single ref.
+	(ctf_str_count_strtab): Do not count the initial null string's
+	length or the existence or length of any unreferenced internal
+	atoms.
+	(ctf_str_populate_sorttab): Skip atoms with no refs.
+	(ctf_str_write_strtab): Populate the nullstr earlier.  Add one
+	to the cts_len for the null string, since it is no longer done
+	in ctf_str_count_strtab.  Adjust for csa_external_offset rename.
+	Populate the csa_offset for both internal and external cases.
+	Flush the ctf_prov_strtab afterwards, and reset the
+	ctf_str_prov_offset.
+	* ctf-create.c (ctf_grow_ptrtab): New.
+	(ctf_create): Call it.	Initialize new fields rather than old
+	ones.  Tell ctf_bufopen_internal that this is a writable dictionary.
+	Set the ctl hashes and data model.
+	(ctf_update): Rename to...
+	(ctf_serialize): ... this.  Leave a compatibility function behind.
+	Tell ctf_simple_open_internal that this is a writable dictionary.
+	Pass the new fields along from the old dictionary.  Drop
+	ctf_dtnextid and ctf_dtbyname.	Use ctf_strraw, not dtd_name.
+	Do not zero out the DTD's ctt_name.
+	(ctf_prefixed_name): Rename to...
+	(ctf_name_table): ... this.  No longer return a prefixed name: return
+	the applicable name table instead.
+	(ctf_dtd_insert): Use it, and use the right name table.	 Pass in the
+	kind we're adding.  Migrate away from dtd_name.
+	(ctf_dtd_delete): Adjust similarly.  Remove the ref to the
+	deleted ctt_name.
+	(ctf_dtd_lookup_type_by_name): Remove.
+	(ctf_dynamic_type): Always return NULL on read-only dictionaries.
+	No longer check ctf_dtnextid: check ctf_typemax instead.
+	(ctf_snapshot): No longer use ctf_dtnextid: use ctf_typemax instead.
+	(ctf_rollback): Likewise.  No longer fail with ECTF_OVERROLLBACK. Use
+	ctf_name_table and the right name table, and migrate away from
+	dtd_name as in ctf_dtd_delete.
+	(ctf_add_generic): Pass in the kind explicitly and pass it to
+	ctf_dtd_insert. Use ctf_typemax, not ctf_dtnextid.  Migrate away
+	from dtd_name to using ctf_str_add_ref to populate the ctt_name.
+	Grow the ptrtab if needed.
+	(ctf_add_encoded): Pass in the kind.
+	(ctf_add_slice): Likewise.
+	(ctf_add_array): Likewise.
+	(ctf_add_function): Likewise.
+	(ctf_add_typedef): Likewise.
+	(ctf_add_reftype): Likewise. Initialize the ctf_ptrtab, checking
+	ctt_name rather than dtd_name.
+	(ctf_add_struct_sized): Pass in the kind.  Use
+	ctf_lookup_by_rawname, not ctf_hash_lookup_type /
+	ctf_dtd_lookup_type_by_name.
+	(ctf_add_union_sized): Likewise.
+	(ctf_add_enum): Likewise.
+	(ctf_add_enum_encoded): Likewise.
+	(ctf_add_forward): Likewise.
+	(ctf_add_type): Likewise.
+	(ctf_compress_write): Call ctf_serialize: adjust for ctf_size not
+	being initialized until after the call.
+	(ctf_write_mem): Likewise.
+	(ctf_write): Likewise.
+	* ctf-archive.c (arc_write_one_ctf): Likewise.
+	* ctf-lookup.c (ctf_lookup_by_name): Use ctf_lookuup_by_rawhash, not
+	ctf_hash_lookup_type.
+	(ctf_lookup_by_id): No longer check the readonly types if the
+	dictionary is writable.
+	* ctf-open.c (init_types): Assert that this dictionary is not
+	writable.  Adjust to use the new name hashes, ctf_name_table,
+	and ctf_ptrtab_len.  GNU style fix for the final ptrtab scan.
+	(ctf_bufopen_internal): New 'writable' parameter.  Flip on LCTF_RDWR
+	if set.	 Drop out early when dictionary is writable.  Split the
+	ctf_lookups initialization into...
+	(ctf_set_cth_hashes): ... this new function.
+	(ctf_simple_open_internal): Adjust.  New 'writable' parameter.
+	(ctf_simple_open): Adjust accordingly.
+	(ctf_bufopen): Likewise.
+	(ctf_file_close): Destroy the appropriate name hashes.	No longer
+	destroy ctf_dtbyname, which is gone.
+	(ctf_getdatasect): Remove spurious "extern".
+	* ctf-types.c (ctf_lookup_by_rawname): New, look up types in the
+	specified name table, given a kind.
+	(ctf_lookup_by_rawhash): Likewise, given a ctf_names_t *.
+	(ctf_member_iter): Add support for iterating over the
+	dynamic type list.
+	(ctf_enum_iter): Likewise.
+	(ctf_variable_iter): Likewise.
+	(ctf_type_rvisit): Likewise.
+	(ctf_member_info): Add support for types in the dynamic type list.
+	(ctf_enum_name): Likewise.
+	(ctf_enum_value): Likewise.
+	(ctf_func_type_info): Likewise.
+	(ctf_func_type_args): Likewise.
+	* ctf-link.c (ctf_accumulate_archive_names): No longer call
+	ctf_update.
+	(ctf_link_write): Likewise.
+	(ctf_link_intern_extern_string): Adjust for new
+	ctf_str_add_external return value.
+	(ctf_link_add_strtab): Likewise.
+	* ctf-util.c (ctf_list_empty_p): New.
+
+2019-08-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_resolve): Return ECTF_NONREPRESENTABLE on
+	type zero.
+	* ctf-create.c (ctf_add_type): Detect and skip nonrepresentable
+	members and types.
+	(ctf_add_variable): Likewise for variables pointing to them.
+	* ctf-link.c (ctf_link_one_type): Do not warn for nonrepresentable
+	type link failure, but do warn for others.
+	* ctf-dump.c (ctf_dump_format_type): Likewise.  Do not assume all
+	errors to be ENOMEM.
+	(ctf_dump_member): Likewise.
+	(ctf_dump_type): Likewise.
+	(ctf_dump_header_strfield): Do not assume all errors to be ENOMEM.
+	(ctf_dump_header_sectfield): Do not assume all errors to be ENOMEM.
+	(ctf_dump_header): Likewise.
+	(ctf_dump_label): likewise.
+	(ctf_dump_objts): likewise.
+	(ctf_dump_funcs): likewise.
+	(ctf_dump_var): likewise.
+	(ctf_dump_str): Likewise.
+
+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac (AC_DISABLE_SHARED): New, like opcodes/.
+	(LT_INIT): Likewise.
+	(AM_INSTALL_LIBBFD): Likewise.
+	(dlopen): Note why this is necessary in a comment.
+	(SHARED_LIBADD): Initialize for possibly-PIC libiberty: derived from
+	opcodes/.
+	(SHARED_LDFLAGS): Likewise.
+	(BFD_LIBADD): Likewise, for libbfd.
+	(BFD_DEPENDENCIES): Likewise.
+	(VERSION_FLAGS): Initialize, using a version script if ld supports
+	one, or libtool -export-symbols-regex otherwise.
+	(AC_CONFIG_MACRO_DIR): Add ../BFD.
+	* Makefile.am (ACLOCAL_AMFLAGS): Likewise.
+	(INCDIR): New.
+	(AM_CPPFLAGS): Use $(srcdir), not $(top_srcdir).
+	(noinst_LIBRARIES): Replace with...
+	[INSTALL_LIBBFD] (lib_LTLIBRARIES): This, or...
+	[!INSTALL_LIBBFD] (noinst_LTLIBRARIES): ... this, mentioning new
+	libctf-nobfd.la as well.
+	[INSTALL_LIBCTF] (include_HEADERS): Add the CTF headers.
+	[!INSTALL_LIBCTF] (include_HEADERS): New, empty.
+	(libctf_a_SOURCES): Rename to...
+	(libctf_nobfd_la_SOURCES): ... this, all of libctf other than
+	ctf-open-bfd.c.
+	(libctf_la_SOURCES): Now derived from libctf_nobfd_la_SOURCES,
+	with ctf-open-bfd.c added.
+	(libctf_nobfd_la_LIBADD): New, using @SHARED_LIBADD@.
+	(libctf_la_LIBADD): New, using @BFD_LIBADD@ as well.
+	(libctf_la_DEPENDENCIES): New, using @BFD_DEPENDENCIES@.
+	* Makefile.am [INSTALL_LIBCTF]: Use it.
+	* aclocal.m4: Add ../bfd/acinclude.m4, ../config/acx.m4, and the
+	libtool macros.
+	* libctf.ver: New, everything is version LIBCTF_1.0 currently (even
+	the unstable components).
+	* Makefile.in: Regenerated.
+	* config.h.in: Likewise.
+	* configure: Likewise.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac (INSTALL_LIBCTF): New, controlled by
+	--enable-install-libctf.
+	[INSTALL_LIBCTF] (lib_LIBRARIES): Add libctf.a.
+	* Makefile.in: Regenerated.
+	* configure: Regenerated.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_arc_close): Call ctfi_bfd_close if set.
+	* ctf-open-bfd.c (ctf_bfdclose): Fix comment.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open-bfd.c (ctf_fdopen): Call bfd_set_cacheable.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (includes): Include <sys/param.h> here.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (flip_lbls): Eschew for-loop initial declarations.
+	(flip_objts): Likewise.
+	(flip_vars): Likewise.
+	(flip_types): Likewise.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-hash.c (ctf_hashtab_insert): Pass in the key and value
+	freeing functions: if set, free the key and value if the slot
+	already exists.  Always reassign the key.
+	(ctf_dynhash_insert): Adjust call appropriately.
+	(ctf_hash_insert_type): Likewise.
+
+2019-08-03  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_add_type): Look up and use the forwarded-to
+	type kind.  Allow forwards to unify with pre-existing structs/
+	unions/enums.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t) <ctf_link_cu_mappping>: New.
+	<ctf_link_memb_name_changer>: Likewise.
+	<ctf_link_memb_name_changer_arg>: Likewise.
+	* ctf-create.c (ctf_update): Update accordingly.
+	* ctf-open.c (ctf_file_close): Likewise.
+	* ctf-link.c (ctf_create_per_cu): Apply the cu mapping.
+	(ctf_link_add_cu_mapping): New.
+	(ctf_link_set_memb_name_changer): Likewise.
+	(ctf_change_parent_name): New.
+	(ctf_name_list_accum_cb_arg_t) <dynames>: New, storage for names
+	allocated by the caller's ctf_link_memb_name_changer.
+	<ndynames>: Likewise.
+	(ctf_accumulate_archive_names): Call the ctf_link_memb_name_changer.
+	(ctf_link_write): Likewise (for _CTF_SECTION only): also call
+	ctf_change_parent_name.  Free any resulting names.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c (ctf_create_per_cu): New, refactored out of...
+	(ctf_link_one_type): ... here, with parent-name setting added.
+	(check_variable): New.
+	(ctf_link_one_variable): Likewise.
+	(ctf_link_one_input_archive_member): Call it.
+	* ctf-error.c (_ctf_errlist): Updated with new errors.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t): New field ctf_link_type_mapping.
+	(struct ctf_link_type_mapping_key): New.
+	(ctf_hash_type_mapping_key): Likewise.
+	(ctf_hash_eq_type_mapping_key): Likewise.
+	(ctf_add_type_mapping): Likewise.
+	(ctf_type_mapping): Likewise.
+	(ctf_dynhash_empty): Likewise.
+	* ctf-open.c (ctf_file_close): Update accordingly.
+	* ctf-create.c (ctf_update): Likewise.
+	(ctf_add_type): Populate the mapping.
+	* ctf-hash.c (ctf_hash_type_mapping_key): Hash a type mapping key.
+	(ctf_hash_eq_type_mapping_key): Check the key for equality.
+	(ctf_dynhash_insert): Fix comment typo.
+	(ctf_dynhash_empty): New.
+	* ctf-link.c (ctf_add_type_mapping): New.
+	(ctf_type_mapping): Likewise.
+	(empty_link_type_mapping): New.
+	(ctf_link_one_input_archive): Call it.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c: New file, linking of the string and type sections.
+	* Makefile.am (libctf_a_SOURCES): Add it.
+	* Makefile.in: Regenerate.
+
+	* ctf-impl.h (ctf_file_t): New fields ctf_link_inputs,
+	ctf_link_outputs.
+	* ctf-create.c (ctf_update): Update accordingly.
+	* ctf-open.c (ctf_file_close): Likewise.
+	* ctf-error.c (_ctf_errlist): Updated with new errors.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_funcs): Check the right error value.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump): Use ctf_type_iter_all to dump types, not
+	ctf_type_iter.
+	(ctf_dump_type): Pass down the flag from ctf_type_iter_all.
+	(ctf_dump_format_type): Add non-root-type { } notation.
+	Add root flag to prototype.
+	(ctf_dump_label): Adjust accordingly.
+	(ctf_dump_objts): Likewise.
+	(ctf_dump_var): Likewise.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_compress_write): Fix double-free.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_arc_write): Split off, and reimplement in terms
+	of...
+	(ctf_arc_write_fd): ... this new function.
+	* ctf-create.c (ctf_write_mem): New.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_str_atom_t) <csa_offset>: New field.
+	(ctf_file_t) <ctf_syn_ext_strtab>: Likewise.
+	(ctf_str_add_ref): Name the last arg.
+	(ctf_str_add_external) New.
+	(ctf_str_add_strraw_explicit): Likewise.
+	(ctf_simple_open_internal): Likewise.
+	(ctf_bufopen_internal): Likewise.
+
+	* ctf-string.c (ctf_strraw_explicit): Split from...
+	(ctf_strraw): ... here, with new support for ctf_syn_ext_strtab.
+	(ctf_str_add_ref_internal): Return the atom, not the
+	string.
+	(ctf_str_add): Adjust accordingly.
+	(ctf_str_add_ref): Likewise.  Move up in the file.
+	(ctf_str_add_external): New: update the csa_offset.
+	(ctf_str_count_strtab): Only account for strings with no csa_offset
+	in the internal strtab length.
+	(ctf_str_write_strtab): If the csa_offset is set, update the
+	string's refs without writing the string out, and update the
+	ctf_syn_ext_strtab.  Make OOM handling less ugly.
+	* ctf-create.c (struct ctf_sort_var_arg_cb): New.
+	(ctf_update): Handle failure to populate the strtab.  Pass in the
+	new ctf_sort_var arg.  Adjust for ctf_syn_ext_strtab addition.
+	Call ctf_simple_open_internal, not ctf_simple_open.
+	(ctf_sort_var): Call ctf_strraw_explicit rather than looking up
+	strings by hand.
+	* ctf-hash.c (ctf_hash_insert_type): Likewise (but using
+	ctf_strraw).  Adjust to diagnose ECTF_STRTAB nonetheless.
+	* ctf-open.c (init_types): No longer filter out ECTF_STRTAB.
+	(ctf_file_close): Destroy the ctf_syn_ext_strtab.
+	(ctf_simple_open): Rename to, and reimplement as a wrapper around...
+	(ctf_simple_open_internal): ... this new function, which calls
+	ctf_bufopen_internal.
+	(ctf_bufopen): Rename to, and reimplement as a wrapper around...
+	(ctf_bufopen_internal): ... this new function, which sets
+	ctf_syn_ext_strtab.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf_types.c (ctf_type_iter_all): New.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (init_symtab): Check for overflow against the right
+	section.
+	(upgrade_header): Set cth_objtidxoff, cth_funcidxoff to zero-length.
+	(upgrade_types_v1): Note that these sections are not checked.
+	(flip_header): Endian-swap the header fields.
+	(flip_ctf): Endian-swap the sections.
+	(flip_objts): Update comment.
+	(ctf_bufopen): Check header offsets and alignment for validity.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open-bfd.c: Add <assert.h>.
+	(ctf_bfdopen_ctfsect): Open string and symbol tables using
+	techniques borrowed from bfd_elf_sym_name.
+	(ctf_new_archive_internal): Improve comment.
+	* ctf-archive.c (ctf_arc_close): Do not free the ctfi_strsect.
+	* ctf-open.c (ctf_bufopen): Allow opening with a string section but
+	no symbol section, but not vice versa.
+
+2019-07-08  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t): New field ctf_openflags.
+	* ctf-open.c (ctf_bufopen): Set it.  No longer dump header offsets.
+	* ctf-dump.c (dump_header): New function, dump the CTF header.
+	(ctf_dump): Call it.
+	(ctf_dump_header_strfield): New function.
+	(ctf_dump_header_sectfield): Likewise.
+
+2019-07-06  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t): New fields ctf_header, ctf_dynbase,
+	ctf_cuname, ctf_dyncuname: ctf_base and ctf_buf are no longer const.
+	* ctf-open.c (ctf_set_base): Preserve the gap between ctf_buf and
+	ctf_base: do not assume that it is always sizeof (ctf_header_t).
+	Print out ctf_cuname: only print out ctf_parname if set.
+	(ctf_free_base): Removed, ctf_base is no longer freed: free
+	ctf_dynbase instead.
+	(ctf_set_version): Fix spacing.
+	(upgrade_header): New, in-place header upgrading.
+	(upgrade_types): Rename to...
+	(upgrade_types_v1): ... this.  Free ctf_dynbase, not ctf_base.  No
+	longer track old and new headers separately.  No longer allow for
+	header sizes explicitly: squeeze the headers out on upgrade (they
+	are preserved in fp->ctf_header).  Set ctf_dynbase, ctf_base and
+	ctf_buf explicitly.  Use ctf_free, not ctf_free_base.
+	(upgrade_types): New, also handle ctf_parmax updating.
+	(flip_header): Flip ctf_cuname.
+	(flip_types): Flip BUF explicitly rather than deriving BUF from
+	BASE.
+	(ctf_bufopen): Store the header in fp->ctf_header.  Correct minimum
+	required alignment of objtoff and funcoff.  No longer store it in
+	the ctf_buf unless that buf is derived unmodified from the input.
+	Set ctf_dynbase where ctf_base is dynamically allocated. Drop locals
+	that duplicate fields in ctf_file: move allocation of ctf_file
+	further up instead.  Call upgrade_header as needed.  Move
+	version-specific ctf_parmax initialization into upgrade_types.  More
+	concise error handling.
+	(ctf_file_close): No longer test for null pointers before freeing.
+	Free ctf_dyncuname, ctf_dynbase, and ctf_header.  Do not call
+	ctf_free_base.
+	(ctf_cuname): New.
+	(ctf_cuname_set): New.
+	* ctf-create.c (ctf_update): Populate ctf_cuname.
+	(ctf_gzwrite): Write out the header explicitly.  Remove obsolescent
+	comment.
+	(ctf_write): Likewise.
+	(ctf_compress_write): Get the header from ctf_header, not ctf_base.
+	Fix the compression length: fp->ctf_size never counted the CTF
+	header.  Simplify the compress call accordingly.
+
+2019-07-11  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* ctf-endian.h: Don't assume htole64 and le64toh are always
+	present if HAVE_ENDIAN_H; also check if htole64 is defined.
+	[!WORDS_BIGENDIAN] (htole64, le64toh): Define as identity,
+	not bswap_identity_64.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* ctf-open-bfd.c: Update throughout for bfd section macro changes.
+
 2019-09-09  Phil Blundell  <pb@pbcl.net>
 
 	binutils 2.33 branch created.
@@ -10,11 +583,11 @@
 	* ctf-error.c (_ctf_errlist): Fix description.
 	* ctf-lookup.c: Fix file description.
 
-2019-06-28  Nick Alcock <nick.alcock@oracle.com>
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-create.c (ctf_create): Fix off-by-one error.
 
-2019-06-28  Nick Alcock <nick.alcock@oracle.com>
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-impl.h: (struct ctf_strs_writable): New, non-const version of
 	struct ctf_strs.
@@ -65,7 +638,7 @@
 	* Makefile.am (libctf_a_SOURCES): Add it.
 	* Makefile.in: Regenerate.
 
-2019-06-28  Nick Alcock <nick.alcock@oracle.com>
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-impl.h (ctf_hash_iter_f): New.
 	(ctf_dynhash_iter): New declaration.
@@ -77,16 +650,16 @@
 	(struct ctf_traverse_cb_arg): Likewise.
 	(struct ctf_traverse_remove_cb_arg): Likewise.
 
-2019-06-28  Nick Alcock <nick.alcock@oracle.com>
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-hash.c (ctf_dynhash_remove): Call with a mocked-up element.
 
-2019-06-28  Nick Alcock <nick.alcock@oracle.com>
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-dump.c (ctf_dump_format_type): Prefix hex strings with 0x.
 	(ctf_dump_funcs): Likewise.
 
-2019-06-19  Nick Alcock <nick.alcock@oracle.com>
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-open-bfd.c: Add swap.h and ctf-endian.h.
 	(ctf_fdopen): Check for endian-swapped raw CTF magic, and
@@ -94,24 +667,24 @@
 	ctf_simple_open does that in endian-safe ways.  Do not dereference
 	null pointers on open failure.
 
-2019-06-19  Nick Alcock <nick.alcock@oracle.com>
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-open.c (get_vbytes_common): Return the new slice size.
 	(ctf_bufopen): Flip the endianness of the CTF-section header copy.
 	Remember to copy in the CTF data when opening an uncompressed
 	foreign-endian CTF file.  Prune useless variable manipulation.
 
-2019-06-19  Nick Alcock <nick.alcock@oracle.com>
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-open.c (ctf_types): Fail when unidentified type kinds are
 	seen.
 
-2019-06-19  Nick Alcock <nick.alcock@oracle.com>
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-open.c (ctf_bufopen): Dump header offsets into the debugging
 	output.
 
-2019-06-19  Nick Alcock <nick.alcock@oracle.com>
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-subr.c (_PAGESIZE): Remove.
 	(ctf_data_alloc): Likewise.
@@ -127,7 +700,7 @@
 	(upgrade_types): Likewise.  Call ctf_alloc, not ctf_data_alloc.
 	(ctf_bufopen): Likewise.  No longer call ctf_data_protect.
 
-2019-06-19  Nick Alcock <nick.alcock@oracle.com>
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
 
 	* ctf-create.c (ctf_dtd_insert): Pass on error returns from
 	ctf_dynhash_insert.
diff --git a/gdb/testsuite/ChangeLog b/gdb/testsuite/ChangeLog
index 6cee4787e0..c4a760ef51 100644
--- a/gdb/testsuite/ChangeLog
+++ b/gdb/testsuite/ChangeLog
@@ -1,3 +1,1123 @@
+2020-01-16  Christian Biesinger  <cbiesinger@google.com>
+
+	* lib/gdb.exp: Fix spelling error (seperatelly).
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	PR symtab/12535:
+	* gdb.python/python.exp: Test decode_line with empty string
+	argument.
+
+2020-01-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* gdb.base/skip-inline.exp: Extend test.
+
+2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.dwarf2/dw2-bad-elf-other.S: New file.
+	* gdb.dwarf2/dw2-bad-elf.c: New file.
+	* gdb.dwarf2/dw2-bad-elf.exp: New file.
+
+2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/dwarf.exp (Dwarf::lines): Reset _line_saw_program and
+	_line_saw_file.
+
+2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/tuiterm.exp (Term::_check_box): Check some parts of the top
+	border.
+
+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.multi/multi-target.exp (setup): Factor out "info
+	connections" and "info inferiors" tests to ...
+	(test_info_inferiors): ... this new procedure.
+	(top level): Run new "info-inferiors" tests.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdb.server/bkpt-other-inferior.exp: New file.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdb.base/kill-detach-inferiors-cmd.exp: Adjust expected output
+	of "add-inferior".
+	* gdb.base/quit-live.exp: Likewise.
+	* gdb.base/remote-exec-file.exp: Likewise.
+	* gdb.guile/scm-progspace.exp: Likewise.
+	* gdb.linespec/linespec.exp: Likewise.
+	* gdb.mi/new-ui-mi-sync.exp: Likewise.
+	* gdb.mi/user-selected-context-sync.exp: Likewise.
+	* gdb.multi/multi-target.exp (setup): Add "info connection" and
+	"info inferiors" tests.
+	* gdb.multi/remove-inferiors.exp: Adjust expected output of
+	"add-inferior".
+	* gdb.multi/watchpoint-multi.exp: Likewise.
+	* gdb.python/py-inferior.exp: Likewise.
+	* gdb.server/extended-remote-restart.exp: Likewise.
+	* gdb.threads/fork-plus-threads.exp: Adjust expected output of
+	"info inferiors".
+	* gdb.threads/forking-threads-plus-breakpoint.exp: Likewise.
+	* gdb.trace/report.exp: Likewise.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdb.multi/multi-target.c: New file.
+	* gdb.multi/multi-target.exp: New file.
+	* lib/gdbserver-support.exp (gdb_target_cmd): Handle "Non-stop
+	mode requested, but remote does not support non-stop".
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdb.server/extended-remote-restart.exp (test_reload): Explicitly
+	disconnect before reconnecting.
+
+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+	    Pedro Alves	 <palves@redhat.com>
+
+	* gdb.server/connect-without-multi-process.exp: Also test
+	continuing to end.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdb.base/remote-exec-file.exp: New file.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdb.base/fork-running-state.exp (do_test): Adjust expected
+	output.
+	* gdb.threads/async.c: New.
+	* gdb.threads/async.exp: New.
+	* gdb.multi/tids-gid-reset.c: New.
+	* gdb.multi/tids-gid-reset.exp: New.
+
+2020-01-10  George Barrett  <bob@bob131.so>
+
+	* gdb.base/stap-probe.c (relocation_marker): Add dummy variable
+	to help in finding the image relocation offset.
+	* gdb.base/stap-probe.exp (stap_test): Accept arbitrary compile
+	options in arguments.
+	(stap_test_no_debuginfo): Likewise.
+	(stap-probe-nosem-noopt-pie, stap-probe-nosem-noopt-nopie): Add
+	test variants.
+	(stap_test): Add null semaphore relocation test.
+
+2020-01-10  George Barrett  <bob@bob131.so>
+
+	* gdb.base/stap-probe.c: Rename USE_PROBES to USE_SEMAPHORES.
+	* gdb.base/stap-probe.exp: Likewise.
+	(stap_test): Pass argument as an additional flag.
+	(stap_test_no_debuginfo): Likewise.
+	(stap_test): Check `info probes stap' output for semaphore
+	addresses if the test binary is supposed to have them.
+
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.tui/basic.exp: Add more scrolling tests.
+
+2020-01-09  Tom Tromey  <tom@tromey.com>
+
+	PR tui/18932:
+	* lib/tuiterm.exp (Term::wait_for): Rename from _accept.  Return a
+	meangingful value.
+	(Term::command, Term::resize): Update.
+	* gdb.tui/basic.exp: Add scrolling test.
+
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.tui/tui-layout-asm.exp: New file.
+
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/tuiterm.exp (Term::check_box_contents): New proc.
+
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/tuiterm.exp (Term::prepare_for_tui): New proc.
+	(Term::enter_tui): Use Term::prepare_for_tui.
+
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/tuiterm.exp (Term::dump_screen): Always dump the screen when
+	called.
+
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/skip.exp: Fix race condition in test.
+
+2020-01-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/backtrace.c: New file.
+	* gdb.base/backtrace.exp: New file.
+
+2020-01-05  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.tui/list.exp: Test 'focus next' after 'list main'.
+
+2020-01-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.base/style.exp: Test that warnings are styled.
+
+2019-12-29  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* gdb.base/line65535.exp: New file.
+	* gdb.base/line65535.c: New file.
+
+2019-12-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* lib/ada.exp (gnat_runtime_has_debug_info): New proc.
+	* lib/gnat_debug_info_test.adb: New file.
+	* gdb.ada/ptype_tagged_param.exp: Use
+	gnat_runtime_has_debug_info, expect a different output if
+	runtime does not have debug info.
+
+2019-12-20  Simon Marchi  <simon.marchi@efficios.com>
+
+	* lib/sym-info-cmds.exp (GDBInfoSymbols::check_no_entry): Add
+	(another) quote in test name.
+
+2019-12-20  Simon Marchi  <simon.marchi@efficios.com>
+
+	* lib/sym-info-cmds.exp (GDBInfoModuleSymbols::check_no_entry):
+	Add quote in test name.
+
+2019-12-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.cp/pass-by-ref.cc: Delete.  Generated in the output
+	directory instead.
+	* gdb.cp/pass-by-ref.exp: Extend with more cases.
+	* gdb.cp/pass-by-ref-2.cc: New file.
+	* gdb.cp/pass-by-ref-2.exp: New file.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* gdb.tui/list-before.exp: New file.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* gdb.tui/list.exp: Check for source on initial listing.
+
+2019-12-11  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.xml/tdesc-arch.exp (set_arch): Add "trans_mode" parameter.
+	Add crlf test.
+
+2019-12-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.base/default.exp: Update value of $_gdb_major.
+
+2019-12-17  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* gdb.base/skip.exp: Fix test failure observed with gcc-9.2.0.
+
+2019-12-17  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* gdb.base/skip.exp: Whitespace fix.
+
+2019-12-16  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* gdb.base/skip-inline.c: New file.
+	* gdb.base/skip-inline.exp: New file.
+
+2019-12-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.base/jit-reader.exp (jit_reader_test): Rename
+	jit_function_00 to jit_function_stack_mangle.
+	* gdb.base/jithost.c (jit_function_t): Rename to...
+	(jit_function_stack_mangle_t): ... this.
+	(jit_function_add_t): New typedef.
+	(jit_function_00_code): Rename to...
+	(jit_function_stack_mangle_code): ... this, make static.
+	(jit_function_add_code): New.
+	(main): Generate "add" function and call it.  Adjust to changes
+	in jithost_abi.
+	* gdb.base/jithost.h (struct jithost_abi_bounds): New.
+	(struct jithost_abi) <begin, end>: Remove fields.
+	<object, function_stack_mangle, function_add>: New fields.
+	* gdb.base/jitreader.c (struct reader_state) <code_begin,
+	code_end>: Remove fields.
+	<func_stack_mangle>: New field.
+	(read_debug_info): Adjust to renaming, create block for "add"
+	function.
+	(read_sp, unwind_frame, get_frame_id): Adjust to other changes.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* gdb.tui/resize.exp: Fix regexp.
+	* gdb.tui/regs.exp: Fix regexps.
+	* gdb.tui/main.exp: Fix regexp.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* gdb.tui/resize.exp: Update.
+	* gdb.tui/empty.exp (layouts): Update.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* gdb.tui/regs.exp: Update.
+	* gdb.tui/empty.exp (layouts): Update.
+	* gdb.tui/basic.exp: Update.
+	* lib/tuiterm.exp (_check_box): Don't check bottom border.
+
+2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.base/options.exp: Add -raw-values in the print completion list.
+	* gdb.python/py-prettyprint.exp: Add tests for -raw-values.
+
+2019-12-10  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.threads/omp-par-scope.c: New file.
+	* gdb/threads/omp-par-scope.exp: New file.
+
+2019-12-10  Kevin Buettner  <kevinb@redhat.com>
+
+	* lib/gdb.exp (support_nested_function_tests): New proc.
+
+2019-12-10  Kevin Buettner  <kevinb@redhat.com>
+
+	* lib/gdb.exp (gdb_compile_openmp): New proc.
+	(build_executable_from_specs): Add an "openmp" option.
+	(gdb_compile_pthreads): Add non-executable case.
+
+2019-12-10  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/unchecked_union.exp: New file.
+	* gdb.ada/unchecked_union/pck.adb: New file.
+	* gdb.ada/unchecked_union/pck.ads: New file.
+	* gdb.ada/unchecked_union/unchecked_union.adb: New file.
+	* gdb-utils.exp (string_to_regexp): Also quote "?".
+
+2019-12-10  George Barrett  <bob@bob131.so>
+
+	Test scripted probe breakpoints.
+	* gdb.guile/scm-breakpoint.c (main): Add probe point.
+	* gdb.python/py-breakpoint.c (main): Likewise.
+	* gdb.guile/scm-breakpoint.exp (test_bkpt_probe): Add probe
+	specifier test.
+	* gdb.python/py-breakpoint.exp (test_bkpt_probe): Likewise.
+
+2019-12-09  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.cp/rvalue-ref-overload.cc (g): New function that takes
+	an rvalue parameter.
+	* gdb.cp/rvalue-ref-overload.exp: Test calling it with an lvalue
+	parameter.
+
+2019-12-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.mi/mi-fortran-modules.exp: Add patterns to skip system
+	modules.
+
+2019-12-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/derived-type-striding.exp: KFAIL if we are using a
+	broken version of GCC.
+
+2019-12-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/info-modules.exp: Rewrite to make use of new
+	sym-info-cmds library.
+	* gdb.fortran/info-types.exp: Likewise.
+	* lib/sym-info-cmds.exp: New file.
+
+2019-12-08  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/imported-unit.exp: Fix inter-CU references.
+
+2019-12-07  Keith Seitz  <keiths@redhat.com>
+
+	* gdb.base/corefile-buildid-shlib-shr.c: New file.
+	* gdb.base/corefile-buildid-shlib.c: New file.
+	* gdb.base/corefile-buildid.c: New file.
+	* gdb.base/corefile-buildid.exp: New file.
+
+2019-12-06  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/varval.exp: Add decl before def test.
+
+2019-12-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.cp/rvalue-ref-overload.exp: Minor cleanup.
+
+2019-12-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.cp/rvalue-ref-overload.cc: Add a case that involves both
+	CV and reference conversion for overload resolution.
+	* gdb.cp/rvalue-ref-overload.exp: Test it.
+
+2019-12-06  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.threads/pthreads.exp: Test taas and tfaas without command.
+	* gdb.base/frameapply.exp: Test faas without command.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/gdb.exp (gdb_compile): Add -J compiler option when building
+	Fortran tests.
+	* gdb.mi/mi-fortran-modules.exp: Compile source files in correct
+	order.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/type-kinds.exp (test_cast_1_to_type_kind): Handle
+	casting to type with no kind specified.
+	(test_basic_parsing_of_type_kinds): Additional tests for types
+	with no kind specified, and add tests for single/double
+	precision/complex types.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.base/endianity.c (struct other) <x>: New field.
+	(main): Initialize it.
+	* gdb.base/endianity.exp: Update.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/scalar_storage/storage.adb: New file.
+	* gdb.ada/scalar_storage/pck.adb: New file.
+	* gdb.ada/scalar_storage/pck.ads: New file.
+	* gdb.ada/scalar_storage.exp: New file.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.base/endianity.c (struct otherendian) <f>: New field.
+	(main): Initialize it.
+	* gdb.base/endianity.exp: Update.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.mi/mi-sym-info.exp: Add tests for -max-results parameter.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.mi/mi-fortran-modules.exp: Add additional tests for
+	-symbol-info-module-functions and -symbol-info-module-variables.
+
+2019-12-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/array-slices.exp: Add test for dynamic strings.
+
+2019-12-01  Richard Bunt  <richard.bunt@arm.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/derived-type-striding.exp: New file.
+	* gdb.fortran/derived-type-striding.f90: New file.
+	* gdb.fortran/array-slices.exp: New file.
+	* gdb.fortran/array-slices.f90: New file.
+
+2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.base/define.exp: Test . in command names.
+	* gdb.base/setshow.exp: Update test, as . is now part of
+	command name.
+
+2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.base/define-prefix.exp: New file.
+
+2019-11-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/gdb.exp (skip_btrace_tests): Return 1 if the test fails to
+	compile.
+	(skip_btrace_pt_tests): Likewise.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/info-modules.exp: Compile source files in correct
+	order.
+
+2019-11-27  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.dwarf2/imported-unit.exp: New file.
+	* gdb.dwarf2/imported-unit.c: New file.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.mi/mi-fortran-modules-2.f90: New file.
+	* gdb.mi/mi-fortran-modules.exp: New file.
+	* gdb.mi/mi-fortran-modules.f90: New file.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.mi/mi-sym-info-1.c: New file.
+	* gdb.mi/mi-sym-info-2.c: New file.
+	* gdb.mi/mi-sym-info.exp: New file.
+
+2019-11-22  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/tasks.exp: Add -ada-task-info regression test.
+	* gdb.ada/tasks/foo.adb: Add another stopping location.
+
+2019-11-21  Peeter Joot  <peeter.joot@lzlabs.com>
+
+	* gdb.base/endianity.c: New test.
+	* gdb.base/endianity.exp: New file.
+
+2019-11-21  Lukas Durfina  <ldurfina@tachyum.com>
+
+	* gdb.arch/amd64-eval.exp: Skip test if target is not x86-64.
+
+2019-11-21  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24956
+	* gdb.base/ui-redirect.exp: Test output of user-defined command.
+
+2019-11-20  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* gdb.python/py-progspace.exp: Add missing parentheses on some
+	'print' commands.
+
+2019-11-19  Tom Tromey  <tom@tromey.com>
+
+	* gdb.tui/winheight.exp: New file.
+
+2019-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/ctf-whatis.c: Delete.
+	* gdb.base/ctf-whatis.exp: Delete.
+	* gdb.base/whatis.exp: Rewrite to compile as both dwarf and ctf.
+
+2019-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/ctf-cvexpr.exp: Delete.
+	* gdb.base/cvexpr.exp: Rewrite to compile as both dwarf and ctf.
+
+2019-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/ctf-constvars.exp: Skip test if CTF is not supported in
+	the compiler.  Clean up header comment a little.
+	* gdb.base/ctf-ptype.exp: Likewise.
+	* gdb.base/ctf-whatis.exp: Likewise.
+	* lib/gdb.exp (skip_ctf_tests): New proc.
+
+2019-11-18  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	https://bugzilla.redhat.com/show_bug.cgi?id=1765117
+	* gdb.tui/corefile-run.exp: New file.
+
+2019-11-14  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.base/gdbvars.exp (test_convenience_variables): Add
+	regression tests.
+
+2019-11-12  Tom Tromey  <tom@tromey.com>
+
+	* lib/tuiterm.exp (_accept): Add wait_for parameter.  Check output
+	after any command.  Expect prompt after WAIT_FOR is seen.
+	(enter_tui): Enable resize messages.
+	(command): Expect command in output.
+	(get_line): Avoid error when cursor appears to be off-screen.
+	(dump_screen): Include screen size in title.
+	(_do_resize): New proc, from "resize".
+	(resize): Rewrite.  Do resize in two steps.
+	* gdb.tui/empty.exp (layouts): Fix entries.
+	(check_boxes): Remove xfail.
+	(check_text): Dump screen on failure.
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-symbol.exp: Add test for
+	gdb.lookup_static_symbols.
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-symbol.c: Declare and call function from new
+	py-symbol-2.c file.
+	* gdb.python/py-symbol.exp: Compile both source files, and add new
+	tests for gdb.lookup_static_symbol.
+	* gdb.python/py-symbol-2.c: New file.
+
+2019-11-02  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/advance.exp: Drop superfluous 3rd argument to gdb_test.
+	* gdb.base/anon.exp: Same.
+	* gdb.base/auto-connect-native-target.exp: Same.
+	* gdb.base/call-ar-st.exp: Same.
+	* gdb.base/catch-syscall.exp: Same.
+	* gdb.base/commands.exp: Same.
+	* gdb.base/default.exp: Same.
+	* gdb.base/display.exp: Same.
+	* gdb.base/float.exp: Same.
+	* gdb.base/foll-fork.exp: Same.
+	* gdb.base/help.exp: Same.
+	* gdb.base/info-macros.exp: Same.
+	* gdb.base/info-proc.exp: Same.
+	* gdb.base/info-target.exp: Same.
+	* gdb.base/long_long.exp: Same.
+	* gdb.base/macscp.exp: Same.
+	* gdb.base/memattr.exp: Same.
+	* gdb.base/nofield.exp: Same.
+	* gdb.base/pointers.exp: Same.
+	* gdb.base/printcmds.exp: Same.
+	* gdb.base/ptype.exp: Same.
+	* gdb.base/restore.exp: Same.
+	* gdb.base/return.exp: Same.
+	* gdb.base/scope.exp: Same.
+	* gdb.base/set-noassign.exp: Same.
+	* gdb.base/setshow.exp: Same.
+	* gdb.base/shlib-call.exp: Same.
+	* gdb.base/signals.exp: Same.
+	* gdb.base/sigstep.exp: Same.
+	* gdb.base/skip.exp: Same.
+	* gdb.base/solib-symbol.exp: Same.
+	* gdb.base/stap-probe.exp: Same.
+	* gdb.base/step-line.exp: Same.
+	* gdb.base/step-test.exp: Same.
+	* gdb.base/style.exp: Same.
+	* gdb.base/varargs.exp: Same.
+	* gdb.base/vla-datatypes.exp: Same.
+	* gdb.base/vla-ptr.exp: Same.
+	* gdb.base/vla-sideeffect.exp: Same.
+	* gdb.base/volatile.exp: Same.
+	* gdb.base/watch-cond-infcall.exp: Same.
+	* gdb.base/watchpoint.exp: Same.
+
+2019-11-02  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.cp/anon-union.exp: Drop superfluous 3rd argument to gdb_test.
+	* gdb.cp/cpexprs.exp: Same.
+	* gdb.cp/except-multi-location.exp: Same.
+	* gdb.cp/exceptprint.exp: Same.
+	* gdb.cp/gdb2384.exp: Same.
+	* gdb.cp/inherit.exp: Same.
+	* gdb.cp/m-static.exp: Same.
+	* gdb.cp/meth-typedefs.exp: Same.
+	* gdb.cp/misc.exp: Same.
+	* gdb.cp/namespace.exp: Same.
+	* gdb.cp/non-trivial-retval.exp: Same.
+	* gdb.cp/overload.exp: Same.
+	* gdb.cp/pr17132.exp: Same.
+	* gdb.cp/re-set-overloaded.exp: Same.
+	* gdb.cp/rvalue-ref-types.exp: Same.
+	* gdb.cp/templates.exp: Same.
+
+2019-11-01  Luis Machado  <luis.machado@linaro.org>
+
+	PR gdb/25124
+
+	* gdb.arch/pr25124.S: New file.
+	* gdb.arch/pr25124.exp: New file.
+
+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/info-modules.exp: Update expected results, and add
+	additional tests for 'info module functinos', and 'info module
+	variables'.
+	* gdb.fortran/info-types.exp: Update expected results.
+	* gdb.fortran/info-types.f90: Extend testcase with additional
+	module variables and functions.
+
+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/info-modules.exp: New file.
+	* gdb.fortran/info-types.exp: Build with new file.
+	* gdb.fortran/info-types.f90: Include and use new module.
+	* gdb.fortran/info-types-2.f90: New file.
+
+2019-10-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.base/setshow.exp: Test $_gdb_setting and $_gdb_setting_str.
+	* gdb.base/settings.exp: Test all settings types using
+	$_gdb_maint_setting and $_gdb_maint_setting_str in proc_show_setting,
+	that now verifies that the value of "maint show" is the same as
+	returned by the settings functions.  Test the type of the
+	maintenance settings.
+	* gdb.base/default.exp: Update show_conv_list.
+
+2019-10-31  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.arch/amd64-disp-step-avx.exp: Drop superfluous 3rd argument to
+	gdb_test.
+	* gdb.arch/amd64-disp-step.exp: Same.
+	* gdb.asm/asm-source.exp: Same.
+	* gdb.btrace/buffer-size.exp: Same.
+	* gdb.btrace/cpu.exp: Same.
+	* gdb.btrace/enable.exp: Same.
+	* gdb.dwarf2/count.exp: Same.
+	* gdb.dwarf2/dw2-ranges-func.exp: Same.
+	* gdb.dwarf2/dw2-ranges-psym.exp: Same.
+	* gdb.fortran/vla-datatypes.exp: Same.
+	* gdb.fortran/vla-history.exp: Same.
+	* gdb.fortran/vla-ptype.exp: Same.
+	* gdb.fortran/vla-value.exp: Same.
+	* gdb.fortran/whatis_type.exp: Same.
+	* gdb.guile/guile.exp: Same.
+	* gdb.multi/tids.exp: Same.
+	* gdb.python/py-finish-breakpoint.exp: Same.
+	* gdb.python/py-framefilter.exp: Same.
+	* gdb.python/py-pp-registration.exp: Same.
+	* gdb.python/py-xmethods.exp: Same.
+	* gdb.python/python.exp: Same.
+	* gdb.server/connect-with-no-symbol-file.exp: Same.
+	* gdb.server/no-thread-db.exp: Same.
+	* gdb.server/run-without-local-binary.exp: Same.
+	* gdb.stabs/weird.exp: Same.
+	* gdb.threads/attach-many-short-lived-threads.exp: Same.
+	* gdb.threads/thread-find.exp: Same.
+	* gdb.threads/tls-shared.exp: Same.
+	* gdb.threads/tls.exp: Same.
+	* gdb.threads/wp-replication.exp: Same.
+	* gdb.trace/ax.exp: Same.
+	* lib/gdb.exp (gdb_test_exact, help_test_raw): Same.
+
+2019-10-31  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.ada/array_bounds.exp: Drop superfluous 3rd argument to gdb_test.
+	* gdb.ada/array_subscript_addr.exp: Same.
+	* gdb.ada/arrayidx.exp: Same.
+	* gdb.ada/arrayparam.exp: Same.
+	* gdb.ada/arrayptr.exp: Same.
+	* gdb.ada/boolean_expr.exp: Same.
+	* gdb.ada/call_pn.exp: Same.
+	* gdb.ada/complete.exp: Same.
+	* gdb.ada/fixed_cmp.exp: Same.
+	* gdb.ada/fun_addr.exp: Same.
+	* gdb.ada/funcall_param.exp: Same.
+	* gdb.ada/interface.exp: Same.
+	* gdb.ada/mod_from_name.exp: Same.
+	* gdb.ada/null_array.exp: Same.
+	* gdb.ada/packed_array.exp: Same.
+	* gdb.ada/packed_tagged.exp: Same.
+	* gdb.ada/print_chars.exp: Same.
+	* gdb.ada/print_pc.exp: Same.
+	* gdb.ada/ptype_arith_binop.exp: Same.
+	* gdb.ada/ptype_field.exp: Same.
+	* gdb.ada/ptype_tagged_param.exp: Same.
+	* gdb.ada/rec_return.exp: Same.
+	* gdb.ada/ref_tick_size.exp: Same.
+	* gdb.ada/str_ref_cmp.exp: Same.
+	* gdb.ada/taft_type.exp: Same.
+	* gdb.ada/tagged.exp: Same.
+	* gdb.ada/type_coercion.exp: Same.
+	* gdb.ada/uninitialized_vars.exp: Same.
+
+2019-10-30  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_test_multiple): Handle -early pattern flag.
+
+2019-10-26  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/bigcore.c: Fix typos in comments.
+	* gdb.base/ctf-ptype.c: Same.
+	* gdb.base/long_long.c: Same.
+	* gdb.dwarf2/dw2-op-out-param.S: Same.
+	* gdb.python/py-evthreads.c: Same.
+	* gdb.reverse/i387-stack-reverse.c: Same.
+	* gdb.trace/tfile.c: Same.
+	* lib/compiler.c: Same.
+	* lib/compiler.cc: Same.
+
+2019-10-25  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.reverse/sigall-precsave.exp: Use -wrap and $gdb_test_name in
+	gdb_test_multiple calls.
+	* gdb.reverse/sigall-reverse.exp: Same.
+	* gdb.reverse/solib-precsave.exp: Same.
+	* gdb.reverse/solib-reverse.exp: Same.
+	* gdb.reverse/until-precsave.exp: Same.
+	* gdb.reverse/until-reverse.exp: Same.
+
+2019-10-24  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_test_multiple): Add -wrap pattern flag.
+	* gdb.reverse/step-precsave.exp: Rewrite gdb_test_multiple containing
+	kfail using -wrap pattern flag and convenience variable
+	gdb_test_name.
+
+2019-10-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-progspace.exp: Add tests for the
+	Progspace.block_for_pc method.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* aclocal.m4: Use m4_include, not sinclude.
+
+2019-10-21  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/infcall-nested-structs.c: Add
+	__attribute__((noinline,noclone)) to all functions.
+	(call_all): Add missing variable initialization.  Simplify return value.
+	(breakpt): Increment volatile variable, to prevent call from being
+	optimized out.
+	* gdb.base/infcall-nested-structs.exp: Compile with -O2.
+
+2019-10-17  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.fortran/module.exp: Allow info variables to print info for files
+	other than module.f90.
+
+2019-10-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/module.exp: Extend with 'info variables' test.
+
+2019-10-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* boards/cc-with-tweaks.exp: Setup F90_FOR_TARGET and
+	F77_FOR_TARGET.
+
+2019-10-16  Tom de Vries  <tdevries@suse.de>
+
+	PR tdep/25096
+	* gdb.base/infcall-nested-structs.exp: Remove PR25096 KFAILs.
+
+2019-10-16  Tom de Vries  <tdevries@suse.de>
+
+	PR tdep/24104
+	* gdb.base/infcall-nested-structs.exp: Remove XFAIL for PR tdep/24104.
+	Add KFAIL for PR tdep/25096.
+
+2019-10-16  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/25059
+	* gdb.cp/local-static.exp (do_test): Add xfails for gcc PR debug/55541.
+
+2019-10-16  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/jit-reader.exp: Allow non-pointer registers to be printed
+	as signed.
+
+2019-10-14  Simon Marchi <simon.marchi@polymtl.ca>
+
+	* gdb.mi/list-thread-groups-available.exp: Read entries one by
+	one instead of increasing timeout.
+
+2019-10-13  Tom de Vries  <tdevries@suse.de>
+
+	PR record/25038
+	* gdb.reverse/sigall-precsave.exp: Add PR record/25038 KFAIL.
+	* gdb.reverse/sigall-reverse.exp: Same.
+	* gdb.reverse/solib-precsave.exp: Same.
+	* gdb.reverse/solib-reverse.exp: Same.
+	* gdb.reverse/step-precsave.exp: Same.
+	* gdb.reverse/until-precsave.exp: Same.
+	* gdb.reverse/until-reverse.exp: Same.
+	* lib/gdb.exp (gdb_continue_to_breakpoint): Same.
+
+2019-10-10  Andreas Arnez  <arnez@linux.ibm.com>
+
+	* gdb.base/infcall-nested-structs.c (cmp_struct_02_01)
+	(cmp_struct_02_02, cmp_struct_04_01, cmp_struct_04_02)
+	(cmp_struct_05_01, cmp_struct_static_02_01)
+	(cmp_struct_static_04_01, cmp_struct_static_06_01): Fix redundant
+	comparisons.
+
+2019-10-10  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/24888
+	* lib/ada.exp (target_compile_ada_from_dir): Route -pie/-no-pie to
+	gnatlink.
+
+2019-10-09  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/25048
+	* gdb.rust/simple.exp: Add xfails for incorrect DWARF.
+
+2019-10-07  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.ada/catch_ex_std.exp: Handle being unabled to catch Ada
+	exceptions due to missing debug information.
+
+2019-10-07  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/default.exp: Expect _gdb_major/_gdb_minor to be 9.1.
+
+2019-10-07  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/gdb.exp (gdb_test_multiple): Add gdb_test_name mechanism.
+	* gdb.base/annota1.exp: Update to use gdb_test_name.
+
+2019-10-07  Weimin Pan  <weimin.pan@oracle.com>
+
+	* gdb.base/ctf-whatis.exp: New file.
+	* gdb.base/ctf-whatis.c: New file.
+	* gdb.base/ctf-ptype.exp: New file.
+	* gdb.base/ctf-ptype.c: New file.
+	* gdb.base/ctf-constvars.exp: New file.
+	* gdb.base/ctf-constvars.c: New file.
+	* gdb.base/ctf-cvexpr.exp: New file.
+
+2019-10-04  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.cp/local-static.c (main): Move declaration of int i out of the
+	for loop.
+
+2019-10-03  Tom Tromey  <tom@tromey.com>
+
+	PR rust/24976:
+	* gdb.rust/simple.rs (Union2): New type.
+	(main): Use Union2.
+	* gdb.rust/simple.exp: Add test.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/nested-funcs-2.exp: Run tests with and without the
+	nested function prefix.
+
+2019-10-03  Bernhard Heckel  <bernhard.heckel@intel.com>
+	    Richard Bunt  <richard.bunt@arm.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/nested-funcs.exp: Tests for placing breakpoints on
+	nested functions.
+	* gdb.fortran/nested-funcs.f90: Update expected results.
+	* gdb.fortran/nested-funcs-2.exp: New file.
+	* gdb.fortran/nested-funcs-2.f90: New file.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-parameter.exp: Make test names unique.
+	* gdb.python/py-template.exp: Likewise.
+	* gdb.python/py-value.exp: Likewise.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/break-interp.exp: Reduce test name duplication.
+	* gdb.base/call-sc.exp: Likewise.
+	* gdb.base/callfuncs.exp: Likewise.
+	* gdb.base/charset.exp: Likewise.
+	* gdb.base/dump.exp: Likewise.
+	* gdb.base/ena-dis-br.exp: Likewise.
+	* gdb.base/relational.exp: Likewise.
+	* gdb.base/step-over-syscall.exp: Likewise.
+	* gdb.base/structs.exp: Likewise.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.linespec/explicit.exp: Make test names unique.
+	* gdb.linespec/ls-errs.exp: Likewise.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.reverse/break-precsave.exp: Make test names unique.
+	* gdb.reverse/break-reverse.exp: Likewise.
+	* gdb.reverse/finish-precsave.exp: Likewise.
+	* gdb.reverse/finish-reverse.exp: Likewise.
+	* gdb.reverse/machinestate-precsave.exp: Likewise.
+	* gdb.reverse/machinestate.exp: Likewise.
+	* gdb.reverse/readv-reverse.exp: Likewise.
+	* gdb.reverse/recvmsg-reverse.exp: Likewise.
+	* gdb.reverse/sigall-precsave.exp: Likewise.
+	* gdb.reverse/sigall-reverse.exp: Likewise.
+	* gdb.reverse/step-indirect-call-thunk.exp: Likewise.
+	* gdb.reverse/watch-precsave.exp: Likewise.
+	* gdb.reverse/watch-reverse.exp: Likewise.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.threads/stop-with-handle.c: New file.
+	* gdb.threads/stop-with-handle.exp: New file.
+
+2019-10-03  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/25059
+	* gdb.base/list-missing-source.exp: Allowing the "Compilation
+	directory" line to be missing.
+
+2019-10-03  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/25059
+	* gdb.base/info-types.exp: Make the presence of the 'unsigned int'
+	type optional.
+
+2019-10-02  Andreas Arnez  <arnez@linux.ibm.com>
+
+	* gdb.python/py-format-string.c (string.h): New include.
+	(main): Fill a_struct_with_union.the_union.an_int with bytes of
+	the same value, for endianness-independence.
+	* gdb.python/py-format-string.exp (default_regexp_dict)
+	(test_pretty_structs, test_format): Adjust expected output to the
+	changed initialization.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/catch_ex_std.exp: Add $_ada_exception test.
+
+2019-10-02  Pedro Alves  <palves@redhat.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/print-file-var-lib1.c: Include <stdio.h> and
+	"print-file-var.h".
+	(this_version_id) Use ATTRIBUTE_VISIBILITY.
+	(get_version_1): Print this_version_id and its address.
+	Add extern "C" wrappers around interface functions.
+	* gdb.base/print-file-var-lib2.c: Include <stdio.h> and
+	"print-file-var.h".
+	(this_version_id) Use ATTRIBUTE_VISIBILITY.
+	(get_version_2): Print this_version_id and its address.
+	Add extern "C" wrappers around interface functions.
+	* gdb.base/print-file-var-main.c: Include <dlfcn.h>, <assert.h>,
+	<stddef.h> and "print-file-var.h".
+	Add extern "C" wrappers around interface functions.
+	[VERSION_ID_MAIN] (this_version_id): Define.
+	(main): Define v0.  Use dlopen if SHLIB_NAME is defined.
+	* gdb.base/print-file-var.h: Add some #defines to simplify setting
+	up extern "C" blocks.
+	* gdb.base/print-file-var.exp (test): New, factored out from top
+	level.
+	(top level): Test all combinations of attribute hidden or not,
+	dlopen or not, and this_version_id symbol in main file or not.
+	Compile tests as both C++ and C, make test names unique.
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* gdb.base/style.exp: Test "show logging filename".
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* lib/gdb-utils.exp (style): Handle "metadata" argument.
+	* gdb.base/style.exp: Add metadata style test.
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* gdb.base/style.exp: Test "pwd".
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* gdb.base/style.exp: Update tests.
+
+2019-10-01  Andreas Arnez  <arnez@linux.ibm.com>
+
+	* gdb.base/pretty-print.c (struct s1_t): Change fields 'three' and
+	'six' to unsigned.
+	(s1): Initialize fields 'four' and 'six' instead of 'three' and
+	'five'.  Use an all-ones bit pattern for each.
+	* gdb.base/pretty-print.exp: Adjust expected output of "print s1"
+	to its changed values.
+
+2019-09-30  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.rust/traits.rs: Disable all warnings.
+
+2019-09-29  Tom de Vries  <tdevries@suse.de>
+
+        * gdb.dwarf2/gdb-index.exp: Handle new location of .dwz file.
+
+2019-09-29  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/gdb-index.exp: Use with_test_prefix for second objcopy.
+
+2019-09-27  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.reverse/step-precsave.exp: Add missing $gdb_prompt in regexps.
+
+2019-09-27  Tom de Vries  <tdevries@suse.de>
+
+	PR record/23188
+	* gdb.reverse/step-precsave.exp: Add kfail for PR record/23188.
+
+2019-09-26  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/py_taft.exp: New file.
+	* gdb.ada/py_taft/main.adb: New file.
+	* gdb.ada/py_taft/pkg.adb: New file.
+	* gdb.ada/py_taft/pkg.ads: New file.
+
+2019-09-24  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24598
+	* gdb.arch/amd64-init-x87-values.exp: Add xfail.
+
+2019-09-22  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/restore.exp: Allow register variables to be optimized out at
+	-O0.
+
+2019-09-20  Ulrich Weigand  <uweigand@de.ibm.com>
+
+	* gdb.arch/spu-info.exp: Remove file.
+	* gdb.arch/spu-info.c: Remove file.
+	* gdb.arch/spu-ls.exp: Remove file.
+	* gdb.arch/spu-ls.c: Remove file.
+
+	* gdb.asm/asm-source.exp: Remove support for spu*-*-*.
+	* gdb.asm/spu.inc: Remove file.
+
+	* gdb.base/dump.exp: Remove support for spu*-*-*.
+	* gdb.base/stack-checking.exp: Likewise.
+	* gdb.base/overlays.exp: Likewise.
+	* gdb.base/ovlymgr.c: Likewise.
+	* gdb.base/spu.ld: Remove file.
+
+	* gdb.cp/bs15503.exp: Remove support for spu*-*-*.
+	* gdb.cp/cpexprs.exp: Likewise.
+	* gdb.cp/exception.exp: Likewise.
+	* gdb.cp/gdb2495.exp: Likewise.
+	* gdb.cp/mb-templates.exp: Likewise.
+	* gdb.cp/pr9167.exp: Likewise.
+	* gdb.cp/userdef.exp: Likewise.
+
+	* gdb.xml/tdesc-regs.exp: Remove support for spu*-*-*.
+
+	* gdb.cell: Remove directory.
+	* lib/cell.exp: Remove file.
+
+2019-09-19  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_test): Eliminate "^FOOBAR$" pattern.
+
+2019-09-19  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdbserver-support.exp (gdb_target_cmd): Fix argument passing.
+
+2019-09-19  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdbserver-support.exp (gdb_target_cmd_ext): Return 2 (meaning
+	UNSUPPORTED) for 'Network is unreachable' message.  Factor out of ...
+	(gdb_target_cmd): ... here.
+	* gdb.server/server-connect.exp: Use gdb_target_cmd_ext, handle return
+	value 2.
+
+2019-09-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/source-dir.exp: Avoid having directory names in test
+	names.
+
+2019-09-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/source-dir.exp: Add extra test for mapped compilation
+	directory.
+
+2019-09-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/list-missing-source.exp: New file.
+
+2019-09-14  Tom de Vries  <tdevries@suse.de>
+
+	PR teststuite/24599
+	* gdb.ada/rename_subscript_param.exp: Require gnatmake 8.
+	* lib/ada.exp (gnatmake_version_at_least): New proc.
+
+2019-09-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/maint.exp: Use exec_has_index_section.
+
+2019-09-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/maint.exp: Add test for 'maint info sections'.
+
+2019-09-12  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/store.exp: Allow register variables to be optimized out at
+	-O0.
+
+2019-09-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.ada/rdv_wait.exp: Update to new task names.
+	* gdb.base/task_switch_in_core.exp: Likewise.
+	* gdb.base/info_sources_base.c: Likewise.
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* boards/cc-with-tweaks.exp: Set GNATMAKE_FOR_TARGET.
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/dgopt.exp: New file.
+	* gdb.ada/dgopt/x.adb: New file.
+
 2019-09-08  Tom Tromey  <tom@tromey.com>
 
 	* gdb.tui/resize.exp: Remove setup_xfail.
@@ -587,6 +1707,7 @@
 
 2019-07-08  Alan Hayward  <alan.hayward@arm.com>
 
+	PR breakpoints/25011
 	* gdb.base/break-idempotent.exp: Test both PIE and non PIE.
 
 2019-07-04  Pedro Alves  <palves@redhat.com>
@@ -665,6 +1786,7 @@
 
 2019-06-27  Tom Tromey  <tromey@adacore.com>
 
+	PR c++/20020:
 	* gdb.cp/constexpr-field.exp: Use setup_xfail.
 
 2019-06-26  Tom de Vries  <tdevries@suse.de>
@@ -1331,6 +2453,10 @@
 	* gdb.cp/meth-typedefs.exp: Add new tests for `test_incomplete'
 	functions.
 
+2019-04-25  Ali Tamur  <tamur@google.com>
+
+	* lib/dwarf.exp (_handle_DW_FORM): Add DW_FORM_strx.
+
 2019-04-25  Sergio Durigan Junior  <sergiodj@redhat.com>
 
 	PR corefiles/11608
@@ -1534,6 +2660,7 @@
 
 2019-03-22  Alan Hayward  <alan.hayward@arm.com>
 
+	PR testsuite/25016
 	* README: Add pie options.
 	* gdb.base/break-interp.exp: Ensure pie is disabled.
 	* gdb.base/dump.exp: Likewise.
@@ -3354,6 +4481,13 @@
 	PR gdb/23104
 	* gdb.base/info-shared.exp: Replace libs=-ldl with shlib_load.
 
+2018-04-22  Rajendra SY  <rajendra.sy@gmail.com>
+
+	PR gdb/23095
+	* gdb.base/break-probes.exp: Pass shlib_load to
+	prepare_for_testing.  Set normal_bp to r_debug_state if target is
+	bsd.
+
 2018-04-19  Richard Bunt  <richard.bunt@arm.com>
 
 	* gdb.threads/multiple-successive-infcall.c: New test.
@@ -17064,6 +18198,6 @@ For older changes see ChangeLog-1993-2013.
 ;; version-control: never
 ;; End:
 
-    Copyright 2014-2019 Free Software Foundation, Inc.
+    Copyright 2014-2020 Free Software Foundation, Inc.
   Copying and distribution of this file, with or without modification,
   are permitted provided the copyright notice and this notice are preserved.
diff --git a/gdb/doc/ChangeLog b/gdb/doc/ChangeLog
index a5328259e0..4fc02ea80c 100644
--- a/gdb/doc/ChangeLog
+++ b/gdb/doc/ChangeLog
@@ -1,3 +1,192 @@
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdb.texinfo (Starting): Say "current inferior not connected"
+	instead of "GDB not connected".
+	(Inferiors and Programs): Rename node to ...
+	(Inferiors Connections and Programs): ... this.  Update all
+	references.  Talk about multiple target connections.  Update "info
+	inferiors" info to mention the connections column.  Describe "info
+	connections".  Document "add-inferior -no-connection".
+	* guile.texi, python.texi: Update cross references.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.texinfo, refcard.tex: Update copyright year range.
+
+2019-12-14  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python.texi (Symbols In Python): Remove duplicate description of
+	gdb.lookup_global_symbol.
+
+2019-12-11  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.texinfo (Writing JIT Debug Info Readers): Fix typo.
+
+2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.texinfo (Command Options): Use -p and -pretty in the example,
+	as -r is ambiguous.  Update the print - TAB TAB completion result.
+	(Data): Document new option -raw-values.  Use -p and -pretty in the
+	 example, as -r is ambiguous.
+	(Print Settings): Document set print raw values.
+	(Pretty-Printer Commands): Document interaction between enabled
+	pretty printers and -raw-values/-raw-frame-arguments.
+
+2019-12-10  Tom Tromey  <tom@tromey.com>
+
+	* python.texi (gdb.prompt): Use correct quotes in example.
+	Shorten sample text.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* doc/gdb.texinfo (GDB/MI Symbol Query): Add documentation of
+	-max-results to some -symbol-info-* commands.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* doc/gdb.texinfo (GDB/MI Symbol Query): Document new MI command
+	-symbol-info-module-functions and -symbol-info-module-variables.
+
+2019-12-01  Tom Tromey  <tom@tromey.com>
+
+	* gdb.texinfo (TUI Configuration): Mention TUI border styles.
+	(Output Styling): Document new settings.
+
+2019-12-01  Tom Tromey  <tom@tromey.com>
+
+	* gdb.texinfo (TUI Configuration): Document new setting.
+
+2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.texinfo (Define): Indicate that user-defined prefix can
+	be used in 'define' command.  Document 'define-prefix' command.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* doc/gdb.texinfo (GDB/MI Symbol Query): Document new MI command
+	-symbol-info-modules.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* doc/gdb.texinfo (GDB/MI Symbol Query): Document new MI command
+	-symbol-info-functions, -symbol-info-types, and
+	-symbol-info-variables.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* gdb.texinfo (Maintenance Commands): Document new maint
+	commands.
+
+2019-11-25  Luis Machado  <luis.machado@linaro.org>
+
+	* gdb.texinfo (Debugging Output): Document set debug
+	remote-packet-max-chars.
+
+2019-11-14  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.texinfo: Fix typos.
+	* python.texi: Same.
+	* stabs.texinfo: Same.
+
+2019-11-12  Tom Tromey  <tom@tromey.com>
+
+	* gdb.texinfo (Maintenance Commands): Document new command.
+
+2019-11-11  Tom Tromey  <tom@tromey.com>
+
+	* gdb.texinfo (TUI Keys): Document readline function names.
+
+2019-11-11  Tom Tromey  <tom@tromey.com>
+
+	* gdb.texinfo (Editing): Document operate-and-get-next.
+
+2019-11-11  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.texinfo (Host I/O Packets): Fix typo in "vFile:pwrite".
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python.texi (Symbols In Python): Add documentation for
+	gdb.lookup_static_symbols.
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python.texi (Symbols In Python): Extend documentation for
+	gdb.lookup_static_symbol.
+
+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (Symbols): Document new 'info module variables' and
+	'info module functions' commands.
+
+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (Symbols): Document new 'info modules' command.
+
+2019-10-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.texinfo (Convenience Funs): Document the new
+	$_gdb_setting_str, $_gdb_maint_setting and $_gdb_maint_setting_str
+	convenience functions.
+
+2019-10-29  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Also set SYSTEM_GDBINIT_DIR for the info manual
+	generation.
+	* gdb.texinfo (many sections): Document new --with-system-gdbinit-dir
+	option.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	* Makefile.in (READLINE_DIR): Update.
+
+2019-10-23  Christian Biesinger  <cbiesinger@google.com>
+
+	* python.texi (Threads In Python): Add a note for how to get the
+	list of threads.
+
+2019-10-07  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.texinfo: Fix typo.
+	* guile.texi: Same.
+	* python.texi: Same.
+
+2019-10-03  Bernhard Heckel  <bernhard.heckel@intel.com>
+
+	* doc/gdb.texinfo (Fortran Operators): Describe scope operator.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.texinfo (Set Catchpoints, Convenience Vars): Document
+	$_ada_exception.
+
+2019-09-20  Ulrich Weigand  <uweigand@de.ibm.com>
+
+	* doc/gdb.texinfo (Remote Configuration): Remove documentation for
+	qXfer:spu:read and qXfer:spu:write.
+	(General Query Packets): Likewise.
+	(Cell Broadband Engine SPU architecture): Remove subsection.
+
+2019-09-18  Tom Tromey  <tom@tromey.com>
+
+	* gdb.texinfo (Editing): Document readline application name.
+	(TUI Single Key Mode): Document TUI SingleKey keymap name.
+
+2019-09-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (Source Path): Additional text to better describe
+	how the source path directory list is used when searching for
+	source files.
+
+2019-09-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.texinfo (Ada Tasks): Tell the task name is printed, update
+	examples.
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.texinfo (Index Files): Update Ada text.
+
 2019-08-27  Andrew Burgess  <andrew.burgess@embecosm.com>
 
 	* gdb.texinfo (Symbols): Add information about the -n flag to
@@ -701,6 +890,10 @@
 	* gdb.texinfo (Choosing Target Byte Order): Document endianness
 	selection details with the `set endian auto' mode.
 
+2018-05-31  Alan Hayward  <alan.hayward@arm.com>
+
+	* gdb.texinfo: Describe SVE feature.
+
 2018-05-04  Tom Tromey  <tom@tromey.com>
 
 	PR python/22731:
@@ -1104,6 +1297,18 @@
 	(GDB/MI Async Records): Update documentation of library-loaded with new
 	field.
 
+2017-03-20  Artemiy Volkov  <artemiyv@acm.org>
+
+	PR gdb/14441
+	* doc/gdb.texinfo (C Plus Plus Expressions): Mention that GDB
+	supports both lvalue and rvalue references.
+
+2017-03-20  Artemiy Volkov  <artemiyv@acm.org>
+
+	PR gdb/14441
+	* python.texi (Types in Python): Add TYPE_CODE_RVALUE_REF to
+	table of constants.
+
 2017-03-16  Doug Evans  <dje@google.com>
 
 	* guile.texi (Lazy Strings In Guile): Mention arrays.
@@ -1119,6 +1324,11 @@
 	* Memory Protection Extensions: Add information about inferior
 	calls.
 
+2017-02-28  Peter Bergner  <bergner@vnet.ibm.com>
+
+	* gdb.texinfo: Document new set/show disassembler-options
+	commands.
+
 2017-02-20  Jan Kratochvil  <jan.kratochvil@redhat.com>
 
 	* gdb.texinfo (Print Settings, Tail Call Frames): Rename DW_OP_GNU_*,
@@ -1752,6 +1962,15 @@
 	* gdb.texinfo (Selection): Update documentation for 'frame'
 	command.
 
+2015-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (TUI): Restructure documentation on TUI layout and
+	focus commands.
+
+2015-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (TUI): Add comma after @xref.
+
 2015-07-02  Markus Metzger  <markus.t.metzger@intel.com>
 
 	* gdb.texinfo (Maintenance Commands): Document "maint btrace"
@@ -2152,6 +2371,11 @@
 
 	* python.texi (Objfiles In Python): Document Objfile.build_id.
 
+2014-12-02  Nick Bull  <nicholaspbull@gmail.com>
+
+	* observer.texi (inferior_call_pre, inferior_call_post)
+	(memory_changed, register_changed): New observers.
+
 2014-12-02  Nick Bull  <nicholaspbull@gmail.com>
 
 	* python.texi (Events In Python): Document new events
@@ -2273,6 +2497,10 @@
 	* gdb.texinfo (Signaling) <signal command>: Explain what happens
 	with multi-threaded programs.
 
+2014-07-19  Ajit Agarwal  <ajitkum@xilinx.com>
+
+	* gdb.texinfo (MicroBlaze Features): Added.
+
 2014-06-27  Yao Qi  <yao@codesourcery.com>
 
 	* gdb.texinfo (Maintenance Commands): Update the output of
@@ -3472,6 +3700,12 @@
 
 	* gdb.texinfo (GDB/MI Catchpoint Commands): New section.
 
+2012-12-12  Paul Koning  <paul_koning@dell.com>
+
+	Add support for Python 3.
+	* gdb.texinfo (Inferior.read_memory): Mention that the return
+	value is a memoryview object if Python 3.
+
 2012-12-11  Pedro Alves  <palves@redhat.com>
 
 	* gdb.texinfo: Remove all mentions of Unixware throughout.
@@ -5935,6 +6169,10 @@
 	* observer.texi (solib_unloaded): Document explicitly the fact that
 	this observer is called before the associated symbols are unloaded.
 
+2009-09-21  Jie Zhang  <jie.zhang@analog.com>
+
+	* gdb.texinfo: Escape "{" and "}".
+
 2009-09-19  Vladimir Prus  <vladimir@codesourcery.com>
 
 	* gdb.texinfo (GDB/MI Stack Manipulation): Document
@@ -7105,6 +7343,11 @@
 	* gdb.texinfo (Thread Commands): Document
 	-thread-info.  Remove -thread-list-all-threads.
 
+2008-03-14  Vladimir Prus  <vladimir@codesourcery.com>
+
+	Implement MI notification for new threads.
+	* observer.texi (new_thread): Document.
+
 2008-03-14  Pedro Alves  <pedro@codesourcery.com>
 	    Sandra Loosemore  <sandra@codesourcery.com>
 
@@ -7362,6 +7605,11 @@
 	frame_unwind_register_unsigned in examples instead of
 	frame_unwind_unsigned_register.
 
+2007-10-16  Gaius Mulley  <gaius@glam.ac.uk>
+
+        * gdb.texinfo: Add TSIZE definition, removed statement about
+	unbounded arrays being unimplemented.
+
 2007-10-15  Daniel Jacobowitz  <dan@codesourcery.com>
 
 	* gdb.texinfo (Predefined Target Types): Add int128
@@ -7637,6 +7885,10 @@
 	* gdb.texinfo (GDB/MI Variable Objects): Document
 	frozen variables objects.
 
+2007-04-13  Paul Brook  <paul@codesourcery.com>
+
+	* gdb.texinfo: Document ieee_single and ieee_double target types.
+
 2007-04-13  Daniel Jacobowitz  <dan@codesourcery.com>
 
 	* gdb.texinfo (Memory): Reference Remote Debugging chapter.
@@ -7648,6 +7900,10 @@
 	and "show remotedevice".
 	(Embedded Processors): Delete H8/300, H8/500, and SH nodes.
 
+2007-04-11  Steve Ellcey  <sje@cup.hp.com>
+
+	* gdbint.texinfo (warning flags): Add -Wno-char-subscripts.
+
 2007-04-11  Bob Wilson  <bob.wilson@acm.org>
 
 	* gdb.texinfo (Contributors, Continuing and Stepping)
@@ -8096,6 +8352,11 @@
 	remote supported-packets.
 	(General Query Packets): Document qSupported packet.
 
+2006-06-13  Nathan Sidwell  <nathan@codesourcery.com>
+
+	* gdb.texinfo (system): Document behaviour with zero length
+	string.
+
 2006-06-10  Sandra Loosemore <sandra@codesourcery.com>
 
 	* gdb.texinfo (File-I/O overview): Copy edit for grammar, spelling,
@@ -8244,6 +8505,10 @@
 
 	* gdb.texinfo (Overview): Add an index entry to "empty response".
 
+2006-03-29  Steve Ellcey  <sje@cup.hp.com>
+
+	* gdb.texinfo: Remove gdbserve.nlm documentation.
+
 2006-03-28  Jim Blandy  <jimb@codesourcery.com>
 
 	* gdbint.texinfo (Prologue Analysis): New section.
@@ -8843,6 +9108,10 @@
 	* gdb.texinfo (General Query Packets): Fix texinfo compile warning and
 	error.
 
+2005-03-07  Joel Brobecker  <brobecker@adacore.com>
+
+	* observer.texi (executable_changed): New observer.
+
 2005-02-03  Kevin Buettner  <kevinb@redhat.com>
 
 	* gdb.texinfo (General Query Packets): Document qGetTLSAddr packet.
@@ -9012,6 +9281,11 @@
 	* gdbint.texinfo (Host Definition): Delete description of
 	FCLOSE_PROVIDED and GETENV_PROVIDED.
 
+2004-08-11  Joel Brobecker  <brobecker@gnat.com>
+
+	* gdbint.texinfo (Host Definition): Remove documentation for
+	USE_O_NOCTTY, no longer used.
+
 2004-08-05  Mark Kettenis  <kettenis@chello.nl>
 
 	* gdbint.texinfo (Host Definition): Delete description of
@@ -9986,6 +10260,10 @@
 	* gdbint.texinfo: Ditto.
 	* gdb.texinfo: Ditto.
 
+2002-12-29  Kazu Hirata  <kazu@cs.umass.edu>
+
+	* fdl.texi: Revert the last change.
+
 2002-12-22  Mark Kettenis  <kettenis@gnu.org>
 
 	* gdbint.texinfo (Target Architecture Definition): Update
@@ -10105,6 +10383,10 @@
 
 	* gdb.texinfo: Add character set documentation.
 
+2002-09-20  George Helffrich  <george@gly.bris.ac.uk>
+
+	* gdb.texinfo: Document edit command.
+
 2002-09-19  Andrew Cagney  <ac131313@redhat.com>
 
 	* gdb.texinfo (Packets): Revise `z' and `Z' packet documentation.
@@ -10304,6 +10586,10 @@
 	* gdbint.texinfo (Releasing GDB): Rename ``Obsoleting any code''
 	to ``Obsoleting code''.  Revise.
 
+2002-05-21  Jason Thorpe  <thorpej@wasabisystems.com>
+
+	* gdbint.texinfo: Document new generic OS ABI framework.
+
 2002-05-17  Jim Blandy  <jimb@redhat.com>
 
 	* gdb.texinfo (C Preprocessor Macros): New chapter.
@@ -10440,6 +10726,11 @@
 	* Makefile.in (gdb.info): Add explicit path to gdb.texinfo.
 	Remove reference to 3.12.
 
+2002-02-23  Paul Eggert  <eggert@twinsun.com>
+
+	* Makefile.in (GDBvn.texi): Change "head -1" to "sed q", since
+	POSIX 1003.1-2001 no longer allows "head -1".
+
 2002-02-23  Andrew Cagney  <ac131313@redhat.com>
 
 	* gdbint.texinfo: Include fdl.texi.
@@ -10479,6 +10770,11 @@
 	'_ovly_debug_event', which allows GDB to keep better track
 	of overlays.
 
+2002-02-06  Richard Earnshaw  <rearnsha@arm.com>
+
+	* gdbint.texinfo (FLOAT_INFO): Mark as deprecated.
+	(PRINT_FLOAT_INFO): Document it.
+
 2002-02-03  Eli Zaretskii  <eliz@gnu.org>
 
 	* gdb.texinfo (Memory Region Attributes): Fix the wording.
@@ -11306,6 +11602,10 @@ Thu Oct 14 21:17:17 1999  Andrew Cagney  <cagney@b1.cygnus.com>
 
 	* gdbint.texinfo (Target Architecture Definition): Add PARM_BOUNDARY.
 
+1999-10-07  Jim Blandy  <jimb@zwingli.cygnus.com>
+
+	* gdbint.texinfo (SYMBOLS_CAN_START_WITH_DOLLAR): Document.
+
 1999-10-05  Stan Shebs  <shebs@andros.cygnus.com>
 
 	From Dmitry Sivachenko <demon@gpad.ac.ru>:
@@ -11410,6 +11710,10 @@ Wed Aug 11 13:18:14 1999  Andrew Cagney  <cagney@amy.cygnus.com>
 	* Makefile.in: Rename inc-hist.texi to inc-hist.texinfo.
 	* gdb.texinfo: Ditto.
 
+Sun Aug  8 12:06:47 1999  Fred Fish  <fnf@cygnus.com>
+
+	* gdbint.texinfo (find_sym_fns): This replaces symfile_init.
+
 1999-08-06  Tom Tromey  <tromey@cygnus.com>
 
 	* gdb.texinfo (KOD): New node.
@@ -11731,6 +12035,11 @@ Mon Dec  9 12:23:32 1996  Roland Pesch  <roland@wrs.com>
 
 	* gdb.texinfo, refcard.tex: Restore author credit
 
+Wed Oct  2 22:07:16 1996  Fred Fish  <fnf@cygnus.com>
+
+	* gdbint.texinfo: Document that SIGTRAMP_START and SIGTRAMP_END
+	are macros that take an single argument.
+
 Wed Oct  2 22:01:36 1996  Fred Fish  <fnf@fishfood.ninemoons.com>
 
 	* gdbint.texinfo (SIGTRAMP_START, SIGTRAMP_END): Update
@@ -11837,6 +12146,10 @@ Wed Sep 20 13:14:10 1995  Ian Lance Taylor  <ian@cygnus.com>
 	* Makefile.in (maintainer-clean): New target, synonym for
 	realclean.
 
+Wed Sep 20 08:16:03 1995  steve chamberlain  <sac@slash.cygnus.com>
+
+	* gdbint.texinfo (GETENV_PROVIDED, FCLOSE_PROVIDED): Document.
+
 Thu Aug  3 10:45:37 1995  Fred Fish  <fnf@cygnus.com>
 
 	* Update all FSF addresses except those in COPYING* files.
@@ -12689,6 +13002,17 @@ Thu Apr 29 09:36:25 1993  Jim Kingdon  (kingdon@cygnus.com)
 
 	* gdb.texinfo (Environment): Mention pitfall with .cshrc.
 
+Thu Apr 29 00:03:59 1993  Fred Fish  (fnf@cygnus.com)
+
+	* gdbint.texinfo (LONG_LONG):  Replace with CC_HAS_LONG_LONG.
+	Add PRINTF_HAS_LONG_LONG references.
+
+Wed Apr 28 11:39:18 1993  Roland H. Pesch  (pesch@fowanton.cygnus.com)
+
+	* gdb.texinfo: Make node "Shell Commands" unconditional; describe
+	`set demangle-style arm' (not cfront); mention can type `q' to
+	discard output, when gdb pages.
+
 Tue Apr 27 14:02:57 1993  Jim Kingdon  (kingdon@cygnus.com)
 
 	* gdbint.texinfo (new node Debugging GDB, elsewhere):
@@ -12745,6 +13069,10 @@ Fri Apr  2 16:55:13 1993  Jim Kingdon  (kingdon@cygnus.com)
 
 	* stabs.texinfo: Fixes about N_SO.
 
+Mon Mar 29 15:03:25 1993  Fred Fish  (fnf@cygnus.com)
+
+	* gdbinit.texinfo:  Document renaming of tm-29k.h to tm-a29k.h.
+
 Fri Mar 26 18:00:35 1993  Roland H. Pesch  (pesch@fowanton.cygnus.com)
 
 	* gdb.texinfo: include list of nonstandard init file names
@@ -12775,6 +13103,11 @@ Tue Mar 23 16:03:24 1993  Roland H. Pesch  (pesch@fowanton.cygnus.com)
 
 	* gdb.texinfo, gdvinv-s.texinfo: formatting improvements.
 
+Tue Feb 23 11:46:11 1993  Mike Stump  (mrs@cygnus.com)
+
+	* stabs.texi: The `this' pointer is now known by the name
+	`this' instead of `$t'.
+
 Fri Mar 19 21:46:50 1993  John Gilmore  (gnu@cygnus.com)
 
 	* gdbint.texinfo:  Doc NO_MMALLOC and NO_MMALLOC_CHECK as
@@ -12812,6 +13145,10 @@ Wed Feb 10 23:59:19 1993  John Gilmore  (gnu@cygnus.com)
 
 	* gdbint.texinfo:  Eliminate IBM6000_HOST, document IBM6000_TARGET.
 
+Wed Feb 10 23:42:37 1993  John Gilmore  (gnu@cygnus.com)
+
+	* gdbint.texinfo: Eliminate IBM6000_HOST, document IBM6000_TARGET.
+
 Tue Feb  9 18:26:21 1993  Roland H. Pesch  (pesch@fowanton.cygnus.com)
 
 	* gdb.texinfo, gdbinv-s.texi: misc updates
@@ -12850,6 +13187,18 @@ Mon Feb  1 15:35:47 1993  Roland H. Pesch  (pesch@fowanton.cygnus.com)
 	* gdbinv-s.texi:  Mention that Z8000 simulator can simulate Z8001
 	as well as Z8002.
 
+Thu Dec 17 00:44:57 1992  John Gilmore  (gnu@cygnus.com)
+
+	* gdbint.texinfo (Host Conditionals): Remove
+	NAMES_HAVE_UNDERSCORE, SOME_NAMES_HAVE_DOT, document
+	MEM_FNS_DECLARED.
+	(Target Conditionals):  Remove all of the above.
+
+Tue Dec 15 02:01:00 1992  John Gilmore  (gnu@cygnus.com)
+
+	* gdbint.texinfo: SWAP_HOST_AND_TARGET => SWAP_TARGET_AND_HOST.
+	Noticed by Andy Jackson, <arj@cam-orl.co.uk>.
+
 Sat Nov 28 06:51:35 1992  John Gilmore  (gnu@cygnus.com)
 
 	* gdbint.texinfo:  Add sections on clean design and on how to send
@@ -12859,6 +13208,10 @@ Mon Nov  9 23:57:02 1992  John Gilmore  (gnu@cygnus.com)
 
 	* gdbint.texinfo:  Add how to declare the result of make_cleanup.
 
+Tue Oct 27 17:08:45 1992  K. Richard Pixley  (rich@cygnus.com)
+
+	* gdbint.texinfo: nm.h now included in defs.h.
+
 Mon Oct 26 11:09:47 1992  John Gilmore  (gnu@cygnus.com)
 
 	* gdb.texinfo:  Fix typo, reported by Karl Berry.
@@ -12867,11 +13220,38 @@ Fri Oct 23 00:41:21 1992  John Gilmore  (gnu@cygnus.com)
 
 	* gdb.texinfo:  Add opcodes dir to GDB distribution description.
 
+Wed Oct 21 03:51:01 1992  John Gilmore  (gnu@cygnus.com)
+
+	* gdbint.texinfo:  Improve REGISTER_U_ADDR and USE_PROC_FS doc.
+
+Tue Oct 20 23:27:56 1992  John Gilmore  (gnu@cygnus.com)
+
+	* gdbint.texinfo: Document obsolete STACK_END_ADDR.
+	(all @node commands): Use new form to avoid nitpicking errors.
+	* gdbint.texinfo: Document host/native/target split.
+
+Tue Oct 20 21:32:18 1992  K. Richard Pixley  (rich@sendai.cygnus.com)
+
+	* gdbint.texinfo: add PUSH_DUMMY_FRAME, POP_FRAME.
+
+Fri Oct 16 03:34:01 1992  John Gilmore  (gnu@cygnus.com)
+
+	* gdbint.texinfo: Update GET_LONGJMP_TARGET, L_SET doc.
+
 Sat Oct 10 18:04:58 1992  david d `zoo' zuhn  (zoo at cirdan.cygnus.com)
 
 	* gdbint.texinfo: fixed a stray email address (needs @@),
 	added @table @code to node "Native Conditionals"
 
+Thu Oct  8 16:27:45 1992  K. Richard Pixley  (rich@sendai.cygnus.com)
+
+	* gdbint.texinfo: document a few more macros, create new section
+	for native macros.
+
+Thu Oct  1 01:57:56 1992  John Gilmore  (gnu@cygnus.com)
+
+	* gdb.texinfo: Document command hooks.
+
 Tue Sep 22 00:34:15 1992  John Gilmore  (gnu@cygnus.com)
 
 	* gdbint.texinfo:  Describe coding style of GDB.
@@ -12884,6 +13264,19 @@ Tue Sep 15 02:57:09 1992  John Gilmore  (gnu@cygnus.com)
 
 	* gdbint.texinfo:  Improve release doc slightly.
 
+Fri Sep 11 18:28:28 1992  Roland H. Pesch  (pesch@fowanton.cygnus.com)
+
+	* gdb.texinfo, gdbinv-m.m4.in, gdbinv-s.m4.in: First pass at doc
+	for two new remote targets---29K using UDI, and Tandem ST2000
+	using STDBUG.
+
+	* all.m4, none.m4: new m4 switch, _ST2000__
+
+	* all.m4: turn on H8/300 stuff for generic manual
+
+	* gdbinv-s.m4.in: remove text on special procedures to continue
+	after explicit call to breakpoint() in serial stubs.
+
 Fri Sep 11 01:34:25 1992  John Gilmore  (gnu@sphagnum.cygnus.com)
 
 	* gdbint.texinfo:  Improve doc of GDB config macros.
@@ -12893,6 +13286,15 @@ Wed Sep  9 16:52:06 1992  John Gilmore  (gnu@cygnus.com)
 	* stabs.texinfo:  Remove Bothner's changes for C++ nested types.
 	These will be reinserted when examined.
 
+Fri Sep  4 18:53:57 1992  Roland H. Pesch  (pesch@fowanton.cygnus.com)
+
+	* gdb.texinfo: fix shameful error of agreement reported by
+	jimb@occs.cs.oberlin.edu (Jim Blandy)
+	* gdb.texinfo: remove old partial discussion of remote serial
+	protocol (via serial debug stubs)
+	* gdbinv-m.m4.in, gdbinv-s.m4.in: new section discussing
+	use of serial debug stubs
+
 Mon Aug 24 01:17:55 1992  John Gilmore  (gnu@cygnus.com)
 
 	* gdbint.texinfo:  Make a start at documenting all the #if macros
@@ -12941,6 +13343,10 @@ Fri Aug 14 21:08:47 1992  John Gilmore  (gnu@cygnus.com)
 
 	* gdbint.texinfo:  Add section on partial symbol tables.
 
+Fri Jun 19 10:28:05 1992  John Gilmore  (gnu at cygnus.com)
+
+	* gdb.texinfo:  Document new am29k setting.
+
 Sat Jun 20 16:31:10 1992  John Gilmore  (gnu at cygnus.com)
 
 	* gdb.texinfo:  document `set remotedebug' and `set
diff --git a/gdb/gdbserver/ChangeLog b/gdb/gdbserver/ChangeLog
index faafdfd967..e5c05fa4ee 100644
--- a/gdb/gdbserver/ChangeLog
+++ b/gdb/gdbserver/ChangeLog
@@ -1,3 +1,375 @@
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* configure.ac: Remove any checks that were added to common.m4.
+	* acinclude.m4: Include lib-ld.m4, lib-prefix.m4, and
+	lib-link.m4.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* server.h: Include config.h.
+	* gdbreplay.c: Include config.h.
+	* configure: Rebuild.
+	* configure.ac: Don't source common.host.
+	* acinclude.m4: Update path.
+	* Makefile.in (INCSUPPORT): New variable.
+	(INCLUDE_CFLAGS): Add INCSUPPORT.
+	(SFILES): Update paths.
+	(version-generated.c): Update path to create-version.sh.
+	(gdbsupport/%-ipa.o, gdbsupport/%.o): Update paths.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* configure.ac (LIBS): Use WIN32APILIBS.
+	(USE_WIN32API): Don't define.
+	* configure: Rebuild.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* Makefile.in (%-generated.c): Remove rule for files from
+	regformats/i386.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure: Re-generate.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* tracepoint.h (IP_AGENT_EXPORT_FUNC) [!IN_PROCESS_AGENT]:
+	Define to static.
+	* tracepoint.c (stop_tracing, flush_trace_buffer,
+	about_to_request_buffer_space, get_trace_state_variable_value,
+	set_trace_state_variable_value, gdb_collect): Add declaration.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* linux-x86-low.c (x86_linux_regs_info, amd64_emit_eq_goto,
+	amd64_emit_ne_goto, amd64_emit_lt_goto, amd64_emit_le_goto,
+	amd64_emit_gt_goto, amd64_emit_ge_goto, amd64_emit_ge_goto,
+	i386_emit_eq_goto, i386_emit_ne_goto, i386_emit_lt_goto,
+	i386_emit_le_goto, i386_emit_gt_goto, i386_emit_ge_goto): Make
+	static.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* inferiors.c: Include gdbsupport/common-inferior.h.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* hostio-errno.c: Include hostio.h.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* Makefile.in (%-generated.c): Make $(regdat_sh) a regular
+	prerequisite.
+
+2020-01-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* linux-arm-tdesc.c: Include linux-arm-tdesc.h.
+	* linux-arm-tdesc.h: Include arch/arm.h.
+
+2020-01-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* linux-aarch64-low.c (aarch64_write_goto_address): Make static.
+
+2020-01-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* linux-aarch32-tdesc.c: Include linux-aarch32-tdesc.h.
+	* linux-aarch64-tdesc.c: Include linux-aarch64-tdesc.h.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* fork-child.c (post_fork_inferior): Pass target down to
+	startup_inferior.
+	* inferiors.c (switch_to_thread): Add process_stratum_target
+	parameter.
+	* lynx-low.c (lynx_target_ops): Now a process_stratum_target.
+	* nto-low.c (nto_target_ops): Now a process_stratum_target.
+	* linux-low.c (linux_target_ops): Now a process_stratum_target.
+	* remote-utils.c (prepare_resume_reply): Pass the target to
+	switch_to_thread.
+	* target.c (the_target): Now a process_stratum_target.
+	(done_accessing_memory): Pass the target to switch_to_thread.
+	(set_target_ops): Ajust to use process_stratum_target.
+	* target.h (struct target_ops): Rename to ...
+	(struct process_stratum_target): ... this.
+	(the_target, set_target_ops): Adjust.
+	(prepare_to_access_memory): Adjust comment.
+	* win32-low.c (child_xfer_memory): Adjust to use
+	process_stratum_target.
+	(win32_target_ops): Now a process_stratum_target.
+
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
+	    Pedro Alves  <palves@redhat.com>
+
+	* win32-low.c (get_child_debug_event): Extract the fatal exception
+	from the exit status and convert to the equivalent Posix signal
+	number.
+	(win32_wait): Allow TARGET_WAITKIND_SIGNALLED status as well.
+	* Makefile.in (OBS, SFILES): Add gdb_wait.[co].
+
+2020-01-01  Hannes Domani  <ssbssa@yahoo.de>
+
+	* Makefile.in: Use INSTALL_PROGRAM_ENV.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* server.c (gdbserver_version): Change copyright year to 2020.
+	* gdbreplay.c (gdbreplay_version): Likewise.
+
+2019-12-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* configure: Regenerate.
+	* configure.ac: Quote variable arguments of test.
+
+2019-12-16  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* Makefile.in: Fix build with GNU Make 3.81
+
+2019-12-16  Tom Tromey  <tromey@adacore.com>
+
+	* server.c (get_exec_file): Constify result.
+
+2019-12-10  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Add safe-strerror.c to gdbreplay and IPA, and change
+	UNDO_GNULIB_CFLAGS to undo strerror_r instead of strerror.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* configure.ac: Don't check for strerror.
+	* linux-i386-ipa.c (initialize_fast_tracepoint_trampoline_buffer):
+	Call safe_strerror instead of strerror.
+	* server.h (strerror): Remove this now-unnecessary declaration.
+	* tracepoint.c (init_named_socket): Call safe_strerror instead of
+	strerror.
+	(gdb_agent_helper_thread): Likewise.
+	* utils.c (perror_with_name): Likewise.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* configure, config.in: Rebuild.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* remote-utils.c (block_unblock_async_io): Use gdb_sigmask.
+	* linux-low.c (linux_wait_for_event_filtered, linux_async): Use
+	gdb_sigmask.
+	* configure, config.in: Rebuild.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* Makefile.in (PTHREAD_CFLAGS, PTHREAD_LIBS): New variables.
+	(INTERNAL_CFLAGS_BASE): Use PTHREAD_CFLAGS.
+	(GDBSERVER_LIBS): Use PTHREAD_LIBS.
+	* acinclude.m4: Include ax_pthread.m4.
+	* config.in, configure: Rebuild.
+
+2019-11-26  Christian Biesinger  <cbiesinger@google.com>
+
+	* debug.c (debug_set_output): Call safe_strerror instead of
+	strerror.
+	* linux-low.c (attach_proc_task_lwp_callback): Likewise.
+	(linux_kill_one_lwp): Likewise.
+	(linux_detach_one_lwp): Likewise.
+	(linux_wait_for_event_filtered): Likewise.
+	(store_register): Likewise.
+	* lynx-low.c (lynx_attach): Likewise.
+	* mem-break.c (insert_memory_breakpoint): Likewise.
+	(remove_memory_breakpoint): Likewise.
+	(delete_fast_tracepoint_jump): Likewise.
+	(set_fast_tracepoint_jump): Likewise.
+	(uninsert_fast_tracepoint_jumps_at): Likewise.
+	(reinsert_fast_tracepoint_jumps_at): Likewise.
+	* nto-low.c (nto_xfer_memory): Likewise.
+	(nto_resume): Likewise.
+
+2019-11-20  Luis Machado  <luis.machado@linaro.org>
+
+	* linux-aarch64-low.c (is_sve_tdesc): Check against target feature
+	instead of register count.
+	* tdesc.c (tdesc_contains_feature): New function.
+	* tdesc.h (tdesc_contains_feature): New prototype.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Add safe-strerror.c.
+	* configure: Regenerate.
+	* configure.ac: Don't source common.host.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* config.in: Regenerate.
+	* configure: Regenerate.
+
+2019-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ax.c (ax_printf): Handle size_t_arg.
+
+2019-11-06  Christian Biesinger  <cbiesinger@google.com>
+
+	* linux-tdep.c (linux_info_proc): Use strtok_r instead of strtok.
+	* mi/mi-main.c (output_cores): Likewise.
+	* nat/linux-osdata.c (linux_xfer_osdata_cpus): Likewise.
+	(linux_xfer_osdata_modules): Likewise.
+	* remote.c (register_remote_support_xml): Likewise.
+	* sparc64-tdep.c (adi_is_addr_mapped): Likewise.
+	* xml-syscall.c (syscall_create_syscall_desc): Likewise.
+
+2019-11-01  Christian Biesinger  <cbiesinger@google.com>
+
+	* configure: Regenerate.
+	* configure.ac: Remove check for strerror_r.
+
+2019-10-31  Christian Biesinger  <cbiesinger@google.com>
+
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* configure.ac: Also check for strerror_r.
+
+2019-10-31  Christian Biesinger  <cbiesinger@google.com>
+
+	* ax.h (debug_agent): Remove duplicate declaration.
+
+2019-10-26  Tom de Vries  <tdevries@suse.de>
+
+	* linux-aarch64-low.c: Fix typos in comments.
+	* linux-arm-low.c: Same.
+	* linux-low.c: Same.
+	* linux-ppc-low.c: Same.
+	* proc-service.c: Same.
+	* regcache.h: Same.
+	* server.c: Same.
+	* tracepoint.c: Same.
+	* win32-low.c: Same.
+
+2019-10-25  Tom Tromey  <tromey@adacore.com>
+
+	* utils.c (xstrdup): Remove.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	* configure, config.in: Rebuild.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* acinclude.m4: Use m4_include, not sinclude.
+
+2019-10-17  Tom Tromey  <tromey@adacore.com>
+
+	* configure: Rebuild.
+	* configure.ac: Use AC_CONFIG_HEADERS.  Create stamp-h there, not
+	in AC_CONFIG_FILES invocation.
+	* Makefile.in (stamp-h, Makefile): Use new-style config.status
+	invocation.
+
+2019-10-16  Christian Biesinger  <cbiesinger@google.com>
+
+	* server.c: Include xml-builtin.h.
+	(get_xml_features): Don't declare xml_builtins here.
+
+2019-10-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in: Remove references to vec-ipa.o.
+
+2019-10-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in: Remove references to vec.c.
+
+2019-10-02  Christian Biesinger  <cbiesinger@google.com>
+
+	* server.c (server_waiting): Change to bool.
+	(extended_protocol): Likewise.
+	(response_needed): Likewise.
+	(exit_requested): Likewise.
+	(run_once): Likewise.
+	(report_no_resumed): Likewise.
+	(non_stop): Likewise.
+	(disable_packet_vCont): Likewise.
+	(disable_packet_Tthread): Likewise.
+	(disable_packet_qC): Likewise.
+	(disable_packet_qfThreadInfo): Likewise.
+	(handle_general_set): Update.
+	(handle_detach): Update.
+	(handle_monitor_command): Update.
+	(handle_query): Update.
+	(captured_main): Update.
+	(process_serial_event): Update.
+	* server.h (server_waiting): Change to bool.
+	(disable_packet_vCont): Likewise.
+	(disable_packet_Tthread): Likewise.
+	(disable_packet_qC): Likewise.
+	(disable_packet_qfThreadInfo): Likewise.
+	(run_once): Likewise.
+	(non_stop): Likewise.
+	* target.c (target_stop_and_wait): Update.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* Makefile.in (SFILES): Add common-inferior.c.
+	(OBS): Add common-inferior.o.
+	* server.c (startup_with_shell): Don't define.
+
+2019-10-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-low.c (linux_low_read_btrace): Update for change to
+	std::vector.
+
+2019-09-20  Christian Biesinger  <cbiesinger@google.com>
+
+	* debug.c (debug_threads): Remove comment in favor of the header.
+	* debug.h (using_threads): Add declaration.
+	(debug_threads): Add comment.
+	* linux-aarch64-low.c: Include debug.h and remove declaration of
+	debug_threads.
+	* nto-low.c: Likewise.
+	* remote-utils.c: Likewise.
+	* thread-db.c: Likewise.
+
+2019-09-20  Ulrich Weigand  <uweigand@de.ibm.com>
+
+	* configure.srv (ipa_ppc_linux_regobj): Remove powerpc-cell32l-ipa.o
+	and powerpc-cell64l-ipa.o.
+	(powerpc*-*-linux*): Remove powerpc-cell32l.o and powerpc-cell64l.o
+	from srv_regobj.  Remove rs6000/powerpc-cell32l.xml and
+	rs6000/powerpc-cell64l.xml from srv_xmlfiles.
+	(spu*-*-*): Remove.
+
+	* spu-low.c: Remove file.
+
+	* linux-ppc-low.c (INSTR_SC, NR_spu_run): Remove.
+	(parse_spufs_run): Remove.
+	(ppc_get_pc): Remove Cell/B.E. support.
+	(ppc_set_pc): Likewise.
+	(ppc_breakpoint_at): Likewise.
+	(ppc_arch_setup): Likewise.
+	(ppc_get_ipa_tdesc_idx): Do not handle tdesc_powerpc_cell64l or
+	tdesc_powerpc_cell32l.
+	(initialize_low_arch): Do not call init_registers_powerpc_cell64l
+	or init_registers_powerpc_cell32l.
+	* linux-ppc-ipa.c (get_ipa_tdesc): Do not handle PPC_TDESC_CELL.
+	(initialize_low_tracepoint): Do not call init_registers_powerpc_cell64l
+	or init_registers_powerpc_cell32l.
+	* linux-ppc-tdesc-init.h (PPC_TDESC_CELL): Mark as unused.
+	(init_registers_powerpc_cell32l): Remove prototype.
+	(init_registers_powerpc_cell64l): Likewise.
+
+	* target.h (struct target_ops): Remove qxfer_spu member.
+	* server.c (handle_qxfer_spu): Remove.
+	(qxfer_packets): Remove entry for "spu".
+	(handle_query): No longer support qXfer:spu:read or qXfer:spu:write.
+	* linux-low.c (SPUFS_MAGIC): Remove.
+	(spu_enumerate_spu_ids): Remove.
+	(linux_qxfer_spu): Remove.
+	(linux_target_ops): Remove qxfer_spu member.
+	* lynx-low.c (lynx_target_ops): Remove qxfer_spu member.
+	* nto-low.c (nto_target_ops): Remove qxfer_spu member.
+	* win32-low.c (win32_target_ops): Remove qxfer_spu member.
+
 2019-08-23  Sergio Durigan Junior  <sergiodj@redhat.com>
 
 	* Makefile.in (SFILES): Add 'gdbsupport/gdb-dlfcn.c'.
diff --git a/gdb/stubs/ChangeLog b/gdb/stubs/ChangeLog
index 3626f75c88..835aed9d7a 100644
--- a/gdb/stubs/ChangeLog
+++ b/gdb/stubs/ChangeLog
@@ -1,3 +1,10 @@
+2019-10-26  Tom de Vries  <tdevries@suse.de>
+
+	* ia64vms-stub.c: Fix typos in comments.
+	* m32r-stub.c: Same.
+	* m68k-stub.c: Same.
+	* sh-stub.c: Same.
+
 2019-01-21  Tom Tromey  <tom@tromey.com>
 
 	* ia64vms-stub.c: Fix includes.
diff --git a/gdb/ChangeLog b/gdb/ChangeLog
index af1608db9a..abe7ab7662 100644
--- a/gdb/ChangeLog
+++ b/gdb/ChangeLog
@@ -1,12172 +1,1598 @@
-2019-09-08  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (box_win): Truncate long window titles.
-
-2019-09-07  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2read.c (struct dw2_symtab_iterator) <block_index>:
-	Change type to gdb::optional<block_enum>.
-	(dw2_symtab_iter_init): Change block_index parameter type
-	to gdb::optional<block_enum>.
-	(dw2_lookup_symbol): Change block_index parameter
-	type to block_enum.c
-	(dw2_debug_names_lookup_symbol): Likewise.
-	* psymtab.c (psym_lookup_symbol): Likewise.
-	* symfile-debug.c (debug_qf_lookup_symbol): Likewise.
-	* symfile.h (struct quick_symbol_functions) <lookup_symbol>:
-	Likewise.
-
-2019-09-06  Christian Biesinger  <cbiesinger@google.com>
-
-	* defs.h (relocate_gdb_directory): Change int to bool in
-	signature and rename flag to relocatable.
-	* main.c (relocate_path): Likewise.
-	(relocate_gdb_directory): Likewise.
-
-2019-09-06  Alan Modra  <amodra@gmail.com>
-
-	* coffread.c (coff_symfile_read): Constify filename variable.
-	* dbxread.c (dbx_symfile_init, coffstab_build_psymtabs),
-	(elfstab_build_psymtabs, stabsect_build_psymtabs): Likewise.
-	* gdb_bfd.c (gdb_bfd_close_or_warn): Likewise.
-	* solib.c (reload_shared_libraries_1): Likewise.
-	* symfile.c (reread_symbols): Likewise.
-	* solib-aix.c (solib_aix_bfd_open): Add cast for xfree of filename.
-	* solib-darwin.c (darwin_bfd_open): Likewise.
-	* symfile-mem.c (symbol_file_add_from_memory): Likewise.
-
-2019-09-03  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* psymtab.c (print_partial_symbols): Handle missing domain_enum
-	values MODULE_DOMAIN and COMMON_BLOCK_DOMAIN.
-
-2019-09-03  Tom Tromey  <tromey@adacore.com>
-
-	* ada-valprint.c (ada_val_print_num): Don't recurse for range
-	types.
-	(has_negatives): Unbias a range type bound.
-	* dwarf2read.c (read_subrange_type): Handle DW_AT_GNU_bias.
-	* gdbtypes.c (operator==): Handle new field.
-	(create_range_type): Add "bias" parameter.
-	(create_static_range_type, resolve_dynamic_range): Update.
-	* gdbtypes.h (struct range_bounds) <bias>: New member.
-	(create_range_type): Add bias parameter.
-	* printcmd.c (print_scalar_formatted): Unbias range types.
-	* value.c (unpack_long): Unbias range types.
-	(pack_long): Bias range types.
-
-2019-09-02  Alan Hayward  <alan.hayward@arm.com>
-
-	* solib-svr4.c (svr4_find_and_create_probe_breakpoints): Check all
-	probe arguments.
-
-2019-09-02  Alan Hayward  <alan.hayward@arm.com>
-
-	* break-catch-throw.c (fetch_probe_arguments): Use gdbarch.
-	* dtrace-probe.c (dtrace_probe::get_argument_count): Likewise.
-	* probe.c (probe_safe_evaluate_at_pc) (compute_probe_arg)
-	(compile_probe_arg): Likewise.
-	* probe.h (get_argument_count): Likewise.
-	* solib-svr4.c (solib_event_probe_action): Likewise.
-	* stap-probe.c (stap_probe::get_argument_count): Likewise.
-
-2019-09-02  Alan Hayward  <alan.hayward@arm.com>
-
-	* solib-svr4.c (svr4_find_and_create_probe_breakpoints): Move
-	code to here...
-	(svr4_create_solib_event_breakpoints): ...from here.
-
-2019-08-30  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* nat/fork-inferior.c (trace_start_error): Remove "\nError: "
-	suffix from warning message.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<refresh_all>: Don't declare.
-	* tui/tui-winsource.c (tui_source_window_base::refresh_all):
-	Remove.
-	* tui/tui-win.c (tui_refresh_all_win): Don't call refresh_all or
-	tui_show_locator_content.
-	* tui/tui-regs.h (struct tui_data_window) <refresh_all>: Don't
-	declare.
-	* tui/tui-regs.c (tui_data_window::refresh_all): Remove.
-	* tui/tui-data.h (struct tui_win_info) <refresh_all>: Don't
-	declare.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-io.c (tui_cont_sig): Don't call wrefresh.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-stack.c (_initialize_tui_stack): Move later.
-	Remove unnecessary forward declarations.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-stack.c (tui_locator_window::set_locator_fullname): Call
-	rerender.
-	(tui_update_locator_fullname, tui_show_frame_info): Don't call
-	tui_show_locator_content.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-stack.c (tui_show_locator_content): Move lower.  Rewrite.
-	(tui_locator_window::rerender): Rewrite using body of previous
-	tui_show_locator_content.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-stack.h (struct tui_locator_window) <set_locator_info,
-	set_locator_fullname>: New methods.
-	* tui/tui-stack.c (tui_locator_window::set_locator_fullname):
-	Rename from tui_set_locator_fullname.
-	(tui_locator_window::set_locator_info): Rename from
-	tui_set_locator_info.  Return bool.
-	(tui_update_locator_fullname, tui_show_frame_info): Update.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_layout): Don't call tui_refresh_all.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window): Don't
-	call touchwin.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (box_win): Assume win_info and
-	win_info->handle cannot be NULL.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_item_window) <rerender,
-	refresh_window>: Declare.
-	* tui/tui-regs.c (tui_data_window::display_registers_from): Call
-	resize.
-	(tui_data_item_window::rerender): Rename from
-	tui_display_register.
-	(tui_data_item_window::refresh_window): New method.
-	* tui/tui-layout.c (tui_gen_win_info::resize): Do nothing on
-	no-op.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_window) <regs_content,
-	regs_column_count, current_group>: Move later.  Now private.
-	<get_current_group>: New method.
-	* tui/tui-regs.c (tui_reg_command): Update.
-	* tui/tui-layout.c (tui_set_layout): Update.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_data_window::display_registers_from_line)
-	(tui_data_window::rerender): Don't call
-	check_and_display_highlight_if_needed.
-	(tui_data_window::refresh_all): Remove call to
-	erase_data_content.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_data_window::last_regs_line_no)
-	(tui_data_window::display_registers_from)
-	(tui_data_window::display_reg_element_at_line)
-	(tui_data_window::display_registers_from_line): Remove checks of
-	"empty".
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_window) <display_all_data>:
-	Don't declare.
-	* tui/tui-regs.c (tui_data_window::show_registers): Call
-	rerender.
-	(tui_data_window::rerender): Rename from display_all_data.
-	(tui_data_window::rerender): Remove old implementation.
-
-2019-08-30  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_data_window::display_all_data): Change
-	text.
-	* tui/tui-data.h (NO_DATA_STRING): Remove define.
-
-2019-08-29  Bernhard Wodok  <barto@gmx.net>
-	    Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	PR win32/24284
-	* mingw-hdep.c (gdb_select): Handle case when 'n' is zero.
-
-2019-08-28  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* symtab.c (search_symbols): Don't include MODULE_DOMAIN symbols
-	when searching for types.
-
-2019-08-28  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-lang.c (f_language_defn): Use f_print_typedef.
-	* f-lang.h (f_print_typedef): Declare.
-	* f-typeprint.c (f_print_typedef): Define.
-
-2019-08-27  Christian Biesinger  <cbiesinger@google.com>
-
-	* nat/linux-namespaces.c (mnsh_main): Initialize fd (to -1).
-
-2019-08-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* cli/cli-utils.c (info_print_options_defs): Delete.
-	(make_info_print_options_def_group): Delete.
-	(extract_info_print_options): Delete.
-	(info_print_command_completer): Delete.
-	(info_print_args_help): Add extra parameter, and optionally
-	include text about -n flag.
-	* cli/cli-utils.h (struct info_print_options): Delete.
-	(extract_info_print_options): Delete declaration.
-	(info_print_command_completer): Delete declaration.
-	(info_print_args_help): Add extra parameter, extend header
-	comment.
-	* python/python.c (gdbpy_rbreak): Pass additional parameter to
-	search_symbols.
-	* stack.c (struct info_print_options): New type.
-	(info_print_options_defs): New file scoped variable.
-	(make_info_print_options_def_group): New static function.
-	(info_print_command_completer): New static function.
-	(info_locals_command): Update to use new local functions.
-	(info_args_command): Likewise.
-	(_initialize_stack): Add extra parameter to calls to
-	info_print_args_help.
-	* symtab.c (search_symbols): Add extra parameter, use this to
-	possibly excluse non-debug symbols.
-	(symtab_symbol_info): Add extra parameter, which is passed on to
-	search_symbols.
-	(struct info_print_options): New type.
-	(info_print_options_defs): New file scoped variable.
-	(make_info_print_options_def_group): New static function.
-	(info_print_command_completer): New static function.
-	(info_variables_command): Update to use local functions, and pass
-	extra parameter through to symtab_symbol_info.
-	(info_functions_command): Likewise.
-	(info_types_command): Pass additional argument through to
-	symtab_symbol_info.
-	(rbreak_command): Pass extra argument to search_symbols.
-	(_initialize_symtab): Add extra arguments for calls to
-	info_print_args_help, and update help text for 'info variables',
-	'whereis', and 'info functions' commands.
-	* symtab.h (search_symbols): Add extra argument to declaration.
-	* NEWS: Mention new flags.
-
-2019-08-26  Christian Biesinger  <cbiesinger@google.com>
-
-	* symtab.c (lookup_static_symbol): Call the new function (and move
-	it down to be next to lookup_global_symbol).
-	(struct global_sym_lookup_data): Add block_enum member and rename to...
-	(struct global_or_static_sym_lookup_data): ...this.
-	(lookup_symbol_global_iterator_cb): Pass block_index instead of
-	GLOBAL_BLOCK to lookup_symbol_in_objfile and rename to...
-	(lookup_symbol_global_or_static_iterator_cb): ...this.
-	(lookup_global_or_static_symbol): New function.
-	(lookup_global_symbol): Call new function.
-
-2019-08-26  Tom de Vries  <tdevries@suse.de>
-
-	PR c++/24852
-	* break-catch-throw.c (fetch_probe_arguments): Improve error mesage
-	when pc_probe.prob == NULL.
-
-2019-08-25  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2read.c (dw2_debug_names_iterator::next): Rename local
-	variable symbol_linkage to symbol_linkage_.
-
-2019-08-25  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2read.c (dw2_debug_names_iterator::next): Use enum to
-	represent whether the symbol is static, dynamic, or we don't
-	know.
-
-2019-08-25  Yoshinori Sato <ysato@users.sourceforge.jp>
-
-        * gdb/rx-tdep.c (rx_register_names): New.
-        (rx_register_name): Delete.
-        (rx_psw_type): Delete.
-        (rx_fpsw_type): Delete.
-        (rx_register_type): Delete.
-        (rx_gdbarch_init): Convert target-descriptions.
-        (_initialize_rx_tdep): Add initialize_tdesc_rx.
-        * gdb/features/Makefile: Add rx.xml.
-        * gdb/features/rx.xml: New.
-        * gdb/features/rx.c: Generated.
-        * gdb/NEWS: Mention target description support.
-
-2019-08-22  Christian Biesinger  <cbiesinger@google.com>
-
-	* symtab.c (symbol_cache_lookup): Always initialize *bsc_ptr and
-	*slot_ptr.
-
-2019-08-23  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* configure.ac: Don't check for 'dlfcn.h' (moved to
-	gdbsupport/common.m4).
-	* Makefile.in (COMMON_SFILES): Move 'gdb-dlfcn.c' to
-	'gdbsupport/'.
-	(HFILES_NO_SRCDIR): Likewise, for 'gdb-dlfcn.h'.
-	* compile/compile-c-support.c: Include
-	'gdbsupport/gdb-dlfcn.h'.
-	* gdbsupport/common.m4: Check for 'dlfcn.h'.
-	* gdb-dlfcn.c: Move to...
-	* gdbsupport/gdb-dlfcn.c: ... here.
-	* gdb-dlfcn.h: Move to...
-	* gdbsupport/gdb-dlfcn.h: ... here.
-
-2019-08-23  Sandra Loosemore  <sandra@codesourcery.com>
-
-	* nios2-tdep.c (struct reg_value): Improve comments.  Make
-	the offset field signed.
-
-2019-08-22  Christian Biesinger  <cbiesinger@google.com>
-
-	* python/lib/gdb/__init__.py (_execute_file): New function.
-	* python/python.c (python_run_simple_file): Call gdb._execute_file
-	on Windows.
-
-2019-08-22  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-exp.y (yylex): Remove is_a_field_of_this local variable, and
-	all uses as this was never set to anything but a zero value.
-
-2019-08-21  Bogdan Harjoc  <harjoc@gmail.com>
-
-	* cli/cli-cmds.c (with_command_1): Error out if no arguments.
-
-2019-08-21  Christian Biesinger  <cbiesinger@google.com>
-
-	* tui/tui-data.h (tui_gen_win_info): Add an =default
-	move constructor, required by some GCC versions.
-
-2019-08-21  Jinke Fan  <fanjinke51@yeah.net>
-
-	* go32-nat.c (go32_sysinfo): Add hygon_p.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_window) <last_regs_line_no,
-	line_from_reg_element_no, first_reg_element_no_inline,
-	display_all_data, delete_data_content_windows,
-	erase_data_content>: Now private.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (box_win): Change type of highlight_flag.
-	(tui_unhighlight_win, tui_highlight_win)
-	(tui_win_info::make_window): Update.
-	* tui/tui-data.h (HILITE, NO_HILITE): Remove.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (PROC_PREFIX, LINE_PREFIX, PC_PREFIX)
-	(MIN_LINE_WIDTH, MIN_PROC_WIDTH, MAX_TARGET_WIDTH)
-	(MAX_PID_WIDTH): Move to tui-stack.c.
-	* tui/tui-stack.c (PROC_PREFIX, LINE_PREFIX, PC_PREFIX)
-	(MIN_LINE_WIDTH, MIN_PROC_WIDTH, MAX_TARGET_WIDTH)
-	(MAX_PID_WIDTH): Move from tui-data.h.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.h (tui_make_window): Don't declare.
-	* tui/tui-wingeneral.c (box_win): Change type of win_info.
-	(box_win): Update.
-	(tui_gen_win_info::make_window): Rename from tui_make_window.
-	(tui_win_info::make_window): New method.
-	(tui_gen_win_info::make_visible): Update.
-	* tui/tui-source.c (tui_source_window::set_contents): Update.
-	* tui/tui-regs.c (tui_data_window::show_register_group): Update.
-	(tui_data_window::display_registers_from): Update.
-	* tui/tui-layout.c (tui_gen_win_info::resize): Update.
-	* tui/tui-data.h (struct tui_gen_win_info) <make_window>:
-	Declare.
-	<can_box>: Remove.
-	<title>: Remove.
-	(struct tui_win_info) <make_window>: Declare.
-	<can_box>: Now virtual.
-	<title>: New member.
-	* tui/tui-data.c (~tui_gen_win_info): Don't free title.
-	* tui/tui-command.c (tui_cmd_window::resize): Update.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_window) <display_regs>: Remove.
-	* tui/tui-regs.c (tui_data_window::show_registers): Update.
-	(tui_data_window::check_register_values): Update.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_window): Use
-	DISABLE_COPY_AND_ASSIGN.
-	<regs_content>: Change type, removing unique_ptr.
-	<tui_data_window>: Add move constructor.
-	* tui/tui-regs.c (tui_data_window::show_registers)
-	(tui_data_window::show_register_group)
-	(tui_data_window::display_registers_from)
-	(tui_data_window::display_registers_from)
-	(tui_data_window::first_data_item_displayed)
-	(tui_data_window::delete_data_content_windows)
-	(tui_data_window::rerender, tui_data_window::refresh_window)
-	(tui_data_window::check_register_values): Update.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_window) <show_registers,
-	show_register_group>: Declare.
-	(tui_show_register_group): Don't declare.
-	* tui/tui-regs.c (tui_data_window::show_registers): Rename from
-	tui_show_registers.
-	(tui_data_window::show_register_group): Rename from
-	tui_show_register_group.
-	(tui_data_window::check_register_values, tui_reg_command):
-	Update.
-	* tui/tui-layout.c (tui_set_layout): Update.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_window) <check_register_values>:
-	Declare.
-	(tui_check_register_values): Don't declare.
-	* tui/tui-regs.c (tui_data_window::check_register_values): Rename
-	from tui_check_register_values.
-	* tui/tui-hooks.c (tui_register_changed): Update.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_reg_layout): Move later.
-	(tui_show_registers): Don't enable TUI mode or change layout.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_item_window)
-	<~tui_data_item_window>: Remove.
-	<content>: Now a unique_xmalloc_ptr.
-	* tui/tui-regs.c (tui_register_format): Return a
-	unique_xmalloc_ptr.
-	(tui_get_register): Update.
-	(~tui_data_item_window): Remove.
-	(tui_data_window::display_registers_from, tui_display_register):
-	Update.
-	* tui/tui-io.h (tui_expand_tabs): Update.
-	* tui/tui-io.c (tui_expand_tabs): Return a unique_xmalloc_ptr.
-	Remove "col" parameter.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_item_window) <value>: Remove
-	field.
-	* tui/tui-regs.c (~tui_data_item_window): Update.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_register_format, tui_get_register): Move
-	earlier.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_reg_command): Remove NULL check.
-
-2019-08-20  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-source.h (struct tui_source_window): Update.
-	* tui/tui-regs.c (tui_show_registers): Update.
-	* tui/tui-disasm.h (struct tui_disasm_window): Update.
-	* tui/tui-data.h (NO_SRC_STRING, NO_DISASSEM_STRING)
-	(NO_REGS_STRING): Remove defines.
-
-2019-08-20  Conrad Meyer  <cem@FreeBSD.org>
-
-	* remote.c (remote_target::remote_btrace_maybe_reopen): Avoid
-	unnecessary thread walk if remote doesn't support the packet.
-
-2019-08-19  Tom Tromey  <tromey@adacore.com>
-
-	* python/py-value.c (value_has_field): Fix indentation.
-
-2019-08-19  Tom Tromey  <tromey@adacore.com>
-
-	* printcmd.c (do_one_display, info_display_command): Update.
-	* block.h (contained_in): Return bool.  Add allow_nested
-	parameter.
-	* block.c (contained_in): Return bool.  Add allow_nested
-	parameter.
-
-2019-08-19  Tom Tromey  <tom@tromey.com>
-
-	* configure: Rebuild.
-	* configure.ac: Disallow the combination of -static-libstdc++ and
-	source highlight.
-	* source-cache.c (get_language_name): Handle rust.
-	(source_cache::get_source_lines): Ignore highlighting exceptions.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.h (enum tui_win_type) <EXEC_INFO_WIN>: Remove.
-	* tui/tui-winsource.h (struct tui_exec_info_window): Remove.
-	(struct tui_source_window_base) <make_visible, refresh_window,
-	resize>: Remove methods.
-	<execution_info>: Remove field.
-	* tui/tui-winsource.c (tui_source_window_base::do_erase_source_content)
-	(tui_show_source_line, tui_source_window_base)
-	(~tui_source_window_base): Update.
-	(tui_source_window_base::resize)
-	(tui_source_window_base::make_visible)
-	(tui_source_window_base::refresh_window): Remove.
-	(tui_source_window_base::update_exec_info): Update.
-	* tui/tui-source.c (tui_source_window::set_contents): Update.
-	* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-hooks.c (tui_remove_hooks): Don't set
-	deprecated_query_hook.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_update_source_windows_with_addr)
-	(tui_update_source_windows_with_line): Update.
-	* tui/tui-source.h (struct tui_source_window)
-	<show_symtab_source>: Declare.
-	(tui_show_symtab_source): Don't declare.
-	* tui/tui-source.c (tui_show_symtab_source): Rename from
-	tui_show_symtab_source.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<set_contents>: Declare.
-	* tui/tui-winsource.c
-	(tui_source_window_base::update_source_window_as_is): Update.
-	* tui/tui-source.h (struct tui_source_window) <set_contents>:
-	Declare.
-	(tui_set_source_content): Don't declare.
-	* tui/tui-source.c (tui_source_window::set_contents): Rename from
-	tui_set_source_content.
-	* tui/tui-disasm.h (struct tui_disasm_window) <set_contents>:
-	Declare.
-	(tui_set_disassem_content): Don't declare.
-	* tui/tui-disasm.c (tui_disasm_window::set_contents): Rename from
-	tui_set_disassem_content.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<update_breakpoint_info>: Declare.
-	(tui_update_breakpoint_info): Don't declare.
-	* tui/tui-winsource.c (tui_source_window_base::update_source_window_as_is)
-	(tui_update_all_breakpoint_info): Update.
-	(tui_source_window_base::update_breakpoint_info): Rename from
-	tui_update_breakpoint_info.
-	(tui_source_window_base::update_exec_info): Update.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<update_source_window>: Declare.
-	(tui_update_source_window): Don't declare.
-	* tui/tui-winsource.c
-	(tui_source_window_base::update_source_window): Rename from
-	tui_update_source_window.
-	(tui_source_window_base::rerender): Update.
-	* tui/tui-source.c (tui_source_window::maybe_update): Update.
-	* tui/tui-disasm.c (tui_show_disassem)
-	(tui_show_disassem_and_update_source)
-	(tui_disasm_window::maybe_update): Update.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<update_source_window_as_is>: Declare.
-	(tui_update_source_window_as_is): Don't declare.
-	* tui/tui-winsource.c (tui_update_source_window): Update
-	(tui_source_window_base::update_source_window_as_is): Rename from
-	tui_update_source_window_as_is.
-	(tui_source_window_base::refill): Update.
-	* tui/tui-source.c (tui_show_symtab_source): Update.
-	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical):
-	Update.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_update_source_window)
-	(tui_update_source_window_as_is): Remove "noerror" parameter.
-	* tui/tui-winsource.c (tui_update_source_window)
-	(tui_update_source_window_as_is): Remove "noerror" parameter.
-	(tui_update_source_windows_with_addr)
-	(tui_update_source_windows_with_line)
-	(tui_source_window_base::rerender)
-	(tui_source_window_base::refill): Update.
-	* tui/tui-source.h (tui_set_source_content)
-	(tui_show_symtab_source): Remove "noerror" parameter.
-	* tui/tui-source.c (tui_set_source_content): Remove "noerror"
-	parameter.
-	(tui_show_symtab_source): Likewise.
-	(tui_source_window::maybe_update): Update.
-	* tui/tui-disasm.c (tui_show_disassem)
-	(tui_show_disassem_and_update_source)
-	(tui_disasm_window::do_scroll_vertical)
-	(tui_disasm_window::maybe_update): Update.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c (tui_is_window_visible): Update.
-	* tui/tui-wingeneral.c (tui_make_window)
-	(tui_gen_win_info::make_visible, tui_refresh_all): Update.
-	* tui/tui-win.c (window_name_completer, tui_refresh_all_win)
-	(tui_set_focus_command, tui_all_windows_info, update_tab_width)
-	(tui_set_win_height_command, parse_scrolling_args): Update.
-	* tui/tui-source.c (tui_source_window::style_changed): Update.
-	* tui/tui-regs.c (tui_show_registers)
-	(tui_data_window::first_data_item_displayed)
-	(tui_data_window::delete_data_content_windows)
-	(tui_check_register_values, tui_reg_command): Update.
-	* tui/tui-disasm.c (tui_show_disassem): Update.
-	* tui/tui-data.h (struct tui_gen_win_info) <is_visible>: New
-	method.
-	<is_visible>: Remove field.
-	* tui/tui-data.c (tui_next_win, tui_prev_win)
-	(tui_delete_invisible_windows): Update.
-
-2019-08-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<m_has_locator>: Remove.
-	* tui/tui-layout.c (show_source_disasm_command, show_data)
-	(show_source_or_disasm_and_command): Update.
-
-2019-08-16  Alan Hayward  <alan.hayward@arm.com>
-
-	* NEWS (Other MI changes): New subsection.
-	* aarch64-tdep.c (aarch64_get_pc_address_flags): New function.
-	(aarch64_gdbarch_init): Add aarch64_get_pc_address_flags.
-	* arch-utils.c (default_get_pc_address_flags): New function.
-	* arch-utils.h (default_get_pc_address_flags): New declaration.
-	* gdbarch.sh: Add get_pc_address_flags.
-	* gdbarch.c: Regenerate.
-	* gdbarch.h: Likewise.
-	* stack.c (print_pc): New function.
-	(print_frame_info) (print_frame): Call print_pc.
-
-2019-08-16  Tom de Vries  <tdevries@suse.de>
-
-	* maint.c (maintenance_info_sections): Also handle !ALLOBJ case using
-	print_objfile_section_info.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-io.c (tui_puts_internal): Check TUI_CMD_WIN before
-	calling update_cmdwin_start_line.
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<do_make_visible_with_new_height, set_new_height>: Don't declare.
-	<rerender>: Declare.
-	* tui/tui-winsource.c (tui_source_window_base::update_tab_width):
-	Call rerender.
-	(tui_source_window_base::set_new_height): Remove.
-	(tui_source_window_base::rerender): Rename from
-	do_make_visible_with_new_height.
-	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Use
-	resize method.
-	(tui_win_info::make_invisible_and_set_new_height)
-	(tui_win_info::make_visible_with_new_height): Remove.
-	* tui/tui-stack.h (struct tui_locator_window) <rerender>:
-	Declare.
-	* tui/tui-stack.c (tui_locator_window::rerender): New method.
-	* tui/tui-regs.h (struct tui_data_window) <set_new_height,
-	do_make_visible_with_new_height>: Don't declare.
-	<rerender>: Declare.
-	* tui/tui-regs.c (tui_data_window::rerender): Rename from
-	set_new_height.
-	(tui_data_window::do_make_visible_with_new_height): Remove.
-	* tui/tui-layout.c (show_source_disasm_command, show_data): Don't
-	call tui_show_locator_content.
-	(tui_gen_win_info::resize): Call rerender.
-	(show_source_or_disasm_and_command): Don't call
-	tui_show_locator_content.
-	* tui/tui-data.h (struct tui_gen_win_info) <rerender>: New
-	method.
-	(struct tui_win_info) <rerender>: Declare.
-	<set_new_height, make_invisible_and_set_new_height,
-	make_visible_with_new_height>: Don't declare.
-	* tui/tui-data.c (tui_win_list::rerender): New method.
-	* tui/tui-command.h (struct tui_cmd_window)
-	<do_make_visible_with_new_height>: Don't declare.
-	* tui/tui-command.c
-	(tui_cmd_window::do_make_visible_with_new_height): Remove.
-
-2019-08-15  Tom Tromey  <tromey@adacore.com>
-
-	* ada-exp.y (convert_char_literal): Handle "Q%c" encoding.
-	* ada-lang.c (ada_enum_name): Likewise.
-
-2019-08-15  Christian Biesinger  <cbiesinger@google.com>
-
-	* python/lib/gdb/__init__.py (GdbOutputFile): Rename to have a
-	leading underscore.
-	(GdbOutputErrorFile): Likewise.
-	(global scope): Adjust constructor calls to GdbOutput{,Error}File
-	accordingly.
-	(execute_unwinders): Rename to have a leading underscore.
-	(auto_load_packages): Likewise.
-	(global scope): Adjust call to auto_load_packages accordingly.
-	(GdbSetPythonDirectory): Likewise.
-	* python/py-unwind.c (pyuw_sniffer): Call _execute_unwinders
-	instead of execute_unwinders.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_layout, show_source_disasm_command)
-	(show_data): Don't change window visibility.
-	(tui_gen_win_info::resize): Remove special case for command
-	window.  Use wresize, when available.
-	(show_source_or_disasm_and_command): Don't change window
-	visibility.
-	* tui/tui-command.h (struct tui_cmd_window) <resize>: Declare.
-	<make_visible>: New method.
-	* tui/tui-command.c (tui_cmd_window::resize): New method.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_iterator): New.
-	(struct tui_source_windows): New.
-	* tui/tui-winsource.c (tui_display_main): Update.
-	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights)
-	(new_height_ok, parse_scrolling_args): Update.
-	* tui/tui-layout.c (show_layout, show_data): Update.
-	* tui/tui-data.h (tui_source_windows, tui_clear_source_windows)
-	(tui_add_to_source_windows): Don't declare.
-	* tui/tui-data.c (source_windows, tui_source_windows)
-	(tui_clear_source_windows, tui_add_to_source_windows): Remove.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base) <resize>:
-	Rename from reset.
-	* tui/tui-winsource.c (tui_source_window_base::resize): Rename.
-	* tui/tui-layout.c (show_source_disasm_command, show_data):
-	Update.
-	(tui_gen_win_info::resize): Rename.
-	(show_source_or_disasm_and_command): Update.
-	* tui/tui-data.h (struct tui_gen_win_info) <resize>: Rename from
-	reset.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-stack.c (tui_initialize_static_data): Remove.
-	* tui/tui-interp.c (tui_interp::init): Don't call
-	tui_initialize_static_data.
-	* tui/tui-data.h (tui_initialize_static_data): Don't declare.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (tui_default_win_viewport_height): Don't
-	examine tui_win_list.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_clear_source_content): Don't declare.
-	* tui/tui-winsource.c (tui_update_source_window_as_is): Don't call
-	tui_clear_source_content.
-	(tui_clear_source_content): Remove.
-	(tui_source_window_base::do_erase_source_content): Hoist call to
-	content.clear().
-	* tui/tui-stack.c (tui_show_frame_info): Don't call
-	tui_clear_source_content.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<do_erase_source_content>: New method.
-	<erase_source_content>: New method.
-	(tui_erase_source_content): Don't declare.
-	* tui/tui-winsource.c (tui_clear_source_content): Update.
-	(tui_source_window_base::do_erase_source_content): Rename from
-	tui_erase_source_content.
-	(tui_source_window_base::show_source_content): Update.
-	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Update.
-	* tui/tui-source.h (struct tui_source_window)
-	<erase_source_content>: New method.
-	* tui/tui-disasm.h (struct tui_disasm_window)
-	<erase_source_content>: New method.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_alloc_source_buffer): Don't declare.
-	(struct tui_source_element): Add DISABLE_COPY_AND_ASSIGN, and move
-	constructor.
-	* tui/tui-winsource.c (tui_alloc_source_buffer): Remove.
-	* tui/tui-source.c (tui_set_source_content): Update.
-	* tui/tui-disasm.c (tui_set_disassem_content): Update.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_line_is_displayed): Don't declare.
-	* tui/tui-winsource.c (tui_line_is_displayed): Move to
-	tui-source.c.
-	* tui/tui-source.h (struct tui_source_window) <line_is_displayed>:
-	Declare.
-	* tui/tui-source.c (tui_source_window::line_is_displayed): New
-	method.
-	(tui_source_window::maybe_update): Update.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_addr_is_displayed): Don't declare.
-	* tui/tui-winsource.c (tui_addr_is_displayed): Move to
-	tui-disasm.c.
-	* tui/tui-disasm.h (struct tui_disasm_window) <addr_is_displayed>:
-	Declare.
-	* tui/tui-disasm.c (tui_disasm_window::addr_is_displayed): New
-	method.
-	(tui_disasm_window::maybe_update): Update.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<maybe_update>: Declare.
-	* tui/tui-stack.c (tui_show_frame_info): Call maybe_update
-	method.
-	* tui/tui-source.h (struct tui_source_window) <maybe_update>:
-	Declare.
-	* tui/tui-source.c (tui_source_window::maybe_update): New method.
-	* tui/tui-disasm.h (struct tui_disasm_window) <maybe_update>:
-	Declare.
-	* tui/tui-disasm.c (tui_disasm_window::maybe_update): New method.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-stack.c (tui_make_status_line): Use string constructor.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c: Include tui-stack.h.
-	* tui/tui-stack.h (MAX_LOCATOR_ELEMENT_LEN)
-	(struct tui_locator_window): Move from tui-data.h.
-	* tui/tui-stack.c (_locator, tui_locator_win_info_ptr)
-	(tui_initialize_static_data): Move from tui-data.c.
-	* tui/tui-data.h (MAX_LOCATOR_ELEMENT_LEN)
-	(struct tui_locator_window): Move to tui-stack.c.
-	* tui/tui-data.c (_locator, tui_locator_win_info_ptr)
-	(tui_initialize_static_data): Move to tui-stack.c.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_source_disasm_command)
-	(show_source_or_disasm_and_command): Use make_visible method, not
-	tui_make_window.
-	* tui/tui-command.h (struct tui_cmd_window) <make_visible>:
-	Remove.
-
-2019-08-15  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.h (tui_make_window): Update.
-	* tui/tui-wingeneral.c (tui_make_window): Remove "box_it"
-	parameter.
-	(tui_gen_win_info::make_visible): Update.
-	* tui/tui-regs.c (tui_data_window::display_registers_from):
-	Update.
-	* tui/tui-layout.c (show_source_disasm_command)
-	(show_source_or_disasm_and_command): Update.
-	* tui/tui-data.h (struct tui_gen_win_info) <can_box>: New method.
-	(enum tui_box): Remove.
-	(struct tui_win_info) <can_box>: New method.
-	* tui/tui-command.h (struct tui_cmd_window) <can_box>: New
-	method.
-
-2019-08-15  Tom de Vries  <tdevries@suse.de>
-
-	* linux-nat-trad.c: Include gdbarch.h.
-
-2019-08-14  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c (aarch64_analyze_prologue): Allow any valid
-	register sizes.
-
-2019-08-14  Tom Tromey  <tromey@adacore.com>
-
-	* darwin-nat.c: Include gdbarch.h.
-	* darwin-nat-info.c: Include gdbarch.h.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_gen_win_info) <last_visible_line>:
-	Remove.
-	* tui/tui-data.c (tui_initialize_static_data): Update.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_exec_info_window)
-	<~tui_exec_info_window, maybe_allocate_content, get_content,
-	m_content>: Remove.
-	(struct tui_source_window_base) <set_exec_info_content,
-	show_exec_info_content>: Don't declare.
-	* tui/tui-winsource.c
-	(tui_exec_info_window::maybe_allocate_content): Remove.
-	(tui_source_window_base::update_exec_info): Rename from
-	set_exec_info_content.
-	(tui_source_window_base::show_exec_info_content)
-	(tui_source_window_base::update_exec_info): Remove.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_clear_exec_info_content): Don't
-	declare.
-	* tui/tui-winsource.c (tui_update_source_window_as_is)
-	(tui_update_source_windows_with_addr, tui_erase_source_content):
-	Update.
-	(tui_clear_exec_info_content): Remove.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_erase_exec_info_content): Don't
-	declare.
-	* tui/tui-winsource.c (tui_source_window_base::refresh_all): Don't
-	call tui_erase_exec_info_content.
-	(tui_clear_exec_info_content): Rename from
-	tui_erase_exec_info_content.
-	(tui_clear_exec_info_content): Delete.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<show_exec_info_content>: Declare.
-	(tui_show_exec_info_content): Don't declare.
-	* tui/tui-winsource.c
-	(tui_source_window_base::show_exec_info_content): Rename from
-	tui_show_exec_info_content.
-	(tui_source_window_base::update_exec_info): Update.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (enum tui_bp_flag, tui_bp_flags, struct tui_source_element)
-	(TUI_BP_HIT_POS, TUI_BP_BREAK_POS, TUI_EXEC_POS)
-	(TUI_EXECINFO_SIZE, tui_exec_info_content): Move ...
-	* tui/tui-winsource.h (enum tui_bp_flag, tui_bp_flags, struct
-	tui_source_element, TUI_BP_HIT_POS, TUI_BP_BREAK_POS)
-	(TUI_EXEC_POS, TUI_EXECINFO_SIZE, tui_exec_info_content):
-	... here.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<update_exec_info>: Declare.
-	(tui_update_exec_info): Don't declare.
-	* tui/tui-winsource.c (tui_update_source_window_as_is)
-	(tui_source_window_base::refresh_all)
-	(tui_update_all_breakpoint_info): Update.
-	(tui_source_window_base::update_exec_info): Rename from
-	tui_update_exec_info.
-	* tui/tui-stack.c (tui_show_frame_info): Update.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<set_exec_info_content>: Declare.
-	(tui_set_exec_info_content): Don't declare.
-	* tui/tui-winsource.c
-	(tui_source_window_base::set_exec_info_content): Rename from
-	tui_set_exec_info_content.
-	(tui_update_exec_info): Update.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<show_source_content>: Declare.
-	(tui_show_source_content): Don't declare.
-	* tui/tui-winsource.c (tui_update_source_window_as_is): Update.
-	(tui_source_window_base::show_source_content): Rename from
-	tui_show_source_content.
-	(tui_source_window_base::refresh_all): Update.
-	* tui/tui-layout.c (show_source_disasm_command)
-	(show_source_or_disasm_and_command): Update.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_erase_source_content)
-	(tui_show_source_content, tui_source_window_base::refresh_all):
-	Update.
-	* tui/tui-wingeneral.h
-	(tui_check_and_display_highlight_if_needed): Don't declare.
-	* tui/tui-wingeneral.c
-	(tui_win_info::check_and_display_highlight_if_needed): Rename from
-	check_and_display_highlight_if_needed.
-	* tui/tui-win.c (tui_rehighlight_all)
-	(tui_win_info::make_visible_with_new_height): Update.
-	* tui/tui-regs.c (tui_data_window::display_registers_from_line)
-	(tui_data_window::erase_data_content)
-	(tui_data_window::display_all_data): Update.
-	* tui/tui-data.h (struct tui_win_info)
-	<check_and_display_highlight_if_needed>: Declare.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_resize_all): Call
-	tui_delete_invisible_windows.
-	* tui/tui-layout.c (show_layout): Call
-	tui_delete_invisible_windows.
-	* tui/tui-data.h (tui_delete_invisible_windows): Declare.
-	* tui/tui-data.c (tui_delete_invisible_windows): New function.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-disasm.c (tui_show_disassem): Add assertion.  Don't call
-	tui_add_win_to_layout.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.h (tui_default_win_height): Don't declare.
-	* tui/tui-layout.c (tui_default_win_height): Now static.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_layout): Unify all layout cases into a
-	single switch.
-	(show_source_disasm_command, show_source_or_disasm_and_command):
-	Don't check current layout.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (make_all_visible): Remove.
-	(tui_make_all_invisible): Simplify.
-	* tui/tui-layout.c (tui_make_all_invisible): Move from
-	tui-wingeneral.c; simplify.
-	(show_layout): Hoist call to tui_make_all_invisible.
-	(show_data): Don't call tui_make_all_invisible.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.h (tui_make_all_visible): Don't declare.
-	* tui/tui-wingeneral.c (tui_make_all_visible): Remove.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (current_layout, tui_current_layout): Move from
-	tui-data.c.
-	(show_source_disasm_command, show_data)
-	(show_source_or_disasm_and_command): Don't use
-	tui_set_current_layout_to.
-	* tui/tui-data.h (tui_set_current_layout_to): Don't declare.
-	* tui/tui-data.c (current_layout, tui_current_layout): Move to
-	tui-layout.c.
-	(tui_set_current_layout_to): Remove.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (tui_set_layout): Update.
-	* tui/tui-data.h (struct tui_layout_def): Remove.
-	(tui_layout_def): Don't declare.
-	* tui/tui-data.c (layout_def): Remove.
-	(tui_layout_def): Remove.
-
-2019-08-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<clear_detail>: No longer "override".
-	* tui/tui-regs.h (struct tui_data_window) <clear_detail>: Remove.
-	* tui/tui-regs.c (tui_data_window::clear_detail): Remove.
-	* tui/tui-data.h (struct tui_win_info) <clear_detail>: Remove.
-	* tui/tui-command.h (struct tui_cmd_window) <clear_detail>:
-	Remove.
-	* tui/tui-command.c (tui_cmd_window::clear_detail): Remove.
-
-2019-08-13  Tom Tromey  <tromey@adacore.com>
-
-	* tracepoint.c: Don't include readline.h or history.h.
-
-2019-08-12  Tom Tromey  <tom@tromey.com>
-
-	* configure: Rebuild.
-	* configure.ac: Check for readline 7.
-	* NEWS: Mention readline 7 requirement.
-	* README: Update.
-
-2019-08-12  Tom Tromey  <tom@tromey.com>
-
-	* mingw-hdep.c (gdb_select): Remove readline hack.
-
-2019-08-09  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
-
-	* blockframe.c (find_pc_partial_function): Set *block to nullptr
-	when the function fails.
-
-2019-08-09  Andreas Arnez  <arnez@linux.ibm.com>
-
-	* s390-tdep.c (s390_type_align): New function.
-	(s390_gdbarch_init): Set it as type_align gdbarch method.
-
-2019-08-09  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/24591
-	* dwarf2read.c (dwarf2_fetch_die_loc_sect_off): Adjust pc_high and
-	pc_low with relocation offset.
-
-2019-08-07  Tom Tromey  <tromey@adacore.com>
-
-	* stack.c (print_frame_arg, read_frame_local, read_frame_arg)
-	(print_frame_args): Update.
-	* python/py-framefilter.c (py_print_single_arg, enumerate_args):
-	Update.
-	* mi/mi-cmd-stack.c (list_arg_or_local): Update.
-	* frame.h (struct frame_arg): Add initializers.
-	<error>: Now a unique_xmalloc_ptr.
-
-2019-08-07  Alan Hayward  <alan.hayward@arm.com>
-
-	* NEWS: Expand the Pointer Authentication entry.
-	* aarch64-tdep.c (aarch64_frame_unmask_address): Rename from this.
-	(aarch64_frame_unmask_lr): ... to this.
-	(aarch64_prologue_prev_register, aarch64_dwarf2_prev_register):
-	Call aarch64_frame_unmask_lr.
-	* frame.c (struct frame_info): Add "masked" variable.
-	(frame_set_previous_pc_masked) (frame_get_pc_masked): New functions.
-	(fprint_frame): Check for masked pc.
-	* frame.h (frame_set_previous_pc_masked) (frame_get_pc_masked): New
-	declarations.
-	* python/py-framefilter.c (py_print_frame): Check for masked pc.
-	* stack.c (print_frame): Check for masked pc.
-
-2019-08-06  Tom Tromey  <tom@tromey.com>
-
-	* stabsread.c (patch_block_stabs, read_one_struct_field)
-	(read_enum_type): Use obstack_strndup.
-	* rust-exp.y (rust_parser::copy_name): Use obstack_strndup.
-	* gdb_obstack.h (obstack_strndup): Use obstack_strndup.
-	* dwarf2read.c (guess_full_die_structure_name)
-	(anonymous_struct_prefix): Use obstack_strndup.
-	* dbxread.c (cp_set_block_scope): Use obstack_strndup.
-	* c-exp.y (yylex): Use obstack_strndup.
-	* ada-exp.y (write_object_renaming, write_ambiguous_var)
-	(write_var_or_type): Use obstack_strndup.
-
-2019-08-06  Tom Tromey  <tom@tromey.com>
-
-	* symfile.c (reread_symbols): Use obstack_strdup.
-	* stabsread.c (read_type): Use obstack_strdup.
-	* gdb_obstack.h (obstack_strdup): New overload.
-	* dwarf2read.c (dwarf2_compute_name, create_dwo_unit_in_dwp_v1)
-	(create_dwo_unit_in_dwp_v2, build_error_marker_type)
-	(dwarf2_canonicalize_name): Use obstack_strdup.
-	* dbxread.c (read_dbx_symtab): Use obstack_strdup.
-	* cp-support.c (inspect_type, replace_typedefs_qualified_name):
-	Use obstack_strdup.
-
-2019-08-06  Tom Tromey  <tom@tromey.com>
-
-	* gdb_obstack.h (obstack_strdup): Define.
-	* gdb_obstack.c (obstack_strdup): Don't define.
-
-2019-08-06  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (SYMNAME_ALLOC, process_xcoff_symbol): Use
-	obstack_strdup.
-	* typeprint.c (typedef_hash_table::find_global_typedef): Use
-	obstack_strdup.
-	* symfile.c (allocate_compunit_symtab): Use obstack_strdup.
-	* stabsread.c (common_block_start): Use obstack_strdup.
-	* objfiles.c (set_objfile_main_name, objfile): Use
-	obstack_strdup.
-	* namespace.c (add_using_directive): Use obstack_strdup.
-	* mdebugread.c (parse_symbol, parse_type): Use obstack_strdup.
-	* jit.c (finalize_symtab): Use obstack_strdup.
-	* dwarf2read.c (fixup_go_packaging, dwarf2_physname)
-	(guess_partial_die_structure_name, partial_die_info::fixup)
-	(dwarf2_name): Use obstack_strdup.
-	* coffread.c (coff_read_struct_type, coff_read_enum_type): Use
-	obstack_strdup.
-	* c-exp.y (scan_macro_expansion): Use obstack_strdup.
-	* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Use
-	obstack_strdup.
-	* ada-lang.c (ada_decode_symbol): Use obstack_strdup.
-
-2019-08-07  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* unittests/help-doc-selftests.c: New file.
-	* Makefile.in: Add the new file.
-
-2019-08-07  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-decode.h (print_doc_line): Add for_value_prefix argument.
-	* cli/cli-decode.c (print_doc_line): Likewise.  It now prints
-	the full first line, except when FOR_VALUE_PREFIX.  In this case,
-	the trailing '.' is not output, and the first character is uppercased.
-	(print_help_for_command): Update call to print_doc_line.
-	(print_doc_of_command): Likewise.
-	* cli/cli-setshow.c (deprecated_show_value_hack): Likewise.
-	* cli/cli-option.c (append_indented_doc): Do not append newline.
-	(build_help_option): Append newline after first appended_indented_doc
-	only if a second call is done.
-	(build_help): Append 2 new lines before each option, except the first
-	one.
-	* compile/compile.c (_initialize_compile): Add new lines after
-	%OPTIONS%, when not at the end of the help.
-	Change help doc or code
-	producing the help doc to respect the invariants.
-	* maint-test-options.c (_initialize_maint_test_options): Likewise.
-	Also removed the new line after 'Options:', as all other commands
-	do not put an empty line between 'Options:' and the first option.
-	* printcmd.c (_initialize_printcmd): Likewise.
-	* stack.c (_initialize_stack): Likewise.
-	* interps.c (interpreter_exec_cmd): Fix "Usage:" line that was
-	incorrectly telling COMMAND is optional.
-	* ada-lang.c (_initialize_ada_language): Change help doc or code
-	producing the help doc to respect the invariants.
-	* ada-tasks.c (_initialize_ada_tasks): Likewise.
-	* breakpoint.c (_initialize_breakpoint): Likewise.
-	* cli/cli-cmds.c (_initialize_cli_cmds): Likewise.
-	* cli/cli-logging.c (_initialize_cli_logging): Likewise.
-	* cli/cli-setshow.c (_initialize_cli_setshow): Likewise.
-	* cli/cli-style.c (cli_style_option::add_setshow_commands,
-	_initialize_cli_style): Likewise.
-	* corelow.c (core_target_info): Likewise.
-	* dwarf-index-cache.c (_initialize_index_cache): Likewise.
-	* dwarf2read.c (_initialize_dwarf2_read): Likewise.
-	* filesystem.c (_initialize_filesystem): Likewise.
-	* frame.c (_initialize_frame): Likewise.
-	* gnu-nat.c (add_task_commands): Likewise.
-	* infcall.c (_initialize_infcall): Likewise.
-	* infcmd.c (_initialize_infcmd): Likewise.
-	* interps.c (_initialize_interpreter): Likewise.
-	* language.c (_initialize_language): Likewise.
-	* linux-fork.c (_initialize_linux_fork): Likewise.
-	* maint-test-settings.c (_initialize_maint_test_settings): Likewise.
-	* maint.c (_initialize_maint_cmds): Likewise.
-	* memattr.c (_initialize_mem): Likewise.
-	* printcmd.c (_initialize_printcmd): Likewise.
-	* python/lib/gdb/function/strfns.py (_MemEq, _StrLen, _StrEq,
-	_RegEx): Likewise.
-	* ravenscar-thread.c (_initialize_ravenscar): Likewise.
-	* record-btrace.c (_initialize_record_btrace): Likewise.
-	* record-full.c (_initialize_record_full): Likewise.
-	* record.c (_initialize_record): Likewise.
-	* regcache-dump.c (_initialize_regcache_dump): Likewise.
-	* regcache.c (_initialize_regcache): Likewise.
-	* remote.c (add_packet_config_cmd, init_remote_threadtests,
-	_initialize_remote): Likewise.
-	* ser-tcp.c (_initialize_ser_tcp): Likewise.
-	* serial.c (_initialize_serial): Likewise.
-	* skip.c (_initialize_step_skip): Likewise.
-	* source.c (_initialize_source): Likewise.
-	* stack.c (_initialize_stack): Likewise.
-	* symfile.c (_initialize_symfile): Likewise.
-	* symtab.c (_initialize_symtab): Likewise.
-	* target-descriptions.c (_initialize_target_descriptions): Likewise.
-	* top.c (init_main): Likewise.
-	* tracefile-tfile.c (tfile_target_info): Likewise.
-	* tracepoint.c (_initialize_tracepoint): Likewise.
-	* tui/tui-win.c (_initialize_tui_win): Likewise.
-	* utils.c (add_internal_problem_command): Likewise.
-	* valprint.c (value_print_option_defs): Likewise.
-
-2019-08-06  Frank Ch. Eigler  <fche@redhat.com>
-
-	PR build/24886
-	* configure.ac: Drop enable-libmcheck support.
-	* configure, config.in: Rebuild.
-	* libmcheck.m4: Remove.
-	* acinclude.m4: Don't include it.
-	* Makefile.in: Don't distribute it.
-	* top.c (print_gdb_configuration): Don't mention it.
-
-2019-08-06  Tom Tromey  <tom@tromey.com>
-
-	* utils.c (set_output_style): Sometimes pass stream to
-	emit_style_escape.
-	* ui-out.h (class ui_out) <can_emit_style_escape>: Declare.
-	* record-btrace.c (btrace_insn_history): Update.
-	* mi/mi-out.h (class mi_ui_out) <can_emit_style_escape>: New
-	method.
-	* disasm.h (gdb_pretty_print_disassembler): Add uiout parameter.
-	Update initializers.
-	<m_uiout>: New field.
-	<m_di>: Move lower.
-	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):
-	Remove "uiout" parameter.
-	(dump_insns): Update.
-	* cli-out.h (class cli_ui_out) <can_emit_style_escape>: Declare.
-	* cli-out.c (cli_ui_out::can_emit_style_escape): New method.
-
-2019-08-06  Christian Biesinger  <cbiesinger@google.com>
-
-	* symtab.c (symbol_cache_lookup): Change int to enum block_enum.
-	(error_in_psymtab_expansion): Likewise.
-	(lookup_symbol_via_quick_fns): Likewise.
-	(basic_lookup_transparent_type_quick): Likewise.
-	(basic_lookup_transparent_type_1): Likewise.
-
-2019-08-06  Tom Tromey  <tromey@adacore.com>
-
-	* source.c (last_source_error): Now bool.
-	(print_source_lines_base): Make "noprint" bool.  Only open
-	source file when last_source_visited changes.
-
-2019-08-06  Tom Tromey  <tromey@adacore.com>
-
-	* annotate.c (annotate_source_line): Use g_source_cache.
-	* source-cache.c (source_cache::get_plain_source_lines): Change
-	parameters.  Populate m_offset_cache.
-	(source_cache::ensure): New method.
-	(source_cache::get_line_charpos): New method.
-	(extract_lines): Move lower.  Change parameters.
-	(source_cache::get_source_lines): Move lower.
-	* source-cache.h (class source_cache): Update comment.
-	<get_line_charpos>: New method.
-	<get_source_lines>: Update comment.
-	<clear>: Clear m_offset_cache.
-	<get_plain_source_lines>: Change parameters.
-	<ensure>: New method
-	<m_offset_cache>: New member.
-	* source.c (forget_cached_source_info_for_objfile): Update.
-	(info_source_command): Use g_source_cache.
-	(find_source_lines, open_source_file_with_line_charpos): Remove.
-	(print_source_lines_base, search_command_helper): Use g_source_cache.
-	* source.h (open_source_file_with_line_charpos): Don't declare.
-	* symtab.h (struct symtab) <nlines, line_charpos>: Remove.
-	* tui/tui-source.c (tui_source_window::do_scroll_vertical):
-	Use g_source_cache.
-
-2019-08-06  Tom Tromey  <tromey@adacore.com>
-
-	* source-cache.c (source_cache::get_plain_source_lines):
-	Remove "first_line" and "last_line" parameters.
-	(source_cache::get_source_lines): Cache plain text.
-	* source-cache.h (class source_cache)
-	<get_plain_source_lines>: Update.
-
-2019-08-06  Tom Tromey  <tromey@adacore.com>
-
-	* source-cache.c (extract_lines): No longer a method.
-	Changed type of parameter.  Include final newline.
-	(selftests::extract_lines_test): New function.
-	(_initialize_source_cache): Likewise.
-	* source-cache.h (class source_cache)
-	<extract_lines>: Don't declare.
-
-2019-08-06  Tom Tromey  <tromey@adacore.com>
-
-	* breakpoint.c (init_breakpoint_sal): Update.
-	(breakpoint): Update.
-	* breakpoint.h (struct breakpoint) <filter>: Now a
-	unique_xmalloc_ptr.
-
-2019-08-05  Christian Biesinger  <cbiesinger@google.com>
-
-	* NEWS: Mention dictionary access on blocks.
-	* python/py-block.c (blpy_getitem): New function.
-	(block_object_as_mapping): New struct.
-	(block_object_type): Use new struct for tp_as_mapping field.
-
-2019-08-05  Christian Biesinger  <cbiesinger@google.com>
-
-	* objfiles.h (objfile): Add a comment describing partial symbols.
-
-2019-08-05  Tom Tromey  <tromey@adacore.com>
-
-	* compile/compile.c (_initialize_compile): Use _(), not N_().
-	* thread.c (_initialize_thread): Use _(), not N_().
-	* stack.c (_initialize_stack): Use _(), not N_().
-	* printcmd.c (_initialize_printcmd): Use _(), not N_().
-
-2019-08-04  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2read.c (struct dw2_symtab_iterator):
-	<want_specific_block>: Remove.
-	<block_index>: Change type to gdb::optional.
-	(dw2_symtab_iter_init): Remove WANT_SPECIFIC_BLOCK parameter,
-	change type of BLOCK_INDEX parameter to gdb::optional.
-	(dw2_symtab_iter_next): Re-write in function of gdb::optional.
-	(dw2_lookup_symbol): Don't pass argument for
-	WANT_SPECIFIC_BLOCK.
-	(dw2_expand_symtabs_for_function): Don't pass argument for
-	WANT_SPECIFIC_BLOCK, pass empty optional for BLOCK_INDEX.
-	(class dw2_debug_names_iterator)
-	<dw2_debug_names_iterator>: Remove WANT_SPECIFIC_BLOCK
-	parameter, change BLOCK_INDEX type to gdb::optional.
-	<m_want_specific_block>: Remove.
-	<m_block_index>: Change type to gdb::optional.
-	(dw2_debug_names_iterator::next): Change type of IS_STATIC to
-	gdb::optional.  Re-write in function of gdb::optional.
-	(dw2_debug_names_lookup_symbol): Don't pass argument for
-	WANT_SPECIFIC_BLOCK.
-	(dw2_debug_names_expand_symtabs_for_function): Don't pass
-	argument for WANT_SPECIFIC_BLOCK, pass empty optional for
-	BLOCK_INDEX.
-
-2019-08-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-        * NEWS: Mention changes to "info sources" command.
-
-2019-08-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* symtab.c (filename_partial_match_opts): New struct type.
-	(struct output_source_filename_data): New members
-	regexp, c_regexp, partial_match.
-	(output_source_filename): Use new members to decide to print file.
-	(info_sources_option_defs): New variable.
-	(make_info_sources_options_def_group, print_info_sources_header,
-	info_sources_command_completer):
-	New functions.
-	(info_sources_command): Read new optional arguments.
-	(_initialize_symtab): Update info sources help.
-
-2019-08-02  Alexandre Oliva <oliva@adacore.com>
-
-	* ada-lang.c (exception_support_info_v0): Renamed from...
-	(default_exception_support_info): ... this.  Create new
-	definition for v1.
-	(ada_has_this_exception_support): Look up catch_handlers_sym.
-	(ada_exception_support_info_sniffer): Try v0 after default.
-
-2019-08-01  Tom Tromey  <tromey@adacore.com>
-
-	* ia64-libunwind-tdep.h (struct libunwind_descr): Include
-	gdbarch.h.
-
-2019-08-01  Christian Biesinger  <cbiesinger@google.com>
-
-	* s12z-tdep.c: Fix include path for s12z-opc.h.
-
-2019-08-01  Alan Hayward  <alan.hayward@arm.com>
-
-	* NEWS: Require GNU make 3.82.
-
-2019-07-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.h (tui_copy_win, tui_box_win): Don't
-	declare.
-
-2019-07-30  Tom Tromey  <tromey@adacore.com>
-
-	* block.c (contained_in): Remove BLOCK_FUNCTION check.
-
-2019-07-30  Kevin Buettner  <kevinb@redhat.com>
-
-	* printcmd.c (print_address_symbolic): Print negative offsets.
-	(build_address_symbolic): Force signed arithmetic when computing
-	offset.
-
-2019-07-30  Christian Biesinger  <cbiesinger@google.com>
-
-	PR/24474: Add a function to lookup static variables.
-	* NEWS: Mention this new function.
-	* python/py-symbol.c (gdbpy_lookup_static_symbol): New function.
-	* python/python-internal.h (gdbpy_lookup_static_symbol): New function.
-	* python/python.c (python_GdbMethods): Add new function.
-
-2019-07-29  Christian Biesinger  <cbiesinger@google.com>
-
-	* NEWS: Mention new functions Objfile.lookup_{global,static}_symbol.
-	* python/py-objfile.c (objfpy_lookup_global_symbol): New function.
-	(objfpy_lookup_static_symbol): New function.
-	(objfile_object_methods): Add new functions.
-
-2019-07-29  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Mention 'set|show print frame-info'.  Mention new
-	'presence' value for 'frame-arguments'.  Mention new '-frame-info'
-	backtrace argument.  Mention that python frame filtering code
-	is now consistent with what 'backtrace' command prints.
-
-2019-07-29  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* frame.h (enum print_what): New value 'SHORT_LOCATION', update
-	comments.
-	(print_frame_info_auto, print_frame_info_source_line,
-	print_frame_info_location, print_frame_info_source_and_location,
-	print_frame_info_location_and_address, print_frame_info_short_location):
-	New declarations.
-	(struct frame_print_options): New member print_frame_info.
-	* extension.h (enum ext_lang_frame_args): New value CLI_PRESENCE.
-	* stack.h (get_user_print_what_frame_info): New declaration.
-	(frame_show_address): New declaration.
-	* stack.c (print_frame_arguments_choices): New value 'presence'.
-	(print_frame_info_auto, print_frame_info_source_line,
-	print_frame_info_location, print_frame_info_source_and_location,
-	print_frame_info_location_and_address, print_frame_info_short_location,
-	print_frame_info_choices, print_frame_info_print_what): New definitions.
-	(print_frame_args): Only print dots for args if print frame-arguments
-	is 'presence'.
-	(frame_print_option_defs): New element for "frame-info".
-	(get_user_print_what_frame_info): New function.
-	(frame_show_address): Make non static.  Move comment to stack.h.
-	(print_frame_info_to_print_what): New function.
-	(print_frame_info): Update comment.  Use fp_opts.print_frame_info
-	to decide what to print.
-	(backtrace_command_1): Handle the new print_frame_arguments_presence
-	value.
-	(_initialize_stack): Call add_setshow_enum_cmd for frame-info.
-	* python/py-framefilter.c (py_print_args): Handle CLI_PRESENCE.
-	(py_print_frame): In non-mi mode, use LOCATION as default for
-	print_what, similarly to frame information printed directly by
-	backtrace command. Handle frame-info user option in non MI mode.
-
-2019-07-27  Kevin Buettner  <kevinb@redhat.com>
-
-	* linux-thread-db.c (thread_db_target::thread_handle_to_thread_info):
-	Add case for debugging 32-bit target on 64-bit host.  Revise
-	comment.
-
-2019-07-27  Kevin Buettner  <kevinb@redhat.com>
-
-	* infrun.c (fill_in_stop_func): Use find_pc_partial_function
-	instead of find_function_entry_range_from_pc.
-
-2019-07-27  Kevin Buettner  <kevinb@redhat.com>
-
-	* stack.c (find_frame_funname): Remove code which preferred
-	minsym over symtab sym in "certain pathological cases".
-
-	* valprint.h (build_address_symbolic): Add "prefer_sym_over_minsym"
-	parameter.  Change type of "do_demangle" to bool.
-	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):
-	Pass suitable "prefer_sym_over_minsym" flag to
-	build_address_symbolic().  Don't output "+" for negative offsets.
-	* printcmd.c (print_address_symbolic): Update invocation of
-	build_address_symbolic to include a "prefer_sym_over_minsym"
-	flag.
-	(build_address_symbolic): Add "prefer_sym_over_minsym" parameter.
-	Restrict cases in which use of minimal symbol is preferred to that
-	of a found symbol.  Update comments.
-
-	* dwarf2-frame.c (dwarf2_frame_cache): Don't decode FDE instructions
-	for entry pc when entry pc is out of range for that FDE.
-
-2019-07-26  Brian Callahan  <bcallah@openbsd.org>
-
-	PR gdb/24839:
-	* gdb/obsd-nat.c (obsd_nat_target::pid_to_str): Fix typo in return
-	type.
-
-2019-07-25  Christian Biesinger  <cbiesinger@google.com>
-
-	* python/py-objfile.c (add_separate_debug_file): Fix comment about
-	this function's Python signature.
-
-
-2019-07-24  Christian Biesinger  <cbiesinger@google.com>
-
-	* compile/compile-object-load.c (compile_object_load): Pass GLOBAL_SCOPE.
-	* solib-spu.c (spu_lookup_lib_symbol): Pass GLOBAL_SCOPE.
-	* solib-svr4.c (elf_lookup_lib_symbol): Pass GLOBAL_SCOPE.
-	* symtab.c (lookup_global_symbol_from_objfile): Add a scope parameter.
-	* symtab.h (lookup_global_symbol_from_objfile): Likewise.
-
-
-2019-07-24  Yoshinori Sato  <ysato@users.sourceforge.jp>
-
-	* h8300-tdep.c (h8300_register_name_common): New.
-	h8300_register_name): Use h8300_register_name_common.
-	(h8300s_register_name): Likewise.
-	(h8300sx_register_name): Likewise.
-	(h8300h_register_nam): New.
-	(h8300_gdbarch_init): Use h8300h_register_name in h8300h machine.
-
-
-2019-07-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* arm-tdep.c (arm_skip_cmse_entry): New function.
-	(arm_is_sgstubs_section): New function.
-	(arm_skip_stub): Add call to arm_skip_cmse_entry function.
-
-2019-07-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_win_info::make_invisible_and_set_new_height):
-	Don't self-assign.
-
-2019-07-22  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* c-typeprint.c (c_print_typedef): Pass -1 instead of 0 to
-	type_print.
-
-2019-07-22  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* symtab.c (search_symbols): Adjust msymbol matching type arrays
-	so that GDB doesn't match any msymbols when searching in the
-	TYPES_DOMAIN.
-	(print_symbol_info): Print using typedef_print or type_print based
-	on the type of the symbol.  Add updated FIXME comment moved from...
-	(_initialize_symtab): ... move and update FIXME comment to above.
-
-2019-07-22  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* NEWS: Mention adding -q option to "info types".
-	* symtab.c (struct info_types_options): New struct.
-	(info_types_options_defs): New variable.
-	(make_info_types_options_def_group): New function.
-	(info_types_command): Use gdb::option framework to parse options.
-	(info_types_command_completer): New function.
-	(_initialize_symtab): Extend the help text on "info types" and
-	register command completer.
-
-2019-07-21  Christian Biesinger  <cbiesinger@google.com>
-
-	* symtab.c (lookup_symbol_in_objfile_symtabs): Change int to block_enum.
-	(lookup_symbol_in_objfile): Change int to block_enum and add a
-	gdb_assert to make sure block_index is GLOBAL_BLOCK or STATIC_BLOCK.
-
-2019-07-20  Christian Biesinger  <cbiesinger@google.com>
-
-	* MAINTAINERS (Write After Approval): Add self.
-
-2019-07-19  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_push_dummy_code): Write a 4-byte nop
-	instruction to the dummy code region.
-
-2019-07-19  Tom Tromey  <tromey@adacore.com>
-
-	* contrib/ari/gdb_ari.sh: Mention C++11, not ISO C 90.
-	(ARGSUSED, PARAMS, __func__): Remove rules.
-
-2019-07-19  Alan Hayward  <alan.hayward@arm.com>
-
-	* arm-tdep.c (_initialize_arm_tdep): Remove xml tests.
-	* features/arm/arm-with-iwmmxt.c: Remove.
-	* features/arm/arm-with-iwmmxt.xml: Remove.
-	* features/arm/arm-with-m-fpa-layout.c: Remove.
-	* features/arm/arm-with-m-fpa-layout.xml: Remove.
-	* features/arm/arm-with-m-vfp-d16.c: Remove.
-	* features/arm/arm-with-m-vfp-d16.xml: Remove.
-	* features/arm/arm-with-m.c: Remove.
-	* features/arm/arm-with-m.xml: Remove.
-	* features/arm/arm-with-neon.c: Remove.
-	* features/arm/arm-with-neon.xml: Remove.
-	* features/arm/arm-with-vfpv2.c: Remove.
-	* features/arm/arm-with-vfpv2.xml: Remove.
-	* features/arm/arm-with-vfpv3.c: Remove.
-	* features/arm/arm-with-vfpv3.xml: Remove.
-
-2019-07-19  Alan Hayward  <alan.hayward@arm.com>
-
-	* arm-tdep.c (_initialize_arm_tdep): Add xml regression tests.
-
-2019-07-19  Alan Hayward  <alan.hayward@arm.com>
-
-	* arch/aarch32.c (aarch32_create_target_description): Create
-	target descriptions using features.
-	* arch/arm.c (arm_create_target_description)
-	(arm_create_mprofile_target_description): Likewise.
-	* arm-tdep.c (_initialize_arm_tdep): Remove tdesc init calls.
-
-2019-07-19  Alan Hayward  <alan.hayward@arm.com>
-
-	* Makefile.in: Add new files.
-	* aarch32-tdep.c: New file.
-	* aarch32-tdep.h: New file.
-	* aarch64-linux-nat.c (aarch64_linux_nat_target::read_description):
-	Call aarch32_read_description.
-	* arch/aarch32.c: New file.
-	* arch/aarch32.h: New file.
-	* arch/arm.c (arm_create_target_description)
-	(arm_create_mprofile_target_description): New function.
-	* arch/arm.h (arm_fp_type, arm_m_profile_type): New enum.
-	(arm_create_target_description)
-	(arm_create_mprofile_target_description): New declaration.
-	* arm-fbsd-tdep.c (arm_fbsd_read_description_auxv): Call
-	read_description functions.
-	* arm-linux-nat.c (arm_linux_nat_target::read_description):
-	Likewise.
-	* arm-linux-tdep.c (arm_linux_core_read_description): Likewise.
-	* arm-tdep.c (tdesc_arm_list): New variable.
-	(arm_register_g_packet_guesses): Call create description functions.
-	(arm_read_description) (arm_read_mprofile_description): New
-	function.
-	* arm-tdep.h (arm_read_description)
-	(arm_read_mprofile_description): Add declaration.
-	* configure.tgt: Add new files.
-
-2019-07-18  Guillaume LABARTHE  <guillaume.labarthe@gmail.com>
-
-	* top.c (new_ui_command): Open specified terminal just once.
-
-2019-07-18  Tom Tromey  <tromey@adacore.com>
-
-	* symtab.c (main_name): Constify return type.
-	* symfile.c (set_initial_language): Update.
-	* symtab.h (main_name): Constify return type.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_update_source_window)
-	(tui_update_source_window_as_is)
-	(tui_update_source_windows_with_line): Remove return.
-	* tui/tui-disasm.c (tui_show_disassem)
-	(tui_show_disassem_and_update_source): Remove return.
-	* tui/tui.c (tui_reset): Remove return.
-	* tui/tui-wingeneral.c
-	(tui_check_and_display_highlight_if_needed): Remove return.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (parse_scrolling_args): Throw separate errors.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_exec_info_window)
-	(struct tui_source_window_base): Move from tui-data.h.
-	* tui/tui-winsource.c: Move many method definitions from
-	elsewhere.  Remove "structuring" comments.
-	* tui/tui-wingeneral.c (tui_source_window_base::make_visible)
-	(tui_source_window_base::refresh_window): Move to
-	tui-winsource.c.
-	* tui/tui-win.c (tui_source_window_base::refresh_all)
-	(tui_source_window_base::update_tab_width)
-	(tui_source_window_base::set_new_height)
-	(tui_source_window_base::do_make_visible_with_new_height): Move to
-	tui-winsource.c.
-	* tui/tui-source.h: Update.
-	* tui/tui-source.c (tui_source_window_base::reset): Move to
-	tui-winsource.c.
-	* tui/tui-disasm.h: Update.
-	* tui/tui-data.h (struct tui_exec_info_window): Move to
-	tui-winsource.h.
-	(struct tui_source_window_base): Likewise.
-	* tui/tui-data.c (tui_source_window_base::clear_detail)
-	(tui_source_window_base, ~tui_source_window_base): Move to
-	tui-winsource.c.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_resize_all)
-	(tui_source_window_base::update_tab_width)
-	(tui_adjust_win_heights): Update.
-	(tui_win_info::make_invisible_and_set_new_height): Rename from
-	make_invisible_and_set_new_height.
-	* tui/tui-data.h (struct tui_win_info)
-	<make_invisible_and_set_new_height>: New method.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c: Update.
-	* tui/tui-source.h (struct tui_source_window): Move from
-	tui-data.h.
-	* tui/tui-layout.c: Update.
-	* tui/tui-disasm.c: Update.
-	* tui/tui-data.h (struct tui_source_window): Move to
-	tui-source.h.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-disasm.h (struct tui_disasm_window): Move from
-	tui-data.h.
-	* tui/tui-data.h (struct tui_disasm_window): Move to
-	tui-disasm.h.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (struct tui_data_item_window): Move from
-	tui-data.h.
-	* tui/tui-regs.c (tui_data_item_window): Move from tui-data.c.
-	* tui/tui-data.h (struct tui_data_item_window): Move to
-	tui-regs.h.
-	* tui/tui-data.c (~tui_data_item_window): Move to tui-regs.c.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c: Update.
-	* tui/tui-win.c (tui_cmd_window::do_make_visible_with_new_height)
-	(tui_cmd_window::max_height): Move to tui-command.c.
-	* tui/tui-layout.c: Update.
-	* tui/tui-data.h (struct tui_cmd_window): Move to tui-command.h.
-	* tui/tui-data.c (tui_cmd_window::clear_detail): Move to
-	tui-command.c.
-	* tui/tui-command.h (struct tui_cmd_window): Move from
-	tui-data.h.
-	* tui/tui-command.c: Remove "structuring" comments.
-	(tui_cmd_window::clear_detail)
-	(tui_cmd_window::do_make_visible_with_new_height)
-	(tui_cmd_window::max_height): Move from elsewhere.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-io.c (tui_dispatch_ctrl_char): Move from tui-command.c.
-	Now static.
-	* tui/tui-command.h (tui_dispatch_ctrl_char): Don't declare.
-	* tui/tui-command.c (tui_dispatch_ctrl_char): Move to tui-io.c.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c: Update.
-	* tui/tui-wingeneral.c (tui_data_window::refresh_window): Move to
-	tui-regs.c.
-	* tui/tui-windata.h: Remove file.
-	* tui/tui-windata.c: Remove file.
-	* tui/tui-win.c (tui_data_window::set_new_height)
-	(tui_data_window::do_make_visible_with_new_height): Move to
-	tui-regs.c.
-	* tui/tui-regs.h (struct tui_data_window): Move from tui-data.h.
-	* tui/tui-regs.c: Remove "structuring" comments.
-	(tui_data_window::first_data_item_displayed)
-	(tui_data_window::delete_data_content_windows)
-	(tui_data_window::erase_data_content)
-	(tui_data_window::display_all_data)
-	(tui_data_window::refresh_all)
-	(tui_data_window::do_scroll_vertical)
-	(tui_data_window::clear_detail, tui_data_window::set_new_height)
-	(tui_data_window::do_make_visible_with_new_height)
-	(tui_data_window::refresh_window): Move from elsewhere.
-	(_initialize_tui_regs): Move to end of file.
-	* tui/tui-layout.c: Update.
-	* tui/tui-hooks.c: Update.
-	* tui/tui-data.h (struct tui_data_window): Move to tui-regs.h.
-	* tui/tui-data.c (tui_data_window::clear_detail): Move to
-	tui-regs.c.
-	* Makefile.in (SUBDIR_TUI_SRCS): Remove tui-windata.c.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-io.c (tui_puts_internal): Call wrefresh if newline is
-	seen.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_source_window_base::set_new_height)
-	(tui_source_window_base::do_make_visible_with_new_height): Use
-	m_has_locator field directly.
-	* tui/tui-data.h (struct tui_win_info) <has_locator>: Remove
-	method.
-	(struct tui_source_window_base) <has_locator>: Likewise.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.h (tui_make_visible, tui_make_invisible):
-	Don't declare.
-	* tui/tui-wingeneral.c (tui_make_visible, tui_make_invisible):
-	Remove.
-	* tui/tui-win.c (tui_source_window_base::set_new_height)
-	(tui_source_window_base::set_new_height)
-	(make_invisible_and_set_new_height)
-	(tui_source_window_base::do_make_visible_with_new_height)
-	(tui_source_window_base::do_make_visible_with_new_height):
-	Update.
-	* tui/tui-layout.c (show_source_disasm_command, show_data)
-	(show_source_or_disasm_and_command): Update.
-	* tui/tui-layout.c (show_layout): Update.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (make_data_window): Remove.
-	(show_data): Unify creation and re-initialization cases.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (make_source_window, make_disasm_window):
-	Remove.
-	(show_data): Unify creation and re-initialization cases.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (make_command_window): Remove.
-	(show_source_disasm_command, show_source_or_disasm_and_command):
-	Unify creation and re-initialization cases.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_source_or_disasm_and_command): Unify
-	creation and re-initialization cases.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_get_register): Return void.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_gen_win_info::make_visible):
-	Simplify.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_source_disasm_command): Simplify window
-	resetting.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.h (tui_set_layout_by_name): Don't declare.
-	* tui/tui-regs.c (tui_reg_layout): New function.
-	(tui_show_registers, tui_reg_command): Use it.
-	* tui/tui-layout.c (LAYOUT_USAGE): Remove.
-	(tui_layout_command): Rename from tui_set_layout_by_name.  Change
-	parameters.
-	(tui_layout_command): Remove.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.h (tui/tui-layout): Return void.
-	* tui/tui-layout.c (tui_set_layout): Return void.  Add assert.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_source_disasm_command, show_data):
-	Update.
-	(reset_locator): Remove.
-	(show_source_or_disasm_and_command): Update.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-source.c (tui_source_window_base::reset): Remove
-	win_type parameter.
-	* tui/tui-layout.c (make_command_window, make_source_window)
-	(make_disasm_window, make_data_window)
-	(show_source_disasm_command, show_data, tui_gen_win_info::reset)
-	(reset_locator, show_source_or_disasm_and_command): Update.
-	* tui/tui-data.h (struct tui_gen_win_info) <reset>: Remove
-	win_type parameter.
-	(struct tui_source_window_base) <reset>: Likewise.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_source_disasm_command): Use
-	reset_locator.
-	(reset_locator): New function.
-	(init_and_make_win): Remove.
-	(show_source_or_disasm_and_command): Use reset_locator.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_set_exec_info_content): Remove
-	condition.
-	* tui/tui-wingeneral.c (tui_source_window_base::make_visible):
-	Remove condition.
-	* tui/tui-source.c (tui_source_window_base::reset): New method.
-	* tui/tui-layout.c (make_command_window): Don't call
-	init_and_make_win.
-	(make_source_window, make_disasm_window): Don't call
-	make_source_or_disasm_window.
-	(make_data_window): Don't call init_and_make_win.  Change calling
-	convention.
-	(show_source_disasm_command, show_data): Simplify.
-	(make_source_or_disasm_window): Remove.
-	(show_source_or_disasm_and_command): Simplify.
-	* tui/tui-data.h (struct tui_gen_win_info) <reset>: Now virtual.
-	(struct tui_source_window_base) <reset>: Likewise.
-	<execution_info>: Remove initializer.
-	* tui/tui-data.c (tui_source_window_base): Initialize
-	execution_info.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (tui_set_layout): Remove regs_populate
-	variable.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c (tui_rl_other_window): Update.
-	* tui/tui-wingeneral.c (tui_data_window::refresh_window): Call
-	superclass method first.  Always iterate over regs_content.
-	(tui_unhighlight_win, tui_highlight_win): Use refresh_window
-	method.
-	* tui/tui-win.c (tui_set_focus_command): Update.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_set_focus_command): Rename from
-	tui_set_focus.  Call tui_enable.
-	(tui_set_focus_command): Remove.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_show_exec_info_content): Don't call
-	refresh_window.
-	* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window): Call
-	touchwin.
-	(tui_data_window::refresh_window): Call refresh_window on data
-	items.  Always call superclass refresh_window.
-	(tui_win_info::refresh): Remove.
-	(tui_source_window_base::refresh_window): Update.
-	(tui_refresh_all): Update.
-	* tui/tui-layout.c (show_source_disasm_command): Remove call to
-	refresh_window.
-	(show_source_or_disasm_and_command): Likewise.
-	* tui/tui-data.h (struct tui_win_info) <refresh>: Remove.
-	(struct tui_source_window_base) <refresh>: Likewise.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_clear_source_content)
-	(tui_show_source_content): Update.
-	* tui/tui-source.c (tui_source_window::showing_source_p): Check
-	whether content is empty.
-	* tui/tui-data.h (struct tui_source_window_base) <content_in_use>:
-	Remove.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_erase_source_content): Clear the
-	window's contents.
-	* tui/tui-source.h (tui_set_source_content_nil): Don't declare.
-	* tui/tui-source.c (tui_set_source_content_nil): Remove.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (UNDEFINED_ITEM): Remove define.
-	(struct tui_data_item_window): Update.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (MAX_CONTENT_COUNT, TUI_NULL_STR)
-	(DEFAULT_HISTORY_COUNT, WITH_LOCATOR, NO_LOCATOR): Remove
-	defines.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_erase_source_content)
-	(tui_clear_source_content): Remove "display_prompt" parameter.
-	* tui/tui-winsource.c (tui_update_source_window_as_is)
-	(tui_update_source_windows_with_addr): Update.
-	(tui_clear_source_content): Remove "display_prompt" parameter.
-	(tui_erase_source_content): Likewise.  Simplify.
-	(tui_show_source_content): Update.
-	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Update.
-	* tui/tui-stack.c (tui_show_frame_info): Update.
-	* tui/tui-data.h (EMPTY_SOURCE_PROMPT, NO_EMPTY_SOURCE_PROMPT):
-	Remove defines.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_update_source_window_as_is): Update.
-	* tui/tui-disasm.h (tui_set_disassem_content): Add win_info
-	parameter.
-	* tui/tui-disasm.c (tui_set_disassem_content): Add win_info
-	parameter.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_clear_source_content)
-	(tui_show_source_content, tui_show_exec_info_content)
-	(tui_clear_exec_info_content): Update.
-	* tui/tui-stack.c (tui_show_locator_content): Update.
-	(tui_show_frame_info): Update.
-	* tui/tui-source.h (tui_source_window): Don't declare.
-	* tui/tui-source.c (tui_source_window::showing_source_p): Rename
-	from tui_source_is_displayed.
-	* tui/tui-data.h (struct tui_gen_win_info) <content_in_use>:
-	Remove field.
-	(struct tui_source_window_base) <content_in_use>: New field.  Now
-	bool.
-	(struct tui_source_window) <showing_source_p>: New method.
-	(TUI_SRC_WIN): Change cast.
-	* tui/tui-data.c (tui_initialize_static_data): Update.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_update_breakpoint_info): Use
-	location_matches_p.
-	* tui/tui-source.c (tui_source_window::location_matches_p): New
-	method.
-	* tui/tui-disasm.c (tui_disasm_window::location_matches_p): New
-	method.
-	* tui/tui-data.h (struct tui_source_window_base)
-	<location_matches_p>: New method.
-	(struct tui_source_window, struct tui_disasm_window)
-	<location_matches_p>: Likewise.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_set_win_height_command): Rename from
-	tui_set_win_height.
-	(tui_set_win_height_command): Remove.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-source.c (tui_source_window): New constructor.  Add
-	observer.
-	(~tui_source_window): New destructor.
-	(tui_source_window::style_changed): New method.
-	* tui/tui-hooks.c (tui_redisplay_source): Remove.
-	(tui_attach_detach_observers): Update.
-	* tui/tui-data.h (struct tui_source_window): Make constructor not
-	inline.  Add destructor.
-	(struct tui_source_window) <style_changed>: New method.
-	<m_observable>: New member.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.c (tui_clear_source_windows_detail): Fix typo.
-	* tui/tui-win.c (tui_resize_all): Fix typo.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.h (tui_refresh_all): Update.
-	* tui/tui-wingeneral.c (make_all_visible): Use foreach.
-	(tui_refresh_all): Remove "list" parameter.  Use foreach.
-	* tui/tui-win.c (window_name_completer): Use foreach.
-	(tui_refresh_all_win, tui_rehighlight_all, tui_all_windows_info)
-	(update_tab_width): Likewise.
-	* tui/tui-layout.c (show_layout): Update.
-	* tui/tui-data.h (class tui_window_iterator): New.
-	(struct all_tui_windows): New.
-	* tui/tui-data.c (tui_partial_win_by_name): Use foreach.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_reg_next, tui_reg_prev): Add "current_group"
-	parameter.  Don't reference globals.
-	(tui_reg_command): Update.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_show_registers): Simplify.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_show_registers): Update.
-	(tui_show_register_group): Add win_info parameter.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_data_window::display_reg_element_at_line):
-	Rename from tui_display_reg_element_at_line.
-	(tui_data_window::display_registers_from_line): Update.
-	* tui/tui-data.h (struct tui_data_window)
-	<display_reg_element_at_line>: New method.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (tui_display_registers_from)
-	(tui_display_registers_from_line): Don't declare.
-	* tui/tui-windata.c (tui_data_window::display_all_data)
-	(tui_data_window::refresh_all)
-	(tui_data_window::do_scroll_vertical): Update.
-	* tui/tui-regs.c (tui_data_window::display_registers_from): Rename
-	from tui_display_registers_from.
-	(tui_display_reg_element_at_line): Update.
-	(tui_data_window::display_registers_from_line): Rename from
-	tui_display_registers_from_line.
-	* tui/tui-data.h (struct tui_data_window) <display_registers_from,
-	display_registers_from_line>: New methods.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.h (tui_erase_data_content): Don't declare.
-	* tui/tui-windata.c (tui_data_window::erase_data_content): Rename
-	from tui_erase_data_content.
-	(tui_data_window::display_all_data)
-	(tui_data_window::refresh_all)
-	(tui_data_window::do_scroll_vertical): Update.
-	* tui/tui-regs.c (tui_show_registers): Update.
-	* tui/tui-data.h (struct tui_data_window) <erase_data_content>:
-	New method.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.h (tui_delete_data_content_windows): Don't
-	declare.
-	* tui/tui-windata.c
-	(tui_data_window::delete_data_content_windows): Rename from
-	tui_delete_data_content_windows.
-	(tui_data_window::display_all_data)
-	(tui_data_window::do_scroll_vertical): Update.
-	* tui/tui-data.h (struct tui_data_window)
-	<delete_data_content_windows>: New method.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.h (tui_refresh_data_win): Don't declare.
-	* tui/tui-regs.h (tui_first_reg_element_inline): Don't declare.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.h (tui_display_all_data): Don't declare.
-	* tui/tui-windata.c (tui_data_window::display_all_data): Rename
-	from tui_display_all_data.
-	* tui/tui-win.c
-	(tui_data_window::do_make_visible_with_new_height): Update.
-	* tui/tui-regs.c (tui_show_registers): Update.
-	* tui/tui-layout.c (tui_set_layout): Update.
-	* tui/tui-data.h (struct tui_data_window) <display_all_data>: New
-	method.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.h (tui_display_data_from): Don't declare.
-	* tui/tui-windata.c (tui_display_data_from): Remove.
-	(tui_data_window::refresh_all): Update.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.h (tui_display_data_from_line): Don't declare.
-	* tui/tui-windata.c (tui_display_data_from_line): Remove.
-	(tui_display_data_from, tui_data_window::do_scroll_vertical): Call
-	tui_display_registers_from_line.
-	* tui/tui-regs.h (tui_display_registers_from_line): Update.
-	* tui/tui-regs.c (tui_display_registers_from_line): Remove
-	"force_display" parameter.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (tui_first_reg_element_no_inline): Don't
-	declare.
-	* tui/tui-regs.c (tui_data_window::first_reg_element_no_inline):
-	Rename from tui_first_reg_element_no_inline.
-	(tui_display_reg_element_at_line)
-	(tui_display_registers_from_line): Update.
-	* tui/tui-data.h (struct tui_data_window)
-	<first_reg_element_no_inline>: New method.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.c (tui_display_data_from)
-	(tui_data_window::do_scroll_vertical): Update.
-	* tui/tui-regs.h (tui_line_from_reg_element_no): Don't declare.
-	* tui/tui-regs.c (tui_data_window::line_from_reg_element_no):
-	Rename from tui_line_from_reg_element_no.
-	(tui_display_registers_from_line): Update.
-	* tui/tui-data.h (struct tui_data_window)
-	<line_from_reg_element_no>: New method.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.h (tui_last_regs_line_no): Don't declare.
-	* tui/tui-regs.c (tui_data_window::last_regs_line_no): Rename from
-	tui_last_regs_line_no.
-	(tui_display_reg_element_at_line)
-	(tui_display_registers_from_line): Update.
-	* tui/tui-data.h (struct tui_data_window) <last_regs_line_no>: New
-	method.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	PR tui/24722:
-	* tui/tui-winsource.h (tui_update_all_breakpoint_info)
-	(tui_update_breakpoint_info): Add "being_deleted" parameter.
-	* tui/tui-winsource.c (tui_update_source_window_as_is): Update.
-	(tui_update_all_breakpoint_info): Add "being_deleted" parameter.
-	(tui_update_breakpoint_info): Likewise.
-	* tui/tui-hooks.c (tui_event_create_breakpoint)
-	(tui_event_delete_breakpoint, tui_event_modify_breakpoint):
-	Update.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-stack.c (tui_show_frame_info): Consolidate "if"s.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_update_source_window_as_is)
-	(tui_update_source_windows_with_addr): Update.
-	* tui/tui-source.h (tui_set_source_content)
-	(tui_show_symtab_source): Add "win_info" parameter.
-	* tui/tui-source.c (tui_set_source_content): Add "win_info"
-	parameter.
-	(tui_show_symtab_source): Likewise.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c
-	(tui_check_and_display_highlight_if_needed): Check can_highlight.
-
-2019-07-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_win_info) <can_scroll>: New method.
-	(struct tui_cmd_window) <can_scroll>: New method.
-	* tui/tui-command.c (tui_dispatch_ctrl_char): Use can_scroll
-	method.
-
-2019-07-17  Tom Tromey  <tromey@adacore.com>
-
-	* ui-out.h (class ui_out) <field_signed, field_fmt_signed,
-	do_field_signed>: Rename.  Change type of "value".
-	* ui-out.c (ui_out::field_signed): Rename from field_int.
-	Change type of "value".
-	(ui_out::field_fmt_signed): Rename from field_fmt_int.  Change
-	type of "value".
-	* tui/tui-out.h (class tui_ui_out) <do_field_signed>: Rename from
-	do_field_int.  Change type of "value".
-	* tui/tui-out.c (tui_ui_out::do_field_signed): Rename from
-	do_field_int.  Change type of "value".
-	* tracepoint.c (trace_status_mi, tfind_1)
-	(print_one_static_tracepoint_marker): Update.
-	* thread.c (print_thread_info_1, print_selected_thread_frame):
-	Update.
-	* stack.c (print_frame, print_frame_info): Update.
-	* spu-tdep.c (info_spu_signal_command, info_spu_dma_cmdlist):
-	Update.
-	* source.c (print_source_lines_base): Update.
-	* skip.c (info_skip_command): Update.
-	* record-btrace.c (btrace_ui_out_decode_error)
-	(btrace_call_history_src_line): Update.
-	* python/py-framefilter.c (py_print_single_arg, py_print_frame):
-	Update.
-	* progspace.c (print_program_space): Update.
-	* mi/mi-symbol-cmds.c (mi_cmd_symbol_list_lines): Update.
-	* mi/mi-out.h (class mi_ui_out) <do_field_signed>: Rename from
-	do_field_int.  Change type of "value".
-	* mi/mi-out.c (mi_ui_out::do_table_begin)
-	(mi_ui_out::do_table_header): Update.
-	(mi_ui_out::do_field_signed): Rename from do_field_int.  Change
-	type of "value".
-	* mi/mi-main.c (mi_cmd_thread_list_ids, print_one_inferior)
-	(mi_cmd_data_list_changed_registers, output_register)
-	(mi_cmd_data_read_memory, mi_load_progress)
-	(mi_cmd_trace_frame_collected): Update.
-	* mi/mi-interp.c (mi_on_normal_stop_1, mi_output_solib_attribs):
-	Update.
-	* mi/mi-cmd-var.c (print_varobj, mi_cmd_var_create)
-	(mi_cmd_var_delete, mi_cmd_var_info_num_children)
-	(mi_cmd_var_list_children, varobj_update_one): Update.
-	* mi/mi-cmd-stack.c (mi_cmd_stack_info_depth)
-	(mi_cmd_stack_list_args, list_arg_or_local): Update.
-	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_file): Update.
-	* inferior.c (print_inferior): Update.
-	* gdb_bfd.c (print_one_bfd): Update.
-	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):
-	Update.
-	* darwin-nat-info.c (darwin_debug_regions_recurse): Update.
-	* cli-out.h (class cli_ui_out) <do_field_signed>: Rename from
-	do_field_int.  Change type of "value".
-	* cli-out.c (cli_ui_out::do_field_signed): Rename from
-	do_field_int.  Change type of "value".
-	* breakpoint.c (watchpoint_check, print_breakpoint_location)
-	(print_one_breakpoint_location, print_it_catch_fork)
-	(print_one_catch_fork, print_it_catch_vfork)
-	(print_one_catch_vfork, print_it_catch_solib)
-	(print_it_catch_exec, print_it_ranged_breakpoint)
-	(print_mention_watchpoint, print_mention_masked_watchpoint)
-	(bkpt_print_it, update_static_tracepoint): Update.
-	* break-catch-throw.c (print_it_exception_catchpoint): Update.
-	* break-catch-syscall.c (print_it_catch_syscall): Update.
-	* ada-tasks.c (print_ada_task_info): Update.
-	* ada-lang.c (print_it_exception, print_mention_exception):
-	Update.
-
-2019-07-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	PR breakpoints/24541
-	* gdbarch.c: Regenerate.
-	* gdbarch.h: Regenerate.
-	* gdbarch.sh: Adjust return type and parameter types for
-	'stap_adjust_register'.
-	(i386_stap_adjust_register): Adjust signature and return new
-	register name.
-	* stap-probe.c (stap_parse_register_operand): Adjust use of
-	'gdbarch_stap_adjust_register'.
-
-2019-07-17  Tom Tromey  <tromey@adacore.com>
-
-	* s390-linux-nat.c (s390_watch_area): Remove typedef.  Don't
-	declare VEC.
-	(struct s390_debug_reg_state) <watch_areas, break_areas>: Now
-	std::vector.
-	(struct s390_process_info): Add initializers.
-	(s390_add_process): Use new.
-	(s390_linux_nat_target::low_forget_process): Use delete.
-	(s390_linux_nat_target::low_new_fork)
-	(s390_linux_nat_target::stopped_by_watchpoint)
-	(s390_linux_nat_target::low_prepare_to_resume)
-	(s390_linux_nat_target::insert_watchpoint)
-	(s390_linux_nat_target::insert_hw_breakpoint)
-	(s390_linux_nat_target::remove_watchpoint)
-	(s390_linux_nat_target::remove_hw_breakpoint): Update.
-
-2019-07-16  John Baldwin  <jhb@FreeBSD.org>
-
-	* aarch64-fbsd-nat.c: Include regcache.h.
-	(getregs_supplies, getfpregs_supplies): Remove unused gdbarch
-	argument.
-	(aarch64_fbsd_nat_target::fetch_registers)
-	(aarch64_fbsd_nat_target::store_registers): Remove gdbarch
-	variable.
-	* arm-fbsd-nat.c, riscv-fbsd-nat.c: Likewise.
-
-2019-07-16  John Baldwin  <jhb@FreeBSD.org>
-
-	* fbsd-nat.c: Include gdbarch.h.
-
-2019-07-15  Tom Tromey  <tromey@adacore.com>
-
-	* mi/mi-out.c (mi_ui_out::do_field_int): Use plongest.
-
-2019-07-15  Tom Tromey  <tromey@adacore.com>
-
-	* mi/mi-out.h (class mi_ui_out) <do_field_unsigned>: Declare.
-	* mi/mi-out.c (mi_ui_out::do_field_unsigned): New method.
-	* cli-out.h (class cli_ui_out) <do_field_unsigned>: Declare.
-	* cli-out.c (cli_ui_out::do_field_int): New method.
-	* ui-out.c (ui_out::field_unsigned): New method.
-	* symfile.c (generic_load): Use field_unsigned.
-	(print_transfer_performance): Likewise.
-	* record-btrace.c (ui_out_field_uint): Remove.
-	(btrace_call_history_insn_range, btrace_call_history): Use
-	field_unsigned.
-	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn): Use
-	field_unsigned.
-	* ui-out.h (class ui_out) <field_unsigned>: New method.
-	<do_field_unsigned>: Likewise.
-
-2019-07-15  Tom Tromey  <tromey@adacore.com>
-
-	* mi/mi-main.c (list_available_thread_groups): Use field_string.
-	* mi/mi-interp.c (mi_memory_changed): Use field_string.
-	* target.c (flash_erase_command): Use field_string.
-	* infrun.c (print_signal_received_reason): Use field_string.
-	* i386-tdep.c (i386_mpx_print_bounds): Use field_string.
-	* breakpoint.c (maybe_print_thread_hit_breakpoint): Use
-	field_string.
-	* ada-tasks.c (print_ada_task_info): Use field_string.
-
-2019-07-15  Tom Tromey  <tromey@adacore.com>
-
-	* target.c (flash_erase_command): Use field_core_addr.
-	* symfile.c (generic_load): Use field_core_addr.
-	* sparc64-linux-tdep.c (sparc64_linux_handle_segmentation_fault):
-	Use field_core_addr.
-	* i386-linux-tdep.c (i386_linux_handle_segmentation_fault): Use
-	field_core_addr.
-
-2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf2loc.c (dwarf2_evaluate_property): Sign extend property
-	value if its desired type is smaller than a CORE_ADDR and signed.
-
-2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf2loc.c (dwarf2_evaluate_property): Update to take account
-	of changes to field names, and use new is_reference field to
-	decide if a property is a reference or not.
-	* dwarf2loc.h (struct dwarf2_locexpr_baton): Add 'is_reference'
-	field.
-	(struct dwarf2_property_baton): Update header comment, rename
-	'referenced_type' to 'property_type' and update comments.
-	* dwarf2read.c (attr_to_dynamic_prop): Add extra parameter to hold
-	default property type, store in property baton, update to take
-	accound of renamed field.
-	(read_func_scope): Update call to attr_to_dynamic_prop.
-	(read_array_type): Likewise.
-	(dwarf2_per_cu_addr_sized_int_type): New function.
-	(read_subrange_index_type): Move type finding code to
-	dwarf2_per_cu_addr_sized_int_type.
-	(read_subrange_type): Update calls to attr_to_dynamic_prop.
-	(dwarf2_per_cu_addr_type): New function.
-	(set_die_type): Update calls to attr_to_dynamic_prop.
-
-2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf2read.c (read_subrange_index_type): New function.
-	(read_subrange_type): Move code into new function and call it.
-	* gdbtypes.c (create_range_type): Add some asserts.
-
-2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf2loc.c (dwarf2_evaluate_property): Change return type, and
-	update return statements.
-	* dwarf2loc.h (dwarf2_evaluate_property): Update return type on
-	declaration, and update comment to match.
-	* gdbtypes.c (resolve_dynamic_array): Update call to
-	dwarf2_evaluate_property to match new return type.
-
-2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* valarith.c (value_subscripted_rvalue): Change lowerbound
-	parameter type from int to LONGEST.
-	* value.h (value_subscripted_rvalue): Likewise in declaration.
-
-2019-07-11  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* cli/cli-utils.c (info_print_command_completer): New function.
-	* cli/cli-utils.h: Add 'completer.h' include, and forward
-	declaration for 'struct cmd_list_element'.
-	(info_print_command_completer): Declare.
-	* stack.c (_initialize_stack): Add completer for 'info locals' and
-	'info args'.
-	* symtab.c (_initialize_symtab): Add completer for 'info
-	variables' and 'info functions'.
-	* NEWS: Mention completion for additional info commands.
-
-2019-07-11  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* cli/cli-utils.c (extract_info_print_args): Delete.
-	(extract_arg_maybe_quoted): Delete.
-	(info_print_options_defs): New variable.
-	(make_info_print_options_def_group): New function.
-	(extract_info_print_options): Define new function.
-	* cli/cli-utils.h (extract_info_print_args): Delete.
-	(struct info_print_options): New structure.
-	(extract_info_print_options): Declare new function.
-	* stack.c (info_locals_command): Update to use new
-	extract_info_print_options, also add a header comment.
-	(info_args_command): Likewise.
-	* symtab.c (info_variables_command): Likewise.
-	(info_functions_command): Likewise.
-
-2019-07-11  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* cli/cli-option.c (parse_option): Use extract_string_maybe_quoted
-	to extract string arguments.
-	* common/common-utils.c (extract_string_maybe_quoted): New function.
-	* common/common-utils.h (extract_string_maybe_quoted): Declare.
-
-2019-07-11  Tom Tromey  <tromey@adacore.com>
-
-	* main.c (get_init_files): Use GDBINIT, not gdbinit.
-	* auto-load.c (file_is_auto_load_safe): Use GDBINIT, not gdbinit.
-	* top.h (gdbinit): Don't declare.
-	* cli/cli-cmds.c (init_cli_cmds): Remove, merging contents
-	into...
-	(_initialize_cli_cmds): ...here.  Use GDBINIT, not gdbinit.
-	* top.c (gdb_init): Don't call init_cli_cmds.
-	(gdbinit): Remove.
-	* cli/cli-cmds.h (init_cli_cmds): Don't declare.
-
-2019-07-11  Tom Tromey  <tromey@adacore.com>
-
-	* python/py-inferior.c (add_thread_object): Don't use thread_obj
-	after it has been moved.
-
-2019-07-10  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* valops.c (value_must_coerce_to_target): Change return type to
-	bool.
-	* value.h (value_must_coerce_to_target): Likewise.
-
-2019-07-10  Simon Marchi  <simon.marchi@efficios.com>
-
-	* breakpoint.c (is_hardware_watchpoint): Remove
-	forward-declaration.
-	(is_masked_watchpoint): Change return type to bool.
-	(is_tracepoint): Likewise.
-	(is_breakpoint): Likewise.
-	(is_hardware_watchpoint): Likewise.
-	(is_watchpoint): Likewise.
-	(is_no_memory_software_watchpoint): Likewise.
-	(is_catchpoint): Likewise.
-	(breakpoint_1): Make FILTER parameter's return type bool.
-	is_masked_watchpoint): Change return type to bool.
-	(save_breakpoints): Make FILTER parameter's return type bool.
-	* breakpoint.h (is_breakpoint): Change return type to bool.
-	(is_watchpoint): Likewise.
-	(is_catchpoint): Likewise.
-	(is_tracepoint): Likewise.
-
-2019-07-10  Tom Tromey  <tom@tromey.com>
-
-	* defs.h: Don't include gdbarch.h.
-	* aarch64-ravenscar-thread.c, aarch64-tdep.c, alpha-bsd-tdep.h,
-	alpha-linux-tdep.c, alpha-mdebug-tdep.c, arch-utils.h, arm-tdep.h,
-	ax-general.c, btrace.c, buildsym-legacy.c, buildsym.h, c-lang.c,
-	cli/cli-decode.h, cli/cli-dump.c, cli/cli-script.h,
-	cli/cli-style.h, coff-pe-read.h, compile/compile-c-support.c,
-	compile/compile-cplus.h, compile/compile-loc2c.c, corefile.c,
-	cp-valprint.c, cris-linux-tdep.c, ctf.c, d-lang.c, d-namespace.c,
-	dcache.c, dicos-tdep.c, dictionary.c, disasm-selftests.c,
-	dummy-frame.c, dummy-frame.h, dwarf2-frame-tailcall.c,
-	dwarf2expr.c, expression.h, f-lang.c, frame-base.c,
-	frame-unwind.c, frv-linux-tdep.c, gdbarch-selftests.c, gdbtypes.h,
-	go-lang.c, hppa-nbsd-tdep.c, hppa-obsd-tdep.c, i386-dicos-tdep.c,
-	i386-tdep.h, ia64-vms-tdep.c, interps.h, language.c,
-	linux-record.c, location.h, m2-lang.c, m32r-linux-tdep.c,
-	mem-break.c, memattr.c, mn10300-linux-tdep.c, nios2-linux-tdep.c,
-	objfiles.h, opencl-lang.c, or1k-linux-tdep.c, p-lang.c,
-	parser-defs.h, ppc-tdep.h, probe.h, python/py-record-btrace.c,
-	record-btrace.c, record.h, regcache-dump.c, regcache.h,
-	riscv-fbsd-tdep.c, riscv-linux-tdep.c, rust-exp.y,
-	sh-linux-tdep.c, sh-nbsd-tdep.c, source-cache.c,
-	sparc-nbsd-tdep.c, sparc-obsd-tdep.c, sparc-ravenscar-thread.c,
-	sparc64-fbsd-tdep.c, std-regs.c, target-descriptions.h,
-	target-float.c, tic6x-linux-tdep.c, tilegx-linux-tdep.c, top.c,
-	tracefile.c, trad-frame.c, type-stack.h, ui-style.c, utils.c,
-	utils.h, valarith.c, valprint.c, varobj.c, x86-tdep.c,
-	xml-support.h, xtensa-linux-tdep.c, cli/cli-cmds.h: Update.
-	* s390-linux-nat.c, procfs.c, inf-ptrace.c: Likewise.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.h (is_ada_exception_catchpoint): Declare.
-	* breakpoint.c (init_ada_exception_breakpoint): Register as
-	bp_catchpoint.
-	(print_one_breakpoint_location, print_one_breakpoint): Use
-	is_ada_exception_catchpoint.
-	* ada-lang.c (class ada_catchpoint_location): Pass
-	bp_loc_software_breakpoint to bp_location constructor.
-	(is_ada_exception_catchpoint): New function.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* arm-tdep.c (arm_exidx_entry_s): Remove typedef.  Don't define
-	VEC.
-	(struct arm_exidx_entry): New method operator<.
-	(struct arm_exidx_data) <section_maps>: Change type.
-	(arm_exidx_data_free): Remove.
-	(arm_exidx_data_key): Change type.  Move lower.
-	(arm_exidx_new_objfile): Update.
-	(arm_compare_exidx_entries): Remove.
-	(arm_find_exidx_entry, _initialize_arm_tdep)
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* solib-spu.c (ocl_program_data_key): Change type.
-	(append_ocl_sos, ocl_enable_break, _initialize_spu_solib):
-	Update.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* solib-aix.c (lm_info_aix_p): Remove typedef.  Don't define VEC.
-	(struct solib_aix_inferior_data) <library_list>: Change type.
-	(solib_aix_inferior_data_handle): Change type.
-	(get_solib_aix_inferior_data): Update.
-	(solib_aix_free_library_list): Remove.
-	(library_list_start_library): Update.
-	(solib_aix_parse_libraries, solib_aix_get_library_list): Change
-	return type.
-	(solib_aix_get_library_list)
-	(solib_aix_solib_create_inferior_hook, solib_aix_current_sos)
-	(solib_aix_normal_stop_observer, _initialize_solib_aix): Update.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* solib-dsbt.c (struct dsbt_info): Add initializers.
-	(solib_dsbt_pspace_data): Change type.
-	(dsbt_pspace_data_cleanup): Remove.
-	(get_dsbt_info, _initialize_dsbt_solib): Update.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* spu-tdep.c (spu_overlay_data): Change type.
-	(spu_get_overlay_table, spu_overlay_new_objfile)
-	(_initialize_spu_tdep): Update.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* gdb-stabs.h (struct dbx_symfile_info): Add initializers and
-	destructor.
-	(dbx_objfile_data_key): Change type and declare later.
-	(DBX_SYMFILE_INFO): Rewrite.
-	* dbxread.c (dbx_objfile_data_key): Change type.
-	(dbx_symfile_init): Update.
-	(~dbx_symfile_info): Rename from dbx_free_symfile_info.  Update.
-	(coffstab_build_psymtabs, elfstab_build_psymtabs)
-	(stabsect_build_psymtabs, _initialize_dbxread): Update.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* jit.c (jit_program_space_key): Change type.  Move lower.
-	(get_jit_program_space_data): Update.
-	(jit_program_space_data_cleanup): Remove.
-	(jit_breakpoint_deleted, free_objfile_data, _initialize_jit):
-	Update.
-	(struct jit_program_space_data): Add initializers.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* solib-darwin.c (struct darwin_info): Add initializers.
-	(solib_darwin_pspace_data): Change type.
-	(darwin_pspace_data_cleanup): Remove.
-	(get_darwin_info, _initialize_darwin_solib): Update.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* remote-sim.c (struct sim_inferior_data): Add initializers,
-	constructor, and destructor.
-	(sim_inferior_data_key): Change type.  Move lower.
-	(check_for_duplicate_sim_descriptor): Update.
-	(get_sim_inferior_data): Use new.  Update.
-	(~sim_inferior_data_cleanup): Rename from
-	sim_inferior_data_cleanup.  Simplify.
-	(gdbsim_close_inferior, simulator_command)
-	(sim_command_completer, _initialize_remote_sim): Update.
-	(next_pid, INITIAL_PID): Move earlier.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* python/python-internal.h (create_thread_object): Return
-	gdbpy_ref.
-	* python/py-infthread.c (create_thread_object): Return gdbpy_ref.
-	* python/py-inferior.c (struct threadlist_entry): Add
-	constructor.
-	<thread_obj>: Now a gdbpy_ref.
-	(thread_to_thread_object): Update.
-	(add_thread_object): Use new.
-	(delete_thread_object): Use delete.
-	(infpy_threads): Update.
-	(py_free_inferior): Update.  Construct "inf_obj" after acquiring
-	GIL.
-
-2019-07-10  Tom Tromey  <tromey@adacore.com>
-
-	* valops.c (value_cast): Specialize error message for Ada.
-
-2019-07-10  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* breakpoint.c (breakpoint_1): Update doc and parameter names.
-
-2019-07-10  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* breakpoint.h (bpstat_explains_signal, bpstat_causes_stop,
-	bpstat_should_step): Return bool, adjust comments.
-	* breakpoint.c (bpstat_explains_signal, bpstat_causes_stop,
-	bpstat_should_step): Likewise.
-
-2019-07-10  Alan Hayward  <alan.hayward@arm.com>
-
-	* features/Makefile: Use feature target descriptions for Arm.
-	* features/arm/arm-core.c: Generate new file.
-	* features/arm/arm-fpa.c: Likewise.
-	* features/arm/arm-m-profile-with-fpa.xml: Likewise.
-	* features/arm/arm-m-profile.c: Likewise.
-	* features/arm/arm-vfpv2.c: Likewise.
-	* features/arm/arm-vfpv3.c: Likewise.
-	* features/arm/xscale-iwmmxt.c: Likewise.
-	* target-descriptions.c (maint_print_c_tdesc_cmd): Add Arm.
-
-2019-07-10  Alan Hayward  <alan.hayward@arm.com>
-
-	* arm-linux-nat.c (arm_linux_nat_target::read_description): Check
-	ptrace earlier.
-
-2019-07-10  Alan Hayward  <alan.hayward@arm.com>
-
-	* features/aarch64-pauth.c: Regenerate.
-
-2019-07-09  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* breakpoint.h (struct bpstat_what) <is_longjmp>: Change type to
-	bool.
-	(bpstat_what): Use false instead of 0.
-
-2019-07-09  Pedro Alves  <palves@redhat.com>
-
-	* break-catch-throw.c (is_exception_catchpoint): New.
-	* breakpoint.c (print_one_breakpoint_location): New parameter
-	'raw_loc'.  Handle it.  Use
-	is_watchpoint/is_catchpoint/is_exception_catchpoint instead of
-	looking at the breakpoint's type.
-	(print_one_breakpoint): If handling "maint info breakpoints", also
-	print locations of exception catchpoints.
-	* breakpoint.h (is_exception_catchpoint): Declare.
-
-2019-07-09  Pedro Alves  <palves@redhat.com>
-
-	* break-catch-throw.c (print_one_exception_catchpoint): Skip the
-	"addr" field.
-	(allocate_location_exception_catchpoint): New.
-	(handle_gnu_v3_exceptions): Don't reset 'type' to bp_breakpoint.
-	(initialize_throw_catchpoint_ops): Install
-	allocate_location_exception_catchpoint as allocate_location
-	method.
-	* breakpoint.c (bpstat_what) <bp_catch>: Set action to
-	BPSTAT_WHAT_SINGLE if not stopping and the location's type is not
-	bp_loc_other.
-	(breakpoint_address_is_meaningful): Delete.
-	(bl_address_is_meaningful): New.
-	(breakpoint_locations_match): Adjust comment.
-	(bp_location_from_bp_type): New, factored out of...
-	(bp_location::bp_location(breakpoint *)): ... this.
-	(bp_location::bp_location(breakpoint *, bp_loc_type)): New,
-	factored out of...
-	(bp_location::bp_location(breakpoint *)): ... this.  Reimplement.
-	(bp_loc_is_permanent): Use bl_address_is_meaningful instead of
-	breakpoint_address_is_meaningful.
-	(bp_locations_compare): Adjust comment.
-	(update_global_location_list): Use bl_address_is_meaningful
-	instead of breakpoint_address_is_meaningful.
-	* breakpoint.h (bp_location::bp_location(breakpoint *)): New
-	explicit.
-	(bp_location::bp_location(breakpoint *, bp_loc_type)): Declare.
-	* python/py-breakpoint.c (bppy_get_location): No longer check
-	whether location is null.
-
-2019-07-09  Pedro Alves  <palves@redhat.com>
-
-	PR c++/15468
-	* breakpoint.c (print_one_breakpoint_location): Remove
-	single-location assert.
-
-2019-07-09  Tom Tromey  <tom@tromey.com>
-
-	* contrib/ari/gdb_ari.sh: Change common to gdbsupport.
-	* configure: Rebuild.
-	* configure.ac: Change common to gdbsupport.
-	* gdbsupport: Rename from common.
-	* acinclude.m4: Change common to gdbsupport.
-	* Makefile.in (CONFIG_SRC_SUBDIR, COMMON_SFILES)
-	(HFILES_NO_SRCDIR, stamp-version, ALLDEPFILES): Change common to
-	gdbsupport.
-	* aarch64-tdep.c, ada-lang.c, ada-lang.h, agent.c, alloc.c,
-	amd64-darwin-tdep.c, amd64-dicos-tdep.c, amd64-fbsd-nat.c,
-	amd64-fbsd-tdep.c, amd64-linux-nat.c, amd64-linux-tdep.c,
-	amd64-nbsd-tdep.c, amd64-obsd-tdep.c, amd64-sol2-tdep.c,
-	amd64-tdep.c, amd64-windows-tdep.c, arch-utils.c,
-	arch/aarch64-insn.c, arch/aarch64.c, arch/aarch64.h, arch/amd64.c,
-	arch/amd64.h, arch/arm-get-next-pcs.c, arch/arm-linux.c,
-	arch/arm.c, arch/i386.c, arch/i386.h, arch/ppc-linux-common.c,
-	arch/riscv.c, arch/riscv.h, arch/tic6x.c, arm-tdep.c, auto-load.c,
-	auxv.c, ax-gdb.c, ax-general.c, ax.h, breakpoint.c, breakpoint.h,
-	btrace.c, btrace.h, build-id.c, build-id.h, c-lang.h, charset.c,
-	charset.h, cli/cli-cmds.c, cli/cli-cmds.h, cli/cli-decode.c,
-	cli/cli-dump.c, cli/cli-option.h, cli/cli-script.c,
-	coff-pe-read.c, command.h, compile/compile-c-support.c,
-	compile/compile-c.h, compile/compile-cplus-symbols.c,
-	compile/compile-cplus-types.c, compile/compile-cplus.h,
-	compile/compile-loc2c.c, compile/compile.c, completer.c,
-	completer.h, contrib/ari/gdb_ari.sh, corefile.c, corelow.c,
-	cp-support.c, cp-support.h, cp-valprint.c, csky-tdep.c, ctf.c,
-	darwin-nat.c, debug.c, defs.h, disasm-selftests.c, disasm.c,
-	disasm.h, dtrace-probe.c, dwarf-index-cache.c,
-	dwarf-index-cache.h, dwarf-index-write.c, dwarf2-frame.c,
-	dwarf2expr.c, dwarf2loc.c, dwarf2read.c, event-loop.c,
-	event-top.c, exceptions.c, exec.c, extension.h, fbsd-nat.c,
-	features/aarch64-core.c, features/aarch64-fpu.c,
-	features/aarch64-pauth.c, features/aarch64-sve.c,
-	features/i386/32bit-avx.c, features/i386/32bit-avx512.c,
-	features/i386/32bit-core.c, features/i386/32bit-linux.c,
-	features/i386/32bit-mpx.c, features/i386/32bit-pkeys.c,
-	features/i386/32bit-segments.c, features/i386/32bit-sse.c,
-	features/i386/64bit-avx.c, features/i386/64bit-avx512.c,
-	features/i386/64bit-core.c, features/i386/64bit-linux.c,
-	features/i386/64bit-mpx.c, features/i386/64bit-pkeys.c,
-	features/i386/64bit-segments.c, features/i386/64bit-sse.c,
-	features/i386/x32-core.c, features/riscv/32bit-cpu.c,
-	features/riscv/32bit-csr.c, features/riscv/32bit-fpu.c,
-	features/riscv/64bit-cpu.c, features/riscv/64bit-csr.c,
-	features/riscv/64bit-fpu.c, features/tic6x-c6xp.c,
-	features/tic6x-core.c, features/tic6x-gp.c, filename-seen-cache.h,
-	findcmd.c, findvar.c, fork-child.c, gcore.c, gdb_bfd.c, gdb_bfd.h,
-	gdb_proc_service.h, gdb_regex.c, gdb_select.h, gdb_usleep.c,
-	gdbarch-selftests.c, gdbthread.h, gdbtypes.h, gnu-nat.c,
-	go32-nat.c, guile/guile.c, guile/scm-ports.c,
-	guile/scm-safe-call.c, guile/scm-type.c, i386-fbsd-nat.c,
-	i386-fbsd-tdep.c, i386-go32-tdep.c, i386-linux-nat.c,
-	i386-linux-tdep.c, i386-tdep.c, i387-tdep.c,
-	ia64-libunwind-tdep.c, ia64-linux-nat.c, inf-child.c,
-	inf-ptrace.c, infcall.c, infcall.h, infcmd.c, inferior-iter.h,
-	inferior.c, inferior.h, inflow.c, inflow.h, infrun.c, infrun.h,
-	inline-frame.c, language.h, linespec.c, linux-fork.c, linux-nat.c,
-	linux-tdep.c, linux-thread-db.c, location.c, machoread.c,
-	macrotab.h, main.c, maint.c, maint.h, memattr.c, memrange.h,
-	mi/mi-cmd-break.h, mi/mi-cmd-env.c, mi/mi-cmd-stack.c,
-	mi/mi-cmd-var.c, mi/mi-interp.c, mi/mi-main.c, mi/mi-parse.h,
-	minsyms.c, mips-linux-tdep.c, namespace.h,
-	nat/aarch64-linux-hw-point.c, nat/aarch64-linux-hw-point.h,
-	nat/aarch64-linux.c, nat/aarch64-sve-linux-ptrace.c,
-	nat/amd64-linux-siginfo.c, nat/fork-inferior.c,
-	nat/linux-btrace.c, nat/linux-btrace.h, nat/linux-namespaces.c,
-	nat/linux-nat.h, nat/linux-osdata.c, nat/linux-personality.c,
-	nat/linux-procfs.c, nat/linux-ptrace.c, nat/linux-ptrace.h,
-	nat/linux-waitpid.c, nat/mips-linux-watch.c,
-	nat/mips-linux-watch.h, nat/ppc-linux.c, nat/x86-dregs.c,
-	nat/x86-dregs.h, nat/x86-linux-dregs.c, nat/x86-linux.c,
-	nto-procfs.c, nto-tdep.c, objfile-flags.h, objfiles.c, objfiles.h,
-	obsd-nat.c, observable.h, osdata.c, p-valprint.c, parse.c,
-	parser-defs.h, ppc-linux-nat.c, printcmd.c, probe.c, proc-api.c,
-	procfs.c, producer.c, progspace.h, psymtab.h,
-	python/py-framefilter.c, python/py-inferior.c, python/py-ref.h,
-	python/py-type.c, python/python.c, record-btrace.c, record-full.c,
-	record.c, record.h, regcache-dump.c, regcache.c, regcache.h,
-	remote-fileio.c, remote-fileio.h, remote-sim.c, remote.c,
-	riscv-tdep.c, rs6000-aix-tdep.c, rust-exp.y, s12z-tdep.c,
-	selftest-arch.c, ser-base.c, ser-event.c, ser-pipe.c, ser-tcp.c,
-	ser-unix.c, skip.c, solib-aix.c, solib-target.c, solib.c,
-	source-cache.c, source.c, source.h, sparc-nat.c, spu-linux-nat.c,
-	stack.c, stap-probe.c, symfile-add-flags.h, symfile.c, symfile.h,
-	symtab.c, symtab.h, target-descriptions.c, target-descriptions.h,
-	target-memory.c, target.c, target.h, target/waitstatus.c,
-	target/waitstatus.h, thread-iter.h, thread.c, tilegx-tdep.c,
-	top.c, top.h, tracefile-tfile.c, tracefile.c, tracepoint.c,
-	tracepoint.h, tui/tui-io.c, ui-file.c, ui-out.h,
-	unittests/array-view-selftests.c,
-	unittests/child-path-selftests.c, unittests/cli-utils-selftests.c,
-	unittests/common-utils-selftests.c,
-	unittests/copy_bitwise-selftests.c, unittests/environ-selftests.c,
-	unittests/format_pieces-selftests.c,
-	unittests/function-view-selftests.c,
-	unittests/lookup_name_info-selftests.c,
-	unittests/memory-map-selftests.c, unittests/memrange-selftests.c,
-	unittests/mkdir-recursive-selftests.c,
-	unittests/observable-selftests.c,
-	unittests/offset-type-selftests.c, unittests/optional-selftests.c,
-	unittests/parse-connection-spec-selftests.c,
-	unittests/ptid-selftests.c, unittests/rsp-low-selftests.c,
-	unittests/scoped_fd-selftests.c,
-	unittests/scoped_mmap-selftests.c,
-	unittests/scoped_restore-selftests.c,
-	unittests/string_view-selftests.c, unittests/style-selftests.c,
-	unittests/tracepoint-selftests.c, unittests/unpack-selftests.c,
-	unittests/utils-selftests.c, unittests/xml-utils-selftests.c,
-	utils.c, utils.h, valarith.c, valops.c, valprint.c, value.c,
-	value.h, varobj.c, varobj.h, windows-nat.c, x86-linux-nat.c,
-	xml-support.c, xml-support.h, xml-tdesc.h, xstormy16-tdep.c,
-	xtensa-linux-nat.c, dwarf2read.h: Change common to gdbsupport.
-
-2019-07-09  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* linespec.c (decode_digits_list_mode): Set explicit_line to a
-	bool value.
-	(decode_digits_ordinary): Set explicit_line field in sal.
-	* symtab.c (skip_prologue_sal): Don't skip prologue for a
-	symtab_and_line that was set on an explicit line number in
-	assembler code.  Do always update the recorded symtab and line if
-	we do skip the prologue.
-
-2019-07-09  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* breakpoint.c (set_breakpoint_location_function): Remove
-	explicit_loc parameter.
-	(momentary_breakpoint_from_master): Update call to
-	set_breakpoint_location_function.
-	(add_location_to_breakpoint): Likewise.
-
-2019-07-09  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_features_from_gdbarch_info): Don't modify
-	required features based on default bfd type when no specific bfd
-	is present.
-
-2019-07-08  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Mention that GDB printf and eval commands can now print
-	C-style and Ada-style convenience var strings without
-	calling the inferior.
-	* printcmd.c (printf_c_string): Locally print GDB internal var
-	instead of transiting via the inferior.
-	(printf_wide_c_string): Likewise.
-
-2019-07-04  Alan Hayward  <alan.hayward@arm.com>
-
-	* symfile.c (symbol_file_command): Call solib_create_inferior_hook.
-
-2019-07-04  Tom Tromey  <tom@tromey.com>
-
-	PR tui/24724:
-	* tui/tui-winsource.c (tui_clear_source_content): Update.
-	(tui_source_window_base::set_is_exec_point_at): Fix comment.
-	(tui_update_breakpoint_info): Update.
-	(tui_set_exec_info_content): Update.
-	* tui/tui-source.c (tui_set_source_content_nil): Update.
-	* tui/tui-disasm.c (tui_set_disassem_content): Don't set
-	has_break.
-	* tui/tui-data.h (enum tui_bp_flag): New.
-	(tui_bp_flags): New enum flags type.
-	(struct tui_source_element) <break_mode>: Change type.  Rename
-	from has_break.
-	(TUI_BP_ENABLED, TUI_BP_DISABLED, TUI_BP_HIT)
-	(TUI_BP_CONDITIONAL, TUI_BP_HARDWARE): Don't define.  Now enum
-	constants.
-	* tui/tui-winsource.h: Fix comment.
-
-2019-07-04  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch32-linux-nat.h (VFP_REGS_SIZE): Remove define.
-	* aarch64-linux-nat.c (fetch_fpregs_from_thread)
-	(store_fpregs_to_thread)
-	(aarch64_linux_nat_target::read_description): Use ARM_VFP3_REGS_SIZE.
-	* arch/arm.h (IWMMXT_VEC_REGISTER_SIZE, ARM_CORE_REGS_SIZE)
-	(ARM_FP_REGS_SIZE, ARM_VFP2_REGS_SIZE, ARM_VFP3_REGS_SIZE)
-	(IWMMXT_REGS_SIZE): Add define.
-	* arm-linux-nat.c (IWMMXT_REGS_SIZE): Remove define.
-	(fetch_vfp_regs, store_vfp_regs)
-	(arm_linux_nat_target::read_description): Use ARM_VFP3_REGS_SIZE.
-	* arm-tdep.c (arm_register_g_packet_guesses): Use new defines.
-
-2019-07-04  Alan Hayward  <alan.hayward@arm.com>
-
-        * arch/arm-get-next-pcs.c (thumb_get_next_pcs_raw): Use ARM_
-        defines.
-        * arch/arm-linux.c (arm_linux_sigreturn_next_pc_offset): Likewise.
-        * arch/arm.h (INT_REGISTER_SIZE) Rename from...
-        (ARM_INT_REGISTER_SIZE): ...to this.
-        (ARM_FP_REGISTER_SIZE) (ARM_VFP_REGISTER_SIZE): Add define.
-        * arm-linux-tdep.c (ARM_LINUX_JB_ELEMENT_SIZE)
-        (ARM_LINUX_SIZEOF_GREGSET, arm_linux_supply_gregset)
-        (arm_linux_collect_gregset, supply_nwfpe_register)
-        (collect_nwfpe_register, arm_linux_collect_nwfpe): Use ARM_
-        defines.
-        * arm-linux-tdep.h (ARM_LINUX_SIZEOF_NWFPE, NWFPE_FPSR_OFFSET)
-        (NWFPE_FPCR_OFFSET, NWFPE_TAGS_OFFSET): Likewise
-        * arm-nbsd-tdep.c (ARM_NBSD_JB_ELEMENT_SIZE): Likewise.
-        * arm-tdep.c (arm_push_dummy_call, arm_extract_return_value)
-        (arm_return_in_memory, arm_store_return_value)
-        (arm_get_longjmp_target, arm_register_g_packet_guesses)
-        (arm_record_ld_st_multiple): Likewise.
-        * arm-tdep.h (FP_REGISTER_SIZE, VFP_REGISTER_SIZE): Remove.
-        * arm-wince-tdep.c (ARM_WINCE_JB_ELEMENT_SIZE): Use ARM_ defines.
-
-2019-07-04  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-linux-tdep.c (aarch64_linux_init_abi): Use
-	AARCH64_DISPLACED_MODIFIED_INSNS.
-	* aarch64-tdep.c (struct aarch64_displaced_step_data)
-	(aarch64_displaced_step_copy_insn): Likewise.
-	* aarch64-tdep.h (DISPLACED_MODIFIED_INSNS): Rename from..
-	(AARCH64_DISPLACED_MODIFIED_INSNS): ...to this.
-	* arm-linux-tdep.c (arm_linux_cleanup_svc): Use
-	ARM_DISPLACED_MODIFIED_INSNS.
-	* arm-tdep.c (arm_gdbarch_init): Likewise.
-	* arm-tdep.h (DISPLACED_MODIFIED_INSNS): Rename from..
-	(ARM_DISPLACED_MODIFIED_INSNS): ...to this.
-	(struct arm_displaced_step_closure): Use
-	ARM_DISPLACED_MODIFIED_INSNS.
-
-2019-07-04  Alan Hayward  <alan.hayward@arm.com>
-
-	* features/Makefile: Remove unused xml files.
-	* features/aarch64.xml: Remove.
-	* features/i386/amd64-avx-avx512-linux.xml: Remove.
-	* features/i386/amd64-avx-avx512.xml: Remove.
-	* features/i386/amd64-avx-linux.xml: Remove.
-	* features/i386/amd64-avx-mpx-avx512-pku-linux.xml: Remove.
-	* features/i386/amd64-avx-mpx-avx512-pku.xml: Remove.
-	* features/i386/amd64-avx-mpx-linux.xml: Remove.
-	* features/i386/amd64-avx-mpx.xml: Remove.
-	* features/i386/amd64-avx.xml: Remove.
-	* features/i386/amd64-linux.xml: Remove.
-	* features/i386/amd64-mpx-linux.xml: Remove.
-	* features/i386/amd64-mpx.xml: Remove.
-	* features/i386/amd64.xml: Remove.
-	* features/i386/i386-avx-avx512-linux.xml: Remove.
-	* features/i386/i386-avx-avx512.xml: Remove.
-	* features/i386/i386-avx-linux.xml: Remove.
-	* features/i386/i386-avx-mpx-avx512-pku-linux.xml: Remove.
-	* features/i386/i386-avx-mpx-avx512-pku.xml: Remove.
-	* features/i386/i386-avx-mpx-linux.xml: Remove.
-	* features/i386/i386-avx-mpx.xml: Remove.
-	* features/i386/i386-avx.xml: Remove.
-	* features/i386/i386-linux.xml: Remove.
-	* features/i386/i386-mmx-linux.xml: Remove.
-	* features/i386/i386-mmx.xml: Remove.
-	* features/i386/i386-mpx-linux.xml: Remove.
-	* features/i386/i386-mpx.xml: Remove.
-	* features/i386/i386.xml: Remove.
-	* features/i386/x32-avx-avx512-linux.xml: Remove.
-	* features/i386/x32-avx-linux.xml: Remove.
-	* features/i386/x32-linux.xml: Remove.
-
-2019-07-04  Alan Hayward  <alan.hayward@arm.com>
-
-	* regformats/aarch64.dat: Remove.
-	* regformats/i386/amd64-avx-avx512-linux.dat: Remove.
-	* regformats/i386/amd64-avx-linux.dat: Remove.
-	* regformats/i386/amd64-avx-mpx-avx512-pku-linux.dat: Remove.
-	* regformats/i386/amd64-avx-mpx-linux.dat: Remove.
-	* regformats/i386/amd64-linux.dat: Remove.
-	* regformats/i386/amd64-mpx-linux.dat: Remove.
-	* regformats/i386/amd64.dat: Remove.
-	* regformats/i386/i386-avx-avx512-linux.dat: Remove.
-	* regformats/i386/i386-avx-linux.dat: Remove.
-	* regformats/i386/i386-avx-mpx-avx512-pku-linux.dat: Remove.
-	* regformats/i386/i386-avx-mpx-linux.dat: Remove.
-	* regformats/i386/i386-linux.dat: Remove.
-	* regformats/i386/i386-mmx-linux.dat: Remove.
-	* regformats/i386/i386-mpx-linux.dat: Remove.
-	* regformats/i386/i386.dat: Remove.
-	* regformats/i386/x32-avx-avx512-linux.dat: Remove.
-	* regformats/i386/x32-avx-linux.dat: Remove.
-	* regformats/i386/x32-linux.dat: Remove.
-
-2019-07-04  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c: Remove xml self tests.
-	* amd64-linux-tdep.c: Likewise.
-	* amd64-tdep.c: Likewise.
-	* i386-linux-tdep.c: Likewise.
-	* i386-tdep.c: Likewise.
-
-2019-07-03  Pedro Alves  <palves@redhat.com>
-
-	PR cli/24732
-	* cli/cli-cmds.c (struct pipe_cmd_opts): New.
-	(pipe_cmd_option_defs): New.
-	(make_pipe_cmd_options_def_group): New.
-	(pipe_command): Use gdb::option::process_options.
-	(pipe_command_completer): New function.
-	(_initialize_cli_cmds): Install completer for "pipe" command.
-
-2019-07-03  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-option.c (union option_value) <string>: New field.
-	(struct option_def_and_value): Add ctor, move ctor, dtor and
-	use DISABLE_COPY_AND_ASSIGN.
-	(option_def_and_value::clear_value): New.
-	(parse_option, save_option_value_in_ctx, get_val_type_str)
-	(add_setshow_cmds_for_options): Handle var_string.
-	* cli-option.h (union option_def::var_address) <string>: New
-	field.
-	(struct string_option_def): New.
-	* maint-test-options.c (struct test_options_opts): Add default
-	ctor and use DISABLE_COPY_AND_ASSIGN.
-	<string_opt>: New field.
-	(test_options_opts::~test_options_opts): New.
-	(test_options_opts::dump): Also dump "-string".
-	(test_options_option_defs): Install "string.
-
-2019-07-03  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-option.c (parse_option) <var_enum>: Don't return an
-	option_value with a null enumeration.
-	(complete_options): Save the option values in the context.
-	(save_option_value_in_ctx): New, factored out from ...
-	(process_options): ... here.
-	* cli/cli-utils.c (get_ulongest): Don't advance PP until the end
-	of the function.
-	* maint-test-options.c (test_options_opts::dump): New, factored
-	out from ...
-	(maintenance_test_options_command_mode): ... here.
-	(maintenance_test_options_command_completion_result): Delete.
-	(maintenance_test_options_command_completion_text): Update
-	comment.
-	(maintenance_show_test_options_completion_result): Change
-	prototype.  Just print
-	maintenance_test_options_command_completion_text.
-	(save_completion_result): New.
-	(maintenance_test_options_completer_mode): Pass options context to
-	complete_options, and then save a dump.
-	(_initialize_maint_test_options): Use add_cmd to install "maint
-	show test-options-completion-result".
-
-2019-07-03  Pedro Alves  <palves@redhat.com>
-
-	* NEWS (New commands): Mention "with" and "maint with".
-	* cli/cli-cmds.c (with_command_1, with_command_completer_1)
-	(with_command, with_command_completer): New.
-	(pipe_command): Adjust to new repeat_previous
-	interface.
-	(_initialize_cli_cmds): Install the "with" command and its "w"
-	alias.
-	* cli/cli-cmds.h (with_command_1, with_command_completer_1): New
-	declarations.
-	* cli/cli-setshow.c (parse_cli_var_uinteger)
-	(parse_cli_var_zuinteger_unlimited, do_set_command): Handle empty
-	argument strings for all var_types.
-	(get_setshow_command_value_string): New, factored out from ...
-	(do_show_command): ... this.
-	* cli/cli-setshow.h: Include <string>.
-	(get_setshow_command_value_string): Declare.
-	* command.h (repeat_previous): Now returns const char *.  Adjust
-	comment.
-	* maint.c: Include "cli/cli-cmds.h".
-	(maintenance_with_cmd, maintenance_with_cmd_completer): New.
-	(_initialize_maint_cmds): Register the "maintenance with" command.
-	* top.c (repeat_previous): Move bits from pipe_command here:
-	Return the saved command line, if any; error out if there's no
-	command to relaunch.
-
-2019-07-03  Pedro Alves  <palves@redhat.com>
-
-	* NEWS (New commands): Mention "maint set/show test-settings"
-	instead of "maint test-settings".
-	* maint-test-settings.c (maintenance_test_settings_list): Delete.
-	(maintenance_test_settings_set_list): Rename to ...
-	(maintenance_set_test_settings_list): ... this.
-	(maintenance_test_settings_show_list): Rename to  ...
-	(maintenance_show_test_settings_list): ... this.
-	(maintenance_test_settings_cmd): Delete.
-	(maintenance_test_settings_set_cmd): ...
-	(maintenance_set_test_settings_cmd): ... this.
-	(maintenance_test_settings_show_cmd): ...
-	(maintenance_show_test_settings_cmd): ... this.
-	(maintenance_test_settings_show_value_cmd):
-	(maintenance_show_test_settings_value_cmd): ... this.
-	(_initialize_maint_test_settings): No longer install the "maint
-	test-settings" prefix command.  Rename "maint test-settings set"
-	to "maint set test-settings", and "maint test-settings show" to
-	"maint show test-settings".  Adjust all subcommands.
-
-2019-07-03  Pedro Alves  <palves@redhat.com>
-
-	* maint-test-settings.c: Fix file's intro comment.  Replace all
-	references to "test-options" with references to "test-settings",
-	in comments.
-
-2019-07-03  Pedro Alves  <palves@redhat.com>
-
-	* maint-test-settings.c (maintenance_test_settings_xxx)
-	(maintenance_test_settings_yyy, maintenance_test_settings_zzz):
-	New.
-	(maintenance_test_settings_enums): Use them.
-	(maintenance_test_settings_enum): Default to
-	maintenance_test_settings_xxx.
-	(_initialize_maint_test_settings): Initialize
-	MAINTENANCE_TEST_SETTINGS_FILENAME.
-
-2019-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* breakpoint.h (remove_breakpoints_inf): Change return type to
-	void, move function documentation here.
-	* breakpoint.c (remove_breakpoints_inf): Change return type to
-	void, move function documentation to header.
-
-2019-07-02  Pedro Alves  <palves@redhat.com>
-
-	* NEWS (Completion improvements): Mention "info threads".
-	* thread.c (struct info_threads_opts, info_threads_option_defs)
-	(make_info_threads_options_def_group): New.
-	(info_threads_command): Use gdb::option::process_options.
-	(info_threads_command_completer): New.
-	(_initialize_thread): Use gdb::option::build_help to build the
-	help text for "info threads".
-
-2019-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* defs.h (generic_load): Move from here...
-	* symfile.h (generic_load): ... to here.  Rename name parameter
-	to args.
-	* symfile.c (generic_load): Add comment.
-
-2019-07-01  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c
-	(dw2_debug_names_iterator::find_vec_in_debug_names): Hoist
-	declaration of without_params.  Fix formatting.
-
-2019-07-01  Tom Tromey  <tromey@adacore.com>
-
-	* ada-exp.y (find_primitive_type): Update.
-	* ada-lang.h (ada_lookup_symbol): Update.
-	* ada-lang.c (ada_lookup_symbol): Remove "is_a_field_of_this"
-	parameter.
-	(ada_lookup_encoded_symbol, ada_lookup_symbol_nonlocal): Update.
-
-2019-06-28  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	PR breakpoints/24541
-	* gdbarch.c: Regenerate.
-	* gdbarch.h: Regenerate.
-	* gdbarch.sh: Add 'stap_adjust_register'.
-	* i386-tdep.c: Include '<unordered_set>'.
-	(i386_stap_adjust_register): New function.
-	(i386_elf_init_abi): Register 'i386_stap_adjust_register'.
-	* stap-probe.c (stap_parse_register_operand): Call
-	'gdbarch_stap_adjust_register'.
-
-2019-06-28  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	PR python/24742
-	https://bugzilla.redhat.com/show_bug.cgi?id=1723564
-	* python/python.c (do_start_initialization): Use 'xmalloc'
-	instead of 'PyMem_Malloc'.
-
-2019-06-28  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (partial_die_info::read): Prefer the linkage name
-	for Ada.
-
-2019-06-27  Tom Tromey  <tromey@adacore.com>
-
-	* arm-tdep.c (arm_objfile_data_key): Move lower.  Change type to
-	objfile_key.
-	(arm_find_mapping_symbol, arm_record_special_symbol)
-	(_initialize_arm_tdep): Update.
-	(arm_objfile_data_free): Remove.
-
-2019-06-27  Tom Tromey  <tromey@adacore.com>
-
-	* cp-valprint.c (cp_print_value_fields): Pass opts, not options,
-	to cp_print_static_field.
-
-2019-06-26  Tom Tromey  <tromey@adacore.com>
-
-	* minsyms.c (lookup_minimal_symbol_solib_trampoline): Remove.
-	* minsyms.h (lookup_minimal_symbol_solib_trampoline): Don't
-	declare.
-
-2019-06-26  Alan Hayward  <alan.hayward@arm.com>
-
-	* features/aarch64-core.c (create_feature_aarch64_core):
-	Regenerate.
-	* features/aarch64-core.xml: Add cpsr flags.
-
-2019-06-26  Alan Hayward  <alan.hayward@arm.com>
-
-	* arm-tdep.c (arm_gnu_triplet_regexp): New function.
-	(arm_gdbarch_init): Add arm_gnu_triplet_regexp.
-
-2019-06-25  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* arm-tdep.c (struct arm_per_objfile) <section_maps_sorted>: New
-	field.
-	(arm_find_mapping_symbol): Sort mapping symbol vectors on first
-	use.
-	(arm_record_special_symbol): Don't insert new symbol in sorted
-	position, push it at the end.
-
-2019-06-25  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* arm-tdep.c (struct arm_mapping_symbol) (operator <): New.
-	(arm_mapping_symbol_s): Remove.
-	(DEF_VEC_O(arm_mapping_symbol_s)): Remove.
-	(arm_mapping_symbol_vec): New typedef.
-	(struct arm_per_objfile): Add constructor.
-	<section_maps>: Change type to
-	std::unique_ptr<arm_mapping_symbol_vec[]>.
-	(arm_compare_mapping_symbols): Remove.
-	(arm_find_mapping_symbol): Adjust to section_maps type change.
-	(arm_objfile_data_free): Call delete on arm_per_objfile.
-	(arm_record_special_symbol): Adjust to section_maps type change.
-	Allocate arm_per_objfile with new.
-
-2019-06-25  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-cmds.c (alias_command): Compare the alias prefix
-	with the command prefix.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_delete_win): Remove "return".
-	* tui/tui-data.c (~tui_gen_win_info): Remove "if".
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (init_and_make_win): Assert on unrecognized
-	type.
-	* tui/tui-data.h (struct tui_gen_win_info): Make constructor
-	protected.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c
-	(tui_source_window_base::set_is_exec_point_at): Add check against
-	LOA_ADDRESS.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-source.c (tui_set_source_content): Don't check before
-	xfree.
-	* tui/tui-disasm.c (tui_disassemble): Don't check before xfree.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_update_source_window_as_is)
-	(tui_alloc_source_buffer, tui_line_is_displayed)
-	(tui_addr_is_displayed): Change type of win_info.
-	* tui/tui-winsource.c (tui_update_source_window_as_is)
-	(tui_clear_source_content, tui_show_source_line)
-	(tui_show_source_content, tui_source_window_base::refill)
-	(tui_source_window_base::set_is_exec_point_at)
-	(tui_source_window_base::set_is_exec_point_at)
-	(tui_update_breakpoint_info, tui_set_exec_info_content): Update.
-	(tui_alloc_source_buffer, tui_line_is_displayed)
-	(tui_addr_is_displayed): Change type of win_info.  Update.
-	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights)
-	(tui_source_window_base::do_make_visible_with_new_height):
-	Update.
-	* tui/tui-source.c (tui_set_source_content)
-	(tui_set_source_content_nil)
-	(tui_source_window::do_scroll_vertical): Update.
-	* tui/tui-layout.c (show_layout): Update.
-	* tui/tui-disasm.c (tui_set_disassem_content)
-	(tui_disasm_window::do_scroll_vertical): Update.
-	* tui/tui-data.h (tui_win_content): Remove.
-	(struct tui_gen_win_info) <content, content_size>: Remove.
-	(struct tui_source_element): Add initializers and destructor.
-	(union tui_which_element, struct tui_win_element): Remove.
-	(struct tui_source_window_base) <content>: New field.
-	(struct tui_data_window): Remove destructor.
-	(tui_alloc_content, tui_free_win_content)
-	(tui_free_all_source_wins_content): Don't declare.
-	* tui/tui-data.c (tui_initialize_static_data): Update.
-	(init_content_element, tui_alloc_content): Remove.
-	(~tui_gen_win_info): Update.
-	(~tui_data_window, tui_free_all_source_wins_content)
-	(tui_free_win_content, free_content, free_content_elements):
-	Remove.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_clear_source_content)
-	(tui_erase_source_content, tui_show_source_content): Change type
-	of win_info.
-	* tui/tui-winsource.c (tui_clear_source_content)
-	(tui_erase_source_content, tui_show_source_content): Change type
-	of win_info.
-	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Update.
-	* tui/tui-source.h (tui_set_source_content_nil): Change type of
-	win_info.
-	* tui/tui-source.c (tui_set_source_content_nil): Change type of
-	win_info.
-	* tui/tui-layout.c (show_source_or_disasm_and_command): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_clear_source_content)
-	(tui_source_window_base::set_is_exec_point_at): Update.
-	* tui/tui-source.c (tui_set_source_content_nil): Update.
-	* tui/tui-data.h (struct tui_source_element) <is_exec_point>: Now
-	a bool.
-	* tui/tui-data.c (init_content_element): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_gen_win_info::make_visible): Update.
-	* tui/tui-win.c (make_invisible_and_set_new_height): Update.
-	* tui/tui-layout.c (init_and_make_win): Update.
-	* tui/tui.h (enum tui_win_type): Update.
-	* tui/tui-data.h (tui_win_is_auxiliary): Rename from
-	tui_win_is_auxillary.
-	* tui/tui-data.c (tui_win_is_auxiliary): Rename from
-	tui_win_is_auxillary.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_data_window::refresh_window): Update.
-	* tui/tui-windata.c (tui_data_window::first_data_item_displayed)
-	(tui_delete_data_content_windows, tui_display_all_data)
-	(tui_data_window::do_scroll_vertical, tui_display_data_from):
-	Update.
-	* tui/tui-win.c (tui_data_window::set_new_height): Simplify.
-	* tui/tui-regs.c (tui_last_regs_line_no)
-	(tui_line_from_reg_element_no, tui_first_reg_element_no_inline)
-	(tui_show_registers): Update.
-	(tui_show_register_group): Return void.  Update.
-	(tui_display_registers_from, tui_display_reg_element_at_line)
-	(tui_display_registers_from_line, tui_check_register_values):
-	Update.
-	* tui/tui-data.h (union tui_which_element) <data_window>: Remove
-	member.
-	(struct tui_data_window) <regs_content>: Now a std::vector.
-	<regs_content_count>: Remove.
-	(tui_add_content_elements, tui_free_data_content): Don't declare.
-	* tui/tui-data.c (tui_data_window::clear_detail): Update.
-	(init_content_element): Remove DATA_WIN case.  Add assert.
-	(tui_add_content_elements): Remove.
-	(tui_data_window): Update.
-	(tui_free_data_content): Remove.
-	(free_content_elements): Remove DATA_WIN case.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.c (tui_data_item_window): Update.
-	* tui/tui-windata.h (tui_check_data_values): Don't declare.
-	* tui/tui-windata.c (tui_display_all_data)
-	(tui_display_data_from_line): Update.
-	(tui_check_data_values): Remove.
-	* tui/tui-regs.c (tui_show_register_group)
-	(tui_display_reg_element_at_line): Update.
-	* tui/tui-hooks.c (tui_register_changed)
-	(tui_refresh_frame_and_register_information): Call
-	tui_check_register_values.
-	* tui/tui-data.h (struct tui_data_window) <data_content,
-	data_content_count, data_type>: Remove.
-	(enum tui_data_type): Remove.
-
-	* tui/tui-data.c (tui_data_window::clear_detail)
-	(~tui_data_window): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.h (tui_first_data_item_displayed): Don't
-	declare.
-	* tui/tui-windata.c (tui_data_window::first_data_item_displayed):
-	Rename from tui_first_data_item_displayed.  Update.
-	(tui_data_window::refresh_all)
-	(tui_data_window::do_scroll_vertical): Update.
-	* tui/tui-data.h (struct tui_data_window)
-	<first_data_item_displayed>: Declare new method.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (tui_init_generic_part): Don't declare.
-	* tui/tui-data.c (tui_init_generic_part): Remove, moving
-	contents...
-	(tui_initialize_static_data): ...here.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_show_registers, tui_show_register_group)
-	(tui_display_registers_from, tui_check_register_values): Update.
-	(tui_display_register): Remove win_info parameter; update.
-	(tui_get_register): Change type of parameters.
-	* tui/tui-data.h (struct tui_data_element): Remove.
-	(union tui_which_element) <data>: Remove.
-	<data_window>: Change type.
-	(struct tui_data_item_window): New.
-	* tui/tui-data.c (init_content_element): Remove DATA_ITEM_WIN
-	case.  Add assert.
-	(~tui_data_item_window): New destructor.
-	(free_content_elements): Remove DATA_ITEM_WIN case.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.h (enum tui_win_type) <MAX_WINDOWS, UNDEFINED_WIN>:
-	Remove.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_command_element): Remove.
-	(union tui_which_element) <command>: Remove.
-	* tui/tui-data.c (init_content_element): Remove CMD_WIN case.  Add
-	assert.
-	(free_content_elements): Remove CMD_WIN case.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (tui_set_layout): Update.
-	* tui/tui-data.h (struct tui_layout_def) <split>: Remove.
-	* tui/tui-data.c (layout_def): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_refresh_all): Update.
-	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights)
-	(tui_source_window_base::set_new_height): Update.
-	* tui/tui-stack.c (tui_make_status_line): Change parameter type.
-	Update.
-	(tui_set_locator_fullname, tui_set_locator_info)
-	(tui_show_frame_info): Update.
-	* tui/tui-source.c (tui_set_source_content)
-	(tui_source_is_displayed): Update.
-	* tui/tui-layout.c (show_source_disasm_command, show_data)
-	(show_source_or_disasm_and_command): Update.
-	* tui/tui-disasm.c (tui_set_disassem_content)
-	(tui_get_begin_asm_address): Update.
-	* tui/tui-data.h (struct tui_locator_element): Remove.
-	(union tui_which_element) <locator>: Remove.
-	(struct tui_locator_window): New.
-	(tui_locator_win_info_ptr): Change return type.
-	* tui/tui-data.c (_locator): Change type.
-	(tui_locator_win_info_ptr): Change return type.
-	(init_content_element): Remove LOCATOR_WIN case.  Add assert.
-	(tui_alloc_content): Add assert.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c
-	(tui_exec_info_window::maybe_allocate_content): New method.
-	(tui_set_exec_info_content, tui_show_exec_info_content): Update.
-	* tui/tui-layout.c (init_and_make_win): Add EXEC_INFO_WIN case.
-	(make_source_or_disasm_window): Add cast.
-	* tui/tui-data.h (union tui_which_element) <simple_string>:
-	Remove.
-	(struct tui_source_info): New.
-	(struct tui_source_window_base) <execution_info>: Change type.
-	* tui/tui-data.c (init_content_element): Remove EXEC_INFO_WIN
-	case, and add assert.
-	(tui_alloc_content): Add assert.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (tui_alloc_win_info): Don't declare.
-	* tui/tui-layout.c (init_and_make_win): Use "new" directly.
-	* tui/tui-data.c (tui_alloc_win_info): Remove.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_set_win_focus_to): Don't check window type.
-	* tui/tui-wingeneral.c (tui_unhighlight_win): Check
-	can_highlight.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_source_window_base::update_tab_width): Call
-	make_visible_with_new_height method.
-	(tui_win_info::make_visible_with_new_height): New method.
-	(tui_source_window_base::do_make_visible_with_new_height)
-	(tui_data_window::do_make_visible_with_new_height)
-	(tui_cmd_window::do_make_visible_with_new_height): New methods.
-	(make_visible_with_new_height): Remove.
-	(tui_resize_all, tui_adjust_win_heights): Use
-	make_visible_with_new_height method.
-	* tui/tui-data.h (struct tui_win_info)
-	<do_make_visible_with_new_height, make_visible_with_new_height>:
-	New methods.
-	(struct tui_source_window_base, struct tui_data_window)
-	(struct tui_cmd_window) <do_make_visible_with_new_height>: New
-	methods.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_source_window_base::update_tab_width): New
-	method.
-	(update_tab_width): Call update_tab_width method.
-	* tui/tui-data.h (struct tui_win_info)
-	(struct tui_source_window_base) <update_tab_width>: New methods.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.h (tui_make_window): Change type of "box_it"
-	parameter.
-	* tui/tui-wingeneral.c (tui_make_window): Change type of "box_it"
-	parameter.
-	(tui_gen_win_info::make_visible): Update.
-	* tui/tui-layout.c (init_and_make_win): Change type of "box_it"
-	parameter.
-	* tui/tui-data.h (enum tui_box): New enum.
-	(BOX_WINDOW, DONT_BOX_WINDOW): Remove defines.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (make_source_or_disasm_window): Always use
-	init_and_make_win for EXEC_INFO_WIN.
-	* tui/tui-data.h (struct tui_gen_win_info) <~tui_gen_win_info>: No
-	longer inline.
-	(struct tui_win_info) <~tui_win_info>: Inline.
-	(tui_source_exec_info_win_ptr, tui_disassem_exec_info_win_ptr):
-	Don't declare.
-	* tui/tui-data.c (source_win, disasm_win): Remove globals.
-	(tui_source_exec_info_win_ptr, tui_disassem_exec_info_win_ptr):
-	Remove.
-	(tui_initialize_static_data): Update.
-	(~tui_gen_win_info): Handle more cleanup here.
-	(~tui_source_window_base): Delete "execution_info".
-	(~tui_win_info): Move code to ~tui_gen_win_info; remove.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (make_command_window): Don't set
-	can_highlight.
-	(show_source_disasm_command): Call the reset method.
-	(show_data): Don't set can_highlight.  Call the reset method.
-	(tui_gen_win_info::reset): Rename from init_gen_win_info
-	(init_and_make_win): Simplify.  Return tui_gen_win_info.
-	(show_source_or_disasm_and_command): Call the reset method.
-	* tui/tui-data.h (struct tui_gen_win_info) <reset>: New method.
-	(struct tui_cmd_window): Set can_highlight.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_gen_win_info::make_visible): Rename
-	from make_visible.
-	(tui_make_visible, tui_make_invisible): Rewrite.
-	(tui_win_info::make_visible): Remove.
-	(tui_source_window_base::make_visible): Update.
-	* tui/tui-data.h (struct tui_gen_win_info) <make_visible>: New
-	method.  Moved from...
-	(struct tui_win_info) <make_visible>: ...here.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c
-	(tui_source_window_base::do_scroll_horizontal): Remove direction
-	parameter.
-	* tui/tui-windata.c (tui_data_window::do_scroll_vertical): Remove
-	direction parameter.
-	* tui/tui-win.c (tui_win_info::forward_scroll)
-	(tui_win_info::backward_scroll, tui_win_info::left_scroll)
-	(tui_win_info::right_scroll): Update.
-	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Remove
-	direction parameter.
-	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Remove
-	direction parameter.
-	* tui/tui-data.h (enum tui_scroll_direction): Remove.
-	(struct tui_win_info) <do_scroll_vertical, do_scroll_horizontal>:
-	Remove direction parameter.
-	(struct tui_source_window_base, struct tui_source_window)
-	(struct tui_disasm_window, struct tui_data_window)
-	(struct tui_cmd_window): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_set_exec_info_content)
-	(tui_show_exec_info_content, tui_erase_exec_info_content)
-	(tui_clear_exec_info_content, tui_update_exec_info): Change
-	argument to tui_source_window_base.
-	* tui/tui-winsource.c (tui_set_exec_info_content)
-	(tui_show_exec_info_content, tui_erase_exec_info_content)
-	(tui_clear_exec_info_content, tui_update_exec_info): Change
-	argument to tui_source_window_base.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_set_exec_info_content): Return void.
-	* tui/tui-winsource.c (tui_set_exec_info_content): Return void.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_set_exec_info_content): Remove NULL
-	check.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_alloc_source_buffer): Change return
-	type to void.
-	* tui/tui-winsource.c (tui_alloc_source_buffer): Change return
-	type to void.
-	* tui/tui-source.c (tui_set_source_content): Update.
-	* tui/tui-disasm.c (tui_set_disassem_content): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (window_name_completer, tui_set_focus)
-	(tui_all_windows_info): Use name method.
-	* tui/tui-data.h (struct tui_gen_win_info)
-	(struct tui_source_window, struct tui_disasm_window)
-	(struct tui_data_window, struct tui_cmd_window) <name>: New
-	method.
-	(tui_win_name): Don't declare.
-	* tui/tui-data.c (tui_partial_win_by_name): Use name method.
-	(tui_win_name): Remove.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_update_source_window)
-	(tui_update_source_window_as_is): Change parameter type.
-	* tui/tui-winsource.c (tui_update_source_window): Change win_info
-	to be a tui_source_window_base.
-	(tui_update_source_window_as_is): Likewise.
-	* tui/tui-win.c (make_visible_with_new_height): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_erase_source_content)
-	(tui_show_source_content, tui_show_exec_info_content)
-	(tui_erase_exec_info_content): Use refresh_window method.
-	* tui/tui-wingeneral.h (tui_refresh_win): Don't declare.
-	* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window): Rename
-	from tui_refresh_win.
-	(tui_data_window::refresh_window): New method.
-	(tui_win_info::refresh, tui_source_window_base::refresh)
-	(tui_refresh_all): Use refresh_window method.
-	* tui/tui-stack.c (tui_show_locator_content): Call refresh_window
-	method.
-	* tui/tui-regs.c (tui_display_register): Call refresh_window
-	method.
-	* tui/tui-layout.c (show_source_disasm_command)
-	(show_source_or_disasm_and_command): Call refresh_window method.
-	* tui/tui-data.h (struct tui_gen_win_info)
-	(struct tui_data_window, struct tui_cmd_window) <refresh_window>:
-	New method.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c (tui_rl_other_window, tui_enable)
-	(tui_is_window_visible, tui_get_command_dimension): Update.
-	* tui/tui-winsource.c (tui_update_source_window_as_is)
-	(tui_clear_source_content, tui_erase_source_content)
-	(tui_show_source_line, tui_source_window_base::refill)
-	(tui_source_window_base::do_scroll_horizontal)
-	(tui_source_window_base::set_is_exec_point_at)
-	(tui_update_breakpoint_info, tui_set_exec_info_content)
-	(tui_alloc_source_buffer, tui_line_is_displayed)
-	(tui_addr_is_displayed): Update.
-	* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win)
-	(tui_check_and_display_highlight_if_needed)
-	(tui_win_info::make_visible, tui_win_info::refresh)
-	(tui_refresh_all): Update.
-	* tui/tui-windata.c (tui_first_data_item_displayed)
-	(tui_delete_data_content_windows, tui_erase_data_content)
-	(tui_display_all_data, tui_data_window::refresh_all)
-	(tui_check_data_values): Update.
-	* tui/tui-win.c (window_name_completer, tui_update_gdb_sizes)
-	(tui_set_win_focus_to, tui_win_info::forward_scroll)
-	(tui_win_info::backward_scroll, tui_refresh_all_win)
-	(tui_resize_all, tui_set_focus, tui_all_windows_info)
-	(update_tab_width, tui_set_win_height, tui_adjust_win_heights)
-	(tui_source_window_base::set_new_height)
-	(tui_data_window::set_new_height)
-	(make_invisible_and_set_new_height)
-	(make_visible_with_new_height, new_height_ok)
-	(parse_scrolling_args): Update.
-	* tui/tui-stack.c (tui_show_frame_info): Update.
-	* tui/tui-source.c (tui_set_source_content)
-	(tui_set_source_content_nil, tui_source_is_displayed)
-	(tui_source_window::do_scroll_vertical): Update.
-	* tui/tui-regs.c (tui_show_registers, tui_show_register_group)
-	(tui_display_registers_from, tui_display_reg_element_at_line)
-	(tui_check_register_values, tui_reg_command): Update.
-	* tui/tui-layout.c (tui_default_win_height)
-	(show_source_disasm_command, show_data, init_and_make_win)
-	(show_source_or_disasm_and_command): Update.
-	* tui/tui-io.c (update_cmdwin_start_line, tui_putc, tui_puts)
-	(tui_redisplay_readline, tui_mld_flush)
-	(tui_mld_erase_entire_line, tui_mld_getc, tui_cont_sig)
-	(tui_getc): Update.
-	* tui/tui-disasm.c (tui_set_disassem_content)
-	(tui_disasm_window::do_scroll_vertical): Update.
-	* tui/tui-data.h (struct tui_gen_win_info) <~tui_gen_win_info>:
-	Now virtual.
-	(struct tui_win_info): Derive from tui_gen_win_info.
-	<~tui_win_info>: Mark as override.
-	<generic>: Remove member.
-	* tui/tui-data.c (tui_cmd_window::clear_detail, tui_next_win)
-	(tui_prev_win, tui_partial_win_by_name, tui_win_info)
-	(~tui_data_window, ~tui_win_info)
-	(tui_free_all_source_wins_content): Update.
-	* tui/tui-command.c (tui_refresh_cmd_win): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (init_and_make_win): Use new.
-	* tui/tui-data.h (struct tui_gen_win_info): Add constructor,
-	destructor, initializers.
-	(tui_alloc_generic_win_info): Don't declare.
-	* tui/tui-data.c (_locator): Add argument to constructor.
-	(source_win, disasm_win): New globals.
-	(exec_info): Remove.
-	(tui_source_exec_info_win_ptr, tui_disassem_exec_info_win_ptr):
-	Update.
-	(tui_alloc_generic_win_info): Remove.
-	(init_content_element): Use new.
-	(tui_win_info::tui_win_info): Update.
-	(free_content_elements) <case DATA_WIN>: Use delete.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_refresh_win): Update.
-	* tui/tui-windata.c (tui_first_data_item_displayed)
-	(tui_delete_data_content_windows): Update.
-	* tui/tui-win.c (tui_data_window::set_new_height): Update.
-	* tui/tui-regs.c (tui_show_registers, tui_show_register_group)
-	(tui_display_registers_from, tui_check_register_values): Update.
-	* tui/tui-data.h (union tui_which_element) <data_window>: Now a
-	pointer.
-	* tui/tui-data.c (init_content_element): Update.  Allocate the new
-	window.
-	(tui_free_data_content): Update.
-	(free_content_elements) <case DATA_WIN>: Free the window.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win):
-	Update.
-	* tui/tui-layout.c (make_command_window)
-	(show_source_disasm_command, show_data, init_and_make_win)
-	(show_source_or_disasm_and_command): Update.
-	* tui/tui-data.h (struct tui_win_info) <set_highlight>: New
-	method.
-	<can_highight, is_highlighted>: Now bool.
-	(tui_set_win_highlight): Don't declare.
-	* tui/tui-data.c (tui_set_win_highlight): Remove.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (make_visible): Remove check of window
-	type.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_win_info::max_height)
-	(tui_cmd_window::max_height): New methods.
-	(new_height_ok): Call max_height.
-	* tui/tui-data.h (struct tui_win_info, struct tui_cmd_window)
-	<max_height>: New method.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_source_window_base::set_new_height)
-	(tui_data_window::set_new_height): New methods.
-	(make_invisible_and_set_new_height): Call set_new_height method.
-	* tui/tui-data.h (struct tui_win_info)
-	(struct tui_source_window_base, struct tui_data_window)
-	<set_new_height>: New method.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c (tui_rl_other_window): Call the refresh_all method.
-	* tui/tui-windata.c (tui_data_window::refresh_all): Rename from
-	tui_refresh_data_win.
-	* tui/tui-win.c (tui_source_window_base::refresh_all): New
-	method.
-	(tui_refresh_all_win): Call the refresh_all method.
-	(tui_set_focus): Likewise.
-	* tui/tui-data.h (struct tui_win_info) <refresh_all>: New method.
-	(struct tui_source_window_base, struct tui_data_window) <refresh>:
-	Likewise.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_refill_source_window)
-	(tui_set_is_exec_point_at): Don't declare.
-	* tui/tui-winsource.c (tui_update_source_windows_with_addr)
-	(tui_source_window_base::refill): Rename from
-	tui_refill_source_window.
-	(tui_source_window_base::do_scroll_horizontal): Update.
-	(tui_source_window_base::set_is_exec_point_at): Rename from
-	tui_set_is_exec_point_at.
-	(tui_update_all_breakpoint_info): Update.
-	* tui/tui-stack.c (tui_show_frame_info): Update.
-	* tui/tui-layout.c (show_data): Add cast.
-	* tui/tui-hooks.c (tui_redisplay_source): Call refill method.
-	* tui/tui-data.h (struct tui_source_window_base) <refill,
-	set_is_exec_point_at>: New methods.
-	(tui_source_windows, tui_add_to_source_windows): Update types.
-	(tui_add_to_source_windows): Remove redundant declaration.
-	* tui/tui-data.c (source_windows): Store tui_source_window_base.
-	(tui_source_windows): Change return type.
-	(tui_clear_source_windows_detail): Update.
-	(tui_add_to_source_windows): Change type of parameter.
-	(tui_free_all_source_wins_content): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_win_info::refresh)
-	(tui_source_window_base::refresh): New methods.
-	(tui_refresh_all): Call the refresh method.
-	* tui/tui-data.h (struct tui_win_info)
-	(struct tui_source_window_base) <refresh>: New method.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.h (tui_is_window_visible): Return bool.
-	* tui/tui.c (tui_is_window_visible): Return bool.
-	* tui/tui-wingeneral.c (tui_make_window, make_visible)
-	(tui_make_visible, tui_make_invisible)
-	(tui_win_info::make_visible)
-	(tui_source_window_base::make_visible, make_all_visible)
-	(tui_make_all_visible, tui_make_all_invisible): Update.
-	* tui/tui-windata.c (tui_delete_data_content_windows): Update.
-	* tui/tui-data.h (struct tui_gen_win_info) <is_visible>: Now
-	bool.
-	(struct tui_win_info, struct tui_source_window_base)
-	(struct tui_cmd_window) <make_visible>: Change parameter to bool.
-	* tui/tui-data.c (tui_init_generic_part): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_win_info::make_visible)
-	(tui_source_window_base::make_visible): New methods.
-	(make_all_visible): Make method call.
-	* tui/tui-data.h (struct tui_win_info) <make_visible>: New method.
-	(struct tui_source_window_base, struct tui_cmd_window): Override
-	make_visible.
-	(tui_win_is_source_type): Don't declare.
-	* tui/tui-data.c (tui_win_is_source_type): Remove.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_source_or_disasm_and_command): Remove
-	NULL check.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_data_window, struct tui_cmd_window):
-	Inline constructor.  Add initializers for members.
-	* tui/tui-data.c (tui_data_window, tui_cmd_window): Remove
-	constructors; now inline in class.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_show_registers): Update.
-	* tui/tui-data.h (struct tui_data_window) <display_regs>: Now
-	bool.
-	* tui/tui-data.c (tui_data_window::clear_detail)
-	(tui_data_window): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.c (tui_display_all_data)
-	(tui_display_data_from_line, tui_display_data_from)
-	(tui_check_data_values, tui_data_window::do_scroll_vertical):
-	Update.
-	* tui/tui-regs.c (tui_last_regs_line_no)
-	(tui_line_from_reg_element_no, tui_first_reg_element_no_inline)
-	(tui_show_registers, tui_show_register_group)
-	(tui_display_registers_from, tui_display_reg_element_at_line)
-	(tui_display_registers_from_line, tui_check_register_values)
-	(tui_reg_next, tui_reg_prev): Update.
-	* tui/tui-layout.c (tui_set_layout, show_data): Update.
-	* tui/tui-data.h (struct tui_data_info): Remove.  Move contents to
-	tui_data_window.
-	(struct tui_win_info) <detail>: Remove.  Add new fields from
-	tui_data_info.
-	(TUI_DATA_WIN): Add cast.
-	* tui/tui-data.c (tui_data_window::clear_detail, tui_data_window)
-	(~tui_data_window): Simplify.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (show_source_disasm_command)
-	(show_source_or_disasm_and_command): Update.
-	* tui/tui-io.c (update_cmdwin_start_line)
-	(tui_redisplay_readline): Update.
-	* tui/tui-data.h (struct tui_command_info): Remove.
-	(struct tui_win_info) <detail>: Remove command_info member.
-	(struct tui_data_window) <start_line>: New member, from
-	tui_command_info.
-	(TUI_CMD_WIN): Add casts.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_update_source_window)
-	(tui_refill_source_window)
-	(tui_source_window_base::do_scroll_horizontal)
-	(tui_update_breakpoint_info, tui_set_exec_info_content)
-	(tui_show_exec_info_content, tui_erase_exec_info_content)
-	(tui_clear_exec_info_content): Update.
-	* tui/tui-wingeneral.c (make_all_visible, tui_refresh_all):
-	Update.
-	* tui/tui-win.c (make_invisible_and_set_new_height)
-	(make_visible_with_new_height): Update.
-	* tui/tui-source.c (tui_set_source_content)
-	(tui_show_symtab_source): Update.
-	* tui/tui-layout.c (extract_display_start_addr)
-	(show_source_disasm_command, show_data)
-	(make_source_or_disasm_window)
-	(show_source_or_disasm_and_command): Update.
-	* tui/tui-disasm.c (tui_set_disassem_content): Simplify.
-	(tui_disasm_window::do_scroll_vertical): Remove shadowing
-	"gdbarch".
-	* tui/tui-data.h (struct tui_source_info): Remove.  Move contents
-	to tui_source_window_base.
-	(struct tui_win_info) <detail>: Remove source_info member.
-	(struct tui_source_window_base) <has_locator>: Inline.
-	Move contents from tui_source_info; rename has_locator member to
-	m_has_locator.
-	(TUI_SRC_WIN, TUI_DISASM_WIN): Add casts.
-	* tui/tui-data.c (tui_source_window_base::has_locator): Move to
-	header file.
-	(tui_source_window_base::clear_detail, ~tui_source_window_base):
-	Simplify.
-	(tui_free_all_source_wins_content): Cast to
-	tui_source_window_base.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (make_invisible_and_set_new_height)
-	(make_visible_with_new_height): Call has_locator method.
-	* tui/tui-layout.c (show_source_disasm_command, show_data)
-	(show_source_or_disasm_and_command): Update for bool change.
-	* tui/tui-data.h (struct tui_source_info) <has_locator>: Now bool.
-	(tui_win_info) <has_locator>: New method.
-	(struct tui_source_window_base) <has_locator>: New method.
-	(tui_win_has_locator): Don't declare.
-	* tui/tui-data.c (tui_source_window_base::has_locator): Rename
-	from tui_win_has_locator.
-	(tui_source_window_base): Use false, not FALSE.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (tui_clear_win_detail): Don't declare.
-	* tui/tui-data.c (tui_clear_source_windows_detail): Call the
-	clear_detail method directly.
-	(tui_clear_win_detail): Remove.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Use
-	"this", not TUI_DISASM_WIN.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (tui_horizontal_source_scroll):  Don't
-	declare.
-	* tui/tui-winsource.c
-	(tui_source_window_base::do_scroll_horizontal): Rename from
-	tui_horizontal_source_scroll.
-	* tui/tui-windata.h (tui_vertical_data_scroll): Don't declare.
-	* tui/tui-windata.c (tui_data_window::do_scroll_vertical): Rename
-	from tui_vertical_data_scroll.
-	* tui/tui-win.h (tui_scroll): Don't declare.
-	* tui/tui-win.c (tui_win_info::forward_scroll)
-	(tui_win_info::backward_scroll, tui_win_info::left_scroll)
-	(tui_win_info::right_scroll): Rename and update.
-	(tui_scroll_forward_command, tui_scroll_backward_command)
-	(tui_scroll_left_command, tui_scroll_right_command): Update.
-	(tui_scroll): Remove.
-	* tui/tui-source.h: Don't declare tui_vertical_source_scroll.
-	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Rename
-	from tui_vertical_source_scroll.
-	* tui/tui-disasm.h (tui_vertical_disassem_scroll): Don't declare.
-	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Rename
-	from tui_vertical_disassem_scroll.
-	* tui/tui-data.h (struct tui_win_info) <do_scroll_vertical,
-	do_scroll_horizontal>: New methods.
-	<forward_scroll, backward_scroll, left_scroll, right_scroll>:
-	Likewise.
-	(struct tui_source_window_base): Add do_scroll_horizontal.
-	(struct tui_source_window, struct tui_disasm_window): Add
-	do_scroll_vertical.
-	(struct tui_data_window, struct tui_cmd_window): Add
-	do_scroll_horizontal and do_scroll_vertical.
-	* tui/tui-command.c (tui_dispatch_ctrl_char): Use method calls.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_source_window_base): New struct.
-	(struct tui_source_window): Derive from tui_source_window_base.
-	(struct tui_disasm_window): New struct.
-	* tui/tui-data.c (tui_source_window_base::clear_detail): Rename
-	from tui_source_window::clear_detail.
-	(tui_source_window_base): Rename from tui_source_window.
-	(~tui_source_window_base): Rename from ~tui_source_window.
-	(tui_alloc_win_info): Create a tui_disasm_window.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_source_window)
-	(struct tui_data_window): Declare destructors.
-	* tui/tui-data.c (~tui_source_window, ~tui_data_window): New
-	destructors.
-	(tui_win_info): Simplify.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_display_main)
-	(tui_update_source_windows_with_addr)
-	(tui_update_all_breakpoint_info): Update.
-	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights)
-	(new_height_ok, parse_scrolling_args): Update.
-	* tui/tui-stack.c (tui_show_frame_info): Update.
-	* tui/tui-data.h (struct tui_list): Remove.
-	(tui_source_windows): Return a reference to a std::vector.
-	* tui/tui-data.c (source_windows): Now a std::vector.
-	(tui_source_windows): Change return type.
-	(tui_clear_source_windows): Rewrite.
-	(tui_clear_source_windows_detail, tui_add_to_source_windows)
-	(tui_free_all_source_wins_content): Rewrite.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_win_info, struct tui_source_window)
-	(struct tui_data_window, struct tui_cmd_window): Declare
-	clear_detail method.
-	* tui/tui-data.c (tui_source_window::clear_detail)
-	(tui_cmd_window::clear_detail, tui_data_window::clear_detail): New
-	methods.
-	(tui_clear_win_detail): Simplify.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (make_source_window, make_disasm_window)
-	(make_source_or_disasm_window): Remove win_info_ptr parameter.
-	Return the new window.
-	(show_source_disasm_command, show_data)
-	(show_source_or_disasm_and_command): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (make_command_window): Remove win_info_ptr
-	parameter.  Return the new window.
-	(show_source_disasm_command): Update and remove NULL check.
-	(show_source_or_disasm_and_command): Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (init_and_make_win): Remove NULL check.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_win_info): Make constructor
-	protected.  Make destructor virtual.  Add initializers.
-	(tui_source_window, tui_data_window, tui_cmd_window): New
-	classes.
-	* tui/tui-data.c (tui_win_info): Rename from init_win_info.  Now a
-	constructor.  Add "type" parameter.
-	(tui_source_window, tui_data_window, tui_cmd_window): New
-	constructors.
-	(tui_alloc_win_info): Instantiate the appropriate subclass.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_resize_all): Use delete.
-	* tui/tui-data.h (struct tui_win_info) <~tui_win_info>: Declare
-	destructor.
-	(tui_free_window): Don't declare.
-	* tui/tui-data.c (~tui_win_info): Rename from tui_free_window.
-	Update.
-
-2019-06-25  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (struct tui_win_info): Add constructor.
-	* tui/tui-data.c (tui_alloc_win_info): Use new.
-	(tui_free_window): Use delete.
-
-2019-06-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-windata.h (tui_first_data_element_no_in_line): Don't
-	declare.
-	* tui/tui-windata.c (tui_first_data_element_no_in_line): Remove.
-
-2019-06-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (tui_del_window, tui_del_data_windows): Don't
-	declare.
-	* tui/tui-data.c (tui_del_window, tui_del_data_windows): Remove.
-
-2019-06-22  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2read.c (create_addrmap_from_aranges)
-	(read_debug_names_from_section): Print ptrdiff_t using '%s' and plongest
-	instead of '%zu'.
-
-2019-06-21  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2read.h (dwarf2_section_info_def): Remove.
-	(DEF_VEC_O (dwarf2_section_info_def)): Remove.
-	* dwarf2read.c (struct dwo_sections) <types>: Change type to
-	std::vector<dwarf2_section_info>.
-	(struct dwo_file) <~dwo_file>: Remove.
-	(dwarf2_per_objfile::~dwarf2_per_objfile): Don't manually free
-	types field.
-	(dwarf2_per_objfile::locate_sections): Adjust to std::vector.
-	(dwarf2_read_debug_names): Likewise.
-	(create_debug_types_hash_table): Change parameter type to
-	array_view, adjust code accordingly.
-	(dwarf2_locate_dwo_sections): Adjust to std::vector.
-	(partial_die_info::fixup): Likewise.
-	(determine_prefix): Likewise.
-	* dwarf-index-write.c (write_psymtabs_to_index): Adjust.
-
-2019-06-21  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2read.c (struct dwo_file) <dbfd>: Change type to
-	gdb_bfd_ref_ptr.
-	<~dwo_file>: Remove call to gdb_bfd_unref.
-	(open_and_init_dwo_file): Move gdb_bfd_ref_ptr into dbfd field. Call
-	gdb_bfd_ref_ptr::get.
-
-2019-06-21  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2read.h (struct dwarf2_per_objfile) <dwo_files>: Change
-	type to htab_up.
-	* dwarf2read.c (struct dwo_file): Initialize fields.
-	<~dwo_file>: New.
-	(free_dwo_file): Remove, move content to ~dwo_file.
-	(struct dwo_file_deleter): Remove.
-	(dwo_file_up>: Remove custom deleter.
-	(free_dwo_files): Remove.
-	(dwarf2_per_objfile::~dwarf2_per_objfile): Don't explicitly free
-	dwo_files.
-	(process_skeletonless_type_units): Call unique_ptr::get.
-	(allocate_dwo_file_hash_table): Add deleter to created hash
-	table.  Change return type to htab_up.
-	(lookup_dwo_file_slot): Don't memset dwo_file, call
-	unique_ptr::get.
-	(create_dwo_unit_in_dwp_v1): Allocate dwo_file with new.
-	(create_dwo_unit_in_dwp_v2): Likewise.
-	(open_and_init_dwo_file): Likewise.
-	(free_dwo_file_from_slot): Remove.
-
-2019-06-21  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2read.h (struct dwarf2_section_info) <readin,
-	is_virtual>: Change type to bool.
-	* dwarf2read.c (dwarf2_read_section, create_dwp_v2_section): Use
-	true instead of 1.
-
-2019-06-19  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (tui_init_content_element): Don't declare.
-
-2019-06-19  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (tui_init_win_info): Don't declare.
-
-2019-06-19  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2read.h (abstract_to_concrete): Change type to
-	std::unordered_map<sect_offset, std::vector<sect_offset>,
-	gdb::hash_enum<sect_offset>>.
-
-2019-06-19  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_evaluate_subexp) <case OP_ATR_FIRST>: Handle
-	EVAL_AVOID_SIDE_EFFECTS specially.
-
-2019-06-19  Tom Tromey  <tromey@adacore.com>
-
-	* source-cache.c (highlighter): New global.
-	(source_cache::get_source_lines): Create a highlighter on demand.
-
-2019-06-18  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* defs.h (deprecated_interactive_hook): Delete declaration.
-	* interps.c (clear_interpreter_hooks): Remove use of
-	deprecated_interactive_hook.
-	* top.c (deprecated_interactive_hook): Delete definition.
-	* utils.c (maybe_quit): Remove use of deprecated_interactive_hook.
-
-2019-06-18  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/24515
-	* dwarf2read.h (abstract_to_concrete): Change type from
-	std::unordered_map<die_info_ptr, std::vector<die_info_ptr>> to
-	std::unordered_map<sect_offset, std::vector<sect_offset>>.
-	* dwarf2read.c (read_variable): Update.
-	(dwarf2_fetch_die_loc_sect_off): Update.
-
-2019-06-17  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/24617
-	* common/pathstuff.c (child_path): Make sure parent_len > 0 before
-	accessing parent[parent_len - 1].
-
-2019-06-17  Paul Pluzhnikov  <ppluzhnikov@google.com>
-
-	PR gdb/24364
-	* gdb/dtrace-probe.c (dtrace_static_probe_ops::get_probe): Don't
-	call dtrace_process_dof with NULL dof.
-
-2019-06-16  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/24445
-	* contrib/gdb-add-index.sh: Update to handle dwz-m-ed executable.
-
-2019-06-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win)
-	(make_all_visible): Use address of member.
-
-2019-06-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.c (tui_clear_win_detail, init_win_info)
-	(tui_free_window, free_content, free_content_elements): Remove
-	unnecessary cast.
-	* tui/tui-windata.c (tui_display_all_data): Remove unnecessary
-	cast.
-	* tui/tui-regs.c (tui_show_register_group)
-	(tui_display_registers_from, tui_display_reg_element_at_line):
-	Remove unnecessary cast.
-
-2019-06-16  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* linux-nat.c (normal_mask): Delete.
-	(_initialize_linux_nat): Don't initialise normal_mask.
-
-2019-06-16  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	PR gdb/24445
-	* dwarf-index-write.h (write_psymtabs_to_index): Add
-	dwz_basename parameter.
-	* dwarf-index-write.c (write_gdbindex): Move file writing to
-	write_gdbindex_1.  Change return type void.
-	(assert_file_size): Move up, remove filename parameter.
-	(write_gdbindex_1): New function.
-	(write_debug_names): Change return type to void, call
-	assert_file_size.
-	(struct index_wip_file): New struct.
-	(write_psymtabs_to_index): Add dwz_basename parameter.  Move
-	file logic to index_wip_file.  Write index for dwz file if
-	needed.
-	(save_gdb_index_command): Pass basename of dwz file, if present.
-	* dwarf-index-cache.c (index_cache::store): Obtain and pass
-	build-id of dwz file, if present.
-	* dwarf2read.c (struct dwz_file): Move to dwarf2read.h.
-	(dwarf2_get_dwz_file): Likewise.
-	* dwarf2read.h (struct dwz_file): Move from dwarf2read.c.
-	(dwarf2_get_dwz_file): Likewise.
-
-2019-06-16  Tom Tromey  <tom@tromey.com>
-
-	* coffread.c (process_coff_symbol): Use xstrdup.
-	* value.c (create_internalvar): Use xstrdup.
-
-2019-06-16  Tom Tromey  <tom@tromey.com>
-
-	* valops.c (value_cast, value_slice): Remove unnecessary cast.
-	* breakpoint.c (stopin_command, stopat_command)
-	(until_break_command, decode_location_default): Remove unnecessary
-	cast.
-	* utils.c (subset_compare): Remove unnecessary cast.
-	* ada-lang.c (ada_update_initial_language): Remove unnecessary
-	cast.
-	* linespec.c (decode_line_with_last_displayed): Remove unnecessary
-	cast.
-	* infcmd.c (path_command): Remove unnecessary cast.
-	* coffread.c (decode_type): Remove unnecessary cast.
-	* xcoffread.c (read_xcoff_symtab): Remove unnecessary cast.
-	* mipsread.c (mipscoff_symfile_read): Remove unnecessary cast.
-	* tui/tui-stack.c (tui_show_locator_content)
-	(tui_show_frame_info): Remove unnecessary cast.
-	* tui/tui-win.c (tui_scroll_forward_command)
-	(tui_scroll_backward_command, tui_set_focus, tui_set_win_height)
-	(parse_scrolling_args): Remove unnecessary cast.
-	* tui/tui-data.c (init_win_info, tui_del_window)
-	(tui_free_window, tui_del_data_windows, tui_free_data_content)
-	(free_content_elements): Remove unnecessary cast.
-	* tui/tui-windata.c (tui_first_data_item_displayed): Remove
-	unnecessary cast.
-	* tui/tui-source.c (tui_set_source_content)
-	(tui_vertical_source_scroll): Remove unnecessary cast.
-	* tui/tui-layout.c (tui_default_win_height): Remove unnecessary
-	cast.
-	* tui/tui-io.c (tui_initialize_io): Remove unnecessary cast.
-	* tui/tui-regs.c (tui_display_registers_from)
-	(tui_display_register): Remove unnecessary cast.
-	* tui/tui-wingeneral.c (tui_refresh_win, tui_delete_win)
-	(tui_unhighlight_win, tui_highlight_win, tui_make_window)
-	(make_visible): Remove unnecessary cast.
-	* tui/tui-winsource.c (tui_erase_source_content)
-	(tui_update_breakpoint_info, tui_set_exec_info_content): Remove
-	unnecessary cast.
-	* ax-gdb.c (agent_command_1): Remove unnecessary cast.
-	* cli/cli-setshow.c (cmd_show_list): Remove unnecessary cast.
-	* stabsread.c (read_type, read_array_type, read_range_type):
-	Remove unnecessary cast.
-	* mdebugread.c (mdebug_build_psymtabs): Remove unnecessary cast.
-	(parse_symbol, parse_type, upgrade_type, parse_external)
-	(parse_partial_symbols, psymtab_to_symtab_1, cross_ref): Remove
-	unnecessary cast.
-	* gdb_bfd.c (gdb_bfd_map_section): Remove unnecessary cast.
-
-2019-06-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.c (tui_alloc_generic_win_info)
-	(tui_alloc_win_info, tui_add_content_elements): Remove NULL
-	checks.
-
-2019-06-16  Bernhard Heckel  <bernhard.heckel@intel.com>
-	    Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-typeprint.c (f_print_type): Don't return early for not
-	associated or not allocated types.
-	(f_type_print_varspec_suffix): Add print_rank parameter and print
-	ranks of array types in case they dangling.
-	(f_type_print_base): Add print_rank parameter.
-
-2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* NEWS: Mention new MI commands.
-	* break-catch-throw.c (enum exception_event_kind): Move to
-	breakpoint.h.
-	(print_mention_exception_catchpoint): Output text as a single
-	message.
-	(catch_exception_command_1): Rename to...
-	(catch_exception_event): ...this, make non-static, update header
-	command, and change some parameter types.
-	(catch_catch_command): Update for changes to
-	catch_exception_command_1.
-	(catch_throw_command): Likewise.
-	(catch_rethrow_command): Likewise.
-	* breakpoint.c (enum exception_event_kind): Delete.
-	* breakpoint.h (enum exception_event_kind): Moved here from
-	break-catch-throw.c.
-	(catch_exception_event): Declare.
-	* mi/mi-cmd-catch.c (mi_cmd_catch_exception_event): New function.
-	(mi_cmd_catch_throw): New function.
-	(mi_cmd_catch_rethrow): New function.
-	(mi_cmd_catch_catch): New function.
-	* mi/mi-cmds.c (mi_cmds): Add 'catch-throw', 'catch-rethrow', and
-	'catch-catch' entries.
-	* mi/mi-cmds.h (mi_cmd_catch_throw): Declare.
-	(mi_cmd_catch_rethrow): Declare.
-	(mi_cmd_catch_catch): Declare.
-
-2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* annotate.c (annotate_source_line): Change return type to void,
-	update implementation to match.
-	* annotate.h (annotate_source_line): Change return type to void,
-	update header comment.
-	* stack.c (print_frame_info): Don't change what frame information
-	is printed based on whether annotations are on or not.
-
-2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* annotate.c: Add 'source.h' and 'objfiles.h' includes.
-	(annotate_source): Make static.
-	(annotate_source_line): Moved from source.c and renamed from
-	identify_source_line.  Update the return type.
-	* annotate.h (annotate_source): Delete declaration.
-	(annotate_source_line): Declaration moved from source.h, and
-	renamed from identify_source_line.  Return type updated.
-	* source.c (identify_source_line): Moved to annotate.c and renamed
-	to annotate_source_line.
-	(info_line_command): Remove check of annotation_level.
-	* source.h (identify_source_line): Move declaration to annotate.h
-	and rename to annotate_source_line.
-	* stack.c: Add 'annotate.h' include.
-	(print_frame_info): Remove check of annotation_level before
-	calling annotate_source_line.
-
-2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* source-cache.c (source_cache::get_plain_source_lines): Use
-	open_source_file_with_line_charpos instead of just
-	open_source_file, remove call to find_source_lines.
-	(source_cache::get_source_lines): Likewise.
-	* source.c (find_source_lines): Make static.
-	(get_filename_and_charpos): Renamed into...
-	(open_source_file_with_line_charpos): ..this along with changes to
-	return a scoped_fd, and some other minor clean ups.
-	(identify_source_line): Use open_source_file_with_line_charpos.
-	(search_command_helper): Use open_source_file_with_line_charpos
-	instead of just open_source_file, remove call to
-	find_source_lines.
-	* source.h (open_source_file_with_line_charpos): Declare new
-	function.
-	(find_source_lines): Delete declaration.
-
-2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* source.c (get_filename_and_charpos): Remove fullname
-	parameter.
-	(identify_source_line): Update call to get_filename_and_charpos.
-
-2019-06-14  Tom Tromey  <tromey@adacore.com>
-
-	PR gdb/24502:
-	* ui-style.h (skip_ansi_escape): Update comment.
-	* ui-file.h (class no_terminal_escape_file): New class.
-	* ui-file.c (no_terminal_escape_file::write)
-	(no_terminal_escape_file::puts): New methods.
-	* cli/cli-logging.c (handle_redirections): Use
-	no_terminal_escape_file.
-
-2019-06-14  Tom Tromey  <tromey@adacore.com>
-
-	* NEWS: Move convenience variable news above Python news.
-
-2019-06-14  Tom Tromey  <tom@tromey.com>
-
-	* gnulib: Move directory to top-level.
-	* configure.ac: Don't configure gnulib.
-	* configure: Rebuild.
-	* common/common-defs.h: Use new path to gnulib.
-	* Makefile.in (GNULIB_BUILDDIR): Now ../gnulib.
-	(GNULIB_H): Remove.
-	(INCGNU): Look in new gnulib location.
-	(HFILES_NO_SRCDIR): Remove gnulib files.
-	(SUBDIR, REQUIRED_SUBDIRS): Remove gnulib.
-	(generated_files): Remove GNULIB_H.
-	($(LIBGNU), all-lib): Remove targets.
-	(distclean): Don't mention GNULIB_BUILDDIR.
-	($(GNULIB_BUILDDIR)/Makefile): Remove target.
-
-2019-06-14  Tom Tromey  <tromey@adacore.com>
-
-	* symfile.c (add_symbol_file_command): Remove obsolete comment.
-	Warn if symbol file does not provide any symbols.
-
-2019-06-14  Tom Tromey  <tromey@adacore.com>
-
-	* source.c (find_and_open_source): Respect basenames_may_differ.
-
-2019-06-14  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* annotate.c (annotate_breakpoints_invalid): Make use of
-	scoped_restore_terminal_state.
-	(annotate_frames_invalid): Likewise.
-
-2019-06-14  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_evaluate_subexp) <case BINOP_ASSIGN>: Always
-	allow assignment to an internalvar.
-
-2019-06-14  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lex.l: Allow "_" in attribute names.
-
-2019-06-14  Tom Tromey  <tromey@adacore.com>
-
-	PR gdb/24653:
-	* regcache.c (registers_changed): Don't call alloca.
-	* top.c (execute_command): Don't call alloca.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-setshow.c (cli/cli-setshow.c): New parameter
-	'expression'.  When parsing an expression, error out if there's
-	junk after "unlimited".
-	(parse_cli_var_uinteger, parse_cli_var_zuinteger_unlimited)
-	(do_set_command): Adjust calls to is_unlimited_literal.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* compile/compile.c (make_compile_options_def_group): Add braces
-	around array_view initializer.
-	* thread.c (make_thread_apply_all_options_def_group)
-	(make_thread_apply_all_options_def_group): Likewise.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* NEWS (New commands): Mention "maint test-options
-	require-delimiter", "maint test-options unknown-is-error", "maint
-	test-options unknown-is-operand" and "maint show
-	test-options-completion-result".
-	(New command options, command completion): New section.
-	(Completion improvements): New section.
-	Mention that you can abbreviate "unlimited".
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-utils.c (parse_flags, parse_flags_qcs): Delete.
-	* cli/cli-utils.h (parse_flags, parse_flags_qcs): Delete.
-	* unittests/cli-utils-selftests.c (test_parse_flags)
-	(test_parse_flags_qcs): Delete.
-	(test_cli_utils): Don't call deleted functions.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* thread.c: Include "cli/cli-option.h".
-	(tp_array_compar_ascending): Global.
-	(tp_array_compar): Delete function.
-	(tp_array_compar_ascending, tp_array_compar_descending): New
-	functions.
-	(ascending_option_def, qcs_flag_option_def)
-	(thr_qcs_flags_option_defs)
-	(make_thread_apply_all_options_def_group)
-	(make_thread_apply_options_def_group): New.
-	(thread_apply_all_command): Use gdb::option::process_options.
-	(thread_apply_command_completer)
-	(thread_apply_all_command_completer): New.
-	(thread_apply_command): Use gdb::option::process_options.
-	(_initialize_thread): Delete THREAD_APPLY_FLAGS_HELP, replace it
-	with a new THREAD_APPLY_OPTION_HELP.  Use gdb::option::build_help
-	to generate help text of "thread apply".  Adjust "taas"'s help.
-	* tid-parse.c (tid_range_parser::in_thread_range): New method.
-	* tid-parse.h (tid_range_parser::in_thread_range): New method.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* thread.c (thread_apply_command): Check for invalid TID with
-	isdigit instead of !isalpha.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-utils.c (parse_flags_qcs): Use validate_flags_qcs.
-	(validate_flags_qcs): New.
-	* cli/cli-utils.h (struct qcs_flags): Change field types to int.
-	(validate_flags_qcs): Declare.
-	* stack.c (qcs_flag_option_def, fr_qcs_flags_option_defs): New.
-	(make_frame_apply_options_def_group): New.
-	(frame_apply_command_count): Process options with
-	gdb::option::process_options.
-	(frame_apply_completer): New.
-	(frame_apply_level_completer, frame_apply_all_completer)
-	(frame_apply_completer): New.
-	(_initialize_stack): Update help of "frame apply", "frame apply
-	level", "frame apply all" and "faas" to mention supported options
-	and install command completers.
-	* stack.h (frame_apply_all_completer): Declare.
-	* thread.c: Include "stack.h".
-	(tfaas_command): Add "--".
-	(_initialize_thread): Update help "tfaas" to mention supported
-	options and install command completer.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* completer.c (complete_nested_command_line): New.
-	(gdb_completion_word_break_characters_throw): Add assertion.
-	* completer.h (complete_nested_command_line): Declare.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* stack.c (parse_backtrace_qualifiers): New.
-	(backtrace_command): Use it.
-	(backtrace_command_completer): Complete on qualifiers.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* frame.c: Include "cli/cli-option.h.
-	(user_set_backtrace_options): New.
-	(backtrace_past_main, backtrace_past_entry, backtrace_limit):
-	Delete.
-	(get_prev_frame): Adjust.
-	(boolean_option_def, uinteger_option_def)
-	(set_backtrace_option_defs): New.
-	(_initialize_frame): Adjust and use
-	gdb::option::add_setshow_cmds_for_options to install "set
-	backtrace past-main" and "set backtrace past-entry".
-	* frame.h: Include "cli/cli-option.h".
-	(struct frame_print_options): Forward declare.
-	(print_frame_arguments_all, print_frame_arguments_scalars)
-	(print_frame_arguments_none): Declare.
-	(print_entry_values): Delete declaration.
-	(struct frame_print_options, user_frame_print_options): New.
-	(struct set_backtrace_options): New.
-	(set_backtrace_option_defs, user_set_backtrace_options): Declare.
-	* mi/mi-cmd-stack.c (mi_cmd_stack_list_frames)
-	(mi_cmd_stack_list_locals, mi_cmd_stack_list_args)
-	(mi_cmd_stack_list_variables): Pass down USER_FRAME_PRINT_OPTIONS.
-	(list_args_or_locals): Add frame_print_options parameter.
-	(mi_cmd_stack_info_frame): Pass down USER_FRAME_PRINT_OPTIONS.
-	* python/py-framefilter.c (enumerate_args): Pass down
-	USER_FRAME_PRINT_OPTIONS.
-	* stack.c: Include "cli/cli-option.h".
-	(print_frame_arguments_all, print_frame_arguments_scalars)
-	(print_frame_arguments_none): Declare.
-	(print_raw_frame_arguments, print_entry_values): Delete.
-	(user_frame_print_options): New.
-	(boolean_option_def, enum_option_def, frame_print_option_defs):
-	New.
-	(struct backtrace_cmd_options): New.
-	(bt_flag_option_def): New.
-	(backtrace_command_option_defs): New.
-	(print_stack_frame): Pass down USER_FRAME_PRINT_OPTIONS.
-	(print_frame_arg, read_frame_arg, print_frame_args)
-	(print_frame_info, print_frame): Add frame_print_options parameter
-	and use it.
-	(info_frame_command_core): Pass down USER_FRAME_PRINT_OPTIONS.
-	(backtrace_command_1): Add frame_print_options and
-	backtrace_cmd_options parameters and use them.
-	(make_backtrace_options_def_group): New.
-	(backtrace_command): Process command options with
-	gdb::option::process_options.
-	(backtrace_command_completer): New.
-	(_initialize_stack): Extend "backtrace"'s help to mention
-	supported options.  Install completer for "backtrace".
-	Install some settings commands with add_setshow_cmds_for_options.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* NEWS (Changed commands): Mention set/show print raw-frame-arguments,
-	and that "set/show print raw frame-arguments" are now deprecated.
-
-	* cli/cli-decode.c (add_setshow_boolean_cmd): Now returns the
-	command.
-	* command.h (add_setshow_boolean_cmd): Return cmd_list_element *.
-	* stack.c (_initialize_stack): Install "set/show print
-	raw-frame-arguments", and deprecate "set/show print raw
-	frame-arguments".
-	* valprint.c (_initialize_valprint): Deprecate "set/show print
-	raw".
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* compile/compile.c (struct compile_options): New.
-	(compile_flag_option_def, compile_command_option_defs)
-	(make_compile_options_def_group): New.
-	(compile_file_command): Handle options with
-	gdb::option::process_options.
-	(compile_file_command_completer): New function.
-	(compile_code_command): Handle options with
-	gdb::option::process_options.
-	(compile_code_command_completer): New function.
-	(_initialize_compiler): Install completers for "compile code" and
-	"compile file".  Mention available options in "compile code" and
-	"compile code"'s help.
-	* completer.c (advance_to_completion_word): New, factored out from
-	...
-	(advance_to_expression_complete_word_point): ... this.
-	(advance_to_filename_complete_word_point): New.
-	* completer.h (advance_to_filename_complete_word_point): New
-	declaration.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* compile/compile.c: Include "cli/cli-option.h".
-	(compile_print_value): Scope data pointer is now a
-	value_print_options pointer; adjust.
-	(compile_print_command): Process options.  Scope data pointer is
-	now a value_print_options pointer; adjust.
-	(_initialize_compile): Update "compile print"'s help to include
-	supported options.  Install a completer for "compile print".
-	* cp-valprint.c (show_vtblprint, show_objectprint)
-	(show_static_field_print): Delete.
-	(_initialize_cp_valprint): Don't install "set print
-	static-members", "set print vtbl", "set print object" here.
-	* printcmd.c: Include "cli/cli-option.h" and
-	"common/gdb_optional.h".
-	(print_command_parse_format): Rework to fill in a
-	value_print_options instead of a format_data.
-	(print_value): Change parameter type from format_data pointer to
-	value_print_options reference.  Adjust.
-	(print_command_1): Process options.  Adjust to pass down a
-	value_print_options.
-	(print_command_completer): New.
-	(_initialize_printcmd): Install print_command_completer as
-	handle_brkchars completer for the "print" command.  Update
-	"print"'s help to include supported options.
-	* valprint.c: Include "cli/cli-option.h".
-	(show_vtblprint, show_objectprint, show_static_field_print): Moved
-	here from cp-valprint.c.
-	(boolean_option_def, uinteger_option_def)
-	(value_print_option_defs, make_value_print_options_def_group):
-	New.  Use gdb::option::add_setshow_cmds_for_options to install
-	"set print elements", "set print null-stop", "set print repeats",
-	"set print pretty", "set print union", "set print array", "set
-	print address", "set print symbol", "set print array-indexes".
-	* valprint.h: Include <string> and "cli/cli-option.h".
-	(make_value_print_options_def_group): Declare.
-	(print_value): Change parameter type from format_data pointer to
-	value_print_options reference.
-	(print_command_completer): Declare.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* Makefile.in (SUBDIR_CLI_SRCS): Add cli/cli-option.c.
-	(COMMON_SFILES): Add maint-test-settings.c.
-	* cli/cli-decode.c (boolean_enums): New global, factored out from
-	...
-	(add_setshow_boolean_cmd): ... here.
-	* cli/cli-decode.h (boolean_enums): Declare.
-	* cli/cli-option.c: New file.
-	* cli/cli-option.h: New file.
-	* cli/cli-setshow.c (parse_cli_boolean_value(const char **)): New,
-	factored out from ...
-	(parse_cli_boolean_value(const char *)): ... this.
-	(is_unlimited_literal): Change parameter type to pointer to
-	pointer.  Adjust and advance ARG pointer.
-	(parse_cli_var_uinteger, parse_cli_var_zuinteger_unlimited)
-	(parse_cli_var_enum): New, factored out from ...
-	(do_set_command): ... this.  Adjust.
-	* cli/cli-setshow.h (parse_cli_boolean_value)
-	(parse_cli_var_uinteger, parse_cli_var_zuinteger_unlimited)
-	(parse_cli_var_enum): Declare.
-	* cli/cli-utils.c: Include "cli/cli-option.h".
-	(get_ulongest): New.
-	* cli/cli-utils.h (get_ulongest): Declare.
-	(check_for_argument): New overloads.
-	* maint-test-options.c: New file.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-utils.c (number_or_range_parser::get_number): Do not
-	parse a range if "-" is at the end of the string.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-setshow.c (parse_auto_binary_operation)
-	(parse_cli_boolean_value): Don't allow "o".
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* Makefile.in (COMMON_SFILES): Add maint-test-settings.c.
-	* NEWS: Mention maint test-settings KIND.
-	* maint-test-settings.c: New file.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-decode.c (add_setshow_cmd_full): Remove "show"
-	completer.
-	(add_setshow_string_cmd, add_setshow_string_noescape_cmd): Remove
-	"set" completers.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-setshow.c (do_set_command) <var_enum>: Detect junk
-	after item.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* cli/cli-setshow.c (is_unlimited_literal): Allow abbreviations.
-
-2019-06-13  Pedro Alves <palves@redhat.com>
-
-	* ax-gdb.c (agent_command_1): Remove skip_spaces call.
-	* breakpoint.c (watch_maybe_just_location): Remove skip_spaces
-	call.
-	* cli/cli-cmds.c (apropos_command): Remove skip_spaces call.
-	* cli/cli-utils.c (extract_info_print_args): Remove skip_spaces
-	calls.
-	(check_for_argument): Skip spaces after argument.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* thread.c (thread_apply_command): Adjust TID parsing.
-	* tid-parse.c (tid_range_parser::finished): Ensure parsing end is
-	detected before end of string.
-	(tid_is_in_list): Error out if LIST is invalid.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* completer.c (complete_line_internal_1): Rewind completion word
-	point.
-	(completion_tracker::advance_custom_word_point_by): Change
-	parameter type to int.
-	* completer.h (completion_tracker::advance_custom_word_point_by):
-	Likewise.
-
-2019-06-13  Pedro Alves  <palves@redhat.com>
-
-	* completer.c (advance_to_completion_word): Handle delimiters.
-
-2019-06-11  Bernhard Heckel  <bernhard.heckel@intel.com>
-
-	* dwarf2read.c (add_partial_symbol): Skip nameless modules.
-
-2019-06-11  Tom Tromey  <tom@tromey.com>
-
-	* common/common-utils.c (xmalloc, xrealloc, xcalloc)
-	(xmalloc_failed): Move to alloc.c.
-	* alloc.c: New file.
-	* Makefile.in (COMMON_SFILES): Add alloc.c.
-
-2019-06-11  Tom Tromey  <tom@tromey.com>
-
-	* nat/linux-waitpid.c: Don't include server.h.
-	(linux_debug): Remove.
-	(my_waitpid): Update.
-
-2019-06-11  Tom Tromey  <tromey@adacore.com>
-
-	* infcall.c (_initialize_infcall): Remove trailing newline from
-	help.
-	* user-regs.c (_initialize_user_regs): Remove trailing newline
-	from help.
-	* typeprint.c (_initialize_typeprint): Remove trailing newline
-	from help.
-	* reverse.c (_initialize_reverse): Remove trailing newlines from
-	help.
-	* tracepoint.c (_initialize_tracepoint): Remove trailing newlines
-	from help.
-	* language.c (add_set_language_command): Remove trailing newline
-	from help.
-	* infcmd.c (_initialize_infcmd): Remove trailing newlines from
-	help.
-	* disasm.c (_initialize_disasm): Remove trailing newline from
-	help.
-	* top.c (init_main): Remove trailing newline from help.
-	* interps.c (_initialize_interpreter): Remove trailing newline
-	from help.
-	* btrace.c (_initialize_btrace): Remove trailing newlines from
-	help.
-	* breakpoint.c (_initialize_breakpoint): Remove trailing newline
-	from help.
-	* python/python.c (_initialize_python): Remove trailing newline
-	from help.
-	* spu-tdep.c (_initialize_spu_tdep): Remove trailing newlines from
-	help.
-	* tui/tui-win.c (_initialize_tui_win): Remove trailing newlines
-	from help.  Reformat some text.
-	* tui/tui-stack.c (_initialize_tui_stack): Remove trailing newline
-	from help.
-	* tui/tui-layout.c (_initialize_tui_layout): Remove trailing
-	newline from help.
-
-2019-06-11  Tom Tromey  <tromey@adacore.com>
-
-	* darwin-nat.c (darwin_decode_exception_message)
-	(darwin_decode_message, darwin_nat_target::kill): Fix shadowing.
-
-2019-06-10  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* valops.c (value_slice): Check for not allocated or not
-	associated values.
-
-2019-06-10  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/24618
-	* dwarf2read.c (struct mapped_index::symbol_name_slot_invalid): Make
-	sure an empty slot (defined by a 32-bit zero pair) is recognized as
-	invalid.
-
-2019-06-10  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/24611
-	* linespec.c (linespec_lexer_lex_string): Remove incorrect
-	"++(PARSER_STREAM (parser))" for "[abi"-prefixed colon.  Add assert.
-
-2019-06-10  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/24545
-	* symtab.c (struct demangled_name_entry): Add language field.
-	(symbol_set_names):  Revert "[gdb/symtab] Fix language of duplicate
-	static minimal symbol".  Set and use language field.
-
-2019-06-10  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (_initialize_ada_language): Update help text.
-
-2019-06-10  Tom Tromey  <tromey@adacore.com>
-
-	* m32c-tdep.c (m32c_m16c_address_to_pointer): Don't end warning
-	with a newline.
-	* guile/guile.c (handle_boot_error): Don't end warning with a
-	newline.
-	* cli/cli-cmds.c (exit_status_set_internal_vars): Don't end
-	warning with a newline.
-	* s12z-tdep.c (s12z_skip_prologue): Don't end warning with a
-	newline.
-	(s12z_frame_cache): Likewise.
-	* dwarf-index-cache.c (index_cache::store): Don't end warning with
-	a newline.
-	* solib-svr4.c (disable_probes_interface): Don't end warning with
-	a newline.
-	* nat/fork-inferior.c (fork_inferior): Don't end warning with a
-	newline.
-	* python/python.c (do_finish_initialization): Don't end warning
-	with a newline.
-
-2019-06-10  Tom Tromey  <tom@tromey.com>
-
-	* python/py-breakpoint.c (gdbpy_breakpoint_created)
-	(gdbpy_breakpoint_deleted, gdbpy_breakpoint_modified): Use
-	gdbpy_enter.
-
-2019-06-10  Tom Tromey  <tromey@adacore.com>
-
-	* elfread.c (elf_read_minimal_symbols): Don't set the dbx objfile
-	data.
-	(elf_new_init): Don't call stabsread_new_init.
-	* dbxread.c (coffstab_build_psymtabs): Set dbx objfile data.
-	(elfstab_build_psymtabs): Likewise.  Call stabsread_new_init.
-	* coffread.c (coff_symfile_init): Don't set the dbx objfile data.
-
-2019-06-10  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/16264
-	PR symtab/24517
-	* dwarf2read.c (read_func_scope): Handle DW_AT_main_subprogram.
-
-2019-06-06  Руслан Ижбулатов <lrn1986@gmail.com>
-
-	* source.c (find_and_open_source): Also rewrite relative file
-	names.
-
-2019-04-26  Amos Bird  <amosbird@gmail.com>
-
-	* annotate.c (annotate_thread_exited): Add "thread-exited"
-	annotation.
-
-2019-06-06  Tom Tromey  <tromey@adacore.com>
-
-	* maint.h (class scoped_command_stats): Use
-	DISABLE_COPY_AND_ASSIGN.
-	<print_time>: New method.
-	* maint.c (scoped_command_stats, ~scoped_command_stats): Call
-	print_time.
-	(scoped_command_stats::print_time): New method.
-
-2019-06-05  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_insn::decode): Gracefully ignore
-	instructions of lengths 6 or 8 bytes.
-
-2019-06-04  Pedro Alves  <palves@redhat.com>
-
-	* common/gdb_unique_ptr.h (make_unique_xstrdup): New.
-
-	* ada-lang.c (catch_ada_completer): Use make_unique_xstrdup.
-	* breakpoint.c (condition_completer): Likewise.
-	* cli/cli-dump.c (scan_expression): Likewise.
-	* common/filestuff.c (mkdir_recursive): Likewise.
-	* common/gdb_tilde_expand.c (gdb_tilde_expand_up)
-	* common/pathstuff.c (gdb_realpath, gdb_realpath_keepfile)
-	(gdb_abspath): Likewise.
-	* compile/compile-cplus-types.c
-	(compile_cplus_instance::decl_name): Likewise.
-	* completer.c (complete_explicit_location):
-	(signal_completer, reg_or_group_completer_1): Likewise.
-	* cp-support.c (cp_remove_params_if_any): Likewise.
-	* fbsd-tdep.c (fbsd_core_vnode_path): Likewise.
-	* guile/scm-safe-call.c (gdbscm_safe_eval_string): Likewise.
-	* infcmd.c (strip_bg_char): Likewise.
-	* linespec.c (copy_token_string): Likewise.
-	* mi/mi-main.c (output_cores): Likewise.
-	* psymtab.c (psymtab_search_name):
-	* symfile.c (test_set_ext_lang_command): Likewise.
-	* target.c (target_fileio_read_stralloc): Likewise.
-	* tui/tui-regs.c (tui_reggroup_completer): Likewise.
-	* value.c (complete_internalvar): Likewise.
-
-2019-06-04  Christian Biesinger  <cbiesinger@google.com>
-
-	Add objfile property to gdb.Type.
-	* NEWS: Mention Python API addition.
-	* python/py-type.c (typy_get_objfile): New method.
-
-2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Mention the new set|show style [title|highlight].
-	Mention changes to "show style", "help" and "apropos".
-
-2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-decode.h (apropos_cmd): Add verbose argument.
-	* cli/cli-decode.c (apropos_cmd): Likewise.  Use print_doc_of_command
-	instead of print_help_for_command.
-	(print_doc_of_command): New function.
-	(help_list): Add 'apropos -v word' suggestion.
-	(print_help_for_command): Style the command name using title style.
-	* cli/cli-cmds.c (apropos_command): Parse optional -v flag.
-	(_initialize_cli_cmds): Describe -v in apropos_command help.
-
-2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-style.h (cli_style_option): Add name in constructor,
-	add m_name class member, add constructor with intensity,
-	add name class function.
-	(cli_style_option::add_setshow_commands): Remove name argument.
-	(highlight_style, title_style): New styles.
-	* cli/cli-style.c (do_show): New function that shows a style
-	characteristic styling the style name with itself.
-	(set_style_name): New function.
-	(STYLE_ADD_SETSHOW_COMMANDS): Remove NAME arguments.
-	Update all callers according to the changes in cli/cli-style.h.
-	* utils.h (fputs_highlighted): New function.
-	* utils.c (fputs_highlighted): Likewise.
-
-2019-05-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Mention new pipe command and new convenience variables.
-
-2019-05-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-cmds.c (pipe_command): New function.
-	(_initialize_cli_cmds): Call add_com for pipe_command.
-	Define | as an alias for pipe.
-	(exit_status_set_internal_vars): New function.
-	(shell_escape): Call exit_status_set_internal_vars.
-	cli/cli-decode.c (find_command_name_length): Recognize | as
-	a single character command.
-
-2019-05-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* gdbcmd.h (execute_command_to_ui_file): New declaration.
-	top.c (execute_command_to_ui_file): New function, mostly a copy
-	of execute_command_to_string.
-	(execute_command_to_string): Implement by calling
-	execute_command_to_ui_file.
-
-2019-05-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* top.h (saved_command_line): Remove declaration.
-	* top.c (previous_saved_command_line, previous_repeat_arguments):
-	New variables.
-	(saved_command_line): Make static, define together with other
-	'repeat variables'.
-	(dont_repeat): Clear repeat_arguments.
-	(repeat_previous, get_saved_command_line, save_command_line):
-	New functions.
-	(gdb_init): Initialize saved_command_line
-	and previous_saved_command_line.
-	* main.c (captured_main_1): Remove saved_command_line initialization.
-	* event-top.c (handle_line_of_input): Update to use
-	the new 'repeat' related functions instead of direct access to
-	saved_command_line.
-	* command.h (repeat_previous, get_saved_command_line,
-	save_command_line): New declarations.
-	(dont_repeat): Add comment.
-
-2019-05-30  Tom Tromey  <tromey@adacore.com>
-
-	* gdbtypes.h (struct range_bounds) <flag_upper_bound_is_count>:
-	Fix comment.
-	(TYPE_ARRAY_UPPER_BOUND_IS_UNDEFINED): Rewrite comment.
-
-2019-05-30  Jan Vrany  <jan.vrany@fit.cvut.cz>
-
-	PR cli/24587
-	* completer.c (complete): Initialize variable word.
-
-2019-05-29  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	Ref.: https://bugzilla.redhat.com/show_bug.cgi?id=1708192
-	Ref.: https://bugzilla.redhat.com/show_bug.cgi?id=1715008
-	* dwarf2read.c (dwarf_decode_macro_bytes): Move check to see if
-	'body' is NULL to the outter 'if', protecting the '!is_define'
-	situation as well.
-
-2019-05-29  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (partial_die_parent_scope): Call dwarf_tag_name.
-	(dwarf_unknown): New function.
-	(dwarf_tag_name, dwarf_attr_name, dwarf_form_name)
-	(dwarf_type_encoding_name): Use dwarf_unknown.
-
-2019-05-29  Tom Tromey  <tromey@adacore.com>
-
-	PR c++/20020:
-	* cp-valprint.c (cp_print_value_fields): Call
-	cp_print_static_field inside "try".
-
-2019-05-29  Tom Tromey  <tromey@adacore.com>
-
-	* inflow.c (struct terminal_info): Add default operator=.
-	* configure: Rebuild.
-	* warning.m4 (AM_GDB_WARNINGS): Add -Wdeprecated-copy,
-	-Wdeprecated-copy-dtor, -Wredundant-move.
-
-2019-05-29  Tom Tromey  <tromey@adacore.com>
-
-	* NEWS: Add entry.
-	* infcmd.c (print_return_value_1): Handle finish_print
-	option.
-	(show_print_finish): New function.
-	(_initialize_infcmd): Add "set/show print finish" commands.
-	* valprint.c (user_print_options): Initialize new member.
-	* valprint.h (struct value_print_options) <finish_print>: New
-	member.
-
-2019-05-28  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_remove_Xbn_suffix)
-	(find_old_style_renaming_symbol)
-	(parse_old_style_renaming): Remove.
-	(ada_find_renaming_symbol): Don't call
-	find_old_style_renaming_symbol.
-	(ada_is_renaming_symbol): Rename from
-	ada_find_renaming_symbol.  Remove "block" parameter.  Return
-	bool.  Now static.
-	(ada_read_var_value): Update and simplify.
-	* ada-exp.y (write_var_or_type): Remove old code.
-
-2019-05-28  Alan Hayward  <alan.hayward@arm.com>
-
-	* event-top.c: Remove include comment.
-	* inflow.c (class scoped_ignore_sigttou): Move from here...
-	* inflow.h (class scoped_ignore_sigttou): ...to here.
-	* ser-unix.c (hardwire_drain_output): Block SIGTTOU during drain.
-	* top.c:  Remove include comment.
-
-2019-05-27  Tom Tromey  <tom@tromey.com>
-
-	* NEWS: Fix typo.
-
-2019-05-22  Tom Tromey  <tromey@adacore.com>
-
-	* target.c (target_follow_exec): Constify parameter.
-	* target-delegates.c: Rebuild.
-	* remote.c (remote_target::follow_exec): Constify parameter.
-	* infrun.c (follow_exec): Constify parameter.
-	* target.h (struct target_ops) <follow_exec>: Constify parameter.
-	(target_follow_exec): Likewise.
-
-2019-05-22  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c (aarch64_execute_dwarf_cfa_vendor_op): Treat
-	DW_CFA_AARCH64_negate_ra_state as nop on non pauth targets.
-
-2019-05-22  Alan Hayward  <alan.hayward@arm.com>
-
-	* NEWS: Add debugredirect and testsuite sections.
-
-2019-05-22  Simon Cook  <simon.cook@embecosm.com>
-
-	* riscv-tdep.c (riscv_gdbarch_init): Support determining flen from
-	target descriptions using exclusively floating point register name
-	aliases.
-
-2019-05-21  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	PR gdb/18644:
-	* f-lang.c (build_fortran_types): Handle the case where
-	gdbarch_floatformat_for_type returns a nullptr.
-
-2019-05-21  Tom de Vries  <tdevries@suse.de>
-
-	PR cli/24587
-	* cli/cli-cmds.c (complete_command): Fix use of unitialized variable.
-
-2019-05-18  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	PR gdb/18644:
-	* f-lang.c (build_fortran_types): Use floatformats_ia64_quad for
-	16-byte floats.
-	* i386-tdep.c (i386_floatformat_for_type): Use
-	floatformats_ia64_quad for the 16-byte floating point component
-	within a fortran 32-byte complex number.
-
-2019-05-18  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf2read.c (struct cu_partial_die_info): Add constructor,
-	delete default constructor.
-	(find_partial_die): Update to return const struct.
-	(partial_die_parent_scope): Move variable declaration into scope
-	of its use and change its type to auto.
-	(guess_partial_die_structure_name): Likewise.
-	(partial_die_info::fixup): Likewise.
-
-2019-05-17  Tom Tromey  <tromey@adacore.com>
-
-	* source.c (find_and_open_source): Remove cast.
-
-2019-05-17  Tom Tromey  <tromey@adacore.com>
-
-	* annotate.c (annotate_source): Make "filename" const.
-	* annotate.h (annotate_source): Use const.
-
-2019-05-17  Alan Hayward  <alan.hayward@arm.com>
-
-	* disasm.c (set_disassembler_options): Send errors to stderr.
-
-2019-05-17  Alan Hayward  <alan.hayward@arm.com>
-
-	* cli/cli-interp.c (struct saved_output_files): Add saved entry.
-	(cli_interp_base::set_logging): Check debug_redirect.
-	* cli/cli-interp.h (set_logging): Add debug_redirect parameter.
-	* cli/cli-logging.c (debug_redirect): Add static variable.
-	(pop_output_files): Add default param.
-	(handle_redirections): Print debug setting.
-	(show_logging_command): Likewise.
-	(_initialize_cli_logging): Add debugredirect command.
-	* interps.c (current_interp_set_logging): Add debug_redirect
-	parameter.
-	* interps.h (set_logging): Add debug_redirect parameter.
-	(current_interp_set_logging): Likewise.
-	* mi/mi-common.h: Likewise.
-	* mi/mi-interp.c (mi_interp::set_logging): Likewise.
-
-2019-05-17  Alan Hayward  <alan.hayward@arm.com>
-	    Tom Tromey  <tromey@adacore.com>
-
-	* cli/cli-interp.c (cli_interp_base::set_logging): Create tee_file
-	directly.
-	* cli/cli-interp.h (make_logging_output): Remove declaration.
-	* cli/cli-logging.c (make_logging_output): Remove function.
-	* mi/mi-interp.c (mi_interp::set_logging): Create tee_file
-	directly.
-	* ui-file.c (tee_file::tee_file): Remove bools.
-	(tee_file::~tee_file): Remove deletes.
-	* ui-file.h (tee_file): Remove bools.
-
-2019-01-28  Jan Vrany  <jan.vrany@fit.cvut.cz>
-
-	* mi/mi-cmds.h (mi_cmd_complete): New function.
-	* mi/mi-main.c (mi_cmd_complete): Likewise.
-	* mi/mi-cmds.c: Define new MI command -complete.
-	* NEWS: Mention new -complete command.
-
-2019-01-24  Jan Vrany  <jan.vrany@fit.cvut.cz>
-
-	* completer.h (complete): New function.
-	* completer.c (complete): Likewise.
-	* cli/cli-cmds.c: (complete_command): Update to use new complete()
-	function defined in completer.h.
-
-2019-05-17  Jan Vrany  <jan.vrany@fit.cvut.cz>
-
-	* MAINTAINERS (Write After Approval): Add myself.
-
-2019-05-17  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/24094
-	* dwarf2read.c (struct cu_partial_die_info): New struct.
-	(find_partial_die): Return cu_partial_die_info.
-	(partial_die_parent_scope, guess_partial_die_structure_name)
-	(partial_die_info::fixup): Handle new return type of find_partial_die.
-
-2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* stap-probe.c (stap_parse_register_operand): Make "regname" an
-	"std::string", simplifying the algorithm.
-
-2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* stap-probe.c (handle_stap_probe): Fix complaint formatting.
-	(stap_static_probe_ops::get_probes): Likewise.
-
-2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* stap-probe.c (stap_parse_register_operand): Make "if (*p->arg ==
-	'-')" and "else if".
-	(stap_parse_single_operand): Join checks for
-	"gdbarch_stap_parse_special_token_p" and
-	"gdbarch_stap_parse_special_token" in the same "if" statement.
-	Invert check when verifying for operation on register
-	displacement.
-
-2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* stap-probe.c (stap_get_opcode): Update comment.
-	(stap_get_expected_argument_type): Likewise.
-	(handle_stap_probe): Likewise.
-
-2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* i386-tdep.c (i386_stap_parse_special_token_triplet): Change
-	return type to 'bool'.  Adjust comment.  Use 'bool' when
-	appropriate.
-	(i386_stap_parse_special_token_three_arg_disp): Likewise.
-	* stap-probe.c (stap_parse_argument_1): Likewise.
-	(stap_is_operator): Likewise.
-	(stap_is_generic_prefix): Likewise.
-	(stap_is_register_prefix): Likewise.
-	(stap_is_register_indirection_prefix): Likewise.
-	(stap_is_integer_prefix): Likewise.
-	(stap_generic_check_suffix): Likewise.
-	(stap_check_integer_suffix): Likewise.
-	(stap_check_register_suffix): Likewise.
-	(stap_check_register_indirection_suffix): Likewise.
-	(stap_parse_register_operand): Likewise.
-	(stap_parse_single_operand): Likewise.
-	(stap_parse_argument_1): Likewise.
-	(stap_probe::get_argument_count): Likewise.
-	(stap_is_operator): Likewise.
-
-2019-05-16  Tom Tromey  <tromey@adacore.com>
-
-	* darwin-nat.c (thread_info_from_private_thread_info): Add struct
-	keyword to foreach.
-
-2019-05-15  Simon Marchi  <simon.marchi@efficios.com>
-
-	* linux-thread-db.c (try_thread_db_load_1): Change return type
-	to bool.
-	(try_thread_db_load): Likewise.
-	(try_thread_db_load_from_pdir_1): Likewise.
-	(try_thread_db_load_from_pdir): Likewise.
-	(try_thread_db_load_from_sdir): Likewise.
-	(try_thread_db_load_from_dir): Likewise.
-	(thread_db_load_search): Likewise.
-	(has_libpthread): Likewise.
-	(thread_db_load): Likewise.
-
-2019-05-15  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	Ref.: https://bugzilla.redhat.com/show_bug.cgi?id=1708192
-	* dwarf2read.c (parse_macro_definition): Check whether 'body' is
-	NULL, and complain/return if that's the case.
-
-2019-05-15  John Darrington <john@darrington.wattle.id.au>
-
-	* s12z-tdep.c (push_pull_get_stack_adjustment): New function.
-	(advance, posn, abstract_read_memory): New functions.
-	[struct mem_read_abstraction]: New struct.
-	(s12z_frame_cache): Use opcodes API to interpret stack frame code.
-
-2019-05-14  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (coerce_unspec_val_to_type): Only set address when
-	value is not lval_memory.
-
-2019-05-14  Tom Tromey  <tromey@adacore.com>
-
-	* solib.c (info_sharedlibrary_command): Style the file name.
-
-2019-05-14  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c (aarch64_vnh_type): Add half view.
-	(aarch64_vnv_type): Likewise.
-	* target-descriptions.c (make_gdb_type): Add TDESC_TYPE_IEEE_HALF.
-	* common/tdesc.c: Likewise.
-	* common/tdesc.h (enum tdesc_type_kind): Likewise.
-	* features/aarch64-fpu.c (create_feature_aarch64_fpu): Regenerate.
-	* features/aarch64-fpu.xml: Add ieee half view.
-	* features/aarch64-sve.c (create_feature_aarch64_fpu): Likewise.
-	* gdbtypes.c (gdbtypes_post_init): Add builtin_half
-	* gdbtypes.h (struct builtin_type): Likewise.
-	(struct objfile_type): Likewise.
-
-2019-05-12  Paul Naert  <paul.naert@polymtl.ca>
-
-	* language.c (language_sniff_from_mangled_name): Fix "langauge"
-	typo.
-	* location.h (string_to_event_location): Likewise.
-
-2019-05-11  Joel Brobecker  <brobecker@adacore.com>
-
-	GDB 8.3 released.
-
-2019-05-10  Simon Marchi  <simon.marchi@efficios.com>
-
-	* breakpoint.h (fix_multi_location_breakpoint_output_globally):
-	New variable declaration.
-	* breakpoint.c (fix_multi_location_breakpoint_output_globally):
-	New variable.
-	(print_one_breakpoint): Use ui_out::test_flags and new global
-	variable to compute use_fixed_output.
-	* mi/mi-main.h (mi_multi_location_breakpoint_output_fixed):
-	Remove.
-	* mi/mi-main.c (fix_multi_location_breakpoint_output): Remove.
-	(mi_multi_location_breakpoint_output_fixed): Remove.
-	(mi_cmd_fix_multi_location_breakpoint_output): Adjust to set the
-	new variable.
-	* mi/mi-out.c (mi_ui_out::mi_ui_out): Set
-	fix_multi_location_breakpoint_output flag if version >= 3.
-	* ui-out.h (enum ui_out_flag)
-	<fix_multi_location_breakpoint_output>: New enumerator.
-
-2019-05-10  Simon Marchi  <simon.marchi@efficios.com>
-
-	* contrib/cc-with-tweaks.sh: Validate dwz's work.
-
-2019-05-10  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (catch_ada_completer): New function.
-	(_initialize_ada_language): Use it.
-
-2019-05-10  Tom Tromey  <tromey@adacore.com>
-
-	* thread.c (print_thread_info): Make "requested_threads" const.
-	* gdbthread.h (print_thread_info): Make "requested_threads"
-	const.
-	* ada-tasks.c (print_ada_task_info): Make "taskno_str" const.
-	* ada-lang.h (print_ada_task_info): Make "taskno_str" const.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* gdbtypes.c (objfile_type_data): Change type.
-	(objfile_type, _initialize_gdbtypes): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2-frame.c (dwarf2_frame_objfile_data): Change type.
-	(dwarf2_frame_find_fde, dwarf2_build_frame_info)
-	(_initialize_dwarf2_frame): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* objc-lang.c (objc_objfile_data): Change type.
-	(find_methods): Update.
-	(_initialize_objc_lang): Remove.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* stabsread.c (rs6000_builtin_type_data): Change type.
-	(rs6000_builtin_type, _initialize_stabsread): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* mips-tdep.c (mips_pdr_data): Remove.
-	(_initialize_mips_tdep): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* hppa-tdep.c (hppa_objfile_priv_data): Change type.
-	(hppa_init_objfile_priv_data, read_unwind_info)
-	(find_unwind_entry, _initialize_hppa_tdep): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* elfread.c (elf_objfile_gnu_ifunc_cache_data): Change type.
-	(elf_gnu_ifunc_record_cache): Update.  Don't allocate hash table
-	on obstack.
-	(elf_gnu_ifunc_resolve_by_cache, _initialize_elfread): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* mdebugread.c (basic_type_data): Change type.
-	(basic_type, _initialize_mdebugread): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* common/gdb_unique_ptr.h (struct noop_deleter): New.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* nto-tdep.c (nto_inferior_data_reg): Change type.
-	(nto_inferior_data): Update.
-	(nto_inferior_data_cleanup, nto_new_inferior_data)
-	(_initialize_nto_tdep): Remove.
-	* nto-tdep.h (struct nto_inferior_data): Add initializers.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* ada-lang.c (struct ada_inferior_data): Add initializers.
-	(ada_inferior_data): Change type.
-	(ada_inferior_data_cleanup): Remove.
-	(get_ada_inferior_data, ada_inferior_exit)
-	(struct ada_pspace_data): Add initializers, destructor.
-	(ada_pspace_data_handle): Change type.
-	(get_ada_pspace_data): Update.
-	(ada_pspace_data_cleanup): Remove.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* coffread.c (struct coff_symfile_info): Add initializers.
-	(coff_objfile_data_key): Move lower.  Change type.
-	(coff_symfile_init, coff_symfile_read, _initialize_coffread):
-	Update.
-	(coff_free_info): Remove.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* fbsd-tdep.c (struct fbsd_pspace_data): Add initializers.
-	(fbsd_pspace_data_handle): Move lower.  Change type.
-	(get_fbsd_pspace_data): Update.
-	(fbsd_pspace_data_cleanup): Remove.
-	(_initialize_fbsd_tdep): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* ada-tasks.c (ada_tasks_pspace_data_handle): Change type.
-	(get_ada_tasks_pspace_data): Update.
-	(ada_tasks_pspace_data_cleanup): Remove.
-	(_initialize_tasks): Update.
-	(ada_tasks_inferior_data_handle): Change type.
-	(get_ada_tasks_inferior_data): Update.
-	(ada_tasks_inferior_data_cleanup): Remove.
-	(struct ada_tasks_pspace_data): Add initializers.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* symfile.h (struct sym_probe_fns) <sym_get_probes>: Change type.
-	* symfile-debug.c (debug_sym_get_probes): Change type.
-	* stap-probe.c (handle_stap_probe):
-	(stap_static_probe_ops::get_probes): Change type.
-	* probe.h (class static_probe_ops) <get_probes>: Change type.
-	* probe.c (class any_static_probe_ops) <get_probes>: Change type.
-	(parse_probes_in_pspace): Update.
-	(find_probes_in_objfile, find_probe_by_pc, collect_probes):
-	Update.
-	(any_static_probe_ops::get_probes): Change type.
-	* elfread.c (elfread_data): New typedef.
-	(probe_key): Change type.
-	(elf_get_probes): Likewise.  Update.
-	(probe_key_free): Remove.
-	(_initialize_elfread): Update.
-	* dtrace-probe.c (class dtrace_static_probe_ops) <get_probes>:
-	Change type.
-	(dtrace_process_dof_probe, dtrace_process_dof)
-	(dtrace_static_probe_ops::get_probe): Change type.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (struct xcoff_symfile_info): Rename from
-	coff_symfile_info.  Add initializers.
-	(xcoff_objfile_data_key): Move lower.  Change type.
-	(XCOFF_DATA): Rewrite.
-	(xcoff_free_info): Remove.
-	(xcoff_symfile_init, _initialize_xcoffread, read_xcoff_symtab)
-	(read_symbol, read_symbol_lineno, find_linenos, init_stringtab)
-	(xcoff_initial_scan): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* solib-svr4.c (struct svr4_info): Add initializers and
-	destructor.
-	<probes_table>: Now an htab_up.
-	(solib_svr4_pspace_data): Change type.
-	(free_probes_table): Simplify.
-	(~svr4_info): Rename from svr4_pspace_data_cleanup.
-	(get_svr4_info, probes_table_htab_remove_objfile_probes)
-	(probes_table_remove_objfile_probes, register_solib_event_probe)
-	(solib_event_probe_at, svr4_update_solib_event_breakpoint)
-	(_initialize_svr4_solib): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* remote.c (remote_pspace_data): Change type.
-	(remote_pspace_data_cleanup): Remove.
-	(get_remote_exec_file, set_pspace_remote_exec_file)
-	(_initialize_remote): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* breakpoint.c (breakpoint_objfile_key): Change type.
-	(get_breakpoint_objfile_data): Update.
-	(free_breakpoint_objfile_data): Remove.
-	(_initialize_breakpoint): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* linux-tdep.c (struct linux_info): Add initializers.
-	(linux_inferior_data): Move.  Change type.
-	(invalidate_linux_cache_inf): Update.
-	(linux_inferior_data_cleanup): Remove.
-	(get_linux_inferior_data, _initialize_linux_tdep): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* auxv.c (auxv_inferior_data): Move.  Change type.
-	(auxv_inferior_data_cleanup): Remove.
-	(invalidate_auxv_cache_inf): Rewrite.
-	(get_auxv_inferior_data, _initialize_auxv): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* symfile-debug.c (struct debug_sym_fns_data): Add initializers.
-	(symfile_debug_objfile_data_key): Change type.
-	(symfile_debug_installed, debug_qf_has_symbols)
-	(debug_qf_find_last_source_symtab)
-	(debug_qf_forget_cached_source_info)
-	(debug_qf_map_symtabs_matching_filename, debug_qf_lookup_symbol)
-	(debug_qf_print_stats, debug_qf_dump)
-	(debug_qf_expand_symtabs_for_function)
-	(debug_qf_expand_all_symtabs)
-	(debug_qf_expand_symtabs_with_fullname)
-	(debug_qf_map_matching_symbols)
-	(debug_qf_expand_symtabs_matching)
-	(debug_qf_find_pc_sect_compunit_symtab)
-	(debug_qf_map_symbol_filenames)
-	(debug_qf_find_compunit_symtab_by_address, debug_sym_get_probes)
-	(debug_sym_new_init, debug_sym_init, debug_sym_read)
-	(debug_sym_read_psymbols, debug_sym_finish, debug_sym_offsets)
-	(debug_sym_read_linetable, debug_sym_relocate): Update.
-	(symfile_debug_free_objfile): Remove.
-	(install_symfile_debug_logging, _initialize_symfile_debug):
-	Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.h (struct dwarf2_per_objfile): Don't inherit from
-	allocate_on_obstack.
-	* dwarf2read.c (dwarf2_objfile_data_key): Change type.
-	(get_dwarf2_per_objfile): Update.
-	(set_dwarf2_per_objfile): Remove.
-	(dwarf2_has_info, dwarf2_get_section_info): Update.
-	(dwarf2_free_objfile): Remove.
-	(_initialize_dwarf2_read): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* auto-load.c (struct auto_load_pspace_info): Add destructor and
-	initializers.
-	<unsupported_script_warning_printed,
-	script_not_found_warning_printed>: Now bool.
-	(auto_load_pspace_data): Change type.
-	(~auto_load_pspace_info): Rename from
-	auto_load_pspace_data_cleanup.
-	(get_auto_load_pspace_data, init_loaded_scripts_info)
-	(clear_section_scripts, maybe_print_unsupported_script_warning)
-	(maybe_print_script_not_found_warning, _initialize_auto_load):
-	Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* objfiles.c (objfile_pspace_info): Add destructor and
-	initializers.
-	(objfiles_pspace_data): Change type.
-	(~objfile_pspace_info): Rename from objfiles_pspace_data_cleanup.
-	(get_objfile_pspace_data): Update.
-	(objfiles_bfd_data): Change type.
-	(get_objfile_bfd_data): Update.
-	(objfile_bfd_data_free, _initialize_objfiles): Remove.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* break-catch-syscall.c (catch_syscall_inferior_data): Move.
-	Change type.
-	(get_catch_syscall_inferior_data): Update.
-	(catch_syscall_inferior_data_cleanup): Remove.
-	(_initialize_break_catch_syscall): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* inflow.c (struct terminal_info): Add destructor and
-	initializers.
-	(inflow_inferior_data): Change type.
-	(~terminal_info): Rename from inflow_inferior_data_cleanup.
-	(get_inflow_inferior_data, inflow_inferior_exit)
-	(swap_terminal_info, _initialize_inflow): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* target-dcache.c (target_dcache_cleanup): Remove.
-	(target_dcache_aspace_key): Change type.
-	(target_dcache_init_p, target_dcache_invalidate)
-	(target_dcache_get, target_dcache_get_or_init)
-	(_initialize_target_dcache): Update.
-	* dcache.h (struct dcache_deleter): New.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (struct symbol_cache): Add destructor and
-	initializers.
-	(symbol_cache_key): Move.  Change type.
-	(make_symbol_cache, free_symbol_cache): Remove.
-	(get_symbol_cache): Update.
-	(symbol_cache_cleanup): Remove.
-	(ALL_PSPACES, symbol_cache_flush)
-	(maintenance_print_symbol_cache)
-	(maintenance_print_symbol_cache_statistics, _initialize_symtab):
-	Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (struct main_info): Add destructor and initializers.
-	(main_progspace_key): Move.  Change type.
-	(get_main_info): Update.
-	(main_info_cleanup): Remove.
-	(_initialize_symtab): Update.
-
-2019-05-08  Tom Tromey  <tom@tromey.com>
-
-	* registry.h (DECLARE_REGISTRY): Define the _key class.
-
-2019-05-08  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* NEWS: Merge two 'New commands' sections.
-
-2019-05-08  Joel Brobecker  <brobecker@adacore.com>
-
-	* ada-valprint.c (ada_val_print_gnat_array): Remove language
-	parameter and use Ada language definition instead.
-	(ada_val_print_ptr): Remove unused language parameter.
-	(ada_val_print_num): Remove language parameter and use Ada language
-	definition instead.
-	(ada_val_print_enum, ada_val_print_flt): Remove unused language
-	parameter.
-	(ada_val_print_struct_union, ada_val_print_ref): Remove language
-	parameter and use Ada language definition instead.
-	(ada_val_print_1): Update all ada_val_print_xxx calls.
-	Remove language parameter.
-	(ada_val_print): Update ada_val_print_1 call.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* remote.c (remote_hw_watchpoint_limit)
-	(remote_hw_watchpoint_length_limit, remote_hw_breakpoint_limit):
-	Now static.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* maint.c (_initialize_maint_cmds): Move initialization code to
-	remote.c.
-	(watchdog, show_watchdog): Move to remote.c.
-	* remote.c (watchdog, show_watchdog): Move from maint.c.  Make
-	"watchdog" static.
-	(_initialize_remote): Move initialization code from maint.c.
-	* defs.h (watchdog): Don't declare.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* tui/tui-interp.c: Include main.h.
-	* interps.c: Include main.h.
-	* main.h (interpreter_p): Declare.
-	* defs.h (interpreter_p): Don't declare.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2loc.c: Include dwarf2read.h.
-	* defs.h (read_unsigned_leb128): Don't declare.
-	* dwarf2read.h (read_unsigned_leb128): Declare.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* utils.c (fputs_maybe_filtered): Call can_emit_style_escape as a
-	method.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* utils.c (fputs_maybe_filtered): Reset style after paging, even
-	when no wrap column is set.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* c-lang.c (c_get_string): Handle non-C-style arrays.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* typeprint.c (print_offset_data::update): Print the bit offset,
-	not the number of bits remaining.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* typeprint.c (print_offset_data::maybe_print_hole): Add extra
-	padding at end of comment.
-
-2019-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2loc.c (dwarf2_evaluate_property) <PROP_ADDR_OFFSET>:
-	Compare main types.
-
-2019-05-06  Tom Tromey  <tom@tromey.com>
-
-	* common/scoped_mmap.c: Include common-defs.h.
-	* common/scoped_mmap.h: Don't include config.h.
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* aarch64-tdep.c (stack_item_t): Remove typedef and DEF_VEC.
-	(struct aarch64_call_info): Add initializers.
-	<si>: Now a std::vector.
-	(pass_on_stack, aarch64_push_dummy_call): Update.
-
-2019-05-04  Simon Marchi  <simon.marchi@efficios.com>
-	    Tom Tromey  <tom@tromey.com>
-
-	* ppc-linux-nat.c (thread_points_p): Remove typedef and DEF_VEC.
-	(ppc_threads): Now a std::vector.  Now static.
-	(hwdebug_find_thread_points_by_tid)
-	(ppc_linux_nat_target::low_new_thread, ppc_linux_thread_exit):
-	Update.
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* arc-tdep.c (arc_tdesc_init): Return bool.
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* arm-linux-nat.c (arm_linux_nat_target::can_use_hw_breakpoint):
-	Use gdb_assert_not_reached.
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* compile/compile-cplus-types.c (compile_cplus_convert_enum): Use
-	"false".
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* arc-tdep.c (arc_tdesc_init): Use bool.
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* stack.c (select_frame_for_mi): Use "false", not "FALSE".
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* cli/cli-cmds.c (valid_command_p): Return bool.
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* cli/cli-decode.c (valid_user_defined_cmd_name_p): Return bool.
-	* command.h (valid_user_defined_cmd_name_p): Channge return type.
-
-2019-05-04  Raul Tambre  <raul@tambre.ee>
-
-	* python/lib/gdb/prompt.py (_ExtendedPrompt)
-	<before_prompt_hook, get_show_string>: Fix incorrect use of 'is'
-	operator for comparison.
-
-2019-05-04  Tom Tromey  <tom@tromey.com>
-
-	* psymtab.c (psymbol_name_matches, match_partial_symbol)
-	(lookup_partial_symbol, print_partial_symbols)
-	(recursively_search_psymtabs, sort_pst_symbols, psymbol_hash)
-	(psymbol_compare): Update.
-	(add_psymbol_to_bcache): Clear the entire psymbol.
-	(maintenance_check_psymtabs): Update.
-	* psympriv.h (struct partial_symbol): Don't derive from
-	general_symbol_info.
-	<obj_section, unrelocated_address, address,
-	set_unrelocated_address>: Update.
-	<ginfo>: New member.
-	* dwarf-index-write.c (write_psymbols, debug_names::insert)
-	(debug_names::write_psymbols): Update.
-
-2019-05-04  Tom de Vries  <tdevries@suse.de>
-
-	* contrib/cc-with-tweaks.sh: Support -n arg.
-
-2019-05-04  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* corelow.c (core_target::detach): Ensure frame cache and
-	register caches are cleared.
-	inferior.c (exit_inferior_1): Likewise.
-
-2019-05-03  Sandra Loosemore  <sandra@codesourcery.com>
-	    Tom Tromey  <tom@tromey.com>
-
-	* dictionary.c (collate_pending_symbols_by_language): Remove
-	"struct" from foreach.
-	* symtab.c (lookup_global_symbol_from_objfile)
-	(lookup_symbol_in_objfile_from_linkage_name): Remove "struct" from
-	foreach.
-	* ser-tcp.c (net_open): Remove "struct" from foreach.
-	* objfiles.c (objfile_relocate, objfile_rebase)
-	(objfile_has_symbols): Remove "struct" from foreach.
-	* minsyms.c (lookup_minimal_symbol_by_pc_section): Remove "struct"
-	from foreach.
-	* dwarf2read.c (handle_struct_member_die): Remove "struct" from
-	foreach.
-	* darwin-nat.c (thread_info_from_private_thread_info): Remove
-	"struct" from foreach.
-	* ada-lang.c (create_excep_cond_exprs)
-	(ada_exception_catchpoint_cond_string): Remove "struct" from
-	foreach.
-
-2019-05-03  Tom Tromey  <tromey@adacore.com>
-
-	* ada-exp.y (convert_char_literal): Check suffix of each
-	enumerator.
-
-2019-05-03  Dilyan Palauzov  <dilyan.palauzov@aegee.org>
-
-	PR ada/21406:
-	* ada-exp.y (yywrap): Don't define.
-	* ada-lex.l (%option): Add noyywrap
-	(yywrap): Remove.
-
-2019-05-03  Eli Zaretskii  <eliz@gnu.org>
-
-	* common/common-defs.h [__MINGW32__ || __CYGWIN__]: Define
-	_WIN32_WINNT to the XP level, unless already defined to a higher
-	level.
-
-	* unittests/parse-connection-spec-selftests.c:
-	* ser-tcp.c:
-	* common/netstuff.c [USE_WIN32API]:  Remove the _WIN32_WINNT
-	override.
-
-	* symfile.c (find_separate_debug_file): Remove colon from the
-	drive spec of DOS/Windows file names of the target, so that the
-	file name produced from DEBUGDIR and the target's directory will
-	be valid on DOS/Windows systems.
-
-2019-05-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* rust-lang.c (val_print_struct): Handle printing structures
-	containing strings.
-
-2019-05-02  Tom Tromey  <tromey@adacore.com>
-
-	* valarith.c (_initialize_valarith): Remove.
-
-2019-05-01  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_value_primitive_field): Treat more fields as
-	bitfields.
-
-2019-05-01  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_value_assign): Correctly compute starting offset
-	for big-endian copies.
-
-2019-04-30  Ali Tamur  <tamur@google.com>
-	* gdb/dwarf2read.c (read_3_bytes): New declaration.
-	(read_attribute_value): Added DW_FORM_strx1-4 cases.
-	(read_3_bytes): New function.
-
-2019-04-30  Joel Brobecker  <brobecker@adacore.com>
-
-	* windows-nat.c (main_thread_id): Delete.
-	(handle_output_debug_string): Replace main_thread_id by
-	current_event.dwThreadId.
-	(fake_create_process): Likewise.
-	(get_windows_debug_event) <CREATE_PROCESS_DEBUG_EVENT>:
-	Do not set main_thread_id.
-	<LOAD_DLL_DEBUG_EVENT>: Replace main_thread_id by
-	current_event.dwThreadId.
-	<UNLOAD_DLL_DEBUG_EVENT>: Likewise.
-
-2019-04-30  Joel Brobecker  <brobecker@adacore.com>
-
-	* windows-nat.c (get_windows_debug_event) <EXIT_PROCESS_DEBUG_EVENT>:
-	Use current_event.dwThreadId instead of main_thread_id.
-
-2019-04-30  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_lookup_simple_minsyms): New function.
-	(create_excep_cond_exprs): Iterate over program spaces.
-	(ada_exception_catchpoint_cond_string): Examine all minimal
-	symbols for exception types.
-
-2019-04-30  Tom Tromey  <tromey@adacore.com>
-
-	PR c++/24470:
-	* dwarf2read.c (process_structure_scope): Handle case where type
-	has template parameters but no symbol was created.
-
-2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Chris January  <chris.january@arm.com>
-
-	* f-typeprint.c (f_type_print_base): Print 'allocatable' type
-	qualifier.
-	* gdbtypes.h (TYPE_IS_ALLOCATABLE): Define.
-
-2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-typeprint.c (f_print_type): Update rules for printing
-	whitespace.
-	(f_type_print_varspec_suffix): Likewise.
-
-2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Chris January  <chris.january@arm.com>
-
-	* f-typeprint.c (f_type_print_varspec_suffix): Handle printing
-	function arguments.
-
-2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-lang.c (build_fortran_types): Change name of void type to
-	lower case.
-	* f-typeprint.c (f_type_print_base): Print the name of the void
-	type, rather than a fixed string.
-	* f-valprint.c (f_decorations): Use lower case void string.
-
-2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Chris January  <chris.january@arm.com>
-
-	* dwarf2read.c (dwarf2_init_complex_target_type): Use different
-	types for Fortran.
-
-2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Chris January  <chris.january@arm.com>
-	    David Lecomber  <david.lecomber@arm.com>
-
-	* f-exp.y (BINOP_INTRINSIC): New token.
-	(exp): New parser rule handling BINOP_INTRINSIC.
-	(f77_keywords): Add new builtin procedures.
-	* f-lang.c (evaluate_subexp_f): Handle BINOP_MOD, UNOP_FORTRAN_CEILING,
-	UNOP_FORTRAN_FLOOR, BINOP_FORTRAN_MODULO, BINOP_FORTRAN_CMPLX.
-	(operator_length_f): Handle UNOP_FORTRAN_CEILING,
-	UNOP_FORTRAN_FLOOR, BINOP_FORTRAN_MODULO, BINOP_FORTRAN_CMPLX.
-	(print_unop_subexp_f): New function.
-	(print_binop_subexp_f): New function.
-	(print_subexp_f): Handle UNOP_FORTRAN_CEILING, UNOP_FORTRAN_FLOOR,
-	BINOP_FORTRAN_MODULO, BINOP_FORTRAN_CMPLX.
-	(dump_subexp_body_f): Likewise.
-	(operator_check_f): Likewise.
-	* fortran-operator.def: Add UNOP_FORTRAN_CEILING, UNOP_FORTRAN_FLOOR,
-	BINOP_FORTRAN_MODULO, BINOP_FORTRAN_CMPLX
-
-2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/expprint.c (dump_subexp_body_standard): Remove use of
-	UNOP_KIND.
-	* gdb/expression.h (exp_opcode): Include 'fortran-operator.def'.
-	* gdb/f-exp.y (exp): Rename UNOP_KIND to UNOP_FORTRAN_KIND.
-	* gdb/f-lang.c (evaluate_subexp_f): Likewise.
-	(operator_length_f): New fuction.
-	(print_subexp_f): New function.
-	(op_name_f): New function.
-	(dump_subexp_body_f): New function.
-	(operator_check_f): New function.
-	(exp_descriptor_f): Replace standard expression handling functions
-	with new functions.
-	* gdb/fortran-operator.def: New file.
-	* gdb/parse.c (operator_length_standard): Remove use of UNOP_KIND.
-	* gdb/std-operator.def: Remove UNOP_KIND.
-
-2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* std-operator.def: Remove unbalanced, stray double quote
-	character.
-
-2019-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Chris January  <chris.january@arm.com>
-	    Daniel Everett  <daniel.everett@arm.com>
-	    Nick Forrington  <nick.forrington@arm.com>
-	    Richard Bunt  <richard.bunt@arm.com>
-
-	* cp-valprint.c (cp_print_value_fields): Allow an additional level
-	of depth when printing anonymous structs or unions.
-	* guile/scm-pretty-print.c (gdbscm_apply_val_pretty_printer):
-	Don't print either the top-level value, or the children if the
-	max-depth is exceeded.
-	(ppscm_print_children): When printing the key of a map, allow one
-	extra level of depth.
-	* python/py-prettyprint.c (gdbpy_apply_val_pretty_printer): Don't
-	print either the top-level value, or the children if the max-depth
-	is exceeded.
-	(print_children): When printing the key of a map, allow one extra
-	level of depth.
-	* python/py-value.c (valpy_format_string): Add max_depth keyword.
-	* valprint.c: (PRINT_MAX_DEPTH_DEFAULT): Define.
-	(user_print_options): Initialise max_depth field.
-	(val_print_scalar_or_string_type_p): New function.
-	(val_print): Check to see if the max depth has been reached.
-	(val_print_check_max_depth): Define new function.
-	(show_print_max_depth): New function.
-	(_initialize_valprint): Add 'print max-depth' option.
-	* valprint.h (struct value_print_options) <max_depth>: New field.
-	(val_print_check_max_depth): Declare new function.
-	* NEWS: Document new feature.
-
-2019-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_defn): Initialise new field.
-	* c-lang.c (c_is_string_type_p): New function.
-	(c_language_defn): Initialise new field.
-	(cplus_language_defn): Initialise new field.
-	(asm_language_defn): Initialise new field.
-	(minimal_language_defn): Initialise new field.
-	* c-lang.h (c_is_string_type_p): Declare new function.
-	* d-lang.c (d_language_defn): Initialise new field.
-	* f-lang.c (f_is_string_type_p): New function.
-	(f_language_defn): Initialise new field.
-	* go-lang.c (go_is_string_type_p): New function.
-	(go_language_defn): Initialise new field.
-	* language.c (default_is_string_type_p): New function.
-	(unknown_language_defn): Initialise new field.
-	(auto_language_defn): Initialise new field.
-	* language.h (struct language_defn) <la_is_string_type_p>: New
-	member variable.
-	(default_is_string_type_p): Declare new function.
-	* m2-lang.c (m2_language_defn): Initialise new field.
-	* objc-lang.c (objc_language_defn): Initialise new field.
-	* opencl-lang.c (opencl_language_defn): Initialise new field.
-	* p-lang.c (pascal_is_string_type_p): New function.
-	(pascal_language_defn): Initialise new field.
-	* rust-lang.c (rust_is_string_type_p): New function.
-	(rust_language_defn): Initialise new field.
-
-2019-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* language.h (struct language_defn) <la_struct_too_deep_ellipsis>:
-	New field.
-	* ada-lang.c (ada_language_defn): Initialise new field.
-	* c-lang.c (c_language_defn): Likewise.
-	(cplus_language_defn): Likewise.
-	(asm_language_defn): Likewise.
-	(minimal_language_defn): Likewise.
-	* d-lang.c (d_language_defn): Likewise.
-	* f-lang.c (f_language_defn): Likewise.
-	* go-lang.c (go_language_defn): Likewise.
-	* language.c (unknown_language_defn): Likewise.
-	(auto_language_defn): Likewise.
-	* m2-lang.c (m2_language_defn): Likewise.
-	* objc-lang.c (objc_language_defn): Likewise.
-	* opencl-lang.c (opencl_language_defn): Likewise.
-	* p-lang.c (pascal_language_defn): Likewise.
-	* rust-lang.c (rust_language_defn): Likewise.
-
-2019-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_is_character_type): Change return type to bool.
-	(ada_is_string_type): Likewise.
-	* ada-lang.h (ada_is_character_type): Update declaration
-	(ada_is_string_type): Likewise.
-
-2019-04-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	Support style in 'frame|thread apply'
-
-	* gdbcmd.h (execute_command_to_string): New term_out parameter.
-	* record.c (record_start, record_stop): Update callers of
-	execute_command_to_string with false.
-	* guile/guile.c (gdbscm_execute_gdb_command): Likewise.
-	* ui-file.h (class ui_file): New term_out and can_emit_style_escape
-	methods.
-	(class string_file): New constructor with term_out parameter.
-	Override methods term_out and can_emit_style_escape.  New member
-	term_out.
-	(class stdio_file): Override can_emit_style_escape.
-	(class tee_file): Override term_out and can_emit_style_escape.
-	* utils.h (can_emit_style_escape): Remove.
-	* utils.c (can_emit_style_escape): Likewise.
-	Update all callers of can_emit_style_escape (SOMESTREAM) to
-	SOMESTREAM->can_emit_style_escape.
-	* source-cache.c (source_cache::get_source_lines): Likewise.
-	* stack.c (frame_apply_command_count): Call execute_command_to_string
-	passing the term_out characteristic of the current gdb_stdout.
-	* thread.c (thr_try_catch_cmd): Likewise.
-	* top.c (execute_command_to_string): pass term_out parameter
-	to construct the string_file for the command output.
-	* ui-file.c (term_cli_styling): New function (most code moved
-	from utils.c can_emit_style_escape).
-	(string_file::string_file, string_file::can_emit_style_escape,
-	stdio_file::can_emit_style_escape, tee_file::term_out,
-	tee_file::can_emit_style_escape): New functions.
-
-2019-04-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Mention the new set|show may-call-functions.
-	* infcall.c (may_call_functions_p): New variable.
-	(show_may_call_functions_p): New function.
-	(call_function_by_hand_dummy): Throws an error if not
-	may-call-functions.
-	(_initialize_infcall): Call add_setshow_boolean_cmd for
-	may-call-functions.
-
-2019-04-25  Keith Seitz  <keiths@redhat.com>
-
-	PR c++/24367
-	* cp-support.c (inspect_type): Don't attempt substitutions
-	of symbol with the same name.
-
-2019-04-25  Tom Tromey  <tromey@adacore.com>
-
-	PR gdb/24475:
-	* event-top.c (gdb_rl_callback_handler): Make "gdb_rl_expt"
-	static.
-
-2019-04-25  Tom Tromey  <tromey@adacore.com>
-
-	* xml-support.c (struct gdb_xml_parser) <set_error>: Take an
-	rvalue reference.
-	(gdb_xml_start_element_wrapper, gdb_xml_end_element_wrapper)
-	(gdb_xml_parser::parse): Use std::move.
-	* python/python-internal.h (gdbpy_convert_exception): Take a const
-	reference.
-	* python/py-value.c (valpy_getitem, valpy_nonzero): Use
-	std::move.
-	* python/py-utils.c (gdbpy_convert_exception): Take a const
-	reference.
-	* python/py-inferior.c (infpy_write_memory, infpy_search_memory):
-	Use std::move.
-	* python/py-breakpoint.c (bppy_set_condition, bppy_set_commands):
-	Use std::move.
-	* mi/mi-main.c (mi_print_exception): Take a const reference.
-	* main.c (handle_command_errors): Take a const reference.
-	* linespec.c (parse_linespec): Use std::move.
-	* infcall.c (run_inferior_call): Use std::move.
-	(call_function_by_hand_dummy): Use std::move.
-	* exec.c (try_open_exec_file): Use std::move.
-	* exceptions.h (exception_print, exception_fprintf)
-	(exception_print_same): Update.
-	* exceptions.c (print_exception, exception_print)
-	(exception_fprintf, exception_print_same): Change parameters to
-	const reference.
-	* event-top.c (gdb_rl_callback_read_char_wrapper): Update.
-	* common/new-op.c: Use std::move.
-	* common/common-exceptions.h (struct gdb_exception): Add move
-	constructor.
-	(struct gdb_exception_error, struct gdb_exception_quit, struct
-	gdb_quit_bad_alloc): Change constructor to move constructor.
-	(throw_exception): Change parameter to rvalue reference.
-	* common/common-exceptions.c (throw_exception): Take rvalue
-	reference.
-	* cli/cli-interp.c (safe_execute_command): Use std::move.
-	* breakpoint.c (insert_bp_location, location_to_sals): Use
-	std::move.
-
-2019-04-25  Tom Tromey  <tromey@adacore.com>
-
-	* guile/scm-exception.c (gdbscm_scm_from_gdb_exception)
-	(gdbscm_throw_gdb_exception): Take a gdbscm_gdb_exception.
-	* guile/scm-block.c, guile/scm-breakpoint.c, guile/scm-cmd.c,
-	guile/scm-disasm.c, guile/scm-frame.c, guile/scm-lazy-string.c,
-	guile/scm-math.c, guile/scm-param.c, guile/scm-ports.c,
-	guile/scm-symbol.c, guile/scm-symtab.c, guile/scm-type.c,
-	guile/scm-value.c: Use unpack.
-	* guile/guile-internal.h (gdbscm_scm_from_gdb_exception): Take a
-	gdbscm_gdb_exception.
-	(gdbscm_throw_gdb_exception): Likewise.
-	(struct gdbscm_gdb_exception): New.
-	(unpack): New function.
-	(gdbscm_wrap): Use unpack.
-
-2019-04-25  Tom Tromey  <tromey@adacore.com>
-
-	* event-top.c (gdb_rl_callback_read_char_wrapper_noexcept)
-	(gdb_rl_callback_handler): Use std::move.
-	* common/common-exceptions.h (struct gdb_exception): Add move
-	assignment operator.
-	(throw_exception_sjlj): Change "exception" to const reference.
-	* common/common-exceptions.c (exceptions_state_mc_catch): Update.
-	(throw_exception_sjlj): Change "exception" to const reference.
-
-2019-04-25  Tom Tromey  <tromey@adacore.com>
-
-	* xml-support.c (gdb_xml_parser::gdb_xml_parser): Update.
-	* python/py-value.c (valpy_getitem, valpy_nonzero): Update.
-	* python/py-inferior.c (infpy_write_memory, infpy_search_memory):
-	Update.
-	* python/py-breakpoint.c (bppy_set_condition, bppy_set_commands):
-	Update.
-	* mi/mi-interp.c (mi_interp::exec): Update.
-	* linespec.c (parse_linespec): Update.
-	* infcall.c (run_inferior_call): Update.
-	* guile/scm-value.c (gdbscm_value_to_lazy_string): Update.
-	* guile/scm-symbol.c (gdbscm_lookup_symbol)
-	(gdbscm_lookup_global_symbol): Update.
-	* guile/scm-param.c (gdbscm_parameter_value): Update.
-	* guile/scm-frame.c (gdbscm_frame_read_register)
-	(gdbscm_frame_read_var): Update.
-	* guile/scm-breakpoint.c (gdbscm_register_breakpoint_x): Update.
-	* exec.c (try_open_exec_file): Update.
-	* event-top.c (gdb_rl_callback_read_char_wrapper_noexcept)
-	(gdb_rl_callback_handler): Update.
-	* common/common-exceptions.h (exception_none): Don't declare.
-	* common/common-exceptions.c (exception_none): Don't define.
-	(struct catcher) <exception>: Update.
-	* cli/cli-interp.c (safe_execute_command): Update.
-	* breakpoint.c (insert_bp_location, location_to_sals): Update.
-
-2019-04-25  Ali Tamur  <tamur@google.com>
-
-	* dwarf2read.c (skip_one_die): Add DW_FORM_strx.
-	(read_attribute_value): Likewise.
-	(dwarf2_read_addr_index): Update comment.
-	(read_str_index): Add DW_FORM_strx.
-	(dwarf2_string_attr): Likewise.
-	(dwarf2_const_value_attr): Likewise.
-	(dump_die_shallow): Likewise.
-	(dwarf2_fetch_constant_bytes): Likewise.
-	(skip_form_bytes): Likewise.
-	* testsuite/lib/dwarf.exp (_handle_DW_FORM): Add DW_FORM_strx.
-
-2019-04-25  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	PR corefiles/11608
-	PR corefiles/18187
-	* linux-tdep.c (dump_mapping_p): Add new parameters ADDR and
-	OFFSET.  Verify if current mapping contains an ELF header.
-	(linux_find_memory_regions_full): Adjust call to
-	dump_mapping_p.
-
-2019-04-25  Sandra Loosemore  <sandra@codesourcery.com>
-	    Kang Li <kanglictf@gmail.com>
-
-	PR gdb/21600
-
-	* dwarf2-frame.c (read_initial_length): Be consistent about using
-	unsigned representation of length.
-	(decode_frame_entry_1): Likewise.  Check for wraparound of
-	end pointer as well as buffer overflow.
-
-2019-04-24  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* aarch64-tdep.c (aarch64_gdbarch_init): Use "pulongest" to print
-	"vq".
-
-2019-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* amd64-tdep.c (amd64_has_unaligned_fields): Ignore bitfields.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* s12z-tdep.c (s12z_unwind_pc): Delete.
-	(s12z_unwind_sp): Delete.
-	(s12z_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* rl78-tdep.c (rl78_unwind_sp): Delete.
-	(rl78_gdbarch_init): Don't register deleted function with gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* xstormy16-tdep.c (xstormy16_unwind_sp): Delete.
-	(xstormy16_unwind_pc): Delete.
-	(xstormy16_dummy_id): Delete.
-	(xstormy16_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* vax-tdep.c (vax_unwind_pc): Delete.
-	(vax_gdbarch_init): Don't register deleted function with gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* v850-tdep.c (v850_unwind_sp): Delete.
-	(v850_unwind_pc): Delete.
-	(v850_dummy_id): Delete.
-	(v850_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* tilegx-tdep.c (tilegx_unwind_sp): Delete.
-	(tilegx_unwind_pc): Delete.
-	(tilegx_unwind_dummy_id): Delete.
-	(tilegx_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* tic6x-tdep.c (tic6x_unwind_sp): Delete.
-	(tic6x_dummy_id): Delete.
-	(tic6x_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* sparc-tdep.c (sparc_unwind_pc): Delete.
-	(sparc32_gdbarch_init): Don't register deleted function with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* sh-tdep.c (sh_unwind_sp): Delete.
-	(sh_unwind_pc): Delete.
-	(sh_dummy_id): Delete.
-	(sh_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* score-tdep.c (score_unwind_sp): Delete.
-	(score_unwind_pc): Delete.
-	(score_dummy_id): Delete.
-	(score_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* rx-tdep.c (rx_unwind_pc): Delete.
-	(rx_unwind_sp): Delete.
-	(rx_dummy_id): Delete.
-	(rx_gdbarch_init): Don't register deleted functions with
-	gdbarch.  Update comment.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* rs6000-tdep.c (rs6000_unwind_pc): Delete.
-	(rs6000_dummy_id): Delete.
-	(rs6000_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* or1k-tdep.c (or1k_dummy_id): Delete.
-	(or1k_gdbarch_init): Don't register deleted function with gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* nios2-tdep.c (nios2_dummy_id): Delete.
-	(nios2_unwind_sp): Delete.
-	(nios2_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* nds32-tdep.c (nds32_dummy_id): Delete.
-	(nds32_unwind_pc): Delete.
-	(nds32_unwind_sp): Delete.
-	(nds32_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* msp430-tdep.c (msp430_unwind_pc): Delete.
-	(msp430_unwind_sp): Delete.
-	(msp430_dummy_id): Delete.
-	(msp430_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* moxie-tdep.c (moxie_unwind_sp): Delete.
-	(moxie_unwind_pc): Delete.
-	(moxie_dummy_id): Delete.
-	(moxie_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* mn10300-tdep.c (mn10300_dummy_id): Delete.
-	(mn10300_unwind_pc): Delete.
-	(mn10300_unwind_sp): Delete.
-	(mn10300_push_dummy_call): Use gdbarch_unwind_sp not
-	mn10300_unwind_sp.
-	(mn10300_frame_unwind_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* mep-tdep.c (mep_unwind_pc): Delete.
-	(mep_unwind_sp): Delete.
-	(mep_dummy_id): Delete.
-	(mep_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* m68hc11-tdep.c (m68hc11_unwind_pc): Delete.
-	(m68hc11_unwind_sp): Delete.
-	(m68hc11_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* m32r-tdep.c (m32r_unwind_sp): Delete.
-	(m32r_unwind_pc): Delete.
-	(m32r_dummy_id): Delete.
-	(m32r_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* m32c-tdep.c (m32c_unwind_pc): Delete.
-	(m32c_unwind_sp): Delete.
-	(m32c_dummy_id): Delete.
-	(m32c_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/lm32-tdep.c (lm32_unwind_sp): Delete.
-	(lm32_unwind_pc): Delete.
-	(lm32_dummy_id): Delete.
-	(lm32_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/iq2000-tdep.c (iq2000_unwind_sp): Delete.
-	(iq2000_unwind_pc): Delete.
-	(iq2000_dummy_id): Delete.
-	(iq2000_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* nds32-tdep.c (nds32_type_align): Delete.
-	(nds32_push_dummy_call): Use type_align instead.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* arm-tdep.c (arm_type_align): Only handle vector override case.
-	(arm_push_dummy_call): Use type_align.
-	(arm_gdbarch_init): Register arm_type_align gdbarch function.
-
-2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* aarch64-tdep.c (aarch64_type_align): Only handle vector override
-	case.
-	(pass_on_stack): Use type_align.
-	(aarch64_gdbarch_init): Register aarch64_type_align gdbarch
-	function.
-
-2019-04-23  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (line_header::file_name_at): Remove unused
-	overload.
-
-2019-04-23  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/24438
-	* contrib/cc-with-tweaks.sh: Remove superfluous .alt file after dwz
-	invocation.
-
-
-2019-03-27  Ali Tamur  <tamur@google.com>
-
-	* dwarf2-frame.c(dwarf_expr_executor::get_addr_index): Update comment
-	* dwarf2expr.c(dwarf_expr_context::execute_stack_op): Add DW_OP_addrx
-	* dwarf2expr.h(dwarf_expr_context::offset): Update comment
-	(dwarf_expr_context::get_addr_index): Likewise
-	* dwarf2loc.c(dwarf_evaluate_loc_desc::get_addr_index): Likewise
-	(symbol_needs_eval_context::get_addr_index): Likewise
-	(disassemble_dwarf_expression): Add DW_OP_addrx
-	* dwarf2read.c(attr_value_as_address): Add DW_FORM_addrx
-	(read_cutu_die_from_dwo): Update comment
-	(skip_one_die): Add DW_FORM_addrx
-	(read_attribute_value): Likewise
-	(var_decode_location): Add DW_OP_addrx
-	(dwarf2_const_value_attr): Add DW_FORM_addrx
-	(dump_die_shallow): Likewise
-	(dwarf2_fetch_constant_bytes): Likewise
-	(decode_locdesc): Add DW_OP_addrx
-	(skip_form_bytes): Add DW_FORM_addrx
-
-2019-04-22  Ali Tamur  <tamur@google.com>
-
-	* MAINTAINERS (Write After Approval): Add self.
-
-2019-04-22  Simon Marchi  <simon.marchi@efficios.com>
-
-	* solib-svr4.c (get_svr4_info): Add pspace parameter.
-	(svr4_keep_data_in_core): Pass current_program_space to get_svr4_info.
-	(open_symbol_file_object): Likewise.
-	(svr4_default_sos): Add info parameter.
-	(svr4_read_so_list): Likewise.
-	(svr4_current_sos_direct): Adjust functions calls to pass down
-	info.
-	(svr4_current_sos_1): Add info parameter.
-	(svr4_current_sos): Call get_svr4_info, pass info down to
-	svr4_current_sos_1.
-	(svr4_fetch_objfile_link_map): Pass objfile->pspace to
-	get_svr4_info.
-	(svr4_in_dynsym_resolve_code): Pass current_program_space to
-	get_svr4_info.
-	(probes_table_htab_remove_objfile_probes): Pass objfile->pspace
-	to get_svr4_info.
-	(probes_table_remove_objfile_probes): Likewise.
-	(register_solib_event_probe): Add info parameter.
-	(solist_update_incremental): Pass info parameter down to
-	svr4_read_so_list.
-	(disable_probes_interface): Add info parameter.
-	(svr4_handle_solib_event): Pass current_program_space to
-	get_svr4_info.  Adjust disable_probes_interface cleanup.
-	(svr4_create_probe_breakpoints): Add info parameter, pass it
-	down to register_solib_event_probe.
-	(svr4_create_solib_event_breakpoints): Add info parameter,
-	pass it down to svr4_create_probe_breakpoints.
-	(enable_break): Pass info down to
-	svr4_create_solib_event_breakpoints.
-	(svr4_solib_create_inferior_hook): Pass current_program_space to
-	get_svr4_info.
-	(svr4_clear_solib): Likewise.
-
-2019-04-22  Pedro Alves  <palves@redhat.com>
-
-	* solib-svr4.c (svr4_free_objfile_observer): New.
-	(probe_and_action::objfile): New field.
-	(probes_table_htab_remove_objfile_probes)
-	(probes_table_remove_objfile_probes): New functions.
-	(register_solib_event_probe): Add 'objfile' parameter.  Store it
-	in the new probe_and_action.  Don't store the probe in 'lookup'.
-	(svr4_create_probe_breakpoints): Pass objfile to
-	register_solib_event_probe.
-	(_initialize_svr4_solib): Register a free_objfile observer.
-
-2019-04-19  Tom Tromey  <tom@tromey.com>
-
-	* common/queue.h: Remove.
-
-2019-04-19  Tom Tromey  <tom@tromey.com>
-
-	* event-loop.c: Don't include "common/queue.h".
-
-2019-04-19  Tom Tromey  <tom@tromey.com>
-
-	* remote.c (remote_target): Use delete.
-	* remote-notif.h: Include <list>, not "common/queue.h".
-	(notif_client_p): Remove typedef.
-	(remote_notif_state): Add constructor, destructor, initializer.
-	<notif_queue>: Now a std::list.
-	(remote_notif_state_xfree): Don't declare.
-	* remote-notif.c (remote_notif_process, handle_notification)
-	(remote_notif_state_allocate): Update.
-	(~remote_notif_state): Rename from remote_notif_state_xfree.
-
-2019-04-19  Tom Tromey  <tom@tromey.com>
-
-	* symfile.c (reread_symbols): Update.
-	* objfiles.c (objfile_register_static_link)
-	(objfile_lookup_static_link): Update
-	(~objfile) Don't delete static_links.
-	* objfiles.h (struct objfile) <static_links>: Now an htab_up.
-
-2019-04-19  Tom Tromey  <tom@tromey.com>
-
-	* type-stack.h (struct type_stack) <insert>: Constify string.
-	* type-stack.c (type_stack::insert): Constify string.
-	* gdbtypes.h (lookup_template_type): Update.
-	(address_space_name_to_int): Update.
-	* gdbtypes.c (address_space_name_to_int): Make space_identifier
-	const.
-	(lookup_template_type): Make name const.
-	* c-exp.y: Update rules.
-	(lex_one_token, classify_name, classify_inner_name)
-	(c_print_token): Update.
-	* p-exp.y: Update rules.
-	(yylex): Update.
-	* f-exp.y: Update rules.
-	(yylex): Update.
-	* d-exp.y: Update rules.
-	(lex_one_token, classify_name, classify_inner_name): Update.
-	* parse.c (write_dollar_variable, copy_name): Return std::string.
-	* parser-defs.h (copy_name): Change return type.
-	* m2-exp.y: Update rules.
-	(yylex): Update.
-	* go-exp.y (lex_one_token): Update.
-	Update rules.
-	(classify_unsafe_function, classify_packaged_name)
-	(classify_name, yylex): Update.
-
-2019-04-19  Sergei Trofimovich <siarheit@google.com>
-
-	* configure.ac: add --enable-source-highlight switch.
-	* configure: Regenerate.
-	* top.c (print_gdb_version): plumb --enable-source-highlight
-	status to "show configuration".
-
-2019-04-19  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_is_variant_part, ada_to_fixed_type_1):
-	Check ADA_TYPE_P.
-	(empty_record, ada_template_to_fixed_record_type_1)
-	(template_to_static_fixed_type)
-	(to_record_with_fixed_variant_part): Use INIT_NONE_SPECIFIC.
-	* cp-abi.c (value_rtti_type): Check HAVE_CPLUS_STRUCT.
-	* gdbtypes.h (INIT_NONE_SPECIFIC, ADA_TYPE_P): New
-	macros.
-
-2019-04-19  Ilya Yu. Malakhov  <malakhov@mcst.ru>
-
-	PR symtab/24423:
-	* source.c (print_source_lines_base): Advance "iter" when a
-	control character is seen.
-
-2019-04-19  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* inferior.h (struct infcall_suspend_state_deleter):
-	Catch exception in destructor to avoid crash.
-
-2019-04-19  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-cmds.c (_initialize_cli_cmds): Move "shell" "!" alias
-	close to the add_com "shell".
-
-2019-04-18  Tom Tromey  <tromey@adacore.com>
-
-	* process-stratum-target.h (class process_stratum_target)
-	<stratum>: Add "final".
-
-2019-04-17  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (dwarf2_init_complex_target_type): Check "tt"
-	against nullptr before use.
-
-2019-04-17  Alan Hayward  <alan.hayward@arm.com>
-
-	* nat/linux-waitpid.c (linux_debug): Call debug_vprintf.
-
-2019-04-17  Jim Wilson  <jimw@sifive.com>
-	    Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_breakpoint_kind_from_pc): Hanndle case where
-	code read might fail, assume 4-byte breakpoint in that case.
-
-2019-04-15  Leszek Swirski  <leszeks@google.com>
-
-	* amd64-tdep.c (amd64_classify_aggregate): Use cp_pass_by_reference
-	rather than a hand-rolled POD check when checking for forced MEMORY
-	classification.
-
-2019-04-15  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-linux-nat.c (store_sveregs_to_thread): Set vector length.
-	* nat/aarch64-sve-linux-ptrace.c (aarch64_sve_set_vq): New
-	function.
-	(aarch64_sve_regs_copy_to_reg_buf): Remove VG checks.
-	(aarch64_sve_regs_copy_from_reg_buf): Likewise.
-	* nat/aarch64-sve-linux-ptrace.h (aarch64_sve_set_vq): New
-	declaration.
-
-2019-04-15  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-linux-nat.c
-	(aarch64_linux_nat_target::thread_architecture): Add override.
-	* aarch64-tdep.c (aarch64_gdbarch_init): Ensure different tdesc for
-	each VQ.
-
-2019-04-15  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c (aarch64_gdbarch_init): Move gdbarch lookup.
-
-2019-04-13  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf2read.c (dwarf2_init_complex_target_type): Handle complex
-	target types of size 96-bits, add some additional comments, and
-	check that the builtin type we found was the correct size.
-
-2019-04-12  Eli Zaretskii  <eliz@gnu.org>
-
-	* utils.c (prompt_for_continue): Don't restore the styling at the
-	end, as applied_style has the wrong value.  This fixes styling in
-	long lists of file names that are interrupted by the "Continue?"
-	prompt.
-
-2019-04-12  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_defn): Remove use of LANG_MAGIC.
-	* c-lang.c (c_language_defn): Likewise.
-	(cplus_language_defn): Likewise.
-	(asm_language_defn): Likewise.
-	(minimal_language_defn): Likewise.
-	* d-lang.c (d_language_defn): Likewise.
-	* f-lang.c (f_language_defn): Likewise.
-	* go-lang.c (go_language_defn): Likewise.
-	* language.c (unknown_language_defn): Likewise.
-	(auto_language_defn): Likewise.
-	* language.h (struct language_defn): Remove la_magic field.
-	(LANG_MAGIC): Delete.
-	* m2-lang.c (m2_language_defn): Remove use of LANG_MAGIC.
-	* objc-lang.c (objc_language_defn): Likewise.
-	* opencl-lang.c (opencl_language_defn): Likewise.
-	* p-lang.c (pascal_language_defn): Likewise.
-	* rust-lang.c (rust_language_defn): Likewise.
-
-2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_type_align): New function.
-	(riscv_type_alignment): Delete.
-	(riscv_arg_location): Use 'type_align'.
-	(riscv_gdbarch_init): Register riscv_type_align gdbarch function.
-
-2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdbtypes.c (type_align): A struct with no non-static fields also
-	has alignment of 1.
-
-2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_call_arg_complex_float): Fix offset of first
-	component to 0.
-	(riscv_struct_info::riscv_struct_info): Initialise m_offsets
-	member.
-	(riscv_struct_info::analyse): New implementation using new
-	analyse_inner member function.
-	(riscv_struct_info::field_offset): New member function.
-	(riscv_struct_info::m_offsets): New member variable.
-	(riscv_struct_info::analyse_inner): New private member function,
-	takes the old implementation of riscv_struct_info::analyse but
-	extended to track field offsets.
-	(riscv_call_arg_struct): Update the struct folding special cases
-	to handle cases where empty C++ structs, which are non-zero
-	length, are found.
-	(riscv_arg_location): Initialise the length of each location, a
-	non-zero length now indicates the location is in use.
-	(riscv_push_dummy_call): Allow for the first location having a
-	non-zero offset when setting up arguments.
-	(riscv_return_value): Likewise, but for return values.
-
-2019-04-11  Tom Tromey  <tromey@adacore.com>
-
-	* utils.c (internal_vproblem): Make "msg" const.
-
-2019-04-11  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c (aarch64_analyze_prologue_test): Reset saved regs.
-	* trad-frame.c (trad_frame_reset_saved_regs): New function.
-	(trad_frame_alloc_saved_regs): Call trad_frame_reset_saved_regs.
-	* trad-frame.h (trad_frame_reset_saved_regs): New declaration.
-
-2019-04-10  Kevin Buettner  <kevinb@redhat.com>
-
-	* amd64-linux-nat.c (amd64_linux_collect_native_gregset): New
-	function.
-	(fill_gregset): Call amd64_linux_collect_native_gregset instead
-	of amd64_collect_native_gregset.
-	(amd64_linux_nat_target::store_registers): Likewise.
-
-2019-04-10  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (lookup_global_symbol_from_objfile)
-	(lookup_symbol_in_objfile_from_linkage_name): Use the iterator.
-	* objfiles.h (class separate_debug_iterator): New.
-	(class separate_debug_range): New.
-	(struct objfile) <separate_debug_objfiles>: New method.
-	(objfile_separate_debug_iterate): Don't declare.
-	* objfiles.c (separate_debug_iterator::operator++): Rename from
-	objfile_separate_debug_iterate.
-	(objfile_relocate, objfile_rebase, objfile_has_symbols): Use the
-	iterator.
-	* minsyms.c (lookup_minimal_symbol_by_pc_section): Use the
-	iterator.
-
-2019-04-10  Tom Tromey  <tom@tromey.com>
-
-	* symfile.c (reread_symbols): Remove old comment.
-	* objfiles.c (free_all_objfiles): Fix a typo.
-
-2019-04-10  Tom Tromey  <tom@tromey.com>
-
-	* ia64-tdep.c (ia64_get_dyn_info_list): Use foreach.
-	* minsyms.c (lookup_minimal_symbol): Use foreach.
-	(lookup_minimal_symbol_text, lookup_minimal_symbol_by_pc_name)
-	(lookup_minimal_symbol_solib_trampoline): Likewise.
-	* symfile.c (reread_symbols): Use foreach.
-
-2019-04-09  Ivan Begert  <ivanbegert@gmail.com>
-	    Tom Tromey  <tromey@adacore.com>
-
-	PR rust/24414:
-	* rust-exp.y (rust_parser::lex_number): Use strtoulst.
-	(rust_lex_int_test): Change "value" to be LONGEST.
-	(rust_lex_tests): Add test for long integer literal.
-
-2019-04-09  Tom Tromey  <tromey@adacore.com>
-
-	* remote.c (remote_target::remote_add_inferior): Change fake_pid_p
-	to bool.
-	(extended_remote_target::attach): Update.
-	(remote_target::remote_notice_new_inferior): Update.
-	(remote_target::add_current_inferior_and_thread): Update.
-	* inferior.c (exit_inferior_1): Use "false".
-	* corelow.c (add_to_thread_list): Make fake_pid_p bool.
-
-2019-04-09  Simon Marchi  <simon.marchi@efficios.com>
-
-	* infcmd.c (run_command_1): Pass -qualified to tbreak when using
-	the "start" command.
-
-2019-04-08  Kevin Buettner  <kevinb@redhat.com>
-
-	* python/py-inferior.c (infpy_thread_from_thread_handle):
-	Adjust comments to reflect renaming of thread_from_thread_handle
-	to thread_from_handle.  Adjust keywords.  Fix type error message.
-	(inferior_object_methods): Add thread_from_handle.  Retain
-	thread_from_thread_handle, but mark it as deprecated.
-
-2019-04-08  Kevin Buettner  <kevinb@redhat.com>
-
-	* gdbthread.h (find_thread_by_handle): Revise declaration.
-	* thread.c (find_thread_by_handle): Likewise.  Adjust
-	implementation too.
-	* python/py-inferior.c (infpy_thread_from_thread_handle): Add
-	support for buffer objects as handles.
-
-2019-04-08  Kevin Buettner  <kevinb@redhat.com>
-
-	* python/py-infthread.c (thpy_thread_handle): New function.
-	(thread_object_methods): Register thpy_thread_handle.
-
-2019-04-08  Kevin Buettner  <kevinb@redhat.com>
-
-	* gdbthread.h (thread_to_thread_handle): Declare.
-	* thread.c (gdbtypes.h): Include.
-	(thread_to_thread_handle): New function.
-
-	* target.h (struct target_ops): Add thread_info_to_thread_handle.
-	(target_thread_info_to_thread_handle): Declare.
-	* target.c (target_thread_info_to_thread_handle): New function.
-	* target-debug.h (target_debug_print_gdb_byte_vector): Define.
-	* target-delegates.c: Regenerate.
-
-	* linux-thread-db.c (class thread_db_target): Add method
-	thread_info_to_thread_handle.
-	(thread_db_target::thread_info_to_thread_handle): Define.
-	* remote.c (class remote_target): Add new method
-	thread_info_to_thread_handle.
-	(remote_target::thread_info_to_thread_handle): Define.
-
-2019-04-08  Pedro Alves  <palves@redhat.com>
-
-	* common/common-exceptions.c (throw_exception): Don't create
-	named object to throw; throw directly.
-	(throw_it): Likewise.  Don't initialize gdb_exception::message
-	here, with new; pass FMT and AP to the ctor instead.
-	* common/common-exceptions.h: Include <string>.
-	(gdb_exception::gdb_exception(enum return_reason, enum errors,
-	const char *, va_list)): New ctor.  Use std::make_shared.
-	(gdb_exception_error::gdb_exception_error(enum return_reason, enum
-	errors)): Delete.
-	(gdb_exception_error::gdb_exception_error(enum errors, const char
-	*, va_list)): New.
-	(gdb_exception_error::gdb_exception_error(const gdb_exception &)):
-	Add assertion.
-	(gdb_exception_quit::gdb_exception_quit(enum return_reason, enum
-	errors)): Delete.
-	(gdb_exception_quit::gdb_exception_quit(const char *, va_list)): New.
-	(gdb_exception_quit::gdb_exception_quit(const gdb_exception &)):
-	Add assertion.
-
-2019-04-08  Tom Tromey  <tom@tromey.com>
-
-	* valops.c (value_rtti_indirect_type): Replace throw_exception
-	with throw.
-	* tracefile-tfile.c (tfile_target_open): Replace throw_exception
-	with throw.
-	* thread.c (thr_try_catch_cmd): Replace throw_exception with
-	throw.
-	* target.c (target_translate_tls_address): Replace throw_exception
-	with throw.
-	* stack.c (frame_apply_command_count): Replace throw_exception
-	with throw.
-	* solib-spu.c (append_ocl_sos): Replace throw_exception with
-	throw.
-	* s390-tdep.c (s390_frame_unwind_cache): Replace throw_exception
-	with throw.
-	* rs6000-tdep.c (rs6000_frame_cache)
-	(rs6000_epilogue_frame_cache): Replace throw_exception with throw.
-	* remote.c: Replace throw_exception with throw.
-	* record-full.c (record_full_message, record_full_wait_1)
-	(record_full_restore): Replace throw_exception with throw.
-	* record-btrace.c:
-	(get_thread_current_frame_id, record_btrace_start_replaying)
-	(cmd_record_btrace_bts_start, cmd_record_btrace_pt_start)
-	(cmd_record_btrace_start): Replace throw_exception with throw.
-	* parse.c (parse_exp_in_context_1): Replace throw_exception with
-	throw.
-	* linux-nat.c (detach_one_lwp, linux_resume_one_lwp)
-	(resume_stopped_resumed_lwps): Replace throw_exception with throw.
-	* linespec.c:
-	(find_linespec_symbols): Replace throw_exception with throw.
-	* infrun.c (displaced_step_prepare, resume): Replace
-	throw_exception with throw.
-	* infcmd.c (post_create_inferior): Replace throw_exception with
-	throw.
-	* inf-loop.c (inferior_event_handler): Replace throw_exception
-	with throw.
-	* i386-tdep.c (i386_frame_cache, i386_epilogue_frame_cache)
-	(i386_sigtramp_frame_cache): Replace throw_exception with throw.
-	* frame.c (frame_unwind_pc, get_prev_frame_if_no_cycle)
-	(get_prev_frame_always, get_frame_pc_if_available)
-	(get_frame_address_in_block_if_available, get_frame_language):
-	Replace throw_exception with throw.
-	* frame-unwind.c (frame_unwind_try_unwinder): Replace
-	throw_exception with throw.
-	* eval.c (fetch_subexp_value, evaluate_var_value)
-	(evaluate_funcall, evaluate_subexp_standard): Replace
-	throw_exception with throw.
-	* dwarf2loc.c (call_site_find_chain)
-	(dwarf2_evaluate_loc_desc_full, dwarf2_locexpr_baton_eval):
-	Replace throw_exception with throw.
-	* dwarf2-frame.c (dwarf2_frame_cache): Replace throw_exception
-	with throw.
-	* darwin-nat.c (darwin_attach_pid): Replace throw_exception with
-	throw.
-	* cp-abi.c (baseclass_offset): Replace throw_exception with throw.
-	* completer.c (complete_line_internal): Replace throw_exception
-	with throw.
-	* compile/compile-object-run.c (compile_object_run): Replace
-	throw_exception with throw.
-	* cli/cli-script.c (process_next_line): Replace throw_exception
-	with throw.
-	* btrace.c (btrace_compute_ftrace_pt, btrace_compute_ftrace)
-	(btrace_enable, btrace_maint_update_pt_packets): Replace
-	throw_exception with throw.
-	* breakpoint.c (create_breakpoint, save_breakpoints): Replace
-	throw_exception with throw.
-	* break-catch-throw.c (re_set_exception_catchpoint): Replace
-	throw_exception with throw.
-	* amd64-tdep.c (amd64_frame_cache, amd64_sigtramp_frame_cache)
-	(amd64_epilogue_frame_cache): Replace throw_exception with throw.
-	* aarch64-tdep.c (aarch64_make_prologue_cache)
-	(aarch64_make_stub_cache): Replace throw_exception with throw.
-
-2019-04-08  Tom Tromey  <tom@tromey.com>
-
-	* common/common-exceptions.c (throw_exception): Rename from
-	throw_exception_cxx.  Remove old copy.  Make argument const.
-	(throw_it): Create and throw exception objects directly.
-	* common/common-exceptions.h (throw_exception): Make argument
-	const.
-	(struct gdb_exception_error): Add constructor.
-	(struct gdb_exception_quit): Add constructor.
-
-2019-04-08  Tom Tromey  <tom@tromey.com>
-
-	* common/common-exceptions.h (exception_rethrow): Don't declare.
-	(TRY_SJLJ): Update comment.
-	(TRY, CATCH, END_CATCH): Remove.
-	* common/common-exceptions.c (exception_rethrow): Remove.
-
-2019-04-08  Tom Tromey  <tom@tromey.com>
-
-	* common/common-exceptions.h (gdb_exception_RETURN_MASK_ALL):
-	Remove.
-	(gdb_exception_error): Rename from
-	gdb_exception_RETURN_MASK_ERROR.
-	(gdb_exception_quit): Rename from gdb_exception_RETURN_MASK_QUIT.
-	(gdb_quit_bad_alloc): Update.
-	* aarch64-tdep.c: Update.
-	* ada-lang.c: Update.
-	* ada-typeprint.c: Update.
-	* ada-valprint.c: Update.
-	* amd64-tdep.c: Update.
-	* arch-utils.c: Update.
-	* break-catch-throw.c: Update.
-	* breakpoint.c: Update.
-	* btrace.c: Update.
-	* c-varobj.c: Update.
-	* cli/cli-cmds.c: Update.
-	* cli/cli-interp.c: Update.
-	* cli/cli-script.c: Update.
-	* common/common-exceptions.c: Update.
-	* common/new-op.c: Update.
-	* common/selftest.c: Update.
-	* compile/compile-c-symbols.c: Update.
-	* compile/compile-cplus-symbols.c: Update.
-	* compile/compile-object-load.c: Update.
-	* compile/compile-object-run.c: Update.
-	* completer.c: Update.
-	* corelow.c: Update.
-	* cp-abi.c: Update.
-	* cp-support.c: Update.
-	* cp-valprint.c: Update.
-	* darwin-nat.c: Update.
-	* disasm-selftests.c: Update.
-	* dtrace-probe.c: Update.
-	* dwarf-index-cache.c: Update.
-	* dwarf-index-write.c: Update.
-	* dwarf2-frame-tailcall.c: Update.
-	* dwarf2-frame.c: Update.
-	* dwarf2loc.c: Update.
-	* dwarf2read.c: Update.
-	* eval.c: Update.
-	* event-loop.c: Update.
-	* event-top.c: Update.
-	* exec.c: Update.
-	* f-valprint.c: Update.
-	* fbsd-tdep.c: Update.
-	* frame-unwind.c: Update.
-	* frame.c: Update.
-	* gdbtypes.c: Update.
-	* gnu-v3-abi.c: Update.
-	* guile/guile-internal.h: Update.
-	* guile/scm-block.c: Update.
-	* guile/scm-breakpoint.c: Update.
-	* guile/scm-cmd.c: Update.
-	* guile/scm-disasm.c: Update.
-	* guile/scm-frame.c: Update.
-	* guile/scm-lazy-string.c: Update.
-	* guile/scm-math.c: Update.
-	* guile/scm-param.c: Update.
-	* guile/scm-ports.c: Update.
-	* guile/scm-pretty-print.c: Update.
-	* guile/scm-symbol.c: Update.
-	* guile/scm-symtab.c: Update.
-	* guile/scm-type.c: Update.
-	* guile/scm-value.c: Update.
-	* i386-linux-tdep.c: Update.
-	* i386-tdep.c: Update.
-	* inf-loop.c: Update.
-	* infcall.c: Update.
-	* infcmd.c: Update.
-	* infrun.c: Update.
-	* jit.c: Update.
-	* language.c: Update.
-	* linespec.c: Update.
-	* linux-fork.c: Update.
-	* linux-nat.c: Update.
-	* linux-tdep.c: Update.
-	* linux-thread-db.c: Update.
-	* main.c: Update.
-	* mi/mi-cmd-break.c: Update.
-	* mi/mi-cmd-stack.c: Update.
-	* mi/mi-interp.c: Update.
-	* mi/mi-main.c: Update.
-	* objc-lang.c: Update.
-	* p-valprint.c: Update.
-	* parse.c: Update.
-	* ppc-linux-tdep.c: Update.
-	* printcmd.c: Update.
-	* python/py-arch.c: Update.
-	* python/py-breakpoint.c: Update.
-	* python/py-cmd.c: Update.
-	* python/py-finishbreakpoint.c: Update.
-	* python/py-frame.c: Update.
-	* python/py-framefilter.c: Update.
-	* python/py-gdb-readline.c: Update.
-	* python/py-inferior.c: Update.
-	* python/py-infthread.c: Update.
-	* python/py-lazy-string.c: Update.
-	* python/py-linetable.c: Update.
-	* python/py-objfile.c: Update.
-	* python/py-param.c: Update.
-	* python/py-prettyprint.c: Update.
-	* python/py-progspace.c: Update.
-	* python/py-record-btrace.c: Update.
-	* python/py-record.c: Update.
-	* python/py-symbol.c: Update.
-	* python/py-type.c: Update.
-	* python/py-unwind.c: Update.
-	* python/py-utils.c: Update.
-	* python/py-value.c: Update.
-	* python/python.c: Update.
-	* record-btrace.c: Update.
-	* record-full.c: Update.
-	* remote-fileio.c: Update.
-	* remote.c: Update.
-	* riscv-tdep.c: Update.
-	* rs6000-aix-tdep.c: Update.
-	* rs6000-tdep.c: Update.
-	* rust-exp.y: Update.
-	* rust-lang.c: Update.
-	* s390-tdep.c: Update.
-	* selftest-arch.c: Update.
-	* solib-dsbt.c: Update.
-	* solib-frv.c: Update.
-	* solib-spu.c: Update.
-	* solib-svr4.c: Update.
-	* solib.c: Update.
-	* sparc64-linux-tdep.c: Update.
-	* stack.c: Update.
-	* symfile-mem.c: Update.
-	* symmisc.c: Update.
-	* target.c: Update.
-	* thread.c: Update.
-	* top.c: Update.
-	* tracefile-tfile.c: Update.
-	* tui/tui.c: Update.
-	* typeprint.c: Update.
-	* unittests/cli-utils-selftests.c: Update.
-	* unittests/parse-connection-spec-selftests.c: Update.
-	* valops.c: Update.
-	* valprint.c: Update.
-	* value.c: Update.
-	* varobj.c: Update.
-	* windows-nat.c: Update.
-	* x86-linux-nat.c: Update.
-	* xml-support.c: Update.
-
-2019-04-08  Tom Tromey  <tom@tromey.com>
-
-	* xml-support.c: Use C++ exception handling.
-	* x86-linux-nat.c: Use C++ exception handling.
-	* windows-nat.c: Use C++ exception handling.
-	* varobj.c: Use C++ exception handling.
-	* value.c: Use C++ exception handling.
-	* valprint.c: Use C++ exception handling.
-	* valops.c: Use C++ exception handling.
-	* unittests/parse-connection-spec-selftests.c: Use C++ exception
-	handling.
-	* unittests/cli-utils-selftests.c: Use C++ exception handling.
-	* typeprint.c: Use C++ exception handling.
-	* tui/tui.c: Use C++ exception handling.
-	* tracefile-tfile.c: Use C++ exception handling.
-	* top.c: Use C++ exception handling.
-	* thread.c: Use C++ exception handling.
-	* target.c: Use C++ exception handling.
-	* symmisc.c: Use C++ exception handling.
-	* symfile-mem.c: Use C++ exception handling.
-	* stack.c: Use C++ exception handling.
-	* sparc64-linux-tdep.c: Use C++ exception handling.
-	* solib.c: Use C++ exception handling.
-	* solib-svr4.c: Use C++ exception handling.
-	* solib-spu.c: Use C++ exception handling.
-	* solib-frv.c: Use C++ exception handling.
-	* solib-dsbt.c: Use C++ exception handling.
-	* selftest-arch.c: Use C++ exception handling.
-	* s390-tdep.c: Use C++ exception handling.
-	* rust-lang.c: Use C++ exception handling.
-	* rust-exp.y: Use C++ exception handling.
-	* rs6000-tdep.c: Use C++ exception handling.
-	* rs6000-aix-tdep.c: Use C++ exception handling.
-	* riscv-tdep.c: Use C++ exception handling.
-	* remote.c: Use C++ exception handling.
-	* remote-fileio.c: Use C++ exception handling.
-	* record-full.c: Use C++ exception handling.
-	* record-btrace.c: Use C++ exception handling.
-	* python/python.c: Use C++ exception handling.
-	* python/py-value.c: Use C++ exception handling.
-	* python/py-utils.c: Use C++ exception handling.
-	* python/py-unwind.c: Use C++ exception handling.
-	* python/py-type.c: Use C++ exception handling.
-	* python/py-symbol.c: Use C++ exception handling.
-	* python/py-record.c: Use C++ exception handling.
-	* python/py-record-btrace.c: Use C++ exception handling.
-	* python/py-progspace.c: Use C++ exception handling.
-	* python/py-prettyprint.c: Use C++ exception handling.
-	* python/py-param.c: Use C++ exception handling.
-	* python/py-objfile.c: Use C++ exception handling.
-	* python/py-linetable.c: Use C++ exception handling.
-	* python/py-lazy-string.c: Use C++ exception handling.
-	* python/py-infthread.c: Use C++ exception handling.
-	* python/py-inferior.c: Use C++ exception handling.
-	* python/py-gdb-readline.c: Use C++ exception handling.
-	* python/py-framefilter.c: Use C++ exception handling.
-	* python/py-frame.c: Use C++ exception handling.
-	* python/py-finishbreakpoint.c: Use C++ exception handling.
-	* python/py-cmd.c: Use C++ exception handling.
-	* python/py-breakpoint.c: Use C++ exception handling.
-	* python/py-arch.c: Use C++ exception handling.
-	* printcmd.c: Use C++ exception handling.
-	* ppc-linux-tdep.c: Use C++ exception handling.
-	* parse.c: Use C++ exception handling.
-	* p-valprint.c: Use C++ exception handling.
-	* objc-lang.c: Use C++ exception handling.
-	* mi/mi-main.c: Use C++ exception handling.
-	* mi/mi-interp.c: Use C++ exception handling.
-	* mi/mi-cmd-stack.c: Use C++ exception handling.
-	* mi/mi-cmd-break.c: Use C++ exception handling.
-	* main.c: Use C++ exception handling.
-	* linux-thread-db.c: Use C++ exception handling.
-	* linux-tdep.c: Use C++ exception handling.
-	* linux-nat.c: Use C++ exception handling.
-	* linux-fork.c: Use C++ exception handling.
-	* linespec.c: Use C++ exception handling.
-	* language.c: Use C++ exception handling.
-	* jit.c: Use C++ exception handling.
-	* infrun.c: Use C++ exception handling.
-	* infcmd.c: Use C++ exception handling.
-	* infcall.c: Use C++ exception handling.
-	* inf-loop.c: Use C++ exception handling.
-	* i386-tdep.c: Use C++ exception handling.
-	* i386-linux-tdep.c: Use C++ exception handling.
-	* guile/scm-value.c: Use C++ exception handling.
-	* guile/scm-type.c: Use C++ exception handling.
-	* guile/scm-symtab.c: Use C++ exception handling.
-	* guile/scm-symbol.c: Use C++ exception handling.
-	* guile/scm-pretty-print.c: Use C++ exception handling.
-	* guile/scm-ports.c: Use C++ exception handling.
-	* guile/scm-param.c: Use C++ exception handling.
-	* guile/scm-math.c: Use C++ exception handling.
-	* guile/scm-lazy-string.c: Use C++ exception handling.
-	* guile/scm-frame.c: Use C++ exception handling.
-	* guile/scm-disasm.c: Use C++ exception handling.
-	* guile/scm-cmd.c: Use C++ exception handling.
-	* guile/scm-breakpoint.c: Use C++ exception handling.
-	* guile/scm-block.c: Use C++ exception handling.
-	* guile/guile-internal.h: Use C++ exception handling.
-	* gnu-v3-abi.c: Use C++ exception handling.
-	* gdbtypes.c: Use C++ exception handling.
-	* frame.c: Use C++ exception handling.
-	* frame-unwind.c: Use C++ exception handling.
-	* fbsd-tdep.c: Use C++ exception handling.
-	* f-valprint.c: Use C++ exception handling.
-	* exec.c: Use C++ exception handling.
-	* event-top.c: Use C++ exception handling.
-	* event-loop.c: Use C++ exception handling.
-	* eval.c: Use C++ exception handling.
-	* dwarf2read.c: Use C++ exception handling.
-	* dwarf2loc.c: Use C++ exception handling.
-	* dwarf2-frame.c: Use C++ exception handling.
-	* dwarf2-frame-tailcall.c: Use C++ exception handling.
-	* dwarf-index-write.c: Use C++ exception handling.
-	* dwarf-index-cache.c: Use C++ exception handling.
-	* dtrace-probe.c: Use C++ exception handling.
-	* disasm-selftests.c: Use C++ exception handling.
-	* darwin-nat.c: Use C++ exception handling.
-	* cp-valprint.c: Use C++ exception handling.
-	* cp-support.c: Use C++ exception handling.
-	* cp-abi.c: Use C++ exception handling.
-	* corelow.c: Use C++ exception handling.
-	* completer.c: Use C++ exception handling.
-	* compile/compile-object-run.c: Use C++ exception handling.
-	* compile/compile-object-load.c: Use C++ exception handling.
-	* compile/compile-cplus-symbols.c: Use C++ exception handling.
-	* compile/compile-c-symbols.c: Use C++ exception handling.
-	* common/selftest.c: Use C++ exception handling.
-	* common/new-op.c: Use C++ exception handling.
-	* cli/cli-script.c: Use C++ exception handling.
-	* cli/cli-interp.c: Use C++ exception handling.
-	* cli/cli-cmds.c: Use C++ exception handling.
-	* c-varobj.c: Use C++ exception handling.
-	* btrace.c: Use C++ exception handling.
-	* breakpoint.c: Use C++ exception handling.
-	* break-catch-throw.c: Use C++ exception handling.
-	* arch-utils.c: Use C++ exception handling.
-	* amd64-tdep.c: Use C++ exception handling.
-	* ada-valprint.c: Use C++ exception handling.
-	* ada-typeprint.c: Use C++ exception handling.
-	* ada-lang.c: Use C++ exception handling.
-	* aarch64-tdep.c: Use C++ exception handling.
-
-2019-04-08  Tom Tromey  <tom@tromey.com>
-
-	* xml-support.c (gdb_xml_parser::parse): Update.
-	* x86-linux-nat.c (x86_linux_nat_target::enable_btrace): Update.
-	* value.c (show_convenience): Update.
-	* unittests/cli-utils-selftests.c (test_number_or_range_parser)
-	(test_parse_flags_qcs): Update.
-	* thread.c (thr_try_catch_cmd): Update.
-	* target.c (target_translate_tls_address): Update.
-	* stack.c (print_frame_arg, read_frame_local, read_frame_arg)
-	(info_frame_command_core, frame_apply_command_count): Update.
-	* rust-exp.y (rust_lex_exception_test): Update.
-	* riscv-tdep.c (riscv_print_one_register_info): Update.
-	* remote.c (remote_target::enable_btrace): Update.
-	* record-btrace.c (record_btrace_enable_warn): Update.
-	* python/py-utils.c (gdbpy_convert_exception): Update.
-	* printcmd.c (do_one_display, print_variable_and_value): Update.
-	* mi/mi-main.c (mi_print_exception): Update.
-	* mi/mi-interp.c (mi_cmd_interpreter_exec): Use SCOPE_EXIT.
-	* mi/mi-cmd-stack.c (list_arg_or_local): Update.
-	* linux-nat.c (linux_nat_target::attach): Update.
-	* linux-fork.c (class scoped_switch_fork_info): Update.
-	* infrun.c (displaced_step_prepare): Update.
-	* infcall.c (call_function_by_hand_dummy): Update.
-	* guile/scm-exception.c (gdbscm_scm_from_gdb_exception): Update.
-	* gnu-v3-abi.c (print_one_vtable): Update.
-	* frame.c (get_prev_frame_always): Update.
-	* f-valprint.c (info_common_command_for_block): Update.
-	* exec.c (try_open_exec_file): Update.
-	* exceptions.c (print_exception, exception_print)
-	(exception_fprintf, exception_print_same): Update.
-	* dwarf2-frame.c (dwarf2_build_frame_info): Update.
-	* dwarf-index-cache.c (index_cache::store)
-	(index_cache::lookup_gdb_index): Update.
-	* darwin-nat.c (maybe_cache_shell): Update.
-	* cp-valprint.c (cp_print_value_fields): Update.
-	* compile/compile-cplus-symbols.c (gcc_cplus_convert_symbol)
-	(gcc_cplus_symbol_address): Update.
-	* compile/compile-c-symbols.c (gcc_convert_symbol)
-	(gcc_symbol_address, generate_c_for_for_one_variable): Update.
-	* common/selftest.c: Update.
-	* common/common-exceptions.h (struct gdb_exception) <message>: Now
-	a std::string.
-	(exception_try_scope_entry, exception_try_scope_exit): Don't
-	declare.
-	(struct exception_try_scope): Remove.
-	(TRY): Don't use exception_try_scope.
-	(struct gdb_exception): Add constructor, operator=.
-	<what>: New method.
-	(struct gdb_exception_RETURN_MASK_ALL)
-	(struct gdb_exception_RETURN_MASK_ERROR)
-	(struct gdb_exception_RETURN_MASK_QUIT): Add constructor.
-	(struct gdb_quit_bad_alloc): Update.
-	* common/common-exceptions.c (exception_none): Change
-	initializer.
-	(struct catcher) <state, exception>: Initialize inline.
-	<prev>: Remove member.
-	(current_catcher): Remove.
-	(catchers): New global.
-	(exceptions_state_mc_init): Simplify.
-	(catcher_pop): Remove.
-	(exceptions_state_mc, exceptions_state_mc_catch): Update.
-	(try_scope_depth, exception_try_scope_entry)
-	(exception_try_scope_exit): Remove.
-	(throw_exception_sjlj): Update.
-	(exception_messages, exception_messages_size): Remove.
-	(throw_it): Simplify.
-	(gdb_exception_sliced_copy): Remove.
-	(throw_exception_cxx): Update.
-	* cli/cli-script.c (script_from_file): Update.
-	* breakpoint.c (insert_bp_location, update_breakpoint_locations):
-	Update.
-	* ada-valprint.c (ada_val_print): Update.
-	* ada-lang.c (ada_to_fixed_type_1, ada_exception_name_addr)
-	(create_excep_cond_exprs): Update.
-
-2019-04-08  Tom Tromey  <tom@tromey.com>
-
-	* common/common-exceptions.h (GDB_XCPT_SJMP, GDB_XCPT_TRY)
-	(GDB_XCPT_RAW_TRY, GDB_XCPT): Remove.
-	(TRY, CATCH, END_CATCH): Remove some definitions.
-	* common/common-exceptions.c: Don't use GDB_XCPT.
-	(catcher_list_size): Remove.
-	(throw_exception, throw_it): Simplify.
-
-2019-04-05  Tom Tromey  <tom@tromey.com>
-
-	Revert the header-sorting patch.
-	* ft32-tdep.c: Revert.
-	* frv-tdep.c: Revert.
-	* frv-linux-tdep.c: Revert.
-	* frame.c: Revert.
-	* frame-unwind.c: Revert.
-	* frame-base.c: Revert.
-	* fork-child.c: Revert.
-	* findvar.c: Revert.
-	* findcmd.c: Revert.
-	* filesystem.c: Revert.
-	* filename-seen-cache.h: Revert.
-	* filename-seen-cache.c: Revert.
-	* fbsd-tdep.c: Revert.
-	* fbsd-nat.h: Revert.
-	* fbsd-nat.c: Revert.
-	* f-valprint.c: Revert.
-	* f-typeprint.c: Revert.
-	* f-lang.c: Revert.
-	* extension.h: Revert.
-	* extension.c: Revert.
-	* extension-priv.h: Revert.
-	* expprint.c: Revert.
-	* exec.h: Revert.
-	* exec.c: Revert.
-	* exceptions.c: Revert.
-	* event-top.c: Revert.
-	* event-loop.c: Revert.
-	* eval.c: Revert.
-	* elfread.c: Revert.
-	* dwarf2read.h: Revert.
-	* dwarf2read.c: Revert.
-	* dwarf2loc.c: Revert.
-	* dwarf2expr.h: Revert.
-	* dwarf2expr.c: Revert.
-	* dwarf2-frame.c: Revert.
-	* dwarf2-frame-tailcall.c: Revert.
-	* dwarf-index-write.h: Revert.
-	* dwarf-index-write.c: Revert.
-	* dwarf-index-common.c: Revert.
-	* dwarf-index-cache.h: Revert.
-	* dwarf-index-cache.c: Revert.
-	* dummy-frame.c: Revert.
-	* dtrace-probe.c: Revert.
-	* disasm.h: Revert.
-	* disasm.c: Revert.
-	* disasm-selftests.c: Revert.
-	* dictionary.c: Revert.
-	* dicos-tdep.c: Revert.
-	* demangle.c: Revert.
-	* dcache.h: Revert.
-	* dcache.c: Revert.
-	* darwin-nat.h: Revert.
-	* darwin-nat.c: Revert.
-	* darwin-nat-info.c: Revert.
-	* d-valprint.c: Revert.
-	* d-namespace.c: Revert.
-	* d-lang.c: Revert.
-	* ctf.c: Revert.
-	* csky-tdep.c: Revert.
-	* csky-linux-tdep.c: Revert.
-	* cris-tdep.c: Revert.
-	* cris-linux-tdep.c: Revert.
-	* cp-valprint.c: Revert.
-	* cp-support.c: Revert.
-	* cp-namespace.c: Revert.
-	* cp-abi.c: Revert.
-	* corelow.c: Revert.
-	* corefile.c: Revert.
-	* continuations.c: Revert.
-	* completer.h: Revert.
-	* completer.c: Revert.
-	* complaints.c: Revert.
-	* coffread.c: Revert.
-	* coff-pe-read.c: Revert.
-	* cli-out.h: Revert.
-	* cli-out.c: Revert.
-	* charset.c: Revert.
-	* c-varobj.c: Revert.
-	* c-valprint.c: Revert.
-	* c-typeprint.c: Revert.
-	* c-lang.c: Revert.
-	* buildsym.c: Revert.
-	* buildsym-legacy.c: Revert.
-	* build-id.h: Revert.
-	* build-id.c: Revert.
-	* btrace.c: Revert.
-	* bsd-uthread.c: Revert.
-	* breakpoint.h: Revert.
-	* breakpoint.c: Revert.
-	* break-catch-throw.c: Revert.
-	* break-catch-syscall.c: Revert.
-	* break-catch-sig.c: Revert.
-	* blockframe.c: Revert.
-	* block.c: Revert.
-	* bfin-tdep.c: Revert.
-	* bfin-linux-tdep.c: Revert.
-	* bfd-target.c: Revert.
-	* bcache.c: Revert.
-	* ax-general.c: Revert.
-	* ax-gdb.h: Revert.
-	* ax-gdb.c: Revert.
-	* avr-tdep.c: Revert.
-	* auxv.c: Revert.
-	* auto-load.c: Revert.
-	* arm-wince-tdep.c: Revert.
-	* arm-tdep.c: Revert.
-	* arm-symbian-tdep.c: Revert.
-	* arm-pikeos-tdep.c: Revert.
-	* arm-obsd-tdep.c: Revert.
-	* arm-nbsd-tdep.c: Revert.
-	* arm-nbsd-nat.c: Revert.
-	* arm-linux-tdep.c: Revert.
-	* arm-linux-nat.c: Revert.
-	* arm-fbsd-tdep.c: Revert.
-	* arm-fbsd-nat.c: Revert.
-	* arm-bsd-tdep.c: Revert.
-	* arch-utils.c: Revert.
-	* arc-tdep.c: Revert.
-	* arc-newlib-tdep.c: Revert.
-	* annotate.h: Revert.
-	* annotate.c: Revert.
-	* amd64-windows-tdep.c: Revert.
-	* amd64-windows-nat.c: Revert.
-	* amd64-tdep.c: Revert.
-	* amd64-sol2-tdep.c: Revert.
-	* amd64-obsd-tdep.c: Revert.
-	* amd64-obsd-nat.c: Revert.
-	* amd64-nbsd-tdep.c: Revert.
-	* amd64-nbsd-nat.c: Revert.
-	* amd64-nat.c: Revert.
-	* amd64-linux-tdep.c: Revert.
-	* amd64-linux-nat.c: Revert.
-	* amd64-fbsd-tdep.c: Revert.
-	* amd64-fbsd-nat.c: Revert.
-	* amd64-dicos-tdep.c: Revert.
-	* amd64-darwin-tdep.c: Revert.
-	* amd64-bsd-nat.c: Revert.
-	* alpha-tdep.c: Revert.
-	* alpha-obsd-tdep.c: Revert.
-	* alpha-nbsd-tdep.c: Revert.
-	* alpha-mdebug-tdep.c: Revert.
-	* alpha-linux-tdep.c: Revert.
-	* alpha-linux-nat.c: Revert.
-	* alpha-bsd-tdep.c: Revert.
-	* alpha-bsd-nat.c: Revert.
-	* aix-thread.c: Revert.
-	* agent.c: Revert.
-	* addrmap.c: Revert.
-	* ada-varobj.c: Revert.
-	* ada-valprint.c: Revert.
-	* ada-typeprint.c: Revert.
-	* ada-tasks.c: Revert.
-	* ada-lang.c: Revert.
-	* aarch64-tdep.c: Revert.
-	* aarch64-ravenscar-thread.c: Revert.
-	* aarch64-newlib-tdep.c: Revert.
-	* aarch64-linux-tdep.c: Revert.
-	* aarch64-linux-nat.c: Revert.
-	* aarch64-fbsd-tdep.c: Revert.
-	* aarch64-fbsd-nat.c: Revert.
-	* aarch32-linux-nat.c: Revert.
-
-2019-04-05  Tom Tromey  <tom@tromey.com>
-
-	* ft32-tdep.c: Sort headers.
-	* frv-tdep.c: Sort headers.
-	* frv-linux-tdep.c: Sort headers.
-	* frame.c: Sort headers.
-	* frame-unwind.c: Sort headers.
-	* frame-base.c: Sort headers.
-	* fork-child.c: Sort headers.
-	* findvar.c: Sort headers.
-	* findcmd.c: Sort headers.
-	* filesystem.c: Sort headers.
-	* filename-seen-cache.h: Sort headers.
-	* filename-seen-cache.c: Sort headers.
-	* fbsd-tdep.c: Sort headers.
-	* fbsd-nat.h: Sort headers.
-	* fbsd-nat.c: Sort headers.
-	* f-valprint.c: Sort headers.
-	* f-typeprint.c: Sort headers.
-	* f-lang.c: Sort headers.
-	* extension.h: Sort headers.
-	* extension.c: Sort headers.
-	* extension-priv.h: Sort headers.
-	* expprint.c: Sort headers.
-	* exec.h: Sort headers.
-	* exec.c: Sort headers.
-	* exceptions.c: Sort headers.
-	* event-top.c: Sort headers.
-	* event-loop.c: Sort headers.
-	* eval.c: Sort headers.
-	* elfread.c: Sort headers.
-	* dwarf2read.h: Sort headers.
-	* dwarf2read.c: Sort headers.
-	* dwarf2loc.c: Sort headers.
-	* dwarf2expr.h: Sort headers.
-	* dwarf2expr.c: Sort headers.
-	* dwarf2-frame.c: Sort headers.
-	* dwarf2-frame-tailcall.c: Sort headers.
-	* dwarf-index-write.h: Sort headers.
-	* dwarf-index-write.c: Sort headers.
-	* dwarf-index-common.c: Sort headers.
-	* dwarf-index-cache.h: Sort headers.
-	* dwarf-index-cache.c: Sort headers.
-	* dummy-frame.c: Sort headers.
-	* dtrace-probe.c: Sort headers.
-	* disasm.h: Sort headers.
-	* disasm.c: Sort headers.
-	* disasm-selftests.c: Sort headers.
-	* dictionary.c: Sort headers.
-	* dicos-tdep.c: Sort headers.
-	* demangle.c: Sort headers.
-	* dcache.h: Sort headers.
-	* dcache.c: Sort headers.
-	* darwin-nat.h: Sort headers.
-	* darwin-nat.c: Sort headers.
-	* darwin-nat-info.c: Sort headers.
-	* d-valprint.c: Sort headers.
-	* d-namespace.c: Sort headers.
-	* d-lang.c: Sort headers.
-	* ctf.c: Sort headers.
-	* csky-tdep.c: Sort headers.
-	* csky-linux-tdep.c: Sort headers.
-	* cris-tdep.c: Sort headers.
-	* cris-linux-tdep.c: Sort headers.
-	* cp-valprint.c: Sort headers.
-	* cp-support.c: Sort headers.
-	* cp-namespace.c: Sort headers.
-	* cp-abi.c: Sort headers.
-	* corelow.c: Sort headers.
-	* corefile.c: Sort headers.
-	* continuations.c: Sort headers.
-	* completer.h: Sort headers.
-	* completer.c: Sort headers.
-	* complaints.c: Sort headers.
-	* coffread.c: Sort headers.
-	* coff-pe-read.c: Sort headers.
-	* cli-out.h: Sort headers.
-	* cli-out.c: Sort headers.
-	* charset.c: Sort headers.
-	* c-varobj.c: Sort headers.
-	* c-valprint.c: Sort headers.
-	* c-typeprint.c: Sort headers.
-	* c-lang.c: Sort headers.
-	* buildsym.c: Sort headers.
-	* buildsym-legacy.c: Sort headers.
-	* build-id.h: Sort headers.
-	* build-id.c: Sort headers.
-	* btrace.c: Sort headers.
-	* bsd-uthread.c: Sort headers.
-	* breakpoint.h: Sort headers.
-	* breakpoint.c: Sort headers.
-	* break-catch-throw.c: Sort headers.
-	* break-catch-syscall.c: Sort headers.
-	* break-catch-sig.c: Sort headers.
-	* blockframe.c: Sort headers.
-	* block.c: Sort headers.
-	* bfin-tdep.c: Sort headers.
-	* bfin-linux-tdep.c: Sort headers.
-	* bfd-target.c: Sort headers.
-	* bcache.c: Sort headers.
-	* ax-general.c: Sort headers.
-	* ax-gdb.h: Sort headers.
-	* ax-gdb.c: Sort headers.
-	* avr-tdep.c: Sort headers.
-	* auxv.c: Sort headers.
-	* auto-load.c: Sort headers.
-	* arm-wince-tdep.c: Sort headers.
-	* arm-tdep.c: Sort headers.
-	* arm-symbian-tdep.c: Sort headers.
-	* arm-pikeos-tdep.c: Sort headers.
-	* arm-obsd-tdep.c: Sort headers.
-	* arm-nbsd-tdep.c: Sort headers.
-	* arm-nbsd-nat.c: Sort headers.
-	* arm-linux-tdep.c: Sort headers.
-	* arm-linux-nat.c: Sort headers.
-	* arm-fbsd-tdep.c: Sort headers.
-	* arm-fbsd-nat.c: Sort headers.
-	* arm-bsd-tdep.c: Sort headers.
-	* arch-utils.c: Sort headers.
-	* arc-tdep.c: Sort headers.
-	* arc-newlib-tdep.c: Sort headers.
-	* annotate.h: Sort headers.
-	* annotate.c: Sort headers.
-	* amd64-windows-tdep.c: Sort headers.
-	* amd64-windows-nat.c: Sort headers.
-	* amd64-tdep.c: Sort headers.
-	* amd64-sol2-tdep.c: Sort headers.
-	* amd64-obsd-tdep.c: Sort headers.
-	* amd64-obsd-nat.c: Sort headers.
-	* amd64-nbsd-tdep.c: Sort headers.
-	* amd64-nbsd-nat.c: Sort headers.
-	* amd64-nat.c: Sort headers.
-	* amd64-linux-tdep.c: Sort headers.
-	* amd64-linux-nat.c: Sort headers.
-	* amd64-fbsd-tdep.c: Sort headers.
-	* amd64-fbsd-nat.c: Sort headers.
-	* amd64-dicos-tdep.c: Sort headers.
-	* amd64-darwin-tdep.c: Sort headers.
-	* amd64-bsd-nat.c: Sort headers.
-	* alpha-tdep.c: Sort headers.
-	* alpha-obsd-tdep.c: Sort headers.
-	* alpha-nbsd-tdep.c: Sort headers.
-	* alpha-mdebug-tdep.c: Sort headers.
-	* alpha-linux-tdep.c: Sort headers.
-	* alpha-linux-nat.c: Sort headers.
-	* alpha-bsd-tdep.c: Sort headers.
-	* alpha-bsd-nat.c: Sort headers.
-	* aix-thread.c: Sort headers.
-	* agent.c: Sort headers.
-	* addrmap.c: Sort headers.
-	* ada-varobj.c: Sort headers.
-	* ada-valprint.c: Sort headers.
-	* ada-typeprint.c: Sort headers.
-	* ada-tasks.c: Sort headers.
-	* ada-lang.c: Sort headers.
-	* aarch64-tdep.c: Sort headers.
-	* aarch64-ravenscar-thread.c: Sort headers.
-	* aarch64-newlib-tdep.c: Sort headers.
-	* aarch64-linux-tdep.c: Sort headers.
-	* aarch64-linux-nat.c: Sort headers.
-	* aarch64-fbsd-tdep.c: Sort headers.
-	* aarch64-fbsd-nat.c: Sort headers.
-	* aarch32-linux-nat.c: Sort headers.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* varobj.c (varobj_create): Update.
-	* rust-exp.y (struct rust_parser) <update_innermost_block,
-	lookup_symbol>: New methods.
-	(rust_parser::update_innermost_block, rust_parser::lookup_symbol):
-	Rename.
-	(rust_parser::rust_lookup_type)
-	(rust_parser::convert_ast_to_expression, rust_lex_tests): Update.
-	* printcmd.c (display_command, do_one_display): Update.
-	* parser-defs.h (struct parser_state) <parser_state>: Add
-	"tracker" parameter.
-	(block_tracker): New member.
-	(class innermost_block_tracker) <innermost_block_tracker>: Add
-	"types" parameter.
-	<reset>: Remove method.
-	(innermost_block): Don't declare.
-	(null_post_parser): Update.
-	* parse.c (innermost_block): Remove global.
-	(write_dollar_variable): Update.
-	(parse_exp_1, parse_exp_in_context): Add "tracker" parameter.
-	Remove "tracker_types" parameter.
-	(parse_expression): Add "tracker" parameter.
-	(parse_expression_for_completion): Update.
-	(null_post_parser): Add "tracker" parameter.
-	* p-exp.y: Update rules.
-	* m2-exp.y: Update rules.
-	* language.h (struct language_defn) <la_post_parser>: Add
-	"tracker" parameter.
-	* go-exp.y: Update rules.
-	* f-exp.y: Update rules.
-	* expression.h (parse_expression, parse_exp_1): Add "tracker"
-	parameter.
-	* d-exp.y: Update rules.
-	* c-exp.y: Update rules.
-	* breakpoint.c (set_breakpoint_condition): Create an
-	innermost_block_tracker.
-	(watch_command_1): Likewise.
-	* ada-lang.c (resolve): Add "tracker" parameter.
-	(resolve_subexp): Likewise.
-	* ada-exp.y (write_var_from_sym): Update.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* type-stack.h: New file.
-	* type-stack.c: New file.
-	* parser-defs.h (enum type_pieces, union type_stack_elt): Move to
-	type-stack.h.
-	(insert_into_type_stack, insert_type, push_type, push_type_int)
-	(insert_type_address_space, pop_type, pop_type_int)
-	(pop_typelist, pop_type_stack, append_type_stack)
-	(push_type_stack, get_type_stack, push_typelist)
-	(follow_type_instance_flags, follow_types): Don't declare.
-	* parse.c (type_stack): Remove global.
-	(parse_exp_in_context): Update.
-	(insert_into_type_stack, insert_type, push_type, push_type_int)
-	(insert_type_address_space, pop_type, pop_type_int)
-	(pop_typelist, pop_type_stack, append_type_stack)
-	(push_type_stack, get_type_stack, push_typelist)
-	(follow_type_instance_flags, follow_types): Remove (moved to
-	type-stack.c).
-	* f-exp.y (type_stack): New global.
-	Update rules.
-	(push_kind_type, f_parse): Update.
-	* d-exp.y (type_stack): New global.
-	Update rules.
-	(d_parse): Update.
-	* c-exp.y (struct c_parse_state) <type_stack>: New member.
-	Update rules.
-	* Makefile.in (COMMON_SFILES): Add type-stack.c.
-	(HFILES_NO_SRCDIR): Add type-stack.h.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* rust-exp.y (rust_parser::lex_identifier, rustyylex)
-	(rust_parser::convert_ast_to_expression, rust_parse)
-	(rust_lex_test_completion, rust_lex_tests): Update.
-	* parser-defs.h (struct expr_completion_state): New.
-	(struct parser_state) <parser_state>: Add completion parameter.
-	<mark_struct_expression, mark_completion_tag>: New methods.
-	<parse_completion, m_completion_state>: New members.
-	(prefixify_expression, null_post_parser): Update.
-	(mark_struct_expression, mark_completion_tag): Don't declare.
-	* parse.c (parse_completion, expout_last_struct)
-	(expout_tag_completion_type, expout_completion_name): Remove
-	globals.
-	(parser_state::mark_struct_expression)
-	(parser_state::mark_completion_tag): Now methods.
-	(prefixify_expression): Add last_struct parameter.
-	(prefixify_subexp): Likewise.
-	(parse_exp_1): Update.
-	(parse_exp_in_context): Add cstate parameter.  Update.
-	(parse_expression_for_completion): Create an
-	expr_completion_state.
-	(null_post_parser): Add "completion" parameter.
-	* p-exp.y: Update rules.
-	(yylex): Update.
-	* language.h (struct language_defn) <la_post_parser>: Add
-	"completing" parameter.
-	* go-exp.y: Update rules.
-	(lex_one_token): Update.
-	* expression.h (parse_completion): Don't declare.
-	* d-exp.y: Update rules.
-	(lex_one_token): Update rules.
-	* c-exp.y: Update rules.
-	(lex_one_token): Update.
-	* ada-lang.c (resolve): Add "parse_completion" parameter.
-	(resolve_subexp): Likewise.
-	(ada_resolve_function): Likewise.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* parser-defs.h (struct parser_state) <start_arglist,
-	end_arglist>: New methods.
-	<arglist_len, m_funcall_chain>: New members.
-	(arglist_len, start_arglist, end_arglist): Don't declare.
-	* parse.c (arglist_len, funcall_chain): Remove global.
-	(start_arglist, end_arglist): Remove functions.
-	(parse_exp_in_context): Update.
-	* p-exp.y: Update rules.
-	* m2-exp.y: Update rules.
-	* go-exp.y: Update rules.
-	* f-exp.y: Update rules.
-	* d-exp.y: Update rules.
-	* c-exp.y: Update rules.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* rust-exp.y (struct rust_parser) <lex_hex, lex_escape,
-	lex_operator, push_back>: New methods.
-	Update all rules.
-	(rust_parser::lex_hex, lex_escape): Rename and update.
-	(rust_parser::lex_string, rust_parser::lex_identifier): Update.
-	(rust_parser::lex_operator): Rename and update.
-	(rust_parser::lex_number, rustyylex, rustyyerror)
-	(rust_lex_test_init, rust_lex_test_sequence)
-	(rust_lex_test_push_back, rust_lex_tests): Update.
-	* parser-defs.h (struct parser_state) <parser_state>: Add "input"
-	parameter.
-	<lexptr, prev_lexptr>: New members.
-	(lexptr, prev_lexptr): Don't declare.
-	* parse.c (lexptr, prev_lexptr): Remove globals.
-	(parse_exp_in_context): Update.
-	* p-exp.y (yylex, yyerror): Update.
-	* m2-exp.y (parse_number, yylex, yyerror): Update.
-	* go-exp.y (lex_one_token, yyerror): Update.
-	* f-exp.y (match_string_literal, yylex, yyerror): Update.
-	* d-exp.y (lex_one_token, yyerror): Update.
-	* c-exp.y (scan_macro_expansion, finished_macro_expansion)
-	(lex_one_token, yyerror): Update.
-	* ada-lex.l (YY_INPUT): Update.
-	(rewind_to_char): Update.
-	* ada-exp.y (yyerror): Update.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* rust-exp.y (rustyylex, rust_lex_tests): Update.
-	* parser-defs.h (struct parser_state) <parser_state>: Add new
-	parameter.
-	<comma_terminates>: New member.
-	(comma_terminates): Don't declare global.
-	* parse.c (comma_terminates): Remove global.
-	(parse_exp_in_context): Update.
-	* p-exp.y (yylex): Update.
-	* m2-exp.y (yylex): Update.
-	* go-exp.y (lex_one_token): Update.
-	* f-exp.y (yylex): Update.
-	* d-exp.y (lex_one_token): Update.
-	* c-exp.y (lex_one_token): Update.
-	* ada-lex.l: Update.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* rust-exp.y (struct rust_parser) <paren_depth>: New member.
-	(rustyylex, rust_lex_test_init, rust_lex_test_one)
-	(rust_lex_test_sequence, rust_lex_test_push_back): Update.
-	* parser-defs.h (paren_depth): Don't declare.
-	* parse.c (paren_depth): Remove global.
-	(parse_exp_in_context): Update.
-	* p-exp.y (paren_depth): New global.
-	(pascal_parse): Initialize it.
-	* m2-exp.y (paren_depth): New global.
-	(m2_parse): Initialize it.
-	* go-exp.y (paren_depth): New global.
-	(go_parse): Initialize it.
-	* f-exp.y (paren_depth): New global.
-	(f_parse): Initialize it.
-	* d-exp.y (paren_depth): New global.
-	(d_parse): Initialize it.
-	* c-exp.y (paren_depth): New global.
-	(c_parse): Initialize it.
-	* ada-lex.l (paren_depth): New global.
-	(lexer_init): Initialize it.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* rust-exp.y (rust_parser::crate_name, rust_parser::super_name)
-	(rust_parser::convert_ast_to_type)
-	(rust_parser::convert_ast_to_expression, rust_lex_tests): Update.
-	* parser-defs.h (struct parser_state) <parser_state>: Add
-	parameters.  Initialize new members.
-	<expression_context_block, expression_context_pc>: New members.
-	* parse.c (expression_context_block, expression_context_pc):
-	Remove globals.
-	(parse_exp_in_context): Update.
-	* p-exp.y: Update all rules.
-	(yylex): Update.
-	* m2-exp.y: Update all rules.
-	(yylex): Update.
-	* go-exp.y (yylex): Update.
-	* f-exp.y (yylex): Update.
-	* d-exp.y: Update all rules.
-	(yylex): Update.
-	* c-exp.y: Update all rules.
-	(lex_one_token, classify_name, yylex, c_parse): Update.
-	* ada-exp.y (write_var_or_type, write_name_assoc): Update.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* gdbarch.h, gdbarch.c: Rebuild.
-	* gdbarch.sh (dtrace_parse_probe_argument): Change type.
-	* stap-probe.h: 
-	(struct stap_parse_info): Replace "parser_state" with
-	"expr_builder".
-	* parser-defs.h (struct expr_builder): Rename from "parser_state".
-	(parser_state): New class.
-	* parse.c (expr_builder): Rename.
-	(expr_builder::release): Rename.
-	(write_exp_elt, write_exp_elt_opcode, write_exp_elt_sym)
-	(write_exp_elt_msym, write_exp_elt_block, write_exp_elt_objfile)
-	(write_exp_elt_longcst, write_exp_elt_floatcst)
-	(write_exp_elt_type, write_exp_elt_intern, write_exp_string)
-	(write_exp_string_vector, write_exp_bitstring)
-	(write_exp_msymbol, mark_struct_expression)
-	(write_dollar_variable)
-	(insert_type_address_space, increase_expout_size): Replace
-	"parser_state" with "expr_builder".
-	* dtrace-probe.c: Replace "parser_state" with "expr_builder".
-	* amd64-linux-tdep.c (amd64_dtrace_parse_probe_argument): Replace
-	"parser_state" with "expr_builder".
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* rust-exp.y: Replace "parse_language" with method call.
-	* p-exp.y: 
-	(yylex): Replace "parse_language" with method call.
-	* m2-exp.y: 
-	(yylex): Replace "parse_language" with method call.
-	* go-exp.y (classify_name): Replace "parse_language" with method
-	call.
-	* f-exp.y (yylex): Replace "parse_language" with method call.
-	* d-exp.y (lex_one_token): Replace "parse_language" with method
-	call.
-	* c-exp.y: 
-	(lex_one_token, classify_name, yylex): Replace "parse_language"
-	with method call.
-	* ada-exp.y (find_primitive_type, type_char)
-	(type_system_address): Replace "parse_language" with method call.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* rust-exp.y: Replace "parse_gdbarch" with method call.
-	* parse.c (write_dollar_variable, insert_type_address_space):
-	Replace "parse_gdbarch" with method call.
-	* p-exp.y (parse_type, yylex): Replace "parse_gdbarch" with method
-	call.
-	* objc-lang.c (end_msglist): Replace "parse_gdbarch" with method
-	call.
-	* m2-exp.y (parse_type, parse_m2_type, yylex): Replace
-	"parse_gdbarch" with method call.
-	* go-exp.y (parse_type, classify_name): Replace "parse_gdbarch"
-	with method call.
-	* f-exp.y (parse_type, parse_f_type, yylex): Replace
-	"parse_gdbarch" with method call.
-	* d-exp.y (parse_type, parse_d_type, lex_one_token): Replace
-	"parse_gdbarch" with method call.
-	* c-exp.y (parse_type, parse_number, classify_name): Replace
-	"parse_gdbarch" with method call.
-	* ada-lex.l: Replace "parse_gdbarch" with method call.
-	* ada-exp.y (parse_type, find_primitive_type, type_char)
-	(type_system_address): Replace "parse_gdbarch" with method call.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* dtrace-probe.c (dtrace_probe::build_arg_exprs): Update.
-	* stap-probe.c (stap_parse_argument): Update.
-	* stap-probe.h (struct stap_parse_info) <stap_parse_info>: Remove
-	initial_size parameter.
-	* rust-exp.y (rust_lex_tests): Update.
-	* parse.c (parser_state): Update.
-	(parse_exp_in_context): Update.
-	* parser-defs.h (struct parser_state) <parser_state>: Remove
-	"initial_size" parameter.
-
-2019-04-04  Tom Tromey  <tom@tromey.com>
-
-	* parser-defs.h (increase_expout_size): Don't declare.
-	* parse.c (increase_expout_size): Now static.
-
-2019-04-04  Thomas Schwinge  <thomas@codesourcery.com>
-
-	* gnu-nat.c (gnu_nat_target::wait): Fix
-	target_waitstatus_to_string call.
-
-2019-04-01  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* eval.c (evaluate_subexp_standard): Handle internal functions
-	during Fortran function call handling.
-
-2019-04-01  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* NEWS: Mention new internal functions.
-	* dwarf2read.c (dwarf2_init_complex_target_type): New function.
-	(read_base_type): Use dwarf2_init_complex_target_type.
-	* value.c (creal_internal_fn): New function.
-	(cimag_internal_fn): New function.
-	(_initialize_values): Register new internal functions.
-
-2019-04-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* infrun.c (stop_all_threads): If debug_infrun, always
-	trace the wait status after wait_one, using
-	target_waitstatus_to_string and target_pid_to_str.
-	(handle_inferior_event): Replace various trace of
-	wait status kind by a single trace.
-	* gdb/gnu-nat.c (gnu_nat_target::wait): Replace local
-	wait status kind image by target_waitstatus_to_string.
-	* target/waitstatus.c (target_waitstatus_to_string): Fix
-	obsolete comment.
-
-2019-04-01  Tom Tromey  <tromey@adacore.com>
-
-	PR symtab/23331:
-	* dwarf2read.c (partial_die_info::read): Handle DW_AT_ranges.
-
-2019-04-01  Sergio Durigan Junior  <sergiodj@redhat.com>
-	    Pedro Alves  <palves@redhat.com>
-
-	* top.c (quit_force): Call 'finalize_values'.
-	* value.c (finalize_values): New function.
-	* value.h (finalize_values): Declare.
-
-2019-03-30  Eli Zaretskii  <eliz@gnu.org>
-
-	* NEWS: Announce $_gdb_major and $_gdb_minor.
-
-	* top.c (init_gdb_version_vars): New function.
-	(gdb_init): Call init_gdb_version_vars.
-
-2019-03-29  Tom Tromey  <tromey@adacore.com>
-
-	* printcmd.c (_initialize_printcmd): Add usage lines.  Update some
-	help text.  Remove dead code.
-
-2019-03-29  Keith Seitz  <keiths@redhat.com>
-
-	From Siddhesh Poyarekar:
-	* f-lang.h (f77_get_upperbound): Return LONGEST.
-	(f77_get_lowerbound): Likewise.
-	* f-typeprint.c (f_type_print_varspec_suffix): Expand
-	UPPER_BOUND and LOWER_BOUND to LONGEST.  Use plongest to format
-	print them.
-	(f_type_print_base): Expand UPPER_BOUND to LONGEST.  Use
-	plongest to format print it.
-	* f-valprint.c (f77_get_lowerbound): Return LONGEST.
-	(f77_get_upperbound): Likewise.
-	(f77_get_dynamic_length_of_aggregate): Expand UPPER_BOUND,
-	LOWER_BOUND to LONGEST.
-	(f77_create_arrayprint_offset_tbl): Likewise.
-
-2019-03-29  Keith Seitz  <keiths@redhat.com>
-
-	* ada-lang.c (ada_template_to_fixed_record_type_1): Use
-	%s/pulongest for TYPE_LENGTH instead of %d in format
-	strings.
-	* ada-typerint.c (ada_print_type): Likewise.
-	* amd64-windows-tdep.c (amd64_windows_store_arg_in_reg): Likewise.
-	* compile/compile-c-support.c (generate_register_struct): Likewise.
-	* gdbtypes.c (recursive_dump_type): Likewise.
-	* gdbtypes.h (struct type) <length>: Change type to ULONGEST.
-	* m2-typeprint.c (m2_array):  Use %s/pulongest for TYPE_LENGTH
-	instead of %d in format strings.
-	* riscv-tdep.c (riscv_type_alignment): Cast second argument
-	to std::min to ULONGEST.
-	* symmisc.c (print_symbol): Use %s/pulongest for TYPE_LENGTH
-	instead of %d in format strings.
-	* tracepoint.c (info_scope_command): Likewise.
-	* typeprint.c (print_offset_data::update)
-	(print_offset_data::finish): Likewise.
-	* xtensa-tdep.c (xtensa_store_return_value)
-	(xtensa_push_dummy_call): Likewise.
-
-2019-03-28  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* windows-nat.c (display_selector): Fixed format specifications
-	for 64-bit Cygwin.
-
-2019-03-28  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* infrun.c (follow_exec): Call target_terminal::ours_for_output.
-
-2019-03-28  Sandra Loosemore  <sandra@codesourcery.com>
-
-	* nios2-tdep.h (struct gdbarch_tdep): Add is_kernel_helper.
-	* nios2-tdep.c (nios2_get_next_pc): Skip over kernel helpers.
-	* nios2-linux-tdep.c (nios2_linux_is_kernel_helper): New.
-	(nios2_linux_init_abi): Install it.
-
-2019-03-28  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c (aarch64_vnv_type): Use vector types.
-
-2019-03-28  Alan Hayward  <alan.hayward@arm.com>
-
-	* features/aarch64-sve.c (create_feature_aarch64_sve): Add q view.
-
-2019-03-24  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-	    Tom Tromey  <tromey@adacore.com>
-
-	* minsyms.c (minimal_symbol_upper_bound): Fix buffer overflow.
-
-2019-03-26  Joel Brobecker  <brobecker@adacore.com>
-
-	* gdb-gdb.py.in (StructMainTypePrettyPrinter.bound_img): New method.
-	(StructMainTypePrettyPrinter.bounds_img): Use new "bound_img"
-	method to compute the bounds of range types. Also print "[evaluated]"
-	if the bounds' values come from a dynamic evaluation.
-
-2019-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* cp-valprint.c (cp_print_value_fields): Don't print trailing
-	whitespace when pretty printing is on.
-
-2019-03-26  Alan Hayward  <alan.hayward@arm.com>
-
-	* ppc-linux-nat.c: Add include.
-
-2019-03-26  Alan Hayward  <alan.hayward@arm.com>
-
-	* NEWS: Mention AArch64 Pointer Authentication.
-
-2019-03-26  Alan Hayward  <alan.hayward@arm.com>
-
-	* arm-linux-nat.c: Add include.
-
-2019-03-25  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* source-cache.c (source_cache::get_source_lines): Re-read
-	fullname after calling open_source_file.
-
-2019-03-25  John Baldwin  <jhb@FreeBSD.org>
-
-	* NEWS: Mention TLS support for FreeBSD.
-
-2019-03-25  Tom Tromey  <tromey@adacore.com>
-
-	* minsyms.c (BUNCH_SIZE): Update comment.
-	(~minimal_symbol_reader): Remove old comment.
-	(compact_minimal_symbols): Update comment.
-	(minimal_symbol_reader::install): Remove old comment.  Update
-	other comments.
-
-2019-03-25  Alan Hayward  <alan.hayward@arm.com>
-
-	* s390-linux-nat.c: Add include.
-
-2019-03-25  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-linux-nat.c (aarch64_linux_nat_target::read_description):
-	Call linux_get_hwcap.
-	* aarch64-linux-tdep.c (aarch64_linux_core_read_description):
-	Likewise.
-	(aarch64_linux_get_hwcap): Remove function.
-	* aarch64-linux-tdep.h (aarch64_linux_get_hwcap): Remove
-	declaration.
-	* arm-linux-nat.c (arm_linux_nat_target::read_description):Call
-	linux_get_hwcap.
-	* arm-linux-tdep.c (arm_linux_core_read_description): Likewise.
-	* linux-tdep.c (linux_get_hwcap): Add function.
-	(linux_get_hwcap2): Likewise.
-	* linux-tdep.h (linux_get_hwcap): Add declaration.
-	(linux_get_hwcap2): Likewise.
-	* ppc-linux-nat.c (ppc_linux_get_hwcap): Remove function.
-	(ppc_linux_get_hwcap2): Likewise.
-	(ppc_linux_nat_target::region_ok_for_hw_watchpoint): Call
-	linux_get_hwcap.
-	(ppc_linux_nat_target::insert_watchpoint): Likewise.
-	(ppc_linux_nat_target::watchpoint_addr_within_range): Likewise.
-	(ppc_linux_nat_target::read_description): Likewise.
-	* ppc-linux-tdep.c (ppc_linux_core_read_description): Likewise.
-	* s390-linux-nat.c: Likewise.
-	* s390-linux-tdep.c (s390_core_read_description): Likewise.
-
-2019-03-24  Tom Tromey  <tom@tromey.com>
-
-	* ada-lang.c (standard_lookup): Simplify initialization.
-	(ada_lookup_symbol_nonlocal): Simplify return.
-	* solib-spu.c (spu_lookup_lib_symbol): Simplify return.
-	* solib-darwin.c (darwin_lookup_lib_symbol): Simplify return.
-	* solib-svr4.c (elf_lookup_lib_symbol): Simplify return.
-	* rust-lang.c (rust_lookup_symbol_nonlocal): Simplify
-	initialization.
-	* solib.c (solib_global_lookup): Simplify.
-	* symtab.c (null_block_symbol): Remove.
-	(symbol_cache_lookup): Simplify returns.
-	(lookup_language_this): Simplify returns.
-	(lookup_symbol_aux): Simplify return.
-	(lookup_local_symbol): Simplify returns.
-	(lookup_global_symbol_from_objfile): Simplify return.
-	(lookup_symbol_in_objfile_symtabs)
-	(lookup_symbol_in_objfile_from_linkage_name): Simplify return.
-	(lookup_symbol_via_quick_fns, lookup_symbol_in_static_block)
-	(lookup_static_symbol, lookup_global_symbol): Simplify return.
-	* cp-namespace.c (cp_lookup_bare_symbol)
-	(cp_search_static_and_baseclasses, cp_lookup_symbol_via_imports)
-	(cp_lookup_symbol_via_all_imports, cp_lookup_nested_symbol_1)
-	(cp_lookup_nested_symbol): Don't use null_block_symbol.
-	(cp_lookup_symbol_via_imports): Simplify initialization.
-	(find_symbol_in_baseclass): Likewise.
-	* symtab.h (null_block_symbol): Remove.
-	* d-namespace.c (d_lookup_symbol): Don't use null_block_symbol.
-	(d_lookup_nested_symbol, d_lookup_symbol_imports)
-	(d_lookup_symbol_module): Likewise.
-	(find_symbol_in_baseclass): Simplify initialization.
-
-2019-03-24  Tom Tromey  <tom@tromey.com>
-
-	* expression.h: Don't include symtab.h.
-	(struct block): Forward declare.
-
-2019-03-24  Tom Tromey  <tom@tromey.com>
-
-	* c-exp.y (typebase): Remove casts.
-	* gdbtypes.c (lookup_unsigned_typename, )
-	(lookup_signed_typename): Remove cast.
-	* eval.c (parse_to_comma_and_eval): Remove cast.
-	* parse.c (write_dollar_variable): Remove cast.
-	* block.h (struct block) <superblock>: Now const.
-	* symfile-debug.c (debug_qf_map_matching_symbols): Update.
-	* psymtab.c (psym_map_matching_symbols): Make "block" const.
-	(map_block): Make "block" const.
-	* symfile.h (struct quick_symbol_functions)
-	<map_matching_symbols>: Constify block argument to "callback".
-	* symtab.c (basic_lookup_transparent_type_quick): Make "block"
-	const.
-	(find_pc_sect_compunit_symtab): Make "b" const.
-	(find_symbol_at_address): Likewise.
-	(search_symbols): Likewise.
-	* dwarf2read.c (dw2_lookup_symbol): Make "block" const.
-	(dw2_debug_names_lookup_symbol): Likewise.
-	(dw2_map_matching_symbols): Update.
-	* p-valprint.c (pascal_val_print): Remove "block".
-	* ada-lang.c (ada_add_global_exceptions): Make "b" const.
-	(aux_add_nonlocal_symbols): Make "block" const.
-	(resolve_subexp): Remove cast.
-	* linespec.c (iterate_over_all_matching_symtabs): Make "block"
-	const.
-	(iterate_over_file_blocks): Likewise.
-	* f-exp.y (%union) <bval>: Remove.
-	* coffread.c (patch_opaque_types): Make "b" const.
-	* spu-tdep.c (spu_catch_start): Make "block" const.
-	* c-valprint.c (print_unpacked_pointer): Remove "block".
-	* symmisc.c (dump_symtab_1): Make "b" const.
-	(block_depth): Make "block" const.
-	* d-exp.y (%union) <bval>: Remove.
-	* cp-support.h (cp_lookup_rtti_type): Update.
-	* cp-support.c (cp_lookup_rtti_type): Make "block" const.
-	* psymtab.c (psym_lookup_symbol): Make "block" const.
-	(maintenance_check_psymtabs): Make "b" const.
-	* python/py-framefilter.c (extract_sym): Make "sym_block" const.
-	(enumerate_locals, enumerate_args): Update.
-	* python/py-symtab.c (stpy_global_block): Make "block" const.
-	(stpy_static_block): Likewise.
-	* inline-frame.c (block_starting_point_at): Make "new_block"
-	const.
-	* block.c (find_block_in_blockvector): Make return type const.
-	(blockvector_for_pc_sect): Make "b" const.
-	(find_block_in_blockvector): Make "b" const.
-
-2019-03-23  Tom Tromey  <tom@tromey.com>
-
-	* varobj.c (varobj_create): Update.
-	* symfile.c (clear_symtab_users): Don't reset innermost_block.
-	* printcmd.c (display_command, do_one_display): Don't reset
-	innermost_block.
-	* parser-defs.h (enum innermost_block_tracker_type): Move to
-	expression.h.
-	(innermost_block): Update comment.
-	* parse.c (parse_exp_1): Add tracker_types parameter.
-	(parse_exp_in_context): Rename from parse_exp_in_context_1.  Add
-	tracker_types parameter.  Reset innermost_block.
-	(parse_exp_in_context): Remove.
-	(parse_expression_for_completion): Update.
-	* objfiles.c (~objfile): Don't reset expression_context_block or
-	innermost_block.
-	* expression.h (enum innermost_block_tracker_type): Move from
-	parser-defs.h.
-	(parse_exp_1): Add tracker_types parameter.
-	* breakpoint.c (set_breakpoint_condition, watch_command_1): Don't
-	reset innermost_block.
-
-2019-03-23  Tom Tromey  <tom@tromey.com>
-
-	* objfiles.h: Include bcache.h.
-
-2019-03-23  Tom Tromey  <tom@tromey.com>
-
-	* linespec.c (get_current_search_block): Use
-	scoped_restore_current_language.
-	* symmisc.c (dump_symtab): Use scoped_restore_current_language.
-
-2019-03-22  Alan Hayward  <alan.hayward@arm.com>
-	    Jiong Wang  <jiong.wang@arm.com>
-
-	* aarch64-linux-tdep.c
-	(aarch64_linux_iterate_over_regset_sections): Check for pauth
-	section.
-	* aarch64-linux-tdep.h (AARCH64_LINUX_SIZEOF_PAUTH): New define.
-
-2019-03-22  Alan Hayward  <alan.hayward@arm.com>
-	    Jiong Wang  <jiong.wang@arm.com>
-
-	* aarch64-tdep.c (aarch64_analyze_prologue): Check for pauth
-	instructions.
-	(aarch64_analyze_prologue_test): Add PACIASP test.
-	(aarch64_prologue_prev_register): Unmask PC value.
-
-2019-03-22  Alan Hayward  <alan.hayward@arm.com>
-	    Jiong Wang  <jiong.wang@arm.com>
-
-	* aarch64-tdep.c (aarch64_frame_unmask_address): New function.
-	(aarch64_dwarf2_prev_register): Unmask PC value.
-	(aarch64_dwarf2_frame_init_reg): Init pauth registers.
-	(aarch64_execute_dwarf_cfa_vendor_op): Check for
-	DW_CFA_AARCH64_negate_ra_state.
-	(aarch64_gdbarch_init): Add aarch64_execute_dwarf_cfa_vendor_op.
-
-2019-03-22  Alan Hayward  <alan.hayward@arm.com>
-	    Jiong Wang  <jiong.wang@arm.com>
-
-	* aarch64-tdep.c (aarch64_dwarf_reg_to_regnum): Check for pauth
-	registers.
-	(aarch64_pseudo_register_name): Likewise.
-	(aarch64_pseudo_register_type): Likewise.
-	(aarch64_pseudo_register_reggroup_p): Likewise.
-	(aarch64_gdbarch_init): Add pauth registers.
-	* aarch64-tdep.h (AARCH64_DWARF_PAUTH_RA_STATE): New define.
-	(AARCH64_DWARF_PAUTH_DMASK): Likewise.
-	(AARCH64_DWARF_PAUTH_CMASK): Likewise.
-	(struct gdbarch_tdep): Add regnum for ra_state.
-
-2019-03-22  Alan Hayward  <alan.hayward@arm.com>
-	    Jiong Wang  <jiong.wang@arm.com>
-
-	* arch/aarch64.h (AARCH64_PAUTH_REGS_SIZE): New define.
-
-2019-03-22  Alan Hayward  <alan.hayward@arm.com>
-	    Jiong Wang  <jiong.wang@arm.com>
-
-	* aarch64-linux-nat.c (fetch_pauth_masks_from_thread): New
-	function.
-	(aarch64_linux_nat_target::fetch_registers): Read pauth registers.
-	* aarch64-tdep.c (aarch64_cannot_store_register): New function.
-	(aarch64_gdbarch_init): Add puth registers.
-	* aarch64-tdep.h (struct gdbarch_tdep): Add pauth features.
-	* arch/aarch64.h (AARCH64_PAUTH_DMASK_REGNUM): New define.
-	(AARCH64_PAUTH_CMASK_REGNUM): Likewise.
-
-2019-03-22  Alan Hayward  <alan.hayward@arm.com>
-	    Jiong Wang  <jiong.wang@arm.com>
-
-	* aarch64-linux-nat.c
-	(aarch64_linux_nat_target::read_description): Read PACA hwcap.
-	* aarch64-linux-tdep.c
-	(aarch64_linux_core_read_description): Likewise.
-	(aarch64_linux_get_hwcap): New function.
-	* aarch64-linux-tdep.h (AARCH64_HWCAP_PACA): New define.
-	(aarch64_linux_get_hwcap): New declaration.
-
-2019-03-22  Alan Hayward  <alan.hayward@arm.com>
-	    Jiong Wang  <jiong.wang@arm.com>
-
-	* aarch64-linux-nat.c
-	(aarch64_linux_nat_target::read_description): Add pauth param.
-	* aarch64-linux-tdep.c
-	(aarch64_linux_core_read_description): Likewise.
-	* aarch64-tdep.c (struct target_desc): Add in pauth.
-	(aarch64_read_description): Add pauth param.
-	(aarch64_gdbarch_init): Likewise.
-	* aarch64-tdep.h (aarch64_read_description): Likewise.
-	* arch/aarch64.c (aarch64_create_target_description): Likewise.
-	* arch/aarch64.h (aarch64_create_target_description): Likewise.
-	* features/Makefile: Add new files.
-	* features/aarch64-pauth.c: New file.
-	* features/aarch64-pauth.xml: New file.
-
-2019-03-20  Tom Tromey  <tromey@adacore.com>
-
-	* infrun.c (handle_inferior_event): Rename from
-	handle_inferior_event_1.  Create a scoped_value_mark.
-	(handle_inferior_event): Remove.
-
-2019-03-19  Tom Tromey  <tromey@adacore.com>
-
-	* mi/mi-interp.c (mi_on_normal_stop_1): Only show displays once.
-	* infrun.h (print_stop_event): Add "displays" parameter.
-	* infrun.c (print_stop_event): Add "displays" parameter.
-
-2019-03-19  Pedro Alves  <palves@redhat.com>
-
-	* tui/tui-out.c (tui_ui_out::do_field_string): Simplify.
-	(tui_ui_out::do_text): Add comments.  Reset M_LINE to 0 instead of
-	to -1.  Fix TABs vs spaces.
-	(tui_ui_out::tui_ui_out): Don't initialize fields here.
-	* tui/tui-out.h (tui_ui_out) Add intro comments.
-	<m_line, m_start_of_line>: In-class initialize, and add describing
-	comment.
-
-2019-03-18  Alan Hayward  <alan.hayward@arm.com>
-
-	* arm-linux-nat.c (arm_linux_insert_hw_breakpoint1): Fix
-	variable names.
-	(arm_linux_remove_hw_breakpoint1): Use a gdb::function_view.
-
-2019-03-18  Pedro Alves  <palves@redhat.com>
-	    Eli Zaretskii <eliz@gnu.org>
-
-	* tui/tui-out.c (tui_ui_out::tui_ui_out): Fix initialization of
-	m_line and m_start_of_line.
-
-2019-03-18  Eli Zaretskii  <eliz@gnu.org>
-
-	* tui/tui-io.c (gdb_wgetch): Don't echo CR.
-	(tui_getc): When gdb_wgetch returns a CR, behave the same as when
-	it returns a newline.  This fixes a regression in TU mode, whereby
-	the next line is output on the same screen line as the user input.
-
-2019-03-18  Tom Tromey  <tromey@adacore.com>
-
-	* minsyms.c (minimal_symbol_reader::install): Remove call to
-	obstack_blank.
-
-2019-03-18  Pedro Alves  <palves@redhat.com>
-
-	* tui/tui-io.c (reverse_mode_p, reverse_save_bg, reverse_save_fg):
-	New globals.
-	(apply_style): New, factored out from ...
-	(apply_ansi_escape): ... this.  Handle reverse video mode.
-	(tui_set_reverse_mode): New function.
-	* tui/tui-io.h (tui_set_reverse_mode): New declaration.
-	* tui/tui-winsource.c (tui_show_source_line): Use
-	tui_set_reverse_mode instead of setting A_STANDOUT.
-	* ui-style.h (struct ui_file_style) <set_reverse, set_fg, set_bg>:
-	New setter methods.
-
-2019-03-18  Hannes Domani  <ssbssa@yahoo.de>
-
-	* tui/tui-source.c (copy_source_line): Fix handling of 'column'.
-	Handle tabs.
-
-2019-03-18  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (empty_array): Add "high" parameter.
-	(ada_evaluate_subexp): Update.
-
-2019-03-17  Sergei Trofimovich <siarheit@google.com>
-
-	* unittests/string_view-selftests.c: Define
-	_initialize_string_view_selftests unconditionally.
-
-2019-03-17  Vladimir Martyanov  <vilgeforce@gmail.com>
-
-	PR gdb/24350
-	* windows-nat.c (windows_make_so): Remove unused text_vma variable.
-
-2019-03-17  Vladimir Martyanov  <vilgeforce@gmail.com>
-
-	PR gdb/24351
-	* windows-nat.c (display_selector): Fix format specifiers.
-
-2019-03-17  Eli Zaretskii  <eliz@gnu.org>
-
-	* tui/tui-winsource.c (tui_set_is_exec_point_at): Call
-	tui_refill_source_window instead of tui_refresh_win, to update the
-	current execution line.  This fixes redisplay of the current line
-	when stepping through the code with "next" or "step".
-
-2019-03-16  Eli Zaretskii  <eliz@gnu.org>
-
-	* source-cache.c (source_cache::get_source_lines): Call
-	find_source_lines to initialize s->nlines.  This fixes vertical
-	scrolling of TUI source window when the DOWN arrow is pressed.
-
-2019-03-16  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* auto-load.c (_initialize_auto_load): Fix 'This options has'.
-	linux-thread-db.c (_initialize_thread_db): Likewise.
-
-2019-03-16  Eli Zaretskii  <eliz@gnu.org>
-
-	* tui/tui-winsource.c (tui_show_source_line): Revert "Use
-	wclrtoeol in tui_show_source_line".  This reverts changes made in
-	commit 4a3045920bbe4e50a0f4920b0fdc4e88ef23015c.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* symtab.h (struct minimal_symbol): Derive from
-	general_symbol_info.
-	(MSYMBOL_VALUE, MSYMBOL_VALUE_RAW_ADDRESS)
-	(MSYMBOL_VALUE_ADDRESS, MSYMBOL_VALUE_BYTES)
-	(MSYMBOL_BLOCK_VALUE, MSYMBOL_VALUE_CHAIN, MSYMBOL_LANGUAGE)
-	(MSYMBOL_SECTION, MSYMBOL_OBJ_SECTION, MSYMBOL_NATURAL_NAME)
-	(MSYMBOL_LINKAGE_NAME, MSYMBOL_DEMANGLED_NAME)
-	(MSYMBOL_SEARCH_NAME): Update.
-	(MSYMBOL_SET_LANGUAGE, MSYMBOL_SET_NAMES): Remove.
-	* solib.c (gdb_bfd_lookup_symbol_from_symtab): Don't use memset.
-	* minsyms.c (minimal_symbol_reader::record_full): Update.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* minsyms.c (minimal_symbol_reader::install): Use memcpy.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* objfiles.h (struct objfile_per_bfd_storage) <msymbols>: Now a
-	unique_xmalloc_ptr.
-	(objfile::msymbols_range::begin, objfile::msymbols_range::end):
-	Update.
-	* minsyms.c (lookup_minimal_symbol_by_pc_section)
-	(build_minimal_symbol_hash_tables)
-	(minimal_symbol_reader::install): Update.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (create_demangled_names_hash): Update.
-	(symbol_set_names): Update.
-	* objfiles.h (struct objfile_per_bfd_storage)
-	<demangled_names_hash>: Now an htab_up.
-	* objfiles.c (objfile_per_bfd_storage): Simplify.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* objfiles.h (struct objfile_per_bfd_storage): Declare
-	destructor.
-	* objfiles.c (objfile_per_bfd_storage::~objfile_per_bfd_storage):
-	New.
-	(get_objfile_bfd_data): Use new.  Don't initialize
-	language_of_main.
-	(free_objfile_per_bfd_storage): Remove.
-	(objfile_bfd_data_free, objfile::~objfile): Use delete.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* symfile.c (reread_symbols): Update.
-	* objfiles.c (objfile::objfile): Update.
-	* minsyms.h (terminate_minimal_symbol_table): Don't declare.
-	* minsyms.c (lookup_minimal_symbol_by_pc_section): Update
-	comment.
-	(minimal_symbol_reader::install): Update.
-	(terminate_minimal_symbol_table): Remove.
-	* jit.c (jit_object_close_impl): Update.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* minsyms.c (minimal_symbol_reader::record_full): Remove some
-	initializations.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* objfiles.h (struct objfile_per_bfd_storage)
-	<demangled_hash_languages>: Now a bitset.
-	* minsyms.c (add_minsym_to_demangled_hash_table): Update.
-	(lookup_minimal_symbol): Update.
-
-2019-03-15  Tom Tromey  <tom@tromey.com>
-
-	* minsyms.h (class minimal_symbol_reader) <record_with_info>:
-	Don't return the symbol.
-	* coffread.c (record_minimal_symbol): Use record_full.
-
-2019-03-14  Eli Zaretskii  <eliz@gnu.org>
-
-	The MS-Windows port of ncurses fails to switch to a color pair if
-	one or both of the colors are the implicit default colors.  This
-	change records the default colors when TUI is initialized, and
-	then specifies them explicitly when a color pair uses the default
-	colors.  This allows color styling in TUI mode on MS-Windows.
-
-	* tui/tui-io.c [__MINGW32__]: Include windows.h.  Declare
-	ncurses_norm_attr.
-	(tui_initialize_io) [__MINGW32__]: Record the default terminal
-	colors in ncurses_norm_attr.
-	(apply_ansi_escape) [__MINGW32__]: If a color in a color pair is
-	"none", replace it with the default color recorded in
-	ncurses_norm_attr.
-
-2019-03-14  Tom Tromey  <tromey@adacore.com>
-
-	* source-cache.h (class source_cache) <get_source_lines>: Return
-	std::string.
-	* source-cache.c (source_cache::extract_lines): Handle case where
-	first_pos==npos.  Return std::string.
-	(source_cache::get_source_lines): Update.
-
-2019-03-14  Tom Tromey  <tromey@adacore.com>
-
-	* NEWS: Add item for "style sources" commands.
-	* source-cache.c (source_cache::get_source_lines): Check
-	source_styling.
-	* cli/cli-style.c (source_styling): New global.
-	(_initialize_cli_style): Add "style sources" commands.
-	(show_style_sources): New function.
-	* cli/cli-style.h (source_styling): Declare.
-
-2019-03-14  Pedro Alves  <palves@redhat.com>
-	    Tom Tromey  <tromey@adacore.com>
-
-	* tui/tui-winsource.h (tui_refill_source_window): Declare.
-	* tui/tui-winsource.c (tui_refill_source_window): New function,
-	from...
-	(tui_horizontal_source_scroll): ... here.  Move some logic.
-	* cli/cli-style.c (set_style_enabled): Notify new observable.
-	* tui/tui-hooks.c (tui_redisplay_source): New function.
-	(tui_attach_detach_observers): Attach or detach
-	tui_redisplay_source.
-	* observable.h (source_styling_changed): New observable.
-	* observable.c: Define source_styling_changed observable.
-
-2019-03-13  Tom Tromey  <tromey@adacore.com>
-
-	* i386-gnu-nat.c (i386_gnu_nat_target::fetch_registers)
-	(i386_gnu_nat_target::store_registers): Update.
-	* target-debug.h (target_debug_print_std_string): New macro.
-	* x86-linux-nat.c (x86_linux_nat_target::enable_btrace): Update.
-	* windows-tdep.c (display_one_tib): Update.
-	* tui/tui-stack.c (tui_make_status_line): Update.
-	* top.c (print_inferior_quit_action): Update.
-	* thread.c (thr_try_catch_cmd): Update.
-	(add_thread_with_info): Update.
-	(thread_target_id_str): Update.
-	(thr_try_catch_cmd): Update.
-	(thread_command): Update.
-	(thread_find_command): Update.
-	* record-btrace.c (record_btrace_target::info_record)
-	(record_btrace_resume_thread, record_btrace_target::resume)
-	(record_btrace_cancel_resume, record_btrace_step_thread)
-	(record_btrace_target::wait, record_btrace_target::wait)
-	(record_btrace_target::wait, record_btrace_target::stop): Update.
-	* progspace.c (print_program_space): Update.
-	* process-stratum-target.c
-	(process_stratum_target::thread_address_space): Update.
-	* linux-fork.c (linux_fork_mourn_inferior)
-	(detach_checkpoint_command, info_checkpoints_command)
-	(linux_fork_context): Update.
-	(linux_fork_detach): Update.
-	(class scoped_switch_fork_info): Update.
-	(delete_checkpoint_command): Update.
-	* infrun.c (follow_fork_inferior): Update.
-	(follow_fork_inferior): Update.
-	(proceed_after_vfork_done): Update.
-	(handle_vfork_child_exec_or_exit): Update.
-	(follow_exec): Update.
-	(displaced_step_prepare_throw): Update.
-	(displaced_step_restore): Update.
-	(start_step_over): Update.
-	(resume_1): Update.
-	(clear_proceed_status_thread): Update.
-	(proceed): Update.
-	(print_target_wait_results): Update.
-	(do_target_wait): Update.
-	(context_switch): Update.
-	(stop_all_threads): Update.
-	(restart_threads): Update.
-	(finish_step_over): Update.
-	(handle_signal_stop): Update.
-	(switch_back_to_stepped_thread): Update.
-	(keep_going_pass_signal): Update.
-	(print_exited_reason): Update.
-	(normal_stop): Update.
-	* inferior.c (inferior_pid_to_str): Change return type.
-	(print_selected_inferior): Update.
-	(add_inferior): Update.
-	(detach_inferior): Update.
-	* dummy-frame.c (fprint_dummy_frames): Update.
-	* dcache.c (dcache_info_1): Update.
-	* btrace.c (btrace_enable, btrace_disable, btrace_teardown)
-	(btrace_fetch, btrace_clear): Update.
-	* linux-tdep.c (linux_core_pid_to_str): Change return type.
-	* i386-cygwin-tdep.c (i386_windows_core_pid_to_str): Change return
-	type.
-	* fbsd-tdep.c (fbsd_core_pid_to_str): Change return type.
-	* sol2-tdep.h (sol2_core_pid_to_str): Change return type.
-	* sol2-tdep.c (sol2_core_pid_to_str): Change return type.
-	* gdbarch.c, gdbarch.h: Rebuild.
-	* gdbarch.sh (core_pid_to_str): Change return type.
-	* windows-nat.c (struct windows_nat_target) <pid_to_str>: Change
-	return type.
-	(windows_nat_target::pid_to_str): Change return type.
-	(windows_delete_thread): Update.
-	(windows_nat_target::attach): Update.
-	(windows_nat_target::files_info): Update.
-	* target-delegates.c: Rebuild.
-	* sol-thread.c (class sol_thread_target) <pid_to_str>: Change
-	return type.
-	(sol_thread_target::pid_to_str): Change return type.
-	* remote.c (class remote_target) <pid_to_str>: Change return
-	type.
-	(remote_target::pid_to_str): Change return type.
-	(extended_remote_target::attach, remote_target::remote_stop_ns)
-	(remote_target::remote_notif_remove_queued_reply)
-	(remote_target::push_stop_reply, remote_target::disable_btrace):
-	Update.
-	(extended_remote_target::attach): Update.
-	* remote-sim.c (struct gdbsim_target) <pid_to_str>: Change return
-	type.
-	(gdbsim_target::pid_to_str): Change return type.
-	* ravenscar-thread.c (struct ravenscar_thread_target)
-	<pid_to_str>: Change return type.
-	(ravenscar_thread_target::pid_to_str): Change return type.
-	* procfs.c (class procfs_target) <pid_to_str>: Change return
-	type.
-	(procfs_target::pid_to_str): Change return type.
-	(procfs_target::attach): Update.
-	(procfs_target::detach): Update.
-	(procfs_target::fetch_registers): Update.
-	(procfs_target::store_registers): Update.
-	(procfs_target::wait): Update.
-	(procfs_target::files_info): Update.
-	* obsd-nat.c (obsd_nat_target::pid_to_str): Change return type.
-	* nto-procfs.c (struct nto_procfs_target) <pid_to_str>: Change
-	return type.
-	(nto_procfs_target::pid_to_str): Change return type.
-	(nto_procfs_target::files_info, nto_procfs_target::attach): Update.
-	* linux-thread-db.c (class thread_db_target) <pid_to_str>: Change
-	return type.
-	* linux-nat.c (linux_nat_target::pid_to_str): Change return type.
-	(exit_lwp): Update.
-	(attach_proc_task_lwp_callback, get_detach_signal)
-	(detach_one_lwp, resume_lwp, linux_nat_target::resume)
-	(linux_nat_target::resume, wait_lwp, stop_callback)
-	(maybe_clear_ignore_sigint, stop_wait_callback, status_callback)
-	(save_stop_reason, select_event_lwp, linux_nat_filter_event)
-	(linux_nat_wait_1, resume_stopped_resumed_lwps)
-	(linux_nat_target::wait, linux_nat_stop_lwp): Update.
-	* inf-ptrace.c (inf_ptrace_target::pid_to_str): Change return
-	type.
-	(inf_ptrace_target::attach): Update.
-	(inf_ptrace_target::files_info): Update.
-	* go32-nat.c (struct go32_nat_target) <pid_to_str>: Change return
-	type.
-	(go32_nat_target::pid_to_str): Change return type.
-	* gnu-nat.c (gnu_nat_target::pid_to_str): Change return type.
-	(gnu_nat_target::wait): Update.
-	(gnu_nat_target::wait): Update.
-	(gnu_nat_target::resume): Update.
-	* fbsd-nat.c (fbsd_nat_target::pid_to_str): Change return type.
-	(fbsd_nat_target::wait): Update.
-	* darwin-nat.c (darwin_nat_target::pid_to_str): Change return
-	type.
-	(darwin_nat_target::attach): Update.
-	* corelow.c (class core_target) <pid_to_str>: Change return type.
-	(core_target::pid_to_str): Change return type.
-	* target.c (normal_pid_to_str): Change return type.
-	(default_pid_to_str): Likewise.
-	(target_pid_to_str): Change return type.
-	(target_translate_tls_address): Update.
-	(target_announce_detach): Update.
-	* bsd-uthread.c (struct bsd_uthread_target) <pid_to_str>: Change
-	return type.
-	(bsd_uthread_target::pid_to_str): Change return type.
-	* bsd-kvm.c (class bsd_kvm_target) <pid_to_str>: Change return
-	type.
-	(bsd_kvm_target::pid_to_str): Change return type.
-	* aix-thread.c (class aix_thread_target) <pid_to_str>: Change
-	return type.
-	(aix_thread_target::pid_to_str): Change return type.
-	* target.h (struct target_ops) <pid_to_str>: Change return type.
-	(target_pid_to_str, normal_pid_to_str): Likewise.
-	* obsd-nat.h (class obsd_nat_target) <pid_to_str>: Change return
-	type.
-	* linux-nat.h (class linux_nat_target) <pid_to_str>: Change return
-	type.
-	* inf-ptrace.h (struct inf_ptrace_target) <pid_to_str>: Change
-	return type.
-	* gnu-nat.h (struct gnu_nat_target) <pid_to_str>: Change return
-	type.
-	* fbsd-nat.h (class fbsd_nat_target) <pid_to_str>: Change return
-	type.
-	* darwin-nat.h (class darwin_nat_target) <pid_to_str>: Change
-	return type.
-
-2019-03-13  Simon Marchi  <simon.marchi@ericsson.com>
-
-	* NEWS: Mention that the new default MI version is 3.  Mention
-	changes to the output of commands and events that deal with
-	multi-location breakpoints.
-	* breakpoint.c: Include "mi/mi-out.h".
-	(print_one_breakpoint): Change output syntax if using MI version
-	>= 3.
-	* mi/mi-main.h (mi_cmd_fix_multi_location_breakpoint_output):
-	New.
-	(mi_multi_location_breakpoint_output_fixed): New.
-	* mi/mi-main.c (fix_multi_location_breakpoint_output): New.
-	(mi_cmd_fix_multi_location_breakpoint_output): New.
-	(mi_multi_location_breakpoint_output_fixed): New.
-	* mi/mi-cmds.c (mi_cmds): Register command
-	-fix-multi-location-breakpoint-output.
-	* mi/mi-out.c (mi_out_new): Instantiate version 3 when using
-	interpreter "mi".
-
-2019-03-13  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* mi/mi-out.h (mi_out_new): Change parameter to const char *.
-	* mi/mi-out.c (mi_out_new): Change parameter to const char *,
-	instantiate mi_ui_out based on interpreter name.
-	* mi/mi-interp.c (mi_interp::init): Use the new mi_out_new.
-	* mi/mi-main.c (mi_load_progress): Likewise.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* NEWS: Combine separate "New targets" sections for 8.3.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* ppc-fbsd-tdep.c (ppcfbsd_get_thread_local_address): New.
-	(ppcfbsd_init_abi): Install gdbarch
-	"fetch_tls_load_module_address" and "get_thread_local_address"
-	methods.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* riscv-fbsd-tdep.c (riscv_fbsd_get_thread_local_address): New.
-	(riscv_fbsd_init_abi): Install gdbarch
-	"fetch_tls_load_module_address" and "get_thread_local_address"
-	methods.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* i386-fbsd-tdep.c (i386fbsd_get_thread_local_address): New.
-	(i386fbsd_init_abi): Install gdbarch
-	"fetch_tls_load_module_address" and "get_thread_local_address"
-	methods.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* amd64-fbsd-tdep.c (amd64fbsd_get_thread_local_address): New.
-	(amd64fbsd_init_abi): Install gdbarch
-	"fetch_tls_load_module_address" and "get_thread_local_address"
-	methods.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* fbsd-tdep.c (fbsd_pspace_data_handle): New variable.
-	(struct fbsd_pspace_data): New type.
-	(get_fbsd_pspace_data, fbsd_pspace_data_cleanup)
-	(fbsd_read_integer_by_name, fbsd_fetch_rtld_offsets)
-	(fbsd_get_tls_index, fbsd_get_thread_local_address): New function.
-	(_initialize_fbsd_tdep): Initialize 'fbsd_pspace_data_handle'.
-	* fbsd-tdep.c (fbsd_get_thread_local_address): New prototype.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* gdbtypes.c (lookup_struct_elt): New function.
-	(lookup_struct_elt_type): Reimplement via lookup_struct_elt.
-	* gdbtypes.h (struct struct_elt): New type.
-	(lookup_struct_elt): New prototype.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* gdbtypes.c (lookup_struct_elt_type): Update comment and
-	remove disabled code block.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* gdbarch.sh (get_thread_local_address): New method.
-	* gdbarch.h, gdbarch.c: Regenerate.
-	* target.c (target_translate_tls_address): Use
-	gdbarch_get_thread_local_address if present instead of
-	target::get_thread_local_address.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* target.h (target::get_thread_local_address): Update comment.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* solib-svr4.c (svr4_fetch_objfile_link_map): Look for
-	objfile->separate_debug_objfile_backlink if not NULL.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* amd64-bsd-nat.c (amd64bsd_fetch_inferior_registers): Use
-	tdep->fsbase_regnum instead of constants for fs_base and gs_base.
-	(amd64bsd_store_inferior_registers): Likewise.
-	* amd64-fbsd-nat.c (amd64_fbsd_nat_target::read_description):
-	Enable segment base registers.
-	* i386-bsd-nat.c (i386bsd_fetch_inferior_registers): Use
-	PT_GETFSBASE and PT_GETGSBASE.
-	(i386bsd_store_inferior_registers): Use PT_SETFSBASE and
-	PT_SETGSBASE.
-	* i386-fbsd-nat.c (i386_fbsd_nat_target::read_description): Enable
-	segment base registers.
-	* i386-fbsd-tdep.c (i386fbsd_core_read_description): Likewise.
-
-2019-03-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* amd64-fbsd-nat.c (amd64_fbsd_nat_target::read_description):
-	Update calls to i386_target_description to add 'segments'
-	parameter.
-	* amd64-tdep.c (amd64_init_abi): Set tdep->fsbase_regnum.  Don't
-	add segment base registers.
-	* arch/i386.c (i386_create_target_description): Add 'segments'
-	parameter to enable segment base registers.
-	* arch/i386.h (i386_create_target_description): Likewise.
-	* features/i386/32bit-segments.xml: New file.
-	* features/i386/32bit-segments.c: Generate.
-	* i386-fbsd-nat.c (i386_fbsd_nat_target::read_description): Update
-	call to i386_target_description to add 'segments' parameter.
-	* i386-fbsd-tdep.c (i386fbsd_core_read_description): Likewise.
-	* i386-go32-tdep.c (i386_go32_init_abi): Likewise.
-	* i386-linux-tdep.c (i386_linux_read_description): Likewise.
-	* i386-tdep.c (i386_validate_tdesc_p): Add segment base registers
-	if feature is present.
-	(i386_gdbarch_init): Pass I386_NUM_REGS to set_gdbarch_num_regs.
-	Add 'segments' parameter to call to i386_target_description.
-	(i386_target_description): Add 'segments' parameter to enable
-	segment base registers.
-	(_initialize_i386_tdep) [GDB_SELF_TEST]: Add 'segments' parameter
-	to call to i386_target_description.
-	* i386-tdep.h (struct gdbarch_tdep): Add 'fsbase_regnum'.
-	(enum i386_regnum): Add I386_FSBASE_REGNUM and I386_GSBASE_REGNUM.
-	Define I386_NUM_REGS.
-	(i386_target_description): Add 'segments' parameter to enable
-	segment base registers.
-
-2019-03-12  Eli Zaretskii  <eliz@gnu.org>
-
-	PR/24325
-	* source-cache.c: #undef open and close, to avoid unresolved
-	externals during linking.
-
-2019-03-12  Tom Tromey  <tromey@adacore.com>
-
-	* remote.c (magic_null_ptid, not_sent_ptid, any_thread_ptid): Now
-	const.  Add initializers.
-	(_initialize_remote): Don't initialize ptid globals.
-
-2019-03-12  Pedro Alves  <palves@redhat.com>
-
-	* yy-remap.h [TEST_CPNAMES] (YYFPRINTF): Don't define.
-
-2019-03-12  Pedro Alves  <palves@redhat.com>
-
-	* cp-name-parser.y (main): Remove unused 'len' variable.
-
-2019-03-12  Tom Tromey  <tromey@adacore.com>
-
-	* common/ptid.c (null_ptid, minus_one_ptid): Now const.
-	* common/ptid.h (null_ptid, minus_one_ptid): Now const.
-
-2019-03-12  Tom Tromey  <tromey@adacore.com>
-
-	* linux-nat.c (iterate_over_lwps): Update.
-	(stop_callback): Remove parameter.
-	(stop_wait_callback, detach_callback, resume_set_callback)
-	(select_singlestep_lwp_callback, set_ignore_sigint)
-	(status_callback, resumed_callback, resume_clear_callback)
-	(kill_callback, kill_wait_callback, linux_nat_stop_lwp): Remove
-	data parameter.
-	(linux_nat_target::detach, linux_nat_target::resume)
-	(linux_stop_and_wait_all_lwps, select_event_lwp)
-	(linux_nat_filter_event, linux_nat_wait_1)
-	(linux_nat_target::kill, linux_nat_target::stop)
-	(linux_nat_target::stop): Update.
-	(linux_nat_resume_callback): Change type.
-	(resume_stopped_resumed_lwps, count_events_callback)
-	(select_event_lwp_callback): Likewise.
-	(linux_stop_lwp, linux_nat_stop_lwp): Update.
-	* arm-linux-nat.c (struct update_registers_data): Remove.
-	(update_registers_callback): Change type.
-	(arm_linux_insert_hw_breakpoint1): Update.
-	* nat/x86-linux-dregs.c (update_debug_registers_callback): Remove
-	parameter.
-	(x86_linux_dr_set_addr): Update.
-	(x86_linux_dr_set_control): Update.
-	* nat/linux-nat.h (iterate_over_lwps_ftype): Remove parameter.
-	(iterate_over_lwps): Use gdb::function_view.
-	* nat/aarch64-linux-hw-point.c (struct
-	aarch64_dr_update_callback_param): Remove.
-	(debug_reg_change_callback): Change type.
-	(aarch64_notify_debug_reg_change): Update.
-	* s390-linux-nat.c (s390_refresh_per_info): Update.
-
-2019-03-11  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (dwarf2_find_containing_comp_unit): Remove
-	redundant assignment to "this_cu".
-
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.c (rank_one_type): Remove unnecessary cases from switch.
-
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.c (rank_one_type_parm_set): New function extracted
-	from...
-	(rank_one_type): ... this.
-
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.c (rank_one_type_parm_struct): New function extracted
-	from...
-	(rank_one_type): ... this.
-
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.c (rank_one_type_parm_complex): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	* top.c (struct qt_args): Remove.
+	(kill_or_detach): Change return type to void, replace `void *`
+	parameter with a proper one.
+	(print_inferior_quit_action):  Likewise.
+	(quit_confirm): Use range-based for loop to iterate over inferiors.
+	(quit_force): Likewise.
 
-	* gdbtypes.c (rank_one_type_parm_float): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	* mi/mi-main.c (run_one_inferior): Change return type to void, replace
+	`void *` parameter with proper parameters.
+	(mi_cmd_exec_run): Use range-based loop to iterate over inferiors.
+	(print_one_inferior): Change return type to void, replace `void *`
+	parameter with proper parameters.
+	(mi_cmd_list_thread_groups): Use range-based loop to iterate over
+	inferiors.
+	(get_other_inferior): Remove.
+	(mi_cmd_remove_inferior): Use range-based loop to iterate over
+	inferiors.
 
-	* gdbtypes.c (rank_one_type_parm_bool): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	* mi/mi-interp.c (report_initial_inferior): Remove.
+	(mi_interp::init): Use range-based for to iterate over inferiors.
 
-	* gdbtypes.c (rank_one_type_parm_range): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	* python/py-inferior.c (build_inferior_list): Remove.
+	(gdbpy_ref): Use range-based for loop to iterate over inferiors.
 
-	* gdbtypes.c (rank_one_type_parm_char): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-16  Christian Biesinger  <cbiesinger@google.com>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	* btrace.c (btrace_compute_ftrace_1): Fix spelling error (Unkown).
+	(btrace_stitch_trace): Likewise.
+	* charset.c (intermediate_encoding): Likewise (vaild).
+	* nat/linux-btrace.c (linux_read_pt): Likewise (Unkown).
+	* python/py-record-btrace.c (struct PyMethodDef): Likewise (occurences).
+	* record-btrace.c (record_btrace_print_conf): Likewise (unkown).
 
-	* gdbtypes.c (rank_one_type_parm_enum): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-16  Hannes Domani  <ssbssa@yahoo.de>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	* windows-tdep.c (windows_get_tlb_type):
+	Add rtl_user_process_parameters type.
 
-	* gdbtypes.c (rank_one_type_parm_int): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-16  Pedro Alves  <palves@redhat.com>
+            Norbert Lange  <nolange79@gmail.com>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	PR build/24805
+	* gdbsupport/gdb_proc_service.h (PS_EXPORT): New.
+	(ps_get_thread_area, ps_getpid, ps_lcontinue, ps_lgetfpregs)
+	(ps_lgetregs, ps_lsetfpregs, ps_lsetregs, ps_lstop, ps_pcontinue)
+	(ps_pdread, ps_pdwrite, ps_pglobal_lookup, ps_pstop, ps_ptread)
+	(ps_ptwrite, ps_lgetxregs, ps_lgetxregsize, ps_lsetxregs)
+	(ps_plog): Redeclare exported functions with default visibility.
 
-	* gdbtypes.c (rank_one_type_parm_func): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-16  Nitika Achra  <Nitika.Achra@amd.com>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	* dwarf2loc.c (decode_debug_loclists_addresses): Handle
+	DW_LLE_base_addressx, DW_LLE_startx_length, DW_LLE_start_length.
 
-	* gdbtypes.c (rank_one_type_parm_array): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-15  Simon Marchi  <simon.marchi@efficios.com>
 
-2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+	* infcmd.c (post_create_inferior): Use get_thread_regcache
+	instead of get_current_regcache.
 
-	* gdbtypes.c (rank_one_type_parm_ptr): New function extracted
-	from...
-	(rank_one_type): ... this.
+2020-01-14  Tom Tromey  <tom@tromey.com>
 
-2019-02-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	PR symtab/12535:
+	* python/python.c (gdbpy_decode_line): Treat empty string the same
+	as no argument.
 
-	* inferior.c (initialize_inferiors): Ensure 'help set/show print
-	inferior-events' shows the example events.
-
-2019-03-08  Eli Zaretskii  <eliz@gnu.org>
-
-	Support styling on native MS-Windows console
-
-	PR/24315
-	* utils.c (can_emit_style_escape) [_WIN32]: Don't disable styling
-	on MS-Windows if $TERM is not defined.
-
-	* cli/cli-style.c: Set cli_styling to 1 in the MinGW build.
-
-	* posix-hdep.c (gdb_console_fputs):
-	* mingw-hdep.c (rgb_to_16colors, gdb_console_fputs): New
-	functions.
-	* ui-file.h (gdb_console_fputs): Add prototype.
+2020-01-14  Tom Tromey  <tom@tromey.com>
 
-	* ui-file.c (stdio_file::puts): Call gdb_console_fputs, and fall
-	back to fputs only if the former returns zero.
+	* Makefile.in (CLIBS): Remove second use of $(LIBIBERTY).
 
-2019-03-07  Tom Tromey  <tom@tromey.com>
-
-	* symmisc.c (print_symbol_bcache_statistics): Update.
-	(print_objfile_statistics): Update.
-	* symfile.c (allocate_symtab): Update.
-	* stabsread.c: Don't include bcache.h.
-	* psymtab.h (struct psymbol_bcache): Don't declare.
-	(class psymtab_storage) <psymbol_cache>: Now a bcache.
-	(psymbol_bcache_init, psymbol_bcache_free)
-	(psymbol_bcache_get_bcache): Don't declare.
-	* psymtab.c (struct psymbol_bcache): Remove.
-	(psymtab_storage::psymtab_storage): Update.
-	(psymtab_storage::~psymtab_storage): Update.
-	(psymbol_bcache_init, psymbol_bcache_free)
-	(psymbol_bcache_get_bcache, psymbol_bcache_full): Remove.
-	(add_psymbol_to_bcache): Update.
-	(allocate_psymtab): Update.
-	* objfiles.h (struct objfile_per_bfd_storage) <filename_cache,
-	macro_cache>: No longer pointers.
-	* objfiles.c (get_objfile_bfd_data): Don't call bcache_xmalloc.
-	(free_objfile_per_bfd_storage): Don't call bcache_xfree.
-	* macrotab.c (macro_bcache): Update.
-	* macroexp.c: Don't include bcache.h.
-	* gdbtypes.c (check_types_worklist): Update.
-	(types_deeply_equal): Remove TRY/CATCH.  Update.
-	* elfread.c (elf_symtab_read): Update.
-	* dwarf2read.c: Don't include bcache.h.
-	* buildsym.c (buildsym_compunit::get_macro_table): Update.
-	* bcache.h (bcache, bcache_full, bcache_xffree, bcache_xmalloc)
-	(print_bcache_statistics, bcache_memory_used): Don't declare.
-	(struct bcache): Move from bcache.c.  Add constructor, destructor,
-	methods.  Rename all data members.
-	* bcache.c (struct bcache): Move to bcache.h.
-	(bcache::expand_hash_table): Rename from expand_hash_table.
-	(bcache): Remove.
-	(bcache::insert): Rename from bcache_full.
-	(bcache::compare): Rename from bcache_compare.
-	(bcache_xmalloc): Remove.
-	(bcache::~bcache): Rename from bcache_xfree.
-	(bcache::print_statistics): Rename from print_bcache_statistics.
-	(bcache::memory_used): Rename from bcache_memory_used.
-
-2019-03-07  Pedro Alves  <palves@redhat.com>
-
-	* infrun.c (normal_stop): Also check for
-	TARGET_WAITKIND_NO_RESUMED before referring to inferior_thread().
-
-2019-03-07  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-lang.c (value_from_host_double): Moved to...
-	* value.c (value_from_host_double): ...here.
-	* value.h (value_from_host_double): Declare.
-	* guile/scm-math.c (vlscm_convert_typed_number): Use
-	value_from_host_double.
-	(vlscm_convert_number): Likewise.
-	* guile/scm-value.c (gdbscm_value_to_real): Likewise.
-	* python/py-value.c (convert_value_from_python): Likewise.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* gcore.c (write_gcore_file): Use SCOPE_EXIT.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* utils.h (free_current_contents): Don't declare.
-	* utils.c (free_current_contents): Remove.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* top.c (quit_force): Update.
-	* main.c (captured_command_loop): Update.
-	* common/new-op.c (operator new): Update.
-	* common/common-exceptions.c (struct catcher)
-	<save_cleanup_chain>: Remove member.
-	(exceptions_state_mc_init): Update.
-	(exception_try_scope_entry): Return nullptr.
-	(exception_try_scope_exit, exception_rethrow)
-	(throw_exception_sjlj, throw_exception_cxx): Update.
-	* common/cleanups.h (make_cleanup, make_cleanup_dtor)
-	(all_cleanups, do_cleanups, discard_cleanups)
-	(discard_final_cleanups, save_cleanups, save_final_cleanups)
-	(restore_cleanups, restore_final_cleanups): Don't declare.
-	(do_final_cleanups): Remove parameter.
-	* common/cleanups.c (cleanup_chain, make_cleanup)
-	(make_cleanup_dtor, all_cleanups, do_cleanups)
-	(discard_my_cleanups, discard_cleanups)
-	(discard_final_cleanups, save_my_cleanups, save_cleanups)
-	(save_final_cleanups, restore_my_cleanups, restore_cleanups)
-	(null_cleanup): Remove.
-	(do_final_cleanups): Remove parameter.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* remote.c (remote_target::remote_parse_stop_reply): Use
-	unique_xmalloc_ptr.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* stabsread.c (struct stabs_field_info): Rename from field_info.
-	<list, fnlist>: Add initializers.
-	<obstack>: New member.
-	(read_member_functions, read_struct_fields, read_baseclasses):
-	Allocate on obstack.  Don't use cleanups.
-	(read_one_struct_field, read_member_functions, read_struct_fields)
-	(read_baseclasses, read_tilde_fields, attach_fn_fields_to_type)
-	(attach_fields_to_type, read_cpp_abbrev, read_member_functions)
-	(read_struct_type): Update.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* nat/linux-namespaces.c (linux_mntns_access_fs): Use SCOPE_EXIT.
-	* common/filestuff.h (make_cleanup_close): Don't declare.
-	* common/filestuff.c (do_close_cleanup, make_cleanup_close):
-	Remove.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* solib-aix.c: Use make_scope_exit.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* solib-svr4.c (svr4_parse_libraries, svr4_current_sos_direct):
-	Use make_scope_exit.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* solib-svr4.c (disable_probes_interface): Remove parameter.
-	(svr4_handle_solib_event): Use make_scope_exit.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* remote.c (struct stop_reply_deleter): Remove.
-	(stop_reply_up): Update.
-	(struct stop_reply): Derive from notif_event.  Don't typedef.
-	<regcache>: Now a std::vector.
-	(stop_reply_xfree): Remove.
-	(stop_reply::~stop_reply): Rename from stop_reply_dtr.
-	(remote_notif_stop_alloc_reply): Return a unique_ptr.  Use new.
-	(remote_target::discard_pending_stop_replies): Use delete.
-	(remote_target::remote_parse_stop_reply): Update.
-	(remote_target::process_stop_reply): Update.
-	* remote-notif.h (struct notif_event): Add virtual destructor.
-	Remove "dtr" member.
-	(struct notif_client) <alloc_event>: Return a unique_ptr.
-	(notif_event_xfree): Don't declare.
-	(notif_event_up): New typedef.
-	* remote-notif.c (remote_notif_ack, remote_notif_parse): Update.
-	(notif_event_xfree, do_notif_event_xfree): Remove.
-	(remote_notif_state_xfree): Update.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* infrun.c (displaced_step_clear_cleanup): Now a
-	forward_scope_exit type.
-	(displaced_step_prepare_throw): Update.
-	(displaced_step_fixup): Update.
-
-2019-03-06  Tom Tromey  <tom@tromey.com>
-
-	* inferior.h (class inferior): Update comment.
-	* gdbthread.h (class thread_info): Update comment.
-
-2019-03-06  Joel Brobecker  <brobecker@adacore.com>
-	    Tom Tromey  <tom@tromey.com>
-
-	* stabsread.h (struct stab_section_list): Remove.
-	(coffstab_build_psymtabs): Update.
-	* dbxread.c (symbuf_sections): Now a std::vector.
-	(sect_idx): New global.
-	(fill_symbuf): Update.
-	(coffstab_build_psymtabs): Change type of stabsects parameter.
-	Update.
-	* coffread.c (struct coff_symfile_info) <stabsects>: Now a
-	std::vector.
-	(linetab, linetab_offset, linetab_size, stringtab): Move earlier.
-	(coff_locate_sections): Update.
-	(coff_symfile_read): Remove cleanups.  Update.
-	(init_stringtab): Add storage parameter.
-	(free_stringtab, free_stringtab_cleanup): Remove.
-	(init_lineno): Add storage parameter.
-	(free_linetab, free_linetab_cleanup): Remove.
-
-2019-03-06  Pedro Alves  <palves@redhat.com>
-
-	* linux-fork.c (fork_info::clobber_regs): Delete.
-	(fork_load_infrun_state): Remove reference to 'clobber_regs'.
-	(fork_save_infrun_state): Remove 'clobber_regs' parameter.  Update
-	comment.  Adjust.
-	(scoped_switch_fork_info::scoped_switch_fork_info)
-	(checkpoint_command, linux_fork_context): Adjust
-	fork_save_infrun_state calls.
-
-2019-03-06  Pedro Alves  <palves@redhat.com>
-
-	* linux-fork.c (inf_has_multiple_thread_cb): Delete.
-	(inf_has_multiple_threads): Return 'bool' and rewrite using
-	inferior_info::threads().
-
-2019-03-06  Pedro Alves  <palves@redhat.com>
-
-	* linux-fork.c: Include <list>.
-	(fork_list): Now a std::list instance.
-	(fork_info): Add ctor, dtor, and in-class initialize all fields.
-	(forks_exist_p, find_last_fork): Adjust.
-	(new_fork): Delete.
-	(one_fork_p): New.
-	(add_fork): Adjust.
-	(free_fork): Delete, folded into fork_info::~fork_info().
-	(delete_fork, find_fork_ptid, find_fork_id, find_fork_pid):
-	Adjust.
-	(init_fork_list): Delete.
-	(linux_fork_killall, linux_fork_mourn_inferior)
-	(linux_fork_detach, info_checkpoints_command): Adjust.
-	(_initialize_linux_fork): No longer call init_fork_list.
-
-2019-03-06  Pedro Alves  <palves@redhat.com>
-
-	* linux-fork.c (new_fork): New, split out of ...
-	(add_fork): ... this.  Return void.  Move "first fork" special
-	case from here, to ...
-	(checkpoint_command): ... here.
-	* linux-linux.h (add_fork): Return void.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-exp.y (direct_abs_decl): Handle TYPE*SIZE type names.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Chris January  <chris.january@arm.com>
-	    David Lecomber  <david.lecomber@arm.com>
-
-	* f-exp.y: New token, UNOP_INTRINSIC.
-	(exp): New pattern using UNOP_INTRINSIC token.
-	(f77_keywords): Add 'abs' keyword.
-	* f-lang.c: Add 'target-float.h' and 'math.h' includes.
-	(value_from_host_double): New function.
-	(evaluate_subexp_f): Support UNOP_ABS.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-lang.c (build_fortran_types): Use TYPE_CODE_CHAR for character
-	types.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-exp.y (convert_to_kind_type): Handle integer (kind=8).
-	* f-lang.c (build_fortran_types): Setup builtin_integer_s8.
-	* f-lang.h (struct builtin_f_type): Add builtin_integer_s8 field.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-exp.y (convert_to_kind_type): Handle more type kinds.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Chris January  <chris.january@arm.com>
-
-	* expprint.c (dump_subexp_body_standard): Support UNOP_KIND.
-	* f-exp.y: Define 'KIND' token.
-	(exp): New pattern for KIND expressions.
-	(ptype): Handle types with a kind extension.
-	(direct_abs_decl): Extend to spot kind extensions.
-	(f77_keywords): Add 'kind' to the list.
-	(push_kind_type): New function.
-	(convert_to_kind_type): New function.
-	* f-lang.c (evaluate_subexp_f): Support UNOP_KIND.
-	* parse.c (operator_length_standard): Likewise.
-	* parser-defs.h (enum type_pieces): Add tp_kind.
-	* std-operator.def: Add UNOP_KIND.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-exp.y (f_parse): Set yydebug.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-lang.c (evaluate_subexp_f): New function.
-	(exp_descriptor_f): New global.
-	(f_language_defn): Use exp_descriptor_f instead of
-	exp_descriptor_standard.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-exp.y (struct token): Add comments.
-	(dot_ops): Remove uppercase versions and the end marker.
-	(f77_keywords): Likewise.
-	(yylex): Use ARRAY_SIZE to iterate over dot_ops, assert all
-	entries in the dot_ops array are case insensitive, and use
-	strncasecmp to compare strings.  Also some whitespace cleanup in
-	this area.  Similar for the f77_keywords array, except entries in
-	this list might be case sensitive.
-
-2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* f-exp.y (struct f77_boolean_val): Add comments.
-	(boolean_values): Remove uppercase versions, and end marker.
-	(yylex): Use ARRAY_SIZE for iterating over boolean_values array,
-	and use strncasecmp to achieve case insensitivity.  Additionally,
-	perform whitespace cleanup around this code.
-
-2019-03-06  Tom Tromey  <tromey@adacore.com>
-
-	* remote-sim.c (gdbsim_target_open): Use result of
-	gdb_argv::release.
-
-2019-03-06  Richard Bunt  <richard.bunt@arm.com>
-	Dirk Schubert  <dirk.schubert@arm.com>
-	Chris January  <chris.january@arm.com>
-
-	* eval.c (evaluate_subexp_standard): Call Fortran argument
-	wrapping logic.
-	* f-lang.c (struct value): A value which can be passed into a
-	Fortran function call.
-	(fortran_argument_convert): Wrap Fortran arguments in a pointer
-	where appropriate.
-	(struct type): Value ready for a Fortran function call.
-	(fortran_preserve_arg_pointer): Undo check_typedef, the pointer
-	is needed.
-	* f-lang.h (fortran_argument_convert): Declaration.
-	(fortran_preserve_arg_pointer): Declaration.
-	* infcall.c (value_arg_coerce): Call Fortran argument logic.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* python/py-prettyprint.c (print_string_repr): Remove #if.
-	* python/py-utils.c (unicode_to_encoded_string): Remove #if.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* target.c (the_dummy_target): Move later.  Change type to
-	"dummy_target".
-	(initialize_targets): Don't initialize the_dummy_target.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* gdb_bfd.c (gdb_bfd_fdopenr): Remove.
-	* gdb_bfd.h (gdb_bfd_fdopenr): Don't declare.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (windows_nat_target::attach)
-	(windows_nat_target::detach): Don't call gdb_flush.
-	* valprint.c (generic_val_print, val_print, val_print_string):
-	Don't call gdb_flush.
-	* utils.c (defaulted_query): Don't call gdb_flush.
-	* typeprint.c (print_type_scalar): Don't call gdb_flush.
-	* target.c (target_announce_detach): Don't call gdb_flush.
-	* sparc64-tdep.c (adi_print_versions): Don't call gdb_flush.
-	* remote.c (extended_remote_target::attach): Don't call
-	gdb_flush.
-	* procfs.c (procfs_target::detach): Don't call gdb_flush.
-	* printcmd.c (do_examine): Don't call gdb_flush.
-	(info_display_command): Don't call gdb_flush.
-	* p-valprint.c (pascal_val_print): Don't call gdb_flush.
-	* nto-procfs.c (nto_procfs_target::attach): Don't call gdb_flush.
-	* memattr.c (info_mem_command): Don't call gdb_flush.
-	* mdebugread.c (mdebug_build_psymtabs): Don't call gdb_flush.
-	* m2-valprint.c (m2_val_print): Don't call gdb_flush.
-	* infrun.c (follow_exec, handle_command): Don't call gdb_flush.
-	* inf-ptrace.c (inf_ptrace_target::attach): Don't call gdb_flush.
-	* hppa-tdep.c (unwind_command): Don't call gdb_flush.
-	* gnu-nat.c (gnu_nat_target::attach): Don't call gdb_flush.
-	(gnu_nat_target::detach): Don't call gdb_flush.
-	* f-valprint.c (f_val_print): Don't call gdb_flush.
-	* darwin-nat.c (darwin_nat_target::attach): Don't call gdb_flush.
-	* cli/cli-script.c (read_command_lines): Don't call gdb_flush.
-	* cli/cli-cmds.c (shell_escape, print_disassembly): Don't call
-	gdb_flush.
-	* c-valprint.c (c_val_print): Don't call gdb_flush.
-	* ada-valprint.c (ada_print_scalar): Don't call gdb_flush.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* varobj.c (update_dynamic_varobj_children): Update.
-	(install_default_visualizer): Use reset, not release.
-	* value.c (set_internalvar): Update.
-	* dwarf2loc.c (value_of_dwarf_reg_entry): Update.
-	* common/gdb_ref_ptr.h (class ref_ptr) <release>: Add
-	ATTRIBUTE_UNUSED_RESULT.
+2020-01-14  Tom Tromey  <tom@tromey.com>
 
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* remote.c (class scoped_remote_fd) <release>: Add
-	ATTRIBUTE_UNUSED_RESULT.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
+	* nat/linux-btrace.c: Don't include <config.h>.
+	* nat/linux-ptrace.c: Don't include <config.h>.
+	* nat/x86-linux-dregs.c: Don't include <config.h>.
 
-	* macroexp.c (struct macro_buffer) <release>: Add
-	ATTRIBUTE_UNUSED_RESULT.
+2020-01-14  Tom Tromey  <tom@tromey.com>
 
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* nat/linux-btrace.c (linux_enable_bts, linux_enable_pt): Update.
-	* common/scoped_mmap.h (class scoped_mmap) <release>: Add
-	ATTRIBUTE_UNUSED_RESULT.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* common/scoped_fd.h (class scoped_fd) <release>: Add
-	ATTRIBUTE_UNUSED_RESULT.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* parser-defs.h (struct parser_state) <release>: Add
-	ATTRIBUTE_UNUSED_RESULT.
-
-2019-03-05  Tom Tromey  <tromey@adacore.com>
-
-	* utils.h (class gdb_argv) <release>: Add
-	ATTRIBUTE_UNUSED_RESULT.
-	* common/common-defs.h (ATTRIBUTE_UNUSED_RESULT): Define.
-
-2019-03-02  Eli Zaretskii  <eliz@gnu.org>
-
-	* xml-syscall.c (xml_list_syscalls_by_group): Drop 'struct' from
-	for-loop range, to avoid compiler warnings.
-
-	* tui/tui.c (tui_enable) [__MINGW32__]: Don't declare 'cap', to
-	avoid compiler warnings about unused variables.
-
-	* NEWS: Mention end of support for native debugging on MS-Windows
-	before XP.
-
-	PR gdb/24292
-	* common/netstuff.c:
-	* gdbserver/gdbreplay.c
-	* gdbserver/remote-utils.c:
-	* ser-tcp.c:
-	* unittests/parse-connection-spec-selftests.c [USE_WIN32API]:
-	Include ws2tcpip.h instead of wsiapi.h and winsock2.h.  Redefine
-	_WIN32_WINNT to 0x0501 if defined to a smaller value, as
-	'getaddrinfo' and 'freeaddrinfo' were not available before
-	Windows XP, and mingw.org's MinGW headers by default define
-	_WIN32_WINNT to 0x500.
-
-2019-03-01  Gary Benson <gbenson@redhat.com>
-
-	* coffread.c (coff_start_symtab): Remove unnecessary xstrdup.
-
-2019-02-28  Brian Vandenberg  <phantall@gmail.com>
-	    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	PR gdb/8527
-	* procfs.c (proc_wait_for_stop): Wrap write of PCWSTOP in
-	set_sigint_trap, clear_sigint_trap.
-
-2019-02-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	* configure: Rebuild.
+	* configure.ac: Move many checks to ../gdbsupport/common.m4.
 
-	* target.c (target_detach): Clear the regcache and the
-	frame cache.
+2020-01-14  Tom Tromey  <tom@tromey.com>
 
-2019-02-27  Pedro Alves  <palves@redhat.com>
+	* nat/x86-linux-dregs.c: Include configh.h.
+	* nat/linux-ptrace.c: Include configh.h.
+	* nat/linux-btrace.c: Include configh.h.
+	* defs.h: Include config.h, bfd.h.
+	* configure.ac: Don't source common.host.
+	(CONFIG_OBS, CONFIG_SRCS): Remove gdbsupport files.
+	* configure: Rebuild.
+	* acinclude.m4: Update path.
+	* Makefile.in (SUPPORT, LIBSUPPORT, INCSUPPORT): New variables.
+	(CONFIG_SRC_SUBDIR): Remove gdbsupport.
+	(INTERNAL_CFLAGS_BASE): Add INCSUPPORT.
+	(CLIBS): Add LIBSUPPORT.
+	(CDEPS): Likewise.
+	(COMMON_SFILES): Remove gdbsupport files.
+	(HFILES_NO_SRCDIR): Likewise.
+	(stamp-version): Update path to create-version.sh.
+	(ALLDEPFILES): Remove gdbsupport files.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* gdbsupport/common.m4 (GDB_AC_COMMON): Define WIN32APILIBS and
+	USE_WIN32API when needed.
+	* configure.ac (USE_WIN32API): Don't define.
+	(WIN32LIBS): Use WIN32APILIBS.
+	* configure: Rebuild.
 
-	* utils.c (set_screen_size): When we cap the height/width sizes,
-	tweak the corresponding command variable to show "unlimited":
+2020-01-14  Tom Tromey  <tom@tromey.com>
 
-2019-02-27  Saagar Jha  <saagar@saagarjha.com>
+	* configure: Rebuild.
+	* gdbsupport/common.m4 (GDB_AC_COMMON): Fix indentation.
+
+2020-01-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* skip.c (skip_function_command): Make skip w/o arguments use the
+	name of the inlined function if pc is inside any inlined function.
+
+2020-01-14  Luis Machado  <luis.machado@linaro.org>
+
+	* inf-ptrace.c (inf_ptrace_target::resume): Update comments.
+	* infrun.c (resume_1): Likewise.
+	(handle_inferior_event): Remove stale comment.
+	* linux-nat.c (linux_nat_target::resume): Update comments.
+	(save_stop_reason): Likewise.
+	(linux_nat_filter_event): Likewise.
+	* linux-nat.h (struct lwp_info) <stop_pc>, <stop_reason>: Likewise.
+
+2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* elfread.c (record_minimal_symbol): Set section index to 0 for
+	non-allocatable sections.
+
+
+2020-01-13  Ali Tamur <tamur@google.com>
+
+	* dwarf2read.c (dwarf2_debug_sections): Add debug_str_offsets sections.
+	(dwarf2_cu): Add str_offsets_base field.  Change the type of addr_base
+	to gdb::optional.  Update comments.
+	(dwo_file): Update comments.
+	(read_attribute): Update API to take an additional out parameter,
+	need_reprocess.  This is used to mark attributes that need other
+	attributes (e.g. str_offsets_base) for correct computation which may not
+	have been read yet.
+	(read_attribute_reprocess): New function declaration.
+	(read_addr_index): Likewise.
+	(read_dwo_str_index): Likewise.
+	(read_stub_str_index): Likewise.
+	(dwarf2_per_objfile::locate_sections): Handle debug_str_offsets section.
+	(lookup_addr_base): New function definition.
+	(lookup_ranges_base): Likewise.
+	(read_cutu_die_from_dwo): Use the new functions: lookup_addr_base,
+	lookup_ranges_base.
+	(init_cutu_and_read_dies): Update comments.
+	(init_cutu_and_read_dies_no_follow): Change API to take parent compile
+	unit.  This is used to inherit parent's str_offsets_base and addr_base.
+	Update comments.
+	(init_cutu_and_read_dies_simple): Reflect API changes.
+	(skip_one_die): Reflect API changes.  Handle DW_FORM_rnglistx.
+	(create_cus_hash_table): Change API to take parent compile unit.  
+	Reflect API changes.
+	(open_and_init_dwo_file): Reflect API changes.
+	(dwarf2_get_pc_bounds): Update comments.
+	(dwarf2_record_block_ranges): Likewise.
+	(read_full_die_1): Change implementation to reprocess attributes that
+	need str_offsets_base and addr_base.
+	(partial_die_info::read): Likewise.
+	(read_attribute_reprocess): New function definition.
+	(read_attribute_value): Change API to take an additional out parameter,
+	need_reprocess.  Handle DW_FORM_rnglistx.  No longer trigger an error
+	when a non-dwo compile unit has index based attributes.
+	(read_attribute): Reflect API changes.
+	(read_addr_index_1): Reflect API changes.  Update comments.
+	(dwarf2_read_addr_index_data): Reflect API changes.
+	(dwarf2_read_addr_index): Likewise.
+	(read_str_index): Change API and implementation.  This becomes a helper
+	to be used by the new string index related methods.  Update error
+	message and comments.
+	(read_dwo_str_index): New function definition.
+	(read_stub_str_index): Likewise.
+	* dwarf2read.h (dwarf2_per_objfile): Add str_offsets field.
+	* symfile.h (dwarf2_debug_sections): Likewise.
+	* xcoffread.c (dwarf2_debug_sections): Likewise.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbcore.h (struct core_fns) <core_read_registers>: Change
+	core_reg_sect type to gdb_byte *.
+	* arm-nbsd-nat.c (fetch_elfcore_registers): Likewise.
+	* cris-tdep.c (fetch_core_registers): Likewise.
+	* corelow.c (core_target::get_core_register_section): Change
+	type of `contents` to gdb::byte_vector.
+
+2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tui/tui-wingeneral.c (box_win): Position the title in the center
+	of the border.
+
+2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* corelow.c (core_target::get_core_register_section): Use
+	  std::vector instead of alloca.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* warning.m4: Add -Wmissing-declarations to build_warnings.
+	* configure: Re-generate.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* python/python.c (init__gdb_module): Add declaration.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aarch64-fbsd-nat.c (_initialize_aarch64_fbsd_nat): Add declaration.
+	* aarch64-fbsd-tdep.c (_initialize_aarch64_fbsd_tdep): Add declaration.
+	* aarch64-linux-nat.c (_initialize_aarch64_linux_nat): Add declaration.
+	* aarch64-linux-tdep.c (_initialize_aarch64_linux_tdep): Add declaration.
+	* aarch64-newlib-tdep.c (_initialize_aarch64_newlib_tdep): Add declaration.
+	* aarch64-tdep.c (_initialize_aarch64_tdep): Add declaration.
+	* ada-exp.y (_initialize_ada_exp): Add declaration.
+	* ada-lang.c (_initialize_ada_language): Add declaration.
+	* ada-tasks.c (_initialize_tasks): Add declaration.
+	* agent.c (_initialize_agent): Add declaration.
+	* aix-thread.c (_initialize_aix_thread): Add declaration.
+	* alpha-bsd-nat.c (_initialize_alphabsd_nat): Add declaration.
+	* alpha-linux-nat.c (_initialize_alpha_linux_nat): Add declaration.
+	* alpha-linux-tdep.c (_initialize_alpha_linux_tdep): Add declaration.
+	* alpha-nbsd-tdep.c (_initialize_alphanbsd_tdep): Add declaration.
+	* alpha-obsd-tdep.c (_initialize_alphaobsd_tdep): Add declaration.
+	* alpha-tdep.c (_initialize_alpha_tdep): Add declaration.
+	* amd64-darwin-tdep.c (_initialize_amd64_darwin_tdep): Add declaration.
+	* amd64-dicos-tdep.c (_initialize_amd64_dicos_tdep): Add declaration.
+	* amd64-fbsd-nat.c (_initialize_amd64fbsd_nat): Add declaration.
+	* amd64-fbsd-tdep.c (_initialize_amd64fbsd_tdep): Add declaration.
+	* amd64-linux-nat.c (_initialize_amd64_linux_nat): Add declaration.
+	* amd64-linux-tdep.c (_initialize_amd64_linux_tdep): Add declaration.
+	* amd64-nbsd-nat.c (_initialize_amd64nbsd_nat): Add declaration.
+	* amd64-nbsd-tdep.c (_initialize_amd64nbsd_tdep): Add declaration.
+	* amd64-obsd-nat.c (_initialize_amd64obsd_nat): Add declaration.
+	* amd64-obsd-tdep.c (_initialize_amd64obsd_tdep): Add declaration.
+	* amd64-sol2-tdep.c (_initialize_amd64_sol2_tdep): Add declaration.
+	* amd64-tdep.c (_initialize_amd64_tdep): Add declaration.
+	* amd64-windows-nat.c (_initialize_amd64_windows_nat): Add declaration.
+	* amd64-windows-tdep.c (_initialize_amd64_windows_tdep): Add declaration.
+	* annotate.c (_initialize_annotate): Add declaration.
+	* arc-newlib-tdep.c (_initialize_arc_newlib_tdep): Add declaration.
+	* arc-tdep.c (_initialize_arc_tdep): Add declaration.
+	* arch-utils.c (_initialize_gdbarch_utils): Add declaration.
+	* arm-fbsd-nat.c (_initialize_arm_fbsd_nat): Add declaration.
+	* arm-fbsd-tdep.c (_initialize_arm_fbsd_tdep): Add declaration.
+	* arm-linux-nat.c (_initialize_arm_linux_nat): Add declaration.
+	* arm-linux-tdep.c (_initialize_arm_linux_tdep): Add declaration.
+	* arm-nbsd-nat.c (_initialize_arm_netbsd_nat): Add declaration.
+	* arm-nbsd-tdep.c (_initialize_arm_netbsd_tdep): Add declaration.
+	* arm-obsd-tdep.c (_initialize_armobsd_tdep): Add declaration.
+	* arm-pikeos-tdep.c (_initialize_arm_pikeos_tdep): Add declaration.
+	* arm-symbian-tdep.c (_initialize_arm_symbian_tdep): Add declaration.
+	* arm-tdep.c (_initialize_arm_tdep): Add declaration.
+	* arm-wince-tdep.c (_initialize_arm_wince_tdep): Add declaration.
+	* auto-load.c (_initialize_auto_load): Add declaration.
+	* auxv.c (_initialize_auxv): Add declaration.
+	* avr-tdep.c (_initialize_avr_tdep): Add declaration.
+	* ax-gdb.c (_initialize_ax_gdb): Add declaration.
+	* bfin-linux-tdep.c (_initialize_bfin_linux_tdep): Add declaration.
+	* bfin-tdep.c (_initialize_bfin_tdep): Add declaration.
+	* break-catch-sig.c (_initialize_break_catch_sig): Add declaration.
+	* break-catch-syscall.c (_initialize_break_catch_syscall): Add declaration.
+	* break-catch-throw.c (_initialize_break_catch_throw): Add declaration.
+	* breakpoint.c (_initialize_breakpoint): Add declaration.
+	* bsd-uthread.c (_initialize_bsd_uthread): Add declaration.
+	* btrace.c (_initialize_btrace): Add declaration.
+	* charset.c (_initialize_charset): Add declaration.
+	* cli/cli-cmds.c (_initialize_cli_cmds): Add declaration.
+	* cli/cli-dump.c (_initialize_cli_dump): Add declaration.
+	* cli/cli-interp.c (_initialize_cli_interp): Add declaration.
+	* cli/cli-logging.c (_initialize_cli_logging): Add declaration.
+	* cli/cli-script.c (_initialize_cli_script): Add declaration.
+	* cli/cli-style.c (_initialize_cli_style): Add declaration.
+	* coff-pe-read.c (_initialize_coff_pe_read): Add declaration.
+	* coffread.c (_initialize_coffread): Add declaration.
+	* compile/compile-cplus-types.c (_initialize_compile_cplus_types): Add declaration.
+	* compile/compile.c (_initialize_compile): Add declaration.
+	* complaints.c (_initialize_complaints): Add declaration.
+	* completer.c (_initialize_completer): Add declaration.
+	* copying.c (_initialize_copying): Add declaration.
+	* corefile.c (_initialize_core): Add declaration.
+	* corelow.c (_initialize_corelow): Add declaration.
+	* cp-abi.c (_initialize_cp_abi): Add declaration.
+	* cp-namespace.c (_initialize_cp_namespace): Add declaration.
+	* cp-support.c (_initialize_cp_support): Add declaration.
+	* cp-valprint.c (_initialize_cp_valprint): Add declaration.
+	* cris-linux-tdep.c (_initialize_cris_linux_tdep): Add declaration.
+	* cris-tdep.c (_initialize_cris_tdep): Add declaration.
+	* csky-linux-tdep.c (_initialize_csky_linux_tdep): Add declaration.
+	* csky-tdep.c (_initialize_csky_tdep): Add declaration.
+	* ctfread.c (_initialize_ctfread): Add declaration.
+	* d-lang.c (_initialize_d_language): Add declaration.
+	* darwin-nat-info.c (_initialize_darwin_info_commands): Add declaration.
+	* darwin-nat.c (_initialize_darwin_nat): Add declaration.
+	* dbxread.c (_initialize_dbxread): Add declaration.
+	* dcache.c (_initialize_dcache): Add declaration.
+	* disasm-selftests.c (_initialize_disasm_selftests): Add declaration.
+	* disasm.c (_initialize_disasm): Add declaration.
+	* dtrace-probe.c (_initialize_dtrace_probe): Add declaration.
+	* dummy-frame.c (_initialize_dummy_frame): Add declaration.
+	* dwarf-index-cache.c (_initialize_index_cache): Add declaration.
+	* dwarf-index-write.c (_initialize_dwarf_index_write): Add declaration.
+	* dwarf2-frame-tailcall.c (_initialize_tailcall_frame): Add declaration.
+	* dwarf2-frame.c (_initialize_dwarf2_frame): Add declaration.
+	* dwarf2expr.c (_initialize_dwarf2expr): Add declaration.
+	* dwarf2loc.c (_initialize_dwarf2loc): Add declaration.
+	* dwarf2read.c (_initialize_dwarf2_read): Add declaration.
+	* elfread.c (_initialize_elfread): Add declaration.
+	* exec.c (_initialize_exec): Add declaration.
+	* extension.c (_initialize_extension): Add declaration.
+	* f-lang.c (_initialize_f_language): Add declaration.
+	* f-valprint.c (_initialize_f_valprint): Add declaration.
+	* fbsd-nat.c (_initialize_fbsd_nat): Add declaration.
+	* fbsd-tdep.c (_initialize_fbsd_tdep): Add declaration.
+	* filesystem.c (_initialize_filesystem): Add declaration.
+	* findcmd.c (_initialize_mem_search): Add declaration.
+	* findvar.c (_initialize_findvar): Add declaration.
+	* fork-child.c (_initialize_fork_child): Add declaration.
+	* frame-base.c (_initialize_frame_base): Add declaration.
+	* frame-unwind.c (_initialize_frame_unwind): Add declaration.
+	* frame.c (_initialize_frame): Add declaration.
+	* frv-linux-tdep.c (_initialize_frv_linux_tdep): Add declaration.
+	* frv-tdep.c (_initialize_frv_tdep): Add declaration.
+	* ft32-tdep.c (_initialize_ft32_tdep): Add declaration.
+	* gcore.c (_initialize_gcore): Add declaration.
+	* gdb-demangle.c (_initialize_gdb_demangle): Add declaration.
+	* gdb_bfd.c (_initialize_gdb_bfd): Add declaration.
+	* gdbarch-selftests.c (_initialize_gdbarch_selftests): Add declaration.
+	* gdbarch.c (_initialize_gdbarch): Add declaration.
+	* gdbtypes.c (_initialize_gdbtypes): Add declaration.
+	* gnu-nat.c (_initialize_gnu_nat): Add declaration.
+	* gnu-v2-abi.c (_initialize_gnu_v2_abi): Add declaration.
+	* gnu-v3-abi.c (_initialize_gnu_v3_abi): Add declaration.
+	* go-lang.c (_initialize_go_language): Add declaration.
+	* go32-nat.c (_initialize_go32_nat): Add declaration.
+	* guile/guile.c (_initialize_guile): Add declaration.
+	* h8300-tdep.c (_initialize_h8300_tdep): Add declaration.
+	* hppa-linux-nat.c (_initialize_hppa_linux_nat): Add declaration.
+	* hppa-linux-tdep.c (_initialize_hppa_linux_tdep): Add declaration.
+	* hppa-nbsd-nat.c (_initialize_hppanbsd_nat): Add declaration.
+	* hppa-nbsd-tdep.c (_initialize_hppanbsd_tdep): Add declaration.
+	* hppa-obsd-nat.c (_initialize_hppaobsd_nat): Add declaration.
+	* hppa-obsd-tdep.c (_initialize_hppabsd_tdep): Add declaration.
+	* hppa-tdep.c (_initialize_hppa_tdep): Add declaration.
+	* i386-bsd-nat.c (_initialize_i386bsd_nat): Add declaration.
+	* i386-cygwin-tdep.c (_initialize_i386_cygwin_tdep): Add declaration.
+	* i386-darwin-nat.c (_initialize_i386_darwin_nat): Add declaration.
+	* i386-darwin-tdep.c (_initialize_i386_darwin_tdep): Add declaration.
+	* i386-dicos-tdep.c (_initialize_i386_dicos_tdep): Add declaration.
+	* i386-fbsd-nat.c (_initialize_i386fbsd_nat): Add declaration.
+	* i386-fbsd-tdep.c (_initialize_i386fbsd_tdep): Add declaration.
+	* i386-gnu-nat.c (_initialize_i386gnu_nat): Add declaration.
+	* i386-gnu-tdep.c (_initialize_i386gnu_tdep): Add declaration.
+	* i386-go32-tdep.c (_initialize_i386_go32_tdep): Add declaration.
+	* i386-linux-nat.c (_initialize_i386_linux_nat): Add declaration.
+	* i386-linux-tdep.c (_initialize_i386_linux_tdep): Add declaration.
+	* i386-nbsd-nat.c (_initialize_i386nbsd_nat): Add declaration.
+	* i386-nbsd-tdep.c (_initialize_i386nbsd_tdep): Add declaration.
+	* i386-nto-tdep.c (_initialize_i386nto_tdep): Add declaration.
+	* i386-obsd-nat.c (_initialize_i386obsd_nat): Add declaration.
+	* i386-obsd-tdep.c (_initialize_i386obsd_tdep): Add declaration.
+	* i386-sol2-nat.c (_initialize_amd64_sol2_nat): Add declaration.
+	* i386-sol2-tdep.c (_initialize_i386_sol2_tdep): Add declaration.
+	* i386-tdep.c (_initialize_i386_tdep): Add declaration.
+	* i386-windows-nat.c (_initialize_i386_windows_nat): Add declaration.
+	* ia64-libunwind-tdep.c (_initialize_libunwind_frame): Add declaration.
+	* ia64-linux-nat.c (_initialize_ia64_linux_nat): Add declaration.
+	* ia64-linux-tdep.c (_initialize_ia64_linux_tdep): Add declaration.
+	* ia64-tdep.c (_initialize_ia64_tdep): Add declaration.
+	* ia64-vms-tdep.c (_initialize_ia64_vms_tdep): Add declaration.
+	* infcall.c (_initialize_infcall): Add declaration.
+	* infcmd.c (_initialize_infcmd): Add declaration.
+	* inflow.c (_initialize_inflow): Add declaration.
+	* infrun.c (_initialize_infrun): Add declaration.
+	* interps.c (_initialize_interpreter): Add declaration.
+	* iq2000-tdep.c (_initialize_iq2000_tdep): Add declaration.
+	* jit.c (_initialize_jit): Add declaration.
+	* language.c (_initialize_language): Add declaration.
+	* linux-fork.c (_initialize_linux_fork): Add declaration.
+	* linux-nat.c (_initialize_linux_nat): Add declaration.
+	* linux-tdep.c (_initialize_linux_tdep): Add declaration.
+	* linux-thread-db.c (_initialize_thread_db): Add declaration.
+	* lm32-tdep.c (_initialize_lm32_tdep): Add declaration.
+	* m2-lang.c (_initialize_m2_language): Add declaration.
+	* m32c-tdep.c (_initialize_m32c_tdep): Add declaration.
+	* m32r-linux-nat.c (_initialize_m32r_linux_nat): Add declaration.
+	* m32r-linux-tdep.c (_initialize_m32r_linux_tdep): Add declaration.
+	* m32r-tdep.c (_initialize_m32r_tdep): Add declaration.
+	* m68hc11-tdep.c (_initialize_m68hc11_tdep): Add declaration.
+	* m68k-bsd-nat.c (_initialize_m68kbsd_nat): Add declaration.
+	* m68k-bsd-tdep.c (_initialize_m68kbsd_tdep): Add declaration.
+	* m68k-linux-nat.c (_initialize_m68k_linux_nat): Add declaration.
+	* m68k-linux-tdep.c (_initialize_m68k_linux_tdep): Add declaration.
+	* m68k-tdep.c (_initialize_m68k_tdep): Add declaration.
+	* machoread.c (_initialize_machoread): Add declaration.
+	* macrocmd.c (_initialize_macrocmd): Add declaration.
+	* macroscope.c (_initialize_macroscope): Add declaration.
+	* maint-test-options.c (_initialize_maint_test_options): Add declaration.
+	* maint-test-settings.c (_initialize_maint_test_settings): Add declaration.
+	* maint.c (_initialize_maint_cmds): Add declaration.
+	* mdebugread.c (_initialize_mdebugread): Add declaration.
+	* memattr.c (_initialize_mem): Add declaration.
+	* mep-tdep.c (_initialize_mep_tdep): Add declaration.
+	* mi/mi-cmd-env.c (_initialize_mi_cmd_env): Add declaration.
+	* mi/mi-cmds.c (_initialize_mi_cmds): Add declaration.
+	* mi/mi-interp.c (_initialize_mi_interp): Add declaration.
+	* mi/mi-main.c (_initialize_mi_main): Add declaration.
+	* microblaze-linux-tdep.c (_initialize_microblaze_linux_tdep): Add declaration.
+	* microblaze-tdep.c (_initialize_microblaze_tdep): Add declaration.
+	* mips-fbsd-nat.c (_initialize_mips_fbsd_nat): Add declaration.
+	* mips-fbsd-tdep.c (_initialize_mips_fbsd_tdep): Add declaration.
+	* mips-linux-nat.c (_initialize_mips_linux_nat): Add declaration.
+	* mips-linux-tdep.c (_initialize_mips_linux_tdep): Add declaration.
+	* mips-nbsd-nat.c (_initialize_mipsnbsd_nat): Add declaration.
+	* mips-nbsd-tdep.c (_initialize_mipsnbsd_tdep): Add declaration.
+	* mips-sde-tdep.c (_initialize_mips_sde_tdep): Add declaration.
+	* mips-tdep.c (_initialize_mips_tdep): Add declaration.
+	* mips64-obsd-nat.c (_initialize_mips64obsd_nat): Add declaration.
+	* mips64-obsd-tdep.c (_initialize_mips64obsd_tdep): Add declaration.
+	* mipsread.c (_initialize_mipsread): Add declaration.
+	* mn10300-linux-tdep.c (_initialize_mn10300_linux_tdep): Add declaration.
+	* mn10300-tdep.c (_initialize_mn10300_tdep): Add declaration.
+	* moxie-tdep.c (_initialize_moxie_tdep): Add declaration.
+	* msp430-tdep.c (_initialize_msp430_tdep): Add declaration.
+	* nds32-tdep.c (_initialize_nds32_tdep): Add declaration.
+	* nios2-linux-tdep.c (_initialize_nios2_linux_tdep): Add declaration.
+	* nios2-tdep.c (_initialize_nios2_tdep): Add declaration.
+	* nto-procfs.c (_initialize_procfs): Add declaration.
+	* objc-lang.c (_initialize_objc_language): Add declaration.
+	* observable.c (_initialize_observer): Add declaration.
+	* opencl-lang.c (_initialize_opencl_language): Add declaration.
+	* or1k-linux-tdep.c (_initialize_or1k_linux_tdep): Add declaration.
+	* or1k-tdep.c (_initialize_or1k_tdep): Add declaration.
+	* osabi.c (_initialize_gdb_osabi): Add declaration.
+	* osdata.c (_initialize_osdata): Add declaration.
+	* p-valprint.c (_initialize_pascal_valprint): Add declaration.
+	* parse.c (_initialize_parse): Add declaration.
+	* ppc-fbsd-nat.c (_initialize_ppcfbsd_nat): Add declaration.
+	* ppc-fbsd-tdep.c (_initialize_ppcfbsd_tdep): Add declaration.
+	* ppc-linux-nat.c (_initialize_ppc_linux_nat): Add declaration.
+	* ppc-linux-tdep.c (_initialize_ppc_linux_tdep): Add declaration.
+	* ppc-nbsd-nat.c (_initialize_ppcnbsd_nat): Add declaration.
+	* ppc-nbsd-tdep.c (_initialize_ppcnbsd_tdep): Add declaration.
+	* ppc-obsd-nat.c (_initialize_ppcobsd_nat): Add declaration.
+	* ppc-obsd-tdep.c (_initialize_ppcobsd_tdep): Add declaration.
+	* printcmd.c (_initialize_printcmd): Add declaration.
+	* probe.c (_initialize_probe): Add declaration.
+	* proc-api.c (_initialize_proc_api): Add declaration.
+	* proc-events.c (_initialize_proc_events): Add declaration.
+	* proc-service.c (_initialize_proc_service): Add declaration.
+	* procfs.c (_initialize_procfs): Add declaration.
+	* producer.c (_initialize_producer): Add declaration.
+	* psymtab.c (_initialize_psymtab): Add declaration.
+	* python/python.c (_initialize_python): Add declaration.
+	* ravenscar-thread.c (_initialize_ravenscar): Add declaration.
+	* record-btrace.c (_initialize_record_btrace): Add declaration.
+	* record-full.c (_initialize_record_full): Add declaration.
+	* record.c (_initialize_record): Add declaration.
+	* regcache-dump.c (_initialize_regcache_dump): Add declaration.
+	* regcache.c (_initialize_regcache): Add declaration.
+	* reggroups.c (_initialize_reggroup): Add declaration.
+	* remote-notif.c (_initialize_notif): Add declaration.
+	* remote-sim.c (_initialize_remote_sim): Add declaration.
+	* remote.c (_initialize_remote): Add declaration.
+	* reverse.c (_initialize_reverse): Add declaration.
+	* riscv-fbsd-nat.c (_initialize_riscv_fbsd_nat): Add declaration.
+	* riscv-fbsd-tdep.c (_initialize_riscv_fbsd_tdep): Add declaration.
+	* riscv-linux-nat.c (_initialize_riscv_linux_nat): Add declaration.
+	* riscv-linux-tdep.c (_initialize_riscv_linux_tdep): Add declaration.
+	* riscv-tdep.c (_initialize_riscv_tdep): Add declaration.
+	* rl78-tdep.c (_initialize_rl78_tdep): Add declaration.
+	* rs6000-aix-tdep.c (_initialize_rs6000_aix_tdep): Add declaration.
+	* rs6000-lynx178-tdep.c (_initialize_rs6000_lynx178_tdep):
+	Add declaration.
+	* rs6000-nat.c (_initialize_rs6000_nat): Add declaration.
+	* rs6000-tdep.c (_initialize_rs6000_tdep): Add declaration.
+	* run-on-main-thread.c (_initialize_run_on_main_thread): Add declaration.
+	* rust-exp.y (_initialize_rust_exp): Add declaration.
+	* rx-tdep.c (_initialize_rx_tdep): Add declaration.
+	* s12z-tdep.c (_initialize_s12z_tdep): Add declaration.
+	* s390-linux-nat.c (_initialize_s390_nat): Add declaration.
+	* s390-linux-tdep.c (_initialize_s390_linux_tdep): Add declaration.
+	* s390-tdep.c (_initialize_s390_tdep): Add declaration.
+	* score-tdep.c (_initialize_score_tdep): Add declaration.
+	* ser-go32.c (_initialize_ser_dos): Add declaration.
+	* ser-mingw.c (_initialize_ser_windows): Add declaration.
+	* ser-pipe.c (_initialize_ser_pipe): Add declaration.
+	* ser-tcp.c (_initialize_ser_tcp): Add declaration.
+	* ser-uds.c (_initialize_ser_socket): Add declaration.
+	* ser-unix.c (_initialize_ser_hardwire): Add declaration.
+	* serial.c (_initialize_serial): Add declaration.
+	* sh-linux-tdep.c (_initialize_sh_linux_tdep): Add declaration.
+	* sh-nbsd-nat.c (_initialize_shnbsd_nat): Add declaration.
+	* sh-nbsd-tdep.c (_initialize_shnbsd_tdep): Add declaration.
+	* sh-tdep.c (_initialize_sh_tdep): Add declaration.
+	* skip.c (_initialize_step_skip): Add declaration.
+	* sol-thread.c (_initialize_sol_thread): Add declaration.
+	* solib-aix.c (_initialize_solib_aix): Add declaration.
+	* solib-darwin.c (_initialize_darwin_solib): Add declaration.
+	* solib-dsbt.c (_initialize_dsbt_solib): Add declaration.
+	* solib-frv.c (_initialize_frv_solib): Add declaration.
+	* solib-svr4.c (_initialize_svr4_solib): Add declaration.
+	* solib-target.c (_initialize_solib_target): Add declaration.
+	* solib.c (_initialize_solib): Add declaration.
+	* source-cache.c (_initialize_source_cache): Add declaration.
+	* source.c (_initialize_source): Add declaration.
+	* sparc-linux-nat.c (_initialize_sparc_linux_nat): Add declaration.
+	* sparc-linux-tdep.c (_initialize_sparc_linux_tdep): Add declaration.
+	* sparc-nat.c (_initialize_sparc_nat): Add declaration.
+	* sparc-nbsd-nat.c (_initialize_sparcnbsd_nat): Add declaration.
+	* sparc-nbsd-tdep.c (_initialize_sparcnbsd_tdep): Add declaration.
+	* sparc-obsd-tdep.c (_initialize_sparc32obsd_tdep): Add declaration.
+	* sparc-sol2-tdep.c (_initialize_sparc_sol2_tdep): Add declaration.
+	* sparc-tdep.c (_initialize_sparc_tdep): Add declaration.
+	* sparc64-fbsd-nat.c (_initialize_sparc64fbsd_nat): Add declaration.
+	* sparc64-fbsd-tdep.c (_initialize_sparc64fbsd_tdep): Add declaration.
+	* sparc64-linux-nat.c (_initialize_sparc64_linux_nat): Add declaration.
+	* sparc64-linux-tdep.c (_initialize_sparc64_linux_tdep): Add declaration.
+	* sparc64-nat.c (_initialize_sparc64_nat): Add declaration.
+	* sparc64-nbsd-nat.c (_initialize_sparc64nbsd_nat): Add declaration.
+	* sparc64-nbsd-tdep.c (_initialize_sparc64nbsd_tdep): Add declaration.
+	* sparc64-obsd-nat.c (_initialize_sparc64obsd_nat): Add declaration.
+	* sparc64-obsd-tdep.c (_initialize_sparc64obsd_tdep): Add declaration.
+	* sparc64-sol2-tdep.c (_initialize_sparc64_sol2_tdep): Add declaration.
+	* sparc64-tdep.c (_initialize_sparc64_adi_tdep): Add declaration.
+	* stabsread.c (_initialize_stabsread): Add declaration.
+	* stack.c (_initialize_stack): Add declaration.
+	* stap-probe.c (_initialize_stap_probe): Add declaration.
+	* std-regs.c (_initialize_frame_reg): Add declaration.
+	* symfile-debug.c (_initialize_symfile_debug): Add declaration.
+	* symfile-mem.c (_initialize_symfile_mem): Add declaration.
+	* symfile.c (_initialize_symfile): Add declaration.
+	* symmisc.c (_initialize_symmisc): Add declaration.
+	* symtab.c (_initialize_symtab): Add declaration.
+	* target.c (_initialize_target): Add declaration.
+	* target-connection.c (_initialize_target_connection): Add
+	declaration.
+	* target-dcache.c (_initialize_target_dcache): Add declaration.
+	* target-descriptions.c (_initialize_target_descriptions): Add declaration.
+	* thread.c (_initialize_thread): Add declaration.
+	* tic6x-linux-tdep.c (_initialize_tic6x_linux_tdep): Add declaration.
+	* tic6x-tdep.c (_initialize_tic6x_tdep): Add declaration.
+	* tilegx-linux-nat.c (_initialize_tile_linux_nat): Add declaration.
+	* tilegx-linux-tdep.c (_initialize_tilegx_linux_tdep): Add declaration.
+	* tilegx-tdep.c (_initialize_tilegx_tdep): Add declaration.
+	* tracectf.c (_initialize_ctf): Add declaration.
+	* tracefile-tfile.c (_initialize_tracefile_tfile): Add declaration.
+	* tracefile.c (_initialize_tracefile): Add declaration.
+	* tracepoint.c (_initialize_tracepoint): Add declaration.
+	* tui/tui-hooks.c (_initialize_tui_hooks): Add declaration.
+	* tui/tui-interp.c (_initialize_tui_interp): Add declaration.
+	* tui/tui-layout.c (_initialize_tui_layout): Add declaration.
+	* tui/tui-regs.c (_initialize_tui_regs): Add declaration.
+	* tui/tui-stack.c (_initialize_tui_stack): Add declaration.
+	* tui/tui-win.c (_initialize_tui_win): Add declaration.
+	* tui/tui.c (_initialize_tui): Add declaration.
+	* typeprint.c (_initialize_typeprint): Add declaration.
+	* ui-style.c (_initialize_ui_style): Add declaration.
+	* unittests/array-view-selftests.c (_initialize_array_view_selftests): Add declaration.
+	* unittests/child-path-selftests.c (_initialize_child_path_selftests): Add declaration.
+	* unittests/cli-utils-selftests.c (_initialize_cli_utils_selftests): Add declaration.
+	* unittests/common-utils-selftests.c (_initialize_common_utils_selftests): Add declaration.
+	* unittests/copy_bitwise-selftests.c (_initialize_copy_bitwise_utils_selftests): Add declaration.
+	* unittests/environ-selftests.c (_initialize_environ_selftests): Add declaration.
+	* unittests/filtered_iterator-selftests.c
+	(_initialize_filtered_iterator_selftests): Add declaration.
+	* unittests/format_pieces-selftests.c (_initialize_format_pieces_selftests): Add declaration.
+	* unittests/function-view-selftests.c (_initialize_function_view_selftests): Add declaration.
+	* unittests/help-doc-selftests.c (_initialize_help_doc_selftests): Add declaration.
+	* unittests/lookup_name_info-selftests.c (_initialize_lookup_name_info_selftests): Add declaration.
+	* unittests/main-thread-selftests.c
+	(_initialize_main_thread_selftests): Add declaration.
+	* unittests/memory-map-selftests.c (_initialize_memory_map_selftests): Add declaration.
+	* unittests/memrange-selftests.c (_initialize_memrange_selftests): Add declaration.
+	* unittests/mkdir-recursive-selftests.c (_initialize_mkdir_recursive_selftests): Add declaration.
+	* unittests/observable-selftests.c (_initialize_observer_selftest): Add declaration.
+	* unittests/offset-type-selftests.c (_initialize_offset_type_selftests): Add declaration.
+	* unittests/optional-selftests.c (_initialize_optional_selftests): Add declaration.
+	* unittests/parse-connection-spec-selftests.c (_initialize_parse_connection_spec_selftests): Add declaration.
+	* unittests/rsp-low-selftests.c (_initialize_rsp_low_selftests): Add declaration.
+	* unittests/scoped_fd-selftests.c (_initialize_scoped_fd_selftests): Add declaration.
+	* unittests/scoped_mmap-selftests.c (_initialize_scoped_mmap_selftests): Add declaration.
+	* unittests/scoped_restore-selftests.c (_initialize_scoped_restore_selftests): Add declaration.
+	* unittests/string_view-selftests.c (_initialize_string_view_selftests): Add declaration.
+	* unittests/style-selftests.c (_initialize_style_selftest): Add declaration.
+	* unittests/tracepoint-selftests.c (_initialize_tracepoint_selftests): Add declaration.
+	* unittests/tui-selftests.c (_initialize_tui_selftest): Add
+	declaration.
+	* unittests/unpack-selftests.c (_initialize_unpack_selftests): Add declaration.
+	* unittests/utils-selftests.c (_initialize_utils_selftests): Add declaration.
+	* unittests/vec-utils-selftests.c (_initialize_vec_utils_selftests): Add declaration.
+	* unittests/xml-utils-selftests.c (_initialize_xml_utils): Add declaration.
+	* user-regs.c (_initialize_user_regs): Add declaration.
+	* utils.c (_initialize_utils): Add declaration.
+	* v850-tdep.c (_initialize_v850_tdep): Add declaration.
+	* valops.c (_initialize_valops): Add declaration.
+	* valprint.c (_initialize_valprint): Add declaration.
+	* value.c (_initialize_values): Add declaration.
+	* varobj.c (_initialize_varobj): Add declaration.
+	* vax-bsd-nat.c (_initialize_vaxbsd_nat): Add declaration.
+	* vax-nbsd-tdep.c (_initialize_vaxnbsd_tdep): Add declaration.
+	* vax-tdep.c (_initialize_vax_tdep): Add declaration.
+	* windows-nat.c (_initialize_windows_nat): Add declaration.
+	(_initialize_check_for_gdb_ini): Add declaration.
+	(_initialize_loadable): Add declaration.
+	* windows-tdep.c (_initialize_windows_tdep): Add declaration.
+	* x86-bsd-nat.c (_initialize_x86_bsd_nat): Add declaration.
+	* x86-linux-nat.c (_initialize_x86_linux_nat): Add declaration.
+	* xcoffread.c (_initialize_xcoffread): Add declaration.
+	* xml-support.c (_initialize_xml_support): Add declaration.
+	* xstormy16-tdep.c (_initialize_xstormy16_tdep): Add declaration.
+	* xtensa-linux-nat.c (_initialize_xtensa_linux_nat): Add declaration.
+	* xtensa-linux-tdep.c (_initialize_xtensa_linux_tdep): Add declaration.
+	* xtensa-tdep.c (_initialize_xtensa_tdep): Add declaration.
+
+2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regformats/regdat.sh: Generate declaration for init function.
+
+2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* remote-sim.c (next_pid, INITIAL_PID, sim_inferior_data): Move
+	up.
+	(gdbsim_target) <get_inferior_data_by_ptid, resume_one_inferior,
+	close_one_inferior>: New methods.
+	(get_sim_inferior_data_by_ptid): Move to gdbsim_target,
+	pass down target to find_inferior_pid.
+	(gdbsim_target::fetch_registers, gdbsim_target::store_registers):
+	Pass down target to find_inferior_ptid.
+	(gdbsim_target::create_inferior): Pass down target to
+	add_thread_silent.
+	(gdbsim_close_inferior): Move to gdbsim_close_inferior, pass
+	target down to find_inferior_ptid and switch_to_thread.
+	(gdbsim_target::close): Update to call close_one_inferior.
+	(struct resume_data): Remove.
+	(gdbsim_resume_inferior): Move to gdbsim_target.  Take arguments
+	directly, rather than through a void pointer.
+	(gdbsim_target::resume): Update to call resume_one_inferior.
+
+2020-01-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbsupport/gdb_wait.c: Include gdb_wait.h.
+
+2020-01-12  Pedro Alves  <palves@redhat.com>
+
+	* bsd-kvm.c (bsd_kvm_target::close): Call exit_inferior_silent
+	directly for the current inferior instead of
+	discard_all_inferiors.
+	(discard_all_inferiors): Delete.
+
+2020-01-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (box_win): Check cli_styling.
+	* tui/tui-winsource.c (tui_source_window_base::refill): Use
+	deprecated_safe_get_selected_frame.
+
+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* inferior.c (print_inferior): Switch inferior before printing it.
+
+2020-01-10  Aleksandar Paunovic  <aleksandar.paunovic@intel.com>
 	    Pedro Alves  <palves@redhat.com>
 
-	* utils.c (set_screen_size): Reduce "infinite" rows and columns
-	before calling rl_set_screen_size.
-
-2019-02-27  Tom Tromey  <tromey@adacore.com>
-
-	* configure.ac (HAVE_LIBPYTHON2_4, HAVE_LIBPYTHON2_5): Never
-	define.
-	* python/py-value.c: Remove Python 2.4 workaround.
-	* python/py-utils.c (gdb_pymodule_addobject): Remove Python 2.4
-	workaround.
-	* python/py-type.c (convert_field, gdbpy_initialize_types): Remove
-	Python 2.4 workaround.
-	* python/python-internal.h: Remove Python 2.4 comment.
-	(Py_ssize_t): Don't define.
-	(PyVarObject_HEAD_INIT, Py_TYPE): Don't define.
-	(gdb_Py_DECREF): Remove Python 2.4 workaround.
-	(gdb_PyObject_GetAttrString, PyObject_GetAttrString): Remove.
-	(gdb_PyObject_HasAttrString, PyObject_HasAttrString): Remove.
-	* python/python.c (do_start_initialization): Remove Python 2.4
-	workaround.
-	* python/py-prettyprint.c (class dummy_python_frame): Remove.
-	(print_children): Remove Python 2.4 workaround.
-	* python/py-inferior.c (buffer_procs): Remove Python 2.4
-	workaround.
-	(CHARBUFFERPROC_NAME): Remove.
-	* python/py-breakpoint.c (gdbpy_initialize_breakpoints): Remove
-	Python 2.4 workaround.
-
-2019-02-27  Kevin Buettner  <kevinb@redhat.com>
-
-	* NEWS: Note minimum Python version.
-
-2019-02-27  Kevin Buettner  <kevinb@redhat.com>
-
-	* python/py-inferior.c (infpy_write_memory): Remove non-IS_PY3K
-	code from these functions.  Remove corresponding ifdefs.  Use
-	Py_buffer_up instead of explicit calls to PyBuffer_Release.
-	Remove gotos and target of gotos.
-	(infpy_search_memory): Likewise.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/hppa-tdep.c (hppa_dummy_id): Delete.
-	(hppa_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/h8300-tdep.c (h8300_unwind_pc): Delete.
-	(h8300_unwind_sp): Delete.
-	(h8300_dummy_id): Delete.
-	(h8300_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/ft32-tdep.c (ft32_dummy_id): Delete.
-	(ft32_unwind_pc): Delete.
-	(ft32_unwind_sp): Delete.
-	(ft32_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/frv-tdep.c (frv_dummy_id): Delete.
-	(frv_unwind_pc): Delete.
-	(frv_unwind_sp): Delete.
-	(frv_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/riscv-tdep.c (riscv_dummy_id): Delete.
-	(riscv_unwind_pc): Delete.
-	(riscv_unwind_sp): Delete.
-	(riscv_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/csky-tdep.c (csky_dummy_id): Delete.
-	(csky_unwind_pc): Delete.
-	(csky_unwind_sp): Delete.
-	(csky_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/cris-tdep.c (cris_dummy_id): Delete.
-	(cris_unwind_pc): Delete.
-	(cris_unwind_sp): Delete.
-	(cris_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/bfin-tdep.c (bfin_dummy_id): Delete.
-	(bfin_unwind_pc): Delete.
-	(bfin_gdbarch_init): Don't register deleted functions with gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/arm-tdep.c (arm_dummy_id): Delete.
-	(arm_unwind_pc): Delete.
-	(arm_unwind_sp): Delete.
-	(arm_gdbarch_init): Don't register deleted functions with gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/arc-tdep.c (arc_dummy_id): Delete.
-	(arc_unwind_pc): Delete.
-	(arc_unwind_sp): Delete.
-	(arc_gdbarch_init): Don't register deleted functions with gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/alpha-tdep.c (alpha_dummy_id): Delete.
-	(alpha_unwind_pc): Delete.
-	(alpha_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/aarch64-tdep.c (aarch64_dummy_id): Delete.
-	(aarch64_unwind_pc): Delete.
-	(aarch64_unwind_sp): Delete.
-	(aarch64_gdbarch_init): Don't register deleted functions with
-	gdbarch.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdbtypes.c (type_align): Don't consider static members when
-	computing structure alignment.
-
-2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* arc-tdep.c (arc_type_align): Provide alignment for basic types,
-	return 0 for other types.
-	* arch-utils.c (default_type_align): Always return 0.
-	* gdbarch.h: Regenerate.
-	* gdbarch.sh (type_align): Extend comment.
-	* gdbtypes.c (type_align): Add additional comments, always call
-	gdbarch_type_align before applying the default rules.
-	* i386-tdep.c (i386_type_align): Return 0 as the default rule,
-	generic code will then apply a suitable default.
-	* nios2-tdep.c (nios2_type_align): Provide alignment for basic
-	types, return 0 for other types.
-
-2019-02-27  Joel Brobecker  <brobecker@adacore.com>
-
-	* NEWS: Create a new section for the next release branch.
-	Rename the section of the current branch, now that it has
-	been cut.
-
-2019-02-27  Joel Brobecker  <brobecker@adacore.com>
-
-	GDB 8.3 branch created (143420fb0d5ae54323ba9953f0818c194635228d):
-	* version.in: Bump version to 8.3.50.DATE-git.
-
-2019-02-26  Simon Marchi  <simon.marchi@efficios.com>
-
-	* aix-thread.c (ptid_cmp): Remove unused variable.
-	(get_signaled_thread): Likewise.
-	(store_regs_user_thread): Likewise.
-	(store_regs_kernel_thread): Likewise.
-	(fetch_regs_kernel_thread): Remove shadowed variable.
-
-2019-02-26  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* features/riscv/32bit-cpu.xml: Add register numbers.
-	* features/riscv/32bit-fpu.c: Regenerate.
-	* features/riscv/32bit-fpu.xml: Add register numbers.
-	* features/riscv/64bit-cpu.xml: Add register numbers.
-	* features/riscv/64bit-fpu.c: Regenerate.
-	* features/riscv/64bit-fpu.xml: Add register numbers.
-
-2019-02-26  Kevin Buettner  <kevinb@redhat.com>
-
-	* NEWS: Mention two argument form of gdb.Value constructor.
-	* python/py-value.c (convert_buffer_and_type_to_value): New
-	function.
-	(valpy_new): Parse arguments via gdb_PyArg_ParseTupleAndKeywords.
-	Add support for handling an optional second argument.  Call
-	convert_buffer_and_type_to_value as appropriate.
-	* python/python-internal.h (Py_buffer_deleter): New struct.
-	(Py_buffer_up): New typedef.
-
-2019-02-25  John Baldwin  <jhb@FreeBSD.org>
-
-	* dwarf2read.c (dwarf2_get_dwz_file): Reset dwz_bfd to nullptr
-	instead of releasing ownership.
-
-2019-02-25  Jordan Rupprecht  <rupprecht@google.com>
-
-	* dwarf2read.c (open_and_init_dwp_file): Call
-	elf_numsections instead of bfd_count_sections to initialize
-	dwp_file->num_sections.
-
-2019-02-25  Tom Tromey  <tromey@adacore.com>
-
-	* solib-darwin.c (darwin_get_dyld_bfd): Don't release dyld_bfd.
-
-2019-02-23  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* gcore.in: Add '--readnever' option when invoking GDB.
-
-2019-02-22  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* MAINTAINERS: Update my email address.
-
-2019-02-22  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* build-id.c (build_id_to_debug_bfd_1): New function.
-	(build_id_to_debug_bfd): Look for separate debug file in
-	sysroot.
-
-2019-02-22  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdbarch.sh: Update the copyright year range that is placed into
-	generated files.
-
-2019-02-22  Keith Seitz  <keiths@redhat.com>
-
-	PR symtab/23853
-	* linespec.c (create_sals_line_offset): Search for the default
-	symtab's filename instead of its fullname.
-
-2019-02-21  Alan Hayward  <alan.hayward@arm.com>
-
-	* NEWS: Update style defaults.
-
-2019-02-21  Alan Hayward  <alan.hayward@arm.com>
-
-	* main.c (captured_main_1): Disable styling in batch mode.
-
-2019-02-20  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (symtab_symbol_info): Fix typos.
-
-2019-02-20  Tom Tromey  <tromey@adacore.com>
-
-	* findcmd.c (_initialize_mem_search): Use upper case for
-	metasyntactic variables.
-
-2019-02-20  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c (aarch64_add_reggroups): New function.
-	(aarch64_gdbarch_init): Call aarch64_add_reggroups.
-
-2019-02-19  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* top.h (source_file_name): Change to std::string.
-	* top.c (source_file_name): Likewise.
-	(command_line_input): Adjust.
-	* cli/cli-script.c (script_from_file): Adjust.
-
-2019-02-19  Tom Tromey  <tromey@adacore.com>
-
-	* ravenscar-thread.c
-	(ravenscar_thread_target::update_thread_list): Don't call
-	ada_build_task_list.
-	* ada-lang.h (ada_build_task_list): Don't declare.
-	* ada-tasks.c (struct ada_tasks_inferior_data)
-	<task_list_valid_p>: Now bool.
-	(read_known_tasks, ada_task_list_changed)
-	(ada_tasks_invalidate_inferior_data): Update.
-	(read_known_tasks_array): Return bool.
-	(read_known_tasks_list): Likewise.
-	(read_known_tasks): Return void.
-	(ada_build_task_list): Now static.
-
-2019-02-18  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdbtypes.c (type_align): Allow alignment of TYPE_CODE_METHODPTR
-	and TYPE_CODE_MEMBERPTR to be overridden by the gdbarch.
-
-2019-02-18  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* ada-task.c (_initialize_tasks): Use 'with_cleanup' register
-	variant for ada_tasks_pspace_data_handle and
-	ada_tasks_inferior_data_handle.
-	(ada_tasks_pspace_data_cleanup): New function.
-	(ada_tasks_inferior_data_cleanup): New function.
-
-2019-02-17  Tom Tromey  <tom@tromey.com>
-
-	* macrotab.h (macro_source_fullname): Return a std::string.
-	* macrotab.c (macro_include, check_for_redefinition)
-	(macro_undef, macro_lookup_definition, foreach_macro)
-	(foreach_macro_in_scope): Update.
-	(macro_source_fullname): Return a std::string.
-	* macrocmd.c (show_pp_source_pos): Update.
-
-2019-02-17  Tom Tromey  <tom@tromey.com>
+	* progspace-and-thread.c (switch_to_program_space_and_thread):
+	Assert there's an inferior for PSPACE.  Use
+	switch_to_inferior_no_thread to switch the inferior too.
+	* progspace.c (program_space::~program_space): Call
+	clear_symtab_users here, with SYMFILE_DEFER_BP_RESET.
+	(program_space::free_all_objfiles): Don't call clear_symtab_users
+	here.
+	* symfile.c (symbol_file_clear): Call clear_symtab_users here.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* NEWS: Mention multi-target debugging, "info connections", and
+	"add-inferior -no-connection".
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* infrun.c: Include "target-connection.h".
+	(check_multi_target_resumption): New.
+	(proceed): Call it.
+	* target-connection.c (make_target_connection_string): Make
+	extern.
+	* target-connection.h (make_target_connection_string): Declare.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* Makefile.in (COMMON_SFILES): Add target-connection.c.
+	* inferior.c (uiout_field_connection): New function.
+	(print_inferior): Add new "connection-id" column.
+	(add_inferior_command): Show connection number/string of added
+	inferior.
+	* process-stratum-target.h
+	(process_stratum_target::connection_string): New virtual method.
+	(process_stratum_target::connection_number): New field.
+	* remote.c (remote_target::connection_string): New override.
+	* target-connection.c: New file.
+	* target-connection.h: New file.
+	* target.c (decref_target): Remove process_stratum targets from
+	the connection list.
+	(target_stack::push): Add process_stratum targets to the
+	connection list.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	Revert:
+	2016-04-12  Pedro Alves  <palves@redhat.com>
+	* serial.c (serial_open, serial_fdopen_ops, do_serial_close):
+	Remove references to name.
+	* serial.h (struct serial) <name>: Delete.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdbarch-selftests.c (register_to_value_test): Remove "target
+	already pushed" check.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+	    John Baldwin  <jhb@FreeBSD.org>
 
-	* macrocmd.c (show_pp_source_pos): Style the file names.
-
-2019-02-17  Tom Tromey  <tom@tromey.com>
-
-	PR tui/24197:
-	* tui/tui-source.c (tui_set_source_content_nil): Rewrite.
-
-2019-02-17  Tom Tromey  <tom@tromey.com>
-
-	* ada-lang.c (user_select_syms): Use filtered printing.
-	* utils.c (wrap_style): New global.
-	(desired_style): Remove.
-	(emit_style_escape): Add stream parameter.
-	(set_output_style, reset_terminal_style, prompt_for_continue):
-	Update.
-	(flush_wrap_buffer): Only flush gdb_stdout.
-	(wrap_here): Set wrap_style.
-	(fputs_maybe_filtered): Clear the wrap buffer on exception.  Don't
-	treat escape sequences as a character.  Change when wrap buffer is
-	flushed.
-	(fputs_styled): Do not set the output style when the default is
-	requested.
-	* ui-style.h (struct ui_file_style) <is_default>: New method.
-	* source.c (print_source_lines_base): Emit escape sequences in one
-	piece.
-
-2019-02-17  Joel Brobecker  <brobecker@adacore.com>
-
-	* gdbtypes.c (type_align): Handle TYPE_CODE_RANGE the same as
-	integers and enumeration types.
-
-2019-02-17  Joel Brobecker  <brobecker@adacore.com>
-
-	* ada-lang.c (standard_lookup): Use ada_lookup_encoded_symbol
-	instead of lookup_symbol_in_language
-	(do_exact_match): New function.
-	(ada_get_symbol_name_matcher): Return do_exact_match when
-	doing a verbatim match.
-
-2019-02-15  Tom Tromey  <tromey@adacore.com>
-
-	* ravenscar-thread.c (ravenscar_thread_target::resume)
-	(ravenscar_thread_target::wait): Special case wildcard requests.
-
-2019-02-15  Tom Tromey  <tromey@adacore.com>
-
-	* ravenscar-thread.c (base_ptid): Remove.
-	(struct ravenscar_thread_target) <close>: New method.
-	<m_base_ptid>: New member.
-	<update_inferior_ptid, active_task, task_is_currently_active,
-	runtime_initialized>: Declare methods.
-	<ravenscar_thread_target>: Add constructor.
-	(ravenscar_thread_target::task_is_currently_active)
-	(ravenscar_thread_target::update_inferior_ptid)
-	(ravenscar_runtime_initialized): Rename.  Now methods.
-	(ravenscar_thread_target::resume, ravenscar_thread_target::wait)
-	(ravenscar_thread_target::update_thread_list): Update.
-	(ravenscar_thread_target::active_task): Now method.
-	(ravenscar_thread_target::store_registers)
-	(ravenscar_thread_target::prepare_to_store)
-	(ravenscar_thread_target::prepare_to_store)
-	(ravenscar_thread_target::mourn_inferior): Update.
-	(ravenscar_inferior_created): Use "new" to create target.
-	(ravenscar_thread_target::get_ada_task_ptid): Update.
-	(_initialize_ravenscar): Don't initialize base_ptid.
-	(ravenscar_ops): Remove global.
-
-2019-02-15  Tom Tromey  <tromey@adacore.com>
-
-	* target.h (push_target): Declare new overload.
-	* target.c (push_target): New overload, taking an rvalue reference.
-	* remote.c (remote_target::open_1): Use push_target overload.
-	* corelow.c (core_target_open): Use push_target overload.
-
-2019-02-15  Tom Tromey  <tromey@adacore.com>
-
-	* ravenscar-thread.c (is_ravenscar_task)
-	(ravenscar_task_is_currently_active): Return bool.
-	(ravenscar_update_inferior_ptid, get_running_thread_msymbol)
-	(_initialize_ravenscar): Remove "(void)".
-	(has_ravenscar_runtime, ravenscar_runtime_initialized): Likewise.
-	Return bool.
-
-2019-02-15  Tom Tromey  <tromey@adacore.com>
-
-	* ravenscar-thread.c (ravenscar_runtime_initializer)
-	(has_ravenscar_runtime, get_running_thread_id)
-	(ravenscar_thread_target::resume): Fix indentation.
-
-2019-02-15  Tom Tromey  <tromey@adacore.com>
-
-	* sparc-ravenscar-thread.c (struct sparc_ravenscar_ops): Derive
-	from ravenscar_arch_ops.
-	(sparc_ravenscar_ops::fetch_registers)
-	(sparc_ravenscar_ops::store_registers): Now methods.
-	(sparc_ravenscar_prepare_to_store): Remove.
-	(sparc_ravenscar_ops): Redefine.
-	* ravenscar-thread.h (struct ravenscar_arch_ops): Add virtual
-	methods and destructor.  Remove members.
-	* ravenscar-thread.c (ravenscar_thread_target::fetch_registers)
-	(ravenscar_thread_target::store_registers)
-	(ravenscar_thread_target::prepare_to_store): Update.
-	* ppc-ravenscar-thread.c (ppc_ravenscar_generic_prepare_to_store):
-	Remove.
-	(struct ppc_ravenscar_powerpc_ops): Derive from
-	ravenscar_arch_ops.
-	(ppc_ravenscar_powerpc_ops::fetch_registers)
-	(ppc_ravenscar_powerpc_ops::store_registers): Now methods.
-	(ppc_ravenscar_powerpc_ops): Redefine.
-	(struct ppc_ravenscar_e500_ops): Derive from ravenscar_arch_ops.
-	(ppc_ravenscar_e500_ops::fetch_registers)
-	(ppc_ravenscar_e500_ops::store_registers): Now methods.
-	(ppc_ravenscar_e500_ops): Redefine.
-	* aarch64-ravenscar-thread.c
-	(aarch64_ravenscar_generic_prepare_to_store): Remove.
-	(struct aarch64_ravenscar_ops): Derive from ravenscar_arch_ops.
-	(aarch64_ravenscar_fetch_registers)
-	(aarch64_ravenscar_store_registers): Now methods.
-	(aarch64_ravenscar_ops): Redefine.
-
-2019-02-15  Tom Tromey  <tromey@adacore.com>
-
-	* ravenscar-thread.c (ravenscar_thread_target::stopped_by_sw_breakpoint)
-	(ravenscar_thread_target::stopped_by_hw_breakpoint)
-	(ravenscar_thread_target::stopped_by_watchpoint)
-	(ravenscar_thread_target::stopped_data_address)
-	(ravenscar_thread_target::core_of_thread): Use scoped_restore.
-
-2019-02-15  Tom Tromey  <tromey@adacore.com>
-
-	* ravenscar-thread.c: Fix some typos.
-
-2019-02-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-	    Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_exception_sal): Change addr_string to a
-	std::string.
-	(create_ada_exception_catchpoint): Update.
-
-2019-02-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-	    Tom Tromey  <tromey@adacore.com>
-
-	* breakpoint.c (~bp_location): Rename from bp_location_dtor.
-	(bp_location_ops): Remove.
-	(base_breakpoint_allocate_location): Update.
-	(free_bp_location): Update.
-	* ada-lang.c (class ada_catchpoint_location)
-	<ada_catchpoint_location>: Remove ops parameter.
-	(ada_catchpoint_location_dtor): Remove.
-	(ada_catchpoint_location_ops): Remove.
-	(allocate_location_exception): Update.
-	* breakpoint.h (struct bp_location_ops): Remove.
-	(class bp_location) <bp_location>: Remove bp_location_ops
+	* aarch64-linux-nat.c
+	(aarch64_linux_nat_target::thread_architecture): Adjust.
+	* ada-tasks.c (print_ada_task_info): Adjust find_thread_ptid call.
+	(task_command_1): Likewise.
+	* aix-thread.c (sync_threadlists, aix_thread_target::resume)
+	(aix_thread_target::wait, aix_thread_target::fetch_registers)
+	(aix_thread_target::store_registers)
+	(aix_thread_target::thread_alive): Adjust.
+	* amd64-fbsd-tdep.c: Include "inferior.h".
+	(amd64fbsd_get_thread_local_address): Pass down target.
+	* amd64-linux-nat.c (ps_get_thread_area): Use ps_prochandle
+	thread's gdbarch instead of target_gdbarch.
+	* break-catch-sig.c (signal_catchpoint_print_it): Adjust call to
+	get_last_target_status.
+	* break-catch-syscall.c (print_it_catch_syscall): Likewise.
+	* breakpoint.c (breakpoints_should_be_inserted_now): Consider all
+	inferiors.
+	(update_inserted_breakpoint_locations): Skip if inferiors with no
+	execution.
+	(update_global_location_list): When handling moribund locations,
+	find representative inferior for location's pspace, and use thread
+	count of its process_stratum target.
+	* bsd-kvm.c (bsd_kvm_target_open): Pass target down.
+	* bsd-uthread.c (bsd_uthread_target::wait): Use
+	as_process_stratum_target and adjust thread_change_ptid and
+	add_thread calls.
+	(bsd_uthread_target::update_thread_list): Use
+	as_process_stratum_target and adjust find_thread_ptid,
+	thread_change_ptid and add_thread calls.
+	* btrace.c (maint_btrace_packet_history_cmd): Adjust
+	find_thread_ptid call.
+	* corelow.c (add_to_thread_list): Adjust add_thread call.
+	(core_target_open): Adjust add_thread_silent and thread_count
+	calls.
+	(core_target::pid_to_str): Adjust find_inferior_ptid call.
+	* ctf.c (ctf_target_open): Adjust add_thread_silent call.
+	* event-top.c (async_disconnect): Pop targets from all inferiors.
+	* exec.c (add_target_sections): Push exec target on all inferiors
+	sharing the program space.
+	(remove_target_sections): Remove the exec target from all
+	inferiors sharing the program space.
+	(exec_on_vfork): New.
+	* exec.h (exec_on_vfork): Declare.
+	* fbsd-nat.c (fbsd_add_threads): Add fbsd_nat_target parameter.
+	Pass it down.
+	(fbsd_nat_target::update_thread_list): Adjust.
+	(fbsd_nat_target::resume): Adjust.
+	(fbsd_handle_debug_trap): Add fbsd_nat_target parameter.  Pass it
+	down.
+	(fbsd_nat_target::wait, fbsd_nat_target::post_attach): Adjust.
+	* fbsd-tdep.c (fbsd_corefile_thread): Adjust
+	get_thread_arch_regcache call.
+	* fork-child.c (gdb_startup_inferior): Pass target down to
+	startup_inferior and set_executing.
+	* gdbthread.h (struct process_stratum_target): Forward declare.
+	(add_thread, add_thread_silent, add_thread_with_info)
+	(in_thread_list): Add process_stratum_target parameter.
+	(find_thread_ptid(inferior*, ptid_t)): New overload.
+	(find_thread_ptid, thread_change_ptid): Add process_stratum_target
 	parameter.
-	<~bp_location>: Add destructor.
-	<ops>: Remove.
-
-2019-02-14  Thomas Schwinge  <thomas@codesourcery.com>
-	    Pedro Alves  <palves@redhat.com>
-
-	* remote.c (remote_target::remote_parse_stop_reply): Avoid using
-	'PATH_MAX'.
-
-2019-02-14  David Michael  <fedora.dm0@gmail.com>
-	    Samuel Thibault  <samuel.thibault@gnu.org>
-	    Thomas Schwinge  <thomas@codesourcery.com>
-
-	* gnu-nat.c (S_proc_getmsgport_reply, S_proc_task2proc_reply)
-	(S_proc_pid2proc_reply): Adjust to Hurd "proc" interface changes.
-
-2019-02-14  Thomas Schwinge  <thomas@codesourcery.com>
-
-	* gnu-nat.c (gnu_write_inferior, parse_int_arg, _parse_bool_arg)
-	(check_empty): Use "const char *".
-
-	* gnu-nat.c (gnu_nat_target::detach): Instead of
-	'detach_inferior (pid)' call
-	'detach_inferior (find_inferior_pid (pid))'.
-
-	* configure.nat [gdb_host == i386gnu] (NATDEPFILES): Add
-	'nat/fork-inferior.o'.
-	* gnu-nat.c: #include "nat/fork-inferior.h".
-
-	* gnu-nat.c (gnu_nat_target::detach): Instead of
-	'inf_child_maybe_unpush_target (ops)' call 'maybe_unpush_target'.
-	* gnu-nat.h: #include "inf-child.h".
-	* i386-gnu-nat.c (gnu_fetch_registers): Rename/move to
-	'i386_gnu_nat_target::fetch_registers'.
-	(gnu_store_registers): Rename/move to
-	'i386_gnu_nat_target::store_registers'.
-
-	* config/i386/nm-i386gnu.h: Don't "#include" any files.
-	* gnu-nat.h (mach_thread_info): New function.
-	* gnu-nat.c (thread_takeover_sc_cmd): Use it.
-
-	* config/i386/nm-i386gnu.h (gnu_target_pid_to_str): Remove.
-
-2019-02-14  Frederic Konrad  <konrad@adacore.com>
-
-	* riscv-rdep.c (riscv_type_alignment): Handle TYPE_CODE_RANGE.
-
-2019-02-14  Joel Brobecker  <brobecker@adacore.com>
-
-	* windows-nat.c (windows_add_thread): Add new parameter
-	"main_thread_p" with default value set to false.  Update
-	function documentation as well as all callers.
-	(windows_delete_thread): Likewise.
-	(fake_create_process): Update call to windows_add_thread.
-	(get_windows_debug_event) <CREATE_THREAD_DEBUG_EVENT>
-	<CREATE_PROCESS_DEBUG_EVENT>: Likewise.
-	<EXIT_THREAD_DEBUG_EVENT, EXIT_PROCESS_DEBUG_EVENT>: Update
-	call to windows_delete_thread.
-
-2019-02-13  Simon Marchi  <simon.marchi@ericsson.com>
-
-	* MAINTAINERS: Add Andrew Burgess as global maintainer.
-
-2019-02-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* symfile.c (find_separate_debug_file): Use canonical path of
-	sysroot with child_path instead of gdb_sysroot if it is valid.
-
-2019-02-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* symfile.c (find_separate_debug_file): Use child_path to
-	determine if an object file is under a sysroot.
-
-2019-02-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add
-	unittests/child-path-selftests.c.
-	* common/pathstuff.c (child_path): New function.
-	* common/pathstuff.h (child_path): New prototype.
-	* unittests/child-path-selftests.c: New file.
-
-2019-02-12  John Baldwin  <jhb@FreeBSD.org>
-
-	* symfile.c (find_separate_debug_file): Look for separate debug
-	files in debug directories under the sysroot.
-
-2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* symtab.h (struct minimal_symbol data_p): New const method.
-	(struct minimal_symbol text_p): Likewise.
-	* symtab.c (output_source_filename): Use file name style
-	to print file name.
-	(print_symbol_info): Likewise.
-	(print_msymbol_info): Use address style to print addresses.
-	Use function name style to print executable text symbols.
-	(expand_symtab_containing_pc): Use data_p.
-	(find_pc_sect_compunit_symtab): Likewise.
-
-2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* breakpoint.c (describe_other_breakpoints): Use address style
-	to print addresses.
-	(say_where): Likewise.
-
-2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* ada-typeprint.c (print_func_type): Print function name
-	style to print function name.
-	* c-typeprint.c (c_print_type_1): Likewise.
-
-2019-02-11  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-linux-tdep.c (aarch64_linux_get_syscall_number): Check
-	for execve.
-
-2019-02-10  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* c-exp.y (direct_abs_decl): Use emplace_back to record the
-	type_stack.
-
-2019-02-10  Joel Brobecker  <brobecker@adacore.com>
-
-	* ada-varobj.c (ada_value_is_changeable_p): Add handling of
-	TYPE_CODE_REF types.
-
-2019-02-08  Jim Wilson  <jimw@sifive.com>
-
-	* riscv-linux-tdep.c (riscv_linux_fregmap): New.
-	(riscv_linux_fregset): New.
-	(riscv_linux_iterate_over_regset_sections): Call cb for .reg2 section.
-
-2019-02-07  Tom Tromey  <tom@tromey.com>
-
-	* thread.c (thread_cancel_execution_command): Update.
-	* thread-fsm.h (struct thread_fsm): Add constructor, destructor,
-	methods.
-	(struct thread_fsm_ops): Remove.
-	(thread_fsm_ctor, thread_fsm_delete, thread_fsm_clean_up)
-	(thread_fsm_should_stop, thread_fsm_return_value)
-	(thread_fsm_set_finished, thread_fsm_finished_p)
-	(thread_fsm_async_reply_reason, thread_fsm_should_notify_stop):
-	Don't declare.
-	* mi/mi-interp.c (mi_on_normal_stop_1): Update.
-	* infrun.c (clear_proceed_status_thread)
-	(clean_up_just_stopped_threads_fsms, fetch_inferior_event)
+	(all_threads()): Delete overload.
+	(all_threads, all_non_exited_threads): Add process_stratum_target
+	parameter.
+	(all_threads_safe): Use brace initialization.
+	(thread_count): Add process_stratum_target parameter.
+	(set_resumed, set_running, set_stop_requested, set_executing)
+	(threads_are_executing, finish_thread_state): Add
+	process_stratum_target parameter.
+	(switch_to_thread): Use is_current_thread.
+	* i386-fbsd-tdep.c: Include "inferior.h".
+	(i386fbsd_get_thread_local_address): Pass down target.
+	* i386-linux-nat.c (i386_linux_nat_target::low_resume): Adjust.
+	* inf-child.c (inf_child_target::maybe_unpush_target): Remove
+	have_inferiors check.
+	* inf-ptrace.c (inf_ptrace_target::create_inferior)
+	(inf_ptrace_target::attach): Adjust.
+	* infcall.c (run_inferior_call): Adjust.
+	* infcmd.c (run_command_1): Pass target to
+	scoped_finish_thread_state.
+	(proceed_thread_callback): Skip inferiors with no execution.
+	(continue_command): Rename 'all_threads' local to avoid hiding
+	'all_threads' function.  Adjust get_last_target_status call.
+	(prepare_one_step): Adjust set_running call.
+	(signal_command): Use user_visible_resume_target.  Compare thread
+	pointers instead of inferior_ptid.
+	(info_program_command): Adjust to pass down target.
+	(attach_command): Mark target's 'thread_executing' flag.
+	(stop_current_target_threads_ns): New, factored out from ...
+	(interrupt_target_1): ... this.  Switch inferior before making
+	target calls.
+	* inferior-iter.h
+	(struct all_inferiors_iterator, struct all_inferiors_range)
+	(struct all_inferiors_safe_range)
+	(struct all_non_exited_inferiors_range): Filter on
+	process_stratum_target too.  Remove explicit.
+	* inferior.c (inferior::inferior): Push dummy target on target
+	stack.
+	(find_inferior_pid, find_inferior_ptid, number_of_live_inferiors):
+	Add process_stratum_target parameter, and pass it down.
+	(have_live_inferiors): Adjust.
+	(switch_to_inferior_and_push_target): New.
+	(add_inferior_command, clone_inferior_command): Handle
+	"-no-connection" parameter.  Use
+	switch_to_inferior_and_push_target.
+	(_initialize_inferior): Mention "-no-connection" option in
+	the help of "add-inferior" and "clone-inferior" commands.
+	* inferior.h: Include "process-stratum-target.h".
+	(interrupt_target_1): Use bool.
+	(struct inferior) <push_target, unpush_target, target_is_pushed,
+	find_target_beneath, top_target, process_target, target_at,
+	m_stack>: New.
+	(discard_all_inferiors): Delete.
+	(find_inferior_pid, find_inferior_ptid, number_of_live_inferiors)
+	(all_inferiors, all_non_exited_inferiors): Add
+	process_stratum_target parameter.
+	* infrun.c: Include "gdb_select.h" and <unordered_map>.
+	(target_last_proc_target): New global.
+	(follow_fork_inferior): Push target on new inferior.  Pass target
+	to add_thread_silent.  Call exec_on_vfork.  Handle target's
+	reference count.
+	(follow_fork): Adjust get_last_target_status call.  Also consider
+	target.
+	(follow_exec): Push target on new inferior.
+	(struct execution_control_state) <target>: New field.
+	(user_visible_resume_target): New.
+	(do_target_resume): Call target_async.
+	(resume_1): Set target's threads_executing flag.  Consider resume
+	target.
+	(commit_resume_all_targets): New.
+	(proceed): Also consider resume target.  Skip threads of inferiors
+	with no execution.  Commit resumtion in all targets.
+	(start_remote): Pass current inferior to wait_for_inferior.
+	(infrun_thread_stop_requested): Consider target as well.  Pass
+	thread_info pointer to clear_inline_frame_state instead of ptid.
+	(infrun_thread_thread_exit): Consider target as well.
+	(random_pending_event_thread): New inferior parameter.  Use it.
+	(do_target_wait): Rename to ...
+	(do_target_wait_1): ... this.  Add inferior parameter, and pass it
+	down.
+	(threads_are_resumed_pending_p, do_target_wait): New.
+	(prepare_for_detach): Adjust calls.
+	(wait_for_inferior): New inferior parameter.  Handle it.  Use
+	do_target_wait_1 instead of do_target_wait.
+	(fetch_inferior_event): Adjust.  Switch to representative
+	inferior.  Pass target down.
+	(set_last_target_status): Add process_stratum_target parameter.
+	Save target in global.
+	(get_last_target_status): Add process_stratum_target parameter and
+	handle it.
+	(nullify_last_target_wait_ptid): Clear 'target_last_proc_target'.
+	(context_switch): Check inferior_ptid == null_ptid before calling
+	inferior_thread().
+	(get_inferior_stop_soon): Pass down target.
+	(wait_one): Rename to ...
+	(poll_one_curr_target): ... this.
+	(struct wait_one_event): New.
+	(wait_one): New.
+	(stop_all_threads): Adjust.
+	(handle_no_resumed, handle_inferior_event): Adjust to consider the
+	event's target.
+	(switch_back_to_stepped_thread): Also consider target.
 	(print_stop_event): Update.
-	* infcmd.c (struct step_command_fsm): Inherit from thread_fsm.
-	Add constructor.
-	(step_command_fsm_ops): Remove.
-	(new_step_command_fsm): Remove.
-	(step_1): Update.
-	(step_command_fsm::should_stop): Rename from
-	step_command_fsm_should_stop.
-	(step_command_fsm::clean_up): Rename from
-	step_command_fsm_clean_up.
-	(step_command_fsm::do_async_reply_reason): Rename from
-	step_command_fsm_async_reply_reason.
-	(struct until_next_fsm): Inherit from thread_fsm.  Add
-	constructor.
-	(until_next_fsm_ops): Remove.
-	(new_until_next_fsm): Remove.
-	(until_next_fsm::should_stop): Rename from
-	until_next_fsm_should_stop.
-	(until_next_fsm::clean_up): Rename from until_next_fsm_clean_up.
-	(until_next_fsm::do_async_reply_reason): Rename from
-	until_next_fsm_async_reply_reason.
-	(struct finish_command_fsm): Inherit from thread_fsm.  Add
-	constructor.  Change type of breakpoint.
-	(finish_command_fsm_ops): Remove.
-	(new_finish_command_fsm): Remove.
-	(finish_command_fsm::should_stop): Rename from
-	finish_command_fsm_should_stop.
-	(finish_command_fsm::clean_up): Rename from
-	finish_command_fsm_clean_up.
-	(finish_command_fsm::return_value): Rename from
-	finish_command_fsm_return_value.
-	(finish_command_fsm::do_async_reply_reason): Rename from
-	finish_command_fsm_async_reply_reason.
-	(finish_command): Update.
-	* infcall.c (struct call_thread_fsm): Inherit from thread_fsm.
-	Add constructor.
-	(call_thread_fsm_ops): Remove.
-	(call_thread_fsm::call_thread_fsm): Rename from
-	new_call_thread_fsm.
-	(call_thread_fsm::should_stop): Rename from
-	call_thread_fsm_should_stop.
-	(call_thread_fsm::should_notify_stop): Rename from
-	call_thread_fsm_should_notify_stop.
-	(run_inferior_call, call_function_by_hand_dummy): Update.
-	* cli/cli-interp.c (should_print_stop_to_console): Update.
-	* breakpoint.c (struct until_break_fsm): Inherit from thread_fsm.
-	Add constructor.  Change type of location_breakpoint,
-	caller_breakpoint.
-	(until_break_fsm_ops): Remove.
-	(new_until_break_fsm): Remove.
-	(until_break_fsm::should_stop): Rename from
-	until_break_fsm_should_stop.
-	(until_break_fsm::clean_up): Rename from
-	until_break_fsm_clean_up.
-	(until_break_fsm::do_async_reply_reason): Rename from
-	until_break_fsm_async_reply_reason.
-	(until_break_command): Update.
-	* thread-fsm.c: Remove.
-	* Makefile.in (COMMON_SFILES): Remove thread-fsm.c.
-
-2019-02-07  Tom Tromey  <tom@tromey.com>
-
-	* yy-remap.h: Add include guard.
-	* xtensa-tdep.h: Add include guard.
-	* xcoffread.h: Rename include guard.
-	* varobj-iter.h: Add include guard.
-	* tui/tui.h: Rename include guard.
-	* tui/tui-winsource.h: Rename include guard.
-	* tui/tui-wingeneral.h: Rename include guard.
-	* tui/tui-windata.h: Rename include guard.
-	* tui/tui-win.h: Rename include guard.
-	* tui/tui-stack.h: Rename include guard.
-	* tui/tui-source.h: Rename include guard.
-	* tui/tui-regs.h: Rename include guard.
-	* tui/tui-out.h: Rename include guard.
-	* tui/tui-layout.h: Rename include guard.
-	* tui/tui-io.h: Rename include guard.
-	* tui/tui-hooks.h: Rename include guard.
-	* tui/tui-file.h: Rename include guard.
-	* tui/tui-disasm.h: Rename include guard.
-	* tui/tui-data.h: Rename include guard.
-	* tui/tui-command.h: Rename include guard.
-	* tic6x-tdep.h: Add include guard.
-	* target/waitstatus.h: Rename include guard.
-	* target/wait.h: Rename include guard.
-	* target/target.h: Rename include guard.
-	* target/resume.h: Rename include guard.
-	* target-float.h: Rename include guard.
-	* stabsread.h: Add include guard.
-	* rs6000-tdep.h: Add include guard.
-	* riscv-fbsd-tdep.h: Add include guard.
-	* regformats/regdef.h: Rename include guard.
-	* record.h: Rename include guard.
-	* python/python.h: Rename include guard.
-	* python/python-internal.h: Rename include guard.
-	* python/py-stopevent.h: Rename include guard.
-	* python/py-ref.h: Rename include guard.
-	* python/py-record.h: Rename include guard.
-	* python/py-record-full.h: Rename include guard.
-	* python/py-record-btrace.h: Rename include guard.
-	* python/py-instruction.h: Rename include guard.
-	* python/py-events.h: Rename include guard.
-	* python/py-event.h: Rename include guard.
-	* procfs.h: Add include guard.
-	* proc-utils.h: Add include guard.
-	* p-lang.h: Add include guard.
-	* or1k-tdep.h: Rename include guard.
-	* observable.h: Rename include guard.
-	* nto-tdep.h: Rename include guard.
-	* nat/x86-linux.h: Rename include guard.
-	* nat/x86-linux-dregs.h: Rename include guard.
-	* nat/x86-gcc-cpuid.h: Add include guard.
-	* nat/x86-dregs.h: Rename include guard.
-	* nat/x86-cpuid.h: Rename include guard.
-	* nat/ppc-linux.h: Rename include guard.
-	* nat/mips-linux-watch.h: Rename include guard.
-	* nat/linux-waitpid.h: Rename include guard.
-	* nat/linux-ptrace.h: Rename include guard.
-	* nat/linux-procfs.h: Rename include guard.
-	* nat/linux-osdata.h: Rename include guard.
-	* nat/linux-nat.h: Rename include guard.
-	* nat/linux-namespaces.h: Rename include guard.
-	* nat/linux-btrace.h: Rename include guard.
-	* nat/glibc_thread_db.h: Rename include guard.
-	* nat/gdb_thread_db.h: Rename include guard.
-	* nat/gdb_ptrace.h: Rename include guard.
-	* nat/fork-inferior.h: Rename include guard.
-	* nat/amd64-linux-siginfo.h: Rename include guard.
-	* nat/aarch64-sve-linux-sigcontext.h: Rename include guard.
-	* nat/aarch64-sve-linux-ptrace.h: Rename include guard.
-	* nat/aarch64-linux.h: Rename include guard.
-	* nat/aarch64-linux-hw-point.h: Rename include guard.
-	* mn10300-tdep.h: Add include guard.
-	* mips-linux-tdep.h: Add include guard.
-	* mi/mi-parse.h: Rename include guard.
-	* mi/mi-out.h: Rename include guard.
-	* mi/mi-main.h: Rename include guard.
-	* mi/mi-interp.h: Rename include guard.
-	* mi/mi-getopt.h: Rename include guard.
-	* mi/mi-console.h: Rename include guard.
-	* mi/mi-common.h: Rename include guard.
-	* mi/mi-cmds.h: Rename include guard.
-	* mi/mi-cmd-break.h: Rename include guard.
-	* m2-lang.h: Add include guard.
-	* location.h: Rename include guard.
-	* linux-record.h: Rename include guard.
-	* linux-nat.h: Add include guard.
-	* linux-fork.h: Add include guard.
-	* i386-darwin-tdep.h: Rename include guard.
-	* hppa-linux-offsets.h: Add include guard.
-	* guile/guile.h: Rename include guard.
-	* guile/guile-internal.h: Rename include guard.
-	* gnu-nat.h: Rename include guard.
-	* gdb-stabs.h: Rename include guard.
-	* frv-tdep.h: Add include guard.
-	* f-lang.h: Add include guard.
-	* event-loop.h: Add include guard.
-	* darwin-nat.h: Rename include guard.
-	* cp-abi.h: Rename include guard.
-	* config/sparc/nm-sol2.h: Rename include guard.
-	* config/nm-nto.h: Rename include guard.
-	* config/nm-linux.h: Add include guard.
-	* config/i386/nm-i386gnu.h: Rename include guard.
-	* config/djgpp/nl_types.h: Rename include guard.
-	* config/djgpp/langinfo.h: Rename include guard.
-	* compile/gcc-cp-plugin.h: Add include guard.
-	* compile/gcc-c-plugin.h: Add include guard.
-	* compile/compile.h: Rename include guard.
-	* compile/compile-object-run.h: Rename include guard.
-	* compile/compile-object-load.h: Rename include guard.
-	* compile/compile-internal.h: Rename include guard.
-	* compile/compile-cplus.h: Rename include guard.
-	* compile/compile-c.h: Rename include guard.
-	* common/xml-utils.h: Rename include guard.
-	* common/x86-xstate.h: Rename include guard.
-	* common/version.h: Rename include guard.
-	* common/vec.h: Rename include guard.
-	* common/tdesc.h: Rename include guard.
-	* common/selftest.h: Rename include guard.
-	* common/scoped_restore.h: Rename include guard.
-	* common/scoped_mmap.h: Rename include guard.
-	* common/scoped_fd.h: Rename include guard.
-	* common/safe-iterator.h: Rename include guard.
-	* common/run-time-clock.h: Rename include guard.
-	* common/refcounted-object.h: Rename include guard.
-	* common/queue.h: Rename include guard.
-	* common/ptid.h: Rename include guard.
-	* common/print-utils.h: Rename include guard.
-	* common/preprocessor.h: Rename include guard.
-	* common/pathstuff.h: Rename include guard.
-	* common/observable.h: Rename include guard.
-	* common/netstuff.h: Rename include guard.
-	* common/job-control.h: Rename include guard.
-	* common/host-defs.h: Rename include guard.
-	* common/gdb_wait.h: Rename include guard.
-	* common/gdb_vecs.h: Rename include guard.
-	* common/gdb_unlinker.h: Rename include guard.
-	* common/gdb_unique_ptr.h: Rename include guard.
-	* common/gdb_tilde_expand.h: Rename include guard.
-	* common/gdb_sys_time.h: Rename include guard.
-	* common/gdb_string_view.h: Rename include guard.
-	* common/gdb_splay_tree.h: Rename include guard.
-	* common/gdb_setjmp.h: Rename include guard.
-	* common/gdb_ref_ptr.h: Rename include guard.
-	* common/gdb_optional.h: Rename include guard.
-	* common/gdb_locale.h: Rename include guard.
-	* common/gdb_assert.h: Rename include guard.
-	* common/filtered-iterator.h: Rename include guard.
-	* common/filestuff.h: Rename include guard.
-	* common/fileio.h: Rename include guard.
-	* common/environ.h: Rename include guard.
-	* common/common-utils.h: Rename include guard.
-	* common/common-types.h: Rename include guard.
-	* common/common-regcache.h: Rename include guard.
-	* common/common-inferior.h: Rename include guard.
-	* common/common-gdbthread.h: Rename include guard.
-	* common/common-exceptions.h: Rename include guard.
-	* common/common-defs.h: Rename include guard.
-	* common/common-debug.h: Rename include guard.
-	* common/cleanups.h: Rename include guard.
-	* common/buffer.h: Rename include guard.
-	* common/btrace-common.h: Rename include guard.
-	* common/break-common.h: Rename include guard.
-	* cli/cli-utils.h: Rename include guard.
-	* cli/cli-style.h: Rename include guard.
-	* cli/cli-setshow.h: Rename include guard.
-	* cli/cli-script.h: Rename include guard.
-	* cli/cli-interp.h: Rename include guard.
-	* cli/cli-decode.h: Rename include guard.
-	* cli/cli-cmds.h: Rename include guard.
-	* charset-list.h: Add include guard.
-	* buildsym-legacy.h: Rename include guard.
-	* bfin-tdep.h: Add include guard.
-	* ax.h: Rename include guard.
-	* arm-linux-tdep.h: Add include guard.
-	* arm-fbsd-tdep.h: Add include guard.
-	* arch/xtensa.h: Rename include guard.
-	* arch/tic6x.h: Add include guard.
-	* arch/i386.h: Add include guard.
-	* arch/arm.h: Rename include guard.
-	* arch/arm-linux.h: Rename include guard.
-	* arch/arm-get-next-pcs.h: Rename include guard.
-	* arch/amd64.h: Add include guard.
-	* arch/aarch64-insn.h: Rename include guard.
-	* arch-utils.h: Rename include guard.
-	* annotate.h: Add include guard.
-	* amd64-darwin-tdep.h: Rename include guard.
-	* aarch64-linux-tdep.h: Add include guard.
-	* aarch64-fbsd-tdep.h: Add include guard.
-	* aarch32-linux-nat.h: Add include guard.
-
-2019-02-06  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* macrotab.c (macro_define_internal): New function that
-	factorizes macro_define_object_internal and macro_define_function
-	code.
-	(macro_define_object_internal): Use macro_define_internal.
-	(macro_define_function): Likewise.
-
-2019-02-06  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* macrocmd.c (extract_identifier): Return
-	a gdb::unique_xmalloc_ptr<char> instead of a char *, and update
-	callers.
-
-2019-02-06  John Baldwin  <jhb@FreeBSD.org>
-
-	* fbsd-nat.c (fbsd_fetch_cmdline): Join arguments with spaces.
-
-2019-02-05  Tom Tromey  <tom@tromey.com>
-
-	* target.c (target_stack::unpush): Move assertion earlier.
-
-2019-01-30  Tom Tromey  <tom@tromey.com>
-
-	PR python/23615:
-	* python/python.c (execute_gdb_command): Use gdbpy_allow_threads.
-	(gdbpy_parse_and_eval): Likewise.
-	* python/python-internal.h (gdbpy_allow_threads): New class.
-
-2019-01-28  John Baldwin  <jhb@FreeBSD.org>
-
-	* aarch64-fbsd-tdep.c (aarch64_fbsd_gregmap)
-	(aarch64_fbsd_fpregmap): Move earlier.
-	(AARCH64_MCONTEXT_REG_SIZE, AARCH64_MCONTEXT_FPREG_SIZE): Delete.
-	(aarch64_fbsd_sigframe_init): Use trad_frame_set_reg_regmap
-	instead of individual calls to trad_frame_set_reg_addr.
-	* arm-fbsd-tdep.c (arm_fbsd_gregmap, arm_fbsd_vfpregmap): Move
-	earlier.
-	(ARM_MCONTEXT_REG_SIZE, ARM_MCONTEXT_VFP_REG_SIZE): Delete.
-	(arm_fbsd_sigframe_init): Use trad_frame_set_reg_regmap
-	instead of individual calls to trad_frame_set_reg_addr.
-
-2019-01-28  Alan Hayward  <alan.hayward@arm.com>
-
-	* CONTRIBUTE: Replace contribution list with wiki link.
-
-2019-01-25  Tom Tromey  <tom@tromey.com>
-
-	* Makefile.in (GDB_CFLAGS): Don't add -I for common.
-
-2019-01-25  Tom Tromey  <tom@tromey.com>
-
-	* xtensa-linux-nat.c: Fix common/ includes.
-	* xml-support.h: Fix common/ includes.
-	* xml-support.c: Fix common/ includes.
-	* x86-linux-nat.c: Fix common/ includes.
-	* windows-nat.c: Fix common/ includes.
-	* varobj.h: Fix common/ includes.
-	* varobj.c: Fix common/ includes.
-	* value.c: Fix common/ includes.
-	* valops.c: Fix common/ includes.
-	* utils.c: Fix common/ includes.
-	* unittests/xml-utils-selftests.c: Fix common/ includes.
-	* unittests/utils-selftests.c: Fix common/ includes.
-	* unittests/unpack-selftests.c: Fix common/ includes.
-	* unittests/tracepoint-selftests.c: Fix common/ includes.
-	* unittests/style-selftests.c: Fix common/ includes.
-	* unittests/string_view-selftests.c: Fix common/ includes.
-	* unittests/scoped_restore-selftests.c: Fix common/ includes.
-	* unittests/scoped_mmap-selftests.c: Fix common/ includes.
-	* unittests/scoped_fd-selftests.c: Fix common/ includes.
-	* unittests/rsp-low-selftests.c: Fix common/ includes.
-	* unittests/parse-connection-spec-selftests.c: Fix common/
-	includes.
-	* unittests/optional-selftests.c: Fix common/ includes.
-	* unittests/offset-type-selftests.c: Fix common/ includes.
-	* unittests/observable-selftests.c: Fix common/ includes.
-	* unittests/mkdir-recursive-selftests.c: Fix common/ includes.
-	* unittests/memrange-selftests.c: Fix common/ includes.
-	* unittests/memory-map-selftests.c: Fix common/ includes.
-	* unittests/lookup_name_info-selftests.c: Fix common/ includes.
-	* unittests/function-view-selftests.c: Fix common/ includes.
-	* unittests/environ-selftests.c: Fix common/ includes.
-	* unittests/copy_bitwise-selftests.c: Fix common/ includes.
-	* unittests/common-utils-selftests.c: Fix common/ includes.
-	* unittests/cli-utils-selftests.c: Fix common/ includes.
-	* unittests/array-view-selftests.c: Fix common/ includes.
-	* ui-file.c: Fix common/ includes.
-	* tui/tui-io.c: Fix common/ includes.
-	* tracepoint.h: Fix common/ includes.
-	* tracepoint.c: Fix common/ includes.
-	* tracefile-tfile.c: Fix common/ includes.
-	* top.h: Fix common/ includes.
-	* top.c: Fix common/ includes.
-	* thread.c: Fix common/ includes.
-	* target/waitstatus.h: Fix common/ includes.
-	* target/waitstatus.c: Fix common/ includes.
-	* target.h: Fix common/ includes.
-	* target.c: Fix common/ includes.
-	* target-memory.c: Fix common/ includes.
-	* target-descriptions.c: Fix common/ includes.
-	* symtab.h: Fix common/ includes.
-	* symfile.c: Fix common/ includes.
-	* stap-probe.c: Fix common/ includes.
-	* spu-linux-nat.c: Fix common/ includes.
-	* sparc-nat.c: Fix common/ includes.
-	* source.c: Fix common/ includes.
-	* solib.c: Fix common/ includes.
-	* solib-target.c: Fix common/ includes.
-	* ser-unix.c: Fix common/ includes.
-	* ser-tcp.c: Fix common/ includes.
-	* ser-pipe.c: Fix common/ includes.
-	* ser-base.c: Fix common/ includes.
-	* selftest-arch.c: Fix common/ includes.
-	* s12z-tdep.c: Fix common/ includes.
-	* rust-exp.y: Fix common/ includes.
-	* rs6000-aix-tdep.c: Fix common/ includes.
-	* riscv-tdep.c: Fix common/ includes.
-	* remote.c: Fix common/ includes.
-	* remote-notif.h: Fix common/ includes.
-	* remote-fileio.h: Fix common/ includes.
-	* remote-fileio.c: Fix common/ includes.
-	* regcache.h: Fix common/ includes.
-	* regcache.c: Fix common/ includes.
-	* record-btrace.c: Fix common/ includes.
-	* python/python.c: Fix common/ includes.
-	* python/py-type.c: Fix common/ includes.
-	* python/py-inferior.c: Fix common/ includes.
-	* progspace.h: Fix common/ includes.
-	* producer.c: Fix common/ includes.
-	* procfs.c: Fix common/ includes.
-	* proc-api.c: Fix common/ includes.
-	* printcmd.c: Fix common/ includes.
-	* ppc-linux-nat.c: Fix common/ includes.
-	* parser-defs.h: Fix common/ includes.
-	* osdata.c: Fix common/ includes.
-	* obsd-nat.c: Fix common/ includes.
-	* nat/x86-linux.c: Fix common/ includes.
-	* nat/x86-linux-dregs.c: Fix common/ includes.
-	* nat/x86-dregs.h: Fix common/ includes.
-	* nat/x86-dregs.c: Fix common/ includes.
-	* nat/ppc-linux.c: Fix common/ includes.
-	* nat/mips-linux-watch.h: Fix common/ includes.
-	* nat/mips-linux-watch.c: Fix common/ includes.
-	* nat/linux-waitpid.c: Fix common/ includes.
-	* nat/linux-ptrace.h: Fix common/ includes.
-	* nat/linux-ptrace.c: Fix common/ includes.
-	* nat/linux-procfs.c: Fix common/ includes.
-	* nat/linux-personality.c: Fix common/ includes.
-	* nat/linux-osdata.c: Fix common/ includes.
-	* nat/linux-namespaces.c: Fix common/ includes.
-	* nat/linux-btrace.h: Fix common/ includes.
-	* nat/linux-btrace.c: Fix common/ includes.
-	* nat/fork-inferior.c: Fix common/ includes.
-	* nat/amd64-linux-siginfo.c: Fix common/ includes.
-	* nat/aarch64-sve-linux-ptrace.c: Fix common/ includes.
-	* nat/aarch64-linux.c: Fix common/ includes.
-	* nat/aarch64-linux-hw-point.h: Fix common/ includes.
-	* nat/aarch64-linux-hw-point.c: Fix common/ includes.
-	* namespace.h: Fix common/ includes.
-	* mips-linux-tdep.c: Fix common/ includes.
-	* minsyms.c: Fix common/ includes.
-	* mi/mi-parse.h: Fix common/ includes.
-	* mi/mi-main.c: Fix common/ includes.
-	* mi/mi-cmd-env.c: Fix common/ includes.
-	* memrange.h: Fix common/ includes.
-	* memattr.c: Fix common/ includes.
-	* maint.h: Fix common/ includes.
-	* maint.c: Fix common/ includes.
-	* main.c: Fix common/ includes.
-	* machoread.c: Fix common/ includes.
-	* location.c: Fix common/ includes.
-	* linux-thread-db.c: Fix common/ includes.
-	* linux-nat.c: Fix common/ includes.
-	* linux-fork.c: Fix common/ includes.
-	* inline-frame.c: Fix common/ includes.
-	* infrun.c: Fix common/ includes.
-	* inflow.c: Fix common/ includes.
-	* inferior.h: Fix common/ includes.
-	* inferior.c: Fix common/ includes.
-	* infcmd.c: Fix common/ includes.
-	* inf-ptrace.c: Fix common/ includes.
-	* inf-child.c: Fix common/ includes.
-	* ia64-linux-nat.c: Fix common/ includes.
-	* i387-tdep.c: Fix common/ includes.
-	* i386-tdep.c: Fix common/ includes.
-	* i386-linux-tdep.c: Fix common/ includes.
-	* i386-linux-nat.c: Fix common/ includes.
-	* i386-go32-tdep.c: Fix common/ includes.
-	* i386-fbsd-tdep.c: Fix common/ includes.
-	* i386-fbsd-nat.c: Fix common/ includes.
-	* guile/scm-type.c: Fix common/ includes.
-	* guile/guile.c: Fix common/ includes.
-	* go32-nat.c: Fix common/ includes.
-	* gnu-nat.c: Fix common/ includes.
-	* gdbthread.h: Fix common/ includes.
-	* gdbarch-selftests.c: Fix common/ includes.
-	* gdb_usleep.c: Fix common/ includes.
-	* gdb_select.h: Fix common/ includes.
-	* gdb_bfd.c: Fix common/ includes.
-	* gcore.c: Fix common/ includes.
-	* fork-child.c: Fix common/ includes.
-	* findvar.c: Fix common/ includes.
-	* fbsd-nat.c: Fix common/ includes.
-	* event-top.c: Fix common/ includes.
-	* event-loop.c: Fix common/ includes.
-	* dwarf2read.c: Fix common/ includes.
-	* dwarf2loc.c: Fix common/ includes.
-	* dwarf2-frame.c: Fix common/ includes.
-	* dwarf-index-cache.c: Fix common/ includes.
-	* dtrace-probe.c: Fix common/ includes.
-	* disasm-selftests.c: Fix common/ includes.
-	* defs.h: Fix common/ includes.
-	* csky-tdep.c: Fix common/ includes.
-	* cp-valprint.c: Fix common/ includes.
-	* cp-support.h: Fix common/ includes.
-	* cp-support.c: Fix common/ includes.
-	* corelow.c: Fix common/ includes.
-	* completer.h: Fix common/ includes.
-	* completer.c: Fix common/ includes.
-	* compile/compile.c: Fix common/ includes.
-	* compile/compile-loc2c.c: Fix common/ includes.
-	* compile/compile-cplus-types.c: Fix common/ includes.
-	* compile/compile-cplus-symbols.c: Fix common/ includes.
-	* command.h: Fix common/ includes.
-	* cli/cli-dump.c: Fix common/ includes.
-	* cli/cli-cmds.c: Fix common/ includes.
-	* charset.c: Fix common/ includes.
-	* build-id.c: Fix common/ includes.
-	* btrace.h: Fix common/ includes.
-	* btrace.c: Fix common/ includes.
-	* breakpoint.h: Fix common/ includes.
-	* breakpoint.c: Fix common/ includes.
-	* ax.h: 
-	(enum agent_op): Fix common/ includes.
-	* ax-general.c (struct aop_map): Fix common/ includes.
-	* ax-gdb.c: Fix common/ includes.
-	* auxv.c: Fix common/ includes.
-	* auto-load.c: Fix common/ includes.
-	* arm-tdep.c: Fix common/ includes.
-	* arch/riscv.c: Fix common/ includes.
-	* arch/ppc-linux-common.c: Fix common/ includes.
-	* arch/i386.c: Fix common/ includes.
-	* arch/arm.c: Fix common/ includes.
-	* arch/arm-linux.c: Fix common/ includes.
-	* arch/arm-get-next-pcs.c: Fix common/ includes.
-	* arch/amd64.c: Fix common/ includes.
-	* arch/aarch64.c: Fix common/ includes.
-	* arch/aarch64-insn.c: Fix common/ includes.
-	* arch-utils.c: Fix common/ includes.
-	* amd64-windows-tdep.c: Fix common/ includes.
-	* amd64-tdep.c: Fix common/ includes.
-	* amd64-sol2-tdep.c: Fix common/ includes.
-	* amd64-obsd-tdep.c: Fix common/ includes.
-	* amd64-nbsd-tdep.c: Fix common/ includes.
-	* amd64-linux-tdep.c: Fix common/ includes.
-	* amd64-linux-nat.c: Fix common/ includes.
-	* amd64-fbsd-tdep.c: Fix common/ includes.
-	* amd64-fbsd-nat.c: Fix common/ includes.
-	* amd64-dicos-tdep.c: Fix common/ includes.
-	* amd64-darwin-tdep.c: Fix common/ includes.
-	* agent.c: Fix common/ includes.
-	* ada-lang.h: Fix common/ includes.
-	* ada-lang.c: Fix common/ includes.
-	* aarch64-tdep.c: Fix common/ includes.
-
-2019-01-25  Tom Tromey  <tom@tromey.com>
-
-	* common/create-version.sh: Use common/version.h.
-
-2019-01-24  Pedro Alves  <palves@redhat.com>
-
-	* infrun.c (signal_stop, signal_print, signal_program)
-	(signal_catch, signal_pass): Now arrays instead of pointers.
-	(update_signals_program_target, do_target_resume)
-	(signal_catch_update, handle_command, _initialize_infrun): Adjust.
-	* linux-nat.c (linux_nat_target::pass_signals)
-	(linux_nat_target::create_inferior, linux_nat_target::attach):
+	(normal_stop): Update.  Also consider the resume target.
+	* infrun.h (wait_for_inferior): Remove declaration.
+	(user_visible_resume_target): New declaration.
+	(get_last_target_status, set_last_target_status): New
+	process_stratum_target parameter.
+	* inline-frame.c (clear_inline_frame_state(ptid_t)): Add
+	process_stratum_target parameter, and use it.
+	(clear_inline_frame_state (thread_info*)): New.
+	* inline-frame.c (clear_inline_frame_state(ptid_t)): Add
+	process_stratum_target parameter.
+	(clear_inline_frame_state (thread_info*)): Declare.
+	* linux-fork.c (delete_checkpoint_command): Pass target down to
+	find_thread_ptid.
+	(checkpoint_command): Adjust.
+	* linux-nat.c (linux_nat_target::follow_fork): Switch to thread
+	instead of just tweaking inferior_ptid.
+	(linux_nat_switch_fork): Pass target down to thread_change_ptid.
+	(exit_lwp): Pass target down to find_thread_ptid.
+	(attach_proc_task_lwp_callback): Pass target down to
+	add_thread/set_running/set_executing.
+	(linux_nat_target::attach): Pass target down to
+	thread_change_ptid.
+	(get_detach_signal): Pass target down to find_thread_ptid.
+	Consider last target status's target.
+	(linux_resume_one_lwp_throw, resume_lwp)
+	(linux_handle_syscall_trap, linux_handle_extended_wait, wait_lwp)
+	(stop_wait_callback, save_stop_reason, linux_nat_filter_event)
+	(linux_nat_wait_1, resume_stopped_resumed_lwps): Pass target down.
+	(linux_nat_target::async_wait_fd): New.
+	(linux_nat_stop_lwp, linux_nat_target::thread_address_space): Pass
+	target down.
+	* linux-nat.h (linux_nat_target::async_wait_fd): Declare.
+	* linux-tdep.c (get_thread_arch_regcache): Pass target down.
+	* linux-thread-db.c (struct thread_db_info::process_target): New
+	field.
+	(add_thread_db_info): Save target.
+	(get_thread_db_info): New process_stratum_target parameter.  Also
+	match target.
+	(delete_thread_db_info): New process_stratum_target parameter.
+	Also match target.
+	(thread_from_lwp): Adjust to pass down target.
+	(thread_db_notice_clone): Pass down target.
+	(check_thread_db_callback): Pass down target.
+	(try_thread_db_load_1): Always push the thread_db target.
+	(try_thread_db_load, record_thread): Pass target down.
+	(thread_db_target::detach): Pass target down.  Always unpush the
+	thread_db target.
+	(thread_db_target::wait, thread_db_target::mourn_inferior): Pass
+	target down.  Always unpush the thread_db target.
+	(find_new_threads_callback, thread_db_find_new_threads_2)
+	(thread_db_target::update_thread_list): Pass target down.
+	(thread_db_target::pid_to_str): Pass current inferior down.
+	(thread_db_target::get_thread_local_address): Pass target down.
+	(thread_db_target::resume, maintenance_check_libthread_db): Pass
+	target down.
+	* nto-procfs.c (nto_procfs_target::update_thread_list): Adjust.
+	* procfs.c (procfs_target::procfs_init_inferior): Declare.
+	(proc_set_current_signal, do_attach, procfs_target::wait): Adjust.
+	(procfs_init_inferior): Rename to ...
+	(procfs_target::procfs_init_inferior): ... this and adjust.
+	(procfs_target::create_inferior, procfs_notice_thread)
+	(procfs_do_thread_registers): Adjust.
+	* ppc-fbsd-tdep.c: Include "inferior.h".
+	(ppcfbsd_get_thread_local_address): Pass down target.
+	* proc-service.c (ps_xfer_memory): Switch current inferior and
+	program space as well.
+	(get_ps_regcache): Pass target down.
+	* process-stratum-target.c
+	(process_stratum_target::thread_address_space)
+	(process_stratum_target::thread_architecture): Pass target down.
+	* process-stratum-target.h
+	(process_stratum_target::threads_executing): New field.
+	(as_process_stratum_target): New.
+	* ravenscar-thread.c
+	(ravenscar_thread_target::update_inferior_ptid): Pass target down.
+	(ravenscar_thread_target::wait, ravenscar_add_thread): Pass target
+	down.
+	* record-btrace.c (record_btrace_target::info_record): Adjust.
+	(record_btrace_target::record_method)
+	(record_btrace_target::record_is_replaying)
+	(record_btrace_target::fetch_registers)
+	(get_thread_current_frame_id, record_btrace_target::resume)
+	(record_btrace_target::wait, record_btrace_target::stop): Pass
+	target down.
+	* record-full.c (record_full_wait_1): Switch to event thread.
+	Pass target down.
+	* regcache.c (regcache::regcache)
+	(get_thread_arch_aspace_regcache, get_thread_arch_regcache): Add
+	process_stratum_target parameter and handle it.
+	(current_thread_target): New global.
+	(get_thread_regcache): Add process_stratum_target parameter and
+	handle it.  Switch inferior before calling target method.
+	(get_thread_regcache): Pass target down.
+	(get_thread_regcache_for_ptid): Pass target down.
+	(registers_changed_ptid): Add process_stratum_target parameter and
+	handle it.
+	(registers_changed_thread, registers_changed): Pass target down.
+	(test_get_thread_arch_aspace_regcache): New.
+	(current_regcache_test): Define a couple local test_target_ops
+	instances and use them for testing.
+	(readwrite_regcache): Pass process_stratum_target parameter.
+	(cooked_read_test, cooked_write_test): Pass mock_target down.
+	* regcache.h (get_thread_regcache, get_thread_arch_regcache)
+	(get_thread_arch_aspace_regcache): Add process_stratum_target
+	parameter.
+	(regcache::target): New method.
+	(regcache::regcache, regcache::get_thread_arch_aspace_regcache)
+	(regcache::registers_changed_ptid): Add process_stratum_target
+	parameter.
+	(regcache::m_target): New field.
+	(registers_changed_ptid): Add process_stratum_target parameter.
+	* remote.c (remote_state::supports_vCont_probed): New field.
+	(remote_target::async_wait_fd): New method.
+	(remote_unpush_and_throw): Add remote_target parameter.
+	(get_current_remote_target): Adjust.
+	(remote_target::remote_add_inferior): Push target.
+	(remote_target::remote_add_thread)
+	(remote_target::remote_notice_new_inferior)
+	(get_remote_thread_info): Pass target down.
+	(remote_target::update_thread_list): Skip threads of inferiors
+	bound to other targets.  (remote_target::close): Don't discard
+	inferiors.  (remote_target::add_current_inferior_and_thread)
+	(remote_target::process_initial_stop_replies)
+	(remote_target::start_remote)
+	(remote_target::remote_serial_quit_handler): Pass down target.
+	(remote_target::remote_unpush_target): New remote_target
+	parameter.  Unpush the target from all inferiors.
+	(remote_target::remote_unpush_and_throw): New remote_target
+	parameter.  Pass it down.
+	(remote_target::open_1): Check whether the current inferior has
+	execution instead of checking whether any inferior is live.  Pass
+	target down.
+	(remote_target::remote_detach_1): Pass down target.  Use
+	remote_unpush_target.
+	(extended_remote_target::attach): Pass down target.
+	(remote_target::remote_vcont_probe): Set supports_vCont_probed.
+	(remote_target::append_resumption): Pass down target.
+	(remote_target::append_pending_thread_resumptions)
+	(remote_target::remote_resume_with_hc, remote_target::resume)
+	(remote_target::commit_resume): Pass down target.
+	(remote_target::remote_stop_ns): Check supports_vCont_probed.
+	(remote_target::interrupt_query)
+	(remote_target::remove_new_fork_children)
+	(remote_target::check_pending_events_prevent_wildcard_vcont)
+	(remote_target::remote_parse_stop_reply)
+	(remote_target::process_stop_reply): Pass down target.
+	(first_remote_resumed_thread): New remote_target parameter.  Pass
+	it down.
+	(remote_target::wait_as): Pass down target.
+	(unpush_and_perror): New remote_target parameter.  Pass it down.
+	(remote_target::readchar, remote_target::remote_serial_write)
+	(remote_target::getpkt_or_notif_sane_1)
+	(remote_target::kill_new_fork_children, remote_target::kill): Pass
+	down target.
+	(remote_target::mourn_inferior): Pass down target.  Use
+	remote_unpush_target.
+	(remote_target::core_of_thread)
+	(remote_target::remote_btrace_maybe_reopen): Pass down target.
+	(remote_target::pid_to_exec_file)
+	(remote_target::thread_handle_to_thread_info): Pass down target.
+	(remote_target::async_wait_fd): New.
+	* riscv-fbsd-tdep.c: Include "inferior.h".
+	(riscv_fbsd_get_thread_local_address): Pass down target.
+	* sol2-tdep.c (sol2_core_pid_to_str): Pass down target.
+	* sol-thread.c (sol_thread_target::wait, ps_lgetregs, ps_lsetregs)
+	(ps_lgetfpregs, ps_lsetfpregs, sol_update_thread_list_callback):
 	Adjust.
-	* linux-nat.h (linux_nat_target::pass_signals): Adjust.
-	* nto-procfs.c (nto_procfs_target::pass_signals): Adjust.
-	* procfs.c (procfs_target::pass_signals): Adjust.
-	* record-full.c (record_full_target::resume): Adjust.
-	* remote.c (remote_target::pass_signals)
-	(remote_target::program_signals): Adjust.
-	* target-debug.h (target_debug_print_signals): Now takes a
-	gdb::array_view as parameter.  Adjust.
-	* target.h (target_ops) <pass_signals, program_signals>: Replace
-	pointer and length parameters with gdb::array_view.
-	(target_pass_signals, target_program_signals): Likewise.
+	* solib-spu.c (spu_skip_standalone_loader): Pass down target.
+	* solib-svr4.c (enable_break): Pass down target.
+	* spu-multiarch.c (parse_spufs_run): Pass down target.
+	* spu-tdep.c (spu2ppu_sniffer): Pass down target.
 	* target-delegates.c: Regenerate.
+	* target.c (g_target_stack): Delete.
+	(current_top_target): Return the current inferior's top target.
+	(target_has_execution_1): Refer to the passed-in inferior's top
+	target.
+	(target_supports_terminal_ours): Check whether the initial
+	inferior was already created.
+	(decref_target): New.
+	(target_stack::push): Incref/decref the target.
+	(push_target, push_target, unpush_target): Adjust.
+	(target_stack::unpush): Defref target.
+	(target_is_pushed): Return bool.  Adjust to refer to the current
+	inferior's target stack.
+	(dispose_inferior): Delete, and inline parts ...
+	(target_preopen): ... here.  Only dispose of the current inferior.
+	(target_detach): Hold strong target reference while detaching.
+	Pass target down.
+	(target_thread_name): Add assertion.
+	(target_resume): Pass down target.
+	(target_ops::beneath, find_target_at): Adjust to refer to the
+	current inferior's target stack.
+	(get_dummy_target): New.
+	(target_pass_ctrlc): Pass the Ctrl-C to the first inferior that
+	has a thread running.
+	(initialize_targets): Rename to ...
+	(_initialize_target): ... this.
+	* target.h: Include "gdbsupport/refcounted-object.h".
+	(struct target_ops): Inherit refcounted_object.
+	(target_ops::shortname, target_ops::longname): Make const.
+	(target_ops::async_wait_fd): New method.
+	(decref_target): Declare.
+	(struct target_ops_ref_policy): New.
+	(target_ops_ref): New typedef.
+	(get_dummy_target): Declare function.
+	(target_is_pushed): Return bool.
+	* thread-iter.c (all_matching_threads_iterator::m_inf_matches)
+	(all_matching_threads_iterator::all_matching_threads_iterator):
+	Handle filter target.
+	* thread-iter.h (struct all_matching_threads_iterator, struct
+	all_matching_threads_range, class all_non_exited_threads_range):
+	Filter by target too.  Remove explicit.
+	* thread.c (threads_executing): Delete.
+	(inferior_thread): Pass down current inferior.
+	(clear_thread_inferior_resources): Pass down thread pointer
+	instead of ptid_t.
+	(add_thread_silent, add_thread_with_info, add_thread): Add
+	process_stratum_target parameter.  Use it for thread and inferior
+	searches.
+	(is_current_thread): New.
+	(thread_info::deletable): Use it.
+	(find_thread_ptid, thread_count, in_thread_list)
+	(thread_change_ptid, set_resumed, set_running): New
+	process_stratum_target parameter.  Pass it down.
+	(set_executing): New process_stratum_target parameter.  Pass it
+	down.  Adjust reference to 'threads_executing'.
+	(threads_are_executing): New process_stratum_target parameter.
+	Adjust reference to 'threads_executing'.
+	(set_stop_requested, finish_thread_state): New
+	process_stratum_target parameter.  Pass it down.
+	(switch_to_thread): Also match inferior.
+	(switch_to_thread): New process_stratum_target parameter.  Pass it
+	down.
+	(update_threads_executing): Reimplement.
+	* top.c (quit_force): Pop targets from all inferior.
+	(gdb_init): Don't call initialize_targets.
+	* windows-nat.c (windows_nat_target) <get_windows_debug_event>:
+	Declare.
+	(windows_add_thread, windows_delete_thread): Adjust.
+	(get_windows_debug_event): Rename to ...
+	(windows_nat_target::get_windows_debug_event): ... this.  Adjust.
+	* tracefile-tfile.c (tfile_target_open): Pass down target.
+	* gdbsupport/common-gdbthread.h (struct process_stratum_target):
+	Forward declare.
+	(switch_to_thread): Add process_stratum_target parameter.
+	* mi/mi-interp.c (mi_on_resume_1): Add process_stratum_target
+	parameter.  Use it.
+	(mi_on_resume): Pass target down.
+	* nat/fork-inferior.c (startup_inferior): Add
+	process_stratum_target parameter.  Pass it down.
+	* nat/fork-inferior.h (startup_inferior): Add
+	process_stratum_target parameter.
+	* python/py-threadevent.c (py_get_event_thread): Pass target down.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (remote_target::start_remote): Don't set inferior_ptid
+	directly.  Instead find the first thread in the thread list and
+	use switch_to_thread.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (remote_target::remote_add_inferior): Don't bind a
+	process to the current inferior if the current inferior is already
+	bound to a process.
+
+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+	    Pedro Alves	 <palves@redhat.com>
+
+	* remote.c (remote_target::remote_parse_stop_reply) <W/X packets>:
+	If no process is specified, return null_ptid instead of
+	inferior_ptid.
+	(remote_target::wait_as): Handle TARGET_WAITKIND_EXITED /
+	TARGET_WAITKIND_SIGNALLED with no pid.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (first_remote_resumed_thread): New.
+	(remote_target::wait_as): Use it as default event_ptid instead of
+	inferior_ptid.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* infrun.c (handle_no_resumed): Use all_non_exited_inferiors.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* tracefile-tfile.c (tfile_target::close): Assert that trace_fd is
+	not -1.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* break-catch-sig.c (signal_catchpoint_print_it): Don't pass a
+	ptid to get_last_target_status.
+	* break-catch-syscall.c (print_it_catch_syscall): Don't pass a
+	ptid to get_last_target_status.
+	* infcmd.c (continue_command): Don't pass a target_waitstatus to
+	get_last_target_status.
+	(info_program_command): Don't pass a target_waitstatus to
+	get_last_target_status.
+	* infrun.c (init_wait_for_inferior): Use
+	nullify_last_target_wait_ptid.
+	(get_last_target_status): Handle nullptr arguments.
+	(nullify_last_target_wait_ptid): Clear target_last_waitstatus.
+	(print_stop_event): Don't pass a ptid to get_last_target_status.
+	(normal_stop): Don't pass a ptid to get_last_target_status.
+	* infrun.h (get_last_target_status, set_last_target_status): Move
+	comments here and update.
+	(nullify_last_target_wait_ptid): Declare.
+	* linux-fork.c (fork_load_infrun_state): Remove local extern
+	declaration of nullify_last_target_wait_ptid.
+	* linux-nat.c (get_detach_signal): Don't pass a target_waitstatus
+	to get_last_target_status.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdbthread.h (scoped_restore_current_thread)
+	<dont_restore, restore, m_dont_restore>: Declare.
+	* thread.c (thread_alive): Add assertion.  Return bool.
+	(switch_to_thread_if_alive): New.
+	(prune_threads): Switch inferior/thread.
+	(print_thread_info_1): Switch thread before calling target methods.
+	(scoped_restore_current_thread::restore): New, factored out from
+	...
+	(scoped_restore_current_thread::~scoped_restore_current_thread):
+	... this.
+	(scoped_restore_current_thread::scoped_restore_current_thread):
+	Add assertion.
+	(thread_apply_all_command, thread_select): Use
+	switch_to_thread_if_alive.
+	* infrun.c (proceed, restart_threads, handle_signal_stop)
+	(switch_back_to_stepped_thread): Switch current thread before
+	calling target methods.
 
-2019-01-24  Pedro Alves  <palves@redhat.com>
-
-	* common/forward-scope-exit.h
-	(forward_scope_exit::forward_scope_exit): Pass arguments to
-	m_bind_function directly, instead of creating a std::bind and
-	copying that.
-
-2019-01-24  Alan Hayward  <alan.hayward@arm.com>
-
-	* aarch64-tdep.c (aapcs_is_vfp_call_or_return_candidate_1): Check
-	for static members.
-	(pass_in_v_vfp_candidate): Likewise.
-
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Pedro Alves  <palves@redhat.com>
-
-	* regcache.c (class regcache_invalidator): Remove.
-	(regcache::raw_write): Use make_scope_exit.
-
-2019-01-23  Tom Tromey  <tom@tromey.com>
+2020-01-10  Pedro Alves <palves@redhat.com>
 
-	* ui-out.h (class ui_out_emit_type): Update comment.
+	* inferior.c (switch_to_inferior_no_thread): New function,
+	factored out from ...
+	(inferior_command): ... here.
+	* inferior.h (switch_to_inferior_no_thread): Declare.
+	* mi/mi-main.c (run_one_inferior): Use
+	switch_to_inferior_no_thread.
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
+2020-01-10  Pedro Alves  <palves@redhat.com>
 
-	* infrun.c (fetch_inferior_event): Update comment.
+	* infcmd.c (kill_command): Remove dead code.
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Pedro Alves  <palves@redhat.com>
+2020-01-10  Pedro Alves  <palves@redhat.com>
 
-	* infrun.c (reinstall_readline_callback_handler_cleanup): Remove
-	parameter.
-	(fetch_inferior_event): Use SCOPE_EXIT.
+	* remote.c (remote_target::mourn_inferior): No longer check
+	whether the target is running.
 
+2020-01-10  Pedro Alves  <palves@redhat.com>
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Pedro Alves  <palves@redhat.com>
+	* corelow.c (core_target::has_execution): Change parameter type to
+	inferior pointer.
+	* inferior.c (number_of_live_inferiors): Use
+	inferior::has_execution instead of target_has_execution_1.
+	* inferior.h (inferior::has_execution): New.
+	* linux-thread-db.c (thread_db_target::update_thread_list): Use
+	inferior::has_execution instead of target_has_execution_1.
+	* process-stratum-target.c
+	(process_stratum_target::has_execution): Change parameter type to
+	inferior pointer.  Check the inferior's PID instead of
+	inferior_ptid.
+	* process-stratum-target.h
+	(process_stratum_target::has_execution): Change parameter type to
+	inferior pointer.
+	* record-full.c (record_full_core_target::has_execution): Change
+	parameter type to inferior pointer.
+	* target.c (target_has_execution_1): Change parameter type to
+	inferior pointer.
+	(target_has_execution_current): Adjust.
+	* target.h (target_ops::has_execution): Change parameter type to
+	inferior pointer.
+	(target_has_execution_1): Change parameter type to inferior
+	pointer.  Change return type to bool.
+	* tracefile.h (tracefile_target::has_execution): Change parameter
+	type to inferior pointer.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* exceptions.c (print_flush): Remove current_top_target() check.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (show_remote_exec_file): Show the current inferior's
+	exec-file instead of the command variable's value.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* record-full.c (record_full_resume_ptid): New global.
+	(record_full_target::resume): Set it.
+	(record_full_wait_1): Use record_full_resume_ptid instead of
+	inferior_ptid.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdbthread.h (scoped_restore_current_thread)
+	<dont_restore, restore, m_dont_restore>: Declare.
+	* thread.c (thread_alive): Add assertion.  Return bool.
+	(switch_to_thread_if_alive): New.
+	(prune_threads): Switch inferior/thread.
+	(print_thread_info_1): Switch thread before calling target methods.
+	(scoped_restore_current_thread::restore): New, factored out from
+	...
+	(scoped_restore_current_thread::~scoped_restore_current_thread):
+	... this.
+	(scoped_restore_current_thread::scoped_restore_current_thread):
+	Add assertion.
+	(thread_apply_all_command, thread_select): Use
+	switch_to_thread_if_alive.
 
-	* infrun.c (disable_thread_events): Delete.
-	(stop_all_threads): Use SCOPE_EXIT.
+2020-01-10  George Barrett  <bob@bob131.so>
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Pedro Alves  <palves@redhat.com>
+	* stap-probe.c (stap_modify_semaphore): Don't check for null
+	semaphores.
+	(stap_probe::set_semaphore, stap_probe::clear_semaphore): Check
+	for null semaphores.
 
-	* symfile.c: Include forward-scope-exit.h.
-	(clear_symtab_users_cleanup): Replace forward declaration with
-	a FORWARD_SCOPE_EXIT.
-	(syms_from_objfile_1): Use the forward_scope_exit and
-	gdb::optional instead of cleanup_function.
-	(reread_symbols): Use the forward_scope_exit instead of
-	cleanup_function.
-	(clear_symtab_users_cleanup): Remove function.
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Pedro Alves  <palves@redhat.com>
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Update
+	all source windows, and maintain horizontal scroll status while
+	doing so.
 
-	* linux-nat.c: Include scope-exit.h.
-	(cleanup_target_stop): Remove.
-	(linux_nat_target::static_tracepoint_markers_by_strid): Use
-	SCOPE_EXIT.
+2020-01-09  Tom Tromey  <tom@tromey.com>
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Pedro Alves  <palves@redhat.com>
+	PR tui/18932:
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Call
+	update_source_window, not print_source_lines.
 
-	* infcall.c (cleanup_delete_std_terminate_breakpoint): Remove.
-	(call_function_by_hand_dummy): Use SCOPE_EXIT.
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Pedro Alves  <palves@redhat.com>
+	* tui/tui.c (tui_enable): Register tui hooks after calling
+	tui_display_main.
 
-	* infrun.c (fetch_inferior_event): Use scope_exit.
-	* utils.h (make_bpstat_clear_actions_cleanup): Don't declare.
-	* top.c (execute_command): Use scope_exit.
-	* breakpoint.c (bpstat_do_actions): Use scope_exit.
-	* utils.c (do_bpstat_clear_actions_cleanup)
-	(make_bpstat_clear_actions_cleanup): Remove.
+2020-01-09  Christian Biesinger  <cbiesinger@google.com>
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Pedro Alves  <palves@redhat.com>
+	* gdbsupport/common-defs.h: Don't define _FORTIFY_SOURCE on MinGW.
 
-	* infrun.c: Include "common/scope-exit.h"
-	(delete_just_stopped_threads_infrun_breakpoints_cleanup): Remove.
-	(wait_for_inferior): Use SCOPE_EXIT.
-	(fetch_inferior_event): Use scope_exit.
+2020-01-08  Simon Marchi  <simon.marchi@efficios.com>
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Pedro Alves  <palves@redhat.com>
+	* thread.c (print_thread_info_1): Fix indentation.
 
-	* breakpoint.c (create_breakpoint): Remove cleanup.
+2020-01-09  Christian Biesinger  <cbiesinger@google.com>
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
-	    Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Pedro Alves  <palves@redhat.com>
+	* symtab.c (general_symbol_info::compute_and_set_names): Move the
+	unique_xmalloc_ptr outside the if to always free the demangled name.
 
-2019-01-23  Pedro Alves  <palves@redhat.com>
+2020-01-08  Tom Tromey  <tromey@adacore.com>
 
-	* gdbarch-selftests.c (struct on_exit): Use SCOPE_EXIT.
+	* xcoffread.c (enter_line_range, read_xcoff_symtab)
+	(process_xcoff_symbol, xcoff_symfile_offsets): Update.
+	* symtab.h (MSYMBOL_VALUE_ADDRESS): Update.
+	(struct section_offsets, ANOFFSET, SIZEOF_N_SECTION_OFFSETS):
+	Remove.
+	(section_offsets): New typedef.
+	* symtab.c (fixup_section, get_msymbol_address): Update.
+	* symmisc.c (dump_msymbols): Update.
+	* symfile.h (relative_addr_info_to_section_offsets)
+	(symfile_map_offsets_to_segments): Update.
+	* symfile.c (build_section_addr_info_from_objfile)
+	(init_objfile_sect_indices): Update.
+	(struct place_section_arg): Change type of "offsets".
+	(place_section): Update.
+	(relative_addr_info_to_section_offsets): Change type of
+	"section_offsets".  Remove "num_sections" parameter.
+	(default_symfile_offsets, syms_from_objfile_1)
+	(set_objfile_default_section_offset): Update.
+	(reread_symbols): No need to preserve section offsets by hand.
+	(symfile_map_offsets_to_segments): Change type of "offsets".
+	* stap-probe.c (relocate_address): Update.
+	* stabsread.h (process_one_symbol): Update.
+	* solib-target.c (struct lm_info_target) <offsets>: Change type.
+	(solib_target_relocate_section_addresses): Update.
+	* solib-svr4.c (enable_break, svr4_relocate_main_executable):
+	Update.
+	* solib-frv.c (frv_relocate_main_executable): Update.
+	* solib-dsbt.c (dsbt_relocate_main_executable): Update.
+	* solib-aix.c (solib_aix_get_section_offsets): Change return
+	type.
+	(solib_aix_solib_create_inferior_hook): Update.
+	* remote.c (remote_target::get_offsets): Update.
+	* psymtab.c (find_pc_sect_psymtab): Update.
+	* psympriv.h (struct partial_symbol) <address, text_low,
+	text_high>: Update.
+	* objfiles.h (obj_section_offset): Update.
+	(struct objfile) <section_offsets>: Change type.
+	<num_sections>: Remove.
+	(objfile_relocate): Update.
+	* objfiles.c (entry_point_address_query): Update
+	(relocate_one_symbol): Change type of "section_offsets".
+	(objfile_relocate1, objfile_relocate1): Change type of
+	"new_offsets".
+	(objfile_rebase1): Update.
+	* mipsread.c (mipscoff_symfile_read): Update.
+	(read_alphacoff_dynamic_symtab): Remove "section_offsets"
+	parameter.
+	* mdebugread.c (parse_symbol): Change type of "section_offsets".
+	(parse_external, psymtab_to_symtab_1): Update.
+	* machoread.c (macho_symfile_offsets): Update.
+	* ia64-tdep.c (ia64_find_unwind_table): Update.
+	* hppa-tdep.c (read_unwind_info): Update.
+	* hppa-bsd-tdep.c (hppabsd_find_global_pointer): Update.
+	* dwarf2read.c (create_addrmap_from_index)
+	(create_addrmap_from_aranges, dw2_find_pc_sect_compunit_symtab)
+	(process_psymtab_comp_unit_reader, add_partial_symbol)
+	(add_partial_subprogram, process_full_comp_unit)
+	(read_file_scope, read_func_scope, read_lexical_block_scope)
+	(read_call_site_scope, dwarf2_rnglists_process)
+	(dwarf2_ranges_process, dwarf2_ranges_read)
+	(dwarf_decode_lines_1, var_decode_location, new_symbol)
+	(dwarf2_fetch_die_loc_sect_off, dwarf2_per_cu_text_offset):
+	Update.
+	* dwarf2-frame.c (execute_cfa_program, dwarf2_frame_find_fde):
+	Update.
+	* dtrace-probe.c (dtrace_probe::get_relocated_address): Update.
+	* dbxread.c (read_dbx_symtab, read_ofile_symtab): Update.
+	(process_one_symbol): Change type of "section_offsets".
+	* ctfread.c (get_objfile_text_range): Update.
+	* coffread.c (coff_symtab_read, enter_linenos)
+	(process_coff_symbol): Update.
+	* coff-pe-read.c (add_pe_forwarded_sym): Update.
+	* amd64-windows-tdep.c (amd64_windows_find_unwind_info): Update.
 
-2019-01-23  Pedro Alves  <palves@redhat.com>
-	    Andrew Burgess  <andrew.burgess@embecosm.com>
+2020-01-08  Tom Tromey  <tromey@adacore.com>
 
-	* gdbthread.h: Include "common/forward-scope-exit.h".
-	(scoped_finish_thread_state): Redefine custom class in terms of
-	forward_scope_exit.
+	* dwarf2read.c (parse_macro_definition): Use std::string.
+	(parse_macro_definition): Likewise.
 
-2019-01-23  Pedro Alves  <palves@redhat.com>
-	    Andrew Burgess  <andrew.burgess@embecosm.com>
+2020-01-08  Tom Tromey  <tromey@adacore.com>
 
-	* common/forward-scope-exit.h: New file.
+	* dwarf2read.c (abbrev_table_read_table): Use std::vector.
+	(ATTR_ALLOC_CHUNK): Remove.
 
-2019-01-23  Pedro Alves  <palves@redhat.com>
-	    Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Tom Tromey  <tom@tromey.com>
+2020-01-08  Tom Tromey  <tromey@adacore.com>
 
-	* common/scope-exit.h: New file.
+	* dwarf2read.c (fixup_go_packaging): Use unique_xmalloc_ptr.
 
-2019-01-23  Pedro Alves  <palves@redhat.com>
+2020-01-08  Tom Tromey  <tromey@adacore.com>
 
-	* common/preprocessor.h (ESC): Rename to ...
-	(ESC_PARENS): ... this.
-	* common/valid-expr.h (CHECK_VALID_EXPR_1, CHECK_VALID_EXPR_2)
-	(CHECK_VALID_EXPR_3, CHECK_VALID_EXPR_4): Adjust.
+	* dwarf2read.c (add_partial_symbol): Use unique_xmalloc_ptr.
+	(dwarf2_compute_name, open_dwo_file): Likewise.
+	(process_enumeration_scope): Use std::vector.
+	(guess_partial_die_structure_name): Use unique_xmalloc_ptr.
+	(partial_die_info::fixup, dwarf2_start_subfile)
+	(guess_full_die_structure_name, dwarf2_name): Likewise.
+	(determine_prefix): Update.
+	(guess_full_die_structure_name): Make return type const.
+	(partial_die_full_name): Return unique_xmalloc_ptr.
+	(DW_FIELD_ALLOC_CHUNK): Remove.
 
-2019-01-23  Tom Tromey  <tom@tromey.com>
+2020-01-07  Tom Tromey  <tromey@adacore.com>
 
-	* language.h (class scoped_switch_to_sym_language_if_auto):
-	Initialize m_lang in both cases.
+	PR build/24937:
+	* stap-probe.c (class stap_static_probe_ops): Add constructor.
 
-2019-01-23  Alan Hayward  <alan.hayward@arm.com>
+2020-01-02  Jon Turney  <jon.turney@dronecode.org.uk>
 
-	* nat/aarch64-linux.c (aarch64_linux_new_thread): Replace XNEW
-	with XCNEW.
+	* cli/cli-style.c: Set cli_styling to 'true' in the Cygwin build.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-06  Andrew Burgess  <andrew.burgess@embecosm.com>
 
-	* corelow.c: Do not include sys/file.h.
+	* stack.c (print_frame_info): Move disassemble_next_line code
+	inside source_print block.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
 
-	* tui/tui-wingeneral.h: Include gdb_curses.h.
+	* gdbsupport/gdb_wait.c: Include <signal.h> instead of
+	gdb/signals.h, as we are now using native signal symbols.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-06  Shahab Vahedi  <shahab@synopsys.com>
 
-	* source-cache.h (class source_cache) <get_source_lines,
-	get_plain_source_lines, extract_lines>: Rename "lines" parameter.
+	* tui/tui-disasm.c (tui_disasm_window::addr_is_displayed): Avoid
+	overflow by an early check of content vs threshold.
+        * tui/tui-source.c (tui_source_window::line_is_displayed):
+	Likewise.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
 
-	* remote-fileio.h (struct remote_target): Declare.
+	* NEWS: Mention the recent fix of $_exitsignal on MS-Windows.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-02  Jon Turney  <jon.turney@dronecode.org.uk>
 
-	* python/py-arch.c: Do not include py-ref.h.
-	* python/py-bpevent.c: Do not include py-ref.h.
-	* python/py-cmd.c: Do not include py-ref.h.
-	* python/py-continueevent.c: Do not include py-ref.h.
-	* python/py-event.h: Do not include py-ref.h.
-	* python/py-evtregistry.c: Do not include py-ref.h.
-	* python/py-finishbreakpoint.c: Do not include py-ref.h.
-	* python/py-frame.c: Do not include py-ref.h.
-	* python/py-framefilter.c: Do not include py-ref.h.
-	* python/py-function.c: Do not include py-ref.h.
-	* python/py-infevents.c: Do not include py-ref.h.
-	* python/py-linetable.c: Do not include py-ref.h.
-	* python/py-objfile.c: Do not include py-ref.h.
-	* python/py-param.c: Do not include py-ref.h.
-	* python/py-prettyprint.c: Do not include py-ref.h.
-	* python/py-progspace.c: Do not include py-ref.h.
-	* python/py-symbol.c: Do not include py-ref.h.
-	* python/py-symtab.c: Do not include py-ref.h.
-	* python/py-type.c: Do not include py-ref.h.
-	* python/py-unwind.c: Do not include py-ref.h.
-	* python/py-utils.c: Do not include py-ref.h.
-	* python/py-value.c: Do not include py-ref.h.
-	* python/py-varobj.c: Do not include py-ref.h.
-	* python/py-xmethods.c: Do not include py-ref.h.
-	* python/python.c: Do not include py-ref.h.
-	* varobj.c: Do not include py-ref.h.
+	* coff-pe-read.c (read_pe_exported_syms): Don't try to read the
+	export table if no section contains it's RVA.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
 
-	* objfiles.h (struct objfile_per_bfd_storage): Use "struct"
-	keyword for bcache.
+	* windows-tdep.c: Fix a typo in WINDOWS_SIGABRT.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-06  Hannes Domani  <ssbssa@yahoo.de>
 
-	* compile/compile-cplus-types.c: Remove a comment by #include.
+	* source.c (print_source_lines_base): Set last_line_listed.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-06  Shahab Vahedi  <shahab@synopsys.com>
 
-	* compile/gcc-c-plugin.h: Include compile-internal.h.
+	* tui/tui-disasm.c: Remove trailing spaces.
 
-2019-01-22  Tom Tromey  <tom@tromey.com>
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
+	    Pedro Alves  <palves@redhat.com>
 
-	* stabsread.c (EXTERN): Do not define.
-	(symnum, next_symbol_text_func, processing_gcc_compilation)
-	(within_function, global_sym_chain, global_stabs)
-	(previous_stab_code, this_object_header_files)
-	(n_this_object_header_files)
-	(n_allocated_this_object_header_files): Define.
-	* stabsread.h (EXTERN): Never define.  Use "extern".
+	* Makefile.in (COMMON_SFILES): Add gdbsupport/gdb_wait.c.
+	* windows-tdep.c: New enumeration of WINDOWS_SIG* signals.
+	(windows_gdb_signal_to_target): New function, uses the above
+	enumeration to convert GDB internal signal codes to equivalent
+	Windows codes.
+	(windows_init_abi): Call set_gdbarch_gdb_signal_to_target.
+	* windows-nat.c: Include "gdb_wait.h".
+	(get_windows_debug_event): Extract the fatal exception from the
+	exit status and convert to the equivalent Posix signal number.
+	* cli/cli-cmds.c (exit_status_set_internal_vars): Account for the
+	possibility that WTERMSIG returns GDB_SIGNAL_UNKNOWN.
+	* gdbsupport/gdb_wait.c: New file, implements
+	windows_status_to_termsig.
+	* gdbsupport/gdb_wait.h (WIFEXITED, WIFSIGNALED, WEXITSTATUS)
+	(WTERMSIG) [__MINGW32__]: Separate definitions for MinGW.
+
+2020-01-05  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tui/tui-layout.c (tui_add_win_to_layout): Use tui_set_layout not
+	show_layout.
+
+2020-01-05  Luis Machado  <luis.machado@linaro.org>
 
-2019-01-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	* aarch64-linux-nat.c
+	(aarch64_linux_nat_target::thread_architecture): Use bfd_arch_aarch64
+	and bfd_mach_aarch64.
 
-	* event-top.c (handle_line_of_input): use unique_xmalloc_ptr for
-	history_value.
+2020-01-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
 
-2019-01-21  Tom Tromey  <tom@tromey.com>
+	* ui-file.c (stdio_file::can_emit_style_escape)
+	(tee_file::can_emit_style_escape): Ensure style is used also on
+	gdb_stderr when gdb_stderr is a tty supporting styling, similarly
+	to gdb_stdout.
+	* main.c (set_gdb_data_directory): Use file style to output the
+	warning that the given pathname is not a directory.
+	* top.c (show_history_filename, gdb_safe_append_history)
+	(show_gdb_datadir): Use file style.
 
-	* ui-out.c: Fix includes.
-	* tui/tui-source.c: Fix includes.
-	* target.c: Fix includes.
-	* remote.c: Fix includes.
-	* regcache.c: Fix includes.
-	* python/py-block.c: Fix includes.
-	* printcmd.c: Fix includes.
-	* or1k-tdep.c: Fix includes.
-	* mi/mi-main.c: Fix includes.
-	* m32r-tdep.c: Fix includes.
-	* csky-tdep.c: Fix includes.
-	* compile/compile-cplus-types.c: Fix includes.
-	* cli/cli-interp.c: Fix includes.
+2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
 
-2019-01-21  Alan Hayward  <alan.hayward@arm.com>
+	* solib-target.c (struct lm_info_target):
+	Change offsets to be a unique_xmalloc_ptr.
+	(solib_target_relocate_section_addresses): Update.
 
-	* aarch64-tdep.c (aapcs_is_vfp_call_or_return_candidate_1): Check
-	for padding.
+2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
 
-2019-01-16  Tom Tromey  <tom@tromey.com>
+	* windows-nat.c (windows_clear_solib): Free so_list linked list.
 
-	* objfiles.h (struct minimal_symbol_iterator): Rename.  Move
-	earlier.
-	(struct objfile) <msymbols_range>: Move from top level.
-	<msymbols>: New method.
-	(class objfile_msymbols): Remove.
-	* symtab.c (default_collect_symbol_completion_matches_break_on):
-	Update.
-	* symmisc.c (dump_msymbols): Update.
-	* stabsread.c (scan_file_globals): Update.
-	* objc-lang.c (info_selectors_command, info_classes_command)
-	(find_methods): Update.
-	* minsyms.c (find_solib_trampoline_target): Update.
-	* hppa-tdep.c (hppa_lookup_stub_minimal_symbol): Update.
-	* coffread.c (coff_symfile_read): Update.
-	* ada-lang.c (ada_lookup_simple_minsym)
-	(ada_collect_symbol_completion_matches): Update.
-
-2019-01-16  Tom Tromey  <tom@tromey.com>
-
-	* objfiles.h (class objfile_msymbols) <iterator>: Change argument
-	type.  Remove no-argument constructor.
-	<iterator::operator++>: Simplify.
-	<begin>: Update.
-	<end>: Use minimal_symbol_count.
-
-2019-01-16  Tom Tromey  <tom@tromey.com>
-
-	* objfiles.h (struct objfile) <psymtabs>: New method.
-	(class objfile_psymtabs): Remove.
-	* psymtab.h (class psymtab_storage) <partial_symtab_range>: New
-	typedef.
-	<range>: New method.
-	(require_partial_symbols): Change return type.
-	* psymtab.c (require_partial_symbols)
-	(psym_expand_symtabs_matching): Update.
-	* mdebugread.c (parse_partial_symbols): Update.
-	* dbxread.c (dbx_end_psymtab): Update.
-
-2019-01-15  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (lookup_objfile_from_block)
-	(lookup_symbol_in_objfile_symtabs)
-	(basic_lookup_transparent_type_1, find_pc_sect_compunit_symtab)
-	(find_line_symtab, info_sources_command)
-	(default_collect_symbol_completion_matches_break_on)
-	(make_source_files_completion_list): Update.
-	* symmisc.c (print_objfile_statistics, dump_objfile)
-	(maintenance_print_symbols, maintenance_info_symtabs)
-	(maintenance_check_symtabs, maintenance_info_line_tables):
-	Update.
-	* source.c (select_source_symtab)
-	(forget_cached_source_info_for_objfile): Update.
-	* objfiles.h (class objfile_compunits): Remove.
-	(struct objfile) <compunits_range>: New typedef.
-	(compunits): New method.
-	* objfiles.c (objfile_relocate1): Update.
-	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Update.
-	* maint.c (count_symtabs_and_blocks): Update.
-	* linespec.c (iterate_over_all_matching_symtabs): Update.
-	* cp-support.c (add_symbol_overload_list_qualified): Update.
-	* coffread.c (coff_symtab_read): Update.
-	* ada-lang.c (add_nonlocal_symbols)
-	(ada_collect_symbol_completion_matches)
-	(ada_add_global_exceptions): Update.
-
-2019-01-15  Tom Tromey  <tom@tromey.com>
-
-	* progspace.h (program_space) <objfiles_safe_range>: New
-	typedef.
-	<objfiles_safe>: New method.
-	* objfiles.h (class all_objfiles_safe): Remove.
-	* objfiles.c (free_all_objfiles, objfile_purge_solibs): Update.
-	* jit.c (jit_inferior_exit_hook): Update.
-
-2019-01-17  Tom Tromey  <tom@tromey.com>
-
-	* progspace.h (program_space) <objfiles_range>: New typedef.
-	<objfiles>: New method.
-	<objfiles_head>: Rename from objfiles.
-	(object_files): Update.
-	* guile/scm-progspace.c (gdbscm_progspace_objfiles): Update.
-	* guile/scm-pretty-print.c
-	(ppscm_find_pretty_printer_from_objfiles): Update.
-	* guile/scm-objfile.c (gdbscm_objfiles): Update.
-	* python/py-xmethods.c (gdbpy_get_matching_xmethod_workers):
-	Update.
-	* python/py-progspace.c (pspy_get_objfiles): Update.
-	* python/py-prettyprint.c (find_pretty_printer_from_objfiles):
-	Update.
-	* python/py-objfile.c (objfpy_lookup_objfile_by_name)
-	(objfpy_lookup_objfile_by_build_id): Update.
-	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Update.
-	* windows-tdep.c (windows_iterate_over_objfiles_in_search_order):
-	Update.
-	* symtab.c (iterate_over_symtabs, matching_obj_sections)
-	(expand_symtab_containing_pc, lookup_objfile_from_block)
-	(lookup_static_symbol, basic_lookup_transparent_type)
-	(find_pc_sect_compunit_symtab, find_symbol_at_address)
-	(find_line_symtab, info_sources_command)
-	(default_collect_symbol_completion_matches_break_on)
-	(make_source_files_completion_list, find_main_name): Update.
-	* symmisc.c (print_symbol_bcache_statistics)
-	(print_objfile_statistics, maintenance_print_symbols)
-	(maintenance_print_msymbols, maintenance_print_objfiles)
-	(maintenance_info_symtabs, maintenance_check_symtabs)
-	(maintenance_expand_symtabs, maintenance_info_line_tables):
-	Update.
-	* symfile.c (remove_symbol_file_command, overlay_invalidate_all)
-	(find_pc_overlay, find_pc_mapped_section, list_overlays_command)
-	(map_overlay_command, unmap_overlay_command)
-	(simple_overlay_update, expand_symtabs_matching)
-	(map_symbol_filenames): Update.
-	* symfile-debug.c (set_debug_symfile): Update.
-	* spu-tdep.c (spu_overlay_update, spu_objfile_from_frame):
-	Update.
-	* source.c (select_source_symtab, forget_cached_source_info):
-	Update.
-	* solib.c (solib_read_symbols): Update.
-	* solib-spu.c (append_ocl_sos): Update.
-	* psymtab.c (maintenance_print_psymbols)
-	(maintenance_info_psymtabs, maintenance_check_psymtabs): Update.
-	* probe.c (parse_probes_in_pspace, find_probe_by_pc): Update.
-	* printcmd.c (info_symbol_command): Update.
-	* ppc-linux-tdep.c (ppc_linux_spe_context_inferior_created):
-	Update.
-	* objfiles.h (class all_objfiles): Remove.
-	* objfiles.c (have_partial_symbols, have_full_symbols)
-	(have_minimal_symbols, qsort_cmp, update_section_map)
-	(shared_objfile_contains_address_p)
-	(default_iterate_over_objfiles_in_search_order): Update.
-	* objc-lang.c (info_selectors_command, info_classes_command)
-	(find_methods): Update.
-	* minsyms.c (find_solib_trampoline_target): Update.
-	* maint.c (maintenance_info_sections)
-	(maintenance_translate_address, count_symtabs_and_blocks):
-	Update.
-	* main.c (captured_main_1): Update.
-	* linux-thread-db.c (try_thread_db_load_from_pdir)
-	(has_libpthread): Update.
-	* linespec.c (iterate_over_all_matching_symtabs)
-	(search_minsyms_for_name): Update.
-	* jit.c (jit_find_objf_with_entry_addr): Update.
-	* hppa-tdep.c (find_unwind_entry)
-	(hppa_lookup_stub_minimal_symbol): Update.
-	* gcore.c (gcore_create_callback, objfile_find_memory_regions):
-	Update.
-	* elfread.c (elf_gnu_ifunc_resolve_by_cache)
-	(elf_gnu_ifunc_resolve_by_got): Update.
-	* dwarf2-frame.c (dwarf2_frame_find_fde): Update.
-	* dwarf-index-write.c (save_gdb_index_command): Update.
-	* cp-support.c (add_symbol_overload_list_qualified): Update.
-	* breakpoint.c (create_overlay_event_breakpoint)
-	(create_longjmp_master_breakpoint)
-	(create_std_terminate_master_breakpoint)
-	(create_exception_master_breakpoint): Update.
-	* blockframe.c (find_pc_partial_function): Update.
-	* ada-lang.c (ada_lookup_simple_minsym, add_nonlocal_symbols)
-	(ada_collect_symbol_completion_matches)
-	(ada_add_global_exceptions): Update.
-
-2019-01-17  Tom Tromey  <tom@tromey.com>
-
-	* solib-target.c (lm_info_target_p): Remove typedef.  Don't
-	declare VEC.
-	(solib_target_parse_libraries): Change return type.
-	(library_list_start_segment, library_list_start_section)
-	(library_list_end_library, library_list_start_library); Update.
-	(solib_target_free_library_list): Remove.
-	(solib_target_parse_libraries): Remove cleanup.  Change return
-	type.
-	(solib_target_current_sos): Update.
-
-2019-01-17  Tom Tromey  <tromey@bapiya>
-
-	* valprint.c: Replace "the the" with "the".
-	* symtab.c: Replace "the the" with "the".
-	* solib.c: Replace "the the" with "the".
-	* solib-dsbt.c: Replace "the the" with "the".
-	* linespec.c: Replace "the the" with "the".
-	* dwarf2loc.h: Replace "the the" with "the".
-	* amd64-windows-tdep.c: Replace "the the" with "the".
-	* aarch64-tdep.c: Replace "the the" with "the".
-
-2019-01-16  Keith Seitz  <keiths@redhat.com>
-
-	PR gdb/23773
-	* dwarf2read.c (dwarf2_cu) <ancestor>: New field.
-	<builder>: Rename to ..
-	<m_builder>: ... this and make private.
-	(dwarf2_cu::get_builder): New method.  Change all users of
-	`builder' to use this method.
-	(dwarf2_start_symtab): Move to ...
-	(dwarf2_cu::start_symtab): ... here.  Update all callers
-	(setup_type_unit_groups): Move to ...
-	(dwarf2_cu::setup_type_unit_groups): ... here.  Update all
-	callers.
-	(dwarf2_cu::reset_builder): New method.
-	(process_full_compunit, process_full_type_unit): Use
-	dwarf2_cu::reset_builder.
-	(follow_die_offset): Record the ancestor CU if it is different
-	from the followed DIE's CU.
-	(follow_die_sig_1): Likewise.
-
-2019-01-15  Tom Tromey  <tom@tromey.com>
-
-	* remote.c (class remote_state) <buf>: Now a char_vector.
-	<buf_size>: Remove.
-	(remote_target::getpkt): Change type of buf.  Remove sizeof_buf
-	parameter.
-	(remote_target::getpkt_or_notif_sane_1)
-	(remote_target::getpkt_sane)
-	(remote_target::getpkt_or_notif_sane): Likewise.
-	(class remote_target) <putpkt>: New overload.
-	(remote_target::read_frame): Change type of "buf_p".  Remove
-	sizeof_p parameter.
-	(packet_ok): New overload.
-	(packet_check_result): New overload.
-	Update all uses.
-
-2019-01-14  Tom Tromey  <tom@tromey.com>
-
-	* remote-notif.c (handle_notification, remote_notif_ack)
-	(remote_notif_parse): Make "buf" const.
-	* remote-notif.h (struct notif_client) <parse, ack>: Make "buf"
-	const.
-	(remote_notif_parse, remote_notif_ack, handle_notification):
-	Likewise.
-	* remote.c (remote_notif_stop_parse): Make "buf" const.
-	(remote_target::remote_parse_stop_reply): Make "buf" const.
-	(remote_notif_stop_ack): Make "buf" const.
+2020-01-03  Bernd Edlinger  <bernd.edlinger@hotmail.de>
 
-2019-01-14  Tom Tromey  <tom@tromey.com>
+	* MAINTAINERS (Write After Approval): Add myself.
 
-	* remote.c (remote_console_output): Make parameter const.
+2020-01-02  Luis Machado  <luis.machado@linaro.org>
 
-2019-01-14  Tom Tromey  <tom@tromey.com>
+	* proc-service.c (get_ps_regcache): Remove reference to obsolete
+	Cell BE architecture.
+	* target.h (struct target_ops) <thread_architecture>: Likewise.
 
-	* target-debug.h (target_debug_print_signals): Constify.
-	* nto-procfs.c (nto_procfs_target::pass_signals): Update.
-	* procfs.c (procfs_target::pass_signals): Update.
-	* linux-nat.c (linux_nat_target::pass_signals): Update.
-	* linux-nat.h (class linux_nat_target) <pass_signals>: Update.
-	* target-delegates.c: Rebuild.
-	* remote.c (remote_target::program_signals): Update.
-	(remote_target::pass_signals): Update.
-	* target.c (target_pass_signals): Constify argument.
-	(target_program_signals): Likewise.
-	* target.h (struct target_ops) <pass_signals, program_signals>:
-	Constify argument.
-	(target_pass_signals, target_program_signals): Constify argument.
+2020-01-01  Hannes Domani  <ssbssa@yahoo.de>
 
-2019-01-14  Tom Tromey  <tom@tromey.com>
+	* Makefile.in: Use INSTALL_PROGRAM_ENV.
 
-	PR tui/28819:
-	* tui/tui-io.c (gdb_wgetch): Print \r when needed.
+2020-01-01  Hannes Domani  <ssbssa@yahoo.de>
 
-2019-01-14  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
+	* MAINTAINERS (Write After Approval): Add myself.
 
-	* ppc-tdep.h (struct gdbarch_tdep) <ppc_v0_alias_regnum>: New
-	field.
-	* rs6000-tdep.c: Include reggroups.h.
-	(IS_V_ALIAS_PSEUDOREG): Define.
-	(rs6000_register_name): Return names for the "vX" aliases.
-	(rs6000_pseudo_register_type): Return type for the "vX" aliases.
-	(rs6000_pseudo_register_reggroup_p): Restore.  Handle "vX"
-	aliases.  Call default_register_reggroup_p for all other
-	pseudo-registers.
-	(v_alias_pseudo_register_read, v_alias_pseudo_register_write):
-	New functions.
-	(rs6000_pseudo_register_read, rs6000_pseudo_register_write):
-	Handle "vX" aliases.
-	(v_alias_pseudo_register_collect): New function.
-	(rs6000_ax_pseudo_register_collect): Handle "vX" aliases.
-	(rs6000_gdbarch_init): Initialize "vX" aliases as
-	pseudo-registers.  Restore registration of
-	rs6000_pseudo_register_reggroup_p with
-	set_tdesc_pseudo_register_reggroup_p.
-
-2019-01-13  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* xtensa-linux-tdep.c (xtensa_linux_init_abi): Update
-	tdep->num_pseudo_regs. Add calls to set_gdbarch_num_regs and
-	set_gdbarch_num_pseudo_regs.
-
-2019-01-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-style.h (class cli_style_option): <add_setshow_commands>
-	Remove arg prefixname, add do_set and do_show.
-	Add member functions set_list and show_list.
-	* cli/cli-style.c (class cli_style_option): Update accordingly.
-	(style_set_list): Move to file scope.
-	(style_show_list): Likewise.
-	(set_style): Call help_list.
-	(show_style): Call cmd_show_list.
-	(_initialize_cli_style): New macro STYLE_ADD_SETSHOW_COMMANDS.
-	Update to use the new macro.
-
-2019-10-12  Joel Brobecker  <brobecker@adacore.com>
-
-	* ada-lang.c (_initialize_ada_language): Expand the help text
-	for the "catch exception" command.
-
-2019-01-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* symtab.c (matching_obj_sections): Initialize obj,
-	declare it closer to its usage.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* thread-iter.h (inf_threads_iterator): Use next_iterator.
-	(basic_inf_threads_range): Remove.
-	(inf_threads_range, inf_non_exited_threads_range)
-	(safe_inf_threads_range): Use next_adapter.
-
-2019-01-10  Keith Seitz  <keiths@redhat.com>
-
-	PR gdb/23712
-	PR symtab/23010
-	* dwarf2read.c (dw2_add_symbol_to_list): Remove.
-	(fixup_go_packaging, new_symbol): Use add_symbol_to_list.
-
-2019-01-10  Keith Seitz  <keiths@redhat.com>
-
-	PR gdb/23712
-	PR symtab/23010
-	* dictionary.c (pending_to_vector): Remove.
-	(dict_create_hashed_1, dict_create_linear_1, dict_add_pending_1):
-	Remove _1 suffix, replacing functions of the same name.  Update
-	all callers.
-	(dict_create_hashed, dict_create_hashed_expandable)
-	(dict_create_linear, dict_create_linear_expandable, dict_free)
-	(dict_add_symbol, dict_add_pending, dict_size, dict_empty):
-	Make functions static.
-
-2019-01-10  Keith Seitz  <keiths@redhat.com>
-
-	PR gdb/23712
-	PR symtab/23010
-	* dictionary.h (struct dictionary): Replace declaration with
-	multidictionary.
-	(dict_create_hashed, dict_create_hashed_expandable)
-	(dict_create_linear, dict_create_linear_expandable)
-	(dict_free, dict_add_symbol, dict_add_pending, dict_empty)
-	(dict_iterator_first, dict_iterator_next, dict_iter_match_first)
-	(dict_iter_match_next, dict_size): Rename to "mdict_" versions
-	taking multidictionary argument.
-	[ALL_DICT_SYMBOLS]: Update for multidictionary.
-	* block.h (struct block) <dict>: Change to multidictionary
-	and rename `multidict'.
-	* block.c, buildsym.c, jit.c, mdebugread.c, objfiles.c,
-	symmisc.c: Update all dictionary references to multidictionary.
-
-2019-01-10  Keith Seitz  <keiths@redhat.com>
-
-	PR gdb/23712
-	PR symtab/23010
-	* dictionary.c: Include unordered_map.
-	(pending_to_vector): New function.
-	(dict_create_hashed_1, dict_create_linear_1, dict_add_pending_1):
-	Rewrite the non-"_1" functions to take vector instead
-	of linked list.
-	(dict_create_hashed, dict_create_linear, dict_add_pending): Use the
-	"new" _1 versions of the same name.
-	(multidictionary): Define.
-	(std::hash<enum language): New definition.
-	(collate_pending_symbols_by_language, mdict_create_hashed)
-	(mdict_create_hashed_expandable, mdict_create_linear)
-	(mdict_create_linear_expandable, mdict_free)
-	(find_language_dictionary, create_new_language_dictionary)
-	(mdict_add_symbol, mdict_add_pending, mdict_iterator_first)
-	(mdict_iterator_next, mdict_iter_match_first, mdict_iter_match_next)
-	(mdict_size, mdict_empty): New functions.
-	* dictionary.h (mdict_iterator): Define.
-
-2019-01-10  Pedro Alves  <palves@redhat.com>
-
-	* breakpoint.c (read_uploaded_action)
-	(create_tracepoint_from_upload): Adjust to use
-	gdb::unique_xmalloc_ptr.
-	* ctf.c (ctf_write_uploaded_tp):
-	(SET_ARRAY_FIELD): Use emplace_back.
-	(SET_STRING_FIELD): Adjust to use gdb::unique_xmalloc_ptr.
-	* tracefile-tfile.c (tfile_write_uploaded_tp):
-	* tracepoint.c (parse_tracepoint_definition): Adjust to use
-	gdb::unique_xmalloc_ptr.
-	* tracepoint.h (struct uploaded_tp) <cond, actions, step_actions,
-	at_string, cond_string, cmd_strings>: Replace char pointers
-	with gdb::unique_xmalloc_ptr.
-
-2019-01-10  Pedro Alves  <palves@redhat.com>
-
-	* solib-target.c (library_list_start_library): Don't xstrdup name.
-
-2019-01-10  Pedro Alves  <palves@redhat.com>
-
-	* mdebugread.c (parse_partial_symbols): Use
-	gdb::unique_xmalloc_ptr to manage heap-allocated 'stabsstring'.
-
-2019-01-10  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* linux-fork.c (scoped_switch_fork_info)
-	<~scoped_switch_fork_info>: Fix incorrect variable name.
-
-2019-01-10  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* linux-fork.c (scoped_switch_fork_info)
-	<scoped_switch_fork_info>: Make explicit.
-	<~scoped_switch_fork_info>: Wrap core in TRY/CATCH.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* objfiles.h (objfile::reset_psymtabs): Update.
-	* objfiles.c (objfile::objfile): Update.
-	* psymtab.h (psymtab_storage::obstack): Update.
-	(psymtab_storage::m_obstack): Use gdb::optional.
-	(class psymtab_storage): Update comment.  Remove objfile
-	parameter.
-	* psymtab.c (psymtab_storage::psymtab_storage): Update.
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
 
-2019-01-10  Tom Tromey  <tom@tromey.com>
+	* gdbarch.sh: Update copyright year range of generated files.
 
-	* psymtab.h (psymtab_storage::allocate_psymtab): New method.
-	<free_psymtabs>: Now private.
-	* psymtab.c (psymtab_storage::allocate_psymtab): Implement.
-	(allocate_psymtab): Use new method.
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
 
-2019-01-10  Tom Tromey  <tom@tromey.com>
+	Update copyright year range in all GDB files.
 
-	* xcoffread.c (xcoff_end_psymtab): Use allocate_dependencies.
-	* psymtab.h (psymtab_storage::allocate_dependencies): New method.
-	* mdebugread.c (parse_partial_symbols): Use
-	allocate_dependencies.
-	* dwarf2read.c (dwarf2_create_include_psymtab): Use
-	allocate_dependencies.
-	(process_psymtab_comp_unit_reader)
-	(build_type_psymtab_dependencies): Likewise.
-	* dbxread.c (dbx_end_psymtab): Use allocate_dependencies.
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
 
-2019-01-10  Tom Tromey  <tom@tromey.com>
+	* copyright.py: Convert to Python 3.
 
-	* psymtab.c (add_psymbol_to_bcache): Pass psymtab obstack to
-	PSYMBOL_SET_LANGUAGE.
-	(allocate_psymtab): Allocate psymtab on the psymtab obstack.
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
 
-2019-01-10  Tom Tromey  <tom@tromey.com>
+	* copyright.py: Adapt after move of gnulib directory from gdb
+	directory to toplevel directory.
 
-	* psymtab.h (psymtab_storage::obstack): New method.
-	<m_obstack>: Rename from obstack; now private.
-	* psymtab.c (psymtab_storage): Update.
-	* dwarf2read.c (create_addrmap_from_index)
-	(create_addrmap_from_aranges, dwarf2_build_psymtabs_hard):
-	Update.
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
 
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* symfile.c (reread_symbols): Call objfile->reset_psymtabs.
-	* objfiles.h (objfile::reset_psymtabs): New method.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* symmisc.c (print_symbol_bcache_statistics): Update.
-	(print_objfile_statistics): Update.
-	* symfile.c (reread_symbols): Update.
-	* psymtab.h (class psymtab_storage): New.
-	* psymtab.c (psymtab_storage): New constructor.
-	(~psymtab_storage): New destructor.
-	(require_partial_symbols): Update.
-	(ALL_OBJFILE_PSYMTABS_REQUIRED): Rewrite.
-	(find_pc_sect_psymtab, find_pc_sect_psymbol)
-	(match_partial_symbol, lookup_partial_symbol, dump_psymtab)
-	(psym_dump, recursively_search_psymtabs, psym_has_symbols)
-	(psym_find_compunit_symtab_by_address, sort_pst_symbols)
-	(start_psymtab_common, end_psymtab_common)
-	(add_psymbol_to_bcache, add_psymbol_to_list, init_psymbol_list)
-	(allocate_psymtab): Update.
-	(psymtab_storage::discard_psymtab): Rename from discard_psymtab.
-	Update.
-	(dump_psymtab_addrmap, maintenance_print_psymbols)
-	(maintenance_check_psymtabs): Update.
-	(class objfile_psymtabs): Move to objfiles.h.
-	* psympriv.h (discard_psymtab): Now inline.
-	(psymtab_discarder::psymtab_discarder): Update.
-	(psymtab_discarder::~psymtab_discarder): Update.
-	(ALL_OBJFILE_PSYMTABS): Rewrite.
-	* objfiles.h (struct objfile) <psymtabs, psymtabs_addrmap,
-	free_psymtabs, psymbol_cache, global_psymbols, static_psymbols>:
-	Remove fields.
-	<partial_symtabs>: New field.
-	(class objfile_psymtabs): Move from psymtab.h.  Update.
-	* objfiles.c (objfile::objfile): Initialize partial_symtabs, not
-	psymbol_cache.
-	(objfile::~objfile): Don't destroy psymbol_cache.
-	* mdebugread.c (parse_partial_symbols): Update.
-	* dwarf2read.c (create_addrmap_from_index)
-	(create_addrmap_from_aranges, dw2_find_pc_sect_compunit_symtab)
-	(process_psymtab_comp_unit_reader, dwarf2_build_psymtabs_hard)
-	(add_partial_subprogram, dwarf2_ranges_read): Update.
-	* dwarf-index-write.c (write_address_map)
-	(write_one_signatured_type, recursively_write_psymbols)
-	(class debug_names, class debug_names, write_psymtabs_to_index):
-	Update.
+	* copyright.py (main): Exit if run from the wrong directory.
 
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* symtab.h (SYMBOL_SET_NAMES): Update.
-	(symbol_set_names): Update.
-	(MSYMBOL_SET_NAMES): Update.
-	* symtab.c (symbol_set_names): Change argument to be an
-	objfile_per_bfd_storage.
-	* psymtab.c (add_psymbol_to_bcache): Update.
-	* psympriv.h (PSYMBOL_SET_NAMES): Take per_bfd argument.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (create_demangled_names_hash): Change argument to be an
-	objfile_per_bfd_storage.
-	(symbol_set_names): Update.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_initial_scan): Unconditionally call
-	init_psymbol_list.
-	* psymtab.c (init_psymbol_list): Do nothing if already called.
-	* psympriv.h (init_psymbol_list): Add comment.
-	* dwarf2read.c (dwarf2_build_psymtabs): Unconditionally call
-	init_psymbol_list.
-	* dbxread.c (dbx_symfile_read): Unconditionally call
-	init_psymbol_list.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (scan_xcoff_symtab): Update.
-	* psymtab.c (add_psymbol_to_list): Replace "list" parameter with
-	"where".
-	* mdebugread.c (parse_partial_symbols)
-	(handle_psymbol_enumerators): Update.
-	* dwarf2read.c (add_partial_symbol, load_partial_dies): Update.
-	* dbxread.c (read_dbx_symtab): Update.
-	* psympriv.h (psymbol_placement): New enum.
-	(add_psymbol_to_list): Update.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_start_psymtab): Remove global_psymbols and
-	static_psymbols parameters.
-	(scan_xcoff_symtab): Update.
-	* psymtab.c (start_psymtab_common): Remove global_psymbols and
-	static_psymbols parameters.
-	* psympriv.h (start_psymtab_common): Update.
-	* mdebugread.c (parse_partial_symbols): Update.
-	* dwarf2read.c (create_partial_symtab): Update.
-	* dbxread.c (read_dbx_symtab): Update.
-	(start_psymtab): Remove global_psymbols and static_psymbols
-	parameters.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_end_psymtab): Remove some initializations.
-	* psymtab.c (allocate_psymtab): Add comment.
-	* psympriv.h (allocate_psymtab): Add comment.
-	* dwarf2read.c (dwarf2_create_include_psymtab): Remove some
-	initializations.
-	* dbxread.c (dbx_end_psymtab): Remove some initializations.
-
-2019-01-10  Tom Tromey  <tom@tromey.com>
-
-	* symfile.h (mdebug_build_psymtabs, elfmdebug_build_psymtabs):
-	Don't declare.
-	* mipsread.c: Include mdebugread.h.
-	* mdebugread.h (mdebug_build_psymtabs, elfmdebug_build_psymtabs):
-	Declare.
-	* elfread.c: Include mdebugread.h.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* dbxread.c (dbx_end_psymtab): Use objfile_psymtabs.
-	* mdebugread.c (parse_partial_symbols): Use objfile_psymtabs.
-	* psymtab.c (ALL_OBJFILE_PSYMTABS_REQUIRED): Remove.
-	(psym_map_symtabs_matching_filename, find_pc_sect_psymtab)
-	(psym_lookup_symbol, psym_find_last_source_symtab)
-	(psym_forget_cached_source_info, psym_print_stats)
-	(psym_expand_symtabs_for_function, psym_expand_all_symtabs)
-	(psym_expand_symtabs_with_fullname, psym_map_symbol_filenames)
-	(psym_map_matching_symbols, psym_expand_symtabs_matching)
-	(psym_find_compunit_symtab_by_address)
-	(maintenance_print_psymbols, maintenance_info_psymtabs)
-	(maintenance_check_psymtabs): Use ranged for.
-	* psymtab.h (class objfile_psymtabs): New.
-	(require_partial_symbols): Return objfile_psymtabs.
-	* psympriv.h (ALL_OBJFILE_PSYMTABS): Remove.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* symfile.c (overlay_invalidate_all, find_pc_overlay)
-	(find_pc_mapped_section, list_overlays_command)
-	(map_overlay_command, unmap_overlay_command)
-	(simple_overlay_update): Use all_objfiles.
-	* spu-tdep.c (spu_overlay_update): Use all_objfiles.
-	* printcmd.c (info_symbol_command): Use all_objfiles.
-	* objfiles.h (ALL_OBJSECTIONS): Remove.
-	* maint.c (maintenance_translate_address): Use all_objfiles.
-	* gcore.c (gcore_create_callback): Use all_objfiles.
-	(objfile_find_memory_regions): Likewise.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (find_line_symtab, info_sources_command)
-	(make_source_files_completion_list): Use objfile_compunits.
-	* source.c (select_source_symtab): Use objfile_compunits.
-	* objfiles.h (struct objfile): Update comment.
-	(ALL_OBJFILES): Remove.
-	(ALL_FILETABS): Remove.
-	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Use
-	objfile_compunits.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* symmisc.c (print_objfile_statistics, dump_objfile)
-	(maintenance_print_symbols): Use compunit_filetabs.
-	* source.c (forget_cached_source_info_for_objfile): Use
-	compunit_filetabs.
-	* objfiles.h (ALL_OBJFILE_FILETABS): Remove.
-	(ALL_FILETABS): Use compunit_filetabs.
-	* objfiles.c (objfile_relocate1): Use compunit_filetabs.
-	* coffread.c (coff_symtab_read): Use compunit_filetabs.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* symtab.h (ALL_COMPUNIT_FILETABS): Remove.
-	(compunit_filetabs): New.
-	* symtab.c (iterate_over_some_symtabs, find_pc_sect_line): Use
-	compunit_filetabs.
-	(info_sources_command, make_source_files_completion_list): Remove
-	declaration.
-	* symmisc.c (print_objfile_statistics, dump_objfile)
-	(maintenance_print_symbols): Remove declaration.
-	(maintenance_info_symtabs): Use compunit_filetabs.
-	(maintenance_info_line_tables): Likewise.
-	* source.c (select_source_symtab): Change local variable name.
-	(forget_cached_source_info_for_objfile): Remove declaration.
-	* objfiles.h (ALL_OBJFILE_FILETABS): Use compunit_filetabs.
-	* objfiles.c (objfile_relocate1): Remove declaration.
-	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Remove
-	declaration.
-	* maint.c (count_symtabs_and_blocks): Use compunit_filetabs.
-	* coffread.c (coff_symtab_read): Remove declaration.
-	* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Use
-	compunit_filetabs.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (lookup_objfile_from_block)
-	(find_pc_sect_compunit_symtab, search_symbols)
-	(default_collect_symbol_completion_matches_break_on): Use
-	objfile_compunits.
-	* objfiles.h (ALL_COMPUNITS): Remove.
-	* maint.c (count_symtabs_and_blocks): Use objfile_compunits.
-	* cp-support.c (add_symbol_overload_list_qualified): Use
-	objfile_compunits.
-	* ada-lang.c (ada_collect_symbol_completion_matches)
-	(ada_add_global_exceptions): Use objfile_compunits.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* source.c (select_source_symtab)
-	(forget_cached_source_info_for_objfile): Remove declaration.
-	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Remove
-	declaration.
-	* maint.c (count_symtabs_and_blocks): Remove declaration.
-	* cp-support.c (add_symbol_overload_list_qualified): Remove
-	declaration.
-	* coffread.c (coff_symtab_read): Remove declaration.
-	* symtab.c (lookup_symbol_in_objfile_symtabs)
-	(basic_lookup_transparent_type_1): Use objfile_compunits.
-	(lookup_objfile_from_block, find_pc_sect_compunit_symtab)
-	(info_sources_command, search_symbols)
-	(default_collect_symbol_completion_matches_break_on)
-	(make_source_files_completion_list): Remove declaration.
-	* ada-lang.c (add_nonlocal_symbols): Use objfile_compunits.
-	(ada_collect_symbol_completion_matches)
-	(ada_add_global_exceptions): Remove declaration.
-	* linespec.c (iterate_over_all_matching_symtabs): Use
-	objfile_compunits.
-	* objfiles.h (ALL_OBJFILE_COMPUNITS): Remove.
-	(class objfile_compunits): New.
-	(ALL_COMPUNITS): Use objfile_compunits.
-	* symmisc.c (print_objfile_statistics, maintenance_info_symtabs)
-	(maintenance_check_symtabs, maintenance_info_line_tables): Use
-	objfile_compunits.
-	* objfiles.c (objfile_relocate1): Use objfile_compunits.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (search_symbols)
-	(default_collect_symbol_completion_matches_break_on): Use
-	objfile_msymbols.
-	* ada-lang.c (ada_lookup_simple_minsym)
-	(ada_collect_symbol_completion_matches): Use objfile_msymbols.
-	* minsyms.c (find_solib_trampoline_target): Use objfile_msymbols.
-	* hppa-tdep.c (hppa_lookup_stub_minimal_symbol): Use
-	objfile_msymbols.
-	* coffread.c (coff_symfile_read): Use objfile_msymbols.
-	* symmisc.c (dump_msymbols): Use objfile_msymbols.
-	* objc-lang.c (find_methods): Use objfile_msymbols.
-	(info_selectors_command, info_classes_command): Likewise.
-	* stabsread.c (scan_file_globals): Use objfile_msymbols.
-	* objfiles.h (class objfile_msymbols): New.
-	(ALL_OBJFILE_MSYMBOLS): Remove.
-	(ALL_MSYMBOLS): Remove.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* common/next-iterator.h (next_adapter): Add Iterator template
-	parameter.
-	* objfiles.h (ALL_OBJFILES_SAFE): Remove.
-	(class all_objfiles_safe): New.
-	* jit.c (jit_inferior_exit_hook): Use all_objfiles_safe.
-	* objfiles.c (put_objfile_before): Update comment.
-	(add_separate_debug_objfile): Likewise.
-	(free_all_objfiles): Use all_objfiles_safe.
-	(objfile_purge_solibs): Likewise.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (iterate_over_symtabs, matching_obj_sections)
-	(expand_symtab_containing_pc, lookup_static_symbol)
-	(basic_lookup_transparent_type, find_pc_sect_compunit_symtab)
-	(find_symbol_at_address, find_line_symtab, find_main_name): Use
-	all_objfiles.
-	* probe.c (find_probe_by_pc, collect_probes): Use all_objfiles.
-	* breakpoint.c (create_overlay_event_breakpoint)
-	(create_longjmp_master_breakpoint)
-	(create_std_terminate_master_breakpoint)
-	(create_exception_master_breakpoint): Use all_objfiles.
-	* linux-thread-db.c (try_thread_db_load_from_pdir)
-	(has_libpthread): Use all_objfiles.
-	* ada-lang.c (add_nonlocal_symbols): Use all_objfiles.
-	* linespec.c (iterate_over_all_matching_symtabs)
-	(search_minsyms_for_name): Use all_objfiles.
-	* maint.c (maintenance_info_sections): Use all_objfiles.
-	* main.c (captured_main_1): Use all_objfiles.
-	* spu-tdep.c (spu_objfile_from_frame): Use all_objfiles.
-	* guile/scm-objfile.c (gdbscm_objfiles): Use all_objfiles.
-	* guile/scm-pretty-print.c
-	(ppscm_find_pretty_printer_from_objfiles): Use all_objfiles.
-	* solib-spu.c (append_ocl_sos): Use all_objfiles.
-	* symmisc.c (maintenance_print_symbols): Use all_objfiles.
-	(maintenance_print_msymbols): Use all_objfiles.
-	* source.c (select_source_symtab): Use all_objfiles.
-	* jit.c (jit_find_objf_with_entry_addr): Use all_objfiles.
-	* symfile.c (remove_symbol_file_command)
-	(expand_symtabs_matching, map_symbol_filenames): Use
-	all_objfiles.
-	* ppc-linux-tdep.c (ppc_linux_spe_context_inferior_created): Use
-	all_objfiles.
-	* dwarf2-frame.c (dwarf2_frame_find_fde): Use all_objfiles.
-	* objc-lang.c (find_methods): Use all_objfiles.
-	* objfiles.c (have_partial_symbols, have_full_symbols)
-	(have_minimal_symbols, qsort_cmp)
-	(default_iterate_over_objfiles_in_search_order): Use
-	all_objfiles.
-	* hppa-tdep.c (find_unwind_entry): Use all_objfiles.
-	* psymtab.c (maintenance_print_psymbols): Use all_objfiles.
-	(maintenance_check_psymtabs): Use all_objfiles.
-	(ALL_PSYMTABS): Remove.
-	* compile/compile-object-run.c (do_module_cleanup): Use
-	all_objfiles.
-	* blockframe.c (find_pc_partial_function): Use all_objfiles.
-	* cp-support.c (add_symbol_overload_list_qualified): Use
-	all_objfiles.
-	* windows-tdep.c (windows_iterate_over_objfiles_in_search_order):
-	Use all_objfiles.
-	* dwarf-index-write.c (save_gdb_index_command): Use all_objfiles.
-	* python/py-xmethods.c (gdbpy_get_matching_xmethod_workers): Use
-	all_objfiles.
-	* python/py-objfile.c (objfpy_lookup_objfile_by_name)
-	(objfpy_lookup_objfile_by_build_id): Use all_objfiles.
-	* python/py-prettyprint.c (find_pretty_printer_from_objfiles):
-	Uses all_objfiles.
-	* solib.c (solib_read_symbols): Use all_objfiles
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* probe.c (parse_probes_in_pspace): Use all_objfiles.
-	* guile/scm-progspace.c (gdbscm_progspace_objfiles): Use
-	all_objfiles.
-	* objfiles.h (ALL_PSPACE_OBJFILES): Remove.
-	* symmisc.c (print_symbol_bcache_statistics)
-	(print_objfile_statistics, maintenance_print_objfiles)
-	(maintenance_info_symtabs, maintenance_check_symtabs)
-	(maintenance_expand_symtabs, maintenance_info_line_tables): Use
-	all_objfiles.
-	* source.c (forget_cached_source_info): Use all_objfiles.
-	* symfile-debug.c (set_debug_symfile): Use all_objfiles.
-	* elfread.c (elf_gnu_ifunc_resolve_by_cache)
-	(elf_gnu_ifunc_resolve_by_got): Use all_objfiles.
-	* objfiles.c (update_section_map): Use all_objfiles.
-	(shared_objfile_contains_address_p): Likewise.
-	* psymtab.c (maintenance_info_psymtabs): Use all_objfiles.
-	* python/py-progspace.c (pspy_get_objfiles): Use all_objfiles.
-
-2019-01-09  Tom Tromey  <tom@tromey.com>
-
-	* common/next-iterator.h: New file.
-	* objfiles.h (class all_objfiles): New.
-	(struct objfile_iterator): New.
-
-2019-01-09  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Move the description of the changed "frame", "select-frame",
-	 and "info frame" commands to the Changed commands section.
-
-2019-01-09  Simon Marchi  <simon.marchi@ericsson.com>
-
-	* gdbtypes.c (check_stub_method_group): Remove handling of old
-	mangling schemes.
-	* linespec.c (find_methods): Likewise.
-	* stabsread.c (read_member_functions): Likewise.
-	* valops.c (search_struct_method): Likewise.
-	(value_struct_elt_for_reference): Likewise.
-	* NEWS: Mention this change.
-
-2019-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* cli/cli-cmds.c (list_command): Pass a source_lines_range to
-	print_source_lines.
-	* source.c (print_source_lines_base): Update line number check.
-	(print_source_lines): New function.
-	(source_lines_range::source_lines_range): New function.
-	* source.h (class source_lines_range): New class.
-	(print_source_lines): New declaration.
-
-2019-01-09  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* linespec.c (linespec_state_destructor): Free self->canonical_names.
-
-2019-01-08  Tom Tromey  <tom@tromey.com>
-	    Simon Marchi  <simon.marchi@ericsson.com>
-
-	PR gdb/24060
-	* ada-exp.y (DOLLAR_VARIABLE): Rename from SPECIAL_VARIABLE.
-	* ada-lex.l (DOLLAR_VARIABLE): Likewise.
-	* c-exp.y (DOLLAR_VARIABLE): Rename from VARIABLE.
-	* f-exp.y (DOLLAR_VARIABLE): Likewise.
-	* m2-exp.y (DOLLAR_VARIABLE): Rename from INTERNAL_VAR.
-	* p-exp.y (DOLLAR_VARIABLE): Rename from VARIABLE.
-
-2019-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* source.c (select_source_symtab): Move header comment to
-	declaration in source.h.
-	(forget_cached_source_info_for_objfile): Likewise.
-	(forget_cached_source_info): Likewise.
-	(identify_source_line): Likewise.
-	* source.h (identify_source_line): Move declaration from symtab.h
-	and add comment from source.c
-	(print_source_lines): Likewise.
-	(forget_cached_source_info_for_objfile): Likewise.
-	(forget_cached_source_info): Likewise.
-	(select_source_symtab): Likewise.
-	(enum print_source_lines_flag): Move definition from symtab.h.
-	* symtab.h (identify_source_line): Move declaration to source.h.
-	(print_source_lines): Likewise.
-	(forget_cached_source_info_for_objfile): Likewise.
-	(forget_cached_source_info): Likewise.
-	(select_source_symtab): Likewise.
-	(enum print_source_lines_flag): Move definition to source.h.
-	* tui/tui-hooks.c: Add 'source.h' include.
-
-2019-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* source.c (print_source_lines_base): Handle requests to print
-	reverse line number sequences, and guard against empty lines
-	string.
-
-2019-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* source.c (print_source_lines_base): Fix skip of '\r' if next
-	character is '\n'.
-
-2019-01-06  Tom Tromey  <tom@tromey.com>
-
-	* c-exp.y (struct c_parse_state) <macro_original_text,
-	expansion_obstack>: New member.
-	(macro_original_text, expansion_obstack): Remove globals.
-	(scan_macro_expansion, scanning_macro_expansion)
-	(finished_macro_expansion): Update.
-	(scan_macro_cleanup): Remove.
-	(yylex, c_parse): Update.
-
-2019-01-06  Tom Tromey  <tom@tromey.com>
-
-	* c-exp.y (struct c_parse_state) <strings>: New member.
-	(operator_stoken): Update.
-
-2019-01-06  Tom Tromey  <tom@tromey.com>
-
-	* parser-defs.h (type_ptr): Remove typedef.  Don't declare VEC.
-	(union type_stack_elt) <typelist_val>: Now a pointer to
-	std::vector.
-	(type_stack_cleanup): Don't declare.
-	(push_typelist): Update.
-	* parse.c (pop_typelist): Return a std::vector.
-	(push_typelist): Take a std::vector.
-	(follow_types): Update.  Do not free args.
-	(type_stack_cleanup): Remove.
-	* c-exp.y (struct c_parse_state): New.
-	(cpstate): New global.
-	(type_aggregate_p, exp, ptr_operator, parameter_typelist)
-	(nonempty_typelist): Update.
-	(func_mod): Create a new vector.
-	(c_parse): Create a c_parse_state.
-	(check_parameter_typelist): Do not delete params.
-	(function_method): Update.  Do not delete type_list.
-
-2019-01-06  Tom Tromey  <tom@tromey.com>
-
-	PR gdb/28155:
-	* python/py-finishbreakpoint.c (bpfinishpy_init): Use
-	check_typedef.
-	* infcmd.c (finish_command_fsm_should_stop): Use check_typedef.
-	(print_return_value): Likewise.
-
-2019-01-05  Tom Tromey  <tom@tromey.com>
-
-	* contrib/cleanup_check.py: Remove.
-	* contrib/gcc-with-excheck: Remove.
-	* contrib/exsummary.py: Remove.
-	* contrib/excheck.py: Remove.
-
-2019-01-05  Joel Brobecker  <brobecker@adacore.com>
-
-	* thread.c (delete_thread_1): Add gdb_assert that THR is not
-	NULL. Initialize tpprev to NULL instead of assigning it
-	to NULL on the next statement.
-	* windows-nat.c (windows_delete_thread): Remove check for
-	main_thread_id before printing thread exit notifications.
-	(get_windows_debug_event) <EXIT_THREAD_DEBUG_EVENT>:
-	Remove thread ID check against main_thread_id.
-	<CREATE_PROCESS_DEBUG_EVENT>: Remove call to
-	windows_delete_thread.
-	<EXIT_PROCESS_DEBUG_EVENT>: Add call to windows_delete_thread.
-
-2019-01-04  Tom Tromey  <tom@tromey.com>
-
-	* compile/compile.c (_initialize_compile): Use upper case for
-	metasyntactic variables.
-	* symmisc.c (_initialize_symmisc): Use upper case for
-	metasyntactic variables.
-	* psymtab.c (_initialize_psymtab): Use upper case for
-	metasyntactic variables.
-	* demangle.c (demangle_command): Use upper case for metasyntactic
-	variables.
-	(_initialize_demangler): Likewise.
-	* ax-gdb.c (_initialize_ax_gdb): Use upper case for metasyntactic
-	variables.
-
-2019-01-03  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-source.c (tui_set_source_content): Use xstrdup.
-
-2019-01-03  Tom Tromey  <tom@tromey.com>
-
-	* python/py-symtab.c (salpy_str): Update.
-	(struct salpy_sal_object) <symtab>: Now a PyObject.
-	(salpy_dealloc): Update.
-	(del_objfile_sal): Use gdbpy_ref.
-
-2019-01-03  Tom Tromey  <tom@tromey.com>
-
-	* python/py-type.c (convert_field): Use new_reference.  Return
-	gdbpy_ref.
-	(make_fielditem): Return gdbpy_ref.
-	(typy_fields): Update.
-	(typy_getitem): Update.
-	(field_name): Return gdbpy_ref.  Use new_reference.
-	(typy_iterator_iternext): Update.
-
-2019-01-03  Tom Tromey  <tom@tromey.com>
-
-	* python/py-record.c (gdbpy_stop_recording): Use Py_RETURN_NONE.
-
-2019-01-03  Tom Tromey  <tom@tromey.com>
-
-	* python/py-value.c (valpy_dealloc): Use Py_XDECREF.
-	* python/py-type.c (typy_fields_items): Use gdbpy_ref.
-	* python/py-progspace.c (pspy_set_printers): Use gdbpy_ref.
-	(pspy_set_frame_filters, pspy_set_frame_unwinders)
-	(pspy_set_type_printers): Likewise.
-	* python/py-function.c (fnpy_init): Use gdbpy_ref.
-	* python/py-cmd.c (cmdpy_init): Use gdbpy_ref.
-	* python/py-objfile.c (objfpy_set_printers): Use gdbpy_ref.
-	(objfpy_set_frame_filters, objfpy_set_frame_unwinders)
-	(objfpy_set_type_printers): Likewise.
-
-2019-01-03  Tom Tromey  <tom@tromey.com>
-
-	* python/python.c (gdbpy_enter, ~gdbpy_enter): Update.
-	(gdbpy_print_stack): Use gdbpy_err_fetch.
-	* python/python-internal.h (class gdbpy_err_fetch): New class.
-	(class gdbpy_enter) <m_error_type, m_error_value,
-	m_error_traceback>: Remove.
-	<m_error>: New member.
-	(gdbpy_exception_to_string): Don't declare.
-	* python/py-varobj.c (py_varobj_iter_next): Use gdbpy_err_fetch.
-	* python/py-value.c (convert_value_from_python): Use
-	gdbpy_err_fetch.
-	* python/py-utils.c (gdbpy_err_fetch::to_string): Rename from
-	gdbpy_exception_to_string.
-	(gdbpy_handle_exception): Use gdbpy_err_fetch.
-	* python/py-prettyprint.c (print_stack_unless_memory_error): Use
-	gdbpy_err_fetch.
-
-2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* linux-nat.c (delete_lwp_cleanup): Delete.
-	(struct lwp_deleter): New struct.
-	(lwp_info_up): New typedef.
-	(linux_nat_target::follow_fork): Delete cleanup, and make use of
-	lwp_info_up.
-
-2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* linux-fork.c (class scoped_switch_fork_info): New class.
-	(inferior_call_waitpid): Update to use scoped_switch_fork_info.
-
-2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* valops.c (find_overload_match): Remove use of null_cleanup, and
-	calls to do_cleanups.
-
-2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* compile/compile-cplus-types.c
-	(compile_cplus_instance::decl_name): Handle changes to
-	cp_func_name.
-	* cp-support.c (cp_func_name): Update header comment, update
-	return type.
-	* cp-support.h (cp_func_name): Update return type in declaration.
-	* valops.c (find_overload_match): Move temp_func local to top
-	level of function and change its type.  Use temp_func to hold and
-	delete temporary string obtained from cp_func_name.
-
-2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* remote.c (remote_target::remote_check_symbols): Convert `msg` to
-	gdb::char_vector, remove cleanup, and update uses of `msg`.
-
-2019-01-03  Jim Wilson  <jimw@sifive.com>
-
-	* riscv-tdep.c (riscv_freg_feature): Drop s0 name from f8.
-
-2019-01-02  Tom Tromey  <tom@tromey.com>
-
-	* xml-tdesc.c (xml_cache): Hold a target_desc_up.
-	(tdesc_parse_xml): Remove cleanups.
-	* target-descriptions.h (make_cleanup_free_target_description):
-	Don't declare.
-	(target_desc_deleter): New struct.
-	(target_desc_up): New typedef.
-	* target-descriptions.c (target_desc_deleter::operator()): Rename
-	from free_target_description.
-	(make_cleanup_free_target_description): Remove.
-
-2019-01-02  Tom Tromey  <tom@tromey.com>
-
-	* linespec.c (struct linespec_parser): Rename from ls_parser.  Add
-	constructor, destructor.
-	(linespec_parser): Remove typedef.
-	(~linespec_parser): Rename from linespec_parser_delete.
-	(linespec_lex_to_end, linespec_complete_label)
-	(linespec_complete): Update.
-	(decode_line_full): Remove cleanups.
-	(decode_line_1): Update.
-
-2019-01-02  Tom Tromey  <tom@tromey.com>
-
-	* python/python-internal.h (inferior_to_inferior_object): Change
-	return type.
-	* python/py-exitedevent.c (create_exited_event_object): Update.
-	* python/py-inferior.c (inferior_to_inferior_object): Return
-	gdbpy_ref.
-	(python_new_inferior, python_inferior_deleted)
-	(thread_to_thread_object, delete_thread_object)
-	(build_inferior_list, gdbpy_selected_inferior): Update.
-	* python/py-infthread.c (create_thread_object): Update.  Also fail
-	if inferior_to_inferior_object fails.
-
-2019-01-02  Simon Marchi  <simon.marchi@ericsson.com>
-
-	* inferior.h (class inferior) <displaced_step_state>: New field.
-	* infrun.h (struct displaced_step_state): Move here from
-	infrun.c.  Initialize fields, add constructor.
-	<inf>: Remove field.
-	<reset>: New method.
-	* infrun.c (struct displaced_step_inferior_state): Move to
-	infrun.h.
-	(displaced_step_inferior_states): Remove.
-	(get_displaced_stepping_state): Adust.
-	(displaced_step_in_progress_any_inferior): Adjust.
-	(displaced_step_in_progress_thread): Adjust.
-	(displaced_step_in_progress): Adjust.
-	(add_displaced_stepping_state): Remove.
-	(get_displaced_step_closure_by_addr): Adjust.
-	(remove_displaced_stepping_state): Remove.
-	(infrun_inferior_exit): Call displaced_step_state.reset.
-	(use_displaced_stepping): Don't check for NULL.
-	(displaced_step_prepare_throw): Call
-	get_displaced_stepping_state.
-	(displaced_step_fixup): Don't check for NULL.
-	(prepare_for_detach): Don't check for NULL.
-
-2019-01-02  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* infcall.c (call_function_by_hand_dummy): cleanup/destroy sm
-	 in case of call that did not complete.
-
-2019-01-02  Andrey Utkin  <autkin@undo.io>
-
-	* symfile.c (find_separate_debug_file): Fix search of debug files for
-	remote debuggee.
-
-2019-01-02  Tom Tromey  <tom@tromey.com>
-
-	* python/py-inferior.c (gdbpy_initialize_inferior): Fix
-	indentation.
-	* python/py-frame.c (frapy_older): Remove cast.
-	(frapy_newer): Likewise.
-	* python/py-breakpoint.c (local_setattro): Remove cast.
-	* python/py-arch.c (archpy_name): Remove local variable.
-	* python/py-type.c (gdbpy_lookup_type): Remove cast.
-
-2019-01-02  Joel Brobecker  <brobecker@adacore.com>
-
-	* unittests/basic_string_view/element_access/char/empty.cc:
-	Fix year range in copyright header.
-
-2019-01-01  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* arch/riscv.h (struct riscv_gdbarch_features) <hw_float_abi>:
-	Delete.
-	<operator==>: Update with for removed field.
-	<hash>: Likewise.
-	* riscv-tdep.h (struct gdbarch_tdep) <features>: Renamed to...
-	<isa_features>: ...this.
-	<abi_features>: New field.
-	(riscv_isa_flen): Update comment.
-	(riscv_abi_xlen): New declaration.
-	(riscv_abi_flen): New declaration.
-	* riscv-tdep.c (riscv_isa_xlen): Update to get answer from
-	isa_features.
-	(riscv_abi_xlen): New function.
-	(riscv_isa_flen): Update to get answer from isa_features.
-	(riscv_abi_flen): New function.
-	(riscv_has_fp_abi): Update to get answer from abi_features.
-	(riscv_call_info::riscv_call_info): Use abi xlen and flen, not isa
-	xlen and flen.
-	(riscv_call_info) <xlen, flen>: Update comment.
-	(riscv_call_arg_struct): Remove invalid assertions
-	(riscv_features_from_gdbarch_info): Update now hw_float_abi field
-	is removed.
-	(riscv_gdbarch_init): Gather isa features and abi features
-	separately, ensure both match on the gdbarch when reusing an old
-	gdbarch.  Relax an error check to allow 32-bit abi float to run on
-	a target with 64-bit float hardware.
-
-2019-01-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* source.c (search_command_helper): Stop reverse search
-	when line 1 has been searched.
-
-2019-01-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* record-full.c (record_full_base_target::close): Rewrite
-	record_full_core_buf_list free logic.
-
-2019-01-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* break-catch-syscall.c (print_one_catch_syscall): xfree
-	the last text.
-
-2019-01-01  Joel Brobecker  <brobecker@adacore.com>
-
-	* top.c (print_gdb_version): Update Copyright year in version
-	message.
-
-2019-01-01  Joel Brobecker  <brobecker@adacore.com>
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
 
-	Update copyright year range in all GDB files.
+	* top.c (print_gdb_version): Change copyright year to 2020.
 
-2019-01-01, 19  Joel Brobecker  <brobecker@adacore.com>
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
 
-	* config/djgpp/fnchange.lst: Add entry for gdb/ChangeLog-2018.
+	* config/djgpp/fnchange.lst: Add entry for gdb/ChangeLog-2019.
 
-For older changes see ChangeLog-2018.
+For older changes see ChangeLog-2019.
 
 Local Variables:
 mode: change-log
@@ -12175,4 +1601,3 @@ fill-column: 74
 version-control: never
 coding: utf-8
 End:
-
diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 67342f1e98..48c58f4d8d 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,1882 +1,284 @@
-2020-01-15  Alan Modra  <amodra@gmail.com>
-
-	PR 25384
-	* elf64-ppc.c (ELIMINATE_COPY_RELOCS): Update comment.
-	(ppc64_elf_adjust_dynamic_symbol): Don't allow .dynbss copies
-	of function symbols unless dot symbols are present.  Do warn
-	whenever one is created, regardles of whether a PLT entry is
-	also emitted for the function symbol.
-
-2020-01-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	Backported from master
-	2020-01-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	PR ld/22269
-	* elf32-arm.c (elf32_arm_final_link_relocate): Use
-	UNDEFWEAK_NO_DYNAMIC_RELOC.
-	(allocate_dynrelocs_for_symbol): Likewise.
-
-2019-10-20  John David Anglin  <danglin@gcc.gnu.org>
-
-	* elf32-hppa.c (elf32_hppa_size_dynamic_sections): Provide 8-byte
-	minimum alignment for .plt section.
-
-	* elf32-hppa.c: Revise import stub sequences.
-	(LONG_BRANCH_STUB_SIZE): Define.
-	(LONG_BRANCH_SHARED_STUB_SIZE): Define.
-	(IMPORT_STUB_SIZE): Define.
-	(IMPORT_SHARED_STUB_SIZE): Define.
-	(EXPORT_STUB_SIZE): Define.
-	(plt_stub): Revise to not use register %r22.
-	(LDO_R1_R22): Define.
-	(LDW_R22_R21): Define.
-	(LDW_R22_R19): Define.
-	(hppa_build_one_stub): Update stub generation and use new defines.
-	(hppa_size_one_stub): Likewise.
-
-2019-10-13  Nick Clifton  <nickc@redhat.com>
-
-	* development.sh (development): Reset to true.
-
-2019-10-12  Nick Clifton  <nickc@redhat.com>
-
-	Release 2.33.1
-	* version.m4 (BFD_VERSION) Set to 2.33.1
-	* po/bfd.pot: Regenerate.
-
-2019-10-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
 	Apply from master
-	2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-	PR ld/22263
-	PR ld/25056
-	* elf32-arm.c (elf32_arm_tls_transition): Use bfd_link_dll instead of
-	bfd_link_pic for TLS checks.
-	(elf32_arm_final_link_relocate): Likewise.
-	(allocate_dynrelocs_for_symbol): Likewise.
-
-2019-10-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	Apply from master
-	2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-	PR ld/25062
-	* elf32-arm.c (elf32_arm_final_link_relocate): Sign extend data.
-
-2019-10-09  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2019-10-07  Alan Modra  <amodra@gmail.com>
-	* elf32-ppc.c (ppc_elf_tls_optimize): Don't process R_PPC_TLSLD
-	with non-local symbol.  Don't double count __tls_get_addr calls
-	with marker relocs.
-	* elf64-ppc.c (ppc64_elf_tls_optimize): Likewise.
-
-	2019-10-07  Alan Modra  <amodra@gmail.com>
-	* elf32-ppc.c (nomark_tls_get_addr): Rename from has_tls_get_addr_call
-	throughout.
-	* elf64-ppc.c (nomark_tls_get_addr): Likewise.
-
-	2019-10-07  Alan Modra  <amodra@gmail.com>
-	* elf64-ppc.c (ppc64_elf_size_dynamic_sections): Do allocate
-	space for local got non-tls relocs when PIE.
-
-	2019-10-04  Alan Modra  <amodra@gmail.com>
-	* elf64-ppc.c (ppc64_elf_check_relocs): Move initialisation of vars.
-	(ppc64_elf_tls_optimize): Correct is_local condition.
-	(allocate_got): Don't reserve dynamic relocations for any of the
-	tls got relocs in PIEs when the symbol is local.
-	(allocate_dynrelocs): Correct validity test for local sym using
-	tlsld_got slot.
-	(ppc64_elf_size_dynamic_sections): Don't reserve dynamic relocations
-	for any of the tls got relocs in PIEs.
-	(ppc64_elf_layout_multitoc): Likewise.
-	(ppc64_elf_relocate_section): Correct validity test for local sym
-	using tlsld_got slot.  Don't emit dynamic relocations for any of
-	the tls got relocs in PIEs when the symbol is local.
-	* elf32-ppc.c (ppc_elf_tls_optimize): Correct is_local condition.
-	(got_relocs_needed): Delete.
-	(allocate_dynrelocs): Correct validity test for local sym using
-	tlsld_got slot.  Don't reserve dynamic relocations for any of the
-	tls got relocs in PIEs when the symbol is local.
-	(ppc_elf_size_dynamic_sections): Don't reserve dynamic relocations
-	for any of the tls got relocs in PIEs.
-	(ppc_elf_relocate_section): Correct validity test for local sym
-	using tlsld_got slot.  Don't emit dynamic relocations for any of
-	the tls got relocs in PIEs when the symbol is local.
-
-	2019-09-26  Alan Modra  <amodra@gmail.com>
-	PR 24262
-	* Makefile.am (AM_CPPFLAGS): Add -DLIBDIR.
-	* plugin.c (load_plugin): Search both ${libdir}/bfd-plugins and
-	${bindir}/../lib/bfd-plugins if different.
-	* Makefile.in: Regenerate.
-
-2019-09-30  Phil Blundell  <pb@pbcl.net>
-
-	Release 2.33
-	* version.m4 (BFD_VERSION): Set to 2.33.
-	* development.sh (development, experimental): Set to false.
-	* configure, Makefile.in, doc/Makefile.in, po/bfd.pot: Regenerate.
-
-2019-09-16  Phil Blundell  <pb@pbcl.net>
-
-	* version.m4: Set version to 2.32.90 for pre-release.
-	* Makefile.in, doc/Makefile.in, configure: Regenerated.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
-
-2019-09-06  Alan Modra  <amodra@gmail.com>
-
-	* aout-target.h (object_p): Formatting.
-	* bfd-in.h (bfd_get_filename): Don't cast to char*.
-	* corefile.c (generic_core_file_matches_executable_p): Constify
-	variables and remove cast.
-	* bfd-in2.h: Regenerate.
-
-2019-09-05  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc64_elf_check_relocs): Interpret an addend in
-	GOT_PCREL and PLT_PCREL relocs as affecting the value stored
-	in the GOT/PLT entry rather than affecting the offset to that
-	GOI/PLT entry.
-	(ppc64_elf_edit_toc, ppc64_elf_relocate_section): Likewise.
-
-2019-09-05  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (xlate_pcrel_opt): Handle prefix loads and stores
-	in second instruction.
-	(ppc64_elf_relocate_section): Likewise.
-
-2019-09-05  Alan Modra  <amodra@gmail.com>
-
-	PR 24955
-	* libbfd-in.h (bfd_strdup): New inline function.
-	* archive.c (_bfd_get_elt_at_filepos): Use bfd_strdup.  Close
-	bfd on error.
-	* elfcode.h (_bfd_elf_bfd_from_remote_memory): Use bfd_strdup.
-	* opncls.c (bfd_fopen): Use bfd_strdup.  Close fd and stream
-	on error.
-	(bfd_openstreamr): Use bfd_strdup.
-	(bfd_openr_iovec, bfd_openw, bfd_create): Likewise.
-	* plugin.c (try_load_plugin): Use bfd_malloc.
-	* libbfd.h: Regenerate.
-
-2019-09-02  Alan Modra  <amodra@gmail.com>
-
-	PR 11983
-	* dwarf2.c (_bfd_dwarf2_slurp_debug_info): Free debug_filename
-	on success.  Tidy.
-	(read_alt_indirect_string): Likewise.
-	(read_alt_indirect_ref): Likewise.
-
-2019-08-31  Jim Wilson  <jimw@sifive.com>
-
-	PR 23825
-	* elfnn-riscv.c (riscv_elf_create_dynamic_sections): Add SEC_LOAD,
-	SEC_DATA, and SEC_HAS_CONTENTS to .tdata.dyn section.
-
-2019-08-30  Jim Wilson  <jimw@sifive.com>
-
-	* elfnn-riscv.c (riscv_elf_relocate_section): For unresolvable reloc
-	error, call bfd_set_error, set ret to FALSE, and goto out label.
-
-2019-08-30  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24951
-	* archive.c (_bfd_get_elt_at_filepos): Copy BFD_COMPRESS,
-	BFD_DECOMPRESS and BFD_COMPRESS_GABI flags for thin archive.
-
-2019-08-29  Alan Modra  <amodra@gmail.com>
-
-	PR 24697
-	* elf32-ppc.c (ppc_elf_check_relocs): Call bad_shared_reloc
-	when !bfd_link_executable for R_PPC_EMB_SDA2I16 and
-	R_PPC_EMB_SDA2REL.  Don't call bad_shared_reloc for any other
-	reloc.
-
-2019-08-29  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (xlate_pcrel_opt): Add poff parameter.  Allow offset
-	on second insn, return it in poff.
-	(ppc64_elf_relocate_section): Add offset to paddi addend for
-	PCREL_OPT.
-
-2019-08-28  Jim Wilson  <jimw@sifive.com>
-
-	* elfnn-riscv.c (_bfd_riscv_relax_lui): Add check to exclude abs
-	section when setting max_alignment.  Update comment.
-	(_bfd_riscv_relax_pc): Likewise.
-
-2019-08-29  Alan Modra  <amodra@gmail.com>
-
-	PR 24891
-	* bfd.c (struct bfd): Add no_element_cache.
-	* archive.c (_bfd_get_elt_at_filepos): Don't add element to
-	archive cache when no_element_cache.
-	(bfd_generic_archive_p): Set no_element_cache when opening first
-	element to check format.  Close first element too.
-	(do_slurp_bsd_armap): Don't zero ardata->cache here.
-	* bfd-in2.h: Regenerate.
-
-2019-08-24  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc64_elf_edit_toc): Exclude undefined weak
-	symbols from GOT optimisation.
-
-2019-08-23  Stafford Horne  <shorne@gmail.com>
-
-	* elf32-or1k.c (or1k_elf_finish_dynamic_symbol): Use correct value for
-	PLT GOT entries.
-
-2019-08-23  Nick Clifton  <nickc@redhat.com>
-
-	PR 24456
-	* elf.c (bfd_section_from_shdr): Issue an informative warning
-	message and continue processing other sections after encountering
-	a reloc section for a section which already has other relocs
-	associated with it.
-
-2019-08-23  Alan Modra  <amodra@gmail.com>
-
-	PR 24933
-	* elfxx-x86.c (_bfd_x86_elf_get_synthetic_symtab): Don't exit
-	on error without freeing plts[] contents.
-
-2019-08-22  Dennis Zhang  <dennis.zhang@arm.com>
-
-	* cpu-arm.c: New entries for Cortex-M35P, Cortex-A77, Cortex-A76AE.
-
-2019-08-22  Nick Clifton  <nickc@redhat.com>
-
-	PR 24922
-	* pei-x86_64.c (pex64_xdata_print_uwd_codes): Add checks before
-	reading data from extra records.
-
-2019-08-22  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/24601
-	* elfnn-aarch64.c (aarch64_relocate): Handle weak TLS and undefined TLS.
-	Also Pass input_bfd to _bfd_aarch64_elf_resolve_relocation.
-	* elfxx-aarch64.c (_bfd_aarch64_elf_resolve_relocation): Use it.
-	* elfxx-aarch64.h (_bfd_aarch64_elf_resolve_relocation): Emit warning
-	for weak TLS.
-
-2019-08-22  Alan Modra  <amodra@gmail.com>
-
-	* elf32-arm.c (cmse_scan): Don't use ARM_GET_SYM_CMSE_SPCL,
-	instead recognize CMSE_PREFIX in symbol name.
-	(elf32_arm_gc_mark_extra_sections): Likewise.
-	(elf32_arm_filter_cmse_symbols): Don't test ARM_GET_SYM_CMSE_SPCL.
-	(elf32_arm_swap_symbol_in): Don't invoke ARM_SET_SYM_CMSE_SPCL.
-
-2019-08-20  Dennis Zhang  <dennis.zhang@arm.com>
-
-	* cpu-aarch64.c: New entries for Cortex-A34, Cortex-A65,
-	 Cortex-A77, cortex-A65AE, and Cortex-A76AE.
-
-2019-08-20  Tamar Christina  <tamar.christina@arm.com>
-
-	* elf32-arm.c (elf32_thumb2_plt_entry, elf32_arm_plt_thumb_stub,
-	elf32_arm_stub_long_branch_v4t_thumb_thumb,
-	elf32_arm_stub_long_branch_v4t_thumb_arm,
-	elf32_arm_stub_short_branch_v4t_thumb_arm,
-	elf32_arm_stub_long_branch_v4t_thumb_arm_pic,
-	elf32_arm_stub_long_branch_v4t_thumb_thumb_pic,
-	elf32_arm_stub_long_branch_v4t_thumb_tls_pic): Change nop to branch to
-	previous instruction.
-
-2019-08-19  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2.c (_bfd_dwarf2_find_symbol_bias): Create hash table
-	holding symbols.
-
-2019-08-19  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (struct ppc64_elf_obj_tdata): Rename has_gotrel
-	to has_optrel.
-	(struct _ppc64_elf_section_data): Likewise.
-	(ppc64_elf_check_relocs): Set has_optrel for more relocs.
-	(ppc64_elf_edit_toc): Do ha/lo insn checks in GOT loop rather
-	than TOC loop.  Check PLT16 insns too.
-
-2019-08-16  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24905
-	* elf64-x86-64.c (elf_x86_64_check_relocs): Move PIC check for
-	PC-relative relocations back to ...
-	(elf_x86_64_relocate_section): Here.
-
-2019-08-16  Martin Liska  <mliska@suse.cz>
-
-	PR ld/24912
-	* elflink.c: Report error only for not relocatable.
-	* linker.c (_bfd_generic_link_add_one_symbol): Do not handle
-	here lto_slim_object as it's handled in caller.
-
-2019-08-16  Alan Modra  <amodra@gmail.com>
-
-	* elf32-ppc.c (ppc_elf_relocate_section): Optimize unaligned relocs.
-
-2019-08-15  Jim Wilson  <jimw@sifive.com>
-
-	* elfnn-riscv.c (perform_relocation) <R_RISCV_RVC_LUI>: If
-	RISCV_CONST_HIGH_PART (value) is zero, then convert c.lui instruction
-	to c.li instruction, and use ENCODE_RVC_IMM to set value.
-
-2019-08-15  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2.c (scan_unit_for_symbols): Check for end of CU, not end
-	of section.
-
-2019-08-14  Alan Modra  <amodra@gmail.com>
-
-	PR 24623
-	* dwarf2.c (stash_comp_unit): New function, extracted from..
-	(_bfd_dwarf2_find_nearest_line): ..here.
-	(find_abstract_instance): Parse comp units and decode line info
-	as needed.
-
-2019-08-14  Alan Modra  <amodra@gmail.com>
-
-	* dwarf2.c (comp_unit_maybe_decode_line_info): Declare.
-	(comp_unit_find_nearest_line): Use it here..
-	(_bfd_dwarf2_find_symbol_bias): ..and here.
-
-2019-08-14  Alan Modra  <amodra@gmail.com>
-
-	* dwarf2.c (_bfd_dwarf2_find_nearest_line): Remove addr_size parameter.
-	* libbfd-in.h  (_bfd_dwarf2_find_nearest_line): Update prototype.
-	* coffgen.c (coff_find_nearest_line_with_names): Adjust
-	_bfd_dwarf2_find_nearest_line calls.
-	* elf.c (_bfd_elf_find_nearest_line, _bfd_elf_find_line): Likewise.
-	* elf32-arm.c (elf32_arm_find_nearest_line): Likewise.
-	* elf64-alpha.c (elf64_alpha_find_nearest_line): Likewise.
-	* elfnn-aarch64.c (elfNN_aarch64_find_nearest_line): Likewise.
-	* elfxx-mips.c (_bfd_mips_elf_find_nearest_line): Likewise.
-	* mach-o.c (bfd_mach_o_find_nearest_line): Likewise.
-	* libbfd.h: Regenerate.
-
-2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>
-
-	* elf-bfd.h (struct elf_backend_data): New members.
-	* elflink.c (_bfd_elf_link_create_dynamic_sections): Create
-	.gnu.hash section if necessary.
-	(struct collect_gnu_hash_codes): New member.
-	(elf_gnu_hash_process_symidx): New function name.
-	(elf_renumber_gnu_hash_syms): Ignore local and undefined
-	symbols. Record xlat location for every symbol which should have
-	a .MIPS.xhash entry.
-	(bfd_elf_size_dynamic_sections): Add DT_GNU_HASH dynamic tag to
-	dynamic section if necessary.
-	(GNU_HASH_SECTION_NAME): New define.
-	(bfd_elf_size_dynsym_hash_dynstr): Get .MIPS.xhash section.
-	Update the section size info.
-	* elfxx-mips.c (struct mips_elf_hash_sort_data): New members.
-	(struct mips_elf_link_hash_entry): New member.
-	(mips_elf_link_hash_newfunc): Initialize .MIPS.xhash translation
-	table location.
-	(mips_elf_sort_hash_table): Initialize the pointer to the
-	.MIPS.xhash section.
-	(mips_elf_sort_hash_table_f): Populate the .MIPS.xhash
-	translation table entry with the symbol dynindx.
-	(_bfd_mips_elf_section_from_shdr): Add SHT_MIPS_XHASH.
-	(_bfd_mips_elf_fake_sections): Initialize .MIPS.xhash section
-	info.
-	(_bfd_mips_elf_create_dynamic_sections): Create .MIPS.xhash
-	section.
-	(_bfd_mips_elf_size_dynamic_sections): Add DT_MIPS_XHASH tag to
-	dynamic section.
-	(_bfd_mips_elf_finish_synamic_sections): Add DT_MIPS_XHASH.
-	(_bfd_mips_elf_final_write_processing): Set .MIPS.xhash section
-	sh_link info.
-	(_bfd_mips_elf_get_target_dtag): Get DT_MIPS_XHASH tag.
-	(MIPS_LIBC_ABI_XHASH): New ABI version enum value.
-	(_bfd_mips_post_process_headers): Mark the ABI version as
-	MIPS_LIBC_ABI_XHASH if there exists a .MIPS.xhash section,
-	but not a .hash section.
-	(_bfd_mips_elf_record_xhash_symbol): New function. Record a
-	position in the translation table, associated with the hash
-	entry.
-	* elfxx-mips.h (literal_reloc_p): Define
-	elf_backend_record_xhash_symbol backend hook.
-	* elfxx-target.h: Initialize elf_backend_record_xhash_symbol
-	backend hook.
-
-2019-08-07  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* elf64-bpf.c (bpf_elf_relocate_section): New function.
-	(bpf_elf_insn_disp_reloc): Delete function.
-	(elf_backend_relocate_section): Define.
-
-2019-08-07  Alan Modra  <amodra@gmail.com>
-
-	PR 24644
-	* archive64.c (_bfd_archive_64_bit_slurp_armap): Properly check
-	for overflow in expressions involving nsymz.
-
-2019-08-01  Ilia Diachkov  <ilia.diachkov@optimitech.com>
-
-	* elfnn-riscv.c (_bfd_riscv_relax_lui): Set lui relax safety area to
-	two pages in relro presence.
-
-2019-08-01  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* elf32-xtensa.c (insn_num_slots, get_rsr_lend_opcode)
-	(get_wsr_lbeg_opcode): New functions.
-	(check_loop_aligned): Detect relaxed loops and adjust loop_len
-	and insn_len for the first actual instruction of the loop.
-
-2019-07-30  Alan Modra  <amodra@gmail.com>
-
-	PR 24768
-	* bfd.c (struct bfd): Add lto_slim_object flag.
-	* bfd-in2.h: Regenerate.
-
-2019-07-29  Martin Liska  <mliska@suse.cz>
-
-	PR 24768
-	* archive.c (_bfd_compute_and_write_armap): Come up with
-	report_plugin_err variable.
-	* bfd-in2.h (struct bfd): Add lto_slim_object flag.
-	* elf.c (struct lto_section): New.
-	(_bfd_elf_make_section_from_shdr): Parse content of
-	.gnu_lto_.lto section.
-	* elflink.c: Report error for a missing LTO plugin.
-	* linker.c (_bfd_generic_link_add_one_symbol): Likewise.
-
-2019-07-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24857
-	PR 24339
-	* elflink.c (elf_link_add_object_symbols): Report an informative
-	error on finding local symbols with index equal or greater than
-	symbol table sh_info.  Correct comment.  Allow such symbols in
-	dynamic objects.  Abort on NULL section for symbol.
-
-2019-07-26  Alan Modra  <amodra@gmail.com>
-
-	* elf-bfd.h (struct output_elf_obj_tdata): Delete "linker" field.
-	(elf_linker): Don't define.
-	* elflink.c (bfd_elf_final_link): Don't set elf_linker.
-
-2019-07-25  YunQiang Su  <syq@debian.org>
-
-	PR 24832
-	* elfxx-mips.c (mips_set_isa_flags): Default to MIPS 3 for 64-bit
-	mips inputs.
-
-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
-
-	* elf32-arc.c (bfd_get_32_me): Add a small description, fix
-	formating.
-	(reloc_type_to_name): Fix formating.
-	(arc_elf_object_p): Likewise.
-	(debug_arc_reloc): Likewise.
-	(arc_do_relocation): Likewise.
-
-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
-
-	* elf32-arc.c (bfd_get_32_me): New function.
-	(bfd_put_32_me): Likewise.
-	(arc_elf_relax_section): Likewise.
-	(bfd_elf32_bfd_relax_section): Define.
-
-2019-07-24  Alan Modra  <amodra@gmail.com>
-
-	* elf-bfd.h (struct elf_backend_data): Return bfd_boolean from
-	elf_backend_final_write_processing, don't pass linker arg.
-	(_bfd_elf_final_write_processing): Update prototype.
-	* elf.c (_bfd_elf_write_object_contents): Adjust call.
-	(_bfd_elf_final_write_processing): Return error on incompatible
-	OSABI and has_gnu_osabi.  Remove linker arg.
-	* elf-nacl.h (nacl_final_write_processing): Update prototype.
-	* elf-vxworks.h (elf_vxworks_final_write_processing): Likewise.
-	* elfxx-mips.h (_bfd_mips_final_write_processing): Likewise.
-	(_bfd_mips_elf_final_write_processing): Likewise.
-	* elf-hppa.h (elf_hppa_final_write_processing): Return status
-	and remove linker arg.
-	* elf-m10300.c (_bfd_mn10300_elf_final_write_processing): Likewise.
-	* elf-nacl.c (nacl_final_write_processing): Likewise.
-	* elf-vxworks.c (elf_vxworks_final_write_processing): Likewise.
-	* elf32-arc.c (arc_elf_final_write_processing): Likewise.
-	* elf32-arm.c (arm_final_write_processing): Likewise.
-	(elf32_arm_final_write_processing): Likewise.
-	(elf32_arm_nacl_final_write_processing): Likewise.
-	(elf32_arm_vxworks_final_write_processing): Likewise.
-	* elf32-avr.c (bfd_elf_avr_final_write_processing): Likewise.
-	* elf32-bfin.c (elf32_bfin_final_write_processing): Likewise.
-	* elf32-cr16.c (_bfd_cr16_elf_final_write_processing): Likewise.
-	* elf32-cris.c (cris_elf_final_write_processing): Likewise.
-	* elf32-h8300.c (elf32_h8_final_write_processing): Likewise.
-	* elf32-lm32.c (lm32_elf_final_write_processing): Likewise.
-	* elf32-m32r.c (m32r_elf_final_write_processing): Likewise.
-	* elf32-m68k.c (elf_m68k_final_write_processing): Likewise.
-	* elf32-mips.c (mips_vxworks_final_write_processing): Likewise.
-	* elf32-msp430.c (bfd_elf_msp430_final_write_processing): Likewise.
-	* elf32-nds32.c (nds32_elf_final_write_processing): Likewise.
-	* elf32-or1k.c (or1k_elf_final_write_processing): Likewise.
-	* elf32-pj.c (pj_elf_final_write_processing): Likewise.
-	* elf32-ppc.c (ppc_final_write_processing): Likewise.
-	(ppc_elf_final_write_processing): Likewise.
-	(ppc_elf_vxworks_final_write_processing): Likewise.
-	* elf32-sparc.c (sparc_final_write_processing): Likewise.
-	(elf32_sparc_final_write_processing): Likewise.
-	(elf32_sparc_vxworks_final_write_processing): Likewise.
-	* elf32-v850.c (v850_elf_final_write_processing): Likewise.
-	* elf32-xc16x.c (elf32_xc16x_final_write_processing): Likewise.
-	* elf32-xtensa.c (elf_xtensa_final_write_processing): Likewise.
-	* elf64-ia64-vms.c (elf64_vms_final_write_processing): Likewise.
-	* elfnn-ia64.c (elfNN_ia64_final_write_processing): Likewise.
-	* elfxx-mips.c (_bfd_mips_final_write_processing): Likewise.
-	(_bfd_mips_elf_final_write_processing): Likewise.
-
-2019-07-24  Alan Modra  <amodra@gmail.com>
-
-	* elf-vxworks.c (elf_vxworks_final_write_processing): Don't return
-	early.
-	* elf32-arc.c (arc_elf_final_write_processing): Likewise.
-	* elf32-xtensa.c (elf_xtensa_final_write_processing): Likewise.
-
-2019-07-24  Alan Modra  <amodra@gmail.com>
-
-	* elf32-visium.c (visium_elf_post_process_headers): Don't set
-	EI_OSABI header byte here.
-	(ELF_OSABI): Define.
-
-2019-07-23  Alan Modra  <amodra@gmail.com>
-
-	* elf-bfd.h (enum elf_gnu_osabi): Add elf_gnu_osabi_mbind.
-	* elf.c (_bfd_elf_make_section_from_shdr): Set elf_gnu_osabi_mbind.
-	(get_program_header_size): Formatting.  Only test SH_GNU_MBIND
-	when elf_gnu_osabi_mbind is set.
-	(_bfd_elf_map_sections_to_segments): Likewise.
-	(_bfd_elf_init_private_section_data): Likewise.
-	(_bfd_elf_final_write_processing): Update comment.
-	* elf64-hppa.c (elf64_hppa_special_sections): Move .tbss entry.
-	(elf_backend_special_sections): Define without .tbss for linux.
-
-2019-07-23  Alan Modra  <amodra@gmail.com>
-
-	* elf-bfd.h (enum elf_gnu_osabi): Rename from elf_gnu_symbols.
-	Remove none, any, all enums.
-	(struct elf_obj_tdata): Rename has_gnu_symbols field to has_gnu_osabi.
-	(_bfd_elf_final_write_processing): Declare.
-	* elf.c (_bfd_elf_write_object_contents): Unconditionally call
-	elf_backend_final_write_processing.
-	(_bfd_elf_post_process_headers): Move body of function to..
-	(_bfd_elf_final_write_processing): ..here, but set EI_OSABI byte
-	only when not already set.  Adjust for rename.
-	* elfxx-target.h (elf_backend_final_write_processing): Default to
-	_bfd_elf_final_write_processing.
-	* elf-hppa.h (elf_hppa_final_write_processing): Call
-	_bfd_elf_final_write_processing.
-	* elf-m10300.c (_bfd_mn10300_elf_final_write_processing): Likewise.
-	* elf-nacl.c (nacl_final_write_processing): Likewise.
-	* elf-vxworks.c (elf_vxworks_final_write_processing): Likewise.
-	* elf32-arc.c (arc_elf_final_write_processing): Likewise.
-	* elf32-avr.c (bfd_elf_avr_final_write_processing): Likewise.
-	* elf32-bfin.c (elf32_bfin_final_write_processing): Likewise.
-	* elf32-cr16.c (_bfd_cr16_elf_final_write_processing): Likewise.
-	* elf32-cris.c (cris_elf_final_write_processing): Likewise.
-	* elf32-h8300.c (elf32_h8_final_write_processing): Likewise.
-	* elf32-lm32.c (lm32_elf_final_write_processing): Likewise.
-	* elf32-m32r.c (m32r_elf_final_write_processing): Likewise.
-	* elf32-m68k.c (elf_m68k_final_write_processing): Likewise.
-	* elf32-msp430.c (bfd_elf_msp430_final_write_processing): Likewise.
-	* elf32-nds32.c (nds32_elf_final_write_processing): Likewise.
-	* elf32-or1k.c (or1k_elf_final_write_processing): Likewise.
-	* elf32-pj.c (pj_elf_final_write_processing): Likewise.
-	* elf32-v850.c (v850_elf_final_write_processing): Likewise.
-	* elf32-xc16x.c (elf32_xc16x_final_write_processing): Likewise.
-	* elf32-xtensa.c (elf_xtensa_final_write_processing): Likewise.
-	* elf64-ia64-vms.c (elf64_vms_final_write_processing): Likewise.
-	* elfnn-ia64.c (elfNN_ia64_final_write_processing): Likewise.
-	* elf32-arm.c (arm_final_write_processing): Split out from..
-	(elf32_arm_final_write_processing): ..here.  Call
-	_bfd_elf_final_write_processing.
-	(elf32_arm_nacl_final_write_processing): Adjust.
-	* elfxx-mips.c (_bfd_mips_final_write_processing): Split out from..
-	(_bfd_mips_elf_final_write_processing): ..here.  Call
-	_bfd_elf_final_write_processing.
-	* elfxx-mips.h (_bfd_mips_final_write_processing): Declare.
-	* elf32-mips.c (mips_vxworks_final_write_processing): Adjust.
-	* elf32-ppc.c (ppc_final_write_processing): Split out from..
-	(ppc_elf_final_write_processing): ..here.  Call
-	_bfd_elf_final_write_processing.
-	(ppc_elf_vxworks_final_write_processing): Adjust.
-	* elf32-sparc.c (sparc_final_write_processing): Split out from..
-	(elf32_sparc_final_write_processing): ..here.  Call
-	_bfd_elf_final_write_processing.
-	(elf32_sparc_vxworks_final_write_processing): Adjust.
-	* elf32-d10v.c (elf_backend_final_write_processing): Don't define.
-	* elf32-d30v.c (elf_backend_final_write_processing): Don't define.
-	* elf32-m68hc11.c (elf_backend_final_write_processing): Don't define.
-	* elf32-m68hc12.c (elf_backend_final_write_processing): Don't define.
-	* elf32-s12z.c (elf_backend_final_write_processing): Don't define.
-	* elf32-i386.c (elf_i386_check_relocs): Don't set has_gnu_symbols.
-	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
-	* elflink.c (elf_link_add_object_symbols): Likewise.
-	(elf_link_output_symstrtab): Set has_gnu_osabi for symbols here
-	instead.
-
-2019-07-23  Omar Majid  <omajid@redhat.com>
-
-	* coffcode.h (coff_set_arch_mach_hook): Handle I386_APPLE_MAGIC,
-	I386_FREEBSD_MAGIC, I386_LINUX_MAGIC, I386_NETBSD_MAGIC,
-	AMD64_APPLE_MAGIC, AMD64_FREEBSD_MAGIC, AMD64_LINUX_MAGIC,
-	AMD64_NETBSD_MAGIC.
-	* peXXigen.c: Add comment about source of .NET magic numbers.
-
-2019-07-19  Alan Modra  <amodra@gmail.com>
-
-	* reloc.c (BFD_RELOC_PPC64_TPREL34, BFD_RELOC_PPC64_DTPREL34),
-	(BFD_RELOC_PPC64_GOT_TLSGD34, BFD_RELOC_PPC64_GOT_TLSLD34),
-	(BFD_RELOC_PPC64_GOT_TPREL34, BFD_RELOC_PPC64_GOT_DTPREL34),
-	(BFD_RELOC_PPC64_TLS_PCREL): New pcrel tls relocs.
-	* elf64-ppc.c (ppc64_elf_howto_raw): Add howtos for pcrel tls relocs.
-	(ppc64_elf_reloc_type_lookup): Translate pcrel tls relocs.
-	(must_be_dyn_reloc, dec_dynrel_count): Add R_PPC64_TPREL64.
-	(ppc64_elf_check_relocs): Support pcrel tls relocs.
-	(ppc64_elf_tls_optimize, ppc64_elf_relocate_section): Likewise.
-	* bfd-in2.h: Regenerate.
-	* libbfd.h: Regenerate.
-
-2019-07-18  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc64_elf_relocate_section): Don't bother selecting
-	a TLS section symbol for edited relocs.  Tighten TLS symbol/reloc
-	match test.
-
-2019-07-18  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (TLS_EXPLICIT): Define as 256.
-	(ppc64_elf_check_relocs): Don't store TLS_EXPLICIT even if char
-	is more than 8 bits.
-	(ppc64_elf_tls_optimize): Likewise.  Make tls_set, tls_clear, and
-	tls_type vars unsigned int.
-	(ppc64_elf_relocate_section): Use r_type rather than TLS_EXPLICIT
-	to select r_type edit.
-
-2019-07-18  Alan Modra  <amodra@gmail.com>
-
-	* elf32-ppc.c (TLS_GDIE): Rename from TLS_TPRELGD throughout file.
-	Correct comment.
-	* elf64-ppc.c (TLS_GDIE): Likewise.
-
-2019-07-18  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc64_elf_tls_optimize): Correct test for allowed
-	range of tp-relative offsets.
-
-2019-07-15  Alan Modra  <amodra@gmail.com>
-
-	* elflink.c (_bfd_elf_fix_symbol_flags): If the def for an
-	alias is no longer bfd_link_hash_defined, clear the alias.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* elflink.c (_bfd_elf_omit_section_dynsym_default): Don't keep
-	tls_sec.
-	(_bfd_elf_init_1_index_section): Prefer not using TLS sections.
-	(_bfd_elf_init_2_index_sections): Likewise.
-	* elf64-ppc.c (ppc64_elf_relocate_section): When emitting dynamic
-	relocations for local TLS symbols, use STN_UNDEF as the relocation
-	symbol.
-	* elf32-ppc.c (ppc_elf_relocate_section): Likewise, and don't
-	leave TLS symbol value in the addend.
-
-2019-07-08  Alan Modra  <amodra@gmail.com>
-
-	PR 24785
-	* elf32-ppc.c (_bfd_elf_ppc_set_arch): Sanity check .PPC.EMB.apuinfo
-	size before reading first word.
-
-2019-07-02  Nick Clifton  <nickc@redhat.com>
-
-	PR 24717
-	* elf.c (is_debuginfo_file): New function.
-	(assign_file_positions_for_non_load_sections): Do not warn about
-	allocated sections outside of loadable segments if they are found
-	in a debuginfo file.
-	* elf-bfd.h (is_debuginfo_file): Prototype.
-
-2019-07-02  Nick Clifton  <nickc@redhat.com>
-
-	PR 24753
-	* compress.c (bfd_get_full_section_contents): Do not complain
-	about linker created sections that are larger than the file size.
-
-2019-07-02  Christophe Lyon  <christophe.lyon@linaro.org>
-
-	* bfd/elf32-arm.c (CMSE_STUB_NAME): New define.
-	(elf32_arm_get_stub_entry): Do not try to emit long-branch stubs
-	for CMSE stubs.
-	(arm_dedicated_stub_output_section_name): Use CMSE_STUB_NAME.
-
-2019-07-02  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* elf32-arm.c (elf32_arm_gc_mark_extra_sections): Mark debug
-	sections when .text section contain secure entry functions
-	is marked.
-
-2019-07-01  Nick Clifton  <nickc@redhat.com>
-
-	PR 23839
-	* elf32-arm.c (elf32_arm_update_relocs): Do not include the
-	section VMA in the offset used to update exidx relocs.
-
-2019-06-28  Nick Clifton  <nickc@redhat.com>
-
-	PR 24708
-	* elf.c (_bfd_elf_slurp_version_tables): Check for an excessively
-	large version reference section.
-	* compress.c (bfd_get_full_section_contents): Check for an
-	uncompressed section whose size is larger than the file size.
-
-2019-06-28  Alan Modra  <amodra@gmail.com>
-
-	* format.c (bfd_check_format_matches): Don't match plugin target
-	if another target matches.  Expand comment.
-	* targets.c (_bfd_target_vector): Move plugin_vec after all other
-	non-corefile targets, outside !SELECT_VECS.
-	* config.bfd: Don't handle targ=plugin here.
-	* configure.ac: Don't add plugin to enable_targets or handle in
-	target loop setting selvecs and other target vars.
+	2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+	* elf32-msp430.c (msp430_final_link_relocate): Add printf statements for
+	debugging relocations.
+	(msp430_elf_relax_delete_bytes): Likewise.
+	(msp430_elf_relax_add_two_words): Likewise.
+	(msp430_elf_relax_section): Likewise.
+
+	2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+	* elf32-msp430.c (msp430_elf_relax_add_two_words): Rename to
+	msp430_elf_relax_add_words. Support insertion of either one or two
+	words.
+	(msp430_elf_relax_section): Catch opcode of 0x3c00 when relocation
+	needs to be grown. Handle insertion of branch instruction to replace
+	jump.
+
+	2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* elf32-msp430.c (msp430_elf_relax_section): Before relaxing a branch,
+	check if previous instruction matches a conditional jump inserted
+	earlier. Invert conditional jump and delete branch in this case.
+
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	* development.sh: Set development to true.
+	* version.m4: Set to 2.34.0.
 	* configure: Regenerate.
 
-2019-06-26  Nick Clifton  <nickc@redhat.com>
-
-	PR 24703
-	* mach-o-arm.c (bfd_mach_o_arm_canonicalize_one_reloc): Add error
-	messages for failures.
-	* mach-o.c (bfd_mach_o_canonicalize_relocs): Set an bfd error code
-	if returning an error value.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* elf-properties.c (elf_find_and_remove_property): Rename last
-	parameter. Mention it in comment.
-
-2019-06-24  Ilia Diachkov  <ilia.diachkov@optimitech.com>
-
-	* elfnn-riscv.c (_bfd_riscv_relax_lui): Delete early exit when
-	SEC_MERGE or SEC_CODE flags are set.
-	(_bfd_riscv_relax_section): New local symtype.  Set sym_sec and
-	symtype consistently.  Don't include sec_addr (sym_sec) in symval.
-	Add check for SEC_INFO_TYPE_MERGE and call _bfd_merged_section_offset.
-	Add sec_addr (sym_sec) after handling merge sections.
-
-2019-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24721
-	* elf-properties.c (elf_merge_gnu_property_list): Remove the
-	property after reporting property removal.
-
-2019-06-23  Alan Modra  <amodra@gmail.com>
-
-	PR 24704
-	* elf64-ppc.c (R_PPC64_GOT16_DS): Don't set has_gotrel.
-	(ppc64_elf_edit_toc): Don't remove R_PPC64_GOT16_DS got entries.
-	Reduce range of offsets allowed for other GOT relocs.
-
-2019-06-23  Alan Modra  <amodra@gmail.com>
-
-	PR 24689
-	* elfcode.h (elf_object_p): Warning fix.
-
-2019-06-21  Alan Modra  <amodra@gmail.com>
-
-	PR 24689
-	* elfcode.h (elf_object_p): Check type of e_shstrndx section.
-
-2019-06-19  Alan Modra  <amodra@gmail.com>
-
-	PR 24697
-	* elf32-ppc.c (ppc_elf_relocate_section): Don't read insn for
-	R_PPC_EMB_RELSDA.  Mask low bit of R_PPC_EMB_SDA21 r_offset.
-
-2019-06-19  Alan Modra  <amodra@gmail.com>
+2020-02-01  Nick Clifton  <nickc@redhat.com>
 
-	* elf64-ppc.c (ppc64_elf_inline_plt): Correct st_other test for
-	functions that require r2 valid to use local entry.
-	(ppc64_elf_size_stubs, ppc64_elf_relocate_section): Likewise.
-
-2019-06-17  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* elfnn-aarch64.c (elfNN_aarch64_allocate_local_dynrelocs): Remove.
-	(elfNN_aarch64_size_dynamic_sections): Remove loc_hash_table traversal
-	with elfNN_aarch64_allocate_local_dynrelocs.
-
-2019-06-14  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* elfnn-aarch64.c: Enable MOVW_PREL relocs for ELF32.
-
-2019-06-14  Alan Modra  <amodra@gmail.com>
-
-	* Makefile.in: Regenerate.
+	Binutils 2.34 release.
+	* development.sh: Set fields to false.
+	* version.m4: Set to 2.34.
 	* configure: Regenerate.
 
-2019-06-14  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c: Fix comments involving paddi.
-
-2019-06-12  Adam Lackorzymski  <adam@os.inf.tu-dresden.de>
-
-	PR 24643
-	* elf32-arm.c (arm_elf_find_function): Fail if the symol table is
-	absent, or the bfd is not in the ELF formart.
-	* elfnn-aarch64.c (aarch64_elf_find_function): Likewise.
-
-2019-06-10  Christos Zoulas  <christos@zoulas.com>
-
-	PR 24650
-	* elf.c (elfcore_make_auxv_note_section): New function.
-	(elfcore_grok_note): Use it.
-	(elfcore_grok_freebsd_note): Likewise.
-	(elfcore_grok_openbsd_note): Likewise.
-	(elfcore_grok_netbsd_note): Likewise.  Plus add support for
-	NT_NETBSDCORE_AUXV notes.
-
-2019-06-06  Sudakshina Das  <sudi.das@arm.com>
-
-	* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties): Set
-	alignment of the new gnu property section.
-
-2019-06-06  Sudakshina Das  <sudi.das@arm.com>
-
-	* bfd-in.h: Change comment.
-	* bfd-in2.h: Regenerate.
-	* elfnn-aarch64.c (elfNN_aarch64_merge_gnu_properties): Update warning.
-	* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties):
-	Likwise.
+2020-01-29  Alan Modra  <amodra@gmail.com>
 
-2019-05-28  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* elfxx-mips.c (mips_elf_calculate_relocation) <R_MIPS_PCHI16>:
-	Remove overflow check.
-
-2019-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* cofflink.c (coff_link_check_archive_element): Don't assume
-	element is a coff object file after calling add_archive_element.
-
-2019-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* elf32-microblaze.c (microblaze_elf_finish_dynamic_sections): Don't
-	attempt to set sh_entsize for excluded PLT section.
-
-2019-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* elf64-alpha.c (elf64_alpha_relocate_section): Don't attempt
-	to emit R_ALPHA_GOTTPREL in PIEs, for which no space is
-	allocated in alpha_dynamic_entries_for_reloc.
-
-2019-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* elf32-lm32.c (lm32_elf_finish_dynamic_sections): Don't segfault
-	on NULL output_section.
-	* elflink.c (elf_final_link_free): Don't free -1 symshndxbuf.
-
-2019-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* elf32-m68k.c (elf_m68k_get_got_entry): Don't create a new
-	entry when MUST_FIND.  Abort when MUST_FIND not found.
-	(elf_m68k_get_bfd2got_entry): Likewise.
-	(elf_m68k_relocate_section): Remove now useless assert.
-
-2019-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* elf64-hppa.c (elf64_hppa_finalize_dynreloc): Get the output bfd
-	from bfd_link_info, not an output section owner.
-	(elf64_hppa_finish_dynamic_symbol, elf64_hppa_finalize_opd): Likewise.
-	(elf_hppa_final_link_relocate): Likewise.
-
-2019-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* aout-tic30.c (MY_bfd_final_link): Don't segfault on missing
-	create_object_symbols_section, obj_textsec, obj_datasec or
-	obj_bsssec.  Fix other errors in placement.
-	* config.bfd: Obsolete tic30-aout.
-
-2019-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* dwarf2.c (save_section_vma, section_vma_same): Check for NULL
-	end of section list as well as section_count.
-	* xcofflink.c (xcoff_link_add_symbols): Fix temporarily changed
-	section list before returning error.
-
-2019-05-27  Alan Modra  <amodra@gmail.com>
-
-	* elf.c (bfd_elf_set_group_contents): Exit on zero size section.
-
-2019-05-27  Alan Modra  <amodra@gmail.com>
-
-	PR 24596
-	* linker.c (_bfd_generic_link_output_symbols): Heed BSF_KEEP.
-
-2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* elfnn-aarch64.c (elfNN_aarch64_merge_symbol_attribute): New function.
-	(struct elf_aarch64_link_hash_table): Add variant_pcs member.
-	(elfNN_aarch64_allocate_dynrelocs): Update variant_pcs.
-	(elfNN_aarch64_size_dynamic_sections): Add DT_AARCH64_VARIANT_PCS.
-	(elf_backend_merge_symbol_attribute): Define.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* po/SRC-POTFILES.in: Regenerate.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c: Comment on powerxx _notoc stub variants.
-	(LI_R11_0, LIS_R11, ORI_R11_R11_0, SLDI_R11_R11_34): Define.
-	(PADDI_R12_PC, PLD_R12_PC, D34, HA34): Define.
-	(struct ppc_link_hash_table): Add powerxx_stubs.
-	(ppc64_elf_check_relocs): Set powerxx_stubs.
-	(build_powerxx_offset, size_powerxx_offset),
-	(num_relocs_for_powerxx_offset),
-	(emit_relocs_for_powerxx_offset): New functions.
-	(plt_stub_size): Size powerxx stubs.
-	(ppc_build_one_stub): Emit powerxx stubs.
-	(ppc_size_one_stub): Size powerxx stubs.  Omit .eh_frame for
-	powerxx stubs.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc64_elf_check_relocs): Set has_gotrel for
-	R_PPC64_GOT_PCREL34.
-	(xlate_pcrel_opt): New function.
-	(ppc64_elf_edit_toc): Handle R_PPC64_GOT_PCREL34.
-	(ppc64_elf_relocate_section): Edit GOT indirect to GOT relative
-	for R_PPC64_GOT_PCREL34.  Implement R_PPC64_PCREL_OPT optimisation.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* reloc.c (BFD_RELOC_PPC64_D34, BFD_RELOC_PPC64_D34_LO),
-	(BFD_RELOC_PPC64_D34_HI30, BFD_RELOC_PPC64_D34_HA30),
-	(BFD_RELOC_PPC64_PCREL34, BFD_RELOC_PPC64_GOT_PCREL34),
-	(BFD_RELOC_PPC64_PLT_PCREL34),
-	(BFD_RELOC_PPC64_ADDR16_HIGHER34, BFD_RELOC_PPC64_ADDR16_HIGHERA34),
-	(BFD_RELOC_PPC64_ADDR16_HIGHEST34, BFD_RELOC_PPC64_ADDR16_HIGHESTA34),
-	(BFD_RELOC_PPC64_REL16_HIGHER34, BFD_RELOC_PPC64_REL16_HIGHERA34),
-	(BFD_RELOC_PPC64_REL16_HIGHEST34, BFD_RELOC_PPC64_REL16_HIGHESTA34),
-	(BFD_RELOC_PPC64_D28, BFD_RELOC_PPC64_PCREL28): New reloc enums.
-	* elf64-ppc.c (PNOP): Define.
-	(ppc64_elf_howto_raw): Add reloc howtos for new relocations.
-	(ppc64_elf_reloc_type_lookup): Translate new bfd reloc numbers.
-	(ppc64_elf_ha_reloc): Adjust addend for highera34 and highesta34
-	relocs.
-	(ppc64_elf_prefix_reloc): New function.
-	(struct ppc_link_hash_table): Add notoc_plt.
-	(is_branch_reloc): Add R_PPC64_PLTCALL_NOTOC.
-	(is_plt_seq_reloc): Add R_PPC64_PLT_PCREL34,
-	R_PPC64_PLT_PCREL34_NOTOC, and R_PPC64_PLTSEQ_NOTOC.
-	(ppc64_elf_check_relocs): Handle pcrel got and plt relocs.  Set
-	has_pltcall for section on seeing R_PPC64_PLTCALL_NOTOC.  Handle
-	possible need for dynamic relocs on non-pcrel powerxx relocs.
-	(dec_dynrel_count): Handle non-pcrel powerxx relocs.
-	(ppc64_elf_inline_plt): Handle R_PPC64_PLTCALL_NOTOC.
-	(toc_adjusting_stub_needed): Likewise.
-	(ppc64_elf_tls_optimize): Handle R_PPC64_PLTSEQ_NOTOC.
-	(ppc64_elf_relocate_section): Handle new powerxx relocs.
-	* bfd-in2.h: Regenerate.
-	* libbfd.h: Regenerate.
-
-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* config.bfd (targ_cpu): Process bpf-*-none only if BFD64.
-	* configure.ac: Set target_size=64 for bpf_elf64_le_vec and
-	bpf_elf64_be_vec.
-	* configure: Regenerate.
-
-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* configure: Regenerated.
-	* Makefile.am (ALL_MACHINES): Add cpu-bpf.lo.
-	(ALL_MACHINES_CFILES): Add cpu-bpf.c.
-	(BFD64_BACKENDS): Add elf64-bpf.lo.
-	(BFD64_BACKENDS_CFILES): Add elf64-bpf.c.
-	* Makefile.in (SOURCE_HFILES): Regenerate.
-	* config.bfd (targ_cpu): Handle bpf-*-* targets.
-	* cpu-bpf.c: New file.
-	* elf64-bpf.c: Likewise.
-	* targets.c (_bfd_target_vector): Add bpf_elf64_be_vec and
-	bpf_elf64_le_vec.
-	* archures.c: Define architecture bfd_arch_bpf and machine
-	bfd_arch_bpf.
-	* reloc.c: Define BFD relocations used by the BPF target.
-	* bfd-in2.h: Regenerated.
-	* libbfd.h: Likewise.
-
-2019-05-22  Alan Modra  <amodra@gmail.com>
-
-	* elf32-arm.c (arm_allocate_glue_section_space): Clear section
-	contents.
-
-2019-05-22  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (_bfd_vms_write_etir): Don't attempt further
-	processing on "size error in section".
-
-2019-05-22  Alan Modra  <amodra@gmail.com>
-
-	* som.c (som_bfd_free_cached_info): Call
-	_bfd_generic_close_and_cleanup.
-
-2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Generate error
-	for TLS_TPREL_HI16(/LO16) relocations in shared library.
-
-2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Add NULL pointer
-	checks.  Search the RELA table for n64 relocations.
-
-2019-05-21  Matthew Fortune  <matthew.fortune@mips.com>
-	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* elfxx-mips.c (LA25_BC): New macro.
-	(mips_elf_link_hash_table)<compact_branches>: New field.
-	(STUB_JALRC): New macro.
-	(mipsr6_o32_exec_plt0_entry_compact): New array.
-	(mipsr6_n32_exec_plt0_entry_compact): Likewise.
-	(mipsr6_n64_exec_plt0_entry_compact): Likewise.
-	(mipsr6_exec_plt_entry_compact): Likewise.
-	(mips_elf_create_la25_stub): Use BC instead of J for stubs
-	when compact_branches is true.
-	(_bfd_mips_elf_finish_dynamic_symbol): Choose the compact
-	PLT for MIPSR6 with compact_branches.  Do not reorder the
-	compact branches PLT.  Switch the lazy stub for MIPSR6
-	with compact_branches to use JALRC.
-	(mips_finish_exec_plt): Choose the compact PLT0 for MIPSR6
-	when compact_branches is true.
-	(_bfd_mips_elf_compact_branches): New function.
-	* elfxx-mips.h (_bfd_mips_elf_compact_branches): New prototype.
-
-2019-05-21  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/24373
-	* elfnn-aarch64.c (_bfd_aarch64_erratum_843419_branch_to_stub):
-	Fix print formatter.
-
-2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	PR 24460
-	* elf32-arm.c (get_value_helper): Remove.
-	(elf32_arm_final_link_relocate): Fix branch future relocations.
-
-2019-05-21  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/24373
-	* bfd-in.h (enum erratum_84319_opts): New
-	(bfd_elf64_aarch64_set_options, bfd_elf32_aarch64_set_options): Change
-	int to enum erratum_84319_opts.
-	* bfd-in2.h: Regenerate.
-	* elfnn-aarch64.c (struct elf_aarch64_link_hash_table): Change
-	fix_erratum_843419 to use new enum, remove fix_erratum_843419_adr.
-	(_bfd_aarch64_add_stub_entry_after): Conditionally create erratum stub.
-	(aarch64_size_one_stub): Conditionally size erratum 843419 stubs.
-	(_bfd_aarch64_resize_stubs): Amend comment.
-	(elfNN_aarch64_size_stubs): Don't generate stubs when no workaround
-	requested.
-	(bfd_elfNN_aarch64_set_options): Use new fix_erratum_843419 enum.
-	(_bfd_aarch64_erratum_843419_branch_to_stub): Implement selection of
-	erratum workaround.
-	(clear_erratum_843419_entry): Update erratum conditional.
-
-2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
-
-	PR ld/24571
-	* bfd/elf32-avr.c (elf32_avr_relax_section): Adjust range check
-	when computing distance_short_enough.
+	Apply from master
+	2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
+		    Alan Modra  <amodra@gmail.com>
+	PR ld/25458
+	* elflink.c (_bfd_elf_gc_mark_rsec): Mark all weak aliases.
 
-2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
+	2020-01-23  Alan Modra  <amodra@gmail.com>
+	PR 25444
+	* elf.c (assign_file_positions_for_load_sections): Avoid divide
+	by zero when p_align is zero.
 
-	PR ld/24564
-	* bfd/elf32-avr.c (avr_relative_distance_considering_wrap_around):
-	Wrap around even if distance equals avr_pc_wrap_around.
+	2020-01-22  Alan Modra  <amodra@gmail.com>
+	* elf64-ppc.c (ppc64_elf_size_stubs): Correct condition under
+	which __tls_get_addr calls will be eliminated.
 
-2019-05-20  Nick Clifton  <nickc@redhat.com>
+2020-01-23  Nick Clifton  <nickc@redhat.com>
 
 	* po/fr.po: Updated French translation.
 
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* elf32-arm.c (elf32_arm_merge_eabi_attributes): Add case for Tag_MVE_arch.
-
-2019-05-16  Alan Modra  <amodra@gmail.com>
-
-	* elf32-arm.c (elf32_arm_write_section): Revert last change.
-
-2019-05-15  Alan Modra  <amodra@gmail.com>
-
-	* elf32-arm.c (elf32_arm_write_section): Don't leave
-	error case of STM32L4XX_ERRATUM_BRANCH_TO_VENEER with
-	unitialised section contents.
-
-2019-05-14  Jamey Hicks  <jamey.hicks@gmail.com>
-
-	PR 19921
-	* verilog.c: (VerilogDataWidth): New variable.
-	(verilog_write_record): Emit bytes in VerilogDataWidth bundles.
-
-2019-05-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 24523
-	* elf32-m68k.c (elf32_m68k_merge_private_bfd_data): Return TRUE
-	rather than FALSE if encountering a non-ELF file.
-
-2019-05-06  Alan Modra  <amodra@gmail.com>
-
-	* elf32-pj.c (pj_elf_reloc): Don't report undefined weak as an error.
-
-2019-05-06  Alan Modra  <amodra@gmail.com>
-
-	* reloc.c (BFD_RELOC_PPC64_TPREL16_HIGH, BFD_RELOC_PPC64_TPREL16_HIGHA),
-	(BFD_RELOC_PPC64_DTPREL16_HIGH, BFD_RELOC_PPC64_DTPREL16_HIGHA):
-	Sort before BFD_RELOC_PPC64_DTPREL16_HIGHESTA entry.
-	* libbfd.h: Regenerate.
-	* bfd-in2.h: Regenerate.
+2020-01-20  Nick Clifton  <nickc@redhat.com>
 
-2019-05-04  Alan Modra  <amodra@gmail.com>
-
-	PR 24511
-	* syms.c (coff_section_type): Only allow '.', '$' and numeric
-	following the standard section names.
-	(bfd_decode_symclass): Prioritize section flag tests in
-	decode_section_type before name tests in coff_section_type.
-	* plugin.c (bfd_plugin_canonicalize_symtab): Init fake_section
-	and fake_common_section using BFD_FAKE_SECTION.  Use "fake" as
-	their names and choose standard .text section flags for
-	fake_section.
-
-2019-05-02  Nick Clifton  <nickc@redhat.com>
-
-	PR 24493
-	* coffcode.h (styp_to_sec_flags): Treat .gnu.debuglink and
-	.gnu.debugaltlink sections as debugging sections.
-
-2019-04-30  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (struct ppc64_elf_obj_tdata): Add has_gotrel.
-	(struct _ppc64_elf_section_data): Likewise.
-	(ppc64_elf_check_relocs): Set above fields.
-	(ppc64_elf_edit_toc): Add a pass over GOT relocs.
-	(ppc64_elf_relocate_section): Edit GOT indirect to GOT relative
-	when possible.
-
-2019-04-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24486
-	* elflink.c (elf_link_output_extsym): Don't complain undefined
-	weak dynamic reference.
-
-2019-04-25  Sudakshina Das  <sudi.das@arm.com>
-
-	* elfnn-aarch64.c (PLT_BTI_ENTRY_SIZE): Remove.
-	(PLT_BTI_TLSDESC_ENTRY_SIZE): Remove.
-	(PLT_PAC_ENTRY_SIZE, PLT_BTI_PAC_ENTRY_SIZE): Remove.
-	(PLT_BTI_SMALL_ENTRY_SIZE, PLT_PAC_SMALL_ENTRY_SIZE): Update.
-	(elfNN_aarch64_small_plt0_pac_entry): Remove.
-	(elfNN_aarch64_small_plt0_bti_pac_entry): Remove.
-	(elfNN_aarch64_small_plt0_bti_entry): Update.
-	(elfNN_aarch64_small_plt_bti_entry): Update.
-	(elfNN_aarch64_small_plt_pac_entry): Update.
-	(elfNN_aarch64_tlsdesc_small_plt_bti_entry): Update.
-	(setup_plt_values): Setup new entries.
-	(elfNN_aarch64_finish_dynamic_sections): Remove size change.
-	(elfNN_aarch64_plt_sym_val): Likewise.
-
-2019-04-22  Jim Wilson  <jimw@sifive.com>
-
-	* elfnn-riscv.c (PRSTATUS_SIZE) [ARCH_SIZE==32]: Change from 0 to 204.
-
-2019-04-19  Alan Modra  <amodra@gmail.com>
-
-	* elf32-s12z.c (elf_backend_can_gc_sections): Don't define
-
-2019-04-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf64-x86-64.c (elf_x86_64_need_pic): Suggest -fPIE when not
-	building shared object.
-	* elfxx-x86.c (_bfd_x86_elf_size_dynamic_sections): Likewise.
-
-2019-04-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24458
-	* elfxx-x86.h (SYMBOL_DEFINED_NON_SHARED_P): Also check x86
-	linker_def.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* reloc.c (BFD_RELOC_ARM_T32_VLDR_VSTR_OFF_IMM): New internal
-	relocation.
-	* bfd-in2.h: Regenerate.
-	* libbfd.h: Likewise.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* reloc.c (BFD_RELOC_ARM_THUMB_LOOP12): New.
-	* bfd-in2.h: Regenerated.
-	* libbfd.h: Regenerated.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* reloc.c (BFD_RELOC_THUMB_PCREL_BFCSEL): New relocation.
-	* bfd-in2.h: Regenerated.
-	* libbfd.h: Likewise.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* reloc.c (BFD_RELOC_ARM_THUMB_BF13): New.
-	* bfd-in2.h: Regenerated.
-	* libbfd.h: Regenerated.
-	* elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF13.
-	(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF13
-	and R_ARM_THM_BF12 together.
-	(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF13.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* reloc.c (BFD_RELOC_ARM_THUMB_BF19): New
-	* libbfd.h: Regenerated.
-	* bfd-in2.h: Regenerated.
-	* bfd-elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF18.
-	(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF19
-	and R_ARM_THM_BF18 together.
-	(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF19.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* reloc.c (BFD_RELOC_ARM_THUMB_BF17): New enum.
-	* bfd-in2.h: Regenerated.
-	* libbfd.h: Regenerated.
-	* bfd-elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF16.
-	(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF17
-	and R_ARM_THM_BF16 together.
-	(get_value_helper): New reloc helper.
-	(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF16.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* reloc.c (BFD_RELOC_THUMB_PCREL_BRANCH5): New enum.
-	* bfd-in2.h: Regenerate.
-	* libbfd.h: Regenerate.
+	* po/pt.po: Updates Portuguese translation.
+	* po/ru.po: Updated Russian translation.
+	* po/uk.po: Updated Ukranian translation.
 
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	* archures.c (bfd_mach_arm_8_1M_MAIN): Define.
-	* bfd-in2.h: Regenerate.
-	* cpu-arm.c (arch_info_struct): Add entry for Armv8.1-M Mainline.
-	* elf32-arm.c (using_thumb_only): Return true for Armv8.1-M Mainline
-	and update assert.
-	(using_thumb2): Likewise.
-	(using_thumb2_bl): Update assert.
-	(arch_has_arm_nop): Likewise.
-	(bfd_arm_get_mach_from_attributes): Add case for Armv8.1-M Mainline.
-	(tag_cpu_arch_combine): Add logic for Armv8.1-M Mainline merging.
-
-2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf-linker-x86.h (elf_x86_cet_report): New.
-	(elf_linker_x86_params): Add cet_report.
-	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Report
-	missing IBT and SHSTK properties if needed.
-
-2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24436
-	* elf-m10300.c (mn10300_elf_check_relocs): Remove BFD_ASSERT of
-	"h != NULL".  Don't check "h != NULL" before calling.
-	bfd_elf_gc_record_vtentry.
-	* elf32-arm.c (elf32_arm_check_relocs): Likewise.
-	* elf32-bfin.c (bfin_check_relocs): Likewise.
-	* elf32-cris.c (cris_elf_check_relocs): Likewise.
-	* elf32-csky.c (csky_elf_check_relocs): Likewise.
-	* elf32-d10v.c (elf32_d10v_check_relocs): Likewise.
-	* elf32-dlx.c (elf32_dlx_check_relocs): Likewise.
-	* elf32-fr30.c (fr30_elf_check_relocs): Likewise.
-	* elf32-frv.c (elf32_frv_check_relocs): Likewise.
-	* elf32-hppa.c (elf32_hppa_check_relocs): Likewise.
-	* elf32-i386.c (elf_i386_check_relocs): Likewise.
-	* elf32-iq2000.c (iq2000_elf_check_relocs): Likewise.
-	* elf32-m32r.c (m32r_elf_check_relocs): Likewise.
-	* elf32-m68hc1x.c (elf32_m68hc11_check_relocs): Likewise.
-	* elf32-m68k.c (elf_m68k_check_relocs): Likewise.
-	* elf32-mcore.c (mcore_elf_check_relocs): Likewise.
-	* elf32-metag.c (elf_metag_check_relocs): Likewise.
-	* elf32-or1k.c (or1k_elf_check_relocs): Likewise.
-	* elf32-ppc.c (ppc_elf_check_relocs): Likewise.
-	* elf32-s390.c (elf_s390_check_relocs): Likewise.
-	* elf32-sh.c (sh_elf_check_relocs): Likewise.
-	* elf32-v850.c (v850_elf_check_relocs): Likewise.
-	* elf32-vax.c (elf_vax_check_relocs): Likewise.
-	* elf32-xstormy16.c (xstormy16_elf_check_relocs): Likewise.
-	* elf32-xtensa.c (elf_xtensa_check_relocs): Likewise.
-	* elf64-mmix.c (mmix_elf_check_relocs): Likewise.
-	* elf64-ppc.c (ppc64_elf_check_relocs): Likewise.
-	* elf64-s390.c (elf_s390_check_relocs): Likewise.
-	* elf64-x86-64.c (elf_s390_check_relocs): Likewise.
-	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Likewise.
-	* elfxx-sparc.c (_bfd_sparc_elf_check_relocs): Likewise.
-	* elflink.c (bfd_elf_gc_record_vtinherit): Check for corrupt
-	VTENTRY entry.
-
-2019-04-11  Alan Modra  <amodra@gmail.com>
-
-	PR 24435
-	* elflink.c (elf_link_add_object_symbols): Don't read partial
-	dynamic entries from fuzzed objects.
-
-2019-04-11  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/24302
-	* elfnn-aarch64.c (elfNN_aarch64_size_dynamic_sections): Don't emit
-	DT_TLSDESC_GOT and DT_TLSDESC_PLT when DF_BIND_NOW.
-	(elfNN_aarch64_finish_dynamic_sections): Don't write PLT if DF_BIND_NOW.
-
-2019-04-10  Michael Forney  <mforney@mforney.org>
-
-	PR 24427
-	* doc/chew.c (free_words): Correctly free "push_text" strings.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config.bfd: Remove i[3-7]86-*-kaos* and i[3-7]86-*-chaos targets.
-
-2019-04-08  Alan Modra  <amodra@gmail.com>
-
-	* configure.ac (elfxx_x86): Define and use.
+	* version.m4 (BFD_VERSION): Set to 2.33.90.
 	* configure: Regenerate.
+	* po/bfd.pot: Regenerate.
 
-2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf-linker-x86.h: New file.
-	* elf32-i386.c (elf_i386_convert_load_reloc): Use htab->params
-	to get x86-specific linker options.
-	* elf64-x86-64.c (elf_x86_64_convert_load_reloc): Likewise.
-	(elf_x86_64_check_relocs): Likewise.
-	(elf_x86_64_relocate_section): Likewise.
-	(elf_x86_64_link_setup_gnu_properties): Likewise.
-	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Likewise.
-	(_bfd_x86_elf_link_setup_gnu_properties): Likewise.
-	(_bfd_elf_linker_x86_set_options): New function.
-	* elfxx-x86.h: Include "elf-linker-x86.h".
-	(elf_x86_link_hash_table): Add params.
-
-2019-04-03  Alan Modra  <amodra@gmail.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	* coff-i386.c, * coff-x86_64.c, * coffgen.c, * dwarf2.c,
-	* elf-m10200.c, * elf.c, * elf32-arm.c, * elf32-bfin.c,
-	* elf32-csky.c, * elf32-m32r.c, * elf32-microblaze.c, * elf32-pru.c,
-	* elf32-rx.c, * elf32-xgate.c, * elf64-sparc.c, * elfnn-ia64.c,
-	* elfxx-riscv.c, * elfxx-sparc.c, * linker.c, * mach-o.c,
-	* pe-x86_64.c, * pei-x86_64.c, * plugin.c: Whitespace fixes.
+	Binutils 2.34 branch created.
 
-2019-04-02  Jim Wilson  <jimw@sifive.com>
+2020-01-17  Christian Biesinger  <cbiesinger@google.com>
 
-	PR 24389
-	* elfnn-riscv.c (_bfd_riscv_elf_merge_private_bfd_data): Move read of
-	ELF header flags to after check for ELF object file.  Loop through
-	sections looking for code sections, if none, then skip ABI checks.
+	* coff-arm.c: Fix spelling error (seperate).
+	* elfxx-riscv.c (riscv_parse_sv_or_non_std_ext): Fix spelling
+	error (seperate).
+	* sysdep.h (strnlen): Fix spelling error (seperate).
 
-2019-03-30  Andrew Waterman  <andrew@sifive.com>
+2020-01-15  Lars Brinkhoff  <lars@nocrew.org>
 
-	* elfnn-riscv.c (_bfd_riscv_relax_call): Only check ARCH_SIZE for
-	rd == X_RA case.
+	PR 20694
+	* pdp11.c (TARGET_PAGE_SIZE): Set to 8192.
 
-2019-03-29  Max Filippov  <jcmvbkbc@gmail.com>
+2020-01-15  Alan Modra  <amodra@gmail.com>
 
-	* elf32-xtensa.c (shrink_dynamic_reloc_sections): Add
-	info->export_dynamic to the conditional.
+	PR 25384
+	* elf64-ppc.c (ELIMINATE_COPY_RELOCS): Update comment.
+	(ppc64_elf_adjust_dynamic_symbol): Don't allow .dynbss copies
+	of function symbols unless dot symbols are present.  Do warn
+	whenever one is created, regardles of whether a PLT entry is
+	also emitted for the function symbol.
 
-2019-03-28  Alan Modra  <amodra@gmail.com>
+2020-01-14  Alan Modra  <amodra@gmail.com>
 
-	PR 24392
-	* configure.ac: Invoke AC_CHECK_SIZEOF(int).
-	* configure: Regenerate.
-	* coffgen.c (coff_get_reloc_upper_bound): Replace gcc diagnostic
-	workaround with SIZEOF_LONG vs. SIZEOF_INT check.
-	* elf.c (_bfd_elf_get_reloc_upper_bound): Likewise.
-	* elf64-sparc.c (elf64_sparc_get_reloc_upper_bound): Likewise.
-	* mach-o.c (bfd_mach_o_get_reloc_upper_bound): Likewise.
+	* som.c (som_bfd_count_ar_symbols): Error when file position
+	of symbols on chains is not strictly increasing.
 
-2019-03-21  Jim Wilson  <jimw@sifive.com>
+2020-01-14  Alan Modra  <amodra@gmail.com>
 
-	PR 24365
-	* elfnn-riscv.c (riscv_elf_relocate_section): For STT_SECTION check,
-	verify sym non-NULL before using.  Add identical check using h.
+	* vms.h (VMS_DEBUG): Define as 0.
+	* vms-alpha.c (image_write): Move debug output after bounds check.
+	Tidy bounds check.
+	(_bfd_vms_slurp_eihd): Warning fix.
+	(_bfd_vms_slurp_etir): Init variables to avoid bogus warnings.
 
-2019-03-21  Sudakshina Das  <sudi.das@arm.com>
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-	* elf-bfd.h (struct elf_backend_data): Add argument to
-	merge_gnu_properties.
-	* elf-properties.c (elf_merge_gnu_properties): Add argument to
-	itself and while calling bed->merge_gnu_properties.
-	(elf_merge_gnu_property_list): Update the calls for
-	elf_merge_gnu_properties.
-	* elfnn-aarch64.c (elfNN_aarch64_merge_gnu_properties): Update handling
-	of --force-bti warning and add argument.
-	* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties): Add
-	warning.
-	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Add argument.
-	* elfxx-x86.h (_bfd_x86_elf_merge_gnu_properties): Likewise in
-	declaration.
+	* vms-alpha.c (_bfd_vms_slurp_egsd): Ensure minimum size even
+	for "ignored" records.
 
-2019-03-20  Sudakshina Das  <sudi.das@arm.com>
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-	* elfxx-aarch64.c (_bfd_aarch64_elf_link_fixup_gnu_properties): Define.
-	* elfxx-aarch64.h (_bfd_aarch64_elf_link_fixup_gnu_properties): Declare.
-	(elf_backend_fixup_gnu_properties): Define for AArch64.
-
-2019-03-18  Alan Modra  <amodra@gmail.com>
-
-	PR 24355
-	* elf32-ppc.c (ppc_finish_symbols): Don't call write_glink_stub
-	for local iplt syms with ent->plt.offset == -1.  Remove ineffective
-	attempt at writing glink stubs only once.
-
-2019-03-16  Alan Modra  <amodra@gmail.com>
-
-	PR 24337
-	* elf.c (_bfd_elf_rela_local_sym): Revert last change.
-	(_bfd_elf_rel_local_sym): Likewise.
-	* elflink.c (elf_link_input_bfd): Use bfd_und_section for
-	section of symbols with unrecognized shndx.
-
-2019-03-15  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24267
-	* coffgen.c (_bfd_coff_section_already_linked): Skip discarded
-	section.
-	* cofflink.c (coff_link_add_symbols): Check for symbols defined
-	in discarded section.
-
-2019-03-15  Alan Modra  <amodra@gmail.com>
-
-	PR 24339
-	* elflink.c (elf_link_add_object_symbols): Bail out on a local
-	symbol after globals if elf_bad_symtab is not set.
-
-2019-03-15  Alan Modra  <amodra@gmail.com>
-
-	PR 24337
-	* elf.c (_bfd_elf_rela_local_sym): Don't segfault on NULL sec.
-	(_bfd_elf_rel_local_sym): Likewise.
-
-2019-03-15  Alan Modra  <amodra@gmail.com>
-
-	PR 24336
-	* elflink.c (elf_link_read_relocs_from_section): Handle fuzzed
-	object files with sh_size not a multiple of sh_entsize.
-
-2019-03-15  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24338
-	* elf64-x86-64.c (elf_x86_64_relocate_section): Check for corrupt
-	input with bad relocation.
-
-22019-03-15  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf64-x86-64.c (elf_x86_64_relocate_section): Re-indent.
-
-2019-03-14  Nick Clifton  <nickc@redhat.com>
-
-	PR 24334
-	* dwarf2.c (struct dwarf2_debug): Add sec_vma_count field.
-	(save_section_vma): Initialise field to the number of entries in
-	the sec_vma table.
-	(section_vma_same): Check that the number of entries in the
-	sec_vma table matches the number of sections in the bfd.
-
-2019-03-14  Nick Clifton  <nickc@redhat.com>
-
-	PR 24333
-	* elflink.c (_bfd_elf_add_default_symbol): Add a check for a NULL
-	section owner pointer when adding the default symbol.
-
-2019-03-14  Nick Clifton  <nickc@redhat.com>
-
-	PR 24332
-	* elflink.c (elf_link_add_object_symbols): Add new local variable
-	extversym_end.  Initialise it to point to the end of the version
-	symbol table, if present.  Check it when initialising and updating
-	the ever pointer.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-
-	* elfnn-aarch64.c (PLT_PAC_ENTRY_SIZE, PLT_PAC_SMALL_ENTRY_SIZE): New.
-	(PLT_BTI_PAC_ENTRY_SIZE, PLT_BTI_PAC_SMALL_ENTRY_SIZE): New.
-	(setup_plt_values): Account for PAC or PAC and BTI enabled PLTs.
-	(elfNN_aarch64_size_dynamic_sections): Add checks for PLT_BTI_PAC
-	and PLT_PAC_PLT.
-	(elfNN_aarch64_finish_dynamic_sections): Account for PLT_BTI_PAC.
-	(get_plt_type): Add case for DT_AARCH64_PAC_PLT.
-	(elfNN_aarch64_plt_sym_val): Add cases for PLT_BTI_PAC and PLT_PAC.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-	    Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* bfd-in.h (aarch64_plt_type, aarch64_enable_bti_type): New.
-	(aarch64_bti_pac_info): New.
-	(bfd_elf64_aarch64_set_options): Add aarch64_bti_pac_info argument.
-	(bfd_elf32_aarch64_set_options): Likewise.
-	* bfd-in2.h: Regenerate
-	* elfnn-aarch64.c (PLT_BTI_ENTRY_SIZE): New.
-	(PLT_BTI_SMALL_ENTRY_SIZE, PLT_BTI_TLSDESC_ENTRY_SIZE): New.
-	(elfNN_aarch64_small_plt0_bti_entry): New.
-	(elfNN_aarch64_small_plt_bti_entry): New.
-	(elfNN_aarch64_tlsdesc_small_plt_bti_entry): New.
-	(elf_aarch64_obj_tdata): Add no_bti_warn and plt_type fields.
-	(elf_aarch64_link_hash_table): Add plt0_entry, plt_entry and
-	tlsdesc_plt_entry_size fields.
-	(elfNN_aarch64_link_hash_table_create): Initialise the new fields.
-	(setup_plt_values): New helper function.
-	(bfd_elfNN_aarch64_set_options): Use new bp_info to set plt sizes and
-	bti enable type.
-	(elfNN_aarch64_allocate_dynrelocs): Use new size members instead of
-	fixed macros.
-	(elfNN_aarch64_size_dynamic_sections): Likewise and add checks.
-	(elfNN_aarch64_create_small_pltn_entry): Use new generic pointers
-	to plt stubs instead of fixed ones and update filling them according
-	to the need for bti.
-	(elfNN_aarch64_init_small_plt0_entry): Likewise.
-	(elfNN_aarch64_finish_dynamic_sections): Likewise.
-	(get_plt_type, elfNN_aarch64_get_synthetic_symtab): New.
-	(elfNN_aarch64_plt_sym_val): Update size accordingly.
-	(elfNN_aarch64_link_setup_gnu_properties): Set up plts if BTI GNU NOTE
-	is set.
-	(bfd_elfNN_get_synthetic_symtab): Define.
-	(elfNN_aarch64_merge_gnu_properties): Give out warning with --force-bti
-	and mising BTI NOTE SECTION.
-
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-
-	* elf-properties.c (_bfd_elf_link_setup_gnu_properties): Exclude
-	linker created inputs from merge.
-	* elfnn-aarch64.c (struct elf_aarch64_obj_tdata): Add field for
-	GNU_PROPERTY_AARCH64_FEATURE_1_AND properties.
-	(elfNN_aarch64_link_setup_gnu_properties): New.
-	(elfNN_aarch64_merge_gnu_properties): New.
-	(elf_backend_setup_gnu_properties): Define for AArch64.
-	(elf_backend_merge_gnu_properties): Likewise.
-	* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties): Define.
-	(_bfd_aarch64_elf_parse_gnu_properties): Define.
-	(_bfd_aarch64_elf_merge_gnu_properties): Define.
-	* elfxx-aarch64.h (_bfd_aarch64_elf_link_setup_gnu_properties): Declare.
-	(_bfd_aarch64_elf_parse_gnu_properties): Declare.
-	(_bfd_aarch64_elf_merge_gnu_properties): Declare.
-	(elf_backend_parse_gnu_properties): Define for AArch64.
-
-2019-03-13  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24322
-	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Properly
-	merge GNU_PROPERTY_X86_FEATURE_1_[IBT|SHSTK].
-
-2019-03-12  Alan Modra  <amodra@gmail.com>
-
-	* coffcode.h (buy_and_read): Delete unnecessary forward decl.  Add
-	nmemb parameter.  Use bfd_alloc2.
-	(coff_slurp_line_table): Use bfd_alloc2.  Update buy_and_read calls.
-	Delete assertion.
-	(coff_slurp_symbol_table): Use bfd_alloc2 and bfd_zalloc2.
-	(coff_slurp_reloc_table): Use bfd_alloc2.  Update buy_and_read calls.
-	* coffgen.c (coff_get_reloc_upper_bound): Ensure size calculation
-	doesn't overflow.
-	* elf.c (bfd_section_from_shdr): Use bfd_zalloc2.  Style fix.
-	(assign_section_numbers): Style fix.
-	(swap_out_syms): Use bfd_malloc2.
-	(_bfd_elf_get_reloc_upper_bound): Ensure size calculation doesn't
-	overflow.
-	(_bfd_elf_make_empty_symbol): Style fix.
-	(elfobj_grok_stapsdt_note_1): Formatting.
-	* elfcode.h (elf_object_p): Use bfd_alloc2.
-	(elf_write_relocs, elf_write_shdrs_and_ehdr): Likewise.
-	(elf_slurp_symbol_table): Use bfd_zalloc2.
-	(elf_slurp_reloc_table): Use bfd_alloc2.
-	(_bfd_elf_bfd_from_remote_memory): Use bfd_malloc2.
-	* elf64-sparc (elf64_sparc_get_reloc_upper_bound): Ensure
-	size calculation doesn't overflow.
-	(elf64_sparc_get_dynamic_reloc_upper_bound): Likewise.
-	* mach-o.c (bfd_mach_o_get_reloc_upper_bound): Likewise.
-	* pdp11.c (get_reloc_upper_bound): Copy aoutx.h version.
-
-2019-03-08  Alan Modra  <amodra@gmail.com>
-
-	PR 24311
-	* merge.c (merge_strings): Return secinfo.  Don't pad section
-	to alignment here.
-	(_bfd_merge_sections): Pad section to alignment here, if input
-	sections contributing to merged output all pad to alignment.
-	Formatting.
-
-2019-03-06  Nick Clifton  <nickc@redhat.com>
-
-	* dwarf2.c (_bfd_dwarf2_find_symbol_bias): Check for a NULL symbol
-	table pointer.
-	* coffgen.c (coff_find_nearest_line_with_names): Do not call
-	_bfd_dwarf2_find_symbol_bias if there is no symbol table available.
-
-2019-03-01  Andreas Krebbel  <krebbel@linux.ibm.com>
-
-	This reverts commit 5a12586d44fa8d5dfc74cbca4f2f36a273a16335.
-	2019-01-14  Maamoun Tarsha  <maamountk@hotmail.com>
-
-	PR 20113
-	* elf32-s390.c (allocate_dynrelocs): Update comment.
-
-2019-02-28  Tamar Christina  <tamar.christina@arm.com>
-
-	* elf-eh-frame.c (_bfd_elf_write_section_eh_frame): Correct CIE parse.
-
-2019-02-28  Nick Clifton  <nickc@redhat.com>
-
-	PR 24273
-	* elf.c (bfd_elf_string_from_elf_section): Check for a string
-	section that is not NUL terminated.
-
-2019-02-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24276
-	* elf64-x86-64.c (elf_x86_64_check_relocs): Skip symbol defined
-	by linker when checking copy reloc on protected symbol.
-
-2019-02-24  Alan Modra  <amodra@gmail.com>
-
-	PR 24144
-	* pdp11.c (set_section_contents): Revert 2015-02-24 change.
-
-2019-02-20  Eric Tsai  <erictsai@cadence.com>
+	* wasm-module.c (wasm_scan_name_function_section): Formatting.
+	Delete asect name check.  Move asect NULL check to wasm_object_p.
+	Correct bounds check of sizes against end.  Replace uses of
+	bfd_zalloc with bfd_alloc, zeroing only necessary bytes.  Use
+	just one bfd_release.
+	(wasm_scan): Don't use malloc/strdup for section names,
+	bfd_alloc instead.  Simplify code prefixing section name.
+	Formatting.  Don't attempt to free memory here..
+	(wasm_object_p): ..do so here.
 
-	* elf32-xtensa.c (is_resolvable_asm_expansion): Scan output
-	sections between the call site and call destination and adjust
-	call distance by the largest alignment.
-
-2019-02-20  Alan Hayward  <alan.hayward@arm.com>
-
-	* elf-bfd.h (elfcore_write_aarch_pauth): Add declaration.
-	* elf.c (elfcore_grok_aarch_pauth): New function.
-	(elfcore_grok_note): Check for NT_ARM_PAC_MASK.
-	(elfcore_write_aarch_pauth): New function.
-	(elfcore_write_register_note): Check for AArch64 pauth section.
+2020-01-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
 
-2019-02-20  Alan Modra  <amodra@gmail.com>
+	PR ld/22269
+	* elf32-arm.c (elf32_arm_final_link_relocate): Use
+	UNDEFWEAK_NO_DYNAMIC_RELOC.
+	(allocate_dynrelocs_for_symbol): Likewise.
 
-	PR 24225
-	* elf32-nios2.c (nios2_elf32_relocate_section): Check asprintf
-	return value.
+2020-01-10  Tamar Christina  <tamar.christina@arm.com>
 
-2019-02-20  Michael Roitzsch  <reactorcontrol@icloud.com>
+	PR 25210
+	* elfnn-aarch64.c (_bfd_aarch64_create_stub_section): Remove elfclass.
 
-	* configure.ac (SHARED_LIBADD): Add -liberty -lintl for all
-	Darwin hosts, not just or1k.
-	* configure: Regenerate.
+2020-01-10  Alan Modra  <amodra@gmail.com>
 
-2019-02-20  Alan Modra  <amodra@gmail.com>
+	* coff-alpha.c (alpha_ecoff_object_p): Calculate size in bfd_size_type.
 
-	PR 24236
-	* archive64.c (_bfd_archive_64_bit_slurp_armap): Move code adding
-	sentinel NUL to string buffer nearer to loop where it is used.
-	Don't go past sentinel when scanning strings, and don't write
-	NUL again.
-	* archive.c (do_slurp_coff_armap): Simplify string handling to
-	archive64.c style.
+2020-01-09  Nick Clifton  <nickc@redhat.com>
 
-2019-02-19  Alan Modra  <amodra@gmail.com>
+	PR 25221
+	* bfd.c (bfd_convert_section_contents): Check for a compress
+	header size that is larger than the actual section size.
 
-	PR 24235
-	* pei-x86_64.c (pex64_bfd_print_pdata_section): Correct checks
-	attempting to prevent read past end of section.
+2020-01-08  Alan Modra  <amodra@gmail.com>
 
-2019-02-18  Alan Modra  <amodra@gmail.com>
+	PR 25351
+	* elflink.c (bfd_elf_final_link): Call _bfd_fix_excluded_sec_syms
+	after removing sections.
 
-	PR 24225
-	* elf32-nios2.c (nios2_elf32_relocate_section): Use asprintf and
-	PRIx64 to generate warning messages.  Print local sym names too.
+2020-01-06  Jim Wilson  <jimw@sifive.com>
 
-2019-02-09  Vineet Gupta  <vgupta@synopsys.com>
+	PR 25205
+	* elfnn-riscv.c (riscv_elf_relocate_section) <R_RISCV_CALL>: Add
+	check for !bfd_link_pic (info).
+	<R_RISCV_CALL_PLT>: Move next to R_RISCV_CALL.
+	<R_RISCV_JAL>: Add comment.
+	(_bfd_riscv_relax_section): For plt.offset check, add check for
+	bfd_link_pic (info).  Add comment.
 
-	* elf32-arc (INIT_SYM_STRING): Delete.
-	(FINI_SYM_STRING): Likewise.
-	(init_str): Likewise.
-	(fini_str): Likewise.
+2020-01-06  Alan Modra  <amodra@gmail.com>
 
-2019-02-08  Alan Modra  <amodra@gmail.com>
+	* format.c (bfd_check_format_matches): Ignore bfd_error on target
+	match failures.  Don't init to bfd_error_wrong_format before
+	calling _bfd_check_format.
 
-	* elf32-ppc.c (ppc_elf_relocate_section): Add %X to "unsupported
-	for bss-plt" warning to make it an error.
+2020-01-06  Alan Modra  <amodra@gmail.com>
 
-2019-02-07  Eric Botcazou  <ebotcazou@adacore.com>
+	* vms-alpha.c (_bfd_vms_push, _bfd_vms_pop): Return pass/fail
+	status rather than exiting on stack overflow or underflow.
+	(_bfd_vms_slurp_etir): Adjust to suit.
 
-	PR ld/18841
-	* elf32-sparc.c (elf32_sparc_reloc_type_class): Return
-	reloc_class_ifunc for ifunc symbols.
-	* elf64-sparc.c (elf64_sparc_reloc_type_class): Likewise.
+2020-01-06  Alan Modra  <amodra@gmail.com>
 
-2019-02-07  Eric Botcazou  <ebotcazou@adacore.com>
+	* som.c (som_bfd_fill_in_ar_symbols): Bounds check som_dict index.
 
-	* elf32-visium.c (visium_elf_howto_parity_reloc): Minor tweak.
-	<R_VISIUM_PC16>: Use explicit range test to detect an overflow.
+2020-01-06  Alan Modra  <amodra@gmail.com>
 
-2019-02-07  Nick Clifton  <nickc@redhat.com>
+	* mach-o.c (bfd_mach_o_read_dylinker): Don't read past end of
+	command.  Check name offset is within command.
+	(bfd_mach_o_read_dylib, bfd_mach_o_read_prebound_dylib),
+	(bfd_mach_o_read_prebind_cksum, bfd_mach_o_read_twolevel_hints),
+	(bfd_mach_o_read_fvmlib, bfd_mach_o_read_dysymtab),
+	(bfd_mach_o_read_symtab, bfd_mach_o_read_uuid),
+	(bfd_mach_o_read_linkedit, bfd_mach_o_read_str),
+	(bfd_mach_o_read_dyld_info, bfd_mach_o_read_version_min),
+	(bfd_mach_o_read_encryption_info, bfd_mach_o_read_source_version),
+	(bfd_mach_o_read_encryption_info_64, bfd_mach_o_read_main),
+	(bfd_mach_o_read_note, bfd_mach_o_read_build_version),
+	(bfd_mach_o_read_segment): Similarly.
+	(bfd_mach_o_read_thread): Properly bound check thread struct.
+	Don't repeat checks on second loop.
+	(bfd_mach_o_read_command): Fail on invalid command length.
 
-	* config.bfd: Move the powerpc-lynxos and powerpc-windiss targets
-	into the definitely obsolete list.
+2020-01-04  Alan Modra  <amodra@gmail.com>
 
-2019-02-05  H.J. Lu  <hongjiu.lu@intel.com>
+	* format.c (bfd_check_format_matches): Add preserve_match.
+	Save initial bfd state in "preserve", matched bfd state in
+	"preserve_match".  Save just the first match.  Release
+	bfd_alloc memory.  Restore and finish preserved state as
+	appropriate on all function exit paths.
 
-	PR ld/24151
-	* elf64-x86-64.c (elf_x86_64_need_pic): Check
-	SYMBOL_DEFINED_NON_SHARED_P instead of def_regular.
-	(elf_x86_64_relocate_section): Move PIC check for PC-relative
-	relocations to ...
-	(elf_x86_64_check_relocs): Here.
-	(elf_x86_64_finish_dynamic_symbol): Use SYMBOL_DEFINED_NON_SHARED_P
-	to check if a symbol is defined in a non-shared object.
-	* elfxx-x86.h (SYMBOL_DEFINED_NON_SHARED_P): New.
+2020-01-04  Alan Modra  <amodra@gmail.com>
 
-2019-01-21  Sergio Durigan Junior  <sergiodj@redhat.com>
+	* mmo.c (mmo_mkobject): Allocate tdata with bfd_zalloc.
 
-	* elf32-arm.c (elf32_arm_final_link_relocate): Use 'llabs' instead
-	of 'labs' (and fix GCC warning).
+2020-01-04  Alan Modra  <amodra@gmail.com>
 
-2019-01-25  Nick Clifton  <nickc@redhat.com>
+	* coffgen.c (coff_real_object_p): Free malloc'd memory on target
+	match too.
 
-	* po/ru.po: Updated Russian translation.
+2020-01-03  Nick Clifton  <nickc@redhat.com>
 
-2019-01-23  Nick Clifton  <nickc@redhat.com>
+	PR 25307
+	(bfd_pef_parse_function_stubs): Correct the test that ensures that
+	there is enough data remaining in the code buffer before
+	attempting to read a function stub.
 
-	* po/fr.po: Updated French translation.
+2020-01-03  Nick Clifton  <nickc@redhat.com>
 
-2019-01-21  Nick Clifton  <nickc@redhat.com>
+	PR 25308
+	* elf-properties.c (_bfd_elf_convert_gnu_properties): Check the
+	return value from bfd_malloc.
+	* elf32-arm.c (bfd_elf32_arm_vfp11_fix_veneer_locations): Likewise.
+	(bfd_elf32_arm_stm32l4xx_fix_veneer_locations): Likewise.
+	(elf32_arm_filter_cmse_symbols): Likewise.
+	(elf32_arm_write_section): Likewise.
+	* mach-o.c (bfd_mach_o_core_fetch_environment): Likewise.
+	(bfd_mach_o_follow_dsym): Likewise.
+	* pef.c (bfd_pef_print_loader_section): Likewise.
+	(bfd_pef_scan_start_address): Likewise.
+	(bfd_pef_parse_function_stubs): Likewise.
+	(bfd_pef_parse_symbols): Likewise.
 
-	* po/pt.po: Updated Portuguese translation.
-	* po/uk.po: Updated Ukranian translation.
+2020-01-03  Sergei Trofimovich  <siarheit@google.com>
 
-2019-01-21  Yuri Chornoivan  <yurchor@ukr.net>
+        * elfnn-ia64.c (elfNN_ia64_merge_private_bfd_data): don't fail
+        on binary inputs ld/PR25316.
+        (is_ia64_elf): new helper to filter on ia64 objects.
 
-	PR 24108
-	* elf32-nds32.c (nds32_relocate_section): Add space between words
-	in error message.
-	* elfnn-riscv.c (riscv_version_mismatch): Fix spelling mistake in
-	error message.
-	(riscv_i_or_e_p): Likewise.
-	(riscv_merge_arch_attr_info): Likewise.
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
 
-2019-01-19  Nick Clifton  <nickc@redhat.com>
+	* mach-o.c (cpusubtype, bfd_mach_o_header_p): Insert underscore
+	in parameter names.
+	(bfd_mach_o_scan): Insert underscore in two variable names.
 
-	* version.m4: Reset to 2.32.51
-	* configure: Regenerate.
-	* po/bfd.pot: Regenerate.
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
-2018-06-24  Nick Clifton  <nickc@redhat.com>
-
-	2.32 branch created.
-
-2019-01-16  Kito Cheng  <kito@andestech.com>
-
-	* elf-attrs.c (vendor_obj_attr_size): Return 0 if size is 0 even
-	for OBJ_ATTR_PROC.
-
-2019-01-16  Kito Cheng  <kito@andestech.com>
-	    Nelson Chu  <nelson@andestech.com>
-
-	* elfnn-riscv.c (in_subsets): New.
-	(out_subsets): Likewise.
-	(merged_subsets): Likewise.
-	(riscv_std_ext_p): Likewise.
-	(riscv_non_std_ext_p): Likewise.
-	(riscv_std_sv_ext_p): Likewise.
-	(riscv_non_std_sv_ext_p): Likewise.
-	(riscv_version_mismatch): Likewise.
-	(riscv_i_or_e_p): Likewise.
-	(riscv_merge_std_ext): Likewise.
-	(riscv_merge_non_std_and_sv_ext): Likewise.
-	(riscv_merge_arch_attr_info): Likewise.
-	(riscv_merge_attributes): Likewise.
-	(_bfd_riscv_elf_merge_private_bfd_data): Merge attribute.
-
-	* elfnn-riscv.c (riscv_elf_obj_attrs_arg_type): New.
-	(elf_backend_obj_attrs_vendor): Define.
-	(elf_backend_obj_attrs_section_type): Likewise.
-	(elf_backend_obj_attrs_section): Likewise.
-	(elf_backend_obj_attrs_arg_type): Define as
-	riscv_elf_obj_attrs_arg_type.
-	* elfxx-riscv.c (riscv_estimate_digit): New.
-	(riscv_estimate_arch_strlen1): Likewise.
-	(riscv_estimate_arch_strlen): Likewise.
-	(riscv_arch_str1): Likewise.
-	(riscv_arch_str): Likewise.
-	* elfxx-riscv.h (riscv_arch_str): Declare.
-
-2019-01-14  John Darrington <john@darrington.wattle.id.au>
-
-	* bfd-in2.h [BFD_RELOC_S12Z_OPR]: New reloc.
-	* libbfd.h: regen.
-	* elf32-s12z.c (eld_s12z_howto_table): R_S12Z_OPR takes non zero
-	source field.  (md_apply_fix): Apply final fix
-	to BFD_RELOC_S12Z_OPR.
-	* reloc.c[BFD_RELOC_S12Z_OPR]: New reloc.
-
-2019-01-14  Maamoun Tarsha  <maamountk@hotmail.com>
-
-	PR 20113
-	* elf32-s390.c (allocate_dynrelocs): Update comment.
-
-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
-
-	* warning.m4: Adjust egrep pattern for non-GNU compilers.
+	* Makefile.am: Add z80-elf target support.
+	* configure.ac: Likewise.
+	* targets.c: Likewise.
+	* Makefile.in: Regenerate.
 	* configure: Regenerate.
+	* config.bfd: Add z80-elf target support and new arches: ez80 and
+	z180.
+	* elf32-z80.c: New file.
+	* archures.c: Add new z80 architectures: eZ80 and Z180.
+	* coffcode.h: Likewise.
+	* cpu-z80.c: Likewise.
+	* coff-z80.c: Add new relocations for Z80 target and local label
+	check.
+	* reloc.c: Add new relocs.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Regenerate.
 
-2019-01-08  Alan Modra  <amodra@gmail.com>
-
-	PR 23699
-	PR 24065
-	* ihex.c (ihex_write_object_contents): Properly check 32-bit
-	address range.
-
-2019-01-05  Yoshinori Sato <ysato@users.sourceforge.jp>
-
-	* bfd/archures.c: Add bfd_mach_rx_v2 and bfd_mach_rx_v3.
-	* bfd/bfd-in2.h: Regenerate.
-	* bfd/cpu-rx.c (arch_info_struct): Add RXv2 and RXv3 entry.
-	* bfd/elf32-rx.c (elf32_rx_machine): Add RXv2 and RXv3 support.
-
-2019-01-04  Lifang Xia  <lifang_xia@c-sky.com>
-
-	* config.bfd (csky-*-elf* | csky-*-linux*): Modify the csky
-	default target, little endian target is more suitable.
-
-2019-01-04  Alan Modra  <amodra@gmail.com>
+2020-01-02  Tamar Christina  <tamar.christina@arm.com>
 
-	PR 24061
-	PR 21786
-	* coff-rs6000.c (GET_VALUE_IN_FIELD): Add base parameter and
-	adjust all callers.
-	(EQ_VALUE_IN_FIELD): Likewise.
-	* coff64-rs6000.c (GET_VALUE_IN_FIELD): Likewise.
+	PR 25210
+	PR 24753
+	* elfnn-aarch64.c (_bfd_aarch64_create_stub_section): Set ELF class.
 
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/sim/pru/ChangeLog b/sim/pru/ChangeLog
new file mode 100644
index 0000000000..bccc3efd53
--- /dev/null
+++ b/sim/pru/ChangeLog
@@ -0,0 +1,11 @@
+2019-09-23  Dimitar Dimitrov  <dimitar@dinux.eu>
+
+	* Makefile.in: New file.
+	* aclocal.m4: Regenerated.
+	* config.in: Regenerated.
+	* configure: Regenerated.
+	* configure.ac: New file.
+	* interp.c: New file.
+	* pru.h: New file.
+	* pru.isa: New file.
+	* sim-main.h: New file.
diff --git a/sim/ppc/ChangeLog b/sim/ppc/ChangeLog
index 665c7606d9..4d6fb6dac4 100644
--- a/sim/ppc/ChangeLog
+++ b/sim/ppc/ChangeLog
@@ -1,3 +1,8 @@
+2019-12-19  Tom Tromey  <tromey@adacore.com>
+
+	PR build/24572:
+	* Makefile.in (install-strip): New target.
+
 2019-01-26  Tom Tromey  <tom@tromey.com>
 
 	* Makefile.in (version.c): Use sim's create-version.sh.
diff --git a/sim/testsuite/sim/pru/ChangeLog b/sim/testsuite/sim/pru/ChangeLog
new file mode 100644
index 0000000000..d8b438bb45
--- /dev/null
+++ b/sim/testsuite/sim/pru/ChangeLog
@@ -0,0 +1,13 @@
+2019-09-23  Dimitar Dimitrov  <dimitar@dinux.eu>
+
+	* add.s: New test.
+	* allinsn.exp: New file.
+	* dmem-zero-pass.s: New test.
+	* dmem-zero-trap.s: New test.
+	* dram.s: New test.
+	* jmp.s: New test.
+	* loop-imm.s: New test.
+	* loop-reg.s: New test.
+	* mul.s: New test.
+	* subreg.s: New test.
+	* testutils.inc: New file.
diff --git a/sim/testsuite/ChangeLog b/sim/testsuite/ChangeLog
index e4cf620a0f..3be4a00c5c 100644
--- a/sim/testsuite/ChangeLog
+++ b/sim/testsuite/ChangeLog
@@ -1,3 +1,12 @@
+2019-12-19  Tom Tromey  <tromey@adacore.com>
+
+	PR build/24572:
+	* Makefile.in (install-strip): New target.
+
+2019-09-23  Dimitar Dimitrov  <dimitar@dinux.eu>
+
+	* configure: Regenerate.
+
 2017-12-12  Stafford Horne  <shorne@gmail.com>
 	    Peter Gavin  <pgavin@gmail.com>
 
diff --git a/sim/igen/ChangeLog b/sim/igen/ChangeLog
index 932633edaa..beda37b56e 100644
--- a/sim/igen/ChangeLog
+++ b/sim/igen/ChangeLog
@@ -1,3 +1,8 @@
+2019-12-19  Tom Tromey  <tromey@adacore.com>
+
+	PR build/24572:
+	* Makefile.in (install-strip): New target.
+
 2016-01-10  Mike Frysinger  <vapier@gentoo.org>
 
 	* configure: Regenerate.
diff --git a/sim/arm/ChangeLog b/sim/arm/ChangeLog
index 71097d5ac1..d5f96678cd 100644
--- a/sim/arm/ChangeLog
+++ b/sim/arm/ChangeLog
@@ -1,3 +1,21 @@
+2020-01-17  Christian Biesinger  <cbiesinger@google.com>
+
+	* iwmmxt.c: Fix spelling error (seperate).
+
+2019-12-06  Luis Machado  <luis.machado@linaro.org>
+
+	* armemu.c (isize): Move this declaration ...
+	* arminit.c (isize): ... here.
+	* maverick.h: New file.
+	* wrapper.c: Include "maverick.h".
+	(<struct maverick_regs>, <union maverick_acc_regs>): Remove and update
+	comment.
+	(sim_create_inferior): Cast variables to proper type.
+	* maverick.c: Include "maverick.h".
+	(<struct maverick_regs>, <union maverick_acc_regs>): Move
+	declarations to maverick.h and update comment.
+	(DSPsc, DSPacc, DSPregs): Adjust comment.
+
 2018-01-02  Nick Clifton  <nickc@redhat.com>
 
 	PR 22663
diff --git a/sim/ChangeLog b/sim/ChangeLog
index d16f2cfa57..72d4d4eb36 100644
--- a/sim/ChangeLog
+++ b/sim/ChangeLog
@@ -1,3 +1,26 @@
+2019-12-19  Tom Tromey  <tromey@adacore.com>
+
+	PR build/24572:
+	* Makefile.in (install-strip): New target.
+
+2019-09-23  Dimitar Dimitrov  <dimitar@dinux.eu>
+
+	* MAINTAINERS: Add myself as PRU maintainer.
+	* configure: Regenerated.
+	* configure.tgt: Add PRU.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* ppc/emul_generic.c (emul_add_tree_options): Delete old bfd code.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* common/sim-load.c, * common/sim-utils.c, * cris/sim-if.c,
+	* erc32/func.c, * lm32/sim-if.c, * m32c/load.c, * m32c/trace.c,
+	* m68hc11/interp.c, * ppc/hw_htab.c, * ppc/hw_init.c,
+	* rl78/load.c, * rl78/trace.c, * rx/gdb-if.c, * rx/load.c,
+	* rx/trace.c: Update throughout for bfd section macro changes.
+
 2019-06-13  Stafford Horne  <shorne@gmail.com>
 
 	* or1k/cpu.c: Regenerate.
diff --git a/sim/moxie/ChangeLog b/sim/moxie/ChangeLog
index 86fb334108..9f21b3c90e 100644
--- a/sim/moxie/ChangeLog
+++ b/sim/moxie/ChangeLog
@@ -1,3 +1,8 @@
+2019-12-14  Anthony Green  <green@moxielogic.com>
+
+	* interp.c (sim_engine_run): Make use of sim_io_* functions for
+	read/write/open system calls.  Implement the unlink system call.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/common/ChangeLog b/sim/common/ChangeLog
index b84980bc95..6610c7ba9b 100644
--- a/sim/common/ChangeLog
+++ b/sim/common/ChangeLog
@@ -1,3 +1,17 @@
+2019-12-19  Tom Tromey  <tromey@adacore.com>
+
+	PR build/24572:
+	* Makefile.in (install-strip): New target.
+
+2019-12-01  Pavel I. Kryukov  <kryukov@frtk.ru>
+
+	* sim-utils.c: Prevent buffer overflow.
+
+2019-09-23  Dimitar Dimitrov  <dimitar@dinux.eu>
+
+	* gennltvals.sh: Add PRU libgloss target.
+	* nltvals.def: Regenerate from the latest libgloss sources.
+
 2019-06-13  Stafford Horne  <shorne@gmail.com>
 
 	* cgen-accfp.c (unorderedsf, unordereddf): New functions.
diff --git a/gdbsupport/ChangeLog b/gdbsupport/ChangeLog
new file mode 100644
index 0000000000..3583e5bd34
--- /dev/null
+++ b/gdbsupport/ChangeLog
@@ -0,0 +1,34 @@
+2020-01-17   Pedro Alves  <palves@redhat.com>
+
+	* Makefile.am: Append CXX_DIALECT to CXX.
+	* Makefile.in: Regenerate.
+
+2020-01-17  Pedro Alves  <palves@redhat.com>
+
+	* configure.ac: Generate config.h instead of support-config.h.
+	* common-defs.h: Include <gdbsupport/config.h> instead of
+	<gdbsupport/support-config.h>.
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* Makefile.in: Rebuild.
+	* Makefile.am (check-defines): New target.
+	* check-defines.el: New file.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* configure, Makefile.in, aclocal.m4, common.m4, config.in:
+	Rebuild.
+	* common.m4 (GDB_AC_COMMON): Move many checks from
+	gdb/configure.ac.
+	* acinclude.m4: Include bfd.m4, ptrace.m4.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* common-defs.h: Add GDBSERVER case.  Update includes.
+	* acinclude.m4, aclocal.m4, config.in, configure, configure.ac,
+	Makefile.am, Makefile.in, README: New files.
+	* Moved from ../gdb/gdbsupport/
+
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 95fafe13d9..ee75d098d9 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,35 @@
+2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25516
+	* i386-gen.c (opcode_modifiers): Replace AMD64 and Intel64
+	with ISA64.
+	* i386-opc.h (AMD64): Removed.
+	(Intel64): Likewose.
+	(AMD64): New.
+	(INTEL64): Likewise.
+	(INTEL64ONLY): Likewise.
+	(i386_opcode_modifier): Replace amd64 and intel64 with isa64.
+	* i386-opc.tbl (Amd64): New.
+	(Intel64): Likewise.
+	(Intel64Only): Likewise.
+	Replace AMD64 with Amd64.  Update sysenter/sysenter with
+	Cpu64 and Intel64Only.  Remove AMD64 from sysenter/sysenter.
+	* i386-tbl.h: Regenerated.
+
+2020-02-10  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* aarch64-tbl.h (aarch64_opcode): Set C_MAX_ELEM for SVE bfcvt.
+	Remove C_SCAN_MOVPRFX for SVE bfcvtnt.
+
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 release.
+	* configure: Regenerate.
+
 2020-01-27  Tamar Christina  <tamar.christina@arm.com>
 
 	Backport from mainline.
@@ -9,1514 +41,256 @@
 	* aarch64-dis-2.c: Likewise.
 	* aarch64-opc-2.c: Likewise.
 
-2020-01-20  Mihail Ionescu  <mihail.ionescu@arm.com>
-
-	Backport from trunk
-	2019-11-21  Mihail Ionescu  <mihail.ionescu@arm.com>
+2020-01-21  Jan Beulich  <jbeulich@suse.com>
 
-	* arm-dis.c (arm_opcodes, thumb32_opcodes):
-	Change the coproc CRC conditions to use the extension
-	feature set, second word, base on ARM_EXT2_CRC.
+	* i386-opc.tbl (vcvtneps2bf16x): Add Broadcast, Xmmword, and
+	Dword.
+	(vcvtneps2bf16y): Add Broadcast, Ymmword, and Dword.
+	* i386-tbl.h: Re-generate.
 
-	2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+2020-01-20  Nick Clifton  <nickc@redhat.com>
 
-	PR 25376
-	* arm-dis.c (coprocessor_opcodes): Use CORE_HIGH for MVE bits.
-	(neon_opcodes): Likewise.
-	(select_arm_features): Make sure we enable MVE bits when selecting
-	armv8.1-m.main.  Make sure we do not enable MVE bits when not selecting
-	any architecture.
+	* po/de.po: Updated German translation.
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
 
-2019-10-12  Nick Clifton  <nickc@redhat.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	Release 2.33.1
 	* configure: Regenerate.
 	* po/opcodes.pot: Regenerate.
 
-2019-10-04  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/25012
-	* i386-opc.tbl (push, pop): Re-instate distinct Cpu64 templates
-	with SReg operand.
-	* i386-tbl.h: Re-generate.
-
-2019-09-30  Phil Blundell  <pb@pbcl.net>
-
-	Release 2.33
-	* configure, Makefile.in, po/opcodes.pot: Regenerate.
-
-2019-09-16  Phil Blundell  <pb@pbcl.net>
-
-	* configure: Regenerated.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
-
-2019-09-03  Nick Clifton  <nickc@redhat.com>
-
-	PR 24961
-	* tic30-dis.c (get_indirect_operand): Check for bufcnt being
-	greater than zero before indexing via (bufcnt -1).
-
-2019-09-03  Nick Clifton  <nickc@redhat.com>
-
-	PR 24958
-	* mmix-dis.c (MAX_REG_NAME_LEN): Define.
-	(MAX_SPEC_REG_NAME_LEN): Define.
-	(struct mmix_dis_info): Use defined constants for array lengths.
-	(get_reg_name): New function.
-	(get_sprec_reg_name): New function.
-	(print_insn_mmix): Use new functions.
-
-2019-08-27  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* arm-dis.c (mve_opcodes): Add entry for MVE_VMOV_VEC_TO_VEC.
-	(is_mve_undefined): Add case for MVE_VMOV_VEC_TO_VEC.
-	(print_insn_mve): Add condition to check Qm==Qn of VORR instruction.
-
-2019-08-22  Kyrylo Tkachov <kyrylo.tkachov@arm.com>
-
-	* aarch64-opc.c (aarch64_sys_regs): Update encoding of tfsre0_el1,
-	tfsr_el1, tfsr_el2, tfsr_el3, tfsr_el12.
-	(aarch64_sys_reg_supported_p): Update checks for the above.
-
-2019-08-12  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* arm-dis.c (struct mopcode32 mve_opcodes): Modify the mask for
-	cases MVE_SQRSHRL and MVE_UQRSHLL.
-	(print_insn_mve): Add case for specifier 'k' to check
-	specific bit of the instruction.
-
-2019-08-07  Phillipe Antoine  <p.antoine@catenacyber.fr>
-
-	PR 24854
-	* arc-dis.c (arc_insn_length): Return 0 rather than aborting when
-	encountering an unknown machine type.
-	(print_insn_arc): Handle arc_insn_length returning 0.  In error
-	cases return -1 rather than calling abort.
-
-2019-08-07  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (fld, fstp): Drop FloatMF from extended forms.
-	(fldcw, fnstcw, fstcw, fnstsw, fstsw): Replace FloatMF by
-	IgnoreSize.
-	* i386-tbl.h: Re-generate.
-
-2019-08-05  Barnaby Wilks  <barnaby.wilks@arm.com>
-
-	* arm-dis.c: Only accept signed variants of VQ(R)DMLAH and VQ(R)DMLASH
-	instructions.
-
-2019-07-30  Mel Chen <mel.chen@sifive.com>
-
-	* riscv-opc.c (riscv_opcodes): Set frsr, fssr, frcsr, fscsr, frrm,
-	fsrm, fsrmi, frflags, fsflags, fsflagsi to alias instructions.
-
-	* riscv-opc.c (riscv_opcodes): Adjust order of frsr, frcsr, fssr,
-	fscsr.
-
-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
-
-	* arc-dis.c (skip_this_opcode): Check also for 0x07 major opcodes,
-	and MPY class instructions.
-	(parse_option): Add nps400 option.
-	(print_arc_disassembler_options): Add nps400 info.
-
-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
-
-	* arc-ext-tbl.h (bspeek): Remove it, added to main table.
-	(bspop): Likewise.
-	(modapp): Likewise.
-	* arc-opc.c (RAD_CHK): Add.
-	* arc-tbl.h: Regenerate.
-
-2019-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
-
-	* aarch64-opc.c (aarch64_sys_regs): Add gmid_el1 entry.
-	(aarch64_sys_reg_supported_p): Handle gmid_el1 encoding.
-
-2019-07-22  Barnaby Wilks  <barnaby.wilks@arm.com>
-
-	* arm-dis.c (is_mve_unpredictable): Stop marking some MVE
-	instructions as UNPREDICTABLE.
-
-2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* bpf-desc.c: Regenerated.
-
-2019-07-17  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (static_assert): Define.
-	(main): Use it.
-	* i386-opc.h (Opcode_Modifier_Max): Rename to ...
-	(Opcode_Modifier_Num): ... this.
-	(Mem): Delete.
-
-2019-07-16  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (operand_types): Move RegMem ...
-	(opcode_modifiers): ... here.
-	* i386-opc.h (RegMem): Move to opcode modifer enum.
-	(union i386_operand_type): Move regmem field ...
-	(struct i386_opcode_modifier): ... here.
-	* i386-opc.tbl (RegMem): Define.
-	(mov, movq): Move RegMem on segment, control, debug, and test
-	register flavors.
-	(pextrb): Move RegMem on register only flavors. Add IgnoreSize
-	to non-SSE2AVX flavor.
-	(extractps, pextrw, vcvtps2ph, vextractps, vpextrb, vpextrw):
-	Move RegMem on register only flavors. Drop IgnoreSize from
-	legacy encoding flavors.
-	(movss, movsd, vmovss, vmovsd): Drop RegMem from register only
-	flavors.
-	(vpinsrb, vpinsrw): Drop IgnoreSize where still present on
-	register only flavors.
-	(vmovd): Move RegMem and drop IgnoreSize on register only
-	flavor. Change opcode and operand order to store form.
-	* opcodes/i386-init.h, i386-tbl.h: Re-generate.
-
-2019-07-16  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (operand_type_init, operand_types): Replace SReg
-	entries.
-	* i386-opc.h (SReg2, SReg3): Replace by ...
-	(SReg): ... this.
-	(union i386_operand_type): Replace sreg fields.
-	* i386-opc.tbl (mov, ): Use SReg.
-	(push, pop): Likewies. Drop i386 and x86-64 specific segment
-	register flavors.
-	* i386-reg.tbl (cs, ds, es, fs, gs, ss, flat): Use SReg.
-	* opcodes/i386-init.h, i386-tbl.h: Re-generate.
-
-2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	* bpf-desc.c: Regenerate.
-	* bpf-opc.c: Likewise.
-	* bpf-opc.h: Likewise.
+	Binutils 2.34 branch created.
 
-2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>
+2020-01-17  Christian Biesinger  <cbiesinger@google.com>
 
-	* bpf-desc.c: Regenerate.
-	* bpf-opc.c: Likewise.
+	* opintl.h: Fix spelling error (seperate).
 
-2019-07-10  Hans-Peter Nilsson  <hp@bitrange.com>
+2020-01-17  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* arm-dis.c (print_insn_coprocessor): Rename index to
-	index_operand.
-
-2019-07-05  Kito Cheng <kito.cheng@sifive.com>
-
-	* riscv-opc.c (riscv_insn_types): Add r4 type.
-
-	* riscv-opc.c (riscv_insn_types): Add b and j type.
-
-	* opcodes/riscv-opc.c (riscv_insn_types): Remove incorrect
-	format for sb type and correct s type.
-
-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* aarch64-tbl.h (aarch64_opcode): Set C_SCAN_MOVPRFX for the
-	SVE FMOV alias of FCPY.
-
-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* aarch64-tbl.h (aarch64_opcode_table): Add C_MAX_ELEM flags
-	to SVE fcvtzs, fcvtzu, scvtf and ucvtf entries.
-
-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* aarch64-opc.c (verify_constraints): Skip GPRs when scanning the
-	registers in an instruction prefixed by MOVPRFX.
-
-2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Use new
-	sve_size_13 icode to account for variant behaviour of
-	pmull{t,b}.
-	* aarch64-dis-2.c: Regenerate.
-	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Use new
-	sve_size_13 icode to account for variant behaviour of
-	pmull{t,b}.
-	* aarch64-tbl.h (OP_SVE_VVV_HD_BS): Add new qualifier.
-	(OP_SVE_VVV_Q_D): Add new qualifier.
-	(OP_SVE_VVV_QHD_DBS): Remove now unused qualifier.
-	(struct aarch64_opcode): Split pmull{t,b} into those requiring
-	AES and those not.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* opcodes/i386-gen.c (operand_type_init): Remove
-	OPERAND_TYPE_VEC_IMM4 entry.
-	(operand_types): Remove Vec_Imm4.
-	* opcodes/i386-opc.h (Vec_Imm4): Delete.
-	(union i386_operand_type): Remove vec_imm4.
-	* i386-opc.tbl (vpermil2pd, vpermil2ps): Remove Vec_Imm4.
-	* opcodes/i386-init.h, i386-tbl.h: Re-generate.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (lfence, mfence, sfence, monitor, mwait, vmcall,
-	vmlaunch, vmresume, vmxoff, vmfunc, xgetbv, xsetbv, swapgs,
-	rdtscp, clgi, invlpga, skinit, stgi, vmload, vmmcall, vmrun,
-	vmsave, montmul, xsha1, xsha256, xstorerng, xcryptecb,
-	xcryptcbc, xcryptctr, xcryptcfb, xcryptofb, xstore, clac, stac,
-	monitorx, mwaitx): Drop ImmExt from operand-less forms.
-	* i386-tbl.h: Re-generate.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (and, or): Add Optimize to forms allowing two
-	register operands.
-	* i386-tbl.h: Re-generate.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (C): New.
-	(paddb, paddw, paddd, paddq, paddsb, paddsw, paddusb, paddusw,
-	pand, pcmpeqb, pcmpeqw, pcmpeqd, pmaddwd, pmulhw, pmullw,
-	por, pxor, andps, cmpeqps, cmpeqss, cmpneqps, cmpneqss,
-	cmpordps, cmpordss, cmpunordps, cmpunordss, orps, pavgb, pavgw,
-	pmaxsw, pmaxub, pminsw, pminub, pmulhuw, xorps, andpd, cmpeqpd,
-	cmpeqsd, cmpneqpd, cmpneqsd, cmpordpd, cmpordsd, cmpunordpd,
-	cmpunordsd, orpd, xorpd, pmuludq, vandpd, vandps, vcmpeq_ospd,
-	vcmpeq_osps, vcmpeq_ossd, vcmpeq_osss, vcmpeqpd, vcmpeqps,
-	vcmpeqsd, vcmpeqss, vcmpeq_uqpd, vcmpeq_uqps, vcmpeq_uqsd,
-	vcmpeq_uqss, vcmpeq_uspd, vcmpeq_usps, vcmpeq_ussd,
-	vcmpeq_usss, vcmpfalse_ospd, vcmpfalse_osps, vcmpfalse_ossd,
-	vcmpfalse_osss, vcmpfalsepd, vcmpfalseps, vcmpfalsesd,
-	vcmpfalsess, vcmpneq_oqpd, vcmpneq_oqps, vcmpneq_oqsd,
-	vcmpneq_oqss, vcmpneq_ospd, vcmpneq_osps, vcmpneq_ossd,
-	vcmpneq_osss, vcmpneqpd, vcmpneqps, vcmpneqsd, vcmpneqss,
-	vcmpneq_uspd, vcmpneq_usps, vcmpneq_ussd, vcmpneq_usss,
-	vcmpordpd, vcmpordps, vcmpordsd, vcmpord_spd, vcmpord_sps,
-	vcmpordss, vcmpord_ssd, vcmpord_sss, vcmptruepd, vcmptrueps,
-	vcmptruesd, vcmptruess, vcmptrue_uspd, vcmptrue_usps,
-	vcmptrue_ussd, vcmptrue_usss, vcmpunordpd, vcmpunordps,
-	vcmpunordsd, vcmpunord_spd, vcmpunord_sps, vcmpunordss,
-	vcmpunord_ssd, vcmpunord_sss, vorpd, vorps, vpaddsb, vpaddsw,
-	vpaddb, vpaddd, vpaddq, vpaddw, vpaddusb, vpaddusw, vpand,
-	vpavgb, vpavgw, vpcmpeqb, vpcmpeqd, vpcmpeqw, vpmaddwd,
-	vpmaxsw, vpmaxub, vpminsw, vpminub, vpmulhuw, vpmulhw, vpmullw,
-	vpmuludq, vpor, vpxor, vxorpd, vxorps): Add C to VEX-encoded
-	flavors.
-	* i386-tbl.h: Re-generate.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
+	* i386-opc.tbl: Add {vex} pseudo prefix.
+	* i386-tbl.h: Regenerated.
 
-	* i386-opc.tbl (and, or): Add Optimize to forms allowing two
-	register operands.
-	* i386-tbl.h: Re-generate.
+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
 
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
+	PR 25376
+	* opcodes/arm-dis.c (coprocessor_opcodes): Use CORE_HIGH for MVE bits.
+	(neon_opcodes): Likewise.
+	(select_arm_features): Make sure we enable MVE bits when selecting
+	armv8.1-m.main.  Make sure we do not enable MVE bits when not selecting
+	any architecture.
 
-	* i386-dis-evex-prefix.h: Use PCLMUL for vpclmulqdq.
-	* i386-opc.tbl (vpclmullqlqdq, vpclmulhqlqdq, vpclmullqhqdq,
-	vpclmulhqhqdq): Add CpuVPCLMULQDQ flavors.
-	* i386-tbl.h: Re-generate.
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
 
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
+	* i386-opc.tbl: Drop stale comment from XOP section.
 
-	* i386-opc.tbl (vextractps, vpextrw, vpinsrw): Remove
-	Disp8MemShift from register only templates.
-	* i386-tbl.h: Re-generate.
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
 
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (EXdScalarS, MOD_EVEX_0F10_PREFIX_1,
-	MOD_EVEX_0F10_PREFIX_3, MOD_EVEX_0F11_PREFIX_1,
-	MOD_EVEX_0F11_PREFIX_3, EVEX_W_0F10_P_1_M_0,
-	EVEX_W_0F10_P_1_M_1, EVEX_W_0F10_P_3_M_0, EVEX_W_0F10_P_3_M_1,
-	EVEX_W_0F11_P_1_M_0, EVEX_W_0F11_P_1_M_1, EVEX_W_0F11_P_3_M_0,
-	EVEX_W_0F11_P_3_M_1): Delete.
-	(EVEX_W_0F10_P_1, EVEX_W_0F10_P_3, EVEX_W_0F11_P_1,
-	EVEX_W_0F11_P_3): New.
-	* i386-dis-evex-mod.h: Remove MOD_EVEX_0F10_PREFIX_1,
-	MOD_EVEX_0F10_PREFIX_3, MOD_EVEX_0F11_PREFIX_1, and
-	MOD_EVEX_0F11_PREFIX_3 table entries.
-	* i386-dis-evex-prefix.h: Adjust PREFIX_EVEX_0F10 and
-	PREFIX_EVEX_0F11 table entries.
-	* i386-dis-evex-w.h: Replace EVEX_W_0F10_P_1_M_{0,1},
-	EVEX_W_0F10_P_3_M_{0,1}, EVEX_W_0F11_P_1_M_{0,1}, and
-	EVEX_W_0F11_P_3_M_{0,1} table entries.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (EXdVex, EXdVexS, EXqVex, EXqVexS, XMVex):
-	Delete.
-
-2019-06-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/24719
-	* i386-dis-evex-len.h: Add EVEX_LEN_0F38C6_REG_1_PREFIX_2,
-	EVEX_LEN_0F38C6_REG_2_PREFIX_2, EVEX_LEN_0F38C6_REG_5_PREFIX_2,
-	EVEX_LEN_0F38C6_REG_6_PREFIX_2, EVEX_LEN_0F38C7_R_1_P_2_W_0,
-	EVEX_LEN_0F38C7_R_1_P_2_W_1, EVEX_LEN_0F38C7_R_2_P_2_W_0,
-	EVEX_LEN_0F38C7_R_2_P_2_W_1, EVEX_LEN_0F38C7_R_5_P_2_W_0,
-	EVEX_LEN_0F38C7_R_5_P_2_W_1, EVEX_LEN_0F38C7_R_6_P_2_W_0 and
-	EVEX_LEN_0F38C7_R_6_P_2_W_1.
-	* i386-dis-evex-prefix.h: Update PREFIX_EVEX_0F38C6_REG_1,
-	PREFIX_EVEX_0F38C6_REG_2, PREFIX_EVEX_0F38C6_REG_5 and
-	PREFIX_EVEX_0F38C6_REG_6 entries.
-	* i386-dis-evex-w.h: Update EVEX_W_0F38C7_R_1_P_2,
-	EVEX_W_0F38C7_R_2_P_2, EVEX_W_0F38C7_R_5_P_2 and
-	EVEX_W_0F38C7_R_6_P_2 entries.
-	* i386-dis.c: Add EVEX_LEN_0F38C6_REG_1_PREFIX_2,
-	EVEX_LEN_0F38C6_REG_2_PREFIX_2, EVEX_LEN_0F38C6_REG_5_PREFIX_2,
-	EVEX_LEN_0F38C6_REG_6_PREFIX_2, EVEX_LEN_0F38C7_R_1_P_2_W_0,
-	EVEX_LEN_0F38C7_R_1_P_2_W_1, EVEX_LEN_0F38C7_R_2_P_2_W_0,
-	EVEX_LEN_0F38C7_R_2_P_2_W_1, EVEX_LEN_0F38C7_R_5_P_2_W_0,
-	EVEX_LEN_0F38C7_R_5_P_2_W_1, EVEX_LEN_0F38C7_R_6_P_2_W_0 and
-	EVEX_LEN_0F38C7_R_6_P_2_W_1 enums.
-
-2019-06-27  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (VEX_LEN_0F2A_P_1, VEX_LEN_0F2A_P_3,
-	VEX_LEN_0F2C_P_1, VEX_LEN_0F2C_P_3, VEX_LEN_0F2D_P_1,
-	VEX_LEN_0F2D_P_3): Delete.
-	(vex_len_table): Move vcvtsi2ss, vcvtsi2sd, vcvttss2si,
-	vcvttsd2si, vcvtss2si, and vcvtsd2si leaf entries ...
-	(prefix_table): ... here.
-
-2019-06-27  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (Iq): Delete.
-	(Id): New.
-	(reg_table): Use it for lwpins, lwpval, and bextr. Use Edq for
-	TBM insns.
-	(vex_len_table): Use Edq for vcvtsi2ss, vcvtsi2sd. Use Gdq for
-	vcvttss2si, vcvttsd2si, vcvtss2si, and vcvtsd2si.
-	(OP_E_memory): Also honor needindex when deciding whether an
-	address size prefix needs printing.
-	(OP_I): Remove handling of q_mode. Add handling of d_mode.
-
-2019-06-26  Jim Wilson  <jimw@sifive.com>
-
-	PR binutils/24739
-	* riscv-dis.c (riscv_disasemble_insn): Set info->endian_code.
-	Set info->display_endian to info->endian_code.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (operand_type_init): Correct OPERAND_TYPE_DEBUG
-	entry. Drop OPERAND_TYPE_ACC entry. Add OPERAND_TYPE_ACC8 and
-	OPERAND_TYPE_ACC16 entries. Adjust OPERAND_TYPE_ACC32 and
-	OPERAND_TYPE_ACC64 entries.
-	* i386-init.h: Re-generate.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (Edqa, dqa_mode, EVEX_W_0F2A_P_1, EVEX_W_0F7B_P_1):
-	Delete.
-	(intel_operand_size, OP_E_register, OP_E_memory): Drop handling
-	of dqa_mode.
-	* i386-dis-evex-prefix.h: Move vcvtsi2ss and vcvtusi2ss leaf
-	entries here.
-	* i386-dis-evex-w.h: Drop EVEX_W_0F2A_P_1 and EVEX_W_0F7B_P_1
-	entries. Use Edq for vcvtsi2sd and vcvtusi2sd.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (OP_I64): Forword more cases to OP_I(). Drop local
-	variables.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (prefix_table): Use Edq for cvtsi2ss and cvtsi2sd.
-	Use Gdq for cvttss2si, cvttsd2si, cvtss2si, and cvtsd2si, and
-	movnti.
-	* i386-opc.tbl (movnti): Add IgnoreSize.
+	* i386-opc.tbl (movq): Add VexWIG to SSE2AVX XMM->XMM forms.
+	(extractps): Add VexWIG to SSE2AVX forms.
 	* i386-tbl.h: Re-generate.
 
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
 
-	* i386-opc.tbl (and): Mark Imm8S form for optimization.
+	* i386-opc.tbl (pextrq, pinsrq): Drop IgnoreSize and Qword. Drop
+	Size64 from and use VexW1 on SSE2AVX forms.
+	(vpextrq, vpinsrq): Drop IgnoreSize and Qword. Drop Size64 from
+	VEX-encoded forms. Add Cpu64 to EVEX-encoded forms. Use VexW1.
 	* i386-tbl.h: Re-generate.
 
-2019-06-21  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-dis-evex.h: Break into ...
-	* i386-dis-evex-len.h: New file.
-	* i386-dis-evex-mod.h: Likewise.
-	* i386-dis-evex-prefix.h: Likewise.
-	* i386-dis-evex-reg.h: Likewise.
-	* i386-dis-evex-w.h: Likewise.
-	* i386-dis.c: Include i386-dis-evex-reg.h, i386-dis-evex-prefix.h,
-	i386-dis-evex.h, i386-dis-evex-len.h, i386-dis-evex-w.h and
-	i386-dis-evex-mod.h.
-
-2019-06-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/24700
-	* i386-dis-evex.h (evex_table): Update EVEX_W_0F3819_P_2,
-	EVEX_W_0F381A_P_2, EVEX_W_0F381B_P_2, EVEX_W_0F385A_P_2 and
-	EVEX_W_0F385B_P_2.
-	(evex_len_table): Add EVEX_LEN_0F3819_P_2_W_0,
-	EVEX_LEN_0F3819_P_2_W_1, EVEX_LEN_0F381A_P_2_W_0,
-	EVEX_LEN_0F381A_P_2_W_1, EVEX_LEN_0F381B_P_2_W_0,
-	EVEX_LEN_0F381B_P_2_W_1, EVEX_LEN_0F385A_P_2_W_0,
-	EVEX_LEN_0F385A_P_2_W_1, EVEX_LEN_0F385B_P_2_W_0 and
-	EVEX_LEN_0F385B_P_2_W_1.
-	* i386-dis.c (EVEX_LEN_0F3819_P_2_W_0): New enum.
-	(EVEX_LEN_0F3819_P_2_W_1): Likewise.
-	(EVEX_LEN_0F381A_P_2_W_0): Likewise.
-	(EVEX_LEN_0F381A_P_2_W_1): Likewise.
-	(EVEX_LEN_0F381B_P_2_W_0): Likewise.
-	(EVEX_LEN_0F381B_P_2_W_1): Likewise.
-	(EVEX_LEN_0F385A_P_2_W_0): Likewise.
-	(EVEX_LEN_0F385A_P_2_W_1): Likewise.
-	(EVEX_LEN_0F385B_P_2_W_0): Likewise.
-	(EVEX_LEN_0F385B_P_2_W_1): Likewise.
-
-2019-06-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/24691
-	* i386-dis-evex.h (evex_table): Update EVEX_W_0F3A23_P_2,
-	EVEX_W_0F3A38_P_2, EVEX_W_0F3A39_P_2, EVEX_W_0F3A3A_P_2,
-	EVEX_W_0F3A3B_P_2 and EVEX_W_0F3A43_P_2.
-	(evex_len_table): Add EVEX_LEN_0F3A23_P_2_W_0,
-	EVEX_LEN_0F3A23_P_2_W_1, EVEX_LEN_0F3A38_P_2_W_0,
-	EVEX_LEN_0F3A38_P_2_W_1, EVEX_LEN_0F3A39_P_2_W_0,
-	EVEX_LEN_0F3A39_P_2_W_1, EVEX_LEN_0F3A3A_P_2_W_0,
-	EVEX_LEN_0F3A3A_P_2_W_1, EVEX_LEN_0F3A3B_P_2_W_0,
-	EVEX_LEN_0F3A3B_P_2_W_1, EVEX_LEN_0F3A43_P_2_W_0 and
-	EVEX_LEN_0F3A43_P_2_W_1.
-	* i386-dis.c (EVEX_LEN_0F3A23_P_2_W_0): New enum.
-	(EVEX_LEN_0F3A23_P_2_W_1): Likewise.
-	(EVEX_LEN_0F3A38_P_2_W_0): Likewise.
-	(EVEX_LEN_0F3A38_P_2_W_1): Likewise.
-	(EVEX_LEN_0F3A39_P_2_W_0): Likewise.
-	(EVEX_LEN_0F3A39_P_2_W_1): Likewise.
-	(EVEX_LEN_0F3A3A_P_2_W_0): Likewise.
-	(EVEX_LEN_0F3A3A_P_2_W_1): Likewise.
-	(EVEX_LEN_0F3A3B_P_2_W_0): Likewise.
-	(EVEX_LEN_0F3A3B_P_2_W_1): Likewise.
-	(EVEX_LEN_0F3A43_P_2_W_0): Likewise.
-	(EVEX_LEN_0F3A43_P_2_W_1): Likewise.
-
-2019-06-14  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po; Updated French translation.
-
-2019-06-13  Stafford Horne  <shorne@gmail.com>
-
-	* or1k-asm.c: Regenerated.
-	* or1k-desc.c: Regenerated.
-	* or1k-desc.h: Regenerated.
-	* or1k-dis.c: Regenerated.
-	* or1k-ibld.c: Regenerated.
-	* or1k-opc.c: Regenerated.
-	* or1k-opc.h: Regenerated.
-	* or1k-opinst.c: Regenerated.
-
-2019-06-12  Peter Bergner  <bergner@linux.ibm.com>
-
-	* ppc-opc.c (powerpc_opcodes) <ldmx>: Delete mnemonic.
-
-2019-06-05  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/24633
-	* i386-dis-evex.h (evex_table): Update EVEX_W_0F3A18_P_2,
-	EVEX_W_0F3A19_P_2, EVEX_W_0F3A1A_P_2 and EVEX_W_0F3A1B_P_2.
-	(evex_len_table): EVEX_LEN_0F3A18_P_2_W_0,
-	EVEX_LEN_0F3A18_P_2_W_1, EVEX_LEN_0F3A19_P_2_W_0,
-	EVEX_LEN_0F3A19_P_2_W_1, EVEX_LEN_0F3A1A_P_2_W_0,
-	EVEX_LEN_0F3A1A_P_2_W_1, EVEX_LEN_0F3A1B_P_2_W_0,
-	EVEX_LEN_0F3A1B_P_2_W_1.
-	* i386-dis.c (EVEX_LEN_0F3A18_P_2_W_0): New enum.
-	(EVEX_LEN_0F3A18_P_2_W_1): Likewise.
-	(EVEX_LEN_0F3A19_P_2_W_0): Likewise.
-	(EVEX_LEN_0F3A19_P_2_W_1): Likewise.
-	(EVEX_LEN_0F3A1A_P_2_W_0): Likewise.
-	(EVEX_LEN_0F3A1A_P_2_W_1): Likewise.
-	(EVEX_LEN_0F3A1B_P_2_W_0): Likewise.
-	(EVEX_LEN_0F3A1B_P_2_W_1): Likewise.
-
-2019-06-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/24626
-	* i386-dis.c (print_insn): Check for unused VEX.vvvv and
-	EVEX.vvvv when disassembling VEX and EVEX instructions.
-	(OP_VEX): Set vex.register_specifier to 0 after readding
-	vex.register_specifier.
-	(OP_Vex_2src_1): Likewise.
-	(OP_Vex_2src_2): Likewise.
-	(OP_LWP_E): Likewise.
-	(OP_EX_Vex): Don't check vex.register_specifier.
-	(OP_XMM_Vex): Likewise.
-
-2019-06-04  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>
-	    Lili Cui  <lili.cui@intel.com>
-
-	* i386-dis.c (enum): Add PREFIX_EVEX_0F3868, EVEX_W_0F3868_P_3.
-	* i386-dis-evex.h (evex_table): Add AVX512_VP2INTERSECT
-	instructions.
-	* i386-gen.c (cpu_flag_init): Add CPU_AVX512_VP2INTERSECT_FLAGS,
-	CPU_ANY_AVX512_VP2INTERSECT_FLAGS.
-	(cpu_flags): Add CpuAVX512_VP2INTERSECT.
-	* i386-opc.h (enum): Add CpuAVX512_VP2INTERSECT.
-	(i386_cpu_flags): Add cpuavx512_vp2intersect.
-	* i386-opc.tbl: Add AVX512_VP2INTERSECT insns.
-	* i386-init.h: Regenerated.
-	* i386-tbl.h: Likewise.
-
-2019-06-04  Xuepeng Guo  <xuepeng.guo@intel.com>
-	    Lili Cui  <lili.cui@intel.com>
-
-	* doc/c-i386.texi: Document enqcmd.
-	* testsuite/gas/i386/enqcmd-intel.d: New file.
-	* testsuite/gas/i386/enqcmd-inval.l: Likewise.
-	* testsuite/gas/i386/enqcmd-inval.s: Likewise.
-	* testsuite/gas/i386/enqcmd.d: Likewise.
-	* testsuite/gas/i386/enqcmd.s: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd-inval.l: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd-inval.s: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd.s: Likewise.
-	* testsuite/gas/i386/i386.exp: Run enqcmd-intel, enqcmd-inval,
-	enqcmd, x86-64-enqcmd-intel, x86-64-enqcmd-inval,
-	and x86-64-enqcmd.
-
-2019-06-04  Alan Hayward  <alan.hayward@arm.com>
-
-	* arm-dis.c (is_mve_unpredictable): Remove spurious paranthesis.
-
-2019-06-03  Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (prefix_opcd_indices): Correct size.
-
-2019-05-28  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24625
-	* i386-opc.tbl: Add CheckRegSize to AVX512_BF16 instructions with
-	Disp8ShiftVL.
-	* i386-tbl.h: Regenerated.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* po/POTFILES.in: Regenerate.
-
-2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
-	    Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (insert_d34, extract_d34, insert_nsi34, extract_nsi34),
-	(insert_pcrel, extract_pcrel, extract_pcrel0): New functions.
-	(extract_esync, extract_raq, extract_tbr, extract_sxl): Comment.
-	(powerpc_operands <D34, SI34, NSI34, PRA0, PRAQ, PCREL, PCREL0,
-	XTOP>): Define and add entries.
-	(P8LS, PMLS, P_D_MASK, P_DRAPCREL_MASK): Define.
-	(prefix_opcodes): Add pli, paddi, pla, psubi, plwz, plbz, pstw,
-	pstb, plhz, plha, psth, plfs, plfd, pstfs, pstfd, plq, plxsd,
-	plxssp, pld, plwa, pstxsd, pstxssp, pstxv, pstd, and pstq.
-
-2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
-	    Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (ppc_opts): Add "future" entry.
-	(PREFIX_OPCD_SEGS): Define.
-	(prefix_opcd_indices): New array.
-	(disassemble_init_powerpc): Initialize prefix_opcd_indices.
-	(lookup_prefix): New function.
-	(print_insn_powerpc): Handle 64-bit prefix instructions.
-	* ppc-opc.c (PREFIX_OP, PREFIX_FORM, SUFFIX_MASK, PREFIX_MASK),
-	(PMRR, POWERXX): Define.
-	(prefix_opcodes): New instruction table.
-	(prefix_num_opcodes): New constant.
-
-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* configure.ac (SHARED_DEPENDENCIES): Add case for bfd_bpf_arch.
-	* configure: Regenerated.
-	* Makefile.am: Add rules for the files generated from cpu/bpf.cpu
-	and cpu/bpf.opc.
-	(HFILES): Add bpf-desc.h and bpf-opc.h.
-	(TARGET_LIBOPCODES_CFILES): Add bpf-asm.c, bpf-desc.c, bpf-dis.c,
-	bpf-ibld.c and bpf-opc.c.
-	(BPF_DEPS): Define.
-	* Makefile.in: Regenerated.
-	* disassemble.c (ARCH_bpf): Define.
-	(disassembler): Add case for bfd_arch_bpf.
-	(disassemble_init_for_target): Likewise.
-	(enum epbf_isa_attr): Define.
-	* disassemble.h: extern print_insn_bpf.
-	* bpf-asm.c: Generated.
-	* bpf-opc.h: Likewise.
-	* bpf-opc.c: Likewise.
-	* bpf-ibld.c: Likewise.
-	* bpf-dis.c: Likewise.
-	* bpf-desc.h: Likewise.
-	* bpf-desc.c: Likewise.
-
-2019-05-21  Sudakshina Das  <sudi.das@arm.com>
-
-	* arm-dis.c (coprocessor_opcodes): New instructions for VMRS
-	and VMSR with the new operands.
-
-2019-05-21  Sudakshina Das  <sudi.das@arm.com>
-
-	* arm-dis.c (enum mve_instructions): New enum
-	for csinc, csinv, csneg, csel, cset, csetm, cinv, cinv
-	and cneg.
-	(mve_opcodes): New instructions as above.
-	(is_mve_encoding_conflict): Add cases for csinc, csinv,
-	csneg and csel.
-	(print_insn_mve): Accept new %<bitfield>c and %<bitfield>C.
-
-2019-05-21  Sudakshina Das  <sudi.das@arm.com>
-
-	* arm-dis.c (emun mve_instructions): Updated for new instructions.
-	(mve_opcodes): New instructions for asrl, lsll, lsrl, sqrshrl,
-	sqrshr, sqshl, sqshll, srshr, srshrl, uqrshll, uqrshl, uqshll,
-	uqshl, urshrl and urshr.
-	(is_mve_okay_in_it): Add new instructions to TRUE list.
-	(is_mve_unpredictable): Add cases for UNPRED_R13 and UNPRED_R15.
-	(print_insn_mve): Updated to accept new %j,
-	%<bitfield>m and %<bitfield>n patterns.
-
-2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* mips-opc.c (mips_builtin_opcodes): Change source register
-	constraint for DAUI.
-
-2019-05-20  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Updated French translation.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (thumb32_opcodes): Add new instructions.
-	(enum mve_instructions): Likewise.
-	(enum mve_undefined): Add new reasons.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_undefined): Likewise.
-	(print_mve_size): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (thumb32_opcodes): Add new instructions.
-	(enum mve_instructions): Likewise.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_size): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (thumb32_opcodes): Add new instructions.
-	(enum mve_instructions): Likewise.
-	(is_mve_encoding_conflict): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_size): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (thumb32_opcodes): Add new instructions.
-	(enum mve_instructions): Likewise.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_size): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (thumb32_opcodes): Add new instructions.
-	(enum mve_instructions): Likewise.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (thumb32_opcodes): Add new instructions.
-	(print_insn_thumb32): Handle new instructions.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_undefined): Add new reasons.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_undefined): Likewise.
-	(print_mve_size): Likewise.
-	(print_mve_shift_n): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_rotate): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_undefined): Add new reasons.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_undefined): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_unpredictable): Add new reasons.
-	(enum mve_undefined): Likewise.
-	(is_mve_okay_in_it): Handle new isntructions.
-	(is_mve_encoding_conflict): Likewise.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_vmov_index): Likewise.
-	(print_simd_imm8): Likewise.
-	(print_mve_undefined): Likewise.
-	(print_mve_unpredictable): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_unpredictable): Add new reasons.
-	(enum mve_undefined): Likewise.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_undefined): Likewise.
-	(print_mve_unpredictable): Likewise.
-	(print_mve_rounding_mode): Likewise.
-	(print_mve_vcvt_size): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_unpredictable): Add new reasons.
-	(enum mve_undefined): Likewise.
-	(is_mve_undefined): Handle new instructions.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_undefined): Likewise.
-	(print_mve_unpredictable): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_undefined): Add new reasons.
-	(insns): Add new instructions.
-	(is_mve_encoding_conflict):
-	(print_mve_vld_str_addr): New print function.
-	(is_mve_undefined): Handle new instructions.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_undefined): Likewise.
-	(print_mve_size): Likewise.
-	(print_insn_coprocessor_1): Handle MVE VLDR, VSTR instructions.
-	(print_insn_mve):  Handle new operands.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_unpredictable): Add new reasons.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_unpredictable): Likewise.
-	(mve_opcodes): Add new instructions.
-	(print_mve_unpredictable): Handle new reasons.
-	(print_mve_register_blocks): New print function.
-	(print_mve_size): Handle new instructions.
-	(print_insn_mve): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_unpredictable): Add new reasons.
-	(enum mve_undefined): Likewise.
-	(is_mve_encoding_conflict): Handle new instructions.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(coprocessor_opcodes): Move NEON VDUP from here...
-	(neon_opcodes): ... to here.
-	(mve_opcodes): Add new instructions.
-	(print_mve_undefined):  Handle new reasons.
-	(print_mve_unpredictable): Likewise.
-	(print_mve_size): Handle new instructions.
-	(print_insn_neon): Handle vdup.
-	(print_insn_mve): Handle new operands.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): Add new instructions.
-	(enum mve_unpredictable): Add new values.
-	(mve_opcodes): Add new instructions.
-	(vec_condnames): New array with vector conditions.
-	(mve_predicatenames): New array with predicate suffixes.
-	(mve_vec_sizename): New array with vector sizes.
-	(enum vpt_pred_state): New enum with vector predication states.
-	(struct vpt_block): New struct type for vpt blocks.
-	(vpt_block_state): Global struct to keep track of state.
-	(mve_extract_pred_mask): New helper function.
-	(num_instructions_vpt_block): Likewise.
-	(mark_outside_vpt_block): Likewise.
-	(mark_inside_vpt_block): Likewise.
-	(invert_next_predicate_state): Likewise.
-	(update_next_predicate_state): Likewise.
-	(update_vpt_block_state): Likewise.
-	(is_vpt_instruction): Likewise.
-	(is_mve_encoding_conflict): Add entries for new instructions.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_unpredictable): Handle new cases.
-	(print_instruction_predicate): Likewise.
-	(print_mve_size): New function.
-	(print_vec_condition): New function.
-	(print_insn_mve): Handle vpt blocks and new print operands.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* arm-dis.c (print_insn_coprocessor_1): Disable the use of coprocessors
-	8, 14 and 15 for Armv8.1-M Mainline.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-	    Michael Collison <michael.collison@arm.com>
-
-	* arm-dis.c (enum mve_instructions): New enum.
-	(enum mve_unpredictable): Likewise.
-	(enum mve_undefined): Likewise.
-	(struct mopcode32): New struct.
-	(is_mve_okay_in_it): New function.
-	(is_mve_architecture): Likewise.
-	(arm_decode_field): Likewise.
-	(arm_decode_field_multiple): Likewise.
-	(is_mve_encoding_conflict): Likewise.
-	(is_mve_undefined): Likewise.
-	(is_mve_unpredictable): Likewise.
-	(print_mve_undefined): Likewise.
-	(print_mve_unpredictable): Likewise.
-	(print_insn_coprocessor_1): Use arm_decode_field_multiple.
-	(print_insn_mve): New function.
-	(print_insn_thumb32): Handle MVE architecture.
-	(select_arm_features): Force thumb for Armv8.1-m Mainline.
-
-2019-05-10  Nick Clifton  <nickc@redhat.com>
-
-	PR 24538
-	* ia64-opc.c (ia64_find_matching_opcode): Check for reaching the
-	end of the table prematurely.
-
-2019-05-10  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-        * mips-opc.c (mips_opcodes): Enable ADD, SUB, DADD and DSUB
-	macros for R6.
-
-2019-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (print_insn_powerpc) Don't skip optional operands
-	when -Mraw is in effect.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-dis-2.c: Regenerate.
-	* aarch64-tbl.h (OP_SVE_BBU): New variant set.
-	(OP_SVE_BBB): New variant set.
-	(OP_SVE_DDDD): New variant set.
-	(OP_SVE_HHH): New variant set.
-	(OP_SVE_HHHU): New variant set.
-	(OP_SVE_SSS): New variant set.
-	(OP_SVE_SSSU): New variant set.
-	(OP_SVE_SHH): New variant set.
-	(OP_SVE_SBBU): New variant set.
-	(OP_SVE_DSS): New variant set.
-	(OP_SVE_DHHU): New variant set.
-	(OP_SVE_VMV_HSD_BHS): New variant set.
-	(OP_SVE_VVU_HSD_BHS): New variant set.
-	(OP_SVE_VVVU_SD_BH): New variant set.
-	(OP_SVE_VVVU_BHSD): New variant set.
-	(OP_SVE_VVV_QHD_DBS): New variant set.
-	(OP_SVE_VVV_HSD_BHS): New variant set.
-	(OP_SVE_VVV_HSD_BHS2): New variant set.
-	(OP_SVE_VVV_BHS_HSD): New variant set.
-	(OP_SVE_VV_BHS_HSD): New variant set.
-	(OP_SVE_VVV_SD): New variant set.
-	(OP_SVE_VVU_BHS_HSD): New variant set.
-	(OP_SVE_VZVV_SD): New variant set.
-	(OP_SVE_VZVV_BH): New variant set.
-	(OP_SVE_VZV_SD): New variant set.
-	(aarch64_opcode_table): Add sve2 instructions.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
-	for SVE_SHLIMM_UNPRED_22.
-	(aarch64_print_operand): Add printing for SVE_SHLIMM_UNPRED_22.
-	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHLIMM_UNPRED_22
-	operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
-	sve_size_tsz_bhs iclass encode.
-	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
-	sve_size_tsz_bhs iclass decode.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
-	for SVE_Zm4_11_INDEX.
-	(aarch64_print_operand): Add printing for SVE_Zm4_11_INDEX.
-	(fields): Handle SVE_i2h field.
-	* aarch64-opc.h (enum aarch64_field_kind): New SVE_i2h field.
-	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_Zm4_11_INDEX operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
-	sve_shift_tsz_bhsd iclass encode.
-	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
-	sve_shift_tsz_bhsd iclass decode.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-	* aarch64-asm.c (aarch64_ins_sve_shrimm):
-	(aarch64_encode_variant_using_iclass): Handle
-	sve_shift_tsz_hsd iclass encode.
-	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
-	sve_shift_tsz_hsd iclass decode.
-	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
-	for SVE_SHRIMM_UNPRED_22.
-	(aarch64_print_operand): Add printing for SVE_SHRIMM_UNPRED_22.
-	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHRIMM_UNPRED_22
-	operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
-	sve_size_013 iclass encode.
-	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
-	sve_size_013 iclass decode.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
-	sve_size_bh iclass encode.
-	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
-	sve_size_bh iclass decode.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
-	sve_size_sd2 iclass encode.
-	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
-	sve_size_sd2 iclass decode.
-	* aarch64-opc.c (fields): Handle SVE_sz2 field.
-	* aarch64-opc.h (enum aarch64_field_kind): New SVE_sz2 field.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
-	for SVE_ADDR_ZX.
-	(aarch64_print_operand): Add printing for SVE_ADDR_ZX.
-	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_ADDR_ZX operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
-	for SVE_Zm3_11_INDEX.
-	(aarch64_print_operand): Add printing for SVE_Zm3_11_INDEX.
-	(fields): Handle SVE_i3l and SVE_i3h2 fields.
-	* aarch64-opc.h (enum aarch64_field_kind): New SVE_i3l and SVE_i3h2
-	fields.
-	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_Zm3_11_INDEX operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
-	sve_size_hsd2 iclass encode.
-	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
-	sve_size_hsd2 iclass decode.
-	* aarch64-opc.c (fields): Handle SVE_size field.
-	* aarch64-opc.h (enum aarch64_field_kind): New SVE_size field.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
-	for SVE_IMM_ROT3.
-	(aarch64_print_operand): Add printing for SVE_IMM_ROT3.
-	(fields): Handle SVE_rot3 field.
-	* aarch64-opc.h (enum aarch64_field_kind): New SVE_rot3 field.
-	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_IMM_ROT3 operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-opc.c (verify_constraints): Check for movprfx for sve2
-	instructions.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* aarch64-tbl.h
-	(aarch64_feature_sve2, aarch64_feature_sve2aes,
-	aarch64_feature_sve2sha3, aarch64_feature_sve2sm4,
-	aarch64_feature_sve2bitperm): New feature sets.
-	(SVE2, SVE2_AES, SVE2_SHA3, SVE2_SM4, SVE2_BITPERM): New macros
-	for feature set addresses.
-	(SVE2_INSN, SVE2_INSNC, SVE2AES_INSN, SVE2SHA3_INSN,
-	SVE2SM4_INSN, SVE2SM4_INSNC, SVE2BITPERM_INSN): New macros.
+2020-01-15  Alan Modra  <amodra@gmail.com>
 
-2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>
-	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+	* tic4x-dis.c (tic4x_version): Make unsigned long.
+	(optab, optab_special, registernames): New file scope vars.
+	(tic4x_print_register): Set up registernames rather than
+	malloc'd registertable.
+	(tic4x_disassemble): Delete optable and optable_special.  Use
+	optab and optab_special instead.  Throw away old optab,
+	optab_special and registernames when info->mach changes.
 
-	* mips-dis.c (mips_calculate_combination_ases): Add ISA
-	argument and set ASE_EVA_R6 appropriately.
-	(set_default_mips_dis_options): Pass ISA to above.
-	(parse_mips_dis_option): Likewise.
-	* mips-opc.c (EVAR6): New macro.
-	(mips_builtin_opcodes): Add llwpe, scwpe.
+2020-01-14  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
-2019-05-01  Sudakshina Das  <sudi.das@arm.com>
+	PR 25377
+	* z80-dis.c (suffix): Use .db instruction to generate double
+	prefix.
 
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-	* aarch64-opc.c (operand_general_constraint_met_p): Add case for
-	AARCH64_OPND_TME_UIMM16.
-	(aarch64_print_operand): Likewise.
-	* aarch64-tbl.h (QL_IMM_NIL): New.
-	(TME): New.
-	(_TME_INSN): New.
-	(struct aarch64_opcode): Add tstart, tcommit, ttest and tcancel.
+2020-01-14  Alan Modra  <amodra@gmail.com>
 
-2019-04-29  John Darrington  <john@darrington.wattle.id.au>
+	* z8k-dis.c (unpack_instr): Formatting.  Cast unsigned short
+	values to unsigned before shifting.
 
-        * s12z-opc.c (shift_discrim): Return OP_INVALID when reading fails.
+2020-01-13  Thomas Troeger  <tstroege@gmx.de>
 
-2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>
-	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+	* arm-dis.c (print_insn_arm): Fill in insn info fields for control
+	flow instructions.
+	(print_insn_thumb16, print_insn_thumb32): Likewise.
+	(print_insn): Initialize the insn info.
+	* i386-dis.c (print_insn): Initialize the insn info fields, and
+	detect jumps.
 
-	* mips-opc.c (mips_builtin_opcodes): Add llwp, lldp, scwp, scdp.
+2012-01-13  Claudiu Zissulescu <claziss@gmail.com>
 
-2019-04-24  John Darrington  <john@darrington.wattle.id.au>
+	* arc-opc.c (C_NE): Make it required.
 
-        * s12z-opc.h: Add extern "C" bracketing to help
-	users who wish to use this interface in c++ code.
+2012-01-13  Claudiu Zissulescu <claziss@gmail.com>
 
-2019-04-24  John Darrington  <john@darrington.wattle.id.au>
+        * opcode/arc-dis.c (regnames): Correct ACCL/ACCH naming, fix typo
+	reserved register name.
 
-	* s12z-opc.c (bm_decode): Handle bit map operations with the
-	"reserved0" mode.
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+	* ns32k-dis.c (Is_gen): Use strchr, add 'f'.
+	(print_insn_ns32k): Adjust ioffset for 'f' index_offset.
 
-	* arm-dis.c (coprocessor_opcodes): Document new %J and %K format
-	specifier.  Add entries for VLDR and VSTR of system registers.
-	(print_insn_coprocessor): Forbid coprocessor numbers 8, 14 and 15 in
-	coprocessor instructions on Armv8.1-M Mainline targets.  Add handling
-	of %J and %K format specifier.
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+	* wasm32-dis.c (print_insn_wasm32): Localise variables.  Store
+	result of wasm_read_leb128 in a uint64_t and check that bits
+	are not lost when copying to other locals.  Use uint32_t for
+	most locals.  Use PRId64 when printing int64_t.
 
-	* arm-dis.c (coprocessor_opcodes): Document new %C format control code.
-	Add new entries for VSCCLRM instruction.
-	(print_insn_coprocessor): Handle new %C format control code.
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+	* score-dis.c: Formatting.
+	* score7-dis.c: Formatting.
 
-	* arm-dis.c (enum isa): New enum.
-	(struct sopcode32): New structure.
-	(coprocessor_opcodes): change type of entries to struct sopcode32 and
-	set isa field of all current entries to ANY.
-	(print_insn_coprocessor): Change type of insn to struct sopcode32.
-	Only match an entry if its isa field allows the current mode.
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+	* score-dis.c (print_insn_score48): Use unsigned variables for
+	unsigned values.  Don't left shift negative values.
+	(print_insn_score32): Likewise.
+	* score7-dis.c (print_insn_score32, print_insn_score16): Likewise.
 
-	* arm-dis.c (thumb_opcodes): Document %n control code.  Add entry for
-	CLRM.
-	(print_insn_thumb32): Add logic to print %n CLRM register list.
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	* tic4x-dis.c (tic4x_print_register): Remove dead code.
 
-	* arm-dis.c (print_insn_thumb32): Updated to accept new %P
-	and %Q patterns.
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	* fr30-ibld.c: Regenerate.
 
-	* arm-dis.c (thumb32_opcodes): New instruction bfcsel.
-	(print_insn_thumb32): Edit the switch case for %Z.
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	* xgate-dis.c (print_insn): Don't left shift signed value.
+	(ripBits): Formatting, use 1u.
 
-	* arm-dis.c (print_insn_thumb32): Updated to accept new %Z pattern.
+2020-01-10  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	* tilepro-opc.c (parse_insn_tilepro): Make opval unsigned.
+	* tilegx-opc.c (parse_insn_tilegx): Likewise.  Delete raw_opval.
 
-	* arm-dis.c (thumb32_opcodes): New instruction bfl.
+2020-01-10  Alan Modra  <amodra@gmail.com>
 
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	* m10300-dis.c (disassemble): Move extraction of DREG, AREG, RREG,
+	and XRREG value earlier to avoid a shift with negative exponent.
+	* m10200-dis.c (disassemble): Similarly.
 
-	* arm-dis.c (print_insn_thumb32): Updated to accept new %Y pattern.
+2020-01-09  Nick Clifton  <nickc@redhat.com>
 
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	PR 25224
+	* z80-dis.c (ld_ii_ii): Use correct cast.
 
-	* arm-dis.c (print_insn_thumb32): Add '%<bitfield>S' to print an
-	Arm register with r13 and r15 unpredictable.
-	(thumb32_opcodes): New instructions for bfx and bflx.
+2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	PR 25224
+	* z80-dis.c (ld_ii_ii): Use character constant when checking
+	opcode byte value.
 
-	* arm-dis.c (thumb32_opcodes): New instructions for bf.
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
 
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* arm-dis.c (print_insn_thumb32): Updated to accept new %W pattern.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* arm-dis.c (print_insn_thumb32): Updated to accept new %G pattern.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* arm-dis.c (select_arm_features): Add logic for Armv8.1-M Mainline.
-
-2019-04-12  John Darrington <john@darrington.wattle.id.au>
-
-	s12z-dis.c, s12z-opc.c, s12z-opc.h: Replace "operator" with
-	"optr". ("operator" is a reserved word in c++).
-
-2019-04-11  Sudakshina Das  <sudi.das@arm.com>
-
-	* aarch64-opc.c (aarch64_print_operand): Add case for
-	AARCH64_OPND_Rt_SP.
-	(verify_constraints): Likewise.
-	* aarch64-tbl.h (QL_LDST_AT): Update to add SP qualifier.
-	(struct aarch64_opcode): Update stg, stzg, st2g, stz2g instructions
-	to accept Rt|SP as first operand.
-	(AARCH64_OPERANDS): Add new Rt_SP.
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-
-2019-04-11  Sudakshina Das  <sudi.das@arm.com>
-
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Likewise.
-	* aarch64-opc-2.c: Likewise.
-	* aarch64-tbl.h (aarch64_opcode): Add new ldgm and stgm.
-
-2019-04-09  Robert Suchanek  <robert.suchanek@mips.com>
-
-	* mips-opc.c (mips_builtin_opcodes): Add RDHWR rt rd sel.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-opc.tbl: Consolidate AVX512 BF16 entries.
-	* i386-init.h: Regenerated.
-
-2019-04-07  Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (print_insn_powerpc): Use a tiny state machine
-	op_separator to control printing of spaces, comma and parens
-	rather than need_comma, need_paren and spaces vars.
-
-2019-04-07  Alan Modra  <amodra@gmail.com>
-
-	PR 24421
-	* arm-dis.c (print_insn_coprocessor): Correct bracket placement.
-	(print_insn_neon, print_insn_arm): Likewise.
-
-2019-04-05  Xuepeng Guo  <xuepeng.guo@intel.com>
-
-	* i386-dis-evex.h (evex_table): Updated to support BF16
-	instructions.
-	* i386-dis.c (enum): Add EVEX_W_0F3852_P_1, EVEX_W_0F3872_P_1
-	and EVEX_W_0F3872_P_3.
-	* i386-gen.c (cpu_flag_init): Add CPU_AVX512_BF16_FLAGS.
-	(cpu_flags): Add bitfield for CpuAVX512_BF16.
-	* i386-opc.h (enum): Add CpuAVX512_BF16.
-	(i386_cpu_flags): Add bitfield for cpuavx512_bf16.
-	* i386-opc.tbl: Add AVX512 BF16 instructions.
-	* i386-init.h: Regenerated.
-	* i386-tbl.h: Likewise.
-
-2019-04-05  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (XLBH_MASK): Subtract off BH field from BB_MASK.
-	(powerpc_opcodes): Reorder bcctr and bclr extended mnemonics
-	to favour printing of "-" branch hint when using the "y" bit.
-	Allow BH field on bc{ctr,lr,tar}{,l}{-,+}.
-
-2019-04-05  Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (print_insn_powerpc): Delay printing spaces after
-	opcode until first operand is output.
-
-2019-04-04  Peter Bergner  <bergner@linux.ibm.com>
-
-	PR gas/24349
-	* ppc-opc.c (valid_bo_pre_v2): Add comments.
-	(valid_bo_post_v2): Add support for 'at' branch hints.
-	(insert_bo): Only error on branch on ctr.
-	(get_bo_hint_mask): New function.
-	(insert_boe): Add new 'branch_taken' formal argument.  Add support
-	for inserting 'at' branch hints.
-	(extract_boe): Add new 'branch_taken' formal argument.  Add support
-	for extracting 'at' branch hints.
-	(insert_bom, extract_bom, insert_bop, extract_bop): New functions.
-	(BOE): Delete operand.
-	(BOM, BOP): New operands.
-	(RM): Update value.
-	(XLYLK, XLYLK_MASK, XLYBB_MASK): Delete.
-	(powerpc_opcodes) <bc-, bcl-, bca-, bcla-, bclr-, bclrl-, bcctr-,
-	bcctrl-, bctar-, bctarl->: Replace BOE with BOM.
-	(powerpc_opcodes) <bc+, bcl+, bca+, bcla+, bclr+, bclrl+, bcctr+,
-	bcctrl+, bctar+, bctarl+>: Replace BOE with BOP.
-	<bdnztar, bdnztarl, bdztar, bdztarl, btar, btarl, bdnztar-, bdnztarl-,
-	bdnztar+, bdnztarl+, bdztar-, bdztarl-, bdztar+, bdztarl+, bgetar,
-	bnltar, bgetarl, bnltarl, bletar, bngtar, bletarl, bngtarl, bnetar,
-	bnetarl, bnstar, bnutar, bnstarl, bnutarl, bgetar-, bnltar-, bgetarl-,
-	bnltarl-, bletar-, bngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-,
-	bnstar-, bnutar-, bnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+,
-	bnltarl+, bletar+, bngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+,
-	bnstar+, bnutar+, bnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl,
-	beqtar, beqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,
-	bgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,
-	buntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,
-	bsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,
-	bdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,
-	bdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,
-	bttarl+>: New extended mnemonics.
-
-2019-03-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24390
-	* ppc-opc.c (BTF): Define.
-	(powerpc_opcodes): Use for mtfsb*.
-	* ppc-dis.c (print_insn_powerpc): Print fields with both
-	PPC_OPERAND_CR_REG and PPC_OPERAND_CR_BIT as a plain number.
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* arm-dis.c (struct arm_private_data): Remove has_mapping_symbols.
-	(mapping_symbol_for_insn): Implement new algorithm.
-	(print_insn): Remove duplicate code.
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* aarch64-dis.c (print_insn_aarch64):
-	Implement override.
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* aarch64-dis.c (print_insn_aarch64): Update the mapping symbol search
-	order.
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* aarch64-dis.c (last_stop_offset): New.
-	(print_insn_aarch64): Use stop_offset.
-
-2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24359
-	* i386-gen.c (cpu_flag_init): Add CPU_ANY_AVX512F_FLAGS to
-	CPU_ANY_AVX2_FLAGS.
-	* i386-init.h: Regenerated.
-
-2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24348
-	* i386-opc.tbl: Add Optimize to vmovdqa32, vmovdqa64, vmovdqu8,
-	vmovdqu16, vmovdqu32 and vmovdqu64.
-	* i386-tbl.h: Regenerated.
-
-2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>
-
-	* s390-opc.txt: Rename selhhhr to selfhr.  Remove optional operand
-	from vstrszb, vstrszh, and vstrszf.
-
-2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>
-
-	* s390-opc.txt: Add instruction descriptions.
-
-2019-02-08  Jim Wilson  <jimw@sifive.com>
-
-	* riscv-opc.c (riscv_opcodes) <beq>: Use Cz to compress 3 operand form.
-	<bne>: Likewise.
+	* i386-dis.c (SEP_Fixup): New.
+	(SEP): Define.
+	(dis386_twobyte): Use it for sysenter/sysexit.
+	(enum x86_64_isa): Change amd64 enumerator to value 1.
+	(OP_J): Compare isa64 against intel64 instead of amd64.
+	* i386-opc.tbl (sysenter, sysexit): Split into AMD64 and Intel64
+	forms.
+	* i386-tbl.h: Re-generate.
 
-2019-02-07  Tamar Christina  <tamar.christina@arm.com>
+2020-01-08  Alan Modra  <amodra@gmail.com>
 
-	* arm-dis.c (arm_opcodes): Redefine hlt to armv1.
+	* z8k-dis.c: Include libiberty.h
+	(instr_data_s): Make max_fetched unsigned.
+	(z8k_lookup_instr): Make nibl_index and tabl_index unsigned.
+	Don't exceed byte_info bounds.
+	(output_instr): Make num_bytes unsigned.
+	(unpack_instr): Likewise for nibl_count and loop.
+	* z8kgen.c (gas <opcode_entry_type>): Make noperands, length and
+	idx unsigned.
+	* z8k-opc.h: Regenerate.
 
-2019-02-07  Tamar Christina  <tamar.christina@arm.com>
+2020-01-07  Shahab Vahedi  <shahab@synopsys.com>
 
-	PR binutils/23212
-	* aarch64-opc.h (enum aarch64_field_kind): Add FLD_sz.
-	* aarch64-opc.c (verify_elem_sd): New.
-	(fields): Add FLD_sz entr.
-	* aarch64-tbl.h (_SIMD_INSN): New.
-	(aarch64_opcode_table): Add elem_sd verifier to fmla, fmls, fmul and
-	fmulx scalar and vector by element isns.
+	* arc-tbl.h (llock): Use 'LLOCK' as class.
+	(llockd): Likewise.
+	(scond): Use 'SCOND' as class.
+	(scondd): Likewise.
+	(llockd): Set data_size_mode to 'C_ZZ_D' which is 64-bit.
+	(scondd): Likewise.
 
-2019-02-07  Nick Clifton  <nickc@redhat.com>
+2020-01-06  Alan Modra  <amodra@gmail.com>
 
-	* po/sv.po: Updated Swedish translation.
+	* m32c-ibld.c: Regenerate.
 
-2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>
+2020-01-06  Alan Modra  <amodra@gmail.com>
 
-	* s390-mkopc.c (main): Accept arch13 as cpu string.
-	* s390-opc.c: Add new instruction formats and instruction opcode
-	masks.
-	* s390-opc.txt: Add new arch13 instructions.
+	PR 25344
+	* z80-dis.c (suffix): Don't use a local struct buffer copy.
+	Peek at next byte to prevent recursion on repeated prefix bytes.
+	Ensure uninitialised "mybuf" is not accessed.
+	(print_insn_z80): Don't zero n_fetch and n_used here,..
+	(print_insn_z80_buf): ..do it here instead.
 
-2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+2020-01-04  Alan Modra  <amodra@gmail.com>
 
-	* aarch64-tbl.h (QL_LDST_AT): Update macro.
-	(aarch64_opcode): Change encoding for stg, stzg
-	st2g and st2zg.
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
+	* m32r-ibld.c: Regenerate.
 
-2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+2020-01-04  Alan Modra  <amodra@gmail.com>
 
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Likewise.
-	* aarch64-opc-2.c: Likewise.
-	* aarch64-tbl.h (aarch64_opcode): Add new stzgm.
-
-2019-01-25  Sudakshina Das  <sudi.das@arm.com>
-	    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
-
-	* aarch64-asm.c (aarch64_ins_addr_simple_2): Remove.
-	* aarch64-asm.h (ins_addr_simple_2): Likeiwse.
-	* aarch64-dis.c (aarch64_ext_addr_simple_2): Likewise.
-	* aarch64-dis.h (ext_addr_simple_2): Likewise.
-	* aarch64-opc.c (operand_general_constraint_met_p): Remove
-	case for ldstgv_indexed.
-	(aarch64_print_operand): Remove case for AARCH64_OPND_ADDR_SIMPLE_2.
-	* aarch64-tbl.h (struct aarch64_opcode): Remove ldgv and stgv.
-	(AARCH64_OPERANDS): Remove ADDR_SIMPLE_2.
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-
-2019-01-23  Nick Clifton  <nickc@redhat.com>
+	* cr16-dis.c (cr16_match_opcode): Avoid shift left of signed value.
 
-	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+2020-01-04  Alan Modra  <amodra@gmail.com>
 
-2019-01-21  Nick Clifton  <nickc@redhat.com>
+	* crx-dis.c (match_opcode): Avoid shift left of signed value.
 
-	* po/de.po: Updated German translation.
-	* po/uk.po: Updated Ukranian translation.
+2020-01-04  Alan Modra  <amodra@gmail.com>
 
-2019-01-20  Chenghua Xu  <paul.hua.gm@gmail.com>
-	* mips-dis.c (mips_arch_choices): Fix typo in
-	gs464, gs464e and gs264e descriptors.
+	* d30v-dis.c (print_insn): Avoid signed overflow in left shift.
 
-2019-01-19  Nick Clifton  <nickc@redhat.com>
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
 
-	* configure: Regenerate.
-	* po/opcodes.pot: Regenerate.
+	* aarch64-tbl.h (aarch64_opcode_table): Use
+	SVE_ADDR_RX_LSL{1,2,3} for LD1RO{H,W,D}.
 
-2018-06-24  Nick Clifton  <nickc@redhat.com>
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
 
-	2.32 branch created.
+	* aarch64-tbl.h (aarch64_opcode_table): Correct SIMD
+	forms of SUDOT and USDOT.
 
-2019-01-09  John Darrington <john@darrington.wattle.id.au>
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
 
-	* s12z-dis.c (print_insn_s12z):  Do not dereference an operand
-	if it is null.
-	-dis.c (opr_emit_disassembly): Do not omit an index if it is
-	zero.
+	* aarch64-tbl.h (aarch64_opcode_table): Drop 'i' from
+	uzip{1,2}.
+	* opcodes/aarch64-dis-2.c: Re-generate.
 
-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
 
-	* configure: Regenerate.
+	* aarch64-tbl.h (aarch64_opcode_table): Correct 64-bit
+	FMMLA encoding.
+	* opcodes/aarch64-dis-2.c: Re-generate.
 
-2019-01-07  Alan Modra  <amodra@gmail.com>
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
-	* configure: Regenerate.
-	* po/POTFILES.in: Regenerate.
-
-2019-01-03  John Darrington <john@darrington.wattle.id.au>
-
-	* s12z-opc.c: New file.
-	* s12z-opc.h: New file.
-	* s12z-dis.c: Removed all code not directly related to display
-	of instructions.  Used the interface provided by the new files
-	instead.
-	* Makefile.am (TARGET_LIBOPCODES_CFILES) Add s12z-opc.c.
-	* Makefile.in: Regenerate.
-	* configure.ac (bfd_s12z_arch): Correct the dependencies.
-	* configure: Regenerate.
+	* z80-dis.c: Add support for eZ80 and Z80 instructions.
 
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/etc/ChangeLog b/etc/ChangeLog
index 78e9366e34..8742e2afc1 100644
--- a/etc/ChangeLog
+++ b/etc/ChangeLog
@@ -1,3 +1,7 @@
+2020-01-15  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* texi2pod.pl: Handle @t{...} tags.
+
 2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>
 
 	* configure.in: Remove AC_PREREQ.
diff --git a/binutils/ChangeLog b/binutils/ChangeLog
index d0e7778c15..068b2dbb16 100644
--- a/binutils/ChangeLog
+++ b/binutils/ChangeLog
@@ -1,1069 +1,139 @@
-2019-10-12  Nick Clifton  <nickc@redhat.com>
+2020-02-01  Nick Clifton  <nickc@redhat.com>
 
-	Release 2.33.1
 	* configure: Regenerate.
-	* binutils.pot: Regenerate.
 
-2019-10-09  Alan Modra  <amodra@gmail.com>
+2020-02-01  Nick Clifton  <nickc@redhat.com>
 
-	Apply from master
-	2019-10-09  Alan Modra  <amodra@gmail.com>
-	PR 25079
-	* ar.c (decode_options): Don't try for command options if
-	write_armap or mri_mode is selected.
-
-	2019-09-30  Alan Modra  <amodra@gmail.com>
-	PR 25046
-	* readelf.c (process_program_headers): Clear dynamic_addr and
-	dynamic_size earlier.
-
-2019-10-02  Niklas Gürtler  <profclonk@gmail.com>
-
-	PR 24942
-	* objcopy.c (copy_usage): Update description of
-	--set-section-alignment.
-	(copy_main): Interpret numeric argument of --set-section-alignment
-	as a byte alignment, not a power of two alignment.
-	* doc/binutils.texi: Update description of
-	--set-section-alignment.
-	* testsuite/binutils-all/set-section-alignment.d: New test.
-	* testsuite/binutils-all/objcopy.exp: Run the new test.
-
-2019-09-30  Phil Blundell  <pb@pbcl.net>
-
-	Release 2.33
-	* configure, Makefile.in, doc/Makefile.in, po/binutils.pot: Regenerate.
-
-2019-09-25  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2019-09-24  Alan Modra  <amodra@gmail.com>
-	PR 25031
-	* nm.c (print_format_string): New.
-	(get_print_format): Delete saved_format.  Move earlier.
-	(set_print_width): Call get_print_format.
-	(print_value): Use print_format_string.
-
-	2019-09-23  Alan Modra  <amodra@gmail.com>
-	PR 25018
-	* dwarf.c (get_type_signedness): Delete ineffective pointer
-	comparison check.  Properly range check uvalue offset on
-	recursive call.
-	(read_and_display_attr_value): Range check uvalue offset before
-	calling get_type_signedness.
-
-2019-09-19  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/binutils-all/objdump.exp (objdump -S): Update testcase.
-
-2019-09-16  Phil Blundell  <pb@pbcl.net>
-
-	* Makefile.in, doc/Makefile.in, configure: Regenerated.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
-
-2019-09-06  Alan Modra  <amodra@gmail.com>
-
-	* nm.c (print_object_filename_bsd, print_object_filename_sysv),
-	(print_object_filename_posix, print_archive_filename_bsd),
-	(print_archive_filename_sysv, print_archive_filename_posix),
-	(print_archive_member_bsd, print_archive_member_sysv),
-	(print_archive_member_posix): Constify parameter.
-	(struct output_fns <print_object_filename, print_archive_filename>),
-	(<print_archive_member>): Likewise.
-	* objcopy.c (copy_archive): Add cast for make_tempdir.
-
-2019-08-29  Alan Modra  <amodra@gmail.com>
-
-	* dwarf.c (check_uvalue): Remove unnecessary pointer checks.
-
-2019-08-28  Niklas Gürtler  <profclonk@gmail.com>
-
-	PR 24942
-	* objcopy.c (SECTION_CONTEXT_SET_ALIGNMENT): New constant.
-	(struct section_list): Add alignment field.
-	(command_line_switch): Add OPTION_SET_SECTION_ALIGNMENT.
-	(copy_options): Add --set-section-alignment.
-	(copy_usage): Describe --set-section-alignment.
-	(find_section_list): Initialise the alignment field.
-	(setup_section): Handle the alignment field.
-	(copy_main): Handle OPTION_SET_SECTION_ALIGNMENT.
-	* doc/binutils.texi: Document the new feature.
-	* NEWS: Mention the new feature.
-
-2019-08-28  Nick Clifton  <nickc@redhat.com>
-
-	PR 24931
-	* objdump.c (source_comment): New static variable.
-	(option_values): Add OPTION_SOURCE_COMMENT.
-	(long_opions): Add --source-comment.
-	(print_line): If source comment is set, use it as a prefix to the
-	source code line.
-	(main): Handle OPTION_SOURCE_COMMENT.
-	* doc/binutils.texi: Document the new option.
-	* NEWS: Mention the new feature.
-	* testsuite/binutils-all/objdump.exp (test_objdump_S): Add tests
-	of the -S and --source-comment options.
-
-2019-08-27  Nick Clifton  <nickc@redhat.com>
-
-	PR 24510
-	* dwarf.c (MAX_CU_NESTING): New constant.
-	(level_type_signed): New static array.
-	(skip_attr_bytes): New function.
-	(get_type_signedness): New function.
-	(read_and_print_leb128): New function.
-	(display_discr_list): New function.
-	(read_and_display_attr_value): Add start parameter.
-	Use new functions when handling DW_AT_type and DW_AT_discr_list.
-	(read_and_display_attr): Add start parameter.  Pass to
-	read_and_display_attr_value.
-	(process_debug_info): Update call to read_and_display_attr.
-	(display_formatted_table): Likewise.
-	(display_debug_lines_decoded): Likewise.  Also add start
-	parameter.
-	(display_debug_lines): Likewise.
-	* testsuite/binutils-all/dwarf-attributes.S: Update discrimination
-	lists.
-	* testsuite/binutils-all/dwarf-attributes.W: Update expected
-	output.
-
-2019-08-26  Alan Modra  <amodra@gmail.com>
-
-	PR 24938
-	* debug.c (debug_write_type): Call empty_type for NULL type here..
-	(debug_write_type): ..rather than in just one case here.
-
-2019-08-23  Nick Clifton  <nickc@redhat.com>
-
-	PR 24829
-	* dwarf.c (check_uvalue): New function.  Ensures that a block's
-	size is valid.
-	(read_and_display_attr_value): Use check_value when processsing
-	DW_FORM_block<n> attributes.
-
-2019-08-22  Nick Clifton  <nickc@redhat.com>
-
-	PR 24921
-	* dwarf.c (process_cu_tu_index): Handle the case where a table
-	does not have any columns.
-
-2019-08-19  Alan Modra  <amodra@gmail.com>
-
-	PR 24898
-	* dwarf.c (display_debug_frames): Use the read_cie check and error
-	for augmentation data length.
-
-2019-08-17  Alan Modra  <amodra@gmail.com>
-
-	PR 24911
-	* dwarf.c (comp_addr_base): Dereference args.
-
-2019-08-16  Alan Modra  <amodra@gmail.com>
-
-	PR 24909
-	PR 23499
-	* readelf.c (get_symbol_version_string): Set sym_info earlier.
-
-2019-08-15  Nick Clifton  <nickc@redhat.com>
-
-	PR 24767
-	* doc/binutils.texi (nm): Document the 'n' symbol type.
-
-2019-08-15  Christophe Vidal  <support@krizalys.com>
-
-	* docs/binutils.texi: Fixed notice message disassembler options
-	section of the man page.
-
-2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>
-
-	* readelf.c (get_mips_dynamic_type): Return MIPS_XHASH dynamic type.
-	(get_mips_section_type_name): Return MI{S_XHASH name string.
-	(dynamic_section_mips_val): Initialize the .MIPS.xhash dynamic
-	info.
-	(process_symbol_table): Initialize the .MIPS.xhash section
-	pointer. Adjust the readelf output to support the new section.
-	(process_object): Set the .MIPS.xhash dynamic info to zero.
-
-2019-08-09  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/binutils-all/arm/in-order-all.d: Skip on pe, wince, coff.
-	* testsuite/binutils-all/arm/in-order.d: Likewise.
-	* testsuite/binutils-all/arm/out-of-order-all.d: Likewise.
-	* testsuite/binutils-all/arm/out-of-order.d: Likewise.
-
-2019-08-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 24887
-	* readelf.c (process_notes_at): Left justify the "Data size"
-	column heading.
-	* testsuite/binutils-all/i386/empty.d: Adjust for new output format.
-	* testsuite/binutils-all/i386/ibt.d: Likewise.
-	* testsuite/binutils-all/i386/pr21231a.d: Likewise.
-	* testsuite/binutils-all/i386/pr21231b.d: Likewise.
-	* testsuite/binutils-all/i386/shstk.d: Likewise.
-	* testsuite/binutils-all/note-2-32.d: Likewise.
-	* testsuite/binutils-all/note-2-64.d: Likewise.
-	* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/empty.d: Likewise.
-	* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/ibt.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.
-	* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/shstk.d: Likewise.
-
-2019-08-08  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/gentestdlls.c (main): Move declaration of loop
-	variable outside of the for() statement.
-
-2019-08-08  Jordan Rupprecht  <rupprecht@google.com>
-
-	* readelf.c (process_note): Mask unknown description data bytes.
-
-2019-08-08  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (get_data): Improve overflow checks.
-
-2019-08-07  Nick Clifton  <nickc@redhat.com>
-
-	PR 24777
-	* doc/binutils.texi: Ensure consistent formating of title strings
-	for man pages.  Extend the title of the size man page to be more
-	informative.
-
-2019-08-07  Omair Majid  <omajid@redhat.com>
-
-	* testsuite/binutils-all/objdump.exp
-	(test_objdump_dotnet_assemblies): Fix test to distinguish errors
-	in parsing simple pei-i386 and pei-x86-64 vs parsing the newly
-	introduced machine types.
-	* testsuite/gentestdlls.c (write_simple_dll): New function.
-	(main): Generate simple and Linux-specific variants of pei-i386
-	and pei-x86-64 files so both can be used by tests.
-
-2019-08-07  Alan Modra  <amodra@gmail.com>
-
-	PR 24876
-	* readelf.c (dump_ia64_unwind): Check that buffer is large
-	enough for "stamp" before reading.
-
-2019-08-05  Nick Clifton  <nickc@redhat.com>
-
-	PR 24874
-	* objcopy.c (merge_gnu_build_notes): Do not insist on the first
-	note being a version note.
-	Remove spurious debugging fprintf.
-
-2019-08-05  Nick Clifton  <nickc@redhat.com>
-
-	PR 24829
-	* readelf.c (apply_relocations): Catch potential integer overflow
-	whilst checking reloc location against section size.
-
-2019-08-02  Alan Modra  <amodra@gmail.com>
-
-	PR 24871
-	* readelf.c (ABSADDR): Delete.
-	(dump_ia64_unwind): Expand ABSADDR.  Check validity of info.section.
-
-2019-07-29  Martin Liska  <mliska@suse.cz>
-
-	PR 24768
-	* nm.c (filter_symbols): Set report_plugin_err if
-	error is reported.
-	(display_rel_file): Report error for a missing LTO plugin.
-
-2019-07-26  Alan Modra  <amodra@gmail.com>
-
-	PR 24798
-	* dwarf.c (process_cu_tu_index): Avoid integer overflow on 64-bit
-	systems by casting ncols and nslots expressions to size_t.  Display
-	number of columns and slots before giving up due to buffer overflow.
-	Use %u to display unsigned ints.  Perform more pointer wrap tests.
-
-2019-07-25  Tom Tromey <tromey@adacore.com>
-
-	PR 24809
-	* dwarf.c (display_debug_names): Display the contents of the
-	augmentation string, if it is printable.
-
-2019-07-25  Nick Clifton  <nickc@redhat.com>
-
-	PR 24837
-	* readelf.c (process_mips_specific): Check for buffer overflow
-	before reading reginfo information.
-
-2019-07-24  Nick Clifton  <nickc@redhat.com>
-
-	PR 13256
-	* ar.c (decode_options): Restart option scanning if no operation
-	is detected and argument remain to be scanned.
-
-2019-07-23  Nick Clifton  <nickc@redhat.com>
-
-	PR 24818
-	* objdump.c (is_relocateable): Delete.
-	(load_specific_debug_section): Test the abfd for relocations
-	directly, rather than relying upon is_relocateable.
-	(dump_dwarf): Delete initlialization of is_relocateable.
-
-2019-07-23  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (get_parisc_segment_type): Split off hpux entries..
-	(get_ia64_segment_type): ..and these..
-	(get_hpux_segment_type): ..to here.
-	(get_segment_type): Condition GNU_MBIND on osabi.  Use
-	get_hpux_segment_type.
-	(get_symbol_binding): Do not print UNIQUE for ELFOSABI_NONE.
-	(get_symbol_type): Do not print IFUNC for ELFOSABI_NONE.
-
-2019-07-23  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/objcopy.exp (elf64): Correct object
-	file used to set this variable.
-
-2019-07-23  Omar Majid  <omajid@redhat.com>
-
-	* Makefile.am (AUTOMAKE_OPTIONS): Add subdir-objects
-	(GENTESTDLLSPROG): Define.
-	(TEST_PROGS): Add GENTESTDLLSPROG.
-	* Makefile.in: Regenerate.
-	* testsuite/binutils-all/objdump.exp
-	(test_objdump_dotnet_assemblies): New proc.
-	Run the new proc.
-	* testsuite/gentestdlls.c: New source file.
-
-2019-06-28  Nick Clifton  <nickc@redhat.com>
-
-	PR 24707
-	* objdump.c (slurp_symtab): Fail with a helpful error message if
-	the symbol table is too large.  Skip this check for MMO format
-	files.
-
-2019-06-26  Nick Clifton  <nickc@redhat.com>
-
-	PR 24703
-	* bucomm.c (bfd_nonfatal): If no bfd error code has been set then
-	indicate this in the output.
-	(bfd_nonfatal_message): Likewise.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* readelf.c (dump_ctf_indent_lines): Rename local variable
-	"spaces" to "blanks".
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* objdump.c (dump_ctf_indent_lines): Rename local variable
-	"spaces" to "blanks".
-
-2019-06-14  Alan Modra  <amodra@gmail.com>
-
-	* Makefile.in: Regenerate.
-	* aclocal.m4: Regenerate.
-	* doc/Makefile.in: Regenerate.
-
-2019-06-12  Christos Zoulas  <christos@zoulas.com>
-
-	PR 24663
-	* readelf.c (process_netbsd_elf_note): Add support for
-	NT_NETBSD_PAX.
-	(process_note): Add support for PaX notes.
-
-2019-06-12  Christos Zoulas  <christos@zoulas.com>
-
-	PR 24665
-	* readelf.c (get_netbsd_elfcore_note_type): Add support for SH
-	core notes.
-
-2019-06-12  Christos Zoulas  <christos@zoulas.com>
-
-	PR 24664
-	* readelf.c (get_netbsd_elfcore_note_type): Add support for NetBSD
-	auxv notes.
-
-2019-06-11  Christos Zoulas  <christos@zoulas.com>
-
-	PR 24662
-	* readelf.c (get_alpha_symbol_other): New function.
-	(get_symbol_other): Use for Alpha symbols.
-	(is_32bit_pcrel_reloc): Add R_VAX_PCREL32.
-
-2019-06-11  Christos Zoulas  <christos@zoulas.com>
-
-	PR 24661
-	* readelf.c (decode_arm_unwind): Ensure that the local variable
-	'addr' is always initialised.
-
-2019-06-10  Christos Zoulas  <christos@zoulas.com>
-
-	PR 24651
-	* strings.c (print_strings): Use %u to print unsigned values in
-	decimal.
-
-2019-06-10  Christos Zoulas  <christos@zoulas.com>
-
-	PR 24649
-	* arsup.c (ar_open): Use asprintf in place of xmalloc and
-	sprintf.
-
-2019-06-03  Nick Clifton  <nickc@redhat.com>
-
-	Revert:
-	2019-05-29  Nick Clifton  <nickc@redhat.com>
-
-	* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based
-	targets.
-	(HAVE_LIBCTF): Define if libctf support is available.
-	* Makefile.am (LIBCTF): Set value to @LIBCTF@.
-	* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being
-	defined.
-	* readelf.c: Likewise.
+	Binutils 2.34 release.
 	* configure: Regenerate.
-	* Makefile.in: Regenerate.
-	* config.in: Regenerate.
-
-2019-05-30  Nick Alcock  <nick.alcock@oracle.com>
-
-	* objdump.c (make_ctfsect): Drop cts_type, cts_flags, and
-	cts_offset.
-	* readelf.c (shdr_to_ctf_sect): Likewise.
-
-2019-05-30  Nick Clifton  <nickc@redhat.com>
-
-	PR 24627
-	* readelf.c (process_version_sections): Add 0x prefix to address
-	display.  Correct indentation.
-
-2019-05-30  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/lib/binutils-common.exp (supports_gnu_unique): Add
-	s12z to targets not supporting this feature.
-
-2019-05-30  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/lib/binutils-common.exp (run_dump_test): Support
-	tcl procedures for xfail args.
-
-2019-05-29  Nick Clifton  <nickc@redhat.com>
-
-	* README-how-to-make-a-release: Add libctf to list of directories
-	that need updates in their ChangeLogs.
-
-2019-05-29  Nick Clifton  <nickc@redhat.com>
-
-	* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based
-	targets.
-	(HAVE_LIBCTF): Define if libctf support is available.
-	* Makefile.am (LIBCTF): Set value to @LIBCTF@.
-	* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being
-	defined.
-	* readelf.c: Likewise.
-	* configure: Regenerate.
-	* Makefile.in: Regenerate.
-	* config.in: Regenerate.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* MAINTAINERS: Add myself as CTF maintainer.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* objdump.c (ctf-api.h): New include.
-	(dump_ctf_section_info): New variable.
-	(dump_ctf_section_name): Likewise.
-	(usage): Describe new options.
-	(enum option_values): Add OPTION_CTF and OPTION_CTF_PARENT.
-	(main): Use them to add --ctf and --ctf-parent.
-	(read_section_stabs): Add new parameter, entsize_ptr.
-	(find_stabs_section): Adjust accordingly.
-	(make_ctfsect): New.
-	(dump_ctf_indent_lines): New.
-	(dump_ctf_archive_member): New.
-	(dump_ctf): New.
-	(dump_bfd): Call it.  Free resources afterwards.
-	* readelf.c (ctf-api.h): New include.
-	(CTF_DUMP): New.
-	(static bfd_boolean do_ctf): Likewise.
-	(dump_ctf_parent_name): Likewise.
-	(dump_ctf_symtab_name): Likewise.
-	(dump_ctf_strtab_name): Likewise.
-	(OPTION_CTF_DUMP): Likewise.
-	(OPTION_CTF_PARENT): Likewise.
-	(OPTION_CTF_SYMBOLS): Likewise.
-	(OPTION_CTF_STRINGS): Likewise.
-	(options): Add them.
-	(usage): Likewise.
-	(parse_args): Handle the new options, requesting CTF_DUMP.
-	(process_section_contents): Handle CTF_DUMP.
-	(shdr_to_ctf_sect): New.
-	(dump_ctf_indent_lines): New.
-	(dump_section_as_ctf): New.
-	(main): Free resources.
-	* Makefile.am (LIBCTF): New variable.
-	(objdump_DEPENDENCIES): Use it.
-	(readelf_DEPENDENCIES): Likewise.
-	(objdump_LDADD): Likewise.
-	(readelf_LDADD): Likewise.
-	* aclocal.m4: Regenerated.
-	* Makefile.in: Likewise.
-
-	* doc/binutils.texi (objdump): Document the new options.
-	(readelf): Likewise.
-	* doc/ctf.options.texi: New.
-	* doc/Makefile.in: Regenerated.
-	* NEWS: Mention the new feature.
-
-2019-05-27  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_section_groups): Continue processing groups
-	when sh_entsize exceeds group size.
-
-2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* readelf.c (get_aarch64_dynamic_type): Handle DT_AARCH64_VARIANT_PCS.
-	(get_aarch64_symbol_other): New, handles STO_AARCH64_VARIANT_PCS.
-	(get_symbol_other): Call get_aarch64_symbol_other.
 
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* objdump.c (disassemble_bytes): Set WIDE_OUTPUT in flags.
-
-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* MAINTAINERS: Add myself as the maintainer for BPF.
-
-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* readelf.c: Include elf/bpf.h.
-	(guess_is_rela): Hanle EM_BPF.
-	(dump_relocations): Likewise.
-	(is_32bit_abs_reloc): Likewise.
-	* testsuite/binutils-all/nm.exp: Add bpf-*-* to the list of
-	ELF targets.
-
-2019-05-21  Tamar Christina  <tamar.christina@arm.com>
-
-	* dwarf.c (dwarf_regnames_aarch64): Add SVE registers.
-	* testsuite/binutils-all/aarch64/sve-dwarf-registers.d: New test.
-	* testsuite/binutils-all/aarch64/sve-dwarf-registers.s: New test.
-
-2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	PR 14798
-	* testsuite/binutils-all/readelf.ss-mips: Update reference output.
-	* testsuite/binutils-all/readelf.ss-tmips: Likewise.
-
-2019-05-20  Nick Clifton  <nickc@redhat.com>
-
-	* po/ca.po: Updated Catalan translation.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* NEWS: Mention Armv8.1-M Mainline and MVE.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* readelf.c (arm_attr_tag_MVE_arch): New array for Tag_MVE_arch values.
-	(arm_attr_public_tag arm_attr_public_tags): Add case for Tag_MVE_arch.
-
-2019-05-14  Jamey Hicks  <jamey.hicks@gmail.com>
-
-	PR 19921
-	* objcopy.c: Add new option --verilog-data-width.  Use it to set
-	the value of VerilogDataWidth.
-	* doc/binutils.texi: Document the new option.
-	* testsuite/binutils-all/objcopy.exp: Run tests of new option.
-	* testsuite/binutils-all/verilog-1.hex: New file.
-	* testsuite/binutils-all/verilog-2.hex: New file.
-	* testsuite/binutils-all/verilog-4.hex: New file.
-	* testsuite/binutils-all/verilog-8.hex: New file.
-	* NEWS: Mention the new feature.
-
-2019-05-10  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/objdump.exp (test_objdump_disas_limited),
-	(test_objdump_content_limited): Add text arg, use in place of .text.
-	(bintest_signed.o): Call get_standard_section_names for name of
-	text section.
-
-2019-05-08  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* objdump.c (sign_extend_address): New function.
-	(dump_bfd): Sign-extend user-specified start/stop addresses
-	for targets that need it.
-	* testsuite/binutils-all/objdump.exp: Add tests for objdump
-	with start and stop addresses in higher address ranges.
-
-2019-05-01  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* testsuite/binutils-all/objdump.exp: Correct executable
-	spelling.
-	* testsuite/binutils-all/compress.exp: Likewise.
-
-2019-05-01  Nick Clifton  <nickc@redhat.com>
-
-	PR 24507
-	* nm.c: (print_format): New variable.
-	(value_format_32bit, value_format_64bit): Delete.
-	(set_print_radix): Remove code to alter value_format strings.
-	(set_output_format): Record chosen format in print_format.
-	(get_print_format): New function - constructs a printf formatting
-	string according to the requirements of size, radix, and output
-	format.
-	(print_value): Use get_print_format.
-	* testsuite/binutils-all/nm.exp: Add tests of "nm --format=posix"
-	and "nm -t d".
-
-2019-04-30  Alan Modra  <amodra@gmail.com>
-
-	* wrstabs.c (stab_start_class_type): Add assert to work around
-	gcc9 warning.  Tidy.
-
-2019-04-24  Nick Clifton  <nickc@redhat.com>
-
-	* objcopy.c (strip_main): Do not enable note merging by default if
-	just stripping debug or dwo information.
-	* doc/binutils.texi (strip): Update documentation.
-
-2019-04-23  Nick Clifton  <nickc@redhat.com>
-
-	* README-how-to-make-a-release: Add note to update the symbolic
-	link from "docs" to "docs-2.x" on the sourceware website.
-
-2019-04-16  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/copy-2.d: Don't run for ns32k-*-*.
-	* testsuite/binutils-all/copy-3.d: Likewise.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* readelf.c (arm_attr_tag_CPU_arch): Add entry for Armv8.1-M Mainline.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* readelf.c (decode_x86_isa): Handle
-	GNU_PROPERTY_X86_ISA_1_AVX512_BF16.
-	* testsuite/binutils-all/i386/pr21231b.d: Updated.
-	* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/binutils-all/nm.exp: Count i386-moss as ELF.
-
-2019-03-26  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/binutils-all/aarch64/in-order-all.d: Update.
-	* testsuite/binutils-all/aarch64/in-order.d: Likewise.
-	* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.
-	* testsuite/binutils-all/aarch64/out-of-order.d: Likewise.
-	* testsuite/binutils-all/aarch64/out-of-order.s: Likewise.
-	* testsuite/binutils-all/arm/in-order-all.d: Likewise.
-	* testsuite/binutils-all/arm/in-order.d: Likewise.
-	* testsuite/binutils-all/arm/out-of-order-all.d: Likewise.
-	* testsuite/binutils-all/arm/out-of-order.d: Likewise.
-	* testsuite/binutils-all/arm/out-of-order.s: Likewise.
-
-2019-03-26  Nick Clifton  <nickc@redhat.com>
-
-	* MAINTAINERS: Take over Dave Brolley's maintainerships for FR30,
-	FRV and MEP.
-
-2019-03-26  Alan Modra  <amodra@gmail.com>
-
-	* objdump.c (dump_relocs_in_section): Warning fix.
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/binutils-all/arm/in-order-all.d: New test.
-	* testsuite/binutils-all/arm/in-order.d: New test.
-	* testsuite/binutils-all/arm/objdump.exp: Support .d tests.
-	* testsuite/binutils-all/arm/out-of-order-all.d: New test.
-	* testsuite/binutils-all/arm/out-of-order.T: New test.
-	* testsuite/binutils-all/arm/out-of-order.d: New test.
-	* testsuite/binutils-all/arm/out-of-order.s: New test.
-
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/binutils-all/aarch64/in-order-all.d: New test.
-	* testsuite/binutils-all/aarch64/out-of-order-all.d: New test.
-	* testsuite/binutils-all/aarch64/out-of-order.d:
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/binutils-all/aarch64/in-order.d: New test.
-	* testsuite/binutils-all/aarch64/out-of-order.d: Disassemble data as
-	well.
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* objdump.c (disassemble_bytes): Pass stop_offset.
-	* testsuite/binutils-all/aarch64/out-of-order.T: New test.
-	* testsuite/binutils-all/aarch64/out-of-order.d: New test.
-	* testsuite/binutils-all/aarch64/out-of-order.s: New test.
-
-2019-03-19  Nick Clifton  <nickc@redhat.com>
-
-	PR 24360
-	* objdump.c (load_specific_debug_section): Check that the amount
-	of memory to be allocated matches the size of the section.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-
-	* readelf.c (get_aarch64_dynamic_type): Add case for
-	DT_AARCH64_PAC_PLT.
-	(dynamic_section_aarch64_val): Likewise.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-	    Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* readelf.c (get_aarch64_dynamic_type): New.
-	(get_dynamic_type): Use above for EM_AARCH64.
-	(dynamic_section_aarch64_val): New.
-	(process_dynamic_section): Use above for EM_AARCH64.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-
-	* readelf.c (decode_aarch64_feature_1_and): New.
-	(print_gnu_property_note): Add case for AArch64 gnu notes.
-
-2019-03-12  Alan Modra  <amodra@gmail.com>
-
-	* objdump.c (load_specific_debug_section): Don't compare section
-	size against file size.
-	(dump_relocs_in_section): Don't compare reloc size against file size.
-	Print "failed to read relocs" on bfd_get_reloc_upper_bound error.
-
-2019-03-05  Nick Clifton  <nickc@redhat.com>
-
-	PR 24295
-	* doc/binutils.texi (ar cmdline): Fix spelling mistake.
-
-2019-03-05  Nick Clifton  <nickc@redhat.com>
+2020-01-31  Nick Clifton  <nickc@redhat.com>
 
 	* po/sv.po: Updated Swedish translation.
 
-2019-03-05  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	PR 24287
-	* testsuite/lib/binutils-common.exp (run_dump_test): Replace a use
-	of "lmap" with a "foreach" loop.
-
-2019-03-04  Nick Clifton  <nickc@redhat.com>
-
-	PR 24281
-	* objcopy.c (copy_archive): Do not copy thin  archives.
-
-2019-02-27  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* testsuite/lib/binutils-common.exp: Allow multiple "as" lines.
-
-2019-02-25  Nick Clifton  <nickc@redhat.com>
-
-	* objdump.c (sym_ok): New function.
-	(find_symbol_for_address): Use new function.
-	(disassemble_section): Compare sections by name, not pointer.
-	(dump_dwarf): Move code to initialise byte_get pointer and iterate
-	over separate debug files from here to ...
-	(dump_bfd): ... here.  Add parameter indicating that a separate
-	debug info file is being dumped.  For main file, pull in the
-	symbol tables from all separate debug info files.
-	(display_object): Update call to dump_bfd.
-	* doc/binutils.texi: Document extened behaviour of the
-	--dwarf=follow-links option.
-	* NEWS: Mention this new feature.
-	* testsuite/binutils-all/objdump.WK2: Update expected output.
-	* testsuite/binutils-all/objdump.exp (test_follow_debuglink): Add
-	options and dump file parameters.
-	Add extra test.
-	* testsuite/binutils-all/objdump.WK3: New file.
-	* testsuite/binutils-all/readelf.exp: Change expected output for
-	readelf -wKis test.
-	* testsuite/binutils-all/readelf.wKis: New file.
-
-2019-02-22  Nick Clifton  <nickc@redhat.com>
-
-	PR 23843
-	* dwarf.h (struct separate_info): New structure for containing
-	information on separate debug info files.
-	* dwarf.c (struct dwo_info): New structure for containing dwo
-	links.
-	(first_dwo_info): Chain of dwo_info structures.
-	(first_separate_file): Chain of separate_info structures.
-	(separate_debug_file, separate_debug_filename): Delete.
-	(fetch_alt_indirect_string): Scan all separate debug info files
-	for the requested string.
-	(add_dwo_info): New function.
-	(add_dwo_name): New function.
-	(add_dwo_dir): New function.
-	(add_dwo_id: New function.
-	(free_dwo_info): New function.
-	(read_and_display_attr_value): Store DWO data using the new
-	functions.
-	(load_debug_section_with_follow): If necessary, scan the list of
-	separate debug info files for the requested section.
-	(add_separate_debug_file): New function.
-	(load_separate_debug_info): Call add_separate_debug_file to store
-	the information on the newly loaded file.
-	(load_dwo_file): Likewise.
-	(load_separate_debif_file): Rename to load_separate_debug_files.
-	Change return type to boolean.  If following links then attempt to
-	load all separate debug info files, not just the first one.
-	(free_debug_memory): Release memory in dwo_info and separate_info
-	chains.
-	* objdump.c (dump_dwarf): Iterate over all loaded debg info files.
-	* readelf.c (process_object): Likewise.
-	* doc/debug.options.texi: Update descriptions of links and
-	follow-links options.
-	* testsuite/binutils-all/objdump.WK2: Update expected output.
-	* testsuite/binutils-all/readelf.k2: Likewise.
-	* NEWS: Announce the new feature.
-
-2019-02-21  Nick Clifton  <nickc@redhat.com>
-
-	PR 24247
-	* unwind-ia64.c: Include sysdep.h.
-	(unw_decode_x1): Check current pointer against end pointer before
-	accessing memory.
-	(unw_decode_x2): Likewise.
-	(unw_decode_x3): Likewise.
-	(unw_decode_x4): Likewise.
-	(unw_decode_r2): Likewise.
-	(unw_decode_p2_p5): Likewise.
-	(unw_decode_p7_p10): Likewise.
-	(unw_decode): Likewise.
-
-2019-02-20  Nick Clifton  <nickc@redhat.com>
-
-	PR 24246
-	* readelf.c (print_stapsdt_note): Harden against corrupt notes.
-
-	PR 24244
-	* unwind-ia64.c (unw_decode_uleb128): Add end parameter, use it to
-	prevent walking off the end of the buffer.
-	(unw_decode_x1): Add end paramter, pass it to unw_decode_uleb128.
-	(unw_decode_x2): Likewise.
-	(unw_decode_x3): Likewise.
-	(unw_decode_x4): Likewise.
-	(unw_decode_r2): Pass the end parameter to unw_decode_uleb128.
-	(unw_decode_r3): Likewise.
-	(unw_decode_p7_p10): Likewise.
-	(unw_decode_b2): Likewise.
-	(unw_decode_b3_x4): Likewise.
-
-	PR 24243
-	* readelf.c (process_mips_specific): Check for an options section
-	that is too small to even contain a single option.
-
-	PR 24242
-	* readelf.c (print_ia64_vms_note): Harden against corrupt notes.
-
-2019-02-20  Alan Modra  <amodra@gmail.com>
-
-	PR 24132
-	PR 24138
-	* readelf.c (get_data): Avoid possibility of overflow when
-	checking for a read that may extend past end of file.
-	(process_program_headers): Likewise.
-
-2019-02-20  Alan Modra  <amodra@gmail.com>
-
-	PR 24233
-	* objdump.c (dump_bfd_private_header): Print warning if
-	bfd_print_private_bfd_data returns false.
-
-2019-02-12  Nick Clifton  <nickc@redhat.com>
-
-	PR 23440
-	* README-how-to-make-a-release: Use git clean to delete spurious
-	files from the local source repository.
-
-2019-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* size.c (berkeley_format): Delete.
-	(enum output_format): New enum.
-	(selected_output_format): New variable.
-	(usage): Update to mention GNU format.
-	(main): Update to extract options, and select format as needed.
-	Handle GNU format where needed.
-	(berkeley_sum): Renamed to...
-	(berkeley_or_gnu_sum): ...this, and updated to handle both formats.
-	(berkeley_format): Renamed to...
-	(berkeley_or_gnu_format): ...this, and updated to handle both
-	formats.
-	(print_sizes): Handle GNU format.
-	* doc/binutils.texi (size): Document new GNU format.
-	* testsuite/binutils-all/size.exp: Add test of extended
-	functionality.
-	* NEWS: Mention new functionality.
-
-2019-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* doc/binutils.texi (size): Update example output for Berkeley
-	format output.
-
-2019-02-07  Nick Clifton  <nickc@redhat.com>
-
-	* README-how-to-make-a-release: Add a note about updating the
-	obsolete targets in the bfd/config.bfd file.
-
-2019-02-04  Nick Clifton  <nickc@redhat.com>
-
-	* README-how-to-make-a-release: Add more notes on making a release.
-
-2019-01-25  Nick Clifton  <nickc@redhat.com>
-
-	PR 24131
-	* readelf.c (process_notes_at): Prevent an illegal memory access
-	when the note's namesize is zero.
-	(decode_tic6x_unwind_bytecode): Add code to handle the case where
-	no registers are specified in a frame pop instruction.
-
-2019-01-25  Nick Clifton  <nickc@redhat.com>
+2020-01-27  Roland McGrath  <mcgrathr@google.com>
 
-	* po/bg.po: Updated Bulgarian translation.
+	* objcopy.c (compare_gnu_build_notes): Fix comparison results
+	for overlapping ranges so that (A == B) == (B == A) holds.
 
-2019-01-23  Nick Clifton  <nickc@redhat.com>
+2020-01-23  Nick Clifton  <nickc@redhat.com>
 
 	* po/fr.po: Updated French translation.
-	* po/pt.po: Updated Portuguese translation.
 
-2019-01-21  Nick Clifton  <nickc@redhat.com>
+2020-01-20  Nick Clifton  <nickc@redhat.com>
 
+	* po/pt.po: Updated Portuguese translation.
 	* po/uk.po: Updated Ukranian translation.
 
-2019-01-19  Nick Clifton  <nickc@redhat.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
-	* binutils/po/binutils.pot.
-
-	* README-how-to-make-a-release: Update description on how to make
-	a branch.
-
-2018-06-24  Nick Clifton  <nickc@redhat.com>
-
-	2.32 branch created.
-
-2019-01-17  Nick Clifton  <nickc@redhat.com>
-
-	* objdump.c (disassemble_section): When disassembling from a
-	symbol only stop at the next symbol if the original symbol was not
-	a function symbol.  Otherwise continue disassembling until a new
-	function is reached.
-	* testsuite/binutils-all/objdump.exp: Add tests of extended
-	functionality.
-	* testsuite/binutils-all/disasm.s: New test source file.
-
-2019-01-16  Kito Cheng  <kito@andestech.com>
-	    Nelson Chu  <nelson@andestech.com>
-
-	* readelf.c (get_riscv_section_type_name): New function.
-	(get_section_type_name): Add handler for RISC-V.
-	(riscv_attr_tag_t): Declare.
-	(riscv_attr_tag): New.
-	(display_riscv_attribute): New function.
-	(process_attributes): Add handler for RISC-V.
-	* testsuite/binutils-all/strip-3.d: Remove .riscv.attribute
-	section.
-
-2019-01-10  Nick Clifton  <nickc@redhat.com>
-
-	PR 23963
-	* objdump.c (sanitize_string): New function.  Removes control
-	characters from symbol names.
-	(dump_section_header): Use new function.
-	(objdump_print_symname): Likewise.
-	(objdump_print_addr_with_sym): Likewise.
-	(show_line): Likewise.
-	(disassemble_bytes): Likewise.
-	(disassemble_section): Likewise.
-	(load_specific_debug_section): Likewise.
-	(read_section_stabs): Likewise.
-	(print_section_stabs): Likewise.
-	(dump_section): Likewise.
-	(dump_reloc_set): Likewise.
-	(dump_relocs_in_section): Likewise.
-	(dump_bfd): Likewise.
-	(display_any_bfd): Likewise.
-
-2019-01-09  Nick Clifton  <nickc@redhat.com>
-
-	PR 24049
-	* readelf.c (process_archive): Use arch.file_name in error
-	messages until the qualified name is available.
-
-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
-
-	* configure: Regenerate.
-
-2019-01-09  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/cxxfilt.exp: Pass --no-strip-underscores
-	unconditionally to tests needing the option rather than via a
-	list of targets.
-
-2019-01-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 24044
-	* cxxfilt.c (hp_symbol_characters): Delete.
-	(main): Remove depcreated demangling styles.
-	* stabs.c (parse_stab_argtypes): Remove support for old gnu v2
-	demangling opnames.
-	* testsuite/binutils-all/cxxfilt.exp: Use the
-	--no-strip-underscore option for targets that do prefix their
-	symbols with underscores.
-	Update tests to eliminate those that use gnu v2 encoding.
-
-2019-01-08  Tamar Christina  <tamar.christina@arm.com>
-
-	PR 24065
-	* testsuite/binutils-all/copy-6.d: New test.
-	* testsuite/binutils-all/objcopy.exp: Use it.
-
-2019-01-08  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/lib/binutils-common.exp (run_dump_test): Don't prepend
-	$srcdir/$subdir to source file name if it starts with "./".
-
-2019-01-05  Yoshinori Sato <ysato@users.sourceforge.jp>
-
-	* readelf.c (get_machine_flags): Add RXv3 output.
-
-2019-01-04  Nick Clifton  <nickc@redhat.com>
-
-	PR 24005
-	* objdump.c (load_specific_debug_section): Check for integer
-	overflow before attempting to allocate contents.
-
-2019-01-04  Nick Clifton  <nickc@redhat.com>
-
-	PR 24001
-	* objcopy.c (copy_object): Free dhandle after writing out the
-	debug information.
-	* objdump.c (dump_bfd): Free dhandle after printing out the debug
-	information.
-
+	* po/binutils.pot: Regenerate.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-17  Thomas Troeger  <tstroege@gmx.de>
+
+	* objdump.c (jump_info_visualize_address): Discard jumps that are
+	no longer needed.
+	(disassemble_bytes): Only compute the maximum level if jumps were
+	detected.
+
+2020-01-13  Nick Clifton  <nickc@redhat.com>
+
+	* objdump.c (disassemble_bytes): Remove C99-ism.
+	* testsuite/binutils-all/debuginfod.exp: New tests.
+
+2020-01-13  Thomas Troeger  <tstroege@gmx.de>
+
+	* objdump.c (visualize_jumps, color_output, extended_color_output)
+	(detected_jumps): New variables.
+	(usage): Add the new jump visualization options.
+	(option_values): Add new option value.
+	(long_options): Add the new option.
+	(jump_info_new, jump_info_free): New functions.
+	(jump_info_min_address, jump_info_max_address): Likewise.
+	(jump_info_end_address, jump_info_is_start_address): Likewise.
+	(jump_info_is_end_address, jump_info_size): Likewise.
+	(jump_info_unlink, jump_info_insert): Likewise.
+	(jump_info_add_front, jump_info_move_linked): Likewise.
+	(jump_info_intersect, jump_info_merge): Likewise.
+	(jump_info_sort, jump_info_visualize_address): Likewise.
+	(disassemble_jumps): New function - used to locate jumps.
+	(disassemble_bytes): Add ascii art generation.
+	(disassemble_section): Add scan to locate jumps.
+	(main): Parse the new visualization option.
+	* doc/binutils.texi: Document the new feature.
+	* NEWS: Mention the new feature.
 
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	PR 25360
+	PR 25361
+	* dwarf.c (display_debug_frames): Move fde_fc earlier.  Free
+	fde_fc col_type and col_offset.
+	* readelf.c (apply_relocations): Move symsec check earlier.
+	(free_debug_section): Free reloc_info.
+	(process_notes_at): Free pnotes on error path.
+	(process_object): Free dump_sects here..
+	(process_archive): ..not here.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	PR 25362
+	* nm.c (display_rel_file): Free dyn_syms.
+
+2020-01-09  Nick Clifton  <nickc@redhat.com>
+
+	PR 25220
+	* objcopy.c (empty_name): New variable.
+	(need_sym_before): Prevent an attempt to free a static variable.
+	(filter_symbols): Avoid strcmp test by checking for pointer
+	equality.
+
+2020-01-09  Nick Clifton  <nickc@redhat.com>
+
+	* po/zh_TW.po: Updated Traditional Chinese translation.
+
+2020-01-09  Aaron Merey  <amerey@redhat.com>
+
+        * Makefile.am (readelf_LDADD, objdump_LDADD): Add libdebuginfod.
+        * Makefile.in: Regenerate.
+        * NEWS: Update.
+        * config.in: Regenerate.
+        * configure: Regenerate.
+        * configure.ac: Call AC_DEBUGINFOD.
+        * doc/Makefile.in: Regenerate.
+        * doc/binutils.texi: Add section on using binutils
+        with debuginfod.
+        * dwarf.c (debuginfod_fetch_separate_debug_info): New function.
+        Query debuginfod servers for the target debug file.
+        (load_separate_debug_info): Call
+        debuginfod_fetch_separate_debug_info if configured with
+        debuginfod.
+        (load_separate_debug_files): Add file argument to
+        load_separate_debug_info calls.
+        * dwarf.h (get_build_id): Add declaration.
+        * objdump.c (get_build_id): New function. Get build-id of file.
+        * readelf.c (get_build_id): Likewise.
+        * testsuite/binutils-all/debuginfod.exp: New tests.
+        * testsuite/binutils-all/linkdebug.s: Add .note.gnu.build-id
+        section.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* readelf.c: Add support for new Z*) relocations and machine
+	types.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/elfcpp/ChangeLog b/elfcpp/ChangeLog
index 3f7e39e6e3..366bbbe938 100644
--- a/elfcpp/ChangeLog
+++ b/elfcpp/ChangeLog
@@ -1,61 +1,14 @@
-2019-09-09  Phil Blundell  <pb@pbcl.net>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	binutils 2.33 branch created.
+	Binutils 2.34 branch created.
 
-2019-08-02  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),
-	(R_PPC64_GOT_TLSGD34, R_PPC64_GOT_TLSLD34),
-	(R_PPC64_GOT_TPREL34, R_PPC64_GOT_DTPREL34): Define.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.h (R_PPC64_PCREL_OPT, R_PPC64_D34, R_PPC64_D34_LO),
-	(R_PPC64_D34_HI30, R_PPC64_D34_HA30, R_PPC64_PCREL34),
-	(R_PPC64_GOT_PCREL34, R_PPC64_PLT_PCREL34, R_PPC64_PLT_PCREL34_NOTOC),
-	(R_PPC64_ADDR16_HIGHER34, R_PPC64_ADDR16_HIGHERA34),
-	(R_PPC64_ADDR16_HIGHEST34, R_PPC64_ADDR16_HIGHESTA34),
-	(R_PPC64_REL16_HIGHER34, R_PPC64_REL16_HIGHERA34),
-	(R_PPC64_REL16_HIGHEST34, R_PPC64_REL16_HIGHESTA34),
-	(R_PPC64_D28, R_PPC64_PCREL28): Define.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC): Define.
-
-2019-06-28  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.h (R_PPC64_REL16_HIGH, R_PPC64_REL16_HIGHA),
-	(R_PPC64_REL16_HIGHER, R_PPC64_REL16_HIGHERA),
-	(R_PPC64_REL16_HIGHEST, R_PPC64_REL16_HIGHESTA): Define.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* arm.h (Tag_MVE_arch): Define new enum value.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* arm.h (R_ARM_THM_BF12): New relocation code.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* arm.h (R_ARM_THM_BF18): New relocation code.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* arm.h (R_ARM_THM_BF16): New relocation code.
-
-2018-06-24  Nick Clifton  <nickc@redhat.com>
-
-	2.32 branch created.
-
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/config/ChangeLog b/config/ChangeLog
index dabbac3b49..19fc6cd55c 100644
--- a/config/ChangeLog
+++ b/config/ChangeLog
@@ -1,3 +1,7 @@
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
 2019-09-09  Phil Blundell  <pb@pbcl.net>
 
 	binutils 2.33 branch created.
diff --git a/gas/ChangeLog b/gas/ChangeLog
index 482c824848..8f1cc8cde8 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,39 @@
+2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25516
+	* config/tc-i386.c (intel64): Renamed to ...
+	(isa64): This.
+	(match_template): Accept Intel64 only instruction by default.
+	(i386_displacement): Updated.
+	(md_parse_option): Updated.
+	* c-i386.texi: Update -mamd64/-mintel64 documentation.
+	* testsuite/gas/i386/i386.exp: Run x86-64-sysenter.  Pass
+	-mamd64 to x86-64-sysenter-amd.
+	* testsuite/gas/i386/x86-64-sysenter.d: New file.
+
+2020-02-10  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* testsuite/gas/aarch64/sve-bfloat-movprfx.s: Use .h rather than
+	.s for the movprfx.
+	* testsuite/gas/aarch64/sve-bfloat-movprfx.d: Update accordingly.
+	* testsuite/gas/aarch64/sve-movprfx_28.d,
+	* testsuite/gas/aarch64/sve-movprfx_28.l,
+	* testsuite/gas/aarch64/sve-movprfx_28.s: New test.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention x86 assembler options to align branches for
+	binutils 2.34.
+
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 release.
+	* configure: Regenerate.
+
 2020-01-31  Andre Vieira  <andre.simoesdiasvieira@arm.com>
 
 	Backport from mainline.
@@ -9,6 +45,29 @@
 	+mve.
 	* testsuite/gas/arm/mve_dsp.d: New test.
 
+2020-01-31  Nick Clifton  <nickc@redhat.com>
+
+	* config/tc-s390.c (s390_elf_suffix): Return ELF_SUFFIX_NONE
+	rather than BFD_RELOC_NONE.
+
+2020-01-31  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* config/tc-arm.c (fldmias): Moved inside "THUMB_VARIANT & arm_ext_v6t2"
+	to support VLDMIA instruction for MVE.
+	(fldmdbs): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VLDMDB
+	instruction for MVE.
+	(fstmias): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VSTMIA
+	instruction for MVE.
+	(fstmdbs): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VSTMDB
+	instruction for MVE.
+	* testsuite/gas/arm/mve-ldst.d: New test.
+	* testsuite/gas/arm/mve-ldst.s: Likewise.
+
+2020-01-31  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+	* po/ru.po: Updated Russian translation.
+
 2020-01-27  Tamar Christina  <tamar.christina@arm.com>
 
 	Backport from mainline.
@@ -18,47 +77,40 @@
 	* testsuite/gas/aarch64/armv8_4-a.d: Add cfinv.
 	* testsuite/gas/aarch64/armv8_4-a.s: Likewise.
 
-2020-01-20  Mihail Ionescu  <mihail.ionescu@arm.com>
+2020-01-21  Jan Beulich  <jbeulich@suse.com>
 
-	Backport from trunk:
-	2019-10-17  Mihail Ionescu  <mihail.ionescu@arm.com>
+	* testsuite/gas/i386/avx512_bf16_vl.s,
+	testsuite/gas/i386/x86-64-avx512_bf16_vl.s: Add broadcast forms
+	of VCVTNEPS2BF16{X,Y}. Add operand-size less Intel syntax
+	broadcast forms of VCVTNEPS2BF16.
+	* testsuite/gas/i386/avx512_bf16_vl.d,
+	testsuite/gas/i386/x86-64-avx512_bf16_vl.d: Adjust expectations.
 
-	* config/tc-arm.c (selected_ctx_ext_table) New static variable.
-	(arm_parse_arch): Set context sensitive extension table based on the
-	chosen base architecture.
-	(s_arm_arch_extension): Change to lookup extensions in the new context
-	sensitive tables.
-	* testsuite/gas/arm/mve-ext.s: New.
-	* testsuite/gas/arm/mve-ext.d: New.
-	* testsuite/gas/arm/mvefp-ext.s: New.
-	* testsuite/gas/arm/mvefp-ext.d: New.
+2020-01-20  Nick Clifton  <nickc@redhat.com>
 
-	2019-10-30  Mihail Ionescu  <mihail.ionescu@arm.com>
+	* po/uk.po: Updated Ukranian translation.
 
-	* config/tc-arm.c (s_arm_fpu): Clear selected_cpu fpu bits.
-	* testsuite/gas/arm/fpu-rst.s: New.
-	* testsuite/gas/arm/fpu-rst.d: New.
-	* testsuite/gas/arm/fpu-rst.l: New.
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	2019-11-21  Mihail Ionescu  <mihail.ionescu@arm.com>
+	* configure: Regenerate.
+	* po/gas.pot: Regenerate.
 
-	* config/tc-arm.c (arm_ext_crc): New.
-	(crc_ext_armv8): Remove.
-	(insns): Rename crc_ext_armv8 to arm_ext_crc.
-	(arm_cpus): Replace CRC_EXT_ARMV8 with ARM_EXT2_CRC.
-	(armv8a_ext_table, armv8r_ext_table,
-	arm_option_extension_value_table): Redefine the crc
-	extension in terms of ARM_EXT2_CRC.
-	* testsuite/gas/arm/crc-ext.s: New.
-	* testsuite/gas/arm/crc-ext.d: New.
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	2019-12-10  Vladimir Murzin  <vladimir.murzin@arm.com>
+	Binutils 2.34 branch created.
 
-	* config/tc-arm.c (s_arm_arch): Set selected_ctx_ext_table.
-	* testsuite/gas/arm/mve-arch-ext.s: New.
-	* testsuite/gas/arm/mve-arch-ext.d: New.
+2020-01-17  H.J. Lu  <hongjiu.lu@intel.com>
 
-	2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	* config/tc-i386.c (_i386_insn): Replace vex_encoding_vex2
+	with vex_encoding_vex.
+	(parse_insn): Likewise.
+	* doc/c-i386.texi: Replace {vex2} with {vex}.  Update {vex}
+	and {vex3} documentation.
+	* testsuite/gas/i386/pseudos.s: Replace 3 {vex2} tests with
+	{vex}.
+	* testsuite/gas/i386/x86-64-pseudos.s: Likewise.
+
+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
 
 	PR 25376
 	* config/tc-arm.c (mve_ext, mve_fp_ext): Use CORE_HIGH.
@@ -68,3908 +120,270 @@
 	* testsuite/arm/armv8_1-m-fpu-mve-2.s: New.
 	* testsuite/arm/armv8_1-m-fpu-mve-2.d: New.
 
-2020-01-15  Alan Modra  <amodra@gmail.com>
-
-	* configure.tgt: Add sparc-*-freebsd case.
-
-2020-01-13  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	Backported from mainline.
-	2020-01-02  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* config/tc-arm.c (parse_reg_list): Use REG_TYPE_RN instead of
-	REGLIST_RN.
-
-2019-12-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
-
-	Backported from mainline.
-	2019-12-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
-
-	* dw2gencfi.c (cfi_pseudo_table): Add cfi_negate_ra_state.
-	* testsuite/gas/aarch64/pac_negate_ra_state.s: New file.
-	* testsuite/gas/aarch64/pac_negate_ra_state.d: Likewise.
-
-2019-10-14  Tamar Christina  <tamar.christina@arm.com>
-
-	Backported from mainline.
-	2019-09-24  Tamar Christina  <tamar.christina@arm.com>
-
-	PR gas/24991
-	* config/tc-arm.c (out_of_range_p): New.
-	(md_apply_fix): Use it in BFD_RELOC_THUMB_PCREL_BRANCH9,
-	BFD_RELOC_THUMB_PCREL_BRANCH12, BFD_RELOC_THUMB_PCREL_BRANCH20,
-	BFD_RELOC_THUMB_PCREL_BRANCH23, BFD_RELOC_THUMB_PCREL_BRANCH25
-	* testsuite/gas/arm/pr24991.d: New test.
-	* testsuite/gas/arm/pr24991.l: New test.
-	* testsuite/gas/arm/pr24991.s: New test.
-
-2019-10-12  Nick Clifton  <nickc@redhat.com>
-
-	Release 2.33.1
-	* configure: Regenerate.
-	* po/gas.pot: Regenerate.
-
-2019-10-04  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/25012
-	* config/tc-i386.c (process_operands): Adjust handling of
-	PUSH/POP of segment registers.
-	* testsuite/gas/i386/x86-64-opcode.s: Add PUSHq/POPq case with
-	%fs/%gs operands. Add PUSHF/POPF case without suffix.
-	* testsuite/gas/i386/x86-64-opcode.d: Adjust expectations.
-
-2019-09-30  Phil Blundell  <pb@pbcl.net>
-
-	Release 2.33
-	* configure, Makefile.in, doc/Makefile.in, po/gas.pot: Regenerate.
-
-2019-09-25  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2019-09-21  Alan Modra  <amodra@gmail.com>
-	* config/tc-i386.c (md_parse_option): Fix warning on vexwig assignment.
-
-2019-09-19  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* NEWS: Add SVE2 and TME entries.
-
-2019-09-16  Phil Blundell  <pb@pbcl.net>
-
-	* Makefile.in, doc/Makefile.in, configure: Regenerated.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
-
-2019-09-05  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (ppc_elf_suffix): Display the relocation
-	operator on GOT reloc warnings/errors.
-
-2019-08-27  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* config/tc-arm.c (parse_neon_mov): Add check to accept vector
-	register to both the arguments in VMOV instruction.
-	* testsuite/gas/arm/mve-vmov-1.d: Modify.
-	* testsuite/gas/arm/mve-vmov-1.s: Likewise.
-	* testsuite/gas/arm/mve-vorr.d: Likewise.
-
-2019-08-23  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Updated Swedish translation.
-
-2019-08-22  Dennis Zhang  <dennis.zhang@arm.com>
-
-	* config/tc-arm.c: New entries for Cortex-M35P, Cortex-A77,
-	and Cortex-A76AE.
-	* doc/c-arm.texi: Document new processors.
-	* testsuite/gas/arm/cpu-cortex-a76ae.d: New test.
-	* testsuite/gas/arm/cpu-cortex-a77.d: New test.
-	* testsuite/gas/arm/cpu-cortex-m35p.d: New test.
-
-2019-08-22  Bosco García  <jbgg.gnu@gmail.com>
-	    Nick Clifton  <nickc@redhat.com>
-
-	* atof-generic.c (atof_generic): Do not ignore leading zeros if
-	they appear after a decimal point.
-	* testsuite/gas/all/float.s: Extend test to include a number with
-	a leading decimal point followed by several zeroes.
-	* testsuite/gas/i386/fp.s: Likewise.
-	* testsuite/gas/i386/fp.d: Update expected output.
-
-2019-08-22  Barnaby Wilks  <barnaby.wilks@arm.com>
-
-	* config/tc-aarch64.c: Add float16 directive and add "Hh" to
-	acceptable float characters.
-	* doc/c-aarch64.texi: Documentation for float16 directive.
-	* testsuite/gas/aarch64/float16-be.d: New test.
-	* testsuite/gas/aarch64/float16-le.d: New test.
-	* testsuite/gas/aarch64/float16.s: New test.
-	* NEWS: Add NEWS entry.
-
-2019-08-22  Kyrylo Tkachov <kyrylo.tkachov@arm.com>
-
-	* testsuite/gas/aarch64/sysreg-4.d: Update expected disassembly for
-	tfsre0_el1, tfsr_el1, tfsr_el2, tfsr_el3, tfsr_el12 system registers.
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
 
-2019-08-20  Dennis Zhang  <dennis.zhang@arm.com>
+	* config/tc-i386.c (match_template): Drop found_cpu_match local
+	variable.
 
-	* NEWS: Mention the Arm and AArch64 new processors.
-	* config/tc-aarch64.c: New entries for Cortex-A34, Cortex-A65,
-	Cortex-A77, cortex-A65AE, and Cortex-A76AE.
-	* doc/c-aarch64.texi: Document new CPUs.
-	* testsuite/gas/aarch64/cpu-cortex-a34.d: New test.
-	* testsuite/gas/aarch64/cpu-cortex-a65.d: New test.
-	* testsuite/gas/aarch64/cpu-cortex-a65ae.d: New test.
-	* testsuite/gas/aarch64/cpu-cortex-a76ae.d: New test.
-	* testsuite/gas/aarch64/cpu-cortex-a77.d: New test.
-	* testsuite/gas/aarch64/nop-asm.s: New test.
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
 
-2019-08-19  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* config/tc-mips.c (fix_bad_misaligned_address): New function.
-	(fix_validate_branch): Call fix_bad_misaligned address_to
-	calculate the target address.
-	(md_apply_fix): Likewise.
-	(md_convert_frag): Update misaligned address calculation to
-	disregard ISA mode bit.
-
-2019-08-19  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* config/tc-mips.c (mips_move_labels): Retain ISA mode bit
-	when moving labels in text segments.
-	(mips_align): Indicate text mode when aligning labels in
-	text segments.
-	* gas/testsuite/gas/mips/insn-isa-mode.d: New test.
-	* gas/testsuite/gas/mips/insn-isa-mode.s: New test source.
-	* gas/testsuite/gas/mips/mips.exp: Run the new test.
-
-2019-08-19  Barnaby Wilks  <Barnaby.Wilks@arm.com>
-
-	* config/tc-arm.c (md_atof): Add precision check.  Formatting.
-
-2019-08-15  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Updated Swedish translation.
-
-2019-08-12  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): Add the entry OP_I48_I64.
-	(po_imm1_or_imm2_or_fail): Marco to check the immediate is either of
-        48 or 64.
-	(parse_operands): Add case OP_I48_I64.
-	(do_mve_scalar_shift1): Add function to encode the MVE shift
-        instructions with 4 arguments.
-	* testsuite/gas/arm/mve-shift-bad.l: Modify.
-	* testsuite/gas/arm/mve-shift-bad.s: Likewise.
-	* testsuite/gas/arm/mve-shift.d: Likewise.
-	* testsuite/gas/arm/mve-shift.s: Likewise.
-
-2019-08-12  Barnaby Wilks  <barnaby.wilks@arm.com>
-
-	* config/tc-arm.c (enum fp_16bit_format): Add enum to represent the 2 float16 encodings.
-	(md_atof): Set precision for float16 type.
-	(arm_is_largest_exponent_ok): Check for whether to encode with the IEEE or alternative
-	format.
-	(set_fp16_format): Parse a float16_format directive.
-	(arm_parse_fp16_opt): Parse the fp16-format command line option.
-	(aeabi_set_public_attributes): For ELF encode the FP16 format EABI attribute.
-	* config/tc-arm.h (TC_LARGEST_EXPONENT_IS_NORMAL): Macro that expands to
-	arm_is_largest_exponent_ok.
-	(arm_is_largest_exponent_ok): Add prototype for arm_is_largest_exponent_ok function.
-	* doc/c-arm.texi: Add documentation for .float16, .float16_format and -mfp16-format=
-	* testsuite/gas/arm/float16-bad.d: New test.
-	* testsuite/gas/arm/float16-bad.l: New test.
-	* testsuite/gas/arm/float16-bad.s: New test.
-	* testsuite/gas/arm/float16-be.d: New test.
-	* testsuite/gas/arm/float16-format-bad.d: New test.
-	* testsuite/gas/arm/float16-format-bad.l: New test.
-	* testsuite/gas/arm/float16-format-bad.s: New test.
-	* testsuite/gas/arm/float16-format-opt-bad.d: New test.
-	* testsuite/gas/arm/float16-format-opt-bad.l: New test.
-	* testsuite/gas/arm/float16-le.d: New test.
-	* testsuite/gas/arm/float16.s: New test.
-	* testsuite/gas/arm/float16-eabi-alternative-format.d: New test.
-	* testsuite/gas/arm/float16-eabi-ieee-format.d: New test.
-	* testsuite/gas/arm/float16-eabi-no-format.d: New test.
-	* testsuite/gas/arm/float16-eabi.s: New test.
-
-2019-08-12  Barnaby Wilks  <barnaby.wilks@arm.com>
-
-	* config/atof-ieee.c (H_PRECISION): Macro for precision of float16
-	type.
-	(atof_ieee): Set precision and exponent bits for encoding float16
-	types.
-	(gen_to_words): NaN and Infinity encoding for float16.
-	(ieee_md_atof): Set precision for encoding float16 type.
-
-2019-08-12  Alan Modra  <amodra@gmail.com>
-
-	PR 24851
-	* config/tc-epiphany.c (md_estimate_size_before_relax): Clear
-	extra opcode bytes when changing from a 2-byte to a 4-byte insn.
-
-2019-08-09  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/ilp32/x86-64-simd-intel.d,
-	testsuite/gas/i386/ilp32/x86-64-simd-suffix.d,
-	testsuite/gas/i386/ilp32/x86-64-simd.d: Redirect to parent dir
-	output expectations.
-	* testsuite/gas/i386/x86-64-simd-intel.d,
-	testsuite/gas/i386/x86-64-simd-suffix.d,
-	testsuite/gas/i386/x86-64-simd.d: Don't hard-code hex addresses
-	and symbol-relative offsets.
-
-2019-08-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 24887
-	* testsuite/gas/i386/property-1.d: Adjust for new output format
-	from readelf.
-	* testsuite/gas/i386/property-2.d: Likewise.
-	* testsuite/gas/i386/x86-64-property-1.d: Likewise.
-	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
-
-2019-08-08  Yoshinori Sato  <ysato@users.sourceforge.jp>
-
-	* testsuite/gas/h8300/h8300.exp: Fix movfpe and movtpe tests.
-	* testsuite/gas/h8300/misc.s: Likewise.
-	* testsuite/gas/h8300/misch.s: Likewise.
-	* testsuite/gas/h8300/miscs.s: Likewise.
-
-2019-08-05  Barnaby Wilks  <barnaby.wilks@arm.com>
-
-	* config/tc-arm.c (do_mve_vqdmlah): Use N_S_32 macro.
-	(do_neon_qrdmlah): Use N_S_32 macro.
-	* testsuite/gas/arm/mve-vqdmlah-bad.d: New test.
-	* testsuite/gas/arm/mve-vqdmlah-bad.l: New test.
-	* testsuite/gas/arm/mve-vqdmlah-bad.s: New test.
-	* testsuite/gas/arm/mve-vqdmlah.d: Remove unsigned instruction tests.
-	* testsuite/gas/arm/mve-vqdmlah.s: Remove unsigned instruction tests.
-	* testsuite/gas/arm/mve-vqdmlash-bad.d: New test.
-	* testsuite/gas/arm/mve-vqdmlash-bad.l: New test.
-	* testsuite/gas/arm/mve-vqdmlash-bad.s: New test.
-	* testsuite/gas/arm/mve-vqdmlash.d: Remove unsigned instruction tests.
-	* testsuite/gas/arm/mve-vqdmlash.s: Remove unsigned instruction tests.
-
-2019-07-30  Mel Chen <mel.chen@sifive.com>
-
-	* testsuite/gas/riscv/alias-csr.s: Add testcase for CSR-access
-	alias instructions.
-	* testsuite/gas/riscv/no-aliases-csr.d: Run testcase alias-csr.s with
-	-Mno-aliases.
-
-	* testsuite/gas/riscv/alias-csr.d: Run testcase alias-csr.s.
-	* testsuite/gas/riscv/priv-reg.d: Update.
-
-2019-07-24  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Updated Swedish translation.
-
-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
-
-	* testsuite/gas/arc/nps400-6.d: Update test.
-
-2019-07-24  Alan Modra  <amodra@gmail.com>
-
-	* config/obj-elf.c (obj_elf_section, obj_elf_type): Set has_gnu_osabi.
-	* testsuite/gas/elf/section12a.d: Update xfails.
-	* testsuite/gas/elf/section12b.d: Likewise.
-
-2019-07-24  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/elf/section12a.d: xfail visium and cloudabi.
-	* testsuite/gas/elf/section12b.d: Likewise.
-	* testsuite/gas/elf/section13.d: Likewise.
-
-2019-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
-
-	* testsuite/gas/aarch64/sysreg-4.s: Test gmid_el1 read.
-	* testsuite/gas/aarch64/sysreg-4.d: Update expected output.
-	* testsuite/gas/aarch64/illegal-sysreg-4.l: Likewise.
-
-2019-07-23  Alan Modra  <amodra@gmail.com>
-
-	* config/obj-elf.c (obj_elf_change_section): Don't emit a fatal
-	error for non-SHF_ALLOC SHF_GNU_MBIND here.
-	(obj_elf_parse_section_letters): Return SHF_GNU_MBIND in new
-	gnu_attr param.
-	(obj_elf_section): Adjust obj_elf_parse_section_letters call.
-	Formatting.  Set SHF_GNU_MBIND and elf_osabi from gnu_attr.
-	Emit normal error for non-SHF_ALLOC SHF_GNU_MBIND and wrong osabi.
-	(obj_elf_type): Set elf_osabi for ifunc.
-	* testsuite/gas/elf/section12a.d: xfail msp430 and hpux.
-	* testsuite/gas/elf/section12b.d: Likewise.
-	* testsuite/gas/elf/section13.d: Likewise.
-	* testsuite/gas/elf/section13.l: Adjust expected error.
-
-2019-07-23  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/elf/section12a.d: Don't skip for rx.
-
-2019-07-22  Barnaby Wilks  <barnaby.wilks@arm.com>
-
-	* config/tc-arm.c (do_mve_vqdmladh): Remove check for UNPREDICTABLE.
-	* testsuite/gas/arm/mve-vqdmladh-bad.l: Remove tests.
-	* testsuite/gas/arm/mve-vqdmladh-bad.s: Remove tests.
-	* testsuite/gas/arm/mve-vqdmladh.d: New tests.
-	* testsuite/gas/arm/mve-vqdmladh.s: New tests.
-	* testsuite/gas/arm/mve-vqdmlsdh-bad.l: Remove tests.
-	* testsuite/gas/arm/mve-vqdmlsdh-bad.s: Remove tests.
-	* testsuite/gas/arm/mve-vqdmlsdh.d: New tests.
-	* testsuite/gas/arm/mve-vqdmlsdh.s: New tests.
-
-2019-07-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/gas/i386/noextreg.d: Pass -O0 to assembler.
-
-2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* testsuite/gas/bpf/alu.d: Use %r6 instead of %ctx.
-	* testsuite/gas/bpf/lddw-be.d: Likewise.
-	* testsuite/gas/bpf/lddw.d: Likewise.
-	* testsuite/gas/bpf/alu-be.d: Likewise.
-	* testsuite/gas/bpf/alu32.d: Likewise.
-
-2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* config/tc-bpf.c (pe_lcomm_internal): Adapted from tc-i386.c.
-	(pe_lcomm): Likewise.
-	(md_pseudo_table): Use pe_lcomm to implement .lcomm.
-
-2019-07-19  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* doc/c-aarch64.texi: Remame the +bitperm extension to +sve2-bitperm.
-	* config/tc-aarch64.c (aarch64_features): Likewise.
-	* testsuite/gas/aarch64/illegal-sve2-aes.d: Update accordingly.
-	* testsuite/gas/aarch64/illegal-sve2-sha3.d: Likewise.
-	* testsuite/gas/aarch64/illegal-sve2-sm4.d: Likewise.
-	* testsuite/gas/aarch64/illegal-sve2.d: Likewise.
-	* testsuite/gas/aarch64/sve2.d: Likewise.
-
-2019-07-19  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (ppc_elf_suffix): Map "tls@pcrel", "got@tlsgd@pcrel",
-	"got@tlsld@pcrel", "got@tprel@pcrel", and "got@dtprel@pcrel".
-	(fixup_size, md_assemble): Handle pcrel tls relocs.
-	(ppc_force_relocation, ppc_fix_adjustable): Likewise.
-	(md_apply_fix, tc_gen_reloc): Likewise.
-
-2019-07-17  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* config/tc-bpf.c: Make .lcomm to get a third argument with the
-	alignment.
-
-2019-07-17  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* config/tc-bpf.c (md_pseudo_table): .half, .word and .dword.
-
-	* testsuite/gas/bpf/data.s: New file.
-	* testsuite/gas/bpf/data.d: Likewise.
-	* testsuite/gas/bpf/data-be.d: Likewise.
-	* testsuite/gas/bpf/bpf.exp: Run data and data-be.
-	* doc/c-bpf.texi (BPF Directives): New section.
-
-2019-07-17  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (check_hle, md_assemble, check_VecOperands,
-	match_template, check_string, build_modrm_byte): Replace
-	operand_type_check(..., anymem) by Operand_Mem ones.
-	(process_operands): Also copy i.flags[] when copying other
-	operand properties.
-
-2019-07-16  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (match_template): Adjust regmem reference.
-	Adjust comment and update regmem when swapping operands.
-	(build_modrm_byte): Drop clearing of regmem and stale part of
-	comment. Correct comment. Adjust regmem reference.
-
-2019-07-16  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (type_names): Replace SReg entries.
-	(pi, check_byte_reg, build_modrm_byte, i386_att_operand,
-	parse_real_register): Switch to using sreg field.
-	(process_operands): Likewise. Extend handling of PUSH/POP of
-	segment registers. Drop dead setting of REX_B.
-	* config/tc-i386-intel.c (i386_intel_simplify_register,
-	i386_intel_operand): Switch to using sreg field.
-	* testsuite/gas/i386/x86-64-opcode.s: Add PUSH/POP of %fs/%gs.
-	* testsuite/gas/i386/x86-64-opcode.d: Adjust expectations.
-	* testsuite/gas/i386/ilp32/x86-64-opcode.d: Use parent dir
-	expectations.
-
-2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* testsuite/gas/bpf/mem.s: ldabs instructions do not take a `src'
-	register as an argument.
-	* testsuite/gas/bpf/mem.d: Updated accordingly.
-	* testsuite/gas/bpf/mem-be.d: Likewise.
-	* doc/c-bpf.texi (BPF Opcodes): Update to reflect the correct
-	explicit arguments to ldabs and ldind instructions.
-
-2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* testsuite/gas/bpf/mem.s: Do not use explicit arguments for
-	ldabs and ldind instructions.
-	* testsuite/gas/bpf/mem.d: Updated accordingly.
-	* testsuite/gas/bpf/mem-be.d: Likewise.
-
-2019-07-09  Alan Modra  <amodra@gmail.com>
-
-	* config/obj-elf.c (elf_frob_symbol): Remove mips hacks.
-	* config/tc-mips.h (tc_frob_symbol): Define.
-	(mips_frob_symbol): Declare.
-	* config/tc-mips.c (s_mips_globl): Don't set BSF_OBJECT for irix.
-	(mips_frob_symbol): Fudge symbols for irix here.
-	* testsuite/gas/elf/type-2.e: Allow random target symbols.
-
-2019-07-05  Kito Cheng <kito.cheng@sifive.com>
-
-	* doc/c-riscv.texi (Instruction Formats): Add r4 type.
-	* testsuite/gas/riscv/insn.d: Add testcase for r4 type.
-	* testsuite/gas/riscv/insn.s: Ditto.
-
-	* doc/c-riscv.texi (Instruction Formats): Add b and j type.
-	* testsuite/gas/riscv/insn.d: Add test case for b and j type.
-	* testsuite/gas/riscv/insn.s: Ditto.
-
-	* testsuite/gas/riscv/insn.s: Correct instruction type for load
-	and store.
-
-	* testsuite/gas/riscv/insn.d: Using regular expression to match
-	address.
-
-	* doc/c-riscv.texi (Instruction Formats): Fix encoding table for SB
-	type and fix typo.
-
-2019-07-04  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (md_parse_option): Don't blindly accept all
-	-Q options.
-	(md_show_usage): Correctly name the ignored -Q option flavors.
-
-2019-07-04  Jan Beulich  <jbeulich@suse.com>
-
-	* config/obj-elf.c (obj_elf_type): Check for conflicts between
-	old and new types.
-	* config/tc-hppa.h (md_elf_symbol_type_change): New.
-	* doc/as.texi: Mention warning behavior for the ELF flavor of
-	.type.
-	* testsuite/gas/elf/type-2.e, testsuite/gas/elf/type-2.l,
-	testsuite/gas/elf/type-2.s: New.
-	* testsuite/gas/elf/elf.exp: Run new test.
-
-2019-07-03  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/gas/aarch64/codealign.d: Update to work with a
-	toolchain configured to generate build notes.
-	* testsuite/gas/aarch64/codealign_1.d: Likewise.
-	* testsuite/gas/aarch64/dwarf.d: Likewise.
-	* testsuite/gas/aarch64/mapmisc.d: Likewise.
-	* testsuite/gas/aarch64/mapping.d: Likewise.
-	* testsuite/gas/aarch64/mapping2.d: Likewise.
-	* testsuite/gas/aarch64/mapping3.d: Likewise.
-	* testsuite/gas/aarch64/mapping4.d: Likewise.
-	* testsuite/gas/aarch64/mapping_5.d: Likewise.
-	* testsuite/gas/aarch64/mapping_6.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_1.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_10.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_11.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_12.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_13.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_14.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_15.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_16.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_17.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_18.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_19.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_2.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_20.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_21.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_22.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_23.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_24.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_25.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_26.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_27.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_3.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_4.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_5.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_6.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_7.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_8.d: Likewise.
-	* testsuite/gas/aarch64/sve-movprfx_9.d: Likewise.
-	* testsuite/gas/aarch64/symbol-variant_pcs-1.d: Likewise.
-	* testsuite/gas/aarch64/symbol-variant_pcs-2.d: Likewise.
-	* testsuite/gas/aarch64/symbol-variant_pcs-3.d: Likewise.
-	* testsuite/gas/all/assign.d: Likewise.
-	* testsuite/gas/all/none.d: Likewise.
-	* testsuite/gas/all/weakref1.d: Likewise.
-	* testsuite/gas/arm/got_prel.d: Likewise.
-	* testsuite/gas/arm/local_function.d: Likewise.
-	* testsuite/gas/arm/mapdir.d: Likewise.
-	* testsuite/gas/arm/mapmisc.d: Likewise.
-	* testsuite/gas/arm/mapping2.d: Likewise.
-	* testsuite/gas/arm/mapping3.d: Likewise.
-	* testsuite/gas/arm/mapping4.d: Likewise.
-	* testsuite/gas/arm/mapsecs.d: Likewise.
-	* testsuite/gas/arm/mapshort-eabi.d: Likewise.
-	* testsuite/gas/arm/thumbrel.d: Likewise.
-	* testsuite/gas/arm/unwind.d: Likewise.
-	* testsuite/gas/cfi/cfi-label.d: Likewise.
-	* testsuite/gas/elf/elf.exp: Likewise.
-	* testsuite/gas/i386/bss.d: Likewise.
-	* testsuite/gas/i386/ifunc-3.d: Likewise.
-	* testsuite/gas/i386/ilp32/mixed-mode-reloc64.d: Likewise.
-	* testsuite/gas/i386/ilp32/quad.d: Likewise.
-	* testsuite/gas/i386/ilp32/reloc64.d: Likewise.
-	* testsuite/gas/i386/ilp32/x86-64-size-1.d: Likewise.
-	* testsuite/gas/i386/ilp32/x86-64-size-3.d: Likewise.
-	* testsuite/gas/i386/ilp32/x86-64-size-5.d: Likewise.
-	* testsuite/gas/i386/ilp32/x86-64-unwind.d: Likewise.
-	* testsuite/gas/i386/mixed-mode-reloc32.d: Likewise.
-	* testsuite/gas/i386/mixed-mode-reloc64.d: Likewise.
-	* testsuite/gas/i386/nop-6.d: Likewise.
-	* testsuite/gas/i386/property-1.d: Likewise.
-	* testsuite/gas/i386/property-2.d: Likewise.
-	* testsuite/gas/i386/relax.d: Likewise.
-	* testsuite/gas/i386/reloc64.d: Likewise.
-	* testsuite/gas/i386/size-1.d: Likewise.
-	* testsuite/gas/i386/size-3.d: Likewise.
-	* testsuite/gas/i386/x86-64-nop-6.d: Likewise.
-	* testsuite/gas/i386/x86-64-property-1.d: Likewise.
-	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
-	* testsuite/gas/i386/x86-64-size-1.d: Likewise.
-	* testsuite/gas/i386/x86-64-size-3.d: Likewise.
-	* testsuite/gas/i386/x86-64-size-5.d: Likewise.
-	* testsuite/gas/i386/x86-64-unwind.d: Likewise.
-	* testsuite/gas/macros/irp.d: Likewise.
-	* testsuite/gas/macros/repeat.d: Likewise.
-	* testsuite/gas/macros/rept.d: Likewise.
-	* testsuite/gas/macros/test2.d: Likewise.
-	* testsuite/gas/macros/test3.d: Likewise.
-	* testsuite/gas/macros/vararg.d: Likewise.
-	* testsuite/gas/ppc/astest2.d: Likewise.
-	* testsuite/gas/ppc/astest2_64.d: Likewise.
-	* testsuite/gas/ppc/astest64.d: Likewise.
-	* testsuite/gas/ppc/power4.d: Likewise.
-	* testsuite/gas/ppc/test1elf64.d: Likewise.
-
-2019-07-02  Barnaby Wilks  <barnaby.wilks@arm.com>
-
-	* config/tc-aarch64.c (parse_operands): Add error check.
-	* testsuite/gas/aarch64/diagnostic.l: New test.
-	* testsuite/gas/aarch64/diagnostic.s: New test.
-	* testsuite/gas/aarch64/illegal.l: New tests.
-	* testsuite/gas/aarch64/illegal.s: New tests.
-
-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* testsuite/gas/aarch64/sve-movprfx_27.s,
-	* testsuite/gas/aarch64/sve-movprfx_27.d: New test.
-
-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* testsuite/gas/aarch64/sve-movprfx_26.s: Also test FCVTZS, FCVTZU,
-	SCVTF, UCVTF, LSR and ASR.
-	* testsuite/gas/aarch64/sve-movprfx_26.d: Update accordingly.
-	* testsuite/gas/aarch64/sve-movprfx_26.l: Likewise.
-
-2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* testsuite/gas/aarch64/sve-movprfx_25.s: Allow CPY Z1.D.P1/M,X1
-	to be prefixed by MOVPRFX.
-	* testsuite/gas/aarch64/sve-movprfx_25.d: Update accordingly.
-	* testsuite/gas/aarch64/sve-movprfx_25.l: Likewise.
-
-2019-07-01  Nick Clifton  <nickc@redhat.com>
-
-	PR 24748
-	* write.c (create_note_reloc): Add desc2_offset parameter.  Change
-	name of offset parameter to note_offset.  Only use desc2_offset
-	when placing addend into REL reloc's address space.
-	(maybe_generate_build_notes): Update parameters passed to
-	create_note_reloc.
-
-2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* testsuite/gas/aarch64/illegal-sve2-aes.d: Update tests.
-	* testsuite/gas/aarch64/illegal-sve2.l: Update tests.
-	* doc/c-aarch64.texi: Add special note of pmull{t,b}
-	instructions under the sve2-aes architecture extension.
-	* testsuite/gas/aarch64/illegal-sve2.s: Add small size
-	pmull{t,b} instructions.
-	* testsuite/gas/aarch64/sve2.d: Add small size pmull{t,b}
-	disassembly.
-	* testsuite/gas/aarch64/sve2.s: Add small size pmull{t,b}
-	instructions.
-
-2019-07-01  Nick Clifton  <nickc@redhat.com>
-
-	PR 24738
-	* doc/c-i386.texi (i386-Directives): Add a description of the
-	Value directive.
-
-2019-07-01  Nick Clifton  <nickc@redhat.com>
-
-	PR 24737
-	* doc/as.texi (Align): Add missing word to description of
-	pseudo-op.
-	(P2align): Likewise.
-
-2019-06-28  Nick Clifton  <nickc@redhat.com>
-
-	PR 24735
-	* doc/as.texi (Zero): Fix spelling typo.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (vec_imm4): Delete.
-	(VEX_check_operands): Replace Vec_Imm4 check by CpuXOP with five
-	operands one.  Clear Imm<N> by different means.
-	(build_modrm_byte): Adjust comment.  Remove dead code.  Add and
-	adjust assertions.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (output_insn): Adjust recognition of xFENCE
-	insns. Move PadLock special case of prefix emission to 3-byte
-	long base opcode handling.
-	(i386_index_check): Check for CpuPadLock instead of ImmExt.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (optimize_encoding): Handle AND / OR with
-	both operands being the same register.
-	* doc/c-i386.texi: Update -O2 documentation.
-	* testsuite/gas/i386/optimize-2.s,
-	testsuite/gas/i386/x86-64-optimize-3.s: Add cases of AND / OR
-	with both operands being the same register.
-	* testsuite/gas/i386/optimize-2.d,
-	testsuite/gas/i386/x86-64-optimize-3.d: Adjust expectations.
-	* testsuite/gas/i386/optimize-2b.d,
-	testsuite/gas/i386/x86-64-optimize-3b.d: New.
+	* testsuite/gas/i386/avx512dq-inval.l,
+	testsuite/gas/i386/avx512dq-inval.s: New.
 	* testsuite/gas/i386/i386.exp: Run new test.
 
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (commutative): New.
-	(build_vex_prefix): Handle commutative case.
-	(optimize_encoding): Set commutative flag when appropriate.
-	* doc/c-i386.texi: Update -O2 documentation.
-	* testsuite/gas/i386/ilp32/x86-64-sse2avx.d: Re-use parent dir
-	output.
-	* testsuite/gas/i386/x86-64-sse2avx.s: Add tests with high
-	numbered source operands.
-	* testsuite/gas/i386/x86-64-optimize-2.d,
-	testsuite/gas/i386/x86-64-optimize-2b.d,
-	testsuite/gas/i386/x86-64-optimize-3.d,
-	testsuite/gas/i386/x86-64-optimize-5.d,
-	testsuite/gas/i386/x86-64-optimize-6.d,
-	testsuite/gas/i386/x86-64-sse2avx.d: Adjust expectations.
-	* testsuite/gas/i386/x86-64-avx-swap-2.d,
-	testsuite/gas/i386/x86-64-avx-swap-2.s: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (is_evex_encoding): Don't check for SAE.
-	(check_VecOperands): Simplify static rounding / SAE checking.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (optimize_encoding): Make j unsigned.  Handle
-	vpand{d,q}, vpandn{d,q}, vpor{d,q}, and vpxor{d,q}.  Also check/
-	clear broadcast.  Eliminate a loop.
-	* doc/c-i386.texi: Update -O1 documentation.
-	* testsuite/gas/i386/optimize-1.s,
-	testsuite/gas/i386/optimize-2.s,
-	testsuite/gas/i386/optimize-3.s,
-	testsuite/gas/i386/optimize-5.s,
-	testsuite/gas/i386/x86-64-optimize-2.s,
-	testsuite/gas/i386/x86-64-optimize-3.s,
-	testsuite/gas/i386/x86-64-optimize-4.s,
-	testsuite/gas/i386/x86-64-optimize-6.s: Add vpand{d,q},
-	vpandn{d,q}, vpor{d,q}, and vpxor{d,q} cases.
-	testsuite/gas/i386/optimize-1.d,
-	testsuite/gas/i386/optimize-1a.d,
-	testsuite/gas/i386/optimize-2.d,
-	testsuite/gas/i386/optimize-3.d,
-	testsuite/gas/i386/optimize-4.d,
-	testsuite/gas/i386/optimize-5.d,
-	testsuite/gas/i386/x86-64-optimize-2.d,
-	testsuite/gas/i386/x86-64-optimize-2a.d,
-	testsuite/gas/i386/x86-64-optimize-2b.d,
-	testsuite/gas/i386/x86-64-optimize-3.d,
-	testsuite/gas/i386/x86-64-optimize-4.d,
-	testsuite/gas/i386/x86-64-optimize-5.d,
-	testsuite/gas/i386/x86-64-optimize-6.d: Adjust expectations.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/avx512f_vpclmulqdq.s,
-	testsuite/gas/i386/avx512vl_vpclmulqdq.s,
-	testsuite/gas/i386/vpclmulqdq.s,
-	testsuite/gas/i386/x86-64-avx512f_vpclmulqdq.s,
-	testsuite/gas/i386/x86-64-avx512vl_vpclmulqdq.s: Add pseudo ops.
-	* testsuite/gas/i386/x86-64-vpclmulqdq.s: Likewise. Don't use
-	high 16 [xy]mm registers.
-	* testsuite/gas/i386/avx512f_vpclmulqdq.d,
-	testsuite/gas/i386/avx512f_vpclmulqdq-intel.d,
-	testsuite/gas/i386/avx512vl_vpclmulqdq.d,
-	testsuite/gas/i386/avx512vl_vpclmulqdq-intel.d,
-	testsuite/gas/i386/vpclmulqdq.d,
-	testsuite/gas/i386/vpclmulqdq-intel.d,
-	testsuite/gas/i386/x86-64-avx512f_vpclmulqdq.d,
-	testsuite/gas/i386/x86-64-avx512f_vpclmulqdq-intel.d,
-	testsuite/gas/i386/x86-64-avx512vl_vpclmulqdq.d,
-	testsuite/gas/i386/x86-64-avx512vl_vpclmulqdq-intel.d,
-	testsuite/gas/i386/x86-64-vpclmulqdq.d,
-	testsuite/gas/i386/x86-64-vpclmulqdq-intel.d: Adjust
-	expectations.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* tc-i386.c (output_disp, output_imm): Use encoding_length.
-
-2019-07-01  Jan Beulich  <jbeulich@suse.com>
-
-	* tc-i386.c (encoding_length): New.
-	(output_insn): Use it.
-	* testsuite/gas/i386/oversized16.l,
-	testsuite/gas/i386/oversized16.s,
-	testsuite/gas/i386/oversized64.l,
-	testsuite/gas/i386/oversized64.s: New.
-	* testsuite/gas/i386/i386.exp: Run new tests.
+	* config/tc-msp430.c (CHECK_RELOC_MSP430): Always generate 430X
+	relocations when the target is 430X, except when extracting part of an
+	expression.
+	(msp430_srcoperand): Adjust comment.
+	Initialize the expp member of the msp430_operand_s struct as
+	appropriate.
+	(msp430_dstoperand): Likewise.
+	* testsuite/gas/msp430/msp430.exp: Run new test.
+	* testsuite/gas/msp430/reloc-lo-430x.d: New test.
+	* testsuite/gas/msp430/reloc-lo-430x.s: New test.
 
-2019-06-27  H.J. Lu  <hongjiu.lu@intel.com>
+2020-01-15  Alan Modra  <amodra@gmail.com>
 
-	PR binutils/24719
-	* testsuite/gas/i386/disassem.s: Add test for vgatherpf0dps
-	with invalid vector length.
-	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
-	* testsuite/gas/i386/disassem.d: Updated.
-	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
+	* configure.tgt: Add sparc-*-freebsd case.
 
-2019-06-27  Barnaby Wilk  s<barnaby.wilks@arm.com>
+2020-01-14  Lili Cui <lili.cui@intel.com>
 
-	* config/tc-arm.c (do_smc): Add range check for immediate operand.
-	(do_t_smc): Add range check for immediate operand. Remove
-	obsolete immediate encoding.
-	(md_apply_fix): Fix range check. Remove obsolete immediate encoding.
-	* testsuite/gas/arm/arch6zk.d: Fix test.
-	* testsuite/gas/arm/arch6zk.s: Fix test.
-	* testsuite/gas/arm/smc-bad.d: New test.
-	* testsuite/gas/arm/smc-bad.l: New test.
-	* testsuite/gas/arm/smc-bad.s: New test.
-	* testsuite/gas/arm/thumb32.d: Fix test.
-	* testsuite/gas/arm/thumb32.s: Fix test.
-
-2019-06-27  Jan Beulich  <jbeulich@suse.com>
-
-	config/tc-i386.c (md_assemble): Check for protected mode
-	incapable processor before encoding VEX and alike insns.
-	* testsuite/gas/i386/inval-16.s: For 80186 architecture.
-	* testsuite/gas/i386/inval-16.l: Adjust expectations.
-	* testsuite/gas/i386/avx-16bit.d,
-	testsuite/gas/i386/avx-16bit.s,
-	testsuite/gas/i386/avx512f-16bit.d,
-	testsuite/gas/i386/avx512f-16bit.s,
-	testsuite/gas/i386/bmi-16bit.d,
-	testsuite/gas/i386/bmi-16bit.s,
-	testsuite/gas/i386/bmi2-16bit.d,
-	testsuite/gas/i386/bmi2-16bit.s,
-	testsuite/gas/i386/lwp-16bit.d,
-	testsuite/gas/i386/lwp-16bit.s: New
-	testsuite/gas/i386/i386.exp: Run new tests.
-
-2019-06-26  Jim Wilson  <jimw@sifive.com>
-
-	* testsuite/gas/xstormy16/allinsn.sh: Change first line to
-	#!/bin/bash and make it executable.
-	* testsuite/gas/xstormy16/gcc.sh: Likewise.
-
-2019-06-26  Lili Cui  <lili.cui@intel.com>
-
-	* doc/c-i386.texi: Document x/y/z instruction sufffixes in AT&T
-	syntax and xmmword/ymmword/zmmword/fword/tbyte/oword ptr in
-	Intel syntax.
-
-2019-06-25  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* config/tc-mips.c (macro) <M_LI>: Re-order MTHC1 with
-	respect to MTC1 and use $0 for either part where possible.
-	* testsuite/gas/mips/li-d.s: Add test cases for non-zero
-	words in double precision constants.
-	* testsuite/gas/mips/li-d.d: Update reference output.
-	* testsuite/gas/mips/micromips@isa-override-1.d: Likewise.
-	* testsuite/gas/mips/mips32r2@isa-override-1.d: Likewise.
-	* testsuite/gas/mips/mips64r2@isa-override-1.d: Likewise.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* tc-i386.c (acc32, acc64): Delete.
-	(pi): Make first parameter pinter-to-const.
-	(type_names): Remove Acc. Add acc8, acc16, acc32, and acc64.
-	(pt): Use operand_type_equal().
-	(match_template): Replace use of acc32.
-	(process_suffix): Replace use of acc64.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* doc/c-i386.texi: Mark -mavxscalar= and -mvexwig as dangrous to
-	use.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* tc-i386.c (process_suffix): Use is_any_vex_encoding().
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/sse2-16bit.d,
-	testsuite/gas/i386/sse2-16bit.s: New.
-	testsuite/gas/i386/i386.exp: Run new test.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (optimize_encoding): Also handle ANDQ with
-	immediatie fitting in 7 bits.
-	* testsuite/gas/i386/x86-64-optimize-1.s: Add ANDQ cases with
-	7- and 8-bit immediates.
-	* testsuite/gas/i386/x86-64-optimize-1.d: Adjust expectations.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/xmmword.s: Add cvtps2pi and cvttps2pi
-	tests.
-	* testsuite/gas/i386/xmmword.l: Adjust expectations.
-
-2019-06-25  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (ppc_handle_align): Add parentheses.
-
-2019-06-25  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.h (ppc_nop_select): Declare.
-	(NOP_OPCODE): Define.
-	* config/tc-ppc.c (ppc_elf_end, ppc_xcoff_end): Zero ppc_cpu.
-	(ppc_nop_encoding_for_rs_align_code): New enum.
-	(ppc_nop_select): New function.
-	(ppc_handle_align): Don't use ppc_cpu here.  Get nop type from frag.
-	* testsuite/gas/ppc/groupnop.d,
-	* testsuite/gas/ppc/groupnop.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
+	* testsuite/gas/i386/align-branch-1a.d: Updated for Darwin.
+	* testsuite/gas/i386/align-branch-1b.d: Likewise.
+	* testsuite/gas/i386/align-branch-1c.d: Likewise.
+	* testsuite/gas/i386/align-branch-1d.d: Likewise.
+	* testsuite/gas/i386/align-branch-1e.d: Likewise.
+	* testsuite/gas/i386/align-branch-1f.d: Likewise.
+	* testsuite/gas/i386/align-branch-1g.d: Likewise.
+	* testsuite/gas/i386/align-branch-1h.d: Likewise.
+	* testsuite/gas/i386/align-branch-1i.d: Likewise.
+	* testsuite/gas/i386/align-branch-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1a.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1b.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1c.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1d.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1e.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1f.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1g.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1h.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1i.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-5.d: Likewise.
+	* testsuite/gas/i386/i386.exp: Skip x86-64-align-branch-2a,
+	x86-64-align-branch-2b and x86-64-align-branch-2c on Darwin.
 
-2019-06-19  H.J. Lu  <hongjiu.lu@intel.com>
+2020-01-14  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
-	PR binutils/24700
-	* testsuite/gas/i386/disassem.s: Add test for vbroadcasti32x8
-	with invalid vector length.
-	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
-	* testsuite/gas/i386/disassem.d: Updated.
-	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
+	PR 25377
+	* config/tc-z80.c: Add support for half precision, single
+	precision and double precision floating point values.
+	* config/tc-z80.h b/gas/config/tc-z80.h: Disable string escapes.
+	* doc/as.texi: Add new z80 command line options.
+	* doc/c-z80.texi: Document new z80 command line options.
+	* testsuite/gas/z80/ez80_pref_dis.s: New test.
+	* testsuite/gas/z80/ez80_pref_dis.d: New test driver.
+	* testsuite/gas/z80/z80.exp: Run the new test.
+	* testsuite/gas/z80/fp_math48.d: Use correct command line option.
+	* testsuite/gas/z80/fp_zeda32.d: Likewise.
+	* testsuite/gas/z80/strings.d: Update expected output.
 
-2019-06-17  H.J. Lu  <hongjiu.lu@intel.com>
+2020-01-13  Matthew Malcomson  <matthew.malcomson@arm.com>
 
-	PR binutils/24691
-	* testsuite/gas/i386/disassem.s: Add test for vshuff32x4 with
-	invalid vector length.
-	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
-	* testsuite/gas/i386/disassem.d: Updated.
-	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
+	* config/tc-aarch64.c (f64mm, f32mm): Add sve as a feature
+	dependency.
 
-2019-06-14  Alan Modra  <amodra@gmail.com>
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
 
-	* Makefile.in: Regenerate.
-	* configure: Regenerate.
-	* doc/Makefile.in: Regenerate.
-
-2019-06-12  Peter Bergner  <bergner@linux.ibm.com>
-
-	* testsuite/gas/ppc/power9.d: Delete ldmx tests.
-	* testsuite/gas/ppc/power9.s: Likewise.
-
-2019-06-06  Lili Cui  <lili.cui@intel.com>
-
-	* config/tc-i386.c (cpu_arch): Add .enqcmd.
-	(cpu_noarch): Add noenqcmd.
-	* doc/c-i386.texi: Document noenqcmd.
-
-2019-06-05  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/24633
-	* testsuite/gas/i386/disassem.s: Add tests for invalid vector
-	lengths for EVEX vextractfXX and vinsertfXX.
-	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
-	* testsuite/gas/i386/disassem.d: Updated.
-	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
-
-2019-06-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/24626
-	* testsuite/gas/i386/disassem.s: Add tests for reserved VEX.vvvv
-	and EVEX.vvvv.
-	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
-	* testsuite/gas/i386/disassem.d: Updated.
-	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
-
-2019-06-04  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>
-	    Lili Cui  <lili.cui@intel.com>
-
-	* config/tc-i386.c (cpu_arch): Add .avx512_vp2intersect.
-	(cpu_noarch): Likewise.
-	* doc/c-i386.texi: Document avx512_vp2intersect.
-	* testsuite/gas/i386/i386.exp: Run vp2intersect tests.
-	* testsuite/gas/i386/vp2intersect-intel.d: New test.
-	* testsuite/gas/i386/vp2intersect.d: Likewise.
-	* testsuite/gas/i386/vp2intersect.s: Likewise.
-	* testsuite/gas/i386/vp2intersect-inval-bcast.l: Likewise.
-	* testsuite/gas/i386/vp2intersect-inval-bcast.s: Likewise.
-	* testsuite/gas/i386/x86-64-vp2intersect-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-vp2intersect.d: Likewise.
-	* testsuite/gas/i386/x86-64-vp2intersect.s: Likewise.
-	* testsuite/gas/i386/x86-64-vp2intersect-inval-bcast.l: Likewise.
-	* testsuite/gas/i386/x86-64-vp2intersect-inval-bcast.s: Likewise.
-
-2019-06-04  Xuepeng Guo  <xuepeng.guo@intel.com>
-	    Lili Cui  <lili.cui@intel.com>
-
-	* doc/c-i386.texi: Document enqcmd.
-	* testsuite/gas/i386/enqcmd-intel.d: New file.
-	* testsuite/gas/i386/enqcmd-inval.l: Likewise.
-	* testsuite/gas/i386/enqcmd-inval.s: Likewise.
-	* testsuite/gas/i386/enqcmd.d: Likewise.
-	* testsuite/gas/i386/enqcmd.s: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd-inval.l: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd-inval.s: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd.s: Likewise.
-	* testsuite/gas/i386/i386.exp: Run enqcmd-intel, enqcmd-inval,
-	enqcmd, x86-64-enqcmd-intel, x86-64-enqcmd-inval,
-	and x86-64-enqcmd.
-
-2019-05-30  Jim Wilson  <jimw@sifive.com>
-
-	* config/tc-riscv.c (riscv_ip) <'u'>: Move O_constant check inside if
-	statement.  Delete O_symbol and O_constant check after if statement.
-	* testsuite/gas/riscv/auipc-parsing.s: Test lui with missing %hi.
-	* testsuite/gas/riscv/auipc-parsing.l: Update.
-
-2019-05-28  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24625
-	* testsuite/gas/i386/inval-avx512f.s: Add tests for AVX512_BF16
-	instructions with invalid broadcast.
-	* testsuite/gas/i386/x86-64-inval-avx512f.s: Likewise.
-	* testsuite/gas/i386/inval-avx512f.l: Updated.
-	* testsuite/gas/i386/x86-64-inval-avx512f.l: Likewise.
-
-2019-05-27  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (is_ppc64_target): New function.
-	(md_show_usage): Split up usage message.  Don't show -a64 when
-	unsupported.
-	testsuite/gas/ppc/ppc.exp (supports_ppc64): New.
-	(prefix-reloc): Only run for ppc64.
-
-2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* config/tc-aarch64.c (aarch64_elf_copy_symbol_attributes): Define.
-	* config/tc-aarch64.h (aarch64_elf_copy_symbol_attributes): Declare.
-	(OBJ_COPY_SYMBOL_ATTRIBUTES): Define.
-	* testsuite/gas/aarch64/symbol-variant_pcs-3.d: New test.
-	* testsuite/gas/aarch64/symbol-variant_pcs-3.s: New test.
-
-2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* config/tc-aarch64.c (s_variant_pcs): New function.
-	* doc/c-aarch64.texi: Document .variant_pcs.
-	* testsuite/gas/aarch64/symbol-variant_pcs-1.d: New test.
-	* testsuite/gas/aarch64/symbol-variant_pcs-1.s: New test.
-	* testsuite/gas/aarch64/symbol-variant_pcs-2.d: New test.
-	* testsuite/gas/aarch64/symbol-variant_pcs-2.s: New test.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* po/POTFILES.in: Regenerate.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (ppc_elf_suffix): Support @pcrel, @got@pcrel,
-	@plt@pcrel, @higher34, @highera34, @highest34, and @highesta34.
-	(fixup_size): Handle new powerxx relocs.
-	(md_assemble): Warn for @pcrel on non-prefix insns.
-	Accept @l, @h and @ha on prefix insns, and infer reloc without
-	any @ suffix.  Translate powerxx relocs to suit DQ and DS field
-	instructions.  Include operand tests as well as opcode test to
-	translate BFD_RELOC_HI16_S to BFD_RELOC_PPC_16DX_HA.
-	(ppc_fix_adjustable): Return false for pcrel GOT and PLT relocs.
-	(md_apply_fix): Handle new powerxx relocs.
-	* config/tc-ppc.h (TC_FORCE_RELOCATION_SUB_LOCAL): Accept
-	BFD_RELOC_PPC64_ADDR16_HIGHER34, BFD_RELOC_PPC64_ADDR16_HIGHERA34,
-	BFD_RELOC_PPC64_ADDR16_HIGHEST34, BFD_RELOC_PPC64_ADDR16_HIGHESTA34,
-	BFD_RELOC_PPC64_D34, and BFD_RELOC_PPC64_D28.
-	* testsuite/gas/ppc/prefix-reloc.d,
-	* testsuite/gas/ppc/prefix-reloc.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
-	    Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (ppc_insert_operand): Only sign extend fields that
-	are 32-bits or smaller.
-	* messages.c (as_internal_value_out_of_range): Do not truncate
-	variables and use BFD_VMA_FMT to print them.
-	* testsuite/gas/ppc/prefix-pcrel.s,
-	* testsuite/gas/ppc/prefix-pcrel.d: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
-	    Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (ppc_setup_opcodes): Handle prefix_opcodes.
-	(struct insn_label_list): New.
-	(insn_labels, free_insn_labels): New variables.
-	(ppc_record_label, ppc_clear_labels, ppc_start_line_hook): New funcs.
-	(ppc_frob_label, ppc_new_dot_label): Move functions earlier in file
-	and call ppc_record_label.
-	(md_assemble): Handle 64-bit prefix instructions.  Align labels
-	that are on the same line as a prefix instruction.
-	* config/tc-ppc.h (tc_frob_label, ppc_frob_label): Move to
-	later in the file.
-	(md_start_line_hook): Define.
-	(ppc_start_line_hook): Declare.
-	* testsuite/gas/ppc/prefix-align.d,
-	* testsuite/gas/ppc/prefix-align.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run new test.
-
-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* configure.ac: Handle bpf-*-* targets.
-	* configure.tgt (generic_target): Likewise.
-	* configure: Regenerate.
-	* Makefile.am (TARGET_CPU_CFILES): Add tc-bpf.c.
-	(TARGET_CPU_HFILES): Add tc-bpf.h.
-	* Makefile.in: Regenerated.
-	* config/tc-bpf.c: New file.
-	* config/tc-bpf.h: Likewise.
-	* doc/Makefile.am (CPU_DOCS): Add c-bpf.texi.
-	* doc/Makefile.in: Regenerated.
-	* doc/all.texi: set BPF.
-	* doc/as.texi: Add eBPF contents.
-	* doc/c-bpf.texi: New file.
-	* testsuite/gas/bpf/alu.d: New file.
-	* testsuite/gas/bpf/mem-be.d: Likewise.
-	* testsuite/gas/bpf/mem.s: Likewise.
-	* testsuite/gas/bpf/mem.d: Likewise.
-	* testsuite/gas/bpf/lddw-be.d: Likewise.
-	* testsuite/gas/bpf/lddw.s: Likewise.
-	* testsuite/gas/bpf/lddw.d: Likewise.
-	* testsuite/gas/bpf/jump-be.d: Likewise.
-	* testsuite/gas/bpf/jump.s: Likewise.
-	* testsuite/gas/bpf/jump.d: Likewise.
-	* testsuite/gas/bpf/exit-be.d: Likewise.
-	* testsuite/gas/bpf/exit.s: Likewise.
-	* testsuite/gas/bpf/exit.d: Likewise.
-	* testsuite/gas/bpf/call-be.d: Likewise.
-	* testsuite/gas/bpf/call.s: Likewise.
-	* testsuite/gas/bpf/call.d: Likewise.
-	* testsuite/gas/bpf/bpf.exp: Likewise.
-	* testsuite/gas/bpf/atomic-be.d: Likewise.
-	* testsuite/gas/bpf/atomic.s: Likewise.
-	* testsuite/gas/bpf/atomic.d: Likewise.
-	* testsuite/gas/bpf/alu-be.d: Likewise.
-	* testsuite/gas/bpf/alu32-be.d: Likewise.
-	* testsuite/gas/bpf/alu32.s: Likewise.
-	* testsuite/gas/bpf/alu32.d: Likewise.
-	* testsuite/gas/bpf/alu.s: Likewise.
-	* testsuite/gas/all/gas.exp: Introduce a nop_type for eBPF.
-	* testsuite/gas/all/org-1.s: Support nop_type 6.
-	* testsuite/gas/all/org-1.l: Updated to reflect changes in
-	org-1.s.
-
-2019-05-22  John Darrington <john@darrington.wattle.id.au>
-
-	* config/tc-s12z.c (s12z_strtol): New function. (md_show_usage): Update.
-	(md_parse_option): new case OPTION_DOLLAR_HEX. (s12z_init_after_args):
-	(<global>): Use s12z_strtol instead of strtol.
-	* doc/c-s12z.texi (S12Z Options): Document new option -mdollar-hex.
-	* testsuite/gas/s12z/dollar-hex.d: New file.
-	* testsuite/gas/s12z/dollar-hex.s: New file.
-	* testsuite/gas/s12z/s12z.exp: Add them.
-
-2019-05-21  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (parse_operands): Update case OP_RVC to
-	parse p0 and P0.
-	(do_vmrs): Add checks for valid operands with respect to
-	cpu and fpu options.
-	(do_vmsr): Likewise.
-	(reg_names): New reg_names for FPSCR_nzcvqc, VPR, FPCXT_NS
-	and FPCXT_S.
-	* testsuite/gas/arm/armv8_1-m-spec-reg.d: New.
-	* testsuite/gas/arm/armv8_1-m-spec-reg.s: New.
-	* testsuite/gas/arm/armv8_1-m-spec-reg-bad1.d: New.
-	* testsuite/gas/arm/armv8_1-m-spec-reg-bad2.d: New.
-	* testsuite/gas/arm/armv8_1-m-spec-reg-bad3.d: New.
-	* testsuite/gas/arm/armv8_1-m-spec-reg-bad1.l: New.
-	* testsuite/gas/arm/armv8_1-m-spec-reg-bad2.l: New.
-	* testsuite/gas/arm/armv8_1-m-spec-reg-bad3.l: New.
-	* testsuite/gas/arm/vfp1xD.d: Updated to allow new valid values.
-	* testsuite/gas/arm/vfp1xD_t2.d: Likewise.
-
-2019-05-21  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (TOGGLE_BIT): New.
-	(T16_32_TAB): New entries for cinc, cinv, cneg, csinc,
-	csinv, csneg, cset, csetm and csel.
-	(operand_parse_code): New OP_RR_ZR.
-	(parse_operand): Handle case for OP_RR_ZR.
-	(do_t_cond): New.
-	(insns): New instructions for cinc, cinv, cneg, csinc,
-	csinv, csneg, cset, csetm, csel.
-	* testsuite/gas/arm/armv8_1-m-cond-bad.d: New test.
-	* testsuite/gas/arm/armv8_1-m-cond-bad.l: New test.
-	* testsuite/gas/arm/armv8_1-m-cond-bad.s: New test.
-	* testsuite/gas/arm/armv8_1-m-cond.d: New test.
-	* testsuite/gas/arm/armv8_1-m-cond.s: New test.
-
-2019-05-21  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (operand_parse_code): New entries for
-	OP_RRnpcsp_I32 (register or integer operands).
-	(do_mve_scalar_shift): New.
-	(insns): New instructions for asrl, lsll, lsrl, sqrshrl, sqrshr, sqshl
-	sqshll, srshr, srshrl, uqrshll, uqrshl, uqshll, uqshl, urshrl and urshr.
-	* testsuite/gas/arm/mve-shift.d: New.
-	* testsuite/gas/arm/mve-shift.s: New.
-	* testsuite/gas/arm/mve-shift-bad.d: New.
-	* testsuite/gas/arm/mve-shift-bad.s: New.
-	* testsuite/gas/arm/mve-shift-bad.l: New.
-
-2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* testsuite/gas/mips/r6-branch-constraints.s: Rename to ...
-	* testsuite/gas/mips/r6-reg-constraints.s: this and add test
-	case for DAUI.
-	* testsuite/gas/mips/r6-branch-constraints.l: Rename to ...
-	* testsuite/gas/mips/r6-reg-constraints.l: this and add test
-	for DAUI.
-	* testsuite/gas/mips/mips.exp: Rename test from
-	r6-branch-constraints to r6-reg-constraints.
-
-2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	PR 24559
-	* config/tc-arm.c (move_or_literal_pool): Set size_req to 0 for MOVW
-	replacement.
-	* testsuite/gas/arm/load-pseudo.s: New test input.
-	* testsuite/gas/arm/m0-load-pseudo.d: New test.
-	* testsuite/gas/arm/m23-load-pseudo.d: New test.
-	* testsuite/gas/arm/m33-load-pseudo.d: New test.
-
-2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* testsuite/gas/arm/armv8_1-m-bf.d: Allow different branch target naming
-	conventions.
-	* testsuite/gas/arm/armv8_1-m-bfl.d: Likewise.
-	* testsuite/gas/arm/armv8_1-m-bfcsel.d: Likewise.
-	* testsuite/gas/arm/armv8_1-m-loloop.d: Likewise.
-	* testsuite/gas/arm/armv8_1-m-bf-rel.d: Skip for vxworks.
-	* testsuite/gas/arm/armv8_1-m-bf-rela.d: New test.
-	* testsuite/gas/arm/armv8_1-m-bfl-rel.d: Skip for vxworks.
-	* testsuite/gas/arm/armv8_1-m-bfl-rela.d: New test.
-
-2019-05-21  John Darrington <john@darrington.wattle.id.au>
-
-	* expr.c (literal_prefix_dollar_hex): New variable.
-	(operand)[case '$']: Use the new variable instead of the old macro.
-	Also, move this instance of "case '$'" next to the other one, and
-	enable it only in the complementary proprocessor case.
-	* expr.h (literal_prefix_dollar_hex): Declare it.
-	* config/tc-epiphany.c (md_begin): Assign literal_prefix_dollar_hex.
-	* config/tc-ip2k.c:      ditto
-	* config/tc-mt.c:        ditto
-	* config/tc-epiphany.h (LITERAL_PREFIXDOLLAR_HEX): Remove macro definition.
-	* config/tc-ip2k.h:      ditto
-	* config/tc-mt.h:        ditto
-
-2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	PR 14798
-	* config/tc-mips.c (s_mips_globl): Only treat symbols that are
-	not explicitly labelled as BSF_OBJECTs for IRIX targets.
-	* testsuite/gas/mips/pr14798.s: New test source.
-	* testsuite/gas/mips/pr14798-irix.d: New test.
-	* testsuite/gas/mips/pr14798.d: Likewise.
-	* testsuite/gas/mips/mips.exp: Run the new tests.
-
-2019-05-17  John Darrington  <john@darrington.wattle.id.au>
-
-	* doc/c-arm.texi (ARM Options): Remove "(r)" and "(tm)"
-	* doc/c-bfin.texi (Blackfin Syntax): Remove "(r)"
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (check_simd_pred_availability): Refactor.
-	(do_neon_dyadic_i_su): Refactor use of check_simd_pred_availability.
-	(do_neon_dyadic_i64_su): Likewise.
-	(do_neon_shl): Likewise.
-	(do_neon_qshl): Likewise.
-	(do_neon_rshl): Likewise.
-	(do_neon_logic): Likewise.
-	(do_neon_dyadic_if_su): Likewise.
-	(do_neon_addsub_if_i): Likewise.
-	(do_neon_mac_maybe_scalar): Likewise.
-	(do_neon_fmac): Likewise.
-	(do_neon_mul): Likewise.
-	(do_neon_qdmulh): Likewise.
-	(do_neon_qrdmlah): Likewise.
-	(do_neon_abs_neg): Likewise.
-	(do_neon_sli): Likewise.
-	(do_neon_sri): Likewise.
-	(do_neon_qshlu_imm): Likewise.
-	(do_neon_cvt_1): Likewise.
-	(do_neon_cvttb_1): Likewise.
-	(do_neon_mvn): Likewise.
-	(do_neon_rev): Likewise.
-	(do_neon_dup): Likewise.
-	(do_neon_mov): Likewise.
-	(do_neon_rshift_round_imm): Likewise.
-	(do_neon_sat_abs_neg): Likewise.
-	(do_neon_cls): Likewise.
-	(do_neon_clz): Likewise.
-	(do_vmaxnm): Likewise.
-	(do_vrint_1): Likewise.
-	(do_vcmla): Likewise.
-	(do_vcadd): Likewise.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* NEWS: Mention Armv8.1-M Mainline and MVE.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* testsuite/gas/arm/mve-tailpredloop.d: New test.
-	* testsuite/gas/arm/mve-tailpredloop.s: New test.
-	* testsuite/gas/arm/mve-vabav.d: New test.
-	* testsuite/gas/arm/mve-vabav.s: New test.
-	* testsuite/gas/arm/mve-vabd.d: New test.
-	* testsuite/gas/arm/mve-vabd.s: New test.
-	* testsuite/gas/arm/mve-vabsneg.d: New test.
-	* testsuite/gas/arm/mve-vabsneg.s: New test.
-	* testsuite/gas/arm/mve-vadc.d: New test.
-	* testsuite/gas/arm/mve-vadc.s: New test.
-	* testsuite/gas/arm/mve-vaddlv.d: New test.
-	* testsuite/gas/arm/mve-vaddlv.s: New test.
-	* testsuite/gas/arm/mve-vaddsub.d: New test.
-	* testsuite/gas/arm/mve-vaddsub.s: New test.
-	* testsuite/gas/arm/mve-vaddv.d: New test.
-	* testsuite/gas/arm/mve-vaddv.s: New test.
-	* testsuite/gas/arm/mve-vand.d: New test.
-	* testsuite/gas/arm/mve-vand.s: New test.
-	* testsuite/gas/arm/mve-vbic.d: New test.
-	* testsuite/gas/arm/mve-vbic.s: New test.
-	* testsuite/gas/arm/mve-vbrsr.d: New test.
-	* testsuite/gas/arm/mve-vbrsr.s: New test.
-	* testsuite/gas/arm/mve-vcadd.d: New test.
-	* testsuite/gas/arm/mve-vcadd.s: New test.
-	* testsuite/gas/arm/mve-vcls.d: New test.
-	* testsuite/gas/arm/mve-vcls.s: New test.
-	* testsuite/gas/arm/mve-vclz.d: New test.
-	* testsuite/gas/arm/mve-vclz.s: New test.
-	* testsuite/gas/arm/mve-vcmla.d: New test.
-	* testsuite/gas/arm/mve-vcmla.s: New test.
-	* testsuite/gas/arm/mve-vcmp.d: New test.
-	* testsuite/gas/arm/mve-vcmp.s: New test.
-	* testsuite/gas/arm/mve-vcmul.d: New test.
-	* testsuite/gas/arm/mve-vcmul.s: New test.
-	* testsuite/gas/arm/mve-vcvt-1.d: New test.
-	* testsuite/gas/arm/mve-vcvt-1.s: New test.
-	* testsuite/gas/arm/mve-vcvt-2.d: New test.
-	* testsuite/gas/arm/mve-vcvt-2.s: New test.
-	* testsuite/gas/arm/mve-vcvt-3.d: New test.
-	* testsuite/gas/arm/mve-vcvt-3.s: New test.
-	* testsuite/gas/arm/mve-vcvt-4.d: New test.
-	* testsuite/gas/arm/mve-vcvt-4.s: New test.
-	* testsuite/gas/arm/mve-vddup.d: New test.
-	* testsuite/gas/arm/mve-vddup.s: New test.
-	* testsuite/gas/arm/mve-vdup.d: New test.
-	* testsuite/gas/arm/mve-vdup.s: New test.
-	* testsuite/gas/arm/mve-veor.d: New test.
-	* testsuite/gas/arm/mve-veor.s: New test.
-	* testsuite/gas/arm/mve-vfma-vfms.d: New test.
-	* testsuite/gas/arm/mve-vfma-vfms.s: New test.
-	* testsuite/gas/arm/mve-vfmas.d: New test.
-	* testsuite/gas/arm/mve-vfmas.s: New test.
-	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd.d: New test.
-	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd.s: New test.
-	* testsuite/gas/arm/mve-vhcadd.d: New test.
-	* testsuite/gas/arm/mve-vhcadd.s: New test.
-	* testsuite/gas/arm/mve-vmax-vmin.d: New test.
-	* testsuite/gas/arm/mve-vmax-vmin.s: New test.
-	* testsuite/gas/arm/mve-vmaxa-vmina.d: New test.
-	* testsuite/gas/arm/mve-vmaxa-vmina.s: New test.
-	* testsuite/gas/arm/mve-vmaxnm-vminnm.d: New test.
-	* testsuite/gas/arm/mve-vmaxnm-vminnm.s: New test.
-	* testsuite/gas/arm/mve-vmaxnma-vminnma.s: New test.
-	* testsuite/gas/arm/mve-vmaxnmv-vminnmv.d: New test.
-	* testsuite/gas/arm/mve-vmaxnmv-vminnmv.s: New test.
-	* testsuite/gas/arm/mve-vmaxv-vminv.d: New test.
-	* testsuite/gas/arm/mve-vmaxv-vminv.s: New test.
-	* testsuite/gas/arm/mve-vmla.d: New test.
-	* testsuite/gas/arm/mve-vmla.s: New test.
-	* testsuite/gas/arm/mve-vmladav.d: New test.
-	* testsuite/gas/arm/mve-vmladav.s: New test.
-	* testsuite/gas/arm/mve-vmlaldav.d: New test.
-	* testsuite/gas/arm/mve-vmlaldav.s: New test.
-	* testsuite/gas/arm/mve-vmlalv.d: New test.
-	* testsuite/gas/arm/mve-vmlalv.s: New test.
-	* testsuite/gas/arm/mve-vmlas.d: New test.
-	* testsuite/gas/arm/mve-vmlas.s: New test.
-	* testsuite/gas/arm/mve-vmlav.d: New test.
-	* testsuite/gas/arm/mve-vmlav.s: New test.
-	* testsuite/gas/arm/mve-vmlsdav.d: New test.
-	* testsuite/gas/arm/mve-vmlsdav.s: New test.
-	* testsuite/gas/arm/mve-vmlsldav.d: New test.
-	* testsuite/gas/arm/mve-vmlsldav.s: New test.
-	* testsuite/gas/arm/mve-vmov-1.d: New test.
-	* testsuite/gas/arm/mve-vmov-1.s: New test.
-	* testsuite/gas/arm/mve-vmov-2.d: New test.
-	* testsuite/gas/arm/mve-vmov-2.s: New test.
-	* testsuite/gas/arm/mve-vmul.d: New test.
-	* testsuite/gas/arm/mve-vmul.s: New test.
-	* testsuite/gas/arm/mve-vmulh.d: New test.
-	* testsuite/gas/arm/mve-vmulh.s: New test.
-	* testsuite/gas/arm/mve-vmullbt.d: New test.
-	* testsuite/gas/arm/mve-vmullbt.s: New test.
-	* testsuite/gas/arm/mve-vmvn.d: New test.
-	* testsuite/gas/arm/mve-vmvn.s: New test.
-	* testsuite/gas/arm/mve-vorn.d: New test.
-	* testsuite/gas/arm/mve-vorn.s: New test.
-	* testsuite/gas/arm/mve-vorr.d: New test.
-	* testsuite/gas/arm/mve-vorr.s: New test.
-	* testsuite/gas/arm/mve-vpnot.d: New test.
-	* testsuite/gas/arm/mve-vpnot.s: New test.
-	* testsuite/gas/arm/mve-vpsel.d: New test.
-	* testsuite/gas/arm/mve-vpsel.s: New test.
-	* testsuite/gas/arm/mve-vpt.d: New test.
-	* testsuite/gas/arm/mve-vpt.s: New test.
-	* testsuite/gas/arm/mve-vqabsneg.s: New test.
-	* testsuite/gas/arm/mve-vqaddsub.d: New test.
-	* testsuite/gas/arm/mve-vqaddsub.s: New test.
-	* testsuite/gas/arm/mve-vqdmladh.d: New test.
-	* testsuite/gas/arm/mve-vqdmladh.s: New test.
-	* testsuite/gas/arm/mve-vqdmlah.d: New test.
-	* testsuite/gas/arm/mve-vqdmlah.s: New test.
-	* testsuite/gas/arm/mve-vqdmlash.d: New test.
-	* testsuite/gas/arm/mve-vqdmlash.s: New test.
-	* testsuite/gas/arm/mve-vqdmlsdh.d: New test.
-	* testsuite/gas/arm/mve-vqdmlsdh.s: New test.
-	* testsuite/gas/arm/mve-vqdmulh.d: New test.
-	* testsuite/gas/arm/mve-vqdmulh.s: New test.
-	* testsuite/gas/arm/mve-vqdmull.d: New test.
-	* testsuite/gas/arm/mve-vqdmull.s: New test.
-	* testsuite/gas/arm/mve-vqmovn.d: New test.
-	* testsuite/gas/arm/mve-vqmovn.s: New test.
-	* testsuite/gas/arm/mve-vqrshl.d: New test.
-	* testsuite/gas/arm/mve-vqrshl.s: New test.
-	* testsuite/gas/arm/mve-vqrshrn.d: New test.
-	* testsuite/gas/arm/mve-vqrshrn.s: New test.
-	* testsuite/gas/arm/mve-vqshl.d: New test.
-	* testsuite/gas/arm/mve-vqshl.s: New test.
-	* testsuite/gas/arm/mve-vrev.d: New test.
-	* testsuite/gas/arm/mve-vrev.s: New test.
-	* testsuite/gas/arm/mve-vrint.d: New test.
-	* testsuite/gas/arm/mve-vrint.s: New test.
-	* testsuite/gas/arm/mve-vrmlaldavh.d: New test.
-	* testsuite/gas/arm/mve-vrmlaldavh.s: New test.
-	* testsuite/gas/arm/mve-vrshl.d: New test.
-	* testsuite/gas/arm/mve-vrshl.s: New test.
-	* testsuite/gas/arm/mve-vsbc.d: New test.
-	* testsuite/gas/arm/mve-vsbc.s: New test.
-	* testsuite/gas/arm/mve-vshl.d: New test.
-	* testsuite/gas/arm/mve-vshl.s: New test.
-	* testsuite/gas/arm/mve-vshlc.d: New test.
-	* testsuite/gas/arm/mve-vshlc.s: New test.
-	* testsuite/gas/arm/mve-vshll.d: New test.
-	* testsuite/gas/arm/mve-vshll.s: New test.
-	* testsuite/gas/arm/mve-vshr.d: New test.
-	* testsuite/gas/arm/mve-vshr.s: New test.
-	* testsuite/gas/arm/mve-vshrn.d: New test.
-	* testsuite/gas/arm/mve-vshrn.s: New test.
-	* testsuite/gas/arm/mve-vsli.d: New test.
-	* testsuite/gas/arm/mve-vsli.s: New test.
-	* testsuite/gas/arm/mve-vsri.d: New test.
-	* testsuite/gas/arm/mve-vsri.s: New test.
-	* testsuite/gas/arm/mve-vstld.d: New test.
-	* testsuite/gas/arm/mve-vstld.s: New test.
-	* testsuite/gas/arm/mve-vstrldr-1.d: New test.
-	* testsuite/gas/arm/mve-vstrldr-1.s: New test.
-	* testsuite/gas/arm/mve-vstrldr-2.d: New test.
-	* testsuite/gas/arm/mve-vstrldr-2.s: New test.
-	* testsuite/gas/arm/mve-vstrldr-3.d: New test.
-	* testsuite/gas/arm/mve-vstrldr-3.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (T16_32_TAB): Add new instructions.
-	(do_t_loloop): Changed to handle tail predication variants.
-	(md_apply_fix): Likewise.
-	(insns): Add entries for MVE mnemonics.
-	* testsuite/gas/arm/mve-tailpredloop-bad.d: New test.
-	* testsuite/gas/arm/mve-tailpredloop-bad.l: New test.
-	* testsuite/gas/arm/mve-tailpredloop-bad.s: New test.
-	* testsuite/gas/arm/mve-tailpredloop.d: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_mve_vshll): New encoding function.
-	(do_mve_vshlc): Likewise.
-	(insns): Add entries for MVE mnemonics.
-	* testsuite/gas/arm/mve-vshlc-bad.d: New test.
-	* testsuite/gas/arm/mve-vshlc-bad.l: New test.
-	* testsuite/gas/arm/mve-vshlc-bad.s: New test.
-	* testsuite/gas/arm/mve-vshll-bad.d: New test.
-	* testsuite/gas/arm/mve-vshll-bad.l: New test.
-	* testsuite/gas/arm/mve-vshll-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): Add new operand.
-	(parse_operands): Handle new operand.
-	(do_neon_shl_imm): Accept MVE variants.
-	(do_neon_shl): Likewise.
-	(do_neon_qshl_imm): Likewise.
-	(do_neon_qshl): Likewise.
-	(do_neon_qshlu_imm): Likewise.
-	(insns): Likewise.
-	* testsuite/gas/arm/mve-vqshl-bad.d: New test.
-	* testsuite/gas/arm/mve-vqshl-bad.l: New test.
-	* testsuite/gas/arm/mve-vqshl-bad.s: New test.
-	* testsuite/gas/arm/mve-vshl-bad.d: New test.
-	* testsuite/gas/arm/mve-vshl-bad.l: New test.
-	* testsuite/gas/arm/mve-vshl-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_neon_sli): Accept MVE variants.
-	(do_neon_sri): Likewise.
-	(do_neon_rev): Likewise.
-	(do_neon_rshift_round_imm): Likewise.
-	(insns): Likewise.
-	* testsuite/gas/arm/mve-vrev-bad.d: New test.
-	* testsuite/gas/arm/mve-vrev-bad.l: New test.
-	* testsuite/gas/arm/mve-vrev-bad.s: New test.
-	* testsuite/gas/arm/mve-vshr-bad.d: New test.
-	* testsuite/gas/arm/mve-vshr-bad.l: New test.
-	* testsuite/gas/arm/mve-vshr-bad.s: New test.
-	* testsuite/gas/arm/mve-vsli-bad.d: New test.
-	* testsuite/gas/arm/mve-vsli-bad.l: New test.
-	* testsuite/gas/arm/mve-vsli-bad.s: New test.
-	* testsuite/gas/arm/mve-vsri-bad.d: New test.
-	* testsuite/gas/arm/mve-vsri-bad.l: New test.
-	* testsuite/gas/arm/mve-vsri-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_vrint_1): Accept MVE variants.
-	(insns): Change entries to accept MVE variants.
-	* testsuite/gas/arm/mve-vrint-bad.d: New test.
-	* testsuite/gas/arm/mve-vrint-bad.l: New test.
-	* testsuite/gas/arm/mve-vrint-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (M_MNEM_vshrnt, M_MNEM_vshrnb, M_MNEM_vrshrnt,
-	 M_MNEM_vqshrnt, M_MNEM_vqshrnb, M_MNEM_vqshrunt, M_MNEM_vqshrunb,
-	 M_MNEM_vrshrnb, M_MNEM_vqrshrnt, M_MNEM_vqrshrnb, M_MNEM_vqrshrunt,
-	 M_MNEM_vqrshrunb): New instruction encodings.
-	(do_mve_vshrn): New encoding function.
-	(insns): Add entries for MVE mnemonics.
-	* testsuite/gas/arm/mve-vqrshrn-bad.d: New test.
-	* testsuite/gas/arm/mve-vqrshrn-bad.l: New test.
-	* testsuite/gas/arm/mve-vqrshrn-bad.s: New test.
-	* testsuite/gas/arm/mve-vshrn-bad.d: New test.
-	* testsuite/gas/arm/mve-vshrn-bad.l: New test.
-	* testsuite/gas/arm/mve-vshrn-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (M_MNEM_vqmovnt, M_MNEM_vqmovnb,
-	 M_MNEM_vqmovunt, M_MNEM_vqmovunb): New instruction encodings.
-	(do_mve_vqmovn): New encoding function.
-	(do_neon_rshl): Change to accepte MVE variants.
-	(insns): Change entries and add new for MVE mnemonics.
-	* testsuite/gas/arm/mve-vqmovn-bad.d: New test.
-	* testsuite/gas/arm/mve-vqmovn-bad.l: New test.
-	* testsuite/gas/arm/mve-vqmovn-bad.s: New test.
-	* testsuite/gas/arm/mve-vqrshl-bad.d: New test.
-	* testsuite/gas/arm/mve-vqrshl-bad.l: New test.
-	* testsuite/gas/arm/mve-vqrshl-bad.s: New test.
-	* testsuite/gas/arm/mve-vrshl-bad.d: New test.
-	* testsuite/gas/arm/mve-vrshl-bad.l: New test.
-	* testsuite/gas/arm/mve-vrshl-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): Add new operand.
-	(parse_operands): Handle new operand.
-	(do_mve_vqdmull): New encoding function.
-	(insns): Add entry for MVE mnemonics.
-	* testsuite/gas/arm/mve-vqdmull-bad.d: New test.
-	* testsuite/gas/arm/mve-vqdmull-bad.l: New test.
-	* testsuite/gas/arm/mve-vqdmull-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): Add new operand.
-	(parse_operands): Handle new operand.
-	(mve_encode_qqr): Handle new instructions.
-	(do_neon_qdmulh): Add support for MVE variants.
-	(do_neon_qrdmlah): Likewise.
-	(do_mve_vqdmlah): New encoding function.
-	(insns): Change entries and add new entries for MVE mnemonics.
-	* testsuite/gas/arm/mve-vqdmulh-bad.d: New test.
-	* testsuite/gas/arm/mve-vqdmulh-bad.l: New test.
-	* testsuite/gas/arm/mve-vqdmulh-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_mve_vqdmladh): New encoding function.
-	(insns): Add entries for MVE mnemonics.
-	* testsuite/gas/arm/mve-vqdmladh-bad.d: New test.
-	* testsuite/gas/arm/mve-vqdmladh-bad.l: New test.
-	* testsuite/gas/arm/mve-vqdmladh-bad.s: New test.
-	* testsuite/gas/arm/mve-vqdmlsdh-bad.d: New test.
-	* testsuite/gas/arm/mve-vqdmlsdh-bad.l: New test.
-	* testsuite/gas/arm/mve-vqdmlsdh-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_mve_vpsel): New encoding function.
-	(do_mve_vpnot): Likewise.
-	(insns): Add entries for MVE mnemonics.
-	* testsuite/gas/arm/mve-vpnot-bad.d: New test.
-	* testsuite/gas/arm/mve-vpnot-bad.l: New test.
-	* testsuite/gas/arm/mve-vpnot-bad.s: New test.
-	* testsuite/gas/arm/mve-vpsel-bad.d: New test.
-	* testsuite/gas/arm/mve-vpsel-bad.l: New test.
-	* testsuite/gas/arm/mve-vpsel-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_neon_mvn): Change to accept MVE variants.
-	(do_neon_sat_abs_neg): Likewise.
-	(insns): Likewise.
-	* testsuite/gas/arm/mve-vmvn-bad.d: New test.
-	* testsuite/gas/arm/mve-vmvn-bad.l: New test.
-	* testsuite/gas/arm/mve-vmvn-bad.s: New test.
-	* testsuite/gas/arm/mve-vqabsneg-bad.d: New test.
-	* testsuite/gas/arm/mve-vqabsneg-bad.l: New test.
-	* testsuite/gas/arm/mve-vqabsneg-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_mve_vmlas): New encoding function.
-	(do_mve_vmulh): Likewise.
-	(insns): Add entries for MVE mnemonics.
-	* testsuite/gas/arm/mve-vmlas-bad.d: New test.
-	* testsuite/gas/arm/mve-vmlas-bad.l: New test.
-	* testsuite/gas/arm/mve-vmlas-bad.s: New test.
-	* testsuite/gas/arm/mve-vmulh-bad.d: New test.
-	* testsuite/gas/arm/mve-vmulh-bad.l: New test.
-	* testsuite/gas/arm/mve-vmulh-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): New operand.
-	(parse_operands): Handle new operand.
-	(mve_encode_qqr): Handle new instructions.
-	(do_neon_dyadic_i64_su): Accept MVE variants.
-	(neon_dyadic_misc): Likewise.
-	(do_neon_mac_maybe_scalar): Likewise.
-	(do_neon_mul): Likewise.
-	(insns): Change to accept MVE variants.
-	* testsuite/gas/arm/mve-vmla-bad.d: New test.
-	* testsuite/gas/arm/mve-vmla-bad.l: New test.
-	* testsuite/gas/arm/mve-vmla-bad.s: New test.
-	* testsuite/gas/arm/mve-vmul-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vmul-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vmul-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vmul-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vmul-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vmul-bad-2.s: New test.
-	* testsuite/gas/arm/mve-vqaddsub-bad.d: New test.
-	* testsuite/gas/arm/mve-vqaddsub-bad.l: New test.
-	* testsuite/gas/arm/mve-vqaddsub-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (M_MNEM_vmlaldav, M_MNEM_vmlaldava,
-	 M_MNEM_vmlaldavx, M_MNEM_vmlaldavax, M_MNEM_vmlsldav,
-	 M_MNEM_vmlsldava, M_MNEM_vmlsldavx, M_MNEM_vmlsldavax,
-	 M_MNEM_vrmlaldavhx, M_MNEM_vrmlaldavhax, M_MNEM_vrmlsldavh,
-	 M_MNEM_vrmlsldavha, M_MNEM_vrmlsldavhx, M_MNEM_vrmlsldavhax): New
-	instruction encodings.
-	(NEON_SHAPE_DEF): New shape
-	(mve_encode_rrqq): New encoding helper function.
-	(do_mve_vmlaldav): New encoding function.
-	(do_mve_vrmlaldavh): New encoding function.
-	(insns): Add entries for MVE mnemonics.
-	* testsuite/gas/arm/mve-vmlaldav-bad.d: New test.
-	* testsuite/gas/arm/mve-vmlaldav-bad.l: New test.
-	* testsuite/gas/arm/mve-vmlaldav-bad.s: New test.
-	* testsuite/gas/arm/mve-vmlalv-bad.d: New test.
-	* testsuite/gas/arm/mve-vmlalv-bad.l: New test.
-	* testsuite/gas/arm/mve-vmlalv-bad.s: New test.
-	* testsuite/gas/arm/mve-vmlsldav-bad.d: New test.
-	* testsuite/gas/arm/mve-vmlsldav-bad.l: New test.
-	* testsuite/gas/arm/mve-vmlsldav-bad.s: New test.
-	* testsuite/gas/arm/mve-vrmlaldavh-bad.d: New test.
-	* testsuite/gas/arm/mve-vrmlaldavh-bad.l: New test.
-	* testsuite/gas/arm/mve-vrmlaldavh-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (M_MNEM_vmaxv, M_MNEM_vmaxav, M_MNEM_vminv,
-	 M_MNEM_vminav): New instruction encodings.
-	(do_mve_vmaxv): New encoding function.
-	(insns): Add entries for new MVE mnemonics.
-	* testsuite/gas/arm/mve-vmaxv-vminv-bad.d: New test.
-	* testsuite/gas/arm/mve-vmaxv-vminv-bad.l: New test.
-	* testsuite/gas/arm/mve-vmaxv-vminv-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_mve_vmaxnmv): New encoding function.
-	(insns): Add entries for new mnemonics.
-	* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.d: New test.
-	* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.l: New test.
-	* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_mve_vmaxa_vmina): New encoding function.
-	(do_mve_vmaxnma_vminnma): Likewise.
-	(do_neon_dyadic_if_su): Change to support MVE variants.
-	(do_vmaxnm): Likewise.
-	(insns): Change to accept MVE variants and add new.
-	* testsuite/gas/arm/mve-vmax-vmin-bad.d: New test.
-	* testsuite/gas/arm/mve-vmax-vmin-bad.l: New test.
-	* testsuite/gas/arm/mve-vmax-vmin-bad.s: New test.
-	* testsuite/gas/arm/mve-vmaxa-vmina-bad.d: New test.
-	* testsuite/gas/arm/mve-vmaxa-vmina-bad.l: New test.
-	* testsuite/gas/arm/mve-vmaxa-vmina-bad.s: New test.
-	* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.d: New test.
-	* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.l: New test.
-	* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.s: New test.
-	* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.d: New test.
-	* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.l: New test.
-	* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): New operand.
-	(parse_operands): Handle new operand.
-	(mve_encode_qqr): Change to support new instructions.
-	(enum vfp_or_neon_is_neon_bits): Moved.
-	(vfp_or_neon_is_neon): Moved.
-	(check_simd_pred_availability): Moved.
-	(do_neon_dyadic_i_su): Changed to support MVE variants.
-	(neon_dyadic_misc): Changed mve_encode_qqr call.
-	(do_mve_vbrsr): Likewise.
-	(do_mve_vhcadd): New encoding function.
-	(insns): Change existing to accept MVE variants and add new.
-	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd-bad.d: New test.
-	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd-bad.l: New test.
-	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd-bad.s: New test.
-	* testsuite/gas/arm/mve-vhcadd-bad.d: New test.
-	* testsuite/gas/arm/mve-vhcadd-bad.l: New test.
-	* testsuite/gas/arm/mve-vhcadd-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_neon_fmac): Change to support MVE variants.
-	(insns): Change to accept MVE variants.
-	* testsuite/gas/arm/mve-vfma-vfms-bad.d: New test.
-	* testsuite/gas/arm/mve-vfma-vfms-bad.l: New test.
-	* testsuite/gas/arm/mve-vfma-vfms-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (M_MNEM_vddup, M_MNEM_vdwdup, M_MNEM_vidup,
-	 M_MNEM_viwdup): New instruction encodings.
-	(NEON_SHAPE_DEF): New shapes.
-	(do_mve_viddup): New encoding function.
-	(do_neon_dup): Change to support new MVE variants.
-	(insns): Change existing to accept MVE variants and add new.
-	* testsuite/gas/arm/mve-vddup-bad.d: New test.
-	* testsuite/gas/arm/mve-vddup-bad.l: New test.
-	* testsuite/gas/arm/mve-vddup-bad.s: New test.
-	* testsuite/gas/arm/mve-vdup-bad.d: New test.
-	* testsuite/gas/arm/mve-vdup-bad.l: New test.
-	* testsuite/gas/arm/mve-vdup-bad.s: New test.
-	* testsuite/gas/arm/mve-vidup-bad.d: New test.
-	* testsuite/gas/arm/mve-vidup-bad.l: New test.
-	* testsuite/gas/arm/mve-vidup-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_mve_vfmas): New encoding function.
-	(do_neon_cls): Change to support MVE variants.
-	(do_neon_clz): Change to support MVE variants.
-	(insns): Change to support MVE variants and add new.
-	* testsuite/gas/arm/mve-vcls-bad.d: New test.
-	* testsuite/gas/arm/mve-vcls-bad.l: New test.
-	* testsuite/gas/arm/mve-vcls-bad.s: New test.
-	* testsuite/gas/arm/mve-vclz-bad.d: New test.
-	* testsuite/gas/arm/mve-vclz-bad.l: New test.
-	* testsuite/gas/arm/mve-vclz-bad.s: New test.
-	* testsuite/gas/arm/mve-vfmas-bad.d: New test.
-	* testsuite/gas/arm/mve-vfmas-bad.l: New test.
-	* testsuite/gas/arm/mve-vfmas-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): New operands.
-	(parse_operands): Handle new operands.
-	(do_mve_vcmul): New encoding function.
-	(do_vcmla): Change to support MVE variants.
-	(do_vcadd): Change to support MVE variants.
-	(insns): Change existing to support MVE variants and add new.
-	* testsuite/gas/arm/mve-vcadd-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vcadd-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vcadd-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vcadd-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vcadd-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vcadd-bad-2.s: New test.
-	* testsuite/gas/arm/mve-vcmla-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vcmla-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vcmla-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vcmla-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vcmla-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vcmla-bad-2.s: New test.
-	* testsuite/gas/arm/mve-vcmul-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vcmul-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vcmul-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vcmul-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vcmul-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vcmul-bad-2.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): New operands.
-	(parse_operands): Handle new operands.
-	(enum vfp_or_neon_is_neon_bits): Moved
-	(vfp_or_neon_is_neon): Moved
-	(check_simd_pred_availability): Moved.
-	(do_neon_logic): Change to accept MVE variants.
-	(insns): Changed to accept MVE variants.
-	* testsuite/gas/arm/mve-vand-bad.d: New test.
-	* testsuite/gas/arm/mve-vand-bad.l: New test.
-	* testsuite/gas/arm/mve-vand-bad.s: New test.
-	* testsuite/gas/arm/mve-vbic-bad.d: New test.
-	* testsuite/gas/arm/mve-vbic-bad.l: New test.
-	* testsuite/gas/arm/mve-vbic-bad.s: New test.
-	* testsuite/gas/arm/mve-veor-bad.d: New test.
-	* testsuite/gas/arm/mve-veor-bad.l: New test.
-	* testsuite/gas/arm/mve-veor-bad.s: New test.
-	* testsuite/gas/arm/mve-vorn-bad.d: New test.
-	* testsuite/gas/arm/mve-vorn-bad.l: New test.
-	* testsuite/gas/arm/mve-vorn-bad.s: New test.
-	* testsuite/gas/arm/mve-vorr-bad.d: New test.
-	* testsuite/gas/arm/mve-vorr-bad.l: New test.
-	* testsuite/gas/arm/mve-vorr-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (M_MNEM_vaddlv, M_MNEM_vaddlva, M_MNEM_vaddv,
-	 M_MNEM_vaddva): New instruction encodings.
-	(mve_encode_rq): New encoding helper function.
-	(do_mve_vaddlv): New encoding function.
-	(do_mve_vaddv): New encoding function.
-	* testsuite/gas/arm/mve-vaddlv-bad.d: New test.
-	* testsuite/gas/arm/mve-vaddlv-bad.l: New test.
-	* testsuite/gas/arm/mve-vaddlv-bad.s: New test.
-	* testsuite/gas/arm/mve-vaddv-bad.d: New test.
-	* testsuite/gas/arm/mve-vaddv-bad.l: New test.
-	* testsuite/gas/arm/mve-vaddv-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (M_MNEM_vadc, M_MNEM_vadci, M_MNEM_vbrsr):
-	New instruction encodings.
-	(do_mve_vadc): New encoding instruction.
-	(do_mve_vbrsr): Likewise.
-	(do_mve_vsbc): Likewise.
-	* testsuite/gas/arm/mve-vadc-bad.d: New test.
-	* testsuite/gas/arm/mve-vadc-bad.l: New test.
-	* testsuite/gas/arm/mve-vadc-bad.s: New test.
-	* testsuite/gas/arm/mve-vbrsr-bad.d: New test.
-	* testsuite/gas/arm/mve-vbrsr-bad.l: New test.
-	* testsuite/gas/arm/mve-vbrsr-bad.s: New test.
-	* testsuite/gas/arm/mve-vsbc-bad.d: New test.
-	* testsuite/gas/arm/mve-vsbc-bad.l: New test.
-	* testsuite/gas/arm/mve-vsbc-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (MVE_BAD_QREG): New error message.
-	(enum operand_parse_code): Define new operand.
-	(parse_operands): Handle new operand.
-	(do_mve_vpt): Change for VPT blocks.
-	(NEON_SHAPE_DEF): New shape.
-	(neon_logbits): Moved.
-	(LOW4): Moved
-	(HI1): Moved
-	(mve_get_vcmp_vpt_cond): New function to translate vpt conditions.
-	(do_mve_vcmp): New encoding function.
-	(do_vfp_nsyn_cmp): Changed to support MVE variants.
-	(insns): Change to support MVE variants of vcmp and add vpt.
-	* testsuite/gas/arm/mve-vcmp-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vcmp-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vcmp-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vcmp-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vcmp-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vcmp-bad-2.s: New test.
-	* testsuite/gas/arm/mve-vpt-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vpt-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vpt-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vpt-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vpt-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vpt-bad-2.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (struct arm_it): Expand isscalar field to be able to
-	distinguish between types of scalar.
-	(parse_typed_reg_or_scalar): Change to accept MVE scalar variants.
-	(parse_scalar): Likewise.
-	(parse_neon_mov): Accept MVE variant.
-	(po_scalar_or_goto): Make use reg_type.
-	(parse_operands): Change uses of po_scalar_or_goto.
-	(do_vfp_sp_monadic): Change to accept MVE variants.
-	(do_vfp_reg_from_sp): Likewise.
-	(do_vfp_sp_from_reg): Likewise.
-	(do_vfp_dp_rd_rm): Likewise.
-	(do_vfp_dp_rd_rn_rm): Likewise.
-	(do_vfp_dp_rm_rd_rn): Likewise.
-	(M_MNEM_vmovlt, M_MNEM_vmovlb, M_MNEM_vmovnt, M_MNEM_vmovnb): New
-	instruction encodings.
-	(NEON_SHAPE_DEF): New shape.
-	(do_mve_mov): New encoding fuction.
-	(do_mve_movn): Likewise.
-	(do_mve_movl): Likewise.
-	(do_neon_mov): Change to accept MVE variants.
-	(mcCE): New MACRO.
-	(insns): Accept new MVE variants and instructions.
-	* testsuite/gas/arm/mve-vmov-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vmov-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vmov-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vmov-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vmov-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vmov-bad-2.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum operand_parse_code): Add new operand.
-	(parse_operands): Handle new operand.
-	(do_neon_cvt_1): Handle MVE variants.
-	(do_neon_cvttb_1): Likewise.
-	(insns): Accept MVE variants.
-	* testsuite/gas/arm/mve-vcvt-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-2.s: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-3.d: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-3.l: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-3.s: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-4.d: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-4.l: New test.
-	* testsuite/gas/arm/mve-vcvt-bad-4.s: New test.
-	* testsuite/gas/arm/mve-vcvt-bad.d: New test.
-	* testsuite/gas/arm/mve-vcvt-bad.l: New test.
-	* testsuite/gas/arm/mve-vcvt-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (struct arm_it): Make immisreg field larger to hold
-	type of register.
-	(enum shift_kind): Add SHIFT_UXTW shift kind.
-	(enum parse_shift_mode): Add SHIFT_UXTW_IMMEDIATE shift mode.
-	(parse_shift): Handle new shift type.
-	(parse_address_main): Accept new addressing modes.
-	(M_MNEM_vstrb, M_MNEM_vstrh, M_MNEM_vstrw, M_MNEM_vstrd,
-	 M_MNEM_vldrb, M_MNEM_vldrh, M_MNEM_vldrw, M_MNEM_vldrd): New
-	instruction encodings.
-	(do_mve_vstr_vldr_QI): New encoding functions.
-	(do_mve_vstr_vldr_RQ): Likewise.
-	(do_mve_vstr_vldr_RI): Likewise.
-	(do_mve_vstr_vldr): Likewise.
-	* testsuite/gas/arm/mve-vldr-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vldr-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vldr-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vldr-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vldr-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vldr-bad-2.s: New test.
-	* testsuite/gas/arm/mve-vldr-bad-3.d: New test.
-	* testsuite/gas/arm/mve-vldr-bad-3.l: New test.
-	* testsuite/gas/arm/mve-vldr-bad-3.s: New test.
-	* testsuite/gas/arm/mve-vstr-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vstr-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vstr-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vstr-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vstr-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vstr-bad-2.s: New test.
-	* testsuite/gas/arm/mve-vstr-bad-3.d: New test.
-	* testsuite/gas/arm/mve-vstr-bad-3.l: New test.
-	* testsuite/gas/arm/mve-vstr-bad-3.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum it_instruction_type): Add MVE_UNPREDICABLE_INSN.
-	(BAD_EL_TYPE): New error message.
-	(parse_neon_el_struct_list): Adapt to be able to accept MVE variant.
-	(parse_address_main): Likewise.
-	(group_reloc_type): Add GROUP_MVE.
-	(enum operand_parse_code): Add new operands.
-	(parse_operands): Handle new operands.
-	(M_MNEM_vst20, M_MNEM_vst21, M_MNEM_vst40, M_MNEM_vst41, M_MNEM_vst42,
-	 M_MNEM_vst43, M_MNEM_vld20, M_MNEM_vld21, M_MNEM_vld40, M_MNEM_vld41,
-	 M_MNEM_vld42, M_MNEM_vld43): New encodings.
-	(do_mve_vst_vld): New encoding function.
-	(do_neon_ld_st_interleave): Use BAD_EL_TYPE.
-	(it_fsm_pre_encode): Handle new it_instruction_type
-	(handle_pred_state): Likewise.
-	* testsuite/gas/arm/mve-vstld-bad.d: New test.
-	* testsuite/gas/arm/mve-vstld-bad.l: New test.
-	* testsuite/gas/arm/mve-vstld-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (BAD_MVE_AUTO): New error message.
-	(BAD_MVE_SRCDEST): Likewise.
-	(mark_feature_used): Diagnose MVE only instructions when in
-	auto-detection mode or -march=all.
-	(enum operand_parse_code): Define new operand.
-	(parse_operands): Handle new operand.
-	(M_MNEM_vmullt, M_MNEM_vmullb): New encodings.
-	(mve_encode_qqq): New encoding helper function.
-	(do_mve_vmull): New encoding function.
-	(insns): Handle new instructions.
-	* testsuite/gas/arm/mve-vmullbt-bad.d: New test.
-	* testsuite/gas/arm/mve-vmullbt-bad.l: New test.
-	* testsuite/gas/arm/mve-vmullbt-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (struct asm_opcode): Make avalue a full int.
-	(BAD_ODD, BAD_EVEN, BAD_SIMD_TYPE): New errors.
-	(enum operand_parse_code): Handle new operands.
-	(parse_operands): Likewise.
-	(M_MNEM_vabav, M_MNEM_vmladav, M_MNEM_vmladava, M_MNEM_vmladavx,
-	 M_MNEM_vmladavax, M_MNEM_vmlsdav, M_MNEM_vmlsdava, M_MNEM_vmlsdavx,
-	 M_MNEM_vmlsdavax): Define new encodings.
-	(NEON_SHAPE_DEF): Add new shape.
-	(neon_check_type): Use BAD_SIMD_TYPE.
-	(mve_encode_rqq): New encoding helper function.
-	(do_mve_vabav, do_mve_vmladav): New encoding functions.
-	(mCEF): New MACRO.
-	* testsuite/gas/arm/mve-vabav-bad.d: New test.
-	* testsuite/gas/arm/mve-vabav-bad.l: New test.
-	* testsuite/gas/arm/mve-vabav-bad.s: New test.
-	* testsuite/gas/arm/mve-vmladav-bad.d: New test.
-	* testsuite/gas/arm/mve-vmladav-bad.l: New test.
-	* testsuite/gas/arm/mve-vmladav-bad.s: New test.
-	* testsuite/gas/arm/mve-vmlav-bad.d: New test.
-	* testsuite/gas/arm/mve-vmlav-bad.l: New test.
-	* testsuite/gas/arm/mve-vmlav-bad.s: New test.
-	* testsuite/gas/arm/mve-vmlsdav-bad.d: New test.
-	* testsuite/gas/arm/mve-vmlsdav-bad.l: New test.
-	* testsuite/gas/arm/mve-vmlsdav-bad.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_neon_abs_neg): Make it accept MVE variant.
-	(insns): Change vabs and vneg entries to accept MVE variants.
-	* testsuite/gas/arm/mve-vabsneg-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vabsneg-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vabsneg-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vabsneg-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vabsneg-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vabsneg-bad-2.s: New test.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (enum it_instruction_type): Rename to...
-	(enum pred_instruction_type): ... this. Include VPT types.
-	(it_insn_type): Rename to ...
-	(pred_insn_type): .. this.
-	(arm_it): Change comment.
-	(enum arm_reg_type): Add new value.
-	(reg_expected_msgs): New entry.
-	(asm_opcode): Add mayBeVecPred member.
-	(BAD_SYNTAX, BAD_NOT_VPT, BAD_OUT_VPT, BAD_VPT_COND, MVE_NOT_IT,
-	 MVE_NOT_VPT, MVE_BAD_PC, MVE_BAD_SP): New diagnostic MACROS.
-	(arm_vcond_hsh): New table for vector condition codes.
-	(now_it): Rename to ...
-	(now_pred): ... this.
-	(now_it_compatible): Rename to ...
-	(now_pred_compatible): ... this.
-	(in_it_block): Rename to ...
-	(in_pred_block): ... this.
-	(handle_it_state): Rename to ...
-	(handle_pred_state): ... this. And change it to accept VPT blocks.
-	(set_it_insn_type): Rename to ...
-	(set_pred_insn_type): ... this.
-	(set_it_insn_type_nonvoid): Rename to ...
-	(set_pred_insn_type_nonvoid): ... this.
-	(set_it_insn_type_last): Rename to ...
-	(set_pred_insn_type_last): ... this.
-	(record_feature_use): Moved.
-	(mark_feature_used): Likewise.
-	(parse_typed_reg_or_scalar): Add new case for REG_TYPE_MQ.
-	(emit_insn): Use renamed functions and variables.
-	(enum operand_parse_code): Add new operands.
-	(parse_operands): Handle new operands.
-	(do_scalar_fp16_v82_encode): Change predication detection.
-	(do_it): Use renamed functions and variables.
-	(do_t_add_sub): Likewise.
-	(do_t_arit3): Likewise.
-	(do_t_arit3c): Likewise.
-	(do_t_blx): Likewise.
-	(do_t_branch): Likewise.
-	(do_t_bkpt_hlt1): Likewise.
-	(do_t_branch23): Likewise.
-	(do_t_bx): Likewise.
-	(do_t_bxj): Likewise.
-	(do_t_cond): Likewise.
-	(do_t_csdb): Likewise.
-	(do_t_cps): Likewise.
-	(do_t_cpsi): Likewise.
-	(do_t_cbz): Likewise.
-	(do_t_it): Likewise.
-	(do_mve_vpt): New function to handle VPT blocks.
-	(encode_thumb2_multi): Use renamed functions and variables.
-	(do_t_ldst): Use renamed functions and variables.
-	(do_t_mov_cmp): Likewise.
-	(do_t_mvn_tst): Likewise.
-	(do_t_mul): Likewise.
-	(do_t_nop): Likewise.
-	(do_t_neg): Likewise.
-	(do_t_rsb): Likewise.
-	(do_t_setend): Likewise.
-	(do_t_shift): Likewise.
-	(do_t_smc): Likewise.
-	(do_t_tb): Likewise.
-	(do_t_udf): Likewise.
-	(do_t_loloop): Likewise.
-	(do_neon_cvt_1): Likewise.
-	(do_vfp_nsyn_cvt_fpv8): Likewise.
-	(do_vsel): Likewise.
-	(do_vmaxnm): Likewise.
-	(do_vrint_1): Likewise.
-	(do_crypto_2op_1): Likewise.
-	(do_crypto_3op_1): Likewise.
-	(do_crc32_1): Likewise.
-	(it_fsm_pre_encode): Likewise.
-	(it_fsm_post_encode): Likewise.
-	(force_automatic_it_block_close): Likewise.
-	(check_it_blocks_finished): Likewise.
-	(check_pred_blocks_finished): Likewise.
-	(arm_cleanup): Likewise.
-	(now_it_add_mask): Rename to ...
-	(now_pred_add_mask): ... this. And use new variables and functions.
-	(NEON_ENC_TAB): Add entries for vabdl, vaddl and vsubl.
-	(N_I_MVE, N_F_MVE, N_SU_MVE): New MACROs.
-	(neon_check_type): Generalize error message.
-	(mve_encode_qqr): New MVE generic encoding function.
-	(neon_dyadic_misc): Change to accept MVE variants.
-	(do_neon_dyadic_if_su): Likewise.
-	(do_neon_addsub_if_i): Likewise.
-	(do_neon_dyadic_long): Likewise.
-	(vfp_or_neon_is_neon): Add extra checks.
-	(check_simd_pred_availability): Helper function to check SIMD
-	instruction availability with respect to predication.
-	(enum opcode_tag): New suffix value.
-	(opcode_lookup): Change to handle VPT blocks.
-	(new_automatic_it_block): Rename to ...
-	(close_automatic_it_block): ...this.
-	(TxCE, TxC3, TxC3w, TUE, TUEc, TUF, CE, C3, ToC, ToU,
-	 toC, toU, CL, cCE, cCL, C3E, xCM_, UE, UF, NUF, nUF,
-	 NCE_tag, NCE, NCEF, nCE_tag, nCE, nCEF): Add default value for new
-	field.
-	(mCEF, mnCEF, mnCE, MNUF, mnUF, mToC, MNCE, MNCEF): New MACROs.
-	(insns): Redefine vadd, vsub, cabd, vabdl, vaddl, vsubl to accept MVE
-	variants. Add entries for vscclrm, and vpst.
-	(md_begin): Add arm_vcond_hsh initialization.
-	* config/tc-arm.h (enum it_state): Rename to...
-	(enum pred_state): ...this.
-	(struct current_it): Rename to...
-	(struct current_pred): ...this.
-	(enum pred_type): New enum.
-	(struct arm_segment_info_type): Use current_pred.
-	* testsuite/gas/arm/armv8_3-a-fp-bad.l: Update error message.
-	* testsuite/gas/arm/armv8_3-a-simd-bad.l: Update error message.
-	* testsuite/gas/arm/dotprod-illegal.l: Update error message.
-	* testsuite/gas/arm/mve-vaddsubabd-bad-1.d: New test.
-	* testsuite/gas/arm/mve-vaddsubabd-bad-1.l: New test.
-	* testsuite/gas/arm/mve-vaddsubabd-bad-1.s: New test.
-	* testsuite/gas/arm/mve-vaddsubabd-bad-2.d: New test.
-	* testsuite/gas/arm/mve-vaddsubabd-bad-2.l: New test.
-	* testsuite/gas/arm/mve-vaddsubabd-bad-2.s: New test.
-	* testsuite/gas/arm/mve-vpst-bad.d: New test.
-	* testsuite/gas/arm/mve-vpst-bad.l: New test.
-	* testsuite/gas/arm/mve-vpst-bad.s: New test.
-	* testsuite/gas/arm/neon-ldst-es-bad.l: Updated error message.
-
-2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (mve_ext, mve_fp_ext): New features.
-	(armv8_1m_main_ext_table): Add new extensions.
-	(aeabi_set_public_attributes): Translate new features to new build attributes.
-	(arm_convert_symbolic_attribute): Add Tag_MVE_arch.
-	* doc/c-arm.texi: Document new extensions and new build attribute.
-
-2019-05-15  John Darrington <john@darrington.wattle.id.au>
-
-	* config/tc-s12z.c (register_prefix): New variable.  (md_show_usage,
-	md_parse_option):  parse the new option.
-	(lex_reg_name): Scan the prefix if one is set.
-	* doc/c-s12z.texi (S12Z-Opts): Document the new option.
-	* testsuite/gas/s12z/reg-prefix.d: New file.
-	* testsuite/gas/s12z/reg-prefix.s: New file.
-	* testsuite/gas/s12z/s12z.exp: Add them.
-
-2019-05-14  John Darrington <john@darrington.wattle.id.au>
-
-	* doc/as.texi (Machine Dependencies): Fix misaligned menu entry.
-
-2019-05-15  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-csky.c (md_convert_frag): Initialise trailing
-	padding for COND_JUMP_PIC.
-
-2019-05-15  Alan Modra  <amodra@gmail.com>
-
-	* dwarf2dbg.c: Whitespace fixes.
-	(get_filenum): Don't strdup "file".  Adjust error message.
-	(dwarf2_directive_filename): Use an unsigned type for "num".
-	Catch truncation of file number and overflow of get_filenum
-	XRESIZEVEC multiplication.  Delete dead code.
-
-2019-05-15  Alan Modra  <amodra@gmail.com>
-
-	PR 24538
-	* config/tc-tic54x.c (tic54x_start_line_hook): Do skip end of line
-	chars in setting endp.
-
-2019-05-14  Nick Clifton  <nickc@redhat.com>
-
-	PR 24538
-	* config/tc-i386-intel.c (i386_intel_simplify_register): Reject
-	illegal register numbers.
-
-2019-05-10  Nick Clifton  <nickc@redhat.com>
-
-	PR 24538
-	* macro.c (get_any_string): Increase size of buffer used to hold
-	decimal value of expression result.
-	* dw2gencfi.c (get_debugseg_name): Handle an empty name.
-	* dwarf2dbg.c (get_filenum): Catch integer wraparound when
-	extending allocate file array.
-	(dwarf2_directive_filename): Add extra checks of the computed file
-	number.
-	* config/tc-arm.c (arm_tc_equal_in_insn): Insert copy of name into
-	warning hash table.
-	(s_arm_eabi_attribute): Check for obj_elf_vendor_attribute
-	returning -1.
-	* config/tc-i386.c (i386_output_nops): Catch an attempt to
-	generate nops of negative lengths.
-	* as.h (MAX_LITTLENUMS): Move definition to here from...
-	* config/atof-ieee.c: ...here.
-	* config/tc-aarch64.c: ...here.
-	* config/tc-arc.c: ...here.
-	* config/tc-arm.c: ...here.
-	* config/tc-epiphany.c: ...here.
-	* config/tc-i386.c: ...here.
-	* config/tc-ia64.c: ...here.  (And correct the value).
-	* config/tc-m32c.c: ...here.
-	* config/tc-m32r.c: ...here.
-	* config/tc-metag.c: ...here.
-	* config/tc-microblaze.c: ...here.
-	* config/tc-nds32.c: ...here.
-	* config/tc-or1k.c: ...here.
-	* config/tc-score.c: ...here.
-	* config/tc-score7.c: ...here.
-	* config/tc-tic4x.c: ...here.
-	* config/tc-tilegx.c: ...here.
-	* config/tc-tilepro.c: ...here.
-	* config/tc-visium.c: ...here.
-	* config/tc-sh.c (md_assemble): Add check for an instruction with
-	no opcodes.
-	* config/tc-mips.c (mips_lookup_insn): Add check for very short
-	instruction name.
-	* config/tc-tic54x.c: Use unsigned chars to access is_end_of_line
-	array.
-	(tic54x_start_line_hook): Check for an empty line.
-	(next_line_shows_parallel): Do not walk off the end of the string.
-	(tic54x_macro_start): Check for too much macro nesting.
-	(tic54x_start_label): Add label_start parameter.  Use this
-	parameter to check the first character of the label.
-
-	* config/tc-tic54x.h (TC_START_LABEL_WITHOUT_COLON): Pass
-	line_start variable to tic54x_start_label.
-
-2019-05-10  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* config/tc-mips.c (macro) <M_ADD_I, M_SUB_I, M_DADD_I, M_DSUB_I>:
-	Add expansions for MIPS r6.
-	* testsuite/gas/mips/add.s: Enable tests for R6.
-	* testsuite/gas/mips/daddi.s: Annotate to test DADD for R6.
-	* testsuite/gas/mips/mipsr6@add.d: Likewise.
-	* gas/testsuite/gas/mips/mipsr6@dadd.d: New test.
-	* gas/testsuite/gas/mips/mips.exp: Run the new test.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* testsuite/gas/aarch64/sve2.d: Remove file format restriction.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* testsuite/gas/aarch64/illegal-sve2-aes.d: New test.
-	* testsuite/gas/aarch64/illegal-sve2-bitperm.d: New test.
-	* testsuite/gas/aarch64/illegal-sve2-sha3.d: Test new instructions.
-	* testsuite/gas/aarch64/illegal-sve2-sm4.d: Test new instructions.
-	* testsuite/gas/aarch64/illegal-sve2-sve1ext.d: Test new instructions.
-	* testsuite/gas/aarch64/illegal-sve2-sve1ext.l: Test new instructions.
-	* testsuite/gas/aarch64/illegal-sve2.d: Test new instructions.
-	* testsuite/gas/aarch64/illegal-sve2.l: Test new instructions.
-	* testsuite/gas/aarch64/illegal-sve2.s: Test new instructions.
-	* testsuite/gas/aarch64/sve1-extended-sve2.s: New test.
-	* testsuite/gas/aarch64/sve2.d: Test new instructions.
-	* testsuite/gas/aarch64/sve2.s: Test new instructions.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-aarch64.c (parse_operands): Handle new SVE_SHLIMM_UNPRED_22
-	operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-aarch64.c (parse_operands): Handle new SVE_Zm4_11_INDEX
-	operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-aarch64.c (parse_operands): Handle new SVE_SHRIMM_UNPRED_22
-	operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-aarch64.c (REG_ZR): Macro specifying zero register.
-	(parse_address_main): Account for new addressing mode [Zn.S, Xm].
-	(parse_operands): Handle new SVE_ADDR_ZX operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-aarch64.c (parse_operands): Handle new SVE_Zm3_11_INDEX
-	operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-aarch64.c (parse_operands): Handle new SVE_IMM_ROT3 operand.
-
-2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-aarch64.c: Add command line architecture feature flags
-	"sve2", "sve2-sm4", "sve2-aes", "sve2-sha3", "bitperm".
-	* doc/c-aarch64.texi: Document new architecture feature flags.
-
-2019-05-08  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/elf/dwarf2-1.s,
-	* testsuite/gas/elf/dwarf2-2.s,
-	* testsuite/gas/elf/dwarf2-5.s,
-	* testsuite/gas/elf/dwarf2-7.s,
-	* testsuite/gas/elf/dwarf2-8.s,
-	* testsuite/gas/elf/dwarf2-9.s,
-	* testsuite/gas/elf/dwarf2-10.s,
-	* testsuite/gas/elf/dwarf2-11.s,
-	* testsuite/gas/elf/dwarf2-12.s,
-	* testsuite/gas/elf/dwarf2-13.s,
-	* testsuite/gas/elf/dwarf2-14.s,
-	* testsuite/gas/elf/dwarf2-15.s,
-	* testsuite/gas/elf/dwarf2-16.s,
-	* testsuite/gas/elf/dwarf2-17.s,
-	* testsuite/gas/elf/dwarf2-18.s,
-	* testsuite/gas/elf/dwarf2-19.s: Double size of align and simulated
-	instructions.
-	* testsuite/gas/elf/dwarf2-1.d,
-	* testsuite/gas/elf/dwarf2-2.d,
-	* testsuite/gas/elf/dwarf2-5.d,
-	* testsuite/gas/elf/dwarf2-7.d,
-	* testsuite/gas/elf/dwarf2-8.d,
-	* testsuite/gas/elf/dwarf2-9.d,
-	* testsuite/gas/elf/dwarf2-10.d,
-	* testsuite/gas/elf/dwarf2-11.d,
-	* testsuite/gas/elf/dwarf2-12.d,
-	* testsuite/gas/elf/dwarf2-13.d,
-	* testsuite/gas/elf/dwarf2-14.d,
-	* testsuite/gas/elf/dwarf2-15.d,
-	* testsuite/gas/elf/dwarf2-16.d,
-	* testsuite/gas/elf/dwarf2-17.d,
-	* testsuite/gas/elf/dwarf2-18.d,
-	* testsuite/gas/elf/dwarf2-19.d: Use xfail rather than notarget.
-	Remove avr, pru, tile, xtensa from xfails.  Update expected output.
-	* testsuite/gas/elf/elf.exp: Sort targets.
-	(dump_opts): Pass {as -mno-relax} for riscv, {as -mno-link-relax}
-	for avr and pru, and {as --no-link-relax} for xtensa to dwarf tests.
-	* testsuite/gas/elf/section2.e-miwmmxt: Delete unused file.
-
-2019-05-08  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-xtensa.c (opt_linkrelax): New variable.
-	(md_parse_option): Set it here.
-	(md_begin): Copy opt_linkrelax to linkrelax.
-
-2019-05-07  Alexandre Oliva <aoliva@redhat.com>
-
-	* testsuite/gas/elf/dwarf2-18.d: Xfail mep-*.
-	* testsuite/gas/elf/dwarf2-19.d: Likewise.
-
-2019-05-07  Alan Modra  <amodra@gmail.com>
-
-	* symbols.c (use_complex_relocs_for): Formatting.  Factor out
-	X_add_symbol tests.
-
-2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>
-	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* config/tc-mips.c (mips_set_ase): Handle ASE_EVA_R6.
-	(macro) <M_LLWPE_AB, M_SCWPE_AB>: New cases.
-	(mips_after_parse_args): Translate EVA to EVA_R6.
-	* testsuite/gas/mips/ase-errors-1.s: Add new instructions.
-	* testsuite/gas/mips/eva.s: Likewise.
-	* testsuite/gas/mips/ase-errors-1.l: Check errors for
-	 new instructions.
-	* testsuite/gas/mips/mipsr6@eva.d: Check new test cases.
-
-2019-05-06  Alan Modra  <amodra@gmail.com>
-
-	* symbols.c (symbol_relc_make_sym): Do not access sym->sy_value
-	directly.
-
-2019-05-06  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (ppc_fix_adjustable): Exclude all GOT and PLT
-	relocs, and VLE sdarel relocs.
-	* testsuite/gas/ppc/power4.d: Adjust.
-
-2019-05-05  Alexandre Oliva <aoliva@redhat.com>
-
-	* dwarf2dbg.c (set_or_check_view): Skip heads when assigning
-	views of prior locs.
-	(dwarf2_gen_line_info_1): Skip heads.
-	(size_inc_line_addr, emit_inc_line_addr): Drop
-	DW_LNS_advance_pc for zero addr delta.
-	(dwarf2_finish): Assign views for heads of segments.
-	* testsuite/gas/elf/dwarf2-19.d: New.
-	* testsuite/gas/elf/dwarf2-19.s: New.
-	* testsuite/gas/elf/elf.exp: Test it.
-
-2019-05-04  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-m32c.c (insn_size): Delete static var.
-	(md_begin): Don't set it.
-	(m32c_md_end): Delete.
-	(md_assemble): Add insn_size auto var.
-	* config/tc-m32c.h (md_end): Don't define.
-	(m32c_md_end): Delete.
-	(NOP_OPCODE, HANDLE_ALIGN, MAX_MEM_FOR_RS_ALIGN_CODE): Define.
-	* testsuite/gas/all/align.d: Remove m32c from notarget list.
-	* testsuite/gas/all/incbin.d: Likewise.
-	* testsuite/gas/elf/dwarf2-11.d: Likewise.
-	* testsuite/gas/macros/semi.d: Likewise.
-	* testsuite/gas/all/gas.exp (do_comment): Similarly.
-
-2019-05-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24485
-	* config/tc-i386.c (process_suffix): Issue a warning to IRET
-	without a suffix for .code16gcc.
-	* testsuite/gas/i386/jump16.s: Add tests for iretX.
-	* testsuite/gas/i386/jump16.d: Updated.
-	* testsuite/gas/i386/jump16.e: New file.
-
-2019-05-01  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-aarch64.c (parse_operands): Add case for
-	AARCH64_OPND_TME_UIMM16.
-	(aarch64_features): Add "tme".
-	* doc/c-aarch64.texi: Document the same.
-	* testsuite/gas/aarch64/tme-invalid.d: New test.
-	* testsuite/gas/aarch64/tme-invalid.l: New test.
-	* testsuite/gas/aarch64/tme-invalid.s: New test.
-	* testsuite/gas/aarch64/tme.d: New test.
-	* testsuite/gas/aarch64/tme.s: New test.
-
-2019-04-29  John Darrington <john@darrington.wattle.id.au>
-
-	* testsuite/gas/s12z/truncated.d: New file.
-	* testsuite/gas/s12z/truncated.s: New file.
-	* testsuite/gas/s12z/s12z.exp: Add new test.
-
-2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>
-	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* config/tc-mips.c (macro) <M_LLWP_AB, M_LLDP_AB, M_SCWP_AB,
-	M_SCDP_AB>: New cases and expansions for paired instructions.
-	* testsuite/gas/mips/llpscp-32.s: New test source.
-	* testsuite/gas/mips/llpscp-64.s: Likewise.
-	* testsuite/gas/mips/llpscp-32.d: New test.
-	* testsuite/gas/mips/llpscp-64.d: Likewise.
-	* testsuite/gas/mips/mips.exp: Run the new tests.
-	* testsuite/gas/mips/r6.s: Add new instructions to test source.
-	* testsuite/gas/mips/r6-64.s: Likewise.
-	* testsuite/gas/mips/r6-64-n32.d: Check new instructions.
-	* testsuite/gas/mips/r6-64-n64.d: Likewise.
-	* testsuite/gas/mips/r6-n32.d: Likewise.
-	* testsuite/gas/mips/r6-n64.d: Likwwise.
-	* testsuite/gas/mips/r6.d: Likewise.
-
-2019-04-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24485
-	* config/tc-i386.c (process_suffix): Don't add DATA_PREFIX_OPCODE
-	to IRET for .code16gcc.
-	* testsuite/gas/i386/jump16.s: Add IRET tests.
-	* testsuite/gas/i386/jump16.d: Updated.
-
-2019-04-25  Alexandre Oliva  <aoliva@redhat.com>
-	    Alan Modra  <amodra@gmail.com>
-
-	PR gas/24444
-	* frags.c (frag_gtoffset_p): New.
-	* frags.h (frag_gtoffset_p): Declare it.
-	* expr.c (resolve_expression): Use it.
-
-2019-04-24  Alan Modra  <amodra@gmail.com>
-
-	PR 24444
-	* symbols.c (resolve_symbol_value): When handling symbols
-	marked as sy_flags.resolved, return correct value for the
-	case of expression symbols left as an O_symbol expression.
-	Merge O_symbol code handling undefined and common symbols with
-	code handling special cases of expression symbols.  Use
-	seg_left to test for undefined and common symbols.  Don't
-	leave an O_symbol expression when X_add_symbol resolves to
-	the absolute_section.  Init final_val later.
-	* testsuite/gas/mmix/basep-7.d: Adjust expected output.
-
-2019-04-24  John Darrington <john@darrington.wattle.id.au>
-
-	* testsuite/gas/s12z/bit-manip-invalid.s: Extend test for BSET
-	and BCLR instructions with an invalid mode.
-	* testsuite/gas/s12z/bit-manip-invalid.d: ditto.
-
-2019-04-19  Nick Clifton  <nickc@redhat.com>
-
-	PR 24464
-	* config/tc-rx.h (md_relax_frag): Pass the max_iterations variable
-	to the relaxation function.
-	* config/tc-rx.c (rx_relax_frag): Add new parameter - the maximum
-	number of iterations.  Make sure that our internal iteration limit
-	does not exceed this external iteration limit.
-
-2019-04-18  Matthew Fortune  <matthew.fortune@mips.com>
-
-	* config/tc-mips.c (match_non_zero_reg_operand): Update
-	warning message.
-	* testsuite/gas/mips/r6-branch-constraints.l: Likewise.
-
-2019-04-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* config/tc-msp430.c (msp430_make_init_symbols): Define
-	__crt0_run_{preinit,init,fini}_array symbols if
-	.{preinit,init,fini}_array sections exist.
-	* testsuite/gas/msp430/fini-array.d: New test.
-	* testsuite/gas/msp430/init-array.d: New test.
-	* testsuite/gas/msp430/preinit-array.d: New test.
-	* testsuite/gas/msp430/fini-array.s: New test source.
-	* testsuite/gas/msp430/init-array.s: New test source.
-	* testsuite/gas/msp430/preinit-array.s: New test source.
-	* testsuite/gas/msp430/msp430.exp: Add new tests to driver.
-
-2019-04-17  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* config/tc-msp430.c (msp430_make_init_symbols): Define __crt0_init_bss
-	symbol when .lower.bss or .either.bss sections exist.
-	Define __crt0_movedata when .lower.data or .either.data sections exist.
-	* testsuite/gas/msp430/either-data-bss-sym.d: New test.
-	* testsuite/gas/msp430/low-data-bss-sym.d: New test.
-	* testsuite/gas/msp430/either-data-bss-sym.s: New test source.
-	* testsuite/gas/msp430/low-data-bss-sym.s: New test source.
-	* testsuite/gas/msp430/msp430.exp: Run new tests.
-	Enable large code model when running -mdata-region={upper,either}
-	tests.
-
-2019-04-17  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* config/tc-msp430.c (options): New OPTION_UNKNOWN_INTR_NOPS,
-	OPTION_NO_UNKNOWN_INTR_NOPS and do_unknown_interrupt_nops.
-	(md_parse_option): Handle OPTION_UNKNOWN_INTR_NOPS and
-	OPTION_NO_UNKNOWN_INTR_NOPS by setting do_unknown_interrupt_nops
-	accordingly.
-	(md_show_usage): Likewise.
-	(md_shortopts): Add "mu" for OPTION_UNKNOWN_INTR_NOPS and
-	"mU" for OPTION_NO_UNKNOWN_INTR_NOPS.
-	(md_longopts): Likewise.
-	(warn_eint_nop): Update comment.
-	(warn_unsure_interrupt): Don't warn if prev_insn_is_nop or
-	prev_insn_is_dint or we are assembling for 430 ISA.
-	(msp430_operands): Only call warn_unsure_interrupt if
-	do_unknown_interrupt_nops == TRUE.
-	* testsuite/gas/msp430/nop-unknown-intr.s: New test source file.
-	* testsuite/gas/msp430/nop-unknown-intr-430.d: New test.
-	* testsuite/gas/msp430/nop-unknown-intr-430x.d: New test.
-	* testsuite/gas/msp430/nop-unknown-intr-430x-ignore.d: New test.
-	* testsuite/gas/msp430/nop-unknown-intr-430.l: Warning output for new
-	test.
-	* testsuite/gas/msp430/nop-unknown-intr-430x.l: Likewise.
-	* testsuite/gas/msp430/msp430.exp: Add new tests to driver.
-
-2019-04-16  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/all/weakref1.d: xfail nds32.
-
-2019-04-16  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/all/gas.exp: Remove ns32k xfails.
-	* testsuite/gas/all/weakref1u.d: Don't run for ns32k-*-*.
-
-2019-04-16  Alan Modra  <amodra@gmail.com>
-
-	* write.h: Don't include bit_fix.h.
-	(struct fix): Rearrange some fields.  Delete fx_im_disp and
-	fx_bit_fixP.  Use bitfields for fx_size and fx_pcrel_adjust.
-	* write.c (fix_new_internal): Don't init fx_im_disp and fx_bit_fixP.
-	(fixup_segment): Don't exclude overflow checks on fx_bit_fixP.
-	(print_fixup): Don't print im_disp.
-	* config/tc-cris.c (md_apply_fix): Remove tests of fx_bit_fixP
-	and fx_im_disp.
-	* config/tc-dlx.c (md_apply_fix): Remove wrong debug code.  Set
-	fx_no_overflow when fx_bit_fixP.
-	* config/tc-dlx.h: Include bit_fix.h.
-	(TC_FIX_TYPE, tc_fix_data, TC_INIT_FIX_DATA): Define.
-	* config/tc-ns32k.c (fix_new_ns32k, fix_new_ns32k_exp): Set
-	fx_no_overflow when bit_fixP.
-	* config/tc-ns32k.h (TC_FIX_TYPE): Add fx_bit_fixP and fx_im_disp.
-	(fix_im_disp, fix_bit_fixP): Adjust to suit.
-	(TC_INIT_FIX_DATA, TC_FIX_DATA_PRINT): Likewise.
-
-2019-04-16  Alan Modra  <amodra@gmail.com>
-
-	* write.h (struct fix <fx_where>): Make unsigned.
-	(fix_new, fix_at_start, fix_new_exp): Adjust prototypes.
-	* write.c (fix_new, fix_new_exp, fix_at_start): Make "where" and
-	"size" parameters unsigned long.
-	(fix_new_internal): Likewise.  Adjust error format string to suit.
-	* config/tc-mips.c (md_convert_frag): Remove cast of fx_where.
-	* config/tc-sparc.c (md_apply_fix): Likewise.
-	* config/tc-score.c (s3_convert_frag): Adjust for unsigned fx_where.
-	* config/tc-score7.c (s7_convert_frag): Likewise.
-
-2019-04-16  Alan Modra  <amodra@gmail.com>
-
-	* frags.h (struct frag <fr_fix>): Use unsigned type.
-	* frags.c (frag_new): Assert that current size exceeds
-	old_frags_var_max_size.
-	* ehopt.c (get_cie_info): Adjust for unsigned fr_fix.
-	* listing.c (calc_hex): Likewise.
-	* write.c (cvt_frag_to_fill, write_relocs): Likewise.
-	* config/tc-arc.c (md_convert_frag): Likewise.
-	* config/tc-avr.c (avr_patch_gccisr_frag): Likewise.
-	* config/tc-mips.c (md_convert_frag): Likewise.
-	* config/tc-rl78.c (md_convert_frag): Likewise.
-	* config/tc-rx.c (md_convert_frag): Likewise.
-	* config/tc-sparc.c (md_apply_fix): Likewise.
-	* config/tc-xtensa.c (next_instrs_are_b_retw): Likewise.
-	(unrelaxed_frag_min_insn_count, unrelaxed_frag_has_b_j): Likewise.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* config/tc-arm.c (parse_sys_vldr_vstr): New function.
-	(OP_VLDR): New enum operand_parse_code enumerator.
-	(parse_operands): Add logic for OP_VLDR.
-	(do_t_vldr_vstr_sysreg): New function.
-	(do_vldr_vstr): Likewise.
-	(insns): Guard VLDR and VSTR by arm_ext_v4t for Thumb mode.
-	(md_apply_fix): Add bound check for VLDR and VSTR co-processor offset.
-	Add masking logic for BFD_RELOC_ARM_T32_VLDR_VSTR_OFF_IMM relocation.
-	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.s: Add examples of bad
-	uses of VLDR and VSTR.
-	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.l: Add error messages for
-	above bad uses.
-	* testsuite/gas/arm/archv8m_1m-cmse-main.s: Add examples of VLDR and
-	VSTR valid uses.
-	* testsuite/gas/arm/archv8m_1m-cmse-main.d: Add disassembly for the
-	above examples.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* config/tc-arm.c (arm_typed_reg_parse): Fix typo in comment.
-	(enum reg_list_els): New REGLIST_VFP_S_VPR and REGLIST_VFP_D_VPR
-	enumerators.
-	(parse_vfp_reg_list): Add new partial_match parameter.  Set
-	*partial_match to TRUE if at least one element in the register list has
-	matched.  Add support for REGLIST_VFP_S_VPR and REGLIST_VFP_D_VPR
-	register lists which expect VPR as last element in the list.
-	(s_arm_unwind_save_vfp_armv6): Adapt call to parse_vfp_reg_list to new
-	prototype.
-	(s_arm_unwind_save_vfp): Likewise.
-	(enum operand_parse_code): New OP_VRSDVLST enumerator.
-	(parse_operands): Adapt call to parse_vfp_reg_list to new prototype.
-	Handle new OP_VRSDVLST case.
-	(do_t_vscclrm): New function.
-	(insns): New entry for VSCCLRM instruction.
-	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.s: Add invalid VSCCLRM
-	instructions.
-	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.l: Add error expectations
-	for above instructions.
-	* testsuite/gas/arm/archv8m_1m-cmse-main.s: Add tests for VSCCLRM
-	instruction.
-	* testsuite/gas/arm/archv8m_1m-cmse-main.d: Add expected disassembly
-	for above instructions.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* config/tc-arm.c (enum reg_list_els): Define earlier and add
-	REGLIST_RN and REGLIST_CLRM enumerators.
-	(parse_reg_list): Add etype parameter to distinguish between regular
-	core register list and CLRM register list.  Add logic to
-	recognize CLRM register list.
-	(parse_vfp_reg_list): Assert type is not for core register list.
-	(s_arm_unwind_save_core): Update call to parse_reg_list to new
-	prototype.
-	(enum operand_parse_code): Declare OP_CLRMLST enumerator.
-	(parse_operands): Update call to parse_reg_list to new prototype.  Add
-	logic for OP_CLRMLST.
-	(encode_thumb2_ldmstm): Rename into ...
-	(encode_thumb2_multi): This.  Add do_io parameter.  Add logic to
-	encode CLRM and guard LDM/STM only code by do_io.
-	(do_t_ldmstm): Adapt to use encode_thumb2_multi.
-	(do_t_push_pop): Likewise.
-	(do_t_clrm): New function.
-	(insns): Define CLRM.
-	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.d: New file.
-	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.l: Likewise.
-	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.s: Likewise.
-	* testsuite/gas/arm/archv8m_1m-cmse-main.d: Likewise.
-	* testsuite/gas/arm/archv8m_1m-cmse-main.s: Likewise.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-	    Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (operand_parse_code): Add OP_LR and OP_oLR
-	for the LR operand and optional LR operand.
-	(parse_operands): Add switch cases for OP_LR and OP_oLR for
-	both type checking and value checking.
-	(encode_thumb32_addr_mode): New entries for DLS, WLS and LE.
-	(v8_1_loop_reloc): New helper function for handling labels
-	for the low overhead loop instructions.
-	(do_t_loloop): New function to encode DLS, WLS and LE.
-	(insns): New entries for WLS, DLS and LE.
-	(md_pcrel_from_section): New switch case
-	for BFD_RELOC_ARM_THUMB_LOOP12.
-	(md_appdy_fix): Likewise.
-	(tc_gen_reloc): Likewise.
-	* testsuite/gas/arm/armv8_1-m-tloop.s: New.
-	* testsuite/gas/arm/armv8_1-m-tloop.d: New.
-	* testsuite/gas/arm/armv8_1-m-tloop-bad.s: New.
-	* testsuite/gas/arm/armv8_1-m-tloop-bad.d: New.
-	* testsuite/gas/arm/armv8_1-m-tloop-bad.l: New.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-	    Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (T16_32_TAB): New entriy for bfcsel.
-	(do_t_v8_1_branch): New switch case for bfcsel.
-	(toU): Define.
-	(insns): New instruction for bfcsel.
-	(md_pcrel_from_section): New switch case
-	for BFD_RELOC_THUMB_PCREL_BFCSEL.
-	(md_appdy_fix): Likewise
-	(tc_gen_reloc): Likewise.
-	* testsuite/gas/arm/armv8_1-m-bfcsel.d: New.
-	* testsuite/gas/arm/armv8_1-m-bfcsel.s: New.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (md_pcrel_from_section): New switch case for
-	BFD_RELOC_ARM_THUMB_BF13.
-	(md_appdy_fix): Likewise.
-	(tc_gen_reloc): Likewise.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-	    Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (T16_32_TAB): New entrie for bfl.
-	(do_t_v8_1_branch): New switch case for bfl.
-	(insns): New instruction for bfl.
-	* testsuite/gas/arm/armv8_1-m-bfl.d: New.
-	* testsuite/gas/arm/armv8_1-m-bfl.s: New.
-	* testsuite/gas/arm/armv8_1-m-bfl-bad.s: New.
-	* testsuite/gas/arm/armv8_1-m-bfl-bad.d: New.
-	* testsuite/gas/arm/armv8_1-m-bfl-bad.l: New.
-	* testsuite/gas/arm/armv8_1-m-bfl-rel.d: New.
-	* testsuite/gas/arm/armv8_1-m-bfl-rel.s: New.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (md_pcrel_from_section): New switch case for
-	BFD_RELOC_ARM_THUMB_BF19.
-	(md_appdy_fix): Likewise.
-	(tc_gen_reloc): Likewise.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (T16_32_TAB): New entries for bfx and bflx.
-	(do_t_v8_1_branch): New switch cases for bfx and bflx.
-	(insns): New instruction for bfx and bflx.
-	* testsuite/gas/arm/armv8_1-m-bf-exchange.d: New.
-	* testsuite/gas/arm/armv8_1-m-bf-exchange.s: New.
-	* testsuite/gas/arm/armv8_1-m-bf-exchange-bad.s: New
-	* testsuite/gas/arm/armv8_1-m-bf-exchange-bad.l: New
-	* testsuite/gas/arm/armv8_1-m-bf-exchange-bad.d: New
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-	    Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (T16_32_TAB): New entries for bf.
-	(do_t_branch_future): New.
-	(insns): New instruction for bf.
-	* testsuite/gas/arm/armv8_1-m-bf.d: New.
-	* testsuite/gas/arm/armv8_1-m-bf.s: New.
-	* testsuite/gas/arm/armv8_1-m-bf-bad.s: New.
-	* testsuite/gas/arm/armv8_1-m-bf-bad.l: New.
-	* testsuite/gas/arm/armv8_1-m-bf-bad.d: New.
-	* testsuite/gas/arm/armv8_1-m-bf-rel.d: New.
-	* testsuite/gas/arm/armv8_1-m-bf-rel.s: New.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (md_pcrel_from_section): New switch case for
-	BFD_RELOC_ARM_THUMB_BF17.
-	(md_appdy_fix): Likewise.
-	(tc_gen_reloc): Likewise.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (ARM_IT_MAX_RELOCS): New macro.
-	(arm_it): Member reloc renamed relocs and updated to an array.
-	Rest: Replace all occurrences of reloc to relocs[0].
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-arm.c (md_pcrel_from_section): New switch case
-	for BFD_RELOC_THUMB_PCREL_BRANCH5.
-	(v8_1_branch_value_check): New function to check branch
-	offsets.
-	(md_appdy_fix): New switch case for
-	BFD_RELOC_THUMB_PCREL_BRANCH5.
-	(tc_gen_reloc): Likewise.
-
-2019-04-15  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (do_neon_movhf): Remove fp-armv8 check.
-	(armv8_1m_main_ext_table): New extension table.
-	(arm_archs): Use the new extension table.
-	* doc/c-arm.texi: Add missing arch and document new extensions.
-	* testsuite/gas/arm/armv8.1-m.main-fp.d: New.
-	* testsuite/gas/arm/armv8.1-m.main-fp-dp.d: New.
-	* testsuite/gas/arm/armv8.1-m.main-hp.d: New.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* config/tc-arm.c (cpu_arch_ver): Add entry for Armv8.1-M Mainline
-	Tag_CPU_arch build attribute value.  Reindent.
-	(get_aeabi_cpu_arch_from_fset): Update assert.
-	(aeabi_set_public_attributes): Update assert for Tag_DIV_use logic.
-	* testsuite/gas/arm/attr-march-armv8_1-m.main.d: New test.
-
-2019-04-09  Matthew Fortune  <matthew.fortune@mips.com>
-
-	* config/tc-mips.c (mips_cpu_info_table): Add i6500.  Update
-	default ASEs for i6400.
-	* doc/c-mips.texi (-march): Document i6500.
-	* testsuite/gas/mips/elf_mach_i6400.d: New test.
-	* testsuite/gas/mips/elf_mach_i6500.d: New test.
-	* testsuite/gas/mips/mips.exp: Run the new tests.
-
-2019-04-09  Matthew Fortune  <matthew.fortune@mips.com>
-
-	* config/tc-mips.c (mips_set_options) <init_ase>: New field.
-	(file_mips_opts, mips_opts) <init_ase>: Initialize new field.
-	(file_mips_check_options): Propagate initial ASE settings.
-	(mips_after_parse_args, parse_code_option): Track the initial
-	ASE settings for a CPU.
-	(s_mipsset): Restore the initial ASE settings when reverting
-	to the default arch.
-	* testsuite/gas/mips/elf_mach_p6600.d: New test.
-	* testsuite/gas/mips/mips.exp: Run the new test.
-
-2019-04-12  John Darrington <john@darrington.wattle.id.au>
-
-	config/tc-s12z.h: Remove definition of macro TC_M68K
-
-2019-04-01  John Darrington <john@darrington.wattle.id.au>
-
-	config/tc-s12z.c: Use bfd_boolean where appropriate.
-
-2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* testsuite/gas/xtensa/loop-relax-2.d: New test definition.
-	* testsuite/gas/xtensa/loop-relax.d: New test definition.
-	* testsuite/gas/xtensa/loop-relax.s: New test source.
-	* testsuite/gas/xtensa/text-section-literals-1a.d: New test
-	definition.
-	* testsuite/gas/xtensa/text-section-literals-2.d: New test
-	definition.
-	* testsuite/gas/xtensa/text-section-literals-2.s: New test
-	source.
-	* testsuite/gas/xtensa/text-section-literals-2a.d: New test
-	definition.
-	* testsuite/gas/xtensa/text-section-literals-3.d: New test
-	definition.
-	* testsuite/gas/xtensa/text-section-literals-3.s: New test
-	source.
-	* testsuite/gas/xtensa/text-section-literals-4.d: New test
-	definition.
-	* testsuite/gas/xtensa/text-section-literals-4.s: New test
-	source.
-	* testsuite/gas/xtensa/text-section-literals-4a.d: New test
-	definition.
-
-2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* testsuite/gas/xtensa/all.exp: Remove all expect-based
-	tests and all explicit run_dump_test / run_list_test
-	invocations. Add run_dump_tests for all .d files in the
-	test subdirectory.
-	* testsuite/gas/xtensa/entry_align.d: New test definition.
-	* testsuite/gas/xtensa/entry_align.l: New test output.
-	* testsuite/gas/xtensa/entry_misalign.d: New test definition.
-	* testsuite/gas/xtensa/entry_misalign2.d: New test definition.
-	* testsuite/gas/xtensa/j_too_far.d: New test definition.
-	* testsuite/gas/xtensa/j_too_far.l: New test output.
-	* testsuite/gas/xtensa/loop_align.d: New test definition.
-	* testsuite/gas/xtensa/loop_misalign.d: New test definition.
-	* testsuite/gas/xtensa/trampoline-2.d: New test definition.
-	* testsuite/gas/xtensa/trampoline-2.l: Remove empty output.
-	* testsuite/gas/xtensa/xtensa-err.exp: Use positive logic.
-
-2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* config/tc-xtensa.c (xtensa_literal_pseudo): Drop code that has
-	no effect.
-	(get_literal_pool_location): Only search for the literal pool
-	when auto litpools is used, otherwise take one recorded in the
-	tc_segment_info_data.
-	(xtensa_assign_litpool_addresses): New function.
-	(xtensa_move_literals): Don't duplicate 'literal pool location
-	required...' error message. Call xtensa_assign_litpool_addresses.
-
-2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* config/tc-xtensa.c (xtensa_is_init_fini): Add declaration.
-	(xtensa_mark_literal_pool_location): Don't add fill frag to literal
-	section that records literal pool location.
-	(md_begin): Call xtensa_mark_literal_pool_location when text
-	section literals or auto litpools are used.
-	(xtensa_elf_section_change_hook): Call
-	xtensa_mark_literal_pool_location when text section literals or
-	auto litpools are used, there's no literal pool location defined
-	for the current section and it's not .init or .fini.
-	* testsuite/gas/xtensa/auto-litpools-first1.d: Fix up addresses.
-	* testsuite/gas/xtensa/auto-litpools-first2.d: Likewise.
-	* testsuite/gas/xtensa/auto-litpools.d: Likewise.
-
-2019-04-11  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-aarch64.c (process_omitted_operand): Add case for
-	AARCH64_OPND_Rt_SP.
-	(parse_operands): Likewise.
-	* testsuite/gas/aarch64/armv8_5-a-memtag.d: Update tests.
-	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
-
-2019-04-11  Sudakshina Das  <sudi.das@arm.com>
-
-	* testsuite/gas/aarch64/armv8_5-a-memtag.d: New tests for ldgm and stgm.
-	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
-
-2019-04-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* config/tc-i386.c (need_plt32_p) [TE_SOLARIS]: Return FALSE.
-	* testsuite/gas/i386/solaris/solaris.exp: New driver.
-	* testsuite/gas/i386/solaris/reloc64.d,
-	testsuite/gas/i386/solaris/x86-64-jump.d,
-	testsuite/gas/i386/solaris/x86-64-mpx-branch-1.d,
-	testsuite/gas/i386/solaris/x86-64-mpx-branch-2.d,
-	testsuite/gas/i386/solaris/x86-64-nop-3.d,
-	testsuite/gas/i386/solaris/x86-64-nop-4.d,
-	testsuite/gas/i386/solaris/x86-64-nop-5.d,
-	testsuite/gas/i386/solaris/x86-64-relax-2.d,
-	testsuite/gas/i386/solaris/x86-64-relax-3.d: New tests.
-	* testsuite/gas/i386/reloc64.d,
-	testsuite/gas/i386/x86-64-jump.d,
-	testsuite/gas/i386/x86-64-mpx-branch-1.d,
-	testsuite/gas/i386/x86-64-mpx-branch-2.d,
-	testsuite/gas/i386/x86-64-nop-3.d,
-	testsuite/gas/i386/x86-64-nop-4.d,
-	testsuite/gas/i386/x86-64-nop-5.d,
-	testsuite/gas/i386/x86-64-relax-2.d,
-	testsuite/gas/i386/x86-64-relax-3.d: Skip on *-*-solaris*.
-
-2019-04-10  Alan Modra  <amodra@gmail.com>
-
-	* config/te-cloudabi.h: New file.
-	* config/tc-aarch64.c (aarch64_after_parse_args): Use TE_CLOUDABI
-	rather than TARGET_OS to select cloudabi.
-	* config/tc-i386.h (ELF_TARGET_FORMAT64): Define for TE_CLOUDABI.
-	* configure.tgt (*-*-cloudabi*): Set em=cloudabi.
-
-2019-04-09  Robert Suchanek  <robert.suchanek@mips.com>
-
-	* testsuite/gas/mips/mips.exp: Run hwr-names test.
-	* testsuite/gas/mips/hwr-names.s: Add test cases for RDHWR with
-	the SEL field.
-	* testsuite/gas/mips/mipsr6@hwr-names.d: New file.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (output_insn): Support
-	GNU_PROPERTY_X86_ISA_1_AVX512_BF16.
-	* testsuite/gas/i386/property-2.s: Add AVX512_BF16 test.
-	* testsuite/gas/i386/property-2.d: Updated.
-	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* configure.tgt: Remove i386-*-kaos* and i386-*-chaos targets.
-	* testsuite/gas/i386/i386.exp: Remove *-*-caos* and "*-*-kaos*
-	check.
-
-2019-04-05  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/gas/i386/i386.exp: Run -mx86-used-note=yes tests.
-	* testsuite/gas/i386/property-2.d: New file.
-	* testsuite/gas/i386/property-2.s: Likewise.
-	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
-
-2019-04-05  Xuepeng Guo  <xuepeng.guo@intel.com>
-
-	* config/tc-i386.c (cpu_arch): Add .avx512_bf16.
-	(cpu_noarch): Add noavx512_bf16.
-	* doc/c-i386.texi: Document avx512_bf16.
-	* testsuite/gas/i386/avx512_bf16.d: New file.
-	* testsuite/gas/i386/avx512_bf16.s: Likewise.
-	* testsuite/gas/i386/avx512_bf16_vl-inval.l: Likewise.
-	* testsuite/gas/i386/avx512_bf16_vl-inval.s: Likewise.
-	* testsuite/gas/i386/avx512_bf16_vl.d: Likewise.
-	* testsuite/gas/i386/avx512_bf16_vl.s: Likewise.
-	* testsuite/gas/i386/x86-64-avx512_bf16.d: Likewise.
-	* testsuite/gas/i386/x86-64-avx512_bf16.s: Likewise.
-	* testsuite/gas/i386/x86-64-avx512_bf16_vl-inval.l: Likesie.
-	* testsuite/gas/i386/x86-64-avx512_bf16_vl-inval.s: Likewise.
-	* testsuite/gas/i386/x86-64-avx512_bf16_vl.d: Likewise.
-	* testsuite/gas/i386/x86-64-avx512_bf16_vl.s: Likewise.
-	* testsuite/gas/i386/i386.exp: Add BF16 related tests.
-
-2019-04-05  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/bc.s,
-	* testsuite/gas/ppc/bcat.d,
-	* testsuite/gas/ppc/bcaterr.d,
-	* testsuite/gas/ppc/bcaterr.l,
-	* testsuite/gas/ppc/bcy.d,
-	* testsuite/gas/ppc/bcyerr.d,
-	* testsuite/gas/ppc/bcyerr.l: New tests.
-	* testsuite/gas/ppc/ppc.exp: Run them.
-
-2019-04-05  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/476.d: Remove trailing spaces.
-	* testsuite/gas/ppc/a2.d: Likewise.
-	* testsuite/gas/ppc/booke.d: Likewise.
-	* testsuite/gas/ppc/booke_xcoff.d: Likewise.
-	* testsuite/gas/ppc/e500.d: Likewise.
-	* testsuite/gas/ppc/e500mc.d: Likewise.
-	* testsuite/gas/ppc/e6500.d: Likewise.
-	* testsuite/gas/ppc/htm.d: Likewise.
-	* testsuite/gas/ppc/power6.d: Likewise.
-	* testsuite/gas/ppc/power8.d: Likewise.
-	* testsuite/gas/ppc/power9.d: Likewise.
-	* testsuite/gas/ppc/vle.d: Likewise.
-
-2019-04-04  Peter Bergner  <bergner@linux.ibm.com>
-
-	PR gas/24349
-	* testsuite/gas/ppc/power8.s: (bdnztar, bdnztarl, bdztar, bdztarl,
-	btar, btarl, bdnztar-, bdnztarl-, bdnztar+, bdnztarl+, bdztar-,
-	bdztarl-, bdztar+, bdztarl+, bgetar, bnltar, bgetarl, bnltarl,
-	bletar, bngtar, bletarl, bngtarl, bnetar, bnetarl, bnstar, bnutar,
-	bnstarl, bnutarl, bgetar-, bnltar-, bgetarl-, bnltarl-, bletar-,
-	bngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-, bnstar-, bnutar-,
-	bnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+, bnltarl+, bletar+,
-	bngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+, bnstar+, bnutar+,
-	bnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl, beqtar,
-	beqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,
-	bgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,
-	buntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,
-	bsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,
-	bdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,
-	bdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,
-	bttarl+): Add tests of extended mnemonics.
-	* testsuite/gas/ppc/power8.d: Likewise.  Update previous bctar tests
-	to expect new extended mnemonics.
-	* testsuite/gas/ppc/a2.s: <bc, bc-, bc+, bcl, bcl-, bcl+>: Update test
-	to not use illegal BO value.  Use a more convenient BI value.
-	* testsuite/gas/ppc/a2.d: Update tests for new expect output.
-
-2019-04-03  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* config/tc-xtensa.c (convert_frag_immed): Drop
-	convert_frag_immed_finish_loop invocation.
-	(convert_frag_immed_finish_loop): Drop declaration and
-	definition.
-	* config/xtensa-relax.c (widen_spec_list): Replace loop
-	widening that uses addi/addmi with widening that uses l32r
-	and const16.
-
-2019-04-01  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* config/tc-arm.c (arm_ext_table): New struct type.
-	(arm_arch_option_table): Add new 'arm_ext_table' field.
-	(ARM_EXT,ARM_ADD,ARM_REMOVE, ALL_FP): New macros.
-	(armv5te_ext_table, armv7ve_ext_table, armv7a_ext_table,
-	armv7r_ext_table, armv7em_ext_table, armv8a_ext_table,
-	armv81a_ext_table, armv82a_ext_table, armv84a_ext_table,
-	armv85a_ext_table, armv8m_main_ext_table,
-	armv8r_ext_table): New architecture extension tables.
-	(ARM_ARCH_OPT): Add new default field.
-	(ARM_ARCH_OPT2): New macro.
-	(arm_archs): Extend some architectures with the new architecture
-	extension tables mentioned above.
-	(arm_extensions): Add DEPRECATED comment with instructions to
-	use new table.
-	(arm_parse_extension): Change to use new extension tables.
-	(arm_parse_cpu): Don't change existing behavior.
-	(arm_parse_arch): Change to use new extension tables.
-	* doc/c-arm.texi: Document new architecture extensions.
-	* testsuite/gas/arm/attr-mfpu-neon-fp16.d: Change test to use new
-	extension option rather than -mfpu and change expected behaviour to
-	sane outputs.
-	* testsuite/gas/arm/armv8-2-fp16-scalar-bad-ext.d: New.
-	* testsuite/gas/arm/armv8-2-fp16-scalar-ext.d: New.
-	* testsuite/gas/arm/armv8-2-fp16-scalar-thumb-ext.d: New.
-	* testsuite/gas/arm/armv8-2-fp16-simd-ext.d: New.
-	* testsuite/gas/arm/armv8-2-fp16-simd-thumb-ext.d: New.
-	* testsuite/gas/arm/armv8-2-fp16-simd-warning-ext.d: New.
-	* testsuite/gas/arm/armv8-2-fp16-simd-warning-thumb-ext.d: New.
-	* testsuite/gas/arm/armv8_2+rdma-ext.d: New.
-	* testsuite/gas/arm/armv8_2-a-fp16-thumb2-ext.d: New.
-	* testsuite/gas/arm/armv8_2-a-fp16_ext.d: New.
-	* testsuite/gas/arm/armv8_3-a-fp-bad-ext.d: New.
-	* testsuite/gas/arm/armv8_3-a-fp-ext.d: New.
-	* testsuite/gas/arm/armv8_3-a-fp16-ext.d: New.
-	* testsuite/gas/arm/armv8_3-a-simd-bad-ext.d: New.
-	* testsuite/gas/arm/armv8_4-a-fp16-ext.d: New.
-	* testsuite/gas/arm/armv8m.main+fp.d: New.
-	* testsuite/gas/arm/armv8m.main+fp.dp.d: New.
-	* testsuite/gas/arm/attr-ext-fpv5-d16.d: New.
-	* testsuite/gas/arm/attr-ext-fpv5.d: New.
-	* testsuite/gas/arm/attr-ext-idiv.d: New.
-	* testsuite/gas/arm/attr-ext-mp.d: New.
-	* testsuite/gas/arm/attr-ext-neon-fp16.d: New.
-	* testsuite/gas/arm/attr-ext-neon-vfpv3.d: New.
-	* testsuite/gas/arm/attr-ext-neon-vfpv4.d: New.
-	* testsuite/gas/arm/attr-ext-sec.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv3-d16-fp16.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv3-d16.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv3-fp16.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv3.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv3xd-fp.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv3xd.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv4-d16.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv4-sp-d16.d: New.
-	* testsuite/gas/arm/attr-ext-vfpv4.d: New.
-	* testsuite/gas/arm/dotprod-mandatory-ext.d: New.
-	* testsuite/gas/arm/fpv5-d16.s: New.
-	* testsuite/gas/arm/fpv5-sp-d16.s: New.
-
-2019-03-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24390
-	* testsuite/gas/ppc/476.d: Update mtfsb*.
-	* testsuite/gas/ppc/a2.d: Likewise.
-
-2019-03-21  Alan Modra  <amodra@gmail.com>
-
-	* emul.h (struct emulation): Delete strip_underscore.
-	* emul-target.h (emul_strip_underscore): Don't define.
-	(emul_struct_name): Update initialization.
-
-2019-03-21  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-d10v.c (md_apply_fix): Apply BFD_RELOC_8.
-	* config/tc-pdp11.c (md_apply_fix): Likewise.
-	* config/tc-d30v.c (md_apply_fix): Don't emit errors for BFD_RELOC_8,
-	BFD_RELOC_16, and BFD_RELOC_64.
-	* testsuite/gas/all/gas.exp: Move target exclusions for forward
-	test, but not cr16, to..
-	* testsuite/gas/all/forward.d: ..here, with explanation.  Remove
-	d10v, d30v, and pdp11 xfails.
-
-2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (optimize_encoding): Don't check AVX for
-	EVEX vector load/store optimization.  Check both operands for
-	ZMM register.  Update EVEX vector load/store opcode check.
-	Choose EVEX Disp8 over VEX Disp32.
-	* testsuite/gas/i386/optimize-1.d: Updated.
-	* testsuite/gas/i386/optimize-1a.d: Likewise.
-	* testsuite/gas/i386/optimize-2.d: Likewise.
-	* testsuite/gas/i386/optimize-4.d: Likewise.
-	* testsuite/gas/i386/optimize-5.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-2.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-2a.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-2b.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-3.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-5.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-6.d: Likewise.
-	* testsuite/gas/i386/optimize-1.s: Add ZMM register load
-	test.
-	* testsuite/gas/i386/x86-64-optimize-2.s: Likewise.
-
-2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24352
-	* config/tc-i386.c (optimize_encoding): Check only
-	cpu_arch_flags.bitfield.cpuavx512vl.
-	* testsuite/gas/i386/i386.exp: Run x86-64-optimize-2b.
-	* testsuite/gas/i386/x86-64-optimize-2.d: Revert the last
-	change.
-	* testsuite/gas/i386/x86-64-optimize-2b.d: New file.
-	* testsuite/gas/i386/x86-64-optimize-2b.s: Likewise.
-
-2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24359
-	* testsuite/gas/i386/i386.exp: Change optimize-6a, optimize-7,
-	x86-64-optimize-7a and x86-64-optimize-8 tests to run_list_test.
-	Remove optimize-6c and x86-64-optimize-7c tests.
-	* testsuite/gas/i386/noavx-3.l: Updated.
-	* testsuite/gas/i386/noavx-4.d: Likewise.
-	* testsuite/gas/i386/noavx-5.d: Likewise.
-	* testsuite/gas/i386/noavx-3.s: Add AVX512F tests.
-	* testsuite/gas/i386/noavx-4.s: Remove AVX512F tests.
-	* testsuite/gas/i386/nosse-5.s: Likewise.
-	* testsuite/gas/i386/optimize-6a.d: Removed.
-	* testsuite/gas/i386/optimize-6c.d: Likewise.
-	* testsuite/gas/i386/optimize-7.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-7a.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-7c.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-8.d: Likewise.
-	* testsuite/gas/i386/optimize-6a.l: New file.
-	* testsuite/gas/i386/optimize-6a.s: Likewise.
-	* testsuite/gas/i386/optimize-7.l: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-7a.l: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-7a.s: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-8.l: Likewise.
-
-2019-03-18  Alan Modra  <amodra@gmail.com>
-
-	* config/m68k-parse.y (yylex): Use temp_ilp and restore_ilp.
-	* as.c (macro_expr): Likewise.
-	* macro.c (buffer_and_nest): Likewise.
-	* read.c (temp_ilp): Remove FIXME.
-
-2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/gas/i386/att-regs.d: Pass -O0 to assembler.
-	* testsuite/gas/i386/avx512bw-intel.d: Likewise.
-	* testsuite/gas/i386/avx512bw.d: Likewise.
-	* testsuite/gas/i386/avx512f-intel.d: Likewise.
-	* testsuite/gas/i386/avx512f.d: Likewise.
-	* testsuite/gas/i386/disp32.d: Likewise.
-	* testsuite/gas/i386/intel-regs.d: Likewise.
-	* testsuite/gas/i386/pseudos.d: Likewise.
-	* testsuite/gas/i386/x86-64-disp32.d: Likewise.
-	* testsuite/gas/i386/x86-64-pseudos.d: Likewise.
-
-2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24348
-	* config/tc-i386.c (optimize_encoding): Encode 128-bit and
-	256-bit EVEX vector register load/store instructions as VEX
-	vector register load/store instructions for -O1.
-	* doc/c-i386.texi: Update -O1 documentation.
-	* testsuite/gas/i386/i386.exp: Run PR gas/24348 tests.
-	* testsuite/gas/i386/optimize-1.s: Add tests for EVEX vector
-	load/store instructions.
-	* testsuite/gas/i386/optimize-2.s: Likewise.
-	* testsuite/gas/i386/optimize-3.s: Likewise.
-	* testsuite/gas/i386/optimize-5.s: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-2.s: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-3.s: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-4.s: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-5.s: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-6.s: Likewise.
-	* testsuite/gas/i386/optimize-1.d: Updated.
-	* testsuite/gas/i386/optimize-2.d: Likewise.
-	* testsuite/gas/i386/optimize-3.d: Likewise.
-	* testsuite/gas/i386/optimize-4.d: Likewise.
-	* testsuite/gas/i386/optimize-5.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-2.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-3.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-4.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-5.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-6.d: Likewise.
-	* testsuite/gas/i386/optimize-7.d: New file.
-	* testsuite/gas/i386/optimize-7.s: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-8.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-8.s: Likewise.
-
-2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (optimize_encoding): Encode 256-bit/512-bit
-	VEX/EVEX vector register clearing instructions with 128-bit VEX
-	vector register clearing instructions at -O1.
-	* doc/c-i386.texi: Update -O1 and -O2 documentation.
-	* testsuite/gas/i386/i386.exp: Run optimize-1a and
-	x86-64-optimize-2a.
-	* testsuite/gas/i386/optimize-1a.d: New file.
-	* testsuite/gas/i386/x86-64-optimize-2a.d: Likewise.
-
-2019-03-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24353
-	* config/tc-i386.c: Include <limits.h> if it exists and try
-	including <sys/param.h> if we have it.
-	(INT_MAX): Define if not defined.
-	(md_parse_option): Set optimize to INT_MAX for -Os.
-	* testsuite/gas/i386/optimize-2.s: Add a test.
-	* testsuite/gas/i386/x86-64-optimize-3.s: Likewise.
-	* testsuite/gas/i386/optimize-2.d: Updated.
-	* testsuite/gas/i386/x86-64-optimize-3.d: Likewise.
-
-2019-03-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/24352
-	* config/tc-i386.c (optimize_encoding): Encode 512-bit EVEX
-	with 128-bit VEX encoding only when AVX is enabled and with
-	128-bit EVEX encoding only when AVX512VL is enabled.
-	* testsuite/gas/i386/i386.exp: Run PR gas/24352 tests.
-	* testsuite/gas/i386/optimize-6.s: New file.
-	* testsuite/gas/i386/optimize-6a.d: Likewise.
-	* testsuite/gas/i386/optimize-6b.d: Likewise.
-	* testsuite/gas/i386/optimize-6c.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-7.s: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-7a.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-7b.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-7c.d: Likewise.
-	* testsuite/gas/i386/x86-64-optimize-2.d: Updated.
-
-2019-03-15  Li Hao  <li.hao296@zte.com.cn>
-
-	PR 24308
-	* config/tc-i386.c (parse_insn): Check mnemp before using it to
-	determine if a suffix can be trimmed.
-
-2019-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* dwarf2dbg.c (out_set_addr): Align relocation within .debug_line.
-
-2019-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* dwarf2dbg.c (out_debug_line): Pad size of .debug_line section.
-
-2019-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* dwarf2dbg.c (out_debug_str): Use octets for .debug_string pointers.
-
-2019-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* dwarf2dbg.c (out_debug_line): Use octets for .debug_line prologue.
-
-2019-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* dwarf2dbg.c (out_debug_line): Use octets for dwarf2 headers.
-	(out_debug_aranges, out_debug_info): Likewise.
-
-2019-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* symbols.h (symbol_temp_new_now_octets): Declare.
-	(symbol_set_value_now_octets, symbol_octets_p): Declare.
-	* symbols.c (struct symbol_flags): New member sy_octets.
-	(symbol_temp_new_now_octets): New function.
-	(resolve_symbol_value): Return octets instead of bytes if
-	sy_octets is set.
-	(symbol_set_value_now_octets): New function.
-	(symbol_octets_p): New function.
-
-2019-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* dwarf2dbg.c (dwarf2_emit_insn): Fix calculation of line info offset.
-
-2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>
-
-	* testsuite/gas/s390/zarch-arch13.s: Adjust testcase to optable changes.
-	* testsuite/gas/s390/zarch-arch13.d: Likewise.
-
-2019-02-27  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* testsuite/gas/aarch64/dotproduct.d: Use multiple "as" lines.
-	* testsuite/gas/aarch64/dotproduct_armv8_4.d: Remove.
-	* testsuite/gas/aarch64/dotproduct_armv8_4.s: Remove.
-	* testsuite/gas/aarch64/illegal-dotproduct.d: Use multiple "as"
-	lines.
-	* testsuite/gas/aarch64/ldst-rcpc-armv8_2.d: Remove.
-	* testsuite/gas/aarch64/ldst-rcpc.d: Use multiple "as" lines.
+	* config/tc-arc.c (arc_select_cpu): Re-init the bfd if we change
+	the CPU.
+	* config/tc-arc.h: Add header if/defs.
+	* testsuite/gas/arc/pseudos.d: Improve matching pattern.
 
-2019-02-24  Alan Modra  <amodra@gmail.com>
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-	* config/tc-ppc.c (parse_tls_arg): Wrap in #ifdef OBJ_ELF.
-
-2019-02-24  Alan Modra  <amodra@gmail.com>
-
-	PR 24144
-	* config/obj-aout.c (obj_aout_frob_file_before_fix): Write to end
-	of section to ensure file contents cover aligned section size.
+	* testsuite/gas/wasm32/allinsn.d: Update expected output.
 
-2019-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
-	* config/tc-arm.c (arm_cpus): Add neoverse-n1.
-	* doc/c-arm.texi (-mcpu): Document neoverse-n1 value.
-
-2019-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
-
-	* config/tc-aarch64.c (aarch64_cpus): Add neoverse-e1.
-	* doc/c-aarch64.texi (-mcpu): Document neoverse-e1 value.
+	* config/tc-tic4x.c (tic4x_operands_match): Correct tic3x trap
+	insertion.
 
-2019-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+2020-01-10  Alan Modra  <amodra@gmail.com>
 
-	* config/tc-aarch64.c (aarch64_cpus): Add neoverse-n1.
-	* doc/c-aarch64.texi (-mcpu): Document neoverse-n1 value.
+	* testsuite/gas/elf/pr14891.s: Don't start directives in first column.
+	* testsuite/gas/elf/pr21661.d: Don't run on hpux.
 
-2019-02-19  Paul Hua  <paul.hua.gm@gmail.com>
-
-	* NEWS: Mention -m[no-]fix-loongson3-llsc.
-	* configure.ac: Add --enable-mips-fix-loongson3-llsc.
-	Define DEFAULT_MIPS_FIX_LOONGSON3_LLSC.
-	* config.in: Regenerated.
-	* configure: Likewise.
-	* config/tc-mips.c (sync_insn, mips_fix_loongson3_llsc):
-	New variables.
-	(options): New OPTION_FIX_LOONGSON3_LLSC,
-	OPTION_NO_FIX_LOONGSON3_LLSC.
-	(md_longopts): Add -m[no-]fix-loongson3-llsc.
-	(md_begin): Initialize sync insn.
-	(fix_loongson3_llsc): New.
-	(append_insn): Call fix_loongson3_llsc.
-	(md_parse_option): Handle OPTION_FIX_LOONGSON3_LLSC,
-	OPTION_NO_FIX_LOONGSON3_LLSC.
-	(md_show_usage): Display -m[no-]fix-loongson3-llsc.
-	* doc/c-mips.texi: Document -m[no-]fix-loongson3-llsc,
-	--enable-mips-fix-loongson3-llsc=[yes|no].
+2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
-2019-02-10  H.J. Lu  <hongjiu.lu@intel.com>
+	PR 25224
+	* config/tc-z80.c (emit_ld_m_rr): Use integer types when checking
+	opcode byte values.
+	(emit_ld_r_r): Likewise.
+	(emit_ld_rr_m): Likewise.
+	(emit_ld_rr_nn): Likewise.
 
-	PR gas/24165
-	* frags.c (frag_var_init): Pass max_chars to TC_FRAG_INIT as
-	max_bytes.
-	* config/tc-aarch64.h (TC_FRAG_INIT): Add and pass max_bytes to
-	aarch64_init_frag.
-	* /config/tc-arm.h (TC_FRAG_INIT): And and pass max_bytes to
-	arm_init_frag.
-	* config/tc-avr.h (TC_FRAG_INIT): And and ignore max_bytes.
-	* config/tc-ia64.h (TC_FRAG_INIT): Likewise.
-	* config/tc-mmix.h (TC_FRAG_INIT): Likewise.
-	* config/tc-nds32.h (TC_FRAG_INIT): Likewise.
-	* config/tc-ns32k.h (TC_FRAG_INIT): Likewise.
-	* config/tc-rl78.h (TC_FRAG_INIT): Likewise.
-	* config/tc-rx.h (TC_FRAG_INIT): Likewise.
-	* config/tc-score.h (TC_FRAG_INIT): Likewise.
-	* config/tc-tic54x.h (TC_FRAG_INIT): Likewise.
-	* config/tc-tic6x.h (TC_FRAG_INIT): Likewise.
-	* config/tc-xtensa.h (TC_FRAG_INIT): Likewise.
-	* config/tc-i386.h (MAX_MEM_FOR_RS_ALIGN_CODE): Set to
-	(alignment ? ((1 << alignment) - 1) : 1)
-	(i386_tc_frag_data): Add max_bytes.
-	(TC_FRAG_INIT): Add and track max_bytes.
-	(HANDLE_ALIGN): Replace MAX_MEM_FOR_RS_ALIGN_CODE with
-	fragP->tc_frag_data.max_bytes.
-	* doc/internals.texi: Update TC_FRAG_TYPE with max_bytes.
-
-2019-02-08  Jim Wilson  <jimw@sifive.com>
-
-	* config/tc-riscv.c (validate_riscv_insn) <'C'>: Add 'z' support.
-	(riscv_ip) <'C'>: Add 'z' support.
-
-2019-02-07  Tamar Christina  <tamar.christina@arm.com>
-
-	* config/tc-arm.c (insns): Redefine THUMB_VARIANT and ARM_VARIANT for
-	hlt to armv1.
-	* testsuite/gas/arm/armv8a-automatic-hlt.d: Update TAGs
-	* testsuite/gas/arm/hlt.d: New test.
-	* testsuite/gas/arm/hlt.s: New test.
-
-2019-02-07  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/gas/aarch64/undefined_advsimd_armv8_3.d: New test.
-	* testsuite/gas/aarch64/undefined_advsimd_armv8_3.s: New test.
-
-2019-02-07  Tamar Christina  <tamar.christina@arm.com>
-
-	PR binutils/23212
-	* testsuite/gas/aarch64/undefined_by_elem_sz_l.s: New test.
-	* testsuite/gas/aarch64/undefined_by_elem_sz_l.d: New test.
-
-2019-02-07  Eric Botcazou  <ebotcazou@adacore.com>
-
-	* config/tc-visium.c (md_assemble) <mode_cad>: Align instruction on
-	64-bit boundaries for the GR6.
-	* testsuite/gas/visium/allinsn_gr6.s: Tweak.
-	* testsuite/gas/visium/allinsn_gr6.d: Likewise.
-	* testsuite/gas/visium/bra-1.d: New test.
-	* testsuite/gas/visium/bra-1.s: Likewise.
-	* testsuite/gas/visium/visium.exp: Run bra-1 test.
-
-2019-01-31  John Darrington <john@darrington.wattle.id.au>
-
-	* config/tc-s12z.c (lex_imm): Add new argument exp_o.
-	(emit_reloc): New function.
-	(md_apply_fix): [BFD_RELOC_S12Z_OPR] Recognise that it
-	can be either 2 bytes or 3 bytes long.
-	* testsuite/gas/s12z/mov-imm-reloc.d: New file.
-	* testsuite/gas/s12z/mov-imm-reloc.s: New file.
-	* testsuite/gas/s12z/s12z.exp: Add them.
-
-2019-01-31  John Darrington <john@darrington.wattle.id.au>
-
-	* config/tc-s12z.c (md_apply_fix): Fix incorrect limits.
-	* testsuite/gas/s12z/pc-rel-bad.d: New file.
-	* testsuite/gas/s12z/pc-rel-bad.l: New file.
-	* testsuite/gas/s12z/pc-rel-bad.s: New file.
-	* testsuite/gas/s12z/pc-rel-good.d: New file.
-	* testsuite/gas/s12z/pc-rel-good.s: New file.
-	* testsuite/gas/s12z/s12z.exp: Add them.
-
-2019-01-31  John Darrington <john@darrington.wattle.id.au>
-
-	* config/tc-s12z.c (tfr): Emit warning if operands are the same.
-	* testsuite/gas/s12z/exg.d: New test case.
-	* testsuite/gas/s12z/exg.l: New file.
-
-2019-01-31  John Darrington <john@darrington.wattle.id.au>
-
-	* config/tc-s12z.c (lex_opr): Add a parameter to indicate whether
-	immediate mode operands should be permitted.
-	* testsuite/s12z/imm-dest.d: New file.
-	* testsuite/s12z/imm-dest.l: New file.
-	* testsuite/s12z/imm-dest.s: New file.
-	* testsuite/s12z/s12z.exp: Add them.
-
-2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>
-
-	* config/tc-s390.c (s390_parse_cpu): New entry for arch13.
-	* doc/c-s390.texi: Document arch13 march option.
-	* testsuite/gas/s390/s390.exp: Run the arch13 related tests.
-	* testsuite/gas/s390/zarch-arch13.d: New test.
-	* testsuite/gas/s390/zarch-arch13.s: New test.
-	* testsuite/gas/s390/zarch-z13.d: Expect the renamed mnemonics
-	also for z13.
-
-2019-01-31  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-alpha.c (md_apply_fix): Correct range checks for
-	BFD_RELOC_ALPHA_NOP, BFD_RELOC_ALPHA_LDA, BFD_RELOC_ALPHA_BSR.
-	* config/tc-arm.c (md_apply_fix): Use llabs rather than abs.
-	* config/tc-csky.c (get_macro_reg_vals): Pass s to csky_show_error.
-
-2019-01-28  Max Filippov  <jcmvbkbc@gmail.com>
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
 
-	* config/tc-xtensa.c (md_apply_fix): Mark fixups for constant
-	symbols as done in md_apply_fix.
-	* testsuite/gas/all/forward.d: Don't XFAIL for xtensa.
+	* config/tc-i386.c (optimize_encoding): Add
+	is_any_vex_encoding() invocations. Drop respective
+	i.tm.extension_opcode == None checks.
 
-2019-01-28  Nick Clifton  <nickc@redhat.com>
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
 
-	* po/fr.po: Updated French translation.
-	* po/ru.po: Updated Russian translation.
+	* config/tc-i386.c (md_assemble): Check RegRex is clear during
+	REX transformations. Correct comment indentation.
 
-2019-01-28  Alan Modra  <amodra@gmail.com>
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
 
-	* configure.ac (ac_checking): Set from bfd/development.sh
-	development variable.
-	* configure: Regenerate.
+	* config/tc-i386.c (optimize_encoding): Generalize register
+	transformation for TEST optimization.
 
-2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
 
-	* config/tc-aarch64.c (warn_unpredictable_ldst): Exempt
-	stg, st2g, stzg and stz2g from Xt == Xn with writeback warning.
-	* testsuite/gas/aarch64/armv8_5-a-memtag.d: Change tests for
-	stg, stzg, st2g and stz2g.
-	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
+	* testsuite/gas/i386/x86-64-sysenter-amd.s,
+	testsuite/gas/i386/x86-64-sysenter-amd.d,
+	testsuite/gas/i386/x86-64-sysenter-amd.l,
+	testsuite/gas/i386/x86-64-sysenter-intel.d,
+	testsuite/gas/i386/x86-64-sysenter-mixed.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
 
-2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+2020-01-08  Nick Clifton  <nickc@redhat.com>
 
-	* testsuite/gas/aarch64/armv8_5-a-memtag.d: New tests for stzgm.
-	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
+	PR 25284
+	* doc/as.texi (Align): Document the fact that all arguments can be
+	omitted.
+	(Balign): Likewise.
+	(P2align): Likewise.
 
-2019-01-25  Sudakshina Das  <sudi.das@arm.com>
-	    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
+2020-01-08  Nick Clifton  <nickc@redhat.com>
 
-	* config/tc-aarch64.c (parse_address_main): Remove support for
-	[base]! address expression.
-	(parse_operands): Remove support for AARCH64_OPND_ADDR_SIMPLE_2.
-	(warn_unpredictable_ldst): Remove support for ldstgv_indexed.
-	* testsuite/gas/aarch64/armv8_5-a-memtag.d: Remove tests for ldgv
-	and stgv.
-	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
-	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
+	PR 14891
+	* config/obj-elf.c (obj_elf_section): Fail if the section name is
+	already defined as a different symbol type.
+	* testsuite/gas/elf/pr14891.s: New test source file.
+	* testsuite/gas/elf/pr14891.d: New test driver.
+	* testsuite/gas/elf/pr14891.s: New test expected error output.
+	* testsuite/gas/elf/elf.exp: Run the new test.
 
-2019-01-25  Wu Heng  <wu.heng@zte.com.cn>
+2020-01-08  Alan Modra  <amodra@gmail.com>
 
-	PR gas/23940
-	* macro.c (getstring): Check array bound before accessing.
+	* config/tc-z8k.c (md_begin): Make idx unsigned.
+	(get_specific): Likewise for this_index.
 
-2019-01-25  Alan Modra  <amodra@gmail.com>
+2020-01-07  Claudiu Zissulescu  <claziss@synopsys.com>
 
-	PR 20902
-	PR 24125
-	* read.c (stringer): Delete assertion.
+	* onfig/tc-arc.c (parse_reloc_symbol): New function.
+	(tokenize_arguments): Clean up, use parse_reloc_symbol function.
+	(md_operand): Set X_md to absent.
+	(arc_parse_name): Check for X_md.
 
-2019-01-21  Nick Clifton  <nickc@redhat.com>
+2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
 
-	* po/uk.po: Updated Ukranian translation.
+	PR 25311
+	* as.h (TC_STRING_ESCAPES): Provide a default definition.
+	* app.c (do_scrub_chars): Use TC_STRING_ESCAPES instead of
+	NO_STRING_ESCAPES.
+	* read.c (next_char_of_string): Likewise.
+	* config/tc-ppc.h (TC_STRING_ESCAPES): Define.
+	* config/tc-z80.h (TC_STRING_ESCAPES): Define.
 
-2019-01-19  Nick Clifton  <nickc@redhat.com>
+2020-01-03  Nick Clifton  <nickc@redhat.com>
 
-	* config.in: Regenerate.
-	* configure: Regenerate.
-	* po/gas.pot: Regenerate.
+	* po/sv.po: Updated Swedish translation.
 
-2018-06-24  Nick Clifton  <nickc@redhat.com>
-
-	2.32 branch created.
-
-2019-01-17  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/gas/arm/archv6t2-1-pe.d: New test.
-	* testsuite/gas/arm/archv6t2-1.d: Skip pe.
-	* testsuite/gas/arm/csdb.d: Skip pe.
-	* testsuite/gas/arm/sb-thumb1-pe.d: New test.
-	* testsuite/gas/arm/sb-thumb1.d: Skip pe.
-	* testsuite/gas/arm/sb-thumb2-pe.d: New test.
-	* testsuite/gas/arm/sb-thumb2.d: Skip pe.
-	* testsuite/gas/arm/udf.d: Skip pe.
-
-2019-01-16  Kito Cheng  <kito@andestech.com>
-
-	* testsuite/gas/riscv/attribute-empty.d: New.
-
-2019-01-16  Kito Cheng  <kito@andestech.com>
-	    Nelson Chu  <nelson@andestech.com>
-
-	* config/tc-riscv.c (DEFAULT_RISCV_ATTR): Define to 0 if not defined.
-	(riscv_set_options): Add `arch_attr` field.
-	(riscv_opts): Set default value for arch_attr.
-	(riscv_write_out_arch_attr): New.
-	(riscv_set_public_attributes): Likewise.
-	(riscv_md_end): Likewise.
-	(riscv_convert_symbolic_attribute): Likewise.
-	(s_riscv_attribute): Likewise.
-	(explicit_arch_attr): Likewise.
-	(riscv_pseudo_table): Add .attribute to the table.
-	(options): Add OPTION_ARCH_ATTR and OPTION_NO_ARCH_ATTR
-	enumeration constants.
-	(md_longopts): Add `march-attr' and `mno-arch-attr' options.
-	(md_parse_option): Handle the new options.
-	(md_show_usage): Document the `march-attr' option.
-	* config/tc-riscv.h (md_end): Define as riscv_md_end
-	(riscv_md_end): Declare.
-	(CONVERT_SYMBOLIC_ATTRIBUTE): Define as
-	riscv_convert_symbolic_attribute.
-	(riscv_convert_symbolic_attribute): Declare.
-	(start_assemble): Declare.
-	* testsuite/gas/elf/elf.exp: Adjust test case for section2.e.
-	* testsuite/gas/elf/section2.e-riscv: New.
-	* testsuite/gas/riscv/attribute-01.d: New test
-	* testsuite/gas/riscv/attribute-02.d: Likewise.
-	* testsuite/gas/riscv/attribute-03.d: Likewise.
-	* testsuite/gas/riscv/attribute-04.d: Likewise.
-	* testsuite/gas/riscv/attribute-04.s: Likewise.
-	* testsuite/gas/riscv/attribute-05.d: Likewise.
-	* testsuite/gas/riscv/attribute-05.s: Likewise.
-	* testsuite/gas/riscv/attribute-06.d: Likewise.
-	* testsuite/gas/riscv/attribute-06.s: Likewise.
-	* testsuite/gas/riscv/attribute-07.d: Likewise.
-	* testsuite/gas/riscv/attribute-07.s: Likewise.
-	* testsuite/gas/riscv/attribute-08.d: Likewise.
-	* testsuite/gas/riscv/attribute-08.s: Likewise.
-	* testsuite/gas/riscv/attribute-unknown.d: Likewise.
-	* testsuite/gas/riscv/attribute-unknown.s: Likewise.
-	* testsuite/gas/riscv/empty.l: Likewise.
-	* doc/c-riscv.texi (.attribute): Add documentation.
-	* configure.ac (--enable-default-riscv-attribute): New options.
-	* configure: Re-generate.
-	* config.in: Re-generate.
-
-2019-01-16  John Darrington <john@darrington.wattle.id.au>
-
-	* config/tc-s12z.c (lex_reg_name): Compare the length of the strings
-	before the contents.
-	* testsuite/gas/s12z/labels.d: New file.
-	* testsuite/gas/s12z/labels.s: New file.
-	* testsuite/gas/s12z/s12z.exp: Add them.
-	* config/tc-s12z.c (tfr): Change as_bad to as_warn.
-	Also fix message typo and semantics.
-	* config/tc-s12z.c (emit_opr): Emit BFD_RELOC_S12Z_OPR instead of
-	BFD_RELOC_24.
-	* testsuite/gas/s12z/opr-indirect-expr.d: Expect R_S12Z_OPR instead
-	of R_S12Z_EXT24.
-
-2019-01-14  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* config/tc-arm.c (arm_ext_v6k_v6t2): Define.
-	(insns) [ARM_VARIANT]: Modified.
-	(insns) [THUMB_VARIANT]: To implement few ARMv6K instructions
-	in ARMv6T2 as well.
-	* testsuite/gas/arm/archv6t2-1.d: New test.
-	* testsuite/gas/arm/archv6t2-1.s: Likewise.
-	* testsuite/gas/arm/archv6t2-2.d: Likewise.
-
-2019-01-11  Alan Modra  <amodra@gmail.com>
-
-	PR 23963
-	* testsuite/gas/m68hc11/lbranch-dwarf2.d: Adjust for PR23963 change.
-	* testsuite/gas/m68hc11/opers12-dwarf2.d: Likewise.
-
-2019-01-10  Nick Clifton  <nickc@redhat.com>
-
-	PR 23963
-	* testsuite/gas/mips/mips16-branch-absolute-1.d: Adjust for the
-	fact that control characters are now displayed as escape
-	sequences.
-	* testsuite/gas/mips/mips16-e.d: Likewise.
-	* testsuite/gas/mips/mips16-pcrel-0.d: Likewise.
-	* testsuite/gas/mips/mips16-pcrel-1.d: Likewise.
-	* testsuite/gas/mips/mips16-pcrel-delay-0.d: Likewise.
-	* testsuite/gas/mips/mips16-pcrel-delay-1.d: Likewise.
-	* testsuite/gas/mips/mips16-pcrel-n32-0.d: Likewise.
-	* testsuite/gas/mips/mips16-pcrel-n32-1.d: Likewise.
-	* testsuite/gas/mips/mips16-pcrel-n64-sym32-0.d: Likewise.
-	* testsuite/gas/mips/mips16-pcrel-n64-sym32-1.d: Likewise.
-	* testsuite/gas/mips/mips16e2@mips16-pcrel-0.d: Likewise.
-	* testsuite/gas/mips/mips16e2@mips16-pcrel-1.d: Likewise.
-	* testsuite/gas/mips/mips16e2@mips16-pcrel-delay-0.d: Likewise.
-	* testsuite/gas/mips/mips16e2@mips16-pcrel-delay-1.d: Likewise.
-	* testsuite/gas/mips/mips16e2@mips16-pcrel-n32-0.d: Likewise.
-	* testsuite/gas/mips/mips16e2@mips16-pcrel-n32-1.d: Likewise.
-	* testsuite/gas/mips/mips16e2@mips16-pcrel-n64-sym32-0.d:
-	Likewise.
-	* testsuite/gas/mips/mips16e2@mips16-pcrel-n64-sym32-1.d:
-	Likewise.
-	* testsuite/gas/mips/mipsel16-e.d: Likewise.
-	* testsuite/gas/mips/mipsr6@msa.d: Likewise.
-	* testsuite/gas/mips/mipsr6@relax-swap3.d: Likewise.
-	* testsuite/gas/mips/r6-64-n32.d: Likewise.
-	* testsuite/gas/mips/r6-64-n64.d: Likewise.
-	* testsuite/gas/mips/r6-n32.d: Likewise.
-	* testsuite/gas/mips/r6-n64.d: Likewise.
-	* testsuite/gas/mips/r6.d: Likewise.
-	* testsuite/gas/mips/tmips16-e.d: Likewise.
-	* testsuite/gas/mips/tmipsel16-e.d: Likewise.
-	* testsuite/gas/mn10300/relax.d: Likewise.
-
-2019-01-09  John Darrington <john@darrington.wattle.id.au>
-
-	* testsuite/gas/s12z/jsr.s: New case.
-	* testsuite/gas/s12z/jsr.d: New case.
-
-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/f64mm.s: Scale index of LD1RO{H,W,D}.
+	* testsuite/gas/aarch64/f64mm.d: Adjust expectations.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/i8mm.s: Add 128-bit form tests for
+	by-element usdot. Add 64-bit form tests for by-element sudot.
+	* testsuite/gas/aarch64/i8mm.d: Adjust expectations.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/f64mm.s: Drop 'i' from uzip<n>.
+	* testsuite/gas/aarch64/f64mm.d: Adjust expectations.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/f64mm.d,
+	testsuite/gas/aarch64/sve-movprfx-mm.d: Adjust expectations.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* config/tc-z80.c: Add new architectures: Z180 and eZ80. Add
+	support for assembler code generated by SDCC. Add new relocation
+	types. Add z80-elf target support.
+	* config/tc-z80.h: Add z80-elf target support. Enable dollar local
+	labels. Local labels starts from ".L".
+	* NEWS: Mention the new support.
+	* testsuite/gas/all/fwdexp.d: Fix failure due to symbol conflict.
+	* testsuite/gas/all/fwdexp.s: Likewise.
+	* testsuite/gas/all/cond.l: Likewise.
+	* testsuite/gas/all/cond.s: Likewise.
+	* testsuite/gas/all/fwdexp.d: Likewise.
+	* testsuite/gas/all/fwdexp.s: Likewise.
+	* testsuite/gas/elf/section2.e-mips: Likewise.
+	* testsuite/gas/elf/section2.l: Likewise.
+	* testsuite/gas/elf/section2.s: Likewise.
+	* testsuite/gas/macros/app1.d: Likewise.
+	* testsuite/gas/macros/app1.s: Likewise.
+	* testsuite/gas/macros/app2.d: Likewise.
+	* testsuite/gas/macros/app2.s: Likewise.
+	* testsuite/gas/macros/app3.d: Likewise.
+	* testsuite/gas/macros/app3.s: Likewise.
+	* testsuite/gas/macros/app4.d: Likewise.
+	* testsuite/gas/macros/app4.s: Likewise.
+	* testsuite/gas/macros/app4b.s: Likewise.
+	* testsuite/gas/z80/suffix.d: Fix failure on ELF target.
+	* testsuite/gas/z80/z80.exp: Add new tests
+	* testsuite/gas/z80/dollar.d: New file.
+	* testsuite/gas/z80/dollar.s: New file.
+	* testsuite/gas/z80/ez80_adl_all.d: New file.
+	* testsuite/gas/z80/ez80_adl_all.s: New file.
+	* testsuite/gas/z80/ez80_adl_suf.d: New file.
+	* testsuite/gas/z80/ez80_isuf.s: New file.
+	* testsuite/gas/z80/ez80_z80_all.d: New file.
+	* testsuite/gas/z80/ez80_z80_all.s: New file.
+	* testsuite/gas/z80/ez80_z80_suf.d: New file.
+	* testsuite/gas/z80/r800_extra.d: New file.
+	* testsuite/gas/z80/r800_extra.s: New file.
+	* testsuite/gas/z80/r800_ii8.d: New file.
+	* testsuite/gas/z80/r800_z80_doc.d: New file.
+	* testsuite/gas/z80/z180.d: New file.
+	* testsuite/gas/z80/z180.s: New file.
+	* testsuite/gas/z80/z180_z80_doc.d: New file.
+	* testsuite/gas/z80/z80_doc.d: New file.
+	* testsuite/gas/z80/z80_doc.s: New file.
+	* testsuite/gas/z80/z80_ii8.d: New file.
+	* testsuite/gas/z80/z80_ii8.s: New file.
+	* testsuite/gas/z80/z80_in_f_c.d: New file.
+	* testsuite/gas/z80/z80_in_f_c.s: New file.
+	* testsuite/gas/z80/z80_op_ii_ld.d: New file.
+	* testsuite/gas/z80/z80_op_ii_ld.s: New file.
+	* testsuite/gas/z80/z80_out_c_0.d: New file.
+	* testsuite/gas/z80/z80_out_c_0.s: New file.
+	* testsuite/gas/z80/z80_reloc.d: New file.
+	* testsuite/gas/z80/z80_reloc.s: New file.
+	* testsuite/gas/z80/z80_sli.d: New file.
+	* testsuite/gas/z80/z80_sli.s: New file.
+
+2020-01-02  Szabolcs Nagy  <szabolcs.nagy@arm.com>
 
-	* configure: Regenerate.
+	* config/tc-arm.c (parse_reg_list): Use REG_TYPE_RN instead of
+	REGLIST_RN.
 
-2019-01-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
-
-	* config/tc-aarch64.c (aarch64_cpus): Add ares.
-	* doc/c-aarch64.texi (-mcpu): Document ares value.
-
-2019-01-08  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/rx/rx.exp: Create generated test source in
-	current directory.
-	* testsuite/gas/rx/Xtod.d, * testsuite/gas/rx/abs.d,
-	* testsuite/gas/rx/adc.d, * testsuite/gas/rx/add.d,
-	* testsuite/gas/rx/and.d, * testsuite/gas/rx/bclr.d,
-	* testsuite/gas/rx/bcnd.d, * testsuite/gas/rx/bfmov.d,
-	* testsuite/gas/rx/bmcnd.d, * testsuite/gas/rx/bnot.d,
-	* testsuite/gas/rx/bra.d, * testsuite/gas/rx/brk.d,
-	* testsuite/gas/rx/bset.d, * testsuite/gas/rx/bsr.d,
-	* testsuite/gas/rx/btst.d, * testsuite/gas/rx/clrpsw.d,
-	* testsuite/gas/rx/cmp.d, * testsuite/gas/rx/dabs.d,
-	* testsuite/gas/rx/dadd.d, * testsuite/gas/rx/dbt.d,
-	* testsuite/gas/rx/dcmp.d, * testsuite/gas/rx/ddiv.d,
-	* testsuite/gas/rx/div.d, * testsuite/gas/rx/divu.d,
-	* testsuite/gas/rx/dmov.d, * testsuite/gas/rx/dmul.d,
-	* testsuite/gas/rx/dneg.d, * testsuite/gas/rx/dpopm.d,
-	* testsuite/gas/rx/dpushm.d, * testsuite/gas/rx/dround.d,
-	* testsuite/gas/rx/dsqrt.d, * testsuite/gas/rx/dsub.d,
-	* testsuite/gas/rx/dtoX.d, * testsuite/gas/rx/emaca.d,
-	* testsuite/gas/rx/emsba.d, * testsuite/gas/rx/emul.d,
-	* testsuite/gas/rx/emula.d, * testsuite/gas/rx/emulu.d,
-	* testsuite/gas/rx/fadd.d, * testsuite/gas/rx/fcmp.d,
-	* testsuite/gas/rx/fdiv.d, * testsuite/gas/rx/fmul.d,
-	* testsuite/gas/rx/fsqrt.d, * testsuite/gas/rx/fsub.d,
-	* testsuite/gas/rx/ftoi.d, * testsuite/gas/rx/ftou.d,
-	* testsuite/gas/rx/gprel.d, * testsuite/gas/rx/int.d,
-	* testsuite/gas/rx/itof.d, * testsuite/gas/rx/jmp.d,
-	* testsuite/gas/rx/jsr.d, * testsuite/gas/rx/machi.d,
-	* testsuite/gas/rx/maclh.d, * testsuite/gas/rx/maclo.d,
-	* testsuite/gas/rx/max.d, * testsuite/gas/rx/min.d,
-	* testsuite/gas/rx/mov.d, * testsuite/gas/rx/movco.d,
-	* testsuite/gas/rx/movli.d, * testsuite/gas/rx/movu.d,
-	* testsuite/gas/rx/msbhi.d, * testsuite/gas/rx/msblh.d,
-	* testsuite/gas/rx/msblo.d, * testsuite/gas/rx/mul.d,
-	* testsuite/gas/rx/mulhi.d, * testsuite/gas/rx/mullh.d,
-	* testsuite/gas/rx/mullo.d, * testsuite/gas/rx/mvfacgu.d,
-	* testsuite/gas/rx/mvfachi.d, * testsuite/gas/rx/mvfaclo.d,
-	* testsuite/gas/rx/mvfacmi.d, * testsuite/gas/rx/mvfc.d,
-	* testsuite/gas/rx/mvfcp.d, * testsuite/gas/rx/mvfdc.d,
-	* testsuite/gas/rx/mvfdr.d, * testsuite/gas/rx/mvtacgu.d,
-	* testsuite/gas/rx/mvtachi.d, * testsuite/gas/rx/mvtaclo.d,
-	* testsuite/gas/rx/mvtc.d, * testsuite/gas/rx/mvtcp.d,
-	* testsuite/gas/rx/mvtdc.d, * testsuite/gas/rx/neg.d,
-	* testsuite/gas/rx/nop.d, * testsuite/gas/rx/not.d,
-	* testsuite/gas/rx/opecp.d, * testsuite/gas/rx/or.d,
-	* testsuite/gas/rx/pop.d, * testsuite/gas/rx/popc.d,
-	* testsuite/gas/rx/popm.d, * testsuite/gas/rx/push.d,
-	* testsuite/gas/rx/pushc.d, * testsuite/gas/rx/pushm.d,
-	* testsuite/gas/rx/r-bcc.d, * testsuite/gas/rx/r-bra.d,
-	* testsuite/gas/rx/racl.d, * testsuite/gas/rx/racw.d,
-	* testsuite/gas/rx/rdacl.d, * testsuite/gas/rx/rdacw.d,
-	* testsuite/gas/rx/revl.d, * testsuite/gas/rx/revw.d,
-	* testsuite/gas/rx/rmpa.d, * testsuite/gas/rx/rolc.d,
-	* testsuite/gas/rx/rorc.d, * testsuite/gas/rx/rotl.d,
-	* testsuite/gas/rx/rotr.d, * testsuite/gas/rx/round.d,
-	* testsuite/gas/rx/rstr.d, * testsuite/gas/rx/rte.d,
-	* testsuite/gas/rx/rtfi.d, * testsuite/gas/rx/rts.d,
-	* testsuite/gas/rx/rtsd.d, * testsuite/gas/rx/sat.d,
-	* testsuite/gas/rx/satr.d, * testsuite/gas/rx/save.d,
-	* testsuite/gas/rx/sbb.d, * testsuite/gas/rx/sccnd.d,
-	* testsuite/gas/rx/scmpu.d, * testsuite/gas/rx/setpsw.d,
-	* testsuite/gas/rx/shar.d, * testsuite/gas/rx/shll.d,
-	* testsuite/gas/rx/shlr.d, * testsuite/gas/rx/smovb.d,
-	* testsuite/gas/rx/smovf.d, * testsuite/gas/rx/smovu.d,
-	* testsuite/gas/rx/sstr.d, * testsuite/gas/rx/stnz.d,
-	* testsuite/gas/rx/stz.d, * testsuite/gas/rx/sub.d,
-	* testsuite/gas/rx/suntil.d, * testsuite/gas/rx/swhile.d,
-	* testsuite/gas/rx/tst.d, * testsuite/gas/rx/utof.d,
-	* testsuite/gas/rx/wait.d, * testsuite/gas/rx/xchg.d,
-	* testsuite/gas/rx/xor.d: Add #source line.
-
-2019-01-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
-
-	* config/tc-arm.c (arm_cpus): Add ares.
-	* doc/c-arm.texi (-mcpu): Document ares value.
-
-2019-01-05  Yoshinori Sato  <ysato@users.sourceforge.jp>
-
-	* config/rx-defs.h (rx_cpu_types): Add type RXV3 and RXV3FPU.
-	(rx_bfield): Add prototype.
-	(rx_post): Likewise.
-	* config/rx-parse.y: Add v3 instructions and Double FPU registers.
-	(DSIZE): Define.
-	(POST): Define.
-	(rx_check_v3): New. check v3 type.
-	(rx_check_dfpu): New. check have double support.
-	(double_condition_table): New. dcmp<cond> contiditon.
-	(check_condition): Multiple condition support.
-	(rx_lex): RXv3 instructions support.
-	Add parse dcmp<cond> instruction and Double FPU registers.
-	(immediate): Disable optimize in dmov #imm case.
-	(displacement): Add double displacement in dmov instraction.
-	* config/tc-rx.c (rx_use_conventional_section_names):
-	Invert default value in rx-*-linux target.
-	(cpu_type): Add additional ELF flags.
-	(cpu_type_list): Add RXv3.
-	(md_parse_option): Refer elf_flags from cpu_type_list.
-	(md_show_usage): Add rxv3 and rxv3-dfpu.
-	(rx_bytesT): Add post byte.
-	(rx_bfield): New. generate bfmov / bfmovz "imm" field.
-	(rx_post): New. Set instruction post byte.
-	(md_assemble): Add post byte.
-	doc/c-rx.texi: Add cpu types.
-	* testsuite/gas/rx/Xtod.d: New.
-	* testsuite/gas/rx/Xtod.sm: New.
-	* testsuite/gas/rx/bfmov.d: New.
-	* testsuite/gas/rx/bfmov.sm: New.
-	* testsuite/gas/rx/dabs.d: New.
-	* testsuite/gas/rx/dabs.sm: New.
-	* testsuite/gas/rx/dadd.d: New.
-	* testsuite/gas/rx/dadd.sm: New.
-	* testsuite/gas/rx/dcmp.d: New.
-	* testsuite/gas/rx/dcmp.sm: New.
-	* testsuite/gas/rx/ddiv.d: New.
-	* testsuite/gas/rx/ddiv.sm: New.
-	* testsuite/gas/rx/dmov.d: New.
-	* testsuite/gas/rx/dmov.sm: New.
-	* testsuite/gas/rx/dmul.d: New.
-	* testsuite/gas/rx/dmul.sm: New.
-	* testsuite/gas/rx/dneg.d: New.
-	* testsuite/gas/rx/dneg.sm: New.
-	* testsuite/gas/rx/dpopm.d: New.
-	* testsuite/gas/rx/dpopm.sm: New.
-	* testsuite/gas/rx/dpushm.d: New.
-	* testsuite/gas/rx/dpushm.sm: New.
-	* testsuite/gas/rx/dround.d: New.
-	* testsuite/gas/rx/dround.sm: New.
-	* testsuite/gas/rx/dsqrt.d: New.
-	* testsuite/gas/rx/dsqrt.sm: New.
-	* testsuite/gas/rx/dsub.d: New.
-	* testsuite/gas/rx/dsub.sm: New.
-	* testsuite/gas/rx/dtoX.d: New.
-	* testsuite/gas/rx/dtoX.sm: New.
-	* testsuite/gas/rx/macros.inc: Add double FPU registers.
-	* testsuite/gas/rx/mvfdc.d: New.
-	* testsuite/gas/rx/mvfdc.sm: New.
-	* testsuite/gas/rx/mvfdr.d: New.
-	* testsuite/gas/rx/mvfdr.sm: New.
-	* testsuite/gas/rx/mvtdc.d: New.
-	* testsuite/gas/rx/mvtdc.sm: New.
-	* testsuite/gas/rx/rstr.d: New.
-	* testsuite/gas/rx/rstr.sm: New.
-	* testsuite/gas/rx/rx.exp: Use rxv3-dfpu option.
-	* testsuite/gas/rx/save.d: New.
-	* testsuite/gas/rx/save.sm: New.
-	* testsuite/gas/rx/xor.d: New.
-	* testsuite/gas/rx/xor.sm: Add pattern.
-
-2019-01-04  Wu Heng  <wu.heng@zte.com.cn>
-
-	PR 24010
-	* macro.c (get_any_string): Check for end of input whilst scanning
-	for separators.
-
-2019-01-04  Wu Heng  <wu.heng@zte.com.cn>
-
-	PR 24009
-	* read.c (stringer): Fix handling of missing '>' character at end
-	of <...> sequence.
-
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/contrib/ChangeLog b/contrib/ChangeLog
index 8ce67659c0..489af77445 100644
--- a/contrib/ChangeLog
+++ b/contrib/ChangeLog
@@ -1,3 +1,8 @@
+2019-10-21  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dg-extract-results.py: Update from gcc repo.
+	* dg-extract-results.sh: Likewise.
+
 2018-08-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
 
 	* dg-extract-results.sh: Move from gdb/testsuite.
diff --git a/gnulib/ChangeLog b/gnulib/ChangeLog
index 181fccd44b..f7c648e594 100644
--- a/gnulib/ChangeLog
+++ b/gnulib/ChangeLog
@@ -1,3 +1,838 @@
+2019-12-16  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.am: Set MAKEOVERRIDES.
+	* Makefile.in: Regenerate.
+	* aclocal.m4: Regenerate.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* import/Makefile.am: Update.
+	* import/Makefile.in: Regenerate.
+	* import/_Noreturn.h: New file.
+	* import/alloca.c (i00afunc): Update.
+	* import/alloca.in.h (if): Update.
+	* import/arg-nonnull.h: Rename from import/extra/snippet/arg-nonnull.h.
+	* import/arpa_inet.in.h (if): Update.
+	* import/assure.h: Update.
+	* import/at-func.c: Update.
+	* import/basename-lgpl.c: Update.
+	* import/canonicalize-lgpl.c (if): Update.
+	* import/c++defs.h: Rename from import/extra/snippet/c++defs.h.
+	* import/cdefs.h: New file.
+	* import/chdir-long.c: Update.
+	* import/chdir-long.h: Update.
+	* import/cloexec.c: Update.
+	* import/cloexec.h: Update.
+	* import/close.c: Update.
+	* import/closedir.c: Update.
+	* import/config.charset: Remove.
+	* import/dirent-private.h: Update.
+	* import/dirent.in.h: Update.
+	* import/dirfd.c: Update.
+	* import/dirname-lgpl.c: Update.
+	* import/dirname.h (base_name): Update.
+	* import/dosname.h (if): Update.
+	* import/dup-safer-flag.c: New file.
+	* import/dup-safer.c: Update.
+	* import/dup.c: Update.
+	* import/dup2.c (if): Update.
+	(dup2_nothrow): Update.
+	(ms_windows_dup2): Update.
+	* import/errno.in.h (if): Update.
+	(elif): Update.
+	* import/error.c (if): Update.
+	(strerror_r): Update.
+	(program_name): Update.
+	(error): Update.
+	(error_at_line): Update.
+	* import/error.h: Update.
+	* import/exitfail.c: Update.
+	* import/exitfail.h: Update.
+	* import/extra/config.rpath: Update.
+	* import/extra/snippet/_Noreturn.h: Remove.
+	* import/extra/update-copyright: Update.
+	* import/fchdir.c: Update.
+	* import/fcntl.c (rpl_fcntl): Update.
+	(INCL_DOS): Update.
+	(if): Update.
+	(rpl_fcntl_DUPFD): Update.
+	(rpl_fcntl_DUPFD_CLOEXEC): Update.
+	(klibc_fcntl): Update.
+	(fcntl): Update.
+	(have_dupfd_cloexec): Update.
+	* import/fcntl.in.h (if): Update.
+	(creat): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(_GL_WARN_ON_USE): Update.
+	(O_CLOEXEC): Update.
+	(GNULIB_defined_O_CLOEXEC): Update.
+	* import/fd-hook.c: Update.
+	* import/fd-hook.h: Update.
+	* import/fd-safer-flag.c: New file.
+	* import/fd-safer.c: Update.
+	* import/fdopendir.c: Update.
+	* import/filename.h: Update.
+	* import/filenamecat-lgpl.c (longest_relative_suffix): Update.
+	(mfile_name_concat): Update.
+	* import/filenamecat.h: Update.
+	* import/flexmember.h: Update.
+	* import/float+.h: Update.
+	* import/float.c: Update.
+	* import/float.in.h (LDBL_MIN): Update.
+	* import/fnmatch.c (__builtin_expect): Update.
+	(FALLTHROUGH): Update.
+	* import/fnmatch.in.h (_FNMATCH_H): Update.
+	(_): Update.
+	(fnmatch): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(_GL_WARN_ON_USE): Update.
+	* import/fnmatch_loop.c (FCT): Update.
+	(EXT): Update.
+	* import/fpucw.h (GET_FPUCW): Update.
+	(SET_FPUCW): Update.
+	* import/frexp.c: Update.
+	* import/frexpl.c: Update.
+	* import/fstat.c (stat): Update.
+	(fstat): Update.
+	(WINDOWS_NATIVE): Update.
+	(fstat_nothrow): Update.
+	(WIN32_LEAN_AND_MEAN): Update.
+	* import/fstatat.c (normal_fstatat): Update.
+	(rpl_fstatat): Update.
+	* import/getcwd-lgpl.c (rpl_getcwd): Update.
+	* import/getcwd.c (getcwd_nothrow): Update.
+	(getcwd_system): Update.
+	(__getcwd): Update.
+	* import/getdtablesize.c (if): Update.
+	(_setmaxstdio): Update.
+	(_setmaxstdio_nothrow): Update.
+	(getdtablesize): Update.
+	* import/getlogin_r.c (if): Update.
+	(getlogin_r): Update.
+	* import/getprogname.c (getprogname): Update.
+	* import/getprogname.h: Update.
+	* import/gettext.h (if): Update.
+	* import/gettimeofday.c (WINDOWS_NATIVE): Update.
+	(localtime): Update.
+	(GetProcAddress): Update.
+	(gmtime): Update.
+	(void): Update.
+	(struct tm): Update.
+	(rpl_localtime): Update.
+	(initialize): Update.
+	(rpl_gmtime): Update.
+	(tzset): Update.
+	(rpl_tzset): Update.
+	* import/glob-libc.h (_Restrict_): Update.
+	(__size_t): Update.
+	(__need_size_t): Update.
+	(glob): Update.
+	(globfree): Update.
+	(__REDIRECT_NTH): Update.
+	(glob64): Update.
+	(globfree64): Update.
+	(glob_pattern_p): Update.
+	* import/glob.c (POSIX): Update.
+	(if): Update.
+	(__set_errno): Update.
+	(getpwnam_r): Update.
+	(__lstat64): Update.
+	(FLEXIBLE_ARRAY_MEMBER): Update.
+	(__glob_pattern_p): Update.
+	(GETPW_R_SIZE_MAX): Update.
+	(GET_LOGIN_NAME_MAX): Update.
+	(DT_UNKNOWN): Update.
+	(DT_DIR): Update.
+	(DT_LNK): Update.
+	(D_TYPE_TO_RESULT): Update.
+	(readdir_result_might_be_symlink): Update.
+	(readdir_result_might_be_dir): Update.
+	(readdir_result_type): Update.
+	(D_INO_TO_RESULT): Update.
+	(READDIR_RESULT_INITIALIZER): Update.
+	(attribute_hidden): Update.
+	(__attribute_noinline__): Update.
+	(__builtin_expect): Update.
+	(__glibc_unlikely): Update.
+	(__has_builtin): Update.
+	(__glob_pattern_type): Update.
+	(is_dir): Update.
+	(glob): Update.
+	(globfree): Update.
+	(libc_hidden_def): Update.
+	(DIRSEP_CHAR): Update.
+	(prefix_array): Update.
+	(weak_alias): Update.
+	(link_exists2_p): Update.
+	(link_exists_p): Update.
+	(glob_in_dir): Update.
+	(GLOBNAMES_MEMBERS): Update.
+	* import/glob.in.h (_GL_GLOB_H): Update.
+	(_): Update.
+	(__BEGIN_DECLS): Update.
+	(__END_DECLS): Update.
+	(_Restrict_): Update.
+	(__THROW): Update.
+	(__THROWNL): Update.
+	(__size_t): Update.
+	(__USE_GNU): Update.
+	(glob): Update.
+	(globfree): Update.
+	(glob_pattern_p): Update.
+	(__glob_pattern_p): Update.
+	(__GLOB_GNULIB): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_WARN_ON_USE): Update.
+	* import/glob_internal.h: New file.
+	* import/glob_pattern_p.c: New file.
+	* import/globfree.c: New file.
+	* import/glthread/lock.c (glthread_rwlock_init_for_glibc): Update.
+	(glthread_rwlock_rdlock_multithreaded): Update.
+	(glthread_once_call): Update.
+	(glthread_once_multithreaded): Update.
+	(glthread_once_singlethreaded): Update.
+	(glthread_recursive_lock_init_multithreaded): Update.
+	(glthread_recursive_lock_lock_multithreaded): Update.
+	(glthread_recursive_lock_unlock_multithreaded): Update.
+	(glthread_recursive_lock_destroy_multithreaded): Update.
+	(glthread_lock_init_func): Update.
+	(glthread_lock_lock_func): Update.
+	(glthread_lock_unlock_func): Update.
+	(glthread_lock_destroy_func): Update.
+	(gl_waitqueue_t): Update.
+	(gl_waitqueue_init): Update.
+	(gl_waitqueue_add): Update.
+	(gl_waitqueue_notify_first): Update.
+	(gl_waitqueue_notify_all): Update.
+	(glthread_rwlock_init_func): Update.
+	(glthread_rwlock_rdlock_func): Update.
+	(glthread_rwlock_wrlock_func): Update.
+	(glthread_rwlock_unlock_func): Update.
+	(glthread_rwlock_destroy_func): Update.
+	(glthread_recursive_lock_init_func): Update.
+	(glthread_recursive_lock_lock_func): Update.
+	(glthread_recursive_lock_unlock_func): Update.
+	(glthread_recursive_lock_destroy_func): Update.
+	(glthread_once_func): Update.
+	* import/glthread/lock.h (c11_threads_in_use): Update.
+	(pthread_in_use): Update.
+	(gl_rwlock_initializer): Update.
+	(glthread_rwlock_init): Update.
+	(glthread_rwlock_init_for_glibc): Update.
+	(pth_in_use): Update.
+	(gl_lock_define): Update.
+	(gl_lock_define_initialized): Update.
+	(gl_lock_initializer): Update.
+	(glthread_lock_init): Update.
+	(glthread_lock_lock): Update.
+	(glthread_lock_unlock): Update.
+	(glthread_lock_destroy): Update.
+	(gl_rwlock_define): Update.
+	(gl_rwlock_define_initialized): Update.
+	(glthread_rwlock_rdlock): Update.
+	(glthread_rwlock_wrlock): Update.
+	(glthread_rwlock_unlock): Update.
+	(glthread_rwlock_destroy): Update.
+	(gl_recursive_lock_define): Update.
+	(gl_recursive_lock_define_initialized): Update.
+	(gl_recursive_lock_initializer): Update.
+	(glthread_recursive_lock_init): Update.
+	(glthread_recursive_lock_lock): Update.
+	(glthread_recursive_lock_unlock): Update.
+	(glthread_recursive_lock_destroy): Update.
+	(gl_once_define): Update.
+	(glthread_once): Update.
+	(glthread_once_multithreaded): Update.
+	(glthread_once_singlethreaded): Update.
+	(thread_in_use): Update.
+	(glthread_recursive_lock_init_multithreaded): Update.
+	(glthread_recursive_lock_lock_multithreaded): Update.
+	(glthread_recursive_lock_unlock_multithreaded): Update.
+	(glthread_recursive_lock_destroy_multithreaded): Update.
+	(glthread_lock_init_func): Update.
+	(glthread_lock_lock_func): Update.
+	(glthread_lock_unlock_func): Update.
+	(glthread_lock_destroy_func): Update.
+	(glthread_rwlock_init_func): Update.
+	(glthread_rwlock_rdlock_func): Update.
+	(glthread_rwlock_wrlock_func): Update.
+	(glthread_rwlock_unlock_func): Update.
+	(glthread_rwlock_destroy_func): Update.
+	(glthread_recursive_lock_init_func): Update.
+	(glthread_recursive_lock_lock_func): Update.
+	(glthread_recursive_lock_unlock_func): Update.
+	(glthread_recursive_lock_destroy_func): Update.
+	(glthread_once_func): Update.
+	* import/glthread/threadlib.c: Update.
+	* import/hard-locale.c: Update.
+	* import/hard-locale.h: Update.
+	* import/inet_ntop.c: Update.
+	* import/intprops.h (__has_builtin): Update.
+	(_GL_INT_CONVERT): Update.
+	(_GL_INT_NEGATE_CONVERT): Update.
+	(verify): Update.
+	(_GL_HAS_BUILTIN_OVERFLOW): Update.
+	(_GL_HAS_BUILTIN_ADD_OVERFLOW): Update.
+	(_GL_HAS_BUILTIN_OVERFLOW_P): Update.
+	(_GL_HAS_BUILTIN_MUL_OVERFLOW): Update.
+	(_GL_BINARY_OP_OVERFLOW): Update.
+	(INT_ADD_WRAPV): Update.
+	(INT_SUBTRACT_WRAPV): Update.
+	(INT_MULTIPLY_WRAPV): Update.
+	(_GL_INT_OP_WRAPV): Update.
+	(_GL_INT_OP_WRAPV_SMALLISH): Update.
+	(_GL_INT_OP_WRAPV_LONGISH): Update.
+	(_GL_INT_OP_CALC): Update.
+	(_GL_INT_OP_CALC1): Update.
+	(_GL_INT_OP_WRAPV_VIA_UNSIGNED): Update.
+	(_GL_INT_ADD_RANGE_OVERFLOW): Update.
+	(_GL_INT_SUBTRACT_RANGE_OVERFLOW): Update.
+	(_GL_INT_MULTIPLY_RANGE_OVERFLOW): Update.
+	* import/inttypes.in.h (if): Update.
+	* import/isnan.c: Update.
+	* import/isnand-nolibm.h: Update.
+	* import/isnand.c: Update.
+	* import/isnanl-nolibm.h: Update.
+	* import/isnanl.c: Update.
+	* import/itold.c: Update.
+	* import/libc-config.h: New file.
+	* import/limits.in.h (LLONG_MIN): Update.
+	(LLONG_MAX): Update.
+	(ULLONG_MAX): Update.
+	(WORD_BIT): Update.
+	(LONG_BIT): Update.
+	* import/localcharset.c (setlocale): Update.
+	(relocate): Update.
+	(O_NOFOLLOW): Update.
+	(ISSLASH): Update.
+	(DIRECTORY_SEPARATOR): Update.
+	(getc): Update.
+	(volatile): Update.
+	(get_charset_aliases): Update.
+	(struct table_entry): Update.
+	(alias_table_defined): Update.
+	(locale_table_defined): Update.
+	(locale_charset): Update.
+	(if): Update.
+	* import/localcharset.h: Update.
+	* import/localtime-buffer.c: New file.
+	* import/localtime-buffer.h: New file.
+	* import/lstat.c (rpl_lstat): Update.
+	* import/m4/00gnulib.m4: Update.
+	* import/m4/__inline.m4: New file.
+	* import/m4/absolute-header.m4: Update.
+	* import/m4/alloca.m4: Update.
+	* import/m4/arpa_inet_h.m4: Update.
+	* import/m4/builtin-expect.m4: New file.
+	* import/m4/canonicalize.m4: Update.
+	* import/m4/chdir-long.m4: Update.
+	* import/m4/close.m4: Update.
+	* import/m4/closedir.m4: Update.
+	* import/m4/codeset.m4: Update.
+	* import/m4/configmake.m4: Remove.
+	* import/m4/d-ino.m4: Update.
+	* import/m4/d-type.m4: Update.
+	* import/m4/dirent_h.m4: Update.
+	* import/m4/dirfd.m4: Update.
+	* import/m4/dirname.m4: Update.
+	* import/m4/double-slash-root.m4: Update.
+	* import/m4/dup.m4: Update.
+	* import/m4/dup2.m4: Update.
+	* import/m4/eealloc.m4: Update.
+	* import/m4/environ.m4: Update.
+	* import/m4/errno_h.m4: Update.
+	* import/m4/error.m4: Update.
+	* import/m4/exponentd.m4: Update.
+	* import/m4/exponentl.m4: Update.
+	* import/m4/extensions.m4: Update.
+	* import/m4/extern-inline.m4: Update.
+	* import/m4/fchdir.m4: Update.
+	* import/m4/fcntl-o.m4: Update.
+	* import/m4/fcntl.m4: Update.
+	* import/m4/fcntl_h.m4: Update.
+	* import/m4/fdopendir.m4: Update.
+	* import/m4/filenamecat.m4: Update.
+	* import/m4/flexmember.m4: Update.
+	* import/m4/float_h.m4: Update.
+	* import/m4/fnmatch.m4: Update.
+	* import/m4/fnmatch_h.m4: New file.
+	* import/m4/fpieee.m4: Update.
+	* import/m4/frexp.m4: Update.
+	* import/m4/frexpl.m4: Update.
+	* import/m4/fstat.m4: Update.
+	* import/m4/fstatat.m4: Update.
+	* import/m4/getcwd-abort-bug.m4: Update.
+	* import/m4/getcwd-path-max.m4: Update.
+	* import/m4/getcwd.m4: Update.
+	* import/m4/getdtablesize.m4: Update.
+	* import/m4/getlogin.m4: New file.
+	* import/m4/getlogin_r.m4: Update.
+	* import/m4/getpagesize.m4: New file.
+	* import/m4/getprogname.m4: Update.
+	* import/m4/gettimeofday.m4: Update.
+	* import/m4/glibc21.m4: Remove.
+	* import/m4/glob.m4: Update.
+	* import/m4/glob_h.m4: New file.
+	* import/m4/gnulib-cache.m4: Update.
+	* import/m4/gnulib-common.m4: Update.
+	* import/m4/gnulib-comp.m4: Update.
+	* import/m4/gnulib-tool.m4: Update.
+	* import/m4/hard-locale.m4: Remove.
+	* import/m4/host-cpu-c-abi.m4: New file.
+	* import/m4/include_next.m4: Update.
+	* import/m4/inet_ntop.m4: Update.
+	* import/m4/inttypes-pri.m4: Update.
+	* import/m4/inttypes.m4: Update.
+	* import/m4/isnand.m4: Update.
+	* import/m4/isnanl.m4: Update.
+	* import/m4/largefile.m4: Update.
+	* import/m4/lib-ld.m4: Update.
+	* import/m4/lib-link.m4: Update.
+	* import/m4/lib-prefix.m4: Update.
+	* import/m4/limits-h.m4: Update.
+	* import/m4/localcharset.m4: Update.
+	* import/m4/locale-fr.m4: Update.
+	* import/m4/locale-ja.m4: Update.
+	* import/m4/locale-zh.m4: Update.
+	* import/m4/localtime-buffer.m4: New file.
+	* import/m4/lock.m4: Update.
+	* import/m4/longlong.m4: Update.
+	* import/m4/lstat.m4: Update.
+	* import/m4/malloc.m4: Update.
+	* import/m4/malloca.m4: Update.
+	* import/m4/math_h.m4: Update.
+	* import/m4/mbrtowc.m4: Update.
+	* import/m4/mbsinit.m4: Update.
+	* import/m4/mbsrtowcs.m4: Update.
+	* import/m4/mbstate_t.m4: Update.
+	* import/m4/memchr.m4: Update.
+	* import/m4/memmem.m4: Update.
+	* import/m4/mempcpy.m4: Update.
+	* import/m4/memrchr.m4: Update.
+	* import/m4/mkdir.m4: Update.
+	* import/m4/mkdtemp.m4: Update.
+	* import/m4/mkostemp.m4: Update.
+	* import/m4/mmap-anon.m4: Update.
+	* import/m4/mode_t.m4: Update.
+	* import/m4/msvc-inval.m4: Update.
+	* import/m4/msvc-nothrow.m4: Update.
+	* import/m4/multiarch.m4: Update.
+	* import/m4/netinet_in_h.m4: Update.
+	* import/m4/nocrash.m4: Update.
+	* import/m4/off_t.m4: Update.
+	* import/m4/onceonly.m4: Remove.
+	* import/m4/open-cloexec.m4: New file.
+	* import/m4/open-slash.m4: New file.
+	* import/m4/open.m4: Update.
+	* import/m4/openat.m4: Update.
+	* import/m4/opendir.m4: Update.
+	* import/m4/pathmax.m4: Update.
+	* import/m4/pthread_rwlock_rdlock.m4: New file.
+	* import/m4/rawmemchr.m4: Update.
+	* import/m4/readdir.m4: Update.
+	* import/m4/readlink.m4: Update.
+	* import/m4/realloc.m4: Update.
+	* import/m4/rename.m4: Update.
+	* import/m4/rewinddir.m4: Update.
+	* import/m4/rmdir.m4: Update.
+	* import/m4/save-cwd.m4: Update.
+	* import/m4/secure_getenv.m4: Remove.
+	* import/m4/setenv.m4: Update.
+	* import/m4/signal_h.m4: Update.
+	* import/m4/socklen.m4: Update.
+	* import/m4/sockpfaf.m4: Update.
+	* import/m4/ssize_t.m4: Update.
+	* import/m4/stat-time.m4: New file.
+	* import/m4/stat.m4: Update.
+	* import/m4/std-gnu11.m4: New file.
+	* import/m4/stdalign.m4: Update.
+	* import/m4/stdbool.m4: Update.
+	* import/m4/stddef_h.m4: Update.
+	* import/m4/stdint.m4: Update.
+	* import/m4/stdio_h.m4: Update.
+	* import/m4/stdlib_h.m4: Update.
+	* import/m4/strchrnul.m4: Update.
+	* import/m4/strdup.m4: Update.
+	* import/m4/strerror.m4: Update.
+	* import/m4/strerror_r.m4: Update.
+	* import/m4/string_h.m4: Update.
+	* import/m4/strstr.m4: Update.
+	* import/m4/strtok_r.m4: Update.
+	* import/m4/sys_socket_h.m4: Update.
+	* import/m4/sys_stat_h.m4: Update.
+	* import/m4/sys_time_h.m4: Update.
+	* import/m4/sys_types_h.m4: Update.
+	* import/m4/sys_uio_h.m4: Update.
+	* import/m4/tempname.m4: Update.
+	* import/m4/threadlib.m4: Update.
+	* import/m4/time_h.m4: Update.
+	* import/m4/time_r.m4: Update.
+	* import/m4/unistd-safer.m4: Update.
+	* import/m4/unistd_h.m4: Update.
+	* import/m4/warn-on-use.m4: Update.
+	* import/m4/wchar_h.m4: Update.
+	* import/m4/wchar_t.m4: Update.
+	* import/m4/wctype_h.m4: Update.
+	* import/m4/wint_t.m4: Update.
+	* import/malloc.c: Update.
+	* import/malloc/scratch_buffer.h: New file.
+	* import/malloc/scratch_buffer_grow.c: New file.
+	* import/malloc/scratch_buffer_grow_preserve.c: New file.
+	* import/malloc/scratch_buffer_set_array_size.c: New file.
+	* import/malloca.c (MAGIC_NUMBER): Update.
+	(MAGIC_SIZE): Update.
+	(struct preliminary_header): Update.
+	(HEADER_SIZE): Update.
+	(union header): Update.
+	(verify): Update.
+	(HASH_TABLE_SIZE): Update.
+	(freea): Update.
+	* import/malloca.h (malloca): Update.
+	(nmalloca): Update.
+	* import/malloca.valgrind: Remove.
+	* import/math.in.h (_GL_MATH_CXX_REAL_FLOATING_DECL_2): Update.
+	(func): Update.
+	(rpl_func): Update.
+	(f): Update.
+	(d): Update.
+	(l): Update.
+	(_GL_WARN_ON_USE): Update.
+	(_GL_WARN_ON_USE_ATTRIBUTE): Update.
+	(FP_ILOGB0): Update.
+	(FP_ILOGBNAN): Update.
+	(acosf): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(asinf): Update.
+	(atanf): Update.
+	(atan2f): Update.
+	(cosf): Update.
+	(coshf): Update.
+	(expf): Update.
+	(expl): Update.
+	(expm1l): Update.
+	(ilogbl): Update.
+	(rintl): Update.
+	(sinf): Update.
+	(sinhf): Update.
+	(sqrtf): Update.
+	(tanf): Update.
+	(tanhf): Update.
+	(isfinite): Update.
+	(isinf): Update.
+	(isnan): Update.
+	(GNULIB_defined_signbit): Update.
+	(signbit): Update.
+	* import/mbrtowc.c (FALLTHROUGH): Update.
+	(locale_enc): Update.
+	(locale_enc_cached): Update.
+	(gl_lock_define_initialized): Update.
+	(mbrtowc): Update.
+	* import/mbsinit.c (if): Update.
+	(mbsinit): Update.
+	* import/mbsrtowcs-impl.h: Update.
+	* import/mbsrtowcs-state.c: Update.
+	* import/mbsrtowcs.c: Update.
+	* import/memchr.c: Update.
+	* import/memchr.valgrind: Update.
+	* import/memmem.c (__builtin_expect): Update.
+	* import/mempcpy.c: Update.
+	* import/memrchr.c (__memrchr): Update.
+	* import/mkdir.c (if): Update.
+	* import/mkdtemp.c: Update.
+	* import/mkostemp.c: Update.
+	* import/msvc-inval.c: Update.
+	* import/msvc-inval.h: Update.
+	* import/msvc-nothrow.c: Update.
+	* import/msvc-nothrow.h (if): Update.
+	* import/netinet_in.in.h: Update.
+	* import/open.c (open): Update.
+	(if): Update.
+	* import/openat-die.c: Update.
+	* import/openat-priv.h: Update.
+	* import/openat-proc.c: Update.
+	* import/openat.c (rpl_openat): Update.
+	* import/openat.h: Update.
+	* import/opendir.c: Update.
+	* import/pathmax.h (if): Update.
+	* import/pipe-safer.c: Update.
+	* import/rawmemchr.c: Update.
+	* import/rawmemchr.valgrind: Update.
+	* import/readdir.c (readdir): Update.
+	* import/readlink.c: Update.
+	* import/realloc.c: Update.
+	* import/ref-add.sin: Remove.
+	* import/ref-del.sin: Remove.
+	* import/rename.c (if): Update.
+	* import/rewinddir.c: Update.
+	* import/rmdir.c: Update.
+	* import/same-inode.h (SAME_INODE): Update.
+	* import/save-cwd.c (save_cwd): Update.
+	* import/save-cwd.h: Update.
+	* import/scratch_buffer.h: New file.
+	* import/secure_getenv.c: Remove.
+	* import/setenv.c: Update.
+	* import/signal.in.h: Update.
+	* import/stat-time.c: New file.
+	* import/stat-time.h: New file.
+	* import/stat-w32.c: New file.
+	* import/stat-w32.h: New file.
+	* import/stat.c (if): Update.
+	(stat): Update.
+	(REPLACE_FUNC_STAT_DIR): Update.
+	(WINDOWS_NATIVE): Update.
+	(WIN32_LEAN_AND_MEAN): Update.
+	(is_unc_root): Update.
+	(rpl_stat): Update.
+	* import/stdalign.in.h (elif): Update.
+	* import/stdbool.in.h: Update.
+	* import/stddef.in.h (_GL_STDDEF_ALIGNAS): Update.
+	(max_align_t): Update.
+	(GNULIB_defined_max_align_t): Update.
+	* import/stdint.in.h (WINT_MIN): Update.
+	(WINT_MAX): Update.
+	(_STDINT_MIN): Update.
+	(_STDINT_UNSIGNED_MIN): Update.
+	(_STDINT_SIGNED_MIN): Update.
+	(PTRDIFF_MIN): Update.
+	(SIG_ATOMIC_MIN): Update.
+	(WCHAR_MIN): Update.
+	* import/stdio.in.h (if): Update.
+	* import/stdlib.in.h (if): Update.
+	(_GL_WARN_ON_USE): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(random): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(srandom): Update.
+	(initstate): Update.
+	(setstate): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(GNULIB_defined_strtod_function): Update.
+	(strtold): Update.
+	(GNULIB_defined_strtold_function): Update.
+	* import/str-two-way.h: Update.
+	* import/strchrnul.c: Update.
+	* import/strchrnul.valgrind: Update.
+	* import/strdup.c: Update.
+	* import/streq.h: Update.
+	* import/strerror-override.c: Update.
+	* import/strerror-override.h: Update.
+	* import/strerror.c (strerror): Update.
+	* import/strerror_r.c (safe_copy): Update.
+	* import/string.in.h (_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(_GL_WARN_ON_USE): Update.
+	* import/stripslash.c: Update.
+	* import/strnlen1.c: Update.
+	* import/strnlen1.h: Update.
+	* import/strstr.c (__builtin_expect): Update.
+	* import/strtok_r.c: Update.
+	* import/sys_socket.in.h (CMSG_SPACE): Update.
+	(CMSG_LEN): Update.
+	(struct sockaddr_storage): Update.
+	(SO_REUSEPORT): Update.
+	(_GL_WARN_ON_USE): Update.
+	* import/sys_stat.in.h (if): Update.
+	(stat): Update.
+	(struct stat): Update.
+	(st_atime): Update.
+	(st_mtime): Update.
+	(st_ctime): Update.
+	(_GL_WINDOWS_STAT_TIMESPEC): Update.
+	(GNULIB_defined_struct_stat): Update.
+	(_S_IFBLK): Update.
+	(_S_IFLNK): Update.
+	(_S_IFSOCK): Update.
+	(fstat): Update.
+	(fstatat): Update.
+	(lstat): Update.
+	(stat64): Update.
+	(_stat64): Update.
+	(_stat32i64): Update.
+	(_stati64): Update.
+	(_stat32): Update.
+	(_stat64i32): Update.
+	* import/sys_time.in.h: Update.
+	* import/sys_types.in.h (dev_t): Update.
+	(GNULIB_defined_dev_t): Update.
+	(ino_t): Update.
+	(GNULIB_defined_ino_t): Update.
+	(_GL_WINDOWS_STAT_INODES): Update.
+	(if): Update.
+	* import/sys_uio.in.h: Update.
+	* import/tempname.c (__secure_getenv): Update.
+	(try_nocreate): Update.
+	* import/tempname.h: Update.
+	* import/time.in.h (tzset): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(ctime): Update.
+	(strftime): Update.
+	* import/time_r.c: Update.
+	* import/unistd--.h: Update.
+	* import/unistd-safer.h: Update.
+	* import/unistd.in.h (if): Update.
+	(elif): Update.
+	(__need_getopt): Update.
+	(access): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(_GL_WARN_ON_USE): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(__declspec): Update.
+	(_GL_WARN_ON_USE_ATTRIBUTE): Update.
+	(faccessat): Update.
+	(getpass): Update.
+	(truncate): Update.
+	* import/unsetenv.c: Update.
+	* import/verify.h (if): Update.
+	(_GL_HAVE__STATIC_ASSERT): Update.
+	(_GL_HAVE_STATIC_ASSERT): Update.
+	(_GL_HAVE__STATIC_ASSERT1): Update.
+	(_GL_HAVE_STATIC_ASSERT1): Update.
+	(_GL_VERIFY): Update.
+	(_Static_assert): Update.
+	(_GL_HAS_BUILTIN_TRAP): Update.
+	(_GL_HAS_BUILTIN_UNREACHABLE): Update.
+	(verify_true): Update.
+	(verify): Update.
+	(__has_builtin): Update.
+	(elif): Update.
+	(assume): Update.
+	* import/warn-on-use.h: Rename from import/extra/snippet/warn-on-use.h.
+	* import/wchar.in.h (if): Update.
+	(wcsftime): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(_GL_WARN_ON_USE): Update.
+	* import/wctype.in.h (rpl_iswalnum): Update.
+	(rpl_iswalpha): Update.
+	(rpl_iswblank): Update.
+	(rpl_iswcntrl): Update.
+	(rpl_iswdigit): Update.
+	(rpl_iswgraph): Update.
+	(rpl_iswlower): Update.
+	(rpl_iswprint): Update.
+	(rpl_iswpunct): Update.
+	(rpl_iswspace): Update.
+	(rpl_iswupper): Update.
+	(rpl_iswxdigit): Update.
+	(rpl_towlower): Update.
+	(rpl_towupper): Update.
+	(iswalnum): Update.
+	(iswalpha): Update.
+	(iswblank): Update.
+	(iswcntrl): Update.
+	(iswdigit): Update.
+	(iswgraph): Update.
+	(iswlower): Update.
+	(iswprint): Update.
+	(iswpunct): Update.
+	(iswspace): Update.
+	(iswupper): Update.
+	(iswxdigit): Update.
+	(towlower): Update.
+	(towupper): Update.
+	* import/windows-initguard.h: New file.
+	* import/windows-mutex.c: New file.
+	* import/windows-mutex.h: New file.
+	* import/windows-once.c: New file.
+	* import/windows-once.h: New file.
+	* import/windows-recmutex.c: New file.
+	* import/windows-recmutex.h: New file.
+	* import/windows-rwlock.c: New file.
+	* import/windows-rwlock.h: New file.
+	* import/xalloc-oversized.h: New file.
+	* patches/0001-Fix-PR-gdb-23558-Use-system-s-getcwd-when-cross-comp.patch: Remove.
+	* patches/0002-mkostemp-mkostemps-Fix-compilation-error-in-C-mode-o.patch: Remove.
+	* patches/0003-Fix-glob-c-Coverity-issues.patch: Remove.
+	* update-gnulib.sh: Update to latest gnulib and don't apply patches
+	anymore.  Also updates the patch -p flag to the current directory structure in
+	case patches are needed again in the future.
+
+2019-11-15  Tom Tromey  <tromey@adacore.com>
+
+	* aclocal.m4, configure, Makefile.in, import/Makefile.in:
+	Rebuild.
+	* configure.ac: Remove obsolete comment.  Add no-dist.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Regenerate.
+	* aclocal.m4: Regenerate.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* import/Makefile.am: Update.
+	* import/Makefile.in: Regenerate.
+	* import/m4/gnulib-cache.m4: Update.
+	* import/m4/gnulib-comp.m4: Update.
+	* import/m4/time_r.m4: New file.
+	* import/time_r.c: New file.
+	* update-gnulib.sh: Import time_r.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Regenerate.
+	* aclocal.m4: Regenerate.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* import/Makefile.am: Update.
+	* import/Makefile.in: Regenerate.
+	* import/extra/config.rpath: New file.
+	* import/glthread/lock.c: New file.
+	* import/glthread/lock.h: New file.
+	* import/glthread/threadlib.c: New file.
+	* import/m4/gnulib-cache.m4: Update.
+	* import/m4/gnulib-comp.m4: Update.
+	* import/m4/lib-ld.m4: New file.
+	* import/m4/lib-link.m4: New file.
+	* import/m4/lib-prefix.m4: New file.
+	* import/m4/lock.m4: New file.
+	* import/m4/strerror_r.m4: New file.
+	* import/m4/threadlib.m4: New file.
+	* import/strerror_r.c: New file.
+	* update-gnulib.sh: Import strerror_r-posix.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.am: New file.
+	* Makefile.in: Replace with generated file.
+	* aclocal-m4-deps.mk: Remove.
+	* configure.ac: Use the foreign option for automake and specify
+	the aclocal search path here.
+	* update-gnulib.sh: Don't generate aclocal-m4-deps.mk anymore.
+	Also don't specify the aclocal include path here, now that it
+	is in configure.ac.
+
+2019-11-12  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Fix path to say import/ instead of gnulib/.
+
+2019-11-06  Christian Biesinger  <cbiesinger@google.com>
+
+	* config.in: Regenerate.
+	* import/Makefile.in: Regenerate.
+
 2019-08-28  Gary Benson  <gbenson@redhat.com>
 
 	* patches/0003-Fix-glob-c-Coverity-issues.patch: New file.
diff --git a/cpu/ChangeLog b/cpu/ChangeLog
index 375cb19966..70e05d612f 100644
--- a/cpu/ChangeLog
+++ b/cpu/ChangeLog
@@ -1,3 +1,61 @@
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 release.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* fr30.cpu (f-disp9, f-disp10, f-s10, f-rel9, f-rel12): Don't
+	left shift signed values.
+
+2020-01-06  Alan Modra  <amodra@gmail.com>
+
+	* m32c.cpu (f-dsp-8-u16, f-dsp-8-s16): Rearrange to mask any sign
+	bits before shifting rather than masking after shifting.
+	(f-dsp-16-u16, f-dsp-16-s16, f-dsp-32-u16, f-dsp-32-s16): Likewise.
+	(f-dsp-40-u16, f-dsp-40-s16, f-dsp-48-u16, f-dsp-48-s16): Likewise.
+	(f-dsp-64-u16, f-dsp-8-s24): Likewise.
+	(f-bitbase32-16-s19-unprefixed): Avoid signed left shift.
+
+2020-01-04  Alan Modra  <amodra@gmail.com>
+
+	* m32r.cpu (f-disp8): Avoid left shift of negative values.
+	(f-disp16, f-disp24): Likewise.
+
+2019-12-23  Alan Modra  <amodra@gmail.com>
+
+	* iq2000.cpu (f-offset): Avoid left shift of negative values.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	* or1korbis.cpu (f-disp26, f-disp21): Don't left shift negative values.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* bpf.cpu (f-imm64): Avoid signed overflow.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* xstormy16.cpu (f-rel12a): Avoid signed overflow.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* epiphany.cpu (f-sdisp11): Don't sign extend with shifts.
+	* lm32.cpu (f-branch, f-vall): Likewise.
+	* m32.cpu (f-lab-8-16): Likewise.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* epiphany.cpu (f-simm8, f-simm24): Use multiply rather than
+	shift left to avoid UB on left shift of negative values.
+
+2019-11-20  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* bpf.cpu: Fix comment describing the 128-bit instruction format.
+
 2019-09-09  Phil Blundell  <pb@pbcl.net>
 
 	binutils 2.33 branch created.
diff --git a/ChangeLog b/ChangeLog
index 5d1dfee8dd..e75c8c249c 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,115 @@
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Synchronize top level configure files with master version:
+
+	2020-01-01  Ben Elliston  <bje@gnu.org>
+
+	* config.guess: Update copyright years.
+	* config.sub: Likewise.
+
+	2019-12-21  Ben Elliston  <bje@gnu.org>
+
+	* config.guess (set_cc_for_build): Prevent multiple calls by
+	checking if $tmp is already set. We can't check CC_FOR_BUILD as
+	the user may set it externally. Thanks to Torbjörn Granlund for
+	the bug report.
+
+	2019-12-21  Torbjörn Granlund  <tg@gmplib.org>
+
+	* config.guess (alpha:Linux:*:*): Guard against missing
+	/proc/cpuinfo by redirecting standard error to /dev/null.
+
+	2019-09-12  Daniel Bittman  <danielbittman1@gmail.com>
+
+	* config.guess (*:Twizzler:*:*): New.
+	* config.sub (-twizzler*): New.
+
+	2019-07-24  Ben Elliston  <bje@gnu.org>
+
+	* config.guess (mips:OSF1:*.*): Whitespace cleanup.
+
+	2019-06-30  Ben Elliston  <bje@gnu.org>
+
+	* config.sub (case $os): Match nsk* and powerunix. Don't later
+	match nsk* and set os=nsk which removes the OS version number.
+
+	2019-06-30  Ben Elliston  <bje@gnu.org>
+
+	* config.sub: Recognise os108*.
+
+	2019-06-26  Ben Elliston  <bje@gnu.org>
+
+	* config.sub (hp300): Set $os to hpux.
+
+	2019-06-26  Ben Elliston  <bje@gnu.org>
+
+	* config.sub (vsta): Move into alphabetical order.
+
+	2019-06-10  Ben Elliston  <bje@gnu.org>
+
+	* config.guess (*:OS108:*:*): Recognise new OS.
+
+	2019-05-28  Ben Elliston  <bje@gnu.org>
+
+	* config.guess (*:Darwin:*:*): Run xcode-select to determine if a
+	system compiler is installed. If not, do not run set_cc_for_build,
+	as the default cc will open a dialog box asking to install
+	Xcode. If no C compiler is available, guess based on uname -p and
+	uname -m.
+
+	2019-05-28  Ben Elliston  <bje@gnu.org>
+
+	* config.guess (*:Darwin:*:*): Simplify UNAME_PROCESSOR.
+
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
+
+	* Makefile.def: Add dependencies of all-gdbsupport on all-bfd.
+	* Makefile.in: Re-generate.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* src-release.sh (GDB_SUPPORT_DIRS): Add gdbsupport.
+	* MAINTAINERS: Add gdbsupport.
+	* configure: Rebuild.
+	* configure.ac (configdirs): Add gdbsupport.
+	* gdbsupport: New directory, move from gdb/gdbsupport.
+	* Makefile.def (host_modules, dependencies): Add gnulib.
+	* Makefile.in: Rebuild.
+
+2020-01-09  Aaron Merey  <amerey@redhat.com>
+
+        * config/debuginfod.m4: New file. Add macro AC_DEBUGINFOD. Adds
+        new configure option --with-debuginfod.
+        * configure: Regenerate.
+        * configure.ac: Call AC_DEBUGINFOD.
+
+2019-12-26  Christian Biesinger  <cbiesinger@google.com>
+
+	* .gitignore: Add perf.data and perf.data.old.
+
+2019-10-17  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* src-release.sh (GDB_SUPPORT_DIRS): Add libctf.
+
+2019-10-17  Alan Modra  <amodra@gmail.com>
+
+	PR 29
+	* src-release.sh (getver): Replace "head -1" with "head -n 1".
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.def (host_modules): libctf is no longer no_install.
+	* Makefile.in: Regenerated.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.def (dependencies): all-ld depends on all-libctf.
+	* Makefile.in: Regenerated.
+
 2019-09-09  Phil Blundell  <pb@pbcl.net>
 
 	binutils 2.33 branch created
diff --git a/readline/ChangeLog b/readline/ChangeLog
new file mode 100644
index 0000000000..d13b1e80dd
--- /dev/null
+++ b/readline/ChangeLog
@@ -0,0 +1,13 @@
+2019-11-15  Tom Tromey  <tromey@adacore.com>
+
+	* configure, Makefile.in: Rebuild.
+	* configure.ac: Use AC_CONFIG_MACRO_DIRS.  Pass options to
+	AM_INIT_AUTOMAKE.
+	* Makefile.am (AUTOMAKE_OPTIONS, ACLOCAL_AMFLAGS): Remove.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	Move old contents to readline/ subdirectory.
+	* aclocal.m4, configure, configure.ac, .gitignore, Makefile.am,
+	Makefile.in, README: New files.
+
diff --git a/readline/readline/examples/rlfe/ChangeLog b/readline/readline/examples/rlfe/ChangeLog
new file mode 100644
index 0000000000..b752ce1a04
--- /dev/null
+++ b/readline/readline/examples/rlfe/ChangeLog
@@ -0,0 +1,37 @@
+2019-10-23  Per Bothner  <per@bothner.com>
+
+	* pty.c:  Import from screen-4.0.2.
+	* configure.in, Makefile.in, config.h.in:  Set up autoconf handling,
+	copying a bunk of stuff over from screen.
+	* rlfe.c:  Use OpenPTY from pty.c instead of get_master_pty.
+
+2004-11-03  Per Bothner  <per@bothner.com>
+
+	* rlfe.c:  Get input emphasis (boldening) more robust.
+
+	* rlfe.c:  Various cleanups on comments and names.
+
+2003-11-07 Wolfgang Taeuber <wolfgang_taeuber@agilent.com>
+
+	* Specify a history file and the size of the history file with command
+	* line options; use EDITOR/VISUAL to set vi/emacs preference.
+
+1999-09-03  Chet Ramey <chet@nike.ins.cwru.edu>
+
+	* fep.c: Memmove is not universally available.  This patch assumes
+ 	that an autoconf test has been performed, and that memcpy is
+ 	available without checking.
+
+	* fep.c: VDISCARD is not universally available, even when termios is.
+
+	* fep.c: If a system doesn't have TIOCSCTTY, the first `open'
+ 	performed after setsid allocates a controlling terminal.  The
+ 	original code would leave the child process running on the slave pty
+ 	without a controlling tty if TIOCSCTTY was not available.
+
+	* fep.c: Most versions of SVR4, including solaris, don't allow
+	terminal ioctl calls on the master side of the pty.
+
+1999-08-28  Per Bothner  <per@bothner.com>
+
+	* fep.c:  Initial release.
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 7a1ccf29a4..a7963cc0a9 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,1883 +1,204 @@
-2020-01-17  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+2020-02-01  Nick Clifton  <nickc@redhat.com>
 
-	Backport from master.
-	2019-10-07  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-arm/tls-gdesc-neg.d: Relax target match.
-
-2020-01-15  Tamar Christina  <tamar.christina@arm.com>
-
-	Backport from master.
-	2020-01-02  Tamar Christina  <tamar.christina@arm.com>
-
-	PR 25210
-	PR 24753
-	* emultempl/aarch64elf.em (elf${ELFSIZE}_aarch64_add_stub_section):
-	Remove SEC_LINKER_CREATED.
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add erratum835769-843419.
-	* testsuite/ld-aarch64/erratum835769-843419.d: New test.
-
-2020-01-15  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/ambiguousv1b.d: Adjust expected output.
-	* testsuite/ld-powerpc/funref.s: Align func_tab.
-	* testsuite/ld-powerpc/funref2.s: Likewise.
-	* testsuite/ld-powerpc/funv1.s: Add dot symbols.
-
-2019-10-12  Nick Clifton  <nickc@redhat.com>
-
-	Release 2.33.1
 	* configure: Regenerate.
-	* po/ld.pot: Regenerate.
-
-2019-10-11  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2019-10-09  Alan Modra  <amodra@gmail.com>
-	PR 25081
-	* ldlang.c (lang_size_sections_1): Set lma from section vma
-	rather than dot.
 
-2019-10-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+2020-02-01  Nick Clifton  <nickc@redhat.com>
 
-	Apply from master
-	2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-	PR ld/25062
-	* testsuite/ld-arm/arm-elf.exp: Update.
-	* testsuite/ld-arm/tls-gdesc-neg.d: New test.
-	* testsuite/ld-arm/tls-gdesc-neg.s: New test.
-
-2019-10-09  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2019-10-04  Alan Modra  <amodra@gmail.com>
-	* testsuite/ld-powerpc/tlsso.d: Adjust to suit tlsld_got usage change.
-	* testsuite/ld-powerpc/tlsso.g: Likewise.
-	* testsuite/ld-powerpc/tlsso.r: Likewise.
-	* testsuite/ld-powerpc/tlsso32.d: Likewise.
-	* testsuite/ld-powerpc/tlsso32.g: Likewise.
-	* testsuite/ld-powerpc/tlsso32.r: Likewise.
-
-	2019-09-26  Alan Modra  <amodra@gmail.com>
-	PR 24262
-	* ld.texi (-plugin): Revert 2019-03-15 change.
-
-2019-09-30  Phil Blundell  <pb@pbcl.net>
-
-	Release 2.33
-	* configure, Makefile.in, po/ld.pot: Regenerate.
+	Binutils 2.34 release.
+	* configure: Regenerate.
 
-2019-09-25  Alan Modra  <amodra@gmail.com>
+2020-01-29  Alan Modra  <amodra@gmail.com>
 
 	Apply from master
-	2019-09-22  Alan Modra  <amodra@gmail.com>
-	* testsuite/ld-srec/sr3.cc (FOO_MSG_LEN): Set to 4.
-
-2019-09-19  Alan Modra  <amodra@gmail.com>
-
-	PR 24981
-	Apply 2019-09-12  Alan Modra  <amodra@gmail.com>
-	* ldlang.c (lang_process): Remove assertion.  Comment.
-
-2019-09-18  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/24887
-	* testsuite/ld-i386/property-1.r: Adjust for new output format
-	from readelf.
-	* testsuite/ld-i386/property-1a.r: Likewise.
-	* testsuite/ld-i386/property-2.r: Likewise.
-	* testsuite/ld-i386/property-2a.r: Likewise.
-	* testsuite/ld-i386/property-3.r: Likewise.
-	* testsuite/ld-i386/property-3a.r: Likewise.
-	* testsuite/ld-i386/property-4.r: Likewise.
-	* testsuite/ld-i386/property-4a.r: Likewise.
-	* testsuite/ld-i386/property-5.r: Likewise.
-	* testsuite/ld-i386/property-5a.r: Likewise.
-	* testsuite/ld-i386/property-6.r: Likewise.
-	* testsuite/ld-i386/property-7.r: Likewise.
-	* testsuite/ld-i386/property-7a.r: Likewise.
-	* testsuite/ld-i386/property-1.r: Likewise.
-	* testsuite/ld-i386/property-1a.r: Likewise.
-	* testsuite/ld-i386/property-2.r: Likewise.
-	* testsuite/ld-i386/property-2a.r: Likewise.
-	* testsuite/ld-i386/property-3.r: Likewise.
-	* testsuite/ld-i386/property-3a.r: Likewise.
-	* testsuite/ld-i386/property-4.r: Likewise.
-	* testsuite/ld-i386/property-4a.r: Likewise.
-	* testsuite/ld-i386/property-5.r: Likewise.
-	* testsuite/ld-i386/property-5a.r: Likewise.
-	* testsuite/ld-i386/property-6.r: Likewise.
-	* testsuite/ld-i386/property-7.r: Likewise.
-	* testsuite/ld-i386/property-7a.r: Likewise.
-
-2019-09-16  Phil Blundell  <pb@pbcl.net>
-
-	* configure, Makefile.in: Regenerated.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
-
-2019-09-06  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/beos.em (sort_by_file_name): Use appropriate
-	intermediary variables.
-	(sort_by_section_name): Likewise.
-
-2019-09-06  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/elf32.em (gld${EMULATION_NAME}_search_needed): Constify
-	variable.
-	* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Likewise.
-	* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.
-
-2019-09-05  Eric Botcazou  <ebotcazou@adacore.com>
-
-	PR ld/24574
-	* pe-dll.c (pe_find_data_imports): Replace again the original name of
-	the undefined symbol with the __imp_ prefixed one after it is resolved.
-
-2019-09-05  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/pcrelopt.s,
-	* testsuite/ld-powerpc/pcrelopt.d: Test offset and prefix in
-	second instruction.
-
-2019-08-29  Alan Modra  <amodra@gmail.com>
-
-	PR ld/24406
-	* plugin.c (get_symbols): Test link_info.wrap_hash before calling
-	unwrap_hash_lookup.
-
-2019-08-22  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/24601
-	* testsuite/ld-aarch64/aarch64-elf.exp (undef-tls, weak-tls): New.
-	* testsuite/ld-aarch64/undef-tls.d: New test.
-	* testsuite/ld-aarch64/undef-tls.s: New test.
-	* testsuite/ld-aarch64/weak-tls.d: New test.
-	* testsuite/ld-aarch64/weak-tls.s: New test.
-
-2019-08-20  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/ld-arm/cortex-a8-fix-b-plt.d: Update Testcase.
-	* testsuite/ld-arm/cortex-a8-fix-b-rel-arm.d: Likewise.
-	* testsuite/ld-arm/cortex-a8-fix-bcc-plt.d: Likewise.
-	* testsuite/ld-arm/farcall-cond-thumb-arm.d: Likewise.
-	* testsuite/ld-arm/farcall-mixed-app.d: Likewise.
-	* testsuite/ld-arm/farcall-mixed-app2.d: Likewise.
-	* testsuite/ld-arm/farcall-mixed-lib-v4t.d: Likewise.
-	* testsuite/ld-arm/farcall-thumb-arm-pic-veneer.d: Likewise.
-	* testsuite/ld-arm/farcall-thumb-arm-short.d: Likewise.
-	* testsuite/ld-arm/farcall-thumb-arm.d: Likewise.
-	* testsuite/ld-arm/farcall-thumb-thumb-pic-veneer.d: Likewise.
-	* testsuite/ld-arm/farcall-thumb-thumb.d: Likewise.
-	* testsuite/ld-arm/fix-arm1176-on.d: Likewise.
-	* testsuite/ld-arm/ifunc-10.dd: Likewise.
-	* testsuite/ld-arm/ifunc-2.dd: Likewise.
-	* testsuite/ld-arm/ifunc-4.dd: Likewise.
-	* testsuite/ld-arm/ifunc-6.dd: Likewise.
-	* testsuite/ld-arm/ifunc-8.dd: Likewise.
-	* testsuite/ld-arm/jump-reloc-veneers-long.d: Likewise.
-	* testsuite/ld-arm/mixed-app.d: Likewise.
-	* testsuite/ld-arm/thumb2-b-interwork.d: Likewise.
-	* testsuite/ld-arm/tls-longplt.d: Likewise.
-	* testsuite/ld-arm/tls-thumb1.d: Likewise.
-
-2019-08-16  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24905
-	* testsuite/ld-x86-64/pr24905-x32.d: New file.
-	* testsuite/ld-x86-64/pr24905.d: Likewise.
-	* testsuite/ld-x86-64/pr24905.s: Likewise.
-	* testsuite/ld-x86-64/pr24905.t: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Run pr24905 and pr24905-x32.
-
-2019-08-16  Christophe Lyon  <christophe.lyon@linaro.org>
-
-	* emulparams/armelf.sh (OTHER_SECTIONS): Add support for noinit
-	section.
-
-2019-08-16  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/ppc32elf.em (ppc_before_allocation): Force running
-	prelim_size_sections before deciding whether branch trampolines
-	might be needed.
-
-2019-08-15  Jim Wilson  <jimw@sifive.com>
-
-	* testsuite/ld-riscv-elf/c-lui-2.d: New.
-	* testsuite/ld-riscv-elf/c-lui-2.ld: New.
-	* testsuite/ld-riscv-elf/c-lui-2.s: New.
-	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Run the c-lui-2 test.
-
-2019-08-10  Alan Modra  <amodra@gmail.com>
-
-	* ldlang.h (enum statement_enum): Sort.
-	(union lang_statement_union): Sort.
-
-2019-08-10  Alan Modra  <amodra@gmail.com>
-
-	* ldlang.h (lang_common_statement_type): Delete.
-	(lang_object_symbols_statement_type): Delete.
-	(union lang_statement_union): Remove common_statement and
-	object_symbols_statement.
-
-2019-08-10  Alan Modra  <amodra@gmail.com>
-
-	* ldexp.c (exp_intop, exp_bigintop, exp_relop, exp_binop, exp_trinop),
-	(exp_unop, exp_nameop, exp_assop, exp_assert): Remove casts of
-	stat_alloc return value.
-	* ldlang.c (new_statement, new_afile, sort_def_symbol),
-	(lang_memory_region_lookup, lang_memory_region_alias),
-	(ldlang_add_undef, ldlang_add_require_defined, insert_pad),
-	(lang_add_gc_name, lang_new_phdr): Likewise.
-	* lexsup.c (set_segment_start): Likewise.
-
-2019-08-10  Alan Modra  <amodra@gmail.com>
-
-	* ldlang.h (lang_input_statement_type): Make next
-	and next_real_file a lang_input_statement_type pointer.
-	(lang_statement_append): Delete prototype.
-	(LANG_FOR_EACH_INPUT_STATEMENT): Update for lang_input_statement_type
-	change.
-	* ldmain.c (add_archive_element): Likewise.
-	* ldlang.c: Likewise throughout.
-	(lang_statement_append): Make static.  Make element and field
-	void pointers.  Remove casts in calls.
-	(lang_check): Use a lang_input_statement_type pointer for "file".
-	(find_rescan_insertion): Similarly for "iter" and return value.
-	(lang_process): Similarly for "insert", "iter" and "temp".
-	* emultempl/spuelf.em (embedded_spu_file): Likewise.
-	* emultempl/aix.em (gld${EMULATION_NAME}_before_allocation): Expand
-	lang_statment_append call.
-
-2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>
-
-	* emulparams/elf32bmip.sh: Add .MIPS.xhash section.
-	* emulparams/elf32bmipn32-defs.sh: Add .MIPS.xhash section.
-	* emulparams/elf64bmip-defs.sh: Add .MIPS.xhash section.
-	* emultempl/mipself.em: Remove mips_after_parse function.
-	* testsuite/ld-elf/hash.d: Update comment.
-	* testsuite/ld-mips-elf/hash1.d: New test.
-	* testsuite/ld-mips-elf/hash1.s: Ditto.
-	* testsuite/ld-mips-elf/hash1a.d: Remove.
-	* testsuite/ld-mips-elf/hash1b.d: Ditto.
-	* testsuite/ld-mips-elf/hash1c.d: Ditto
-	* testsuite/ld-mips-elf/hash2.d: New test.
-	* testsuite/ld-mips-elf/mips-elf.exp: New tests.
-	* testsuite/ld-mips-elf/start.s: New test.
-
-2019-08-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 24887
-	* testsuite/ld-aarch64/bti-plt-2.d: Adjust for new output format
-	from readelf.
-	* testsuite/ld-aarch64/bti-plt-4.d: Likewise.
-	* testsuite/ld-aarch64/bti-plt-6.d: Likewise.
-	* testsuite/ld-aarch64/bti-plt-7.d: Likewise.
-	* testsuite/ld-aarch64/bti-warn.d: Likewise.
-	* testsuite/ld-aarch64/property-bti-pac1.d: Likewise.
-	* testsuite/ld-aarch64/property-bti-pac2.d: Likewise.
-	* testsuite/ld-aarch64/property-bti-pac3.d: Likewise.
-	* testsuite/ld-elf/x86-feature-1a.rd: Likewise.
-	* testsuite/ld-elf/x86-feature-1b.rd: Likewise.
-	* testsuite/ld-elf/x86-feature-1c.rd: Likewise.
-	* testsuite/ld-elf/x86-feature-1d.rd: Likewise.
-	* testsuite/ld-elf/x86-feature-1e.rd: Likewise.
-	* testsuite/ld-i386/ibt-plt-2d.d: Likewise.
-	* testsuite/ld-i386/ibt-plt-3d.d: Likewise.
-	* testsuite/ld-i386/pr23372a.d: Likewise.
-	* testsuite/ld-i386/pr23372c.d: Likewise.
-	* testsuite/ld-i386/pr23486a.d: Likewise.
-	* testsuite/ld-i386/pr23486b.d: Likewise.
-	* testsuite/ld-i386/pr23486c.d: Likewise.
-	* testsuite/ld-i386/pr23486d.d: Likewise.
-	* testsuite/ld-i386/pr24322a.d: Likewise.
-	* testsuite/ld-i386/pr24322b.d: Likewise.
-	* testsuite/ld-i386/property-x86-3.d: Likewise.
-	* testsuite/ld-i386/property-x86-4a.d: Likewise.
-	* testsuite/ld-i386/property-x86-5.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet1.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet2a.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet5a.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet5b.d: Likewise.
-	* testsuite/ld-i386/property-x86-ibt1a.d: Likewise.
-	* testsuite/ld-i386/property-x86-ibt1b.d: Likewise.
-	* testsuite/ld-i386/property-x86-ibt2.d: Likewise.
-	* testsuite/ld-i386/property-x86-ibt3a.d: Likewise.
-	* testsuite/ld-i386/property-x86-ibt3b.d: Likewise.
-	* testsuite/ld-i386/property-x86-ibt4.d: Likewise.
-	* testsuite/ld-i386/property-x86-ibt5.d: Likewise.
-	* testsuite/ld-i386/property-x86-shstk1a.d: Likewise.
-	* testsuite/ld-i386/property-x86-shstk1b.d: Likewise.
-	* testsuite/ld-i386/property-x86-shstk2.d: Likewise.
-	* testsuite/ld-i386/property-x86-shstk3a.d: Likewise.
-	* testsuite/ld-i386/property-x86-shstk3b.d: Likewise.
-	* testsuite/ld-i386/property-x86-shstk4.d: Likewise.
-	* testsuite/ld-i386/property-x86-shstk5.d: Likewise.
-	* testsuite/ld-x86-64/ibt-plt-2d-x32.d: Likewise.
-	* testsuite/ld-x86-64/ibt-plt-2d.d: Likewise.
-	* testsuite/ld-x86-64/ibt-plt-3d-x32.d: Likewise.
-	* testsuite/ld-x86-64/ibt-plt-3d.d: Likewise.
-	* testsuite/ld-x86-64/pr23372a-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr23372a.d: Likewise.
-	* testsuite/ld-x86-64/pr23372c-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr23372c.d: Likewise.
-	* testsuite/ld-x86-64/pr23486a-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr23486a.d: Likewise.
-	* testsuite/ld-x86-64/pr23486b-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr23486b.d: Likewise.
-	* testsuite/ld-x86-64/pr23486c-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr23486c.d: Likewise.
-	* testsuite/ld-x86-64/pr23486d-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr23486d.d: Likewise.
-	* testsuite/ld-x86-64/pr24322a-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24322a.d: Likewise.
-	* testsuite/ld-x86-64/pr24322b-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24322b.d: Likewise.
-	* testsuite/ld-x86-64/pr24458a-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24458a.d: Likewise.
-	* testsuite/ld-x86-64/pr24458b-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24458b.d: Likewise.
-	* testsuite/ld-x86-64/pr24458c-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24458c.d: Likewise.
-	* testsuite/ld-x86-64/property-1.r: Likewise.
-	* testsuite/ld-x86-64/property-1a.r: Likewise.
-	* testsuite/ld-x86-64/property-2.r: Likewise.
-	* testsuite/ld-x86-64/property-2a.r: Likewise.
-	* testsuite/ld-x86-64/property-3.r: Likewise.
-	* testsuite/ld-x86-64/property-3a.r: Likewise.
-	* testsuite/ld-x86-64/property-4.r: Likewise.
-	* testsuite/ld-x86-64/property-4a.r: Likewise.
-	* testsuite/ld-x86-64/property-5.r: Likewise.
-	* testsuite/ld-x86-64/property-5a.r: Likewise.
-	* testsuite/ld-x86-64/property-6.r: Likewise.
-	* testsuite/ld-x86-64/property-7.r: Likewise.
-	* testsuite/ld-x86-64/property-7a.r: Likewise.
-	* testsuite/ld-x86-64/property-x86-3-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-3.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-4a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-4a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-5-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-5.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet1-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet1.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet2a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet2a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet5a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet5a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet5b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet5b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt1a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt1a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt1b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt1b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt2-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt2.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt3a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt3a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt3b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt3b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt4-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt4.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt5-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-ibt5.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk1a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk1a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk1b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk1b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk2-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk2.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk3a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk3a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk3b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk3b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk4-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk4.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk5-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-shstk5.d: Likewise.
-
-2019-08-07  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* scripttempl/elf64bpf.sc: Adapted from elf.sc.
-	* emulparams/elf64bpf.sh (SCRIPT_NAME): Use elf64bpf.
-	(EMBEDDED): Define.
-	* testsuite/ld-bpf/call-1.d: Do not expect a warning regarding an
-	undefined entry symbol.
-	* testsuite/ld-bpf/jump-1.d: Likewise.
-	* testsuite/ld-undefined/undefined.exp: Do not pass '-e entry' to
-	ld in BPF targets, and do not expect line number information.
-	* testsuite/ld-srec/srec.exp (run_srec_test): xfail s-record tests
-	in BPF targets.
-
-2019-08-06  Alan Modra  <amodra@gmail.com>
-
-	PR 24873
-	* ldlang.c (find_replacements_insert_point): Return "before" flag.
-	(find_next_input_statement): New function.
-	(lang_process): When placing recompiled LTO objects before a
-	claimed archive, place them immediately before in the statement
-	list.
-
-2019-08-06  Alan Modra  <amodra@gmail.com>
-
-	PR 24873
-	* ldlang.c (plugin_undefs): New static var.
-	(open_input_bfds <lang_group_statement_enum>): Loop on
-	plugin_undefs and hitting plugin_insert point.
-	(lang_process <lto_plugin_active>): Set plugin_undefs.
-
-2019-08-02  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/tlsie.s: Correct medium model ELF sequence.
-
-2019-08-01  Alan Modra  <amodra@gmail.com>
-
-	PR 24806
-	* ldlang.c (process_insert_statements): Add start of list
-	parameter.  Use rather than lang_os_list.head.  Process insert
-	statements inside group statements with a recursive call.
-	(lang_process): Adjust process_insert_statements call.
-	* lexsup.c (parse_args): Warn when adding missing --end-group.
-
-2019-08-01  Alan Modra  <amodra@gmail.com>
-
-	* ldlang.h (lang_os_list): Rename from lang_output_section_statement.
-	* ldlang.c: Likewise throughout file.
-	* emultempl/alphaelf.em: Likewise.
-	* emultempl/elf32.em: Likewise.
-	* emultempl/mmo.em: Likewise.
-	* emultempl/pe.em: Likewise.
-	* emultempl/pep.em: Likewise.
-	* emultempl/ppc32elf.em: Likewise.
-	* emultempl/spuelf.em: Likewise.
-
-2019-07-26  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-plugin/lto-3r.d: Accept D for powerpc64 descriptors.
-	* testsuite/ld-plugin/lto-5r.d: Likewise.
-
-2019-07-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-plugin/lto-3r.d: Restored.  Check foo instead
-	of __gnu_lto_v.*.
-	* testsuite/ld-plugin/lto-5r.d: Likewise.
-	* testsuite/ld-plugin/lto.exp: Run lto-3r and lto-5r tests.
-
-2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
-
-	* ld-arc/relax-local-pic.d: New test.
-	* ld-arc/relax-local-pic.s: New file.
-
-2019-07-22  Martin Liska  <mliska@suse.cz>
-
-	* testsuite/ld-plugin/lto-3r.d: Remove.
-	* testsuite/ld-plugin/lto-5r.d: Remove.
-	* testsuite/ld-plugin/lto.exp: Do not run lto-3r and lto-5r
-	tests.
-
-2019-07-23  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/elf32.em (gld${EMULATION_NAME}_place_orphan): Condition
-	SHF_GNU_MBIND on osabi.  Set output elf_gnu_osabi_mbind.
-
-2019-07-23  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/size-1.d,
-	* testsuite/ld-elf/size-1.s,
-	* testsuite/ld-elf/size-1.t: New test.
-	* testsuite/ld-elf/size-2.d,
-	* testsuite/ld-elf/size-2.s,
-	* testsuite/ld-elf/size-2.t: New test.
-	* testsuite/ld-scripts/size-1.d,
-	* testsuite/ld-scripts/size-1.s,
-	* testsuite/ld-scripts/size-1.t,
-	* testsuite/ld-scripts/size-2.s,
-	* testsuite/ld-scripts/size-2.d,
-	* testsuite/ld-scripts/size-2.t,
-	* testsuite/ld-scripts/size.exp: Delete.
-
-2019-07-22  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* ld/testsuite/ld-arm/cmse_main_sec_debug.d: Modify regexps to
-	allow for output from a arm-none-linux-gnueabihf target.
-
-2019-07-20  Alan Modra  <amodra@gmail.com>
-
-	PR 24827
-	* ldlex.l (comment): Check for 0 return from YY_INPUT, not EOF.
-
-2019-07-19  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/tlsgd.d,
-	* testsuite/ld-powerpc/tlsgd.s,
-	* testsuite/ld-powerpc/tlsie.d,
-	* testsuite/ld-powerpc/tlsie.s,
-	* testsuite/ld-powerpc/tlsld.d,
-	* testsuite/ld-powerpc/tlsld.s: New tests.
-	* testsuite/ld-powerpc/powerpc.exp: Run them.
-
-2019-07-19  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/tlsldopt.d: Rename from tlsld.d.
-	* testsuite/ld-powerpc/tlsldopt.s: Rename from tlsld.s.
-	* testsuite/ld-powerpc/tlsldopt32.d: Rename from tlsld32.d.
-	* testsuite/ld-powerpc/tlsldopt32.s: Rename from tlsld32.s.
-	* testsuite/ld-powerpc/powerpc.exp: Update.
-
-2019-07-19  Alan Modra  <amodra@gmail.com>
-
-	PR 24819
-	* testsuite/ld-elf/pr24819.d: xfail for genelf targets.
-
-2019-07-18  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24819
-	* emultempl/elf32.em (elf_orphan_compatible): Return FALSE for
-	member of output section group when doing a relocatable link.
-	* testsuite/ld-elf/pr24819.d: New file.
-	* testsuite/ld-elf/pr24819.s: Likewise.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/tlsso.r: Update.
-	* testsuite/ld-powerpc/tlsso32.g: Update.
-	* testsuite/ld-powerpc/tlsso32.r: Update.
-	* testsuite/ld-powerpc/tlstocso.r: Update.
-	* testsuite/ld-cris/tls-dso-dtpoffd2.d: Update.
-	* testsuite/ld-cris/tls-dso-dtpoffd4.d: Update.
-	* testsuite/ld-cris/tls-dso-tpoffgotcomm1.d: Update.
-	* testsuite/ld-cris/tls-gd-1.d: Update.
-	* testsuite/ld-cris/tls-gd-1h.d: Update.
-	* testsuite/ld-cris/tls-gd-2.d: Update.
-	* testsuite/ld-cris/tls-gd-2h.d: Update.
-	* testsuite/ld-cris/tls-ie-10.d: Update.
-	* testsuite/ld-cris/tls-ie-11.d: Update.
-	* testsuite/ld-cris/tls-ie-8.d: Update.
-	* testsuite/ld-cris/tls-ie-9.d: Update.
-	* testsuite/ld-cris/tls-js1.d: Update.
-	* testsuite/ld-cris/tls-ld-4.d: Update.
-	* testsuite/ld-cris/tls-ld-5.d: Update.
-	* testsuite/ld-cris/tls-ld-6.d: Update.
-	* testsuite/ld-cris/tls-ld-7.d: Update.
-	* testsuite/ld-cris/tls-ldgd-14.d: Update.
-	* testsuite/ld-cris/tls-ldgd-15.d: Update.
-	* testsuite/ld-cris/tls-ldgdx-14.d: Update.
-	* testsuite/ld-cris/tls-ldgdx-15.d: Update.
-	* testsuite/ld-cris/tls-local-54.d: Update.
-	* testsuite/ld-cris/tls-local-60.d: Update.
-	* testsuite/ld-cris/tls-local-61.d: Update.
-	* testsuite/ld-cris/tls-local-63.d: Update.
-	* testsuite/ld-cris/tls-local-64.d: Update.
-	* testsuite/ld-cris/tls-ok-30.d: Update.
-	* testsuite/ld-cris/tls-ok-32.d: Update.
-	* testsuite/ld-cris/tls-ok-34.d: Update.
-	* testsuite/ld-mips-elf/tls-multi-got-1.got: Update.
-	* testsuite/ld-mips-elf/tls-multi-got-1.r: Update.
-	* testsuite/ld-mips-elf/tlsdyn-pie-o32.d: Update.
-	* testsuite/ld-mips-elf/tlsdyn-pie-o32.got: Update.
-	* testsuite/ld-mips-elf/tlslib-o32-hidden.got: Update.
-	* testsuite/ld-mips-elf/tlslib-o32-ver.got: Update.
-	* testsuite/ld-mips-elf/tlslib-o32.got: Update.
-	* testsuite/ld-s390/tlspic.rd: Update.
-	* testsuite/ld-s390/tlspic_64.rd: Update.
-	* testsuite/ld-sparc/tlssunnopic32.rd: Update.
-	* testsuite/ld-sparc/tlssunnopic64.rd: Update.
-	* testsuite/ld-sparc/tlssunpic32.rd: Update.
-	* testsuite/ld-sparc/tlssunpic64.rd: Update.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	PR 24786
-	* ldlang.h (enum section_type): Add first_overlay_section.
-	* ldlang.c (lang_add_section): Adjust switch statement.
-	(map_input_to_output_sections): Likewise.
-	(lang_size_sections_1): Always set last_os for first overlay section.
-	(lang_leave_overlay): Set sectype to first_overlay_section.
-
-2019-07-08  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/callstub-1.d: Pass -melf64ppc to ld.
-	* testsuite/ld-powerpc/callstub-2.d: Likewise.
-
-2019-07-04  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/ld-elf/group9.s: Correct argument of .type.
-
-2019-07-02  Nick Clifton  <nickc@redhat.com>
-
-	PR 24753
-	* emultempl/aarch64elf.em (_aarch64_add_stub_section): Include the
-	LINKER_CREATED section flag when creating the stub section.
-
-2019-07-02  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* testsuite/ld-arm/arm-elf.exp: Add tests.
-	* testsuite/ld-arm/cmse_main.s: New test.
-	* testsuite/ld-arm/cmse_main_sec_debug.d: Likewise.
-	* testsuite/ld-arm/cmse_sec_debug.s: Likewise.
-
-2019-07-01  Nick Clifton  <nickc@redhat.com>
-
-	PR 23839
-	* testsuite/ld-arm/unwind-4.d: Adjust for corrected calculation of
-	exidx relocs.
-
-2019-06-28  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/callstub-1.d,
-	* testsuite/ld-powerpc/callstub-1.s: New test.
-	* testsuite/ld-powerpc/callstub-2.d,
-	* testsuite/ld-powerpc/callstub-2.s: New test.
-	* testsuite/ld-powerpc/powerpc.exp: Run them.
-
-2019-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* plugin.c (get_lto_kind, get_lto_resolution,
-	get_lto_visibility): Rename "index" to "idx".
-
-2019-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24721
-	* testsuite/ld-x86-64/x86-64.exp: Run PR ld/24721 tests.
-	* testsuite/ld-x86-64/pr24721-x32.d: New file.
-	* testsuite/ld-x86-64/pr24721.d: Likewise.
-	* testsuite/ld-x86-64/pr24721.map: Likewise.
-	* testsuite/ld-x86-64/pr24721a.s: Likewise.
-	* testsuite/ld-x86-64/pr24721b.s: Likewise.
-
-2019-06-23  Alan Modra  <amodra@gmail.com>
-
-	PR 24704
-	* testsuite/ld-powerpc/elfv2exe.d: Update.
-	* testsuite/ld-powerpc/elfv2so.d: Update.
-
-2019-06-14  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add emit-relocs-22 and -23.
-	* testsuite/ld-aarch64/emit-relocs-22.d: New test.
-	* testsuite/ld-aarch64/emit-relocs-22.s: New test.
-	* testsuite/ld-aarch64/emit-relocs-23.d: New test.
-	* testsuite/ld-aarch64/emit-relocs-23.s: New test.
-
-2019-06-14  Alan Modra  <amodra@gmail.com>
-
+	2020-01-29  Alan Modra  <amodra@gmail.com>
+	PR 25477
+	* ldelf.c (ldelf_check_ld_so_conf): Add prefix parameter and
+	correct concat.
+	(ldelf_after_open): Add prefix parameter.
+	* ldelf.h (ldelf_after_open): Update prototype.
+	* emultempl/elf.em (gld${EMULATION_NAME}_after_open): Pass $prefix
+	to ldelf_after_open.
+	* Makefile.am: Correct z80 dependencies.
 	* Makefile.in: Regenerate.
-	* configure: Regenerate.
 
-2019-06-14  Alan Modra  <amodra@gmail.com>
+	2020-01-28  Alan Modra  <amodra@gmail.com>
+	* ldexp.c (fold_name): Don't print bfd_link_hash_lookup failed
+	in first phase.
 
-	PR 24662
-	* testsuite/ld-alpha/tlsbin.rd: Update.
-	* testsuite/ld-alpha/tlsbinr.rd: Update.
-	* testsuite/ld-alpha/tlspic.rd: Update.
+	2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
+		    Alan Modra  <amodra@gmail.com>
+	PR ld/25458
+	* testsuite/ld-elf/pr25458.map: New file.
+	* testsuite/ld-elf/pr25458.rd: Likewise.
+	* testsuite/ld-elf/pr25458a.s: Likewise.
+	* testsuite/ld-elf/pr25458b.s: Likewise.
+	* testsuite/ld-elf/shared.exp: Run PR ld/25458 test.
 
-2019-06-07  Maciej W. Rozycki  <macro@wdc.com>
+2020-01-20  Nick Clifton  <nickc@redhat.com>
 
-	* ld.texi (Options): Also document `-rpath' option restrictions
-	in the description of the option itself.
-
-2019-06-06  Sudakshina Das  <sudi.das@arm.com>
-
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add new tests.
-	* testsuite/ld-aarch64/property-bti-pac4-a.d: New test.
-	* testsuite/ld-aarch64/property-bti-pac4-b.d: New test.
-	* testsuite/ld-aarch64/property-bti-pac4.s: New test.
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
 
-2019-06-06  Sudakshina Das  <sudi.das@arm.com>
+2020-01-18  Roland McGrath  <mcgrathr@google.com>
 
-	* NEWS: Update options names.
-	* emultempl/aarch64elf.em (OPTION_FORCE_BTI, OPTION_PAC_PLT): Remove.
-	(PARSE_AND_LIST_LONGOPTS): Remove force-bti and pac-plt.
-	(PARSE_AND_LIST_OPTIONS): Update to -z.
-	(PARSE_AND_LIST_ARGS_CASE_Z_AARCH64): New.
-	(PARSE_AND_LIST_ARGS_CASE_Z): Add PARSE_AND_LIST_ARGS_CASE_Z_AARCH64.
-	(PARSE_AND_LIST_ARGS_CASES): Move cases for these options.
-	* testsuite/ld-aarch64/bti-pac-plt-1.d: Update option.
-	* testsuite/ld-aarch64/bti-pac-plt-2.d: Likewise.
-	* testsuite/ld-aarch64/bti-plt-1.d: Likewise.
-	* testsuite/ld-aarch64/bti-plt-2.d: Likewise.
-	* testsuite/ld-aarch64/bti-plt-3.d: Likewise.
-	* testsuite/ld-aarch64/bti-plt-4.d: Likewise.
-	* testsuite/ld-aarch64/bti-plt-6.d: Likewise.
-	* testsuite/ld-aarch64/bti-plt-7.d: Likewise.
-	* testsuite/ld-aarch64/bti-warn.d: Likewise.
-	* testsuite/ld-aarch64/pac-plt-1.d: Likewise.
-	* testsuite/ld-aarch64/pac-plt-2.d: Likewise.
+	* testsuite/ld-x86-64/align-branch-1.d: Loosen instruction regexps
+	to admit whatever absolute address.  The label-relative address is
+	what the test needs to verify.
 
-2019-05-30  Nick Clifton  <nickc@redhat.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	PR 24627
-	* testsuite/ld-elf/ver_def.vd: Update expected output.
+	* configure: Regenerate.
+	* po/ld.pot: Regenerate.
 
-2019-05-30  Alan Modra  <amodra@gmail.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	PR 24596
-	* emulparams/m9s12zelf.sh (TEMPLATE_NAME): Set to generic.
-	(EXTRA_EM_FILE): Define to genelf.
-	* testsuite/lib/ld-lib.exp (uses_genelf): Add s12z.
+	Binutils 2.34 branch created.
 
-2019-05-30  Alan Modra  <amodra@gmail.com>
+2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
-	* testsuite/lib/ld-lib.exp (run_ld_link_tests): Support procedure
-	calls in optional "xfail" args.
-	(run_ld_link_exec_tests): Likewise.
-	(is_generic): New.
-	(uses_genelf): Rename from is_generic_elf.  Delete bogus semicolons.
-	* testsuite/ld-scripts/align.exp: Rename is_generic_elf call.
-	* testsuite/ld-elf/elf.exp: Use is_generic and uses_genelf.  Delete
-	xfail_implib var.
-	* testsuite/ld-elf/sec64k.exp: Use is_generic.
-	* testsuite/ld-elf/shared.exp: Likewise.
-	* testsuite/ld-discard/extern.d: Use is_generic in xfail.
-	* testsuite/ld-discard/start.d: Likewise.
-	* testsuite/ld-discard/static.d: Likewise.
-	* testsuite/ld-elf/attributes.d: Likewise.
-	* testsuite/ld-elf/group1.d: Likewise.
-	* testsuite/ld-elf/group3b.d: Likewise.
-	* testsuite/ld-elf/group8a.d: Likewise.
-	* testsuite/ld-elf/group8b.d: Likewise.
-	* testsuite/ld-elf/group9a.d: Likewise.
-	* testsuite/ld-elf/group9b.d: Likewise.
-	* testsuite/ld-elf/linkonce2.d: Likewise.
-	* testsuite/ld-elf/merge2.d: Likewise.
-	* testsuite/ld-elf/merge3.d: Likewise.
-	* testsuite/ld-elf/pr12851.d: Likewise.
-	* testsuite/ld-elf/pr12975.d: Likewise.
-	* testsuite/ld-elf/pr13177.d: Likewise.
-	* testsuite/ld-elf/pr13195.d: Likewise.
-	* testsuite/ld-elf/pr17550c.d: Likewise.
-	* testsuite/ld-elf/pr17550d.d: Likewise.
-	* testsuite/ld-elf/pr17615.d: Likewise.
-	* testsuite/ld-elf/pr21562a.d: Likewise.
-	* testsuite/ld-elf/pr21562b.d: Likewise.
-	* testsuite/ld-elf/pr21562c.d: Likewise.
-	* testsuite/ld-elf/pr21562d.d: Likewise.
-	* testsuite/ld-elf/pr21562i.d: Likewise.
-	* testsuite/ld-elf/pr21562j.d: Likewise.
-	* testsuite/ld-elf/pr21562k.d: Likewise.
-	* testsuite/ld-elf/pr21562l.d: Likewise.
-	* testsuite/ld-elf/pr21562m.d: Likewise.
-	* testsuite/ld-elf/pr21562n.d: Likewise.
-	* testsuite/ld-elf/pr22677.d: Likewise.
-	* testsuite/ld-elf/pr22836-1a.d: Likewise.
-	* testsuite/ld-elf/pr22836-1b.d: Likewise.
-	* testsuite/ld-elf/warn3.d: Likewise.
-	* testsuite/ld-elf/warn1.d: Likewise and xfail sparc solaris
-	targets rather than notarget.
-	* testsuite/ld-elf/compressed1d.d: Use uses_genelf in xfail.
-	* testsuite/ld-elf/orphan-10.d: Likewise.
-	* testsuite/ld-elf/orphan-9.d: Likewise.
-	* testsuite/ld-elf/orphan-region.d: Likewise.
-	* testsuite/ld-elf/orphan.d: Likewise.
-	* testsuite/ld-elf/orphan3.d: Likewise.
-	* testsuite/ld-elf/pr20528a.d: Likewise.
-	* testsuite/ld-elf/pr20528b.d: Likewise.
-	* testsuite/ld-elf/pr23658-1a.d: Likewise.
-	* testsuite/ld-elf/pr23658-1b.d: Likewise.
-	* testsuite/ld-elf/pr349.d: Likewise.
-	* testsuite/ld-elf/warn2.d: Likewise and xfail sparc solaris
-	targets rather than notarget.
-	* testsuite/ld-elf/merge.d: Correct ms1-*-* to mt-*-*.
+	* scripttempl/elf32msp430_3.sc: Remove.
 
-2019-05-28  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
-	* testsuite/ld-mips-elf/undefweak-overflow.s: Remove test case
-	for pcrel_hi/pcrel_lo.
-	* testsuite/ld-mips-elf/undefweak-overflow.d: Update to match.
-	* testsuite/ld-mips-elf/reloc-pcrel-r6.s: New test source.
-	* testsuite/ld-mips-elf/reloc-pcrel-r6.d: New test linker script.
-	* testsuite/ld-mips-elf/reloc-pcrel-r6.ld: New test.
-	* testsuite/ld-mips-elf/mips-elf.exp: Run the new test.
+	* scripttempl/elf32msp430.sc: Add input section rules for
+	.upper.{text,data,rodata,bss}.
+	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.
+	* testsuite/ld-msp430-elf/upper-input-sections.s: New test.
 
-2019-05-28  Alan Modra  <amodra@gmail.com>
+2020-01-15  Lars Brinkhoff  <lars@nocrew.org>
 
-	PR 24596
-	* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Check that
-	the output is coff before accessing coff tdata.
-	* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.
+	PR 20694
+	* temulparams/pdp11.sh (TARGET_PAGE_SIZE): Set to 8192.
 
-2019-05-28  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
-	* testsuite/ld-aarch64/variant_pcs-now.d: Use --hash-style=sysv.
-	* testsuite/ld-aarch64/variant_pcs-shared.d: Likewise.
+	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.
+	* testsuite/ld-msp430-elf/reloc-lo-430x.s: New test.
 
-2019-05-27  Alan Modra  <amodra@gmail.com>
+2020-01-15  Alan Modra  <amodra@gmail.com>
 
-	PR 24596
-	* emultempl/genelf.em (gld${EMULATION_NAME}_after_open): Set
-	BFS_KEEP on group signature symbol.
+	* testsuite/ld-powerpc/ambiguousv1b.d: Adjust expected output.
+	* testsuite/ld-powerpc/funref.s: Align func_tab.
+	* testsuite/ld-powerpc/funref2.s: Likewise.
+	* testsuite/ld-powerpc/funv1.s: Add dot symbols.
 
-2019-04-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+2020-01-14  Lili Cui <lili.cui@intel.com>
 
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add new tests.
-	* testsuite/ld-aarch64/variant_pcs-1.s: New asm for tests.
-	* testsuite/ld-aarch64/variant_pcs-2.s: New asm for tests.
-	* testsuite/ld-aarch64/variant_pcs-now.d: New test.
-	* testsuite/ld-aarch64/variant_pcs-r.d: New test.
-	* testsuite/ld-aarch64/variant_pcs-shared.d: New test.
-	* testsuite/ld-aarch64/variant_pcs.ld: New linker script for tests.
+	* testsuite/ld-i386/align-branch-1.d: Updated for i686-pc-elf.
 
-2019-05-24  Alan Modra  <amodra@gmail.com>
+2020-01-13  Alan Modra  <amodra@gmail.com>
 
 	* po/BLD-POTFILES.in: Regenerate.
 
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/notoc2.d,
-	* testsuite/ld-powerpc/notoc2.s: New test.
-	* testsuite/ld-powerpc/powerpc.exp: Run it.
-
-2019-05-24  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/pcrelopt.s,
-	* testsuite/ld-powerpc/pcrelopt.d,
-	* testsuite/ld-powerpc/pcrelopt.sec: New test.
-	* testsuite/ld-powerpc/powerpc.exp: Run it.
-
-2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* Makefile.am (ALL_64_EMULATION_SOURCES): Add eelf64bpf.c.
-	* Makefile.in (prefix): Regenerate.
-	* configure.tgt (targ_extra_ofiles): Add case for bpf-*-* targets.
-	* emulparams/elf64bpf.sh: New file.
-	* testsuite/lib/ld-lib.exp (check_gc_sections_available): Add
-	bpf-*-* to the list of targets not supporting gc-sections.
-	* testsuite/ld-bpf/bar.s: New file.
-	* testsuite/ld-bpf/jump-1.d: Likewise.
-	* testsuite/ld-bpf/foo.s: Likewise.
-	* testsuite/ld-bpf/call-1.d: Likewise.
-	* testsuite/ld-bpf/bpf.exp: Likewise.
-	* testsuite/ld-bpf/baz.s: Likewise.
-
-2019-05-23  Alan Modra  <amodra@gmail.com>
-
-	PR 24576
-	* ldfile.c (enum script_open_style): New.
-	(struct script_name_list): New.
-	(ldfile_open_command_file_1): Take a script_open_style param
-	rather than booleans.  Adjust callers.  Only fail when -T or
-	default -T script is invoked twice.
-	(ldfile_try_open_bfd): Revert last change.
-
-2019-05-22  Julius Werner  <jwerner@chromium.org>
-	    Nick Clifton  <nickc@redhat.com>
-
-	PR 24576
-	* ld/ldfile.c: (ldfile_open_command_file_1): Add new parameter -
-	is_script.  If true check that the file has not already been
-	parsed as a linker script.
-	(ldfile_open_script_file): New function.
-	(ldfile_try_open_bfd): Use the new function in place of
-	ldfile_open_command_line.
-	* ldmain.c (main): Likewise.
-	* lexsup.c (parse_args): Use the new function for opening linker
-	scripts with the -T option.
-	* ldfile.h (ldfile_open_script_file): Add prototype.
-
-2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* testsuite/ld-mips-elf/pic-reloc-5.s: Add tests for
-	%tprel_hi and %tprel_lo relocations.
-	* testsuite/ld-mips-elf/pic-reloc-6.s: Likewise.
-	* testsuite/ld-mips-elf/pic-reloc-5.d: Update accordingly.
-	* testsuite/ld-mips-elf/pic-reloc-6.d: Likewise.
-	* testsuite/ld-mips-elf/pic-reloc-tls.ld: New test linker
-	script file.
-
-2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* testsuite/ld-mips-elf/pic-reloc-5.d: New test.
-	* testsuite/ld-mips-elf/pic-reloc-6.d: New test.
-	* testsuite/ld-mips-elf/pic-reloc-7.d: New test.
-	* testsuite/ld-mips-elf/pic-reloc-5.s: New test source.
-	* testsuite/ld-mips-elf/pic-reloc-6.s: New test source.
-	* testsuite/ld-mips-elf/pic-reloc-7.s: New test source.
-	* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.
-
-2019-05-21  Matthew Fortune  <matthew.fortune@mips.com>
-	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* emultempl/mipself.em (compact_branches): New static variable.
-	(mips_create_output_section_statements): Call
-	_bfd_mips_elf_compact_branches.
-	(PARSE_AND_LIST_PROLOGUE): Add OPTION_COMPACT_BRANCHES and
-	OPTION_NO_COMPACT_BRANCHES.
-	(PARSE_AND_LIST_LONGOPTS): Add compact-branches,
-	no-compact-branches.
-	(PARSE_AND_LIST_OPTIONS): Add --compact-branches,
-	--no-compact-branches.
-	(PARSE_AND_LIST_ARGS_CASES): Handle the above.
-	* ld.texinfo: Document --compact-branches, --no-compact-branches.
-	* testsuite/ld-mips-elf/pic-and-nonpic-1-r6.dd: New test.
-	* testsuite/ld-mips-elf/pic-and-nonpic-1-r6.nd: New test.
-	* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.dd: New test.
-	* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.gd: New test.
-	* testsuite/ld-mips-elf/pic-and-nonpic-1a-r6.s: New test source.
-	* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.s: New test source.
-	* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.
-
-2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	* testsuite/ld-arm/arm-elf.exp: Add tests
-	* testsuite/ld-arm/bfs-0.s: New test.
-	* testsuite/ld-arm/bfs-1.s: New test.
-	* testsuite/ld-arm/branch-futures.d: New test.
-
-2019-05-21  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/24373
-	* emultempl/aarch64elf.em (PARSE_AND_LIST_LONGOPTS): Add optional args
-	to flags.
-	* NEWS: Add changes to flag.
-	(PARSE_AND_LIST_OPTIONS): Update help descriptions.
-	(PARSE_AND_LIST_ARGS_CASES): Add new options to parser.
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add new run_dump_tests.
-	* testsuite/ld-aarch64/erratum843419-adr.d: New test.
-	* testsuite/ld-aarch64/erratum843419-adrp.d: New test.
-	* testsuite/ld-aarch64/erratum843419-far-adr.d: New test.
-	* testsuite/ld-aarch64/erratum843419-far-full.d: New test.
-	* testsuite/ld-aarch64/erratum843419-far.s: New test.
-	* testsuite/ld-aarch64/erratum843419-full.d: New test.
-	* testsuite/ld-aarch64/erratum843419-near.s: New test.
-	* testsuite/ld-aarch64/erratum843419-no-args.d: New test.
-
-2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
-
-	PR ld/24571
-	* ld/testsuite/ld-avr/relax-insn-at-range-boundary.d: New test.
-	* ld/testsuite/ld-avr/relax-insn-at-range-boundary.s: New test.
-
-2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
-
-	PR ld/24564
-	* testsuite/ld-avr/wraparound-range-boundary.d: New test.
-	* testsuite/ld-avr/wraparound-range-boundary.s: New test.
-
-2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	PR 14798
-	* testsuite/ld-mips-elf/reloc-6a.s: Specify .text section for
-	global code symbols.
-	* testsuite/ld-mips-elf/reloc-6b.s: Likewise.
-
-2019-05-17  Alan Modra  <amodra@gmail.com>
-
-	PR 24567
-	* plugin.c (plugin_notice): Do not let a common symbol override
-	a non-common definition in IR.
-
-2019-05-09  Dimitar Dimitrov  <dimitar@dinux.eu>
-
-	* scripttempl/pru.sc (__init_array_begin, __init_array_begin):
-	Rename.
-
-2019-05-08  Pekka Seppänen  <pexu@sourceware.mail.kapsi.fi>
-
-	PR 24536
-	* ldbuildid.c (generate_build_id): Cast return value from
-	GetProcAddress in order to avoid a compile time warning.
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
 
-2019-05-06  Alan Modra  <amodra@gmail.com>
+	* testsuite/ld-arc/relax-local-pic.d: Improve matching patterns.
 
-	* testsuite/ld-undefined/weak-undef.exp: Don't xfail pj.
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
 
-2019-05-04  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-scripts/fill.d: Don't xfail m32c
-	* testsuite/ld-scripts/fill16.d: Likewise.
-
-2019-05-04  Alan Modra  <amodra@gmail.com>
-
-	PR 24511
-	* testsuite/ld-elf/pr14156a.d: Allow for .init/.fini being a
-	data section on hppa64.
-	* testsuite/ld-elf/pr14156b.d: Likewise.
-	* testsuite/ld-scripts/pr18963.t: Map standard sections to set
-	output section flags.
-	* testsuite/ld-scripts/sane1.t: Likewise.
-	* testsuite/ld-elf/init-fini-arrays.s: Reference __init_array_start
-	and __fini_array_start.  Define __start et al.
-	* testsuite/ld-elf/pr24511.d: New test.
-
-2019-04-30  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/elfv2exe.d: Update.
-	* testsuite/ld-powerpc/elfv2so.d: Update.
-	* testsuite/ld-powerpc/tocopt.d: Update.
-	* testsuite/ld-powerpc/tocopt.s: Update.
-	* testsuite/ld-powerpc/tocopt5.d: Update.
-	* testsuite/ld-powerpc/tocopt5.s: Update.
-	* testsuite/ld-powerpc/tocopt7.d: Update.
-	* testsuite/ld-powerpc/tocopt7.s: Update.
-	* testsuite/ld-powerpc/tocopt8.d: Update.
-	* testsuite/ld-powerpc/tocopt8.s: Update.
-
-2019-04-30  Alan Modra  <amodra@gmail.com>
-
-	* ld.texi (How GNU properties are merged): Avoid pod2man error.
-	Correct example.
-
-2019-04-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24486
-	* testsuite/ld-plugin/lto.exp: Run PR ld/24486 tests.
-	* testsuite/ld-plugin/pr24486a.c: New file.
-	* testsuite/ld-plugin/pr24486b.c: Likewise.
-	* testsuite/ld-plugin/pr24486c.c: Likewise.
-
-2019-04-26  Nick Clifton  <nickc@redhat.com>
-
-	* po/ru.po: Updated Russian translation.
-
-2019-04-26  Christopher Yeleighton  <giecrilj@stegny.2a.pl>
-
-	* ld.texi: Properly hyphenate the word "specific".
-
-2019-04-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24406
-	* ld.texi: Remove LTO warning from --wrap.
-	* plugin.c (get_symbols): Update resolution for wrapper and
-	wrapped symbols.
-	* testsuite/ld-plugin/lto.exp: Run ld/24406 tests.
-	* testsuite/ld-plugin/pr24406-1.c: New file.
-	* testsuite/ld-plugin/pr24406-2a.c: Likewise.
-	* testsuite/ld-plugin/pr24406-2b.c: Likewise.
-
-2019-04-25  Sudakshina Das  <sudi.das@arm.com>
-
-	* testsuite/ld-aarch64/bti-pac-plt-1.d: Update.
-	* testsuite/ld-aarch64/bti-pac-plt-2.d: Update.
-	* testsuite/ld-aarch64/bti-plt-1.d: Update.
-	* testsuite/ld-aarch64/bti-plt-3.d: Update.
-	* testsuite/ld-aarch64/bti-plt-5.d: Update.
-	* testsuite/ld-aarch64/pac-plt-1.d: Update.
-	* testsuite/ld-aarch64/pac-plt-2.d: Update.
-
-2019-04-24  Sandra Loosemore  <sandra@codesourcery.com>
-
-	* testsuite/config/default.exp: Use [check_compiler_available]
-	instead of [which $CC].
-	* testsuite/ld-auto-import/auto-import.exp: Likewise.
-	* testsuite/ld-cygwin/exe-export.exp: Likewise.
-	* testsuite/ld-elf/audit.exp: Likewise.
-	* testsuite/ld-elf/compress.exp: Likewise.
-	* testsuite/ld-elf/dwarf.exp: Likewise.
-	* testsuite/ld-elf/elf.exp: Likewise.
-	* testsuite/ld-elf/indirect.exp: Likewise.
-	* testsuite/ld-elf/linux-x86.exp: Likewise.
-	* testsuite/ld-elf/shared.exp: Likewise.
-	* testsuite/ld-elf/tls.exp: Likewise.
-	* testsuite/ld-elf/wrap.exp: Likewise.
-	* testsuite/ld-elfcomm/elfcomm.exp: Likewise.
-	* testsuite/ld-elfvers/vers.exp: Likewise.
-	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
-	* testsuite/ld-elfweak/elfweak.exp: Likewise.
-	* testsuite/ld-gc/gc.exp: Likewise.
-	* testsuite/ld-i386/i386.exp: Likewise.
-	* testsuite/ld-i386/no-plt.exp: Likewise.
-	* testsuite/ld-i386/tls.exp: Likewise.
-	* testsuite/ld-ifunc/ifunc.exp: Likewise.
-	* testsuite/ld-mn10300/mn10300.exp: Likewise.
-	* testsuite/ld-pe/pe-compile.exp: Likewise.
-	* testsuite/ld-pe/pe-run.exp: Likewise.
-	* testsuite/ld-pe/pe-run2.exp: Likewise.
-	* testsuite/ld-pie/pie.exp: Likewise.
-	* testsuite/ld-plugin/lto.exp: Likewise.
-	* testsuite/ld-plugin/plugin.exp: Likewise.
-	* testsuite/ld-scripts/crossref.exp: Likewise.
-	* testsuite/ld-sh/sh.exp: Likewise.
-	* testsuite/ld-shared/shared.exp: Likewise.
-	* testsuite/ld-size/size.exp: Likewise.
-	* testsuite/ld-srec/srec.exp: Likewise.
-	* testsuite/ld-undefined/undefined.exp: Likewise.
-	* testsuite/ld-unique/unique.exp: Likewise.
-	* testsuite/ld-x86-64/mpx.exp: Likewise.
-	* testsuite/ld-x86-64/no-plt.exp: Likewise.
-	* testsuite/ld-x86-64/tls.exp: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/lib/ld-lib.exp (run_ld_link_exec_tests): Call
-	check_compiler_available before trying to use the compiler.
-	(run_cc_link_tests): Likewise.
-	(check_compiler_available): New.  Use it instead of [which $CC].
-
-2019-04-23  Alan Modra  <amodra@gmail.com>
-
-	* Makefile.am (GENDEPDIR): New var, used..
-	(GENSCRIPTS): ..here.
-	* Makefile.in: Regenerate.
-	* genscripts.sh: Test for $DEPDIR set before every use.
-
-2019-04-22  Matthew Fortune  <matthew.fortune@mips.com>
-
-	* testsuite/ld-mips-elf/mips-elf-flags.exp: Fix expected ASEs
-	for M5100.
-
-2019-04-19  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-gc/skip-map-discarded.s: Add section attributes.
-	* testsuite/lib/ld-lib.exp (check_gc_sections_available): Add
-	s12z to list of targets not supporting --gc-sections.
-
-2019-04-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-i386/i386.exp: Run pr18801a and pr18801b instead
-	of pr18801.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-i386/pr18801.d: Removed.
-	* testsuite/ld-x86-64/pr18801.d: Likewise.
-	* testsuite/ld-i386/pr18801a.d: New file.
-	* testsuite/ld-i386/pr18801b.d: Likewise.
-	* testsuite/ld-x86-64/pr18801a.d: Likewise.
-	* testsuite/ld-x86-64/pr18801b.d: Likewise.
-	* testsuite/ld-x86-64/pie2.d: Suggest -fPIE instead of -fPIC.
-	* testsuite/ld-x86-64/pie2.d: Likewise.
-	* testsuite/ld-x86-64/pr19719.d: Likewise.
-	* testsuite/ld-x86-64/pr19807-2a.d: Likewise.
-	* testsuite/ld-x86-64/pr19969.d: Likewise.
-	* testsuite/ld-x86-64/pr21997-1a.err: Likewise.
-	* testsuite/ld-x86-64/pr21997-1b.err: Likewise.
-	* testsuite/ld-x86-64/pr22001-1a.err: Likewise.
-	* testsuite/ld-x86-64/pr22001-1b.err: Likewise.
-	* testsuite/ld-x86-64/pr22791-1.err: Likewise.
-
-2019-04-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24458
-	* testsuite/ld-x86-64/x86-64.exp: Run PR ld/24458 tests.
-	* testsuite/ld-x86-64/pr24458.s: New file.
-	* testsuite/ld-x86-64/pr24458a-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24458a.d: Likewise.
-	* testsuite/ld-x86-64/pr24458b-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24458b.d: Likewise.
-	* testsuite/ld-x86-64/pr24458c-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24458c.d: Likewise.
-
-2019-04-17  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* config/tc-msp430.c (msp430_make_init_symbols): Define __crt0_init_bss
-	symbol when .lower.bss or .either.bss sections exist.
-	Define __crt0_movedata when .lower.data or .either.data sections exist.
-	* testsuite/gas/msp430/either-data-bss-sym.d: New test.
-	* testsuite/gas/msp430/low-data-bss-sym.d: New test.
-	* testsuite/gas/msp430/either-data-bss-sym.s: New test source.
-	* testsuite/gas/msp430/low-data-bss-sym.s: New test source.
-	* testsuite/gas/msp430/msp430.exp: Run new tests.
-	Enable large code model when running -mdata-region={upper,either}
-	tests.
-
-2019-04-16  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-scripts/pr20302.d: Don't run for ns32k-*-*.
-	* testsuite/ld-scripts/section-match-1.d: Likewise.
-	* testsuite/ld-undefined/require-defined.exp: Likewise.
-
-2019-04-15  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* testsuite/ld-gc/gc.exp: Skip print-map-discarded test for non-ELF
-	targets.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* testsuite/ld-arm/bfcsel.s: New.
-	* testsuite/ld-arm/bfcsel.d: New.
-	* testsuite/ld-arm/arm-elf.exp: Add above test.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* testsuite/ld-arm/bfl.s: New.
-	* testsuite/ld-arm/bfl.d: New.
-	* testsuite/ld-arm/arm-elf.exp: Add above test.
-
-2019-04-15  Sudakshina Das  <sudi.das@arm.com>
-
-	* testsuite/ld-arm/bf.s: New.
-	* testsuite/ld-arm/bf.d: New.
-	* testsuite/ld-arm/arm-elf.exp: Add above test.
-
-2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
-
-	* testsuite/ld-arm/attr-merge-13.attr: New test.
-	* testsuite/ld-arm/attr-merge-13a.s: New test.
-	* testsuite/ld-arm/attr-merge-13b.s: New test.
-
-2019-04-13  Alan Modra  <amodra@gmail.com>
-
-	* Makefile.am (GENSCRIPTS): Pass LIB_PATH as a parameter.  Add
-	DEPDIR parameter.
-	(ELF_DEPS, ELF_GEN_DEPS, ELF_X86_DEPS): Delete.
-	(ALL_EMULATION_SOURCES, ALL_64_EMULATION_SOURCES): Depend on
-	$GEN_DEPENDS.
-	(e*.c): Delete all dependencies, instead include dependencies
-	from $DEPDIR/*.Pc.
-	* Makefile.in: Regenerate.
-	* configure.ac (source_sh): Define and use function.
-	* configure: Regenerate.
-	* emulparams/aarch64cloudabib.sh, * emulparams/aarch64elf32b.sh,
-	* emulparams/aarch64elfb.sh, * emulparams/aarch64fbsdb.sh,
-	* emulparams/aarch64linux32b.sh, * emulparams/aarch64linuxb.sh,
-	* emulparams/arcelf.sh, * emulparams/arcelf_prof.sh,
-	* emulparams/arclinux.sh, * emulparams/arclinux_nps.sh,
-	* emulparams/arclinux_prof.sh, * emulparams/arcv2elf.sh,
-	* emulparams/arcv2elfx.sh, * emulparams/armelf_fbsd.sh,
-	* emulparams/armelf_linux_eabi.sh,
-	* emulparams/armelf_linux_fdpiceabi.sh,
-	* emulparams/armelf_nacl.sh, * emulparams/armelf_nbsd.sh,
-	* emulparams/armelf_vxworks.sh, * emulparams/armelfb.sh,
-	* emulparams/armelfb_fbsd.sh, * emulparams/armelfb_fuchsia.sh,
-	* emulparams/armelfb_linux.sh, * emulparams/armelfb_linux_eabi.sh,
-	* emulparams/armelfb_linux_fdpiceabi.sh,
-	* emulparams/armelfb_nacl.sh, * emulparams/armelfb_nbsd.sh,
-	* emulparams/armsymbian.sh, * emulparams/cskyelf_linux.sh,
-	* emulparams/elf32_sparc_sol2.sh,
-	* emulparams/elf32_sparc_vxworks.sh, * emulparams/elf32_tic6x_be.sh,
-	* emulparams/elf32_tic6x_elf_be.sh,
-	* emulparams/elf32_tic6x_elf_le.sh,
-	* emulparams/elf32_tic6x_linux_be.sh,
-	* emulparams/elf32_tic6x_linux_le.sh,
-	* emulparams/elf32_x86_64.sh, * emulparams/elf32_x86_64_nacl.sh,
-	* emulparams/elf32b4300.sh, * emulparams/elf32bfinfd.sh,
-	* emulparams/elf32bmipn32.sh, * emulparams/elf32bsmip.sh,
-	* emulparams/elf32btsmip.sh, * emulparams/elf32btsmip_fbsd.sh,
-	* emulparams/elf32btsmipn32.sh, * emulparams/elf32btsmipn32_fbsd.sh,
-	* emulparams/elf32ebmip.sh, * emulparams/elf32ebmipvxworks.sh,
-	* emulparams/elf32elmip.sh, * emulparams/elf32elmipvxworks.sh,
-	* emulparams/elf32frvfd.sh, * emulparams/elf32l4300.sh,
-	* emulparams/elf32lm32fd.sh, * emulparams/elf32lmip.sh,
-	* emulparams/elf32lppc.sh, * emulparams/elf32lppclinux.sh,
-	* emulparams/elf32lppcnto.sh, * emulparams/elf32lppcsim.sh,
-	* emulparams/elf32lr5900.sh, * emulparams/elf32lr5900n32.sh,
-	* emulparams/elf32lriscv.sh, * emulparams/elf32lriscv_ilp32.sh,
-	* emulparams/elf32lriscv_ilp32f.sh, * emulparams/elf32lsmip.sh,
-	* emulparams/elf32ltsmip.sh, * emulparams/elf32ltsmip_fbsd.sh,
-	* emulparams/elf32ltsmipn32.sh, * emulparams/elf32ltsmipn32_fbsd.sh,
-	* emulparams/elf32microblazeel.sh, * emulparams/elf32or1k_linux.sh,
-	* emulparams/elf32ppc.sh, * emulparams/elf32ppc_fbsd.sh,
-	* emulparams/elf32ppccommon.sh, * emulparams/elf32ppclinux.sh,
-	* emulparams/elf32ppcnto.sh, * emulparams/elf32ppcsim.sh,
-	* emulparams/elf32ppcvxworks.sh, * emulparams/elf32ppcwindiss.sh,
-	* emulparams/elf32tilegx_be.sh, * emulparams/elf64_ia64_fbsd.sh,
-	* emulparams/elf64_sparc_fbsd.sh, * emulparams/elf64_sparc_sol2.sh,
-	* emulparams/elf64alpha_fbsd.sh, * emulparams/elf64alpha_nbsd.sh,
-	* emulparams/elf64bmip-defs.sh, * emulparams/elf64bmip.sh,
-	* emulparams/elf64btsmip.sh, * emulparams/elf64btsmip_fbsd.sh,
-	* emulparams/elf64lppc.sh, * emulparams/elf64lriscv-defs.sh,
-	* emulparams/elf64lriscv.sh, * emulparams/elf64lriscv_lp64.sh,
-	* emulparams/elf64lriscv_lp64f.sh, * emulparams/elf64ltsmip.sh,
-	* emulparams/elf64ltsmip_fbsd.sh, * emulparams/elf64ppc.sh,
-	* emulparams/elf64ppc_fbsd.sh, * emulparams/elf64rdos.sh,
-	* emulparams/elf64tilegx_be.sh, * emulparams/elf_i386.sh,
-	* emulparams/elf_i386_be.sh, * emulparams/elf_i386_fbsd.sh,
-	* emulparams/elf_i386_ldso.sh, * emulparams/elf_i386_nacl.sh,
-	* emulparams/elf_i386_sol2.sh, * emulparams/elf_i386_vxworks.sh,
-	* emulparams/elf_iamcu.sh, * emulparams/elf_k1om.sh,
-	* emulparams/elf_k1om_fbsd.sh, * emulparams/elf_l1om.sh,
-	* emulparams/elf_l1om_fbsd.sh, * emulparams/elf_x86_64.sh,
-	* emulparams/elf_x86_64_cloudabi.sh,
-	* emulparams/elf_x86_64_fbsd.sh, * emulparams/elf_x86_64_nacl.sh,
-	* emulparams/elf_x86_64_sol2.sh, * emulparams/h8300helf.sh,
-	* emulparams/h8300helf_linux.sh, * emulparams/h8300hnelf.sh,
-	* emulparams/h8300self.sh, * emulparams/h8300self_linux.sh,
-	* emulparams/h8300snelf.sh, * emulparams/h8300sxelf.sh,
-	* emulparams/h8300sxelf_linux.sh, * emulparams/h8300sxnelf.sh,
-	* emulparams/hppanbsd.sh, * emulparams/hppaobsd.sh,
-	* emulparams/m32rlelf.sh, * emulparams/m32rlelf_linux.sh,
-	* emulparams/m68kelfnbsd.sh, * emulparams/mn10300.sh,
-	* emulparams/msp430X.sh, * emulparams/nds32belf.sh,
-	* emulparams/nds32belf16m.sh, * emulparams/nds32belf_linux.sh,
-	* emulparams/pjlelf.sh, * emulparams/ppclynx.sh,
-	* emulparams/score7_elf.sh, * emulparams/shelf_fd.sh,
-	* emulparams/shelf_linux.sh, * emulparams/shelf_nbsd.sh,
-	* emulparams/shelf_uclinux.sh, * emulparams/shelf_vxworks.sh,
-	* emulparams/shl.sh, * emulparams/shlelf.sh,
-	* emulparams/shlelf_fd.sh, * emulparams/shlelf_nbsd.sh,
-	* emulparams/shlelf_vxworks.sh: Use source_sh.
-	* genscripts.sh: Adjust for changed parameters.  Emit dependencies
-	for e*.c to .deps/*.Pc.
-	(source_sh): New function, use it throughout to source scripts.
-	* genscrba.sh (source_em): Use source_sh.
-
-2019-04-13  Alan Modra  <amodra@gmail.com>
-
-	* configure.ac (TDIRS): Build up tdirs in this variable and
-	AC_SUBST, also using AM_SUBST_NOTMAKE.
-	* configure: Regenerate.
-	* Makefile.am (DISTCLEANFILES): Remove tdirs.
+	* Makefile.am: Remove earcelf_prof.c and earclinux_prof.c
+	emulations.
+	* configure.tgt: Likewise.
 	* Makefile.in: Regenerate.
-
-2019-04-12  Nick Clifton  <nickc@redhat.com>
-
-	PR 24450
-	* ld.texi (Output Section Attributes): Add ALIGN_WITH_INPUT to
-	example of section attributes.
-
-2019-04-11  Faraz Shahbazker  <fshahbazker@wavecomp.com>
-
-	* NEWS: Mention new option --no-print-map-discarded.
-	* ld.h (ld_config_type) <print_map_discarded>: New field.
-	* ldlang.c (lang_map): Conditionally output discarded sections
-	in map files based on configuration option.
-	* ldlex.h (option_values) <OPTION_PRINT_MAP_DISCARDED,
-	OPTION_NO_PRINT_MAP_DISCARDED>: New.
-	* ldmain.c (main): Enabled print_map_discarded by default.
-	* lexsup.c (ld_options): Add new command-line options.
-	(parse_args) <OPTION_NO_PRINT_MAP_DISCARDED,
-	OPTION_PRINT_MAP_DISCARDED>: New cases.
-	* ld.texi: Document new options.
-	* testsuite/ld-gc/gc.exp: Add new test.
-	* testsuite/ld-gc/skip-map-discarded.s: New file.
-	* testsuite/ld-gc/skip-map-discarded.d: New file.
-	* testsuite/ld-gc/skip-map-discarded.map: New file.
-
-2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* ld.texi: Document -z cet-report=[none|warning|error].
-	* emulparams/cet.sh: Add -z cet-report=[none|warning|error].
-	* testsuite/ld-i386/i386.exp: Run -z cet-report=[warning|error]
-	tests.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-i386/property-x86-cet1.d: New file.
-	* testsuite/ld-i386/property-x86-cet2a.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet2b.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet3a.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet3b.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet4a.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet4b.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet5a.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet5b.d: Likewise.
-	* testsuite/ld-i386/property-x86-cet6.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet.s: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet1-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet1.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet2a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet2a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet2b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet2b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet3a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet3a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet3b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet3b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet4a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet4a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet4b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet4b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet5a-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet5a.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet5b-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet5b.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet6-x32.d: Likewise.
-	* testsuite/ld-x86-64/property-x86-cet6.d: Likewise.
-
-2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/config/default.exp (STATIC_PIE_LDFLAGS): New.  Set
-	to "-static-pie" if target compiler supports it.
-	* testsuite/ld-elf/elf.exp: Run -static-pie tests if
-	$STATIC_PIE_LDFLAGS isn't empty.
-	* testsuite/ld-ifunc/ifunc.exp: Likewise.
-
-2019-04-11  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/24302
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add new test.
-	* testsuite/ld-aarch64/tls-relax-gdesc-le-now.d: New test.
-
-2019-04-10  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* scripttempl/elf.sc (CREATE_PIC): New.  Set for CREATE_SHLIB or
-	CREATE_PIE.
-	(__rel_iplt_start): Don't define for CREATE_PIC.
-	(__rel_iplt_end): Likewise.
-	(__rela_iplt_start): Likewise.
-	(__rela_iplt_end): Likewise.
-
-2019-04-10  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/shared.exp: Don't xfail PR ld/20995 for
-	powerpc-nto.
-
-2019-04-10  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/cskyelf.em (csk_elf_before_parse): New function,
-	setting use_branch_stub false for linux.
-	(csky_elf_create_output_section_statements): Do emit this
-	function and all others in the file for linux, plus the branch
-	option control.  Disable branch stubs when non-ELF.
-
-2019-04-10  Alan Modra  <amodra@gmail.com>
-
-	* Makefile.am (eskyelf.c, eskyelf_linux.c): Depend on cskyelf.em.
-	(ecskyelf_linux.c): Depend on cskyelf.sh.
-	(eelf32microblazeel.c): Depend on elf32microblaze.sh.
+	* emulparams/arcelf_prof.sh: Remove file.
+	* emulparams/arclinux_prof.sh: Likewise.
+
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
+
+	* scripttempl/elfarcv2.sc : Allow interrupt vector table to be
+	located at an arbitrary address.  Use DWARF.sc file.
+	* scripttempl/elfarc.sc: Use DWARF.sc file.
+
+2020-01-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-mips-elf/eh-frame5.s,
+	* testsuite/ld-mips-elf/ehdr_start-new.s,
+	* testsuite/ld-mips-elf/ehdr_start-o32.s,
+	* testsuite/ld-mips-elf/mips16-call-global-1.s,
+	* testsuite/ld-mips-elf/mips16-intermix-1.s,
+	* testsuite/ld-mips-elf/mips16-pic-1b.s,
+	* testsuite/ld-mips-elf/mips16-pic-4c.s,
+	* testsuite/ld-mips-elf/no-shared-1-n64.s,
+	* testsuite/ld-mips-elf/no-shared-1-o32.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-1b-micromips.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-1b.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-2a.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-3b.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-4b.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-5a.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-n32c.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-n64c.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-o32c.s,
+	* testsuite/ld-mips-elf/pie.s,
+	* testsuite/ld-mips-elf/relax-jalr.s: Revert 2019-12-17 change.
+
+2020-01-06  Nick Clifton  <nickc@redhat.com>
+
+	PR 25327
+	* testsuite/ld-elf/shared.exp: Add -fcommon option to compiler
+	command line when building libcomm1.o and pr13250 tests.
+	* testsuite/ld-plugin/lto.exp: Likewise for pr20267 tests.
+
+2020-01-06  Nick Clifton  <nickc@redhat.com>
+
+	PR 25326
+	* testsuite/ld-elf/shared.exp: Add -fcommon option to compiler
+	command line when building pr19579 binaries.
+
+2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
+
+	* emultempl/pe.em: Add new option --enable-reloc-section.
+	* emultempl/pep.em: Likewise.
+	* ld.texi: Document --enable-reloc-section.
+	* pe-dll.c (pe_dll_build_sections): Use pe_dll_enable_reloc_section.
+	(pe_dll_fill_sections): Simplify by calling pe_exe_fill_sections.
+	* pe-dll.h: Add extern declaration of option flag.
+	* pep-dll.c (pe_dll_enable_reloc_section):
+	Add alias define for pep_dll_enable_reloc_section.
+	* pep-dll.h: Add extern declaration of option flag.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* Makefile.am: Add new target z80-elf
+	* configure.tgt: Likewise.
 	* Makefile.in: Regenerate.
-	* emulparams/cskyelf.sh: Comment regarding cskelf_linux.sh.
-	(PAGE_SIZE): Don't define.
-	* emulparams/cskyelf_linux.sh: Source sckyelf.sh, leaving just
-	the differing variable defs/undefs.
-	* emulparams/elf32mcore.sh (PAGE_SIZE): Don't define.
-	* emulparams/elf32microblaze.sh: Comment re. elf32microblazeel.sh.
-	(OUTPUT_FORMAT): Use BIG_OUTPUT_FORMAT.
-	(PAGE_SIZE): Don't define.
-	* emulparams/elf32microblazeel.sh: Source elf32microblaze.sh,
-	leaving just the differing OUTPUT_FORMAT.
-
-2019-04-10  Alan Modra  <amodra@gmail.com>
-
-	* po/BLD-POTFILES.in: Regenerate.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/shared.exp: XFAIL PR ld/20995 tests for
-	lynxos and nto targets.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* Makefile.am (ALL_EMULATION_SOURCES): Remove eelf_i386_chaos.c.
-	(eelf_i386_chaos.c): Removed.
-	* Makefile.in: Regenerated.
-	* configure.tgt: Remove i[3-7]86-*-kaos*.
-	* emulparams/elf_i386_chaos.sh: Removed.
-
-2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* emulparams/elf_i386_be.sh (EXTRA_EM_FILE): New.
-	* emulparams/i386moss.sh (EXTRA_EM_FILE): Likewise.
-
-2019-04-08  Alan Modra  <amodra@gmail.com>
-
-	* emulparams/elf64rdos.sh (EXTRA_EM_FILE): Define.
-	* emulparams/i386lynx.sh (EXTRA_EM_FILE): Define.
-	* emulparams/i386nto.sh (EXTRA_EM_FILE): Define.
-
-2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* Makefile.am (ELF_X86_DEPS): Add $(srcdir)/emultempl/elf-x86.em.
-	(eelf_i386_sol2.c): Also depend on
-	$(srcdir)/emultempl/solaris2-x86.em.
-	(eelf_x86_64_sol2.c): Likewise.
-	* Makefile.in: Regenerated.
-	* emulparams/call_nop.sh: Set x86-specific linker options via
-	params.
-	* emulparams/cet.sh: Likewise.
-	* emulparams/reloc_overflow.sh: Likewise.
-	* emulparams/elf32_x86_64.sh (EXTRA_EM_FILE): New.  Set to
-	"elf-x86".
-	* emulparams/elf_i386.sh: Likewise.
-	* emulparams/elf_i386_be.sh: Likewise.
-	* emulparams/elf_i386_chaos.sh: Likewise.
-	* emulparams/elf_i386_ldso.sh: Likewise.
-	* emulparams/elf_i386_vxworks.sh: Likewise.
-	* emulparams/elf_iamcu.sh: Likewise.
-	* emulparams/elf_k1om.sh: Likewise.
-	* emulparams/elf_l1om.sh: Likewise.
-	* emulparams/elf_x86_64.sh: Likewise.
-	* emulparams/elf_i386_sol2.sh (EXTRA_EM_FILE): Changed to
-	"solaris2-x86".
-	* emulparams/elf_x86_64_sol2.sh: Likewise.
-	* emultempl/elf-x86.em: New file.
-	* emultempl/solaris2-x86.em: Likewise.
-	* emultempl/elf32.em (gld${EMULATION_NAME}_before_parse): Don't
-	set link_info.call_nop_byte.
-
-2019-04-05  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/tlsexe32.d: Remove trailing spaces.
-	* testsuite/ld-powerpc/tlsopt5.d: Likewise.
-	* testsuite/ld-powerpc/tlsopt5_32.d: Likewise.
-
-2019-04-03  Alan Modra  <amodra@gmail.com>
-
-	PR 24411
-	ldlex.l (SYMBOLNAMECHAR1): Don't match '/'.
-	(<EXPRESSION>"/DISCARD/"): New.
-
-2019-04-03  Alan Modra  <amodra@gmail.com>
-
-	* ldlex.l: Formatting.
-	(CMDFILENAMECHAR, CMDFILENAMECHAR1): Delete.
-	(FILENAMECHAR1, SYMBOLNAMECHAR1, FILENAMECHAR, WILDCHAR),
-	(NOCFILENAMECHAR): Remove duplicate chars.  Reorder.
-	(SYMBOLCHARN): Likewise.  Rename to SYMBOLNAMECHAR.
-	(<INPUTLIST>"$SYSROOT"..): Delete rule.
-
-2019-03-29  Max Filippov  <jcmvbkbc@gmail.com>
+	* emultempl/z80.em: Add support for eZ80 and Z180 architectures.
+	* emulparams/elf32z80.sh: New file.
+	* emultempl/z80elf.em: Likewise.
+	* testsuite/ld-elf/comm-data4.s: Fix for Z80.
+	* testsuite/ld-elf/comm-data5.s: Fix for Z80.
+	* testsuite/ld-scripts/fill16.d: Fix for Z80.
+	* testsuite/ld-z80/arch_ez80_adl.d: Likewise.
+	* testsuite/ld-z80/arch_ez80_z80.d: Likewise.
+	* testsuite/ld-z80/arch_r800.d: Likewise.
+	* testsuite/ld-z80/arch_z180.d: Likewise.
+	* testsuite/ld-z80/arch_z80.d: Likewise.
+	* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.
+	* testsuite/ld-z80/comb_arch_z180.d: Likewise.
+	* testsuite/ld-z80/labels.s: Likewise.
+	* testsuite/ld-z80/relocs.s: Likewise.
+	* testsuite/ld-z80/relocs_b_ez80.d: Likewise.
+	* testsuite/ld-z80/relocs_b_z80.d: Likewise.
+	* testsuite/ld-z80/relocs_f_z80.d: Likewise.
+	* testsuite/ld-z80/z80.exp: Likewise.
+	* NEWS: Mention the new support.
+
+2020-01-02  Tamar Christina  <tamar.christina@arm.com>
 
-	* testsuite/ld-xtensa/relax-undef-weak-pie-export-dynamic.d: New
-	test definition.
-	* testsuite/ld-xtensa/xtensa.exp
-	(relax-undef-weak-pie-export-dynamic): Add new test.
-
-2019-03-26  Martin Liska  <mliska@suse.cz>
-
-	* plugin.c (get_symbols): Add lto_kind_str, lto_resolution_str,
-	lto_visibility_str and use then to inform about plugin-symbols.
-	* testsuite/ld-plugin/plugin-12.d: Adjust expected pattern.
-
-2019-03-25  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/ld-arm/jump-reloc-veneers-cond-long.d: Update disassembly.
-	* testsuite/ld-arm/jump-reloc-veneers-long.d: Update disassembly.
-
-2019-03-21  Sudakshina Das  <sudi.das@arm.com>
-
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add new test.
-	* testsuite/ld-aarch64/bti-plt-1.s: Add .ifdef for PAC note section.
-	* testsuite/ld-aarch64/bti-plt-6.d: Update warning.
-	* testsuite/ld-aarch64/bti-plt-7.d: Likewise.
-	* testsuite/ld-aarch64/bti-warn.d: New test.
-
-2019-03-21  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/fini2.s: Reduce alignment.
-	* testsuite/ld-elf/fini3.s: Likewise.
-	* testsuite/ld-elf/finin.s: Likewise.
-	* testsuite/ld-elf/init2.s: Likewise.
-	* testsuite/ld-elf/init3.s: Likewise.
-	* testsuite/ld-elf/initn.s: Likewise.
-	* testsuite/ld-elf/pr14156a.d: Don't xfail m68hc1*-* or xgate-*.
-	* testsuite/ld-elf/pr14156b.d: Don't xfail xgate-*.
-
-2019-03-21  Alan Modra  <amodra@gmail.com>
-
-	* scripttempl/alpha.sc, * scripttempl/armbpabi.sc,
-	* scripttempl/crisaout.sc, * scripttempl/elf32cr16.sc,
-	* scripttempl/elf32crx.sc, * scripttempl/elf32xc16x.sc,
-	* scripttempl/elf32xc16xl.sc, * scripttempl/elf32xc16xs.sc,
-	* scripttempl/elf64hppa.sc, * scripttempl/elf_chaos.sc,
-	* scripttempl/elfarc.sc, * scripttempl/elfarcv2.sc,
-	* scripttempl/elfd30v.sc, * scripttempl/elfm68hc11.sc,
-	* scripttempl/elfm68hc12.sc, * scripttempl/elfm9s12z.sc,
-	* scripttempl/elfmicroblaze.sc, * scripttempl/elfxgate.sc,
-	* scripttempl/elfxtensa.sc, * scripttempl/epiphany_4x4.sc,
-	* scripttempl/ft32.sc, * scripttempl/i386beos.sc,
-	* scripttempl/iq2000.sc, * scripttempl/mcorepe.sc,
-	* scripttempl/mep.sc, * scripttempl/mips.sc, * scripttempl/moxie.sc,
-	* scripttempl/pe.sc, * scripttempl/pep.sc, * scripttempl/ppcpe.sc,
-	* scripttempl/tic4xcoff.sc, * scripttempl/tic80coff.sc,
-	* scripttempl/v850.sc, * scripttempl/v850_rh850.sc,
-	* scripttempl/visium.sc, * scripttempl/xstormy16.sc: Add KEEP and
-	SORT_NONE to .init and .fini wildcards.
-	* scripttempl/elf32xc16x.sc,
-	* scripttempl/elf32xc16xl.sc,
-	* scripttempl/elf32xc16xs.sc: Add .fini wildcard.
-	* scripttempl/elf_chaos.sc: Add .init output section.
-	* scripttempl/elfd30v.sc: Remove duplicate .init.
-	* scripttempl/elfm68hc11.sc, * scripttempl/elfm68hc12.sc,
-	* scripttempl/elfm9s12z.sc, * scripttempl/elfxgate.sc: Remove
-	duplicate .init, and add .fini wildcard.
-	* scripttempl/ppcpe.sc (INIT, FINI): Delete.
-	* ldlang.c (update_wild_statements): Special case .init and
-	.fini in the wildcard, not the output section.
-
-2019-03-21  Alan Modra  <amodra@gmail.com>
-
-	* emulparams/elf32lm32fd.sh (DYNAMIC_LINK): Undef.
-
-2019-03-21  Alan Modra  <amodra@gmail.com>
-
-	* ldlang.c (lang_size_sections_1): Set SEC_KEEP on
-	create_object_symbols_section.
-	* testsuite/ld-elf/pr22319.d: Don't xfail dlx.
-
-2019-03-18  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/merge.d: Remove csky from xfails, add moxie.
-	* testsuite/ld-elf/pr21884.d: Remove csky from xfails.
-	* testsuite/ld-elf/shared.exp: Add csky to list not xfailing pr22374.
-	* testsuite/ld-unique/pr21529.d: Remove csky from xfails
-
-2019-03-15  Nick Clifton  <nickc@redhat.com>
-
-	PR 24262
-	* ld.texi (-plugin): Correct the path used to locate linker
-	plugins.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-
-	* NEWS: Document --pac-plt.
-	* emultempl/aarch64elf.em (OPTION_PAC_PLT): New.
-	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add pac-plt.
-	(PARSE_AND_LIST_ARGS_CASES): Handle OPTION_PAC_PLT.
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add the following tests.
-	* testsuite/ld-aarch64/bti-pac-plt-1.d: New test.
-	* testsuite/ld-aarch64/bti-pac-plt-2.d: New test.
-	* testsuite/ld-aarch64/pac-plt-1.d: New test.
-	* testsuite/ld-aarch64/pac-plt-2.d: New test.
-	* testsuite/ld-aarch64/bti-plt-1.s: Add .ifndef directive.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-	    Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* NEWS: Document --force-bti.
-	* emultempl/aarch64elf.em (plt_type, bti_type, OPTION_FORCE_BTI): New.
-	(PARSE_AND_LIST_SHORTOPTS, PARSE_AND_LIST_OPTIONS): Add force-bti.
-	(PARSE_AND_LIST_ARGS_CASES): Handle OPTION_FORCE_BTI.
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add all the tests below.
-	* testsuite/ld-aarch64/bti-plt-1.d: New test.
-	* testsuite/ld-aarch64/bti-plt-1.s: New test.
-	* testsuite/ld-aarch64/bti-plt-2.d: New test.
-	* testsuite/ld-aarch64/bti-plt-3.d: New test.
-	* testsuite/ld-aarch64/bti-plt-4.d: New test.
-	* testsuite/ld-aarch64/bti-plt-5.d: New test.
-	* testsuite/ld-aarch64/bti-plt-6.d: New test.
-	* testsuite/ld-aarch64/bti-plt-7.d: New test.
-	* testsuite/ld-aarch64/bti-plt-so.s: New test.
-	* testsuite/ld-aarch64/bti-plt.ld: New test.
-
-2019-03-13  Sudakshina Das  <sudi.das@arm.com>
-
-	* NEWS: Document GNU_PROPERTY_AARCH64_FEATURE_1_BTI and
-	GNU_PROPERTY_AARCH64_FEATURE_1_PAC.
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add run commands for new tests.
-	* testsuite/ld-aarch64/property-bti-pac1.d: New test.
-	* testsuite/ld-aarch64/property-bti-pac1.s: New test.
-	* testsuite/ld-aarch64/property-bti-pac2.d: New test.
-	* testsuite/ld-aarch64/property-bti-pac2.s: New test.
-	* testsuite/ld-aarch64/property-bti-pac3.d: New test.
-
-2019-03-13  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24322
-	* testsuite/ld-i386/i386.exp: Run PR ld/24322 tests.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-i386/pr24322a.d: New file.
-	* testsuite/ld-i386/pr24322b.d: Likewise.
-	* testsuite/ld-x86-64/pr24322a-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24322a.d: Likewise.
-	* testsuite/ld-x86-64/pr24322b-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr24322b.d: Likewise.
-	* testsuite/ld-x86-64/pr24322a.s: Likewise.
-	* testsuite/ld-x86-64/pr24322b.s: Likewise.
-	* testsuite/ld-x86-64/pr24322c.s: Likewise.
-
-2019-03-06  Nick Bowler  <nbowler@draconx.ca>
-
-	PR 24289
-	* ldexp.c (fold_name): Allow lookups of the LENGTH and ORIGIN
-	attributes during the first phase.
-
-2019-03-01  Andreas Krebbel  <krebbel@linux.ibm.com>
-
-	This reverts commit 5a12586d44fa8d5dfc74cbca4f2f36a273a16335.
-	2019-01-14  Maamoun Tarsha  <maamountk@hotmail.com>
-
-	PR 20113
-	* emulparams/elf64_s390.sh (SEPARATE_GOTPLT): Define.
-	* emulparams/elf_s390.sh (SEPARATE_GOTPLT): Define.
-	* testsuite/ld-s390/gotreloc_31-1.dd: Update expected output.
-	* testsuite/ld-s390/tlsbin.dd: Likewise.
-	* testsuite/ld-s390/tlsbin.rd: Likewise.
-	* testsuite/ld-s390/tlsbin.sd: Likewise.
-	* testsuite/ld-s390/tlsbin_64.dd: Likewise.
-	* testsuite/ld-s390/tlsbin_64.rd: Likewise.
-	* testsuite/ld-s390/tlsbin_64.sd: Likewise.
-	* testsuite/ld-s390/tlspic.dd: Likewise.
-	* testsuite/ld-s390/tlspic.rd: Likewise.
-	* testsuite/ld-s390/tlspic.sd: Likewise.
-	* testsuite/ld-s390/tlspic_64.dd: Likewise.
-	* testsuite/ld-s390/tlspic_64.rd: Likewise.
-	* testsuite/ld-s390/tlspic_64.sd: Likewise.
-	* testsuite/ld-s390/s390.exp: Skip s390 tests for tpf targets.
-
-2019-02-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24276
-	* testsuite/ld-i386/i386.exp: Run PR ld/24276 test.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-i386/pr24276.dso: New file.
-	* testsuite/ld-i386/pr24276.warn: Likewise.
-	* testsuite/ld-x86-64/pr24276.dso: Likewise.
-	* testsuite/ld-x86-64/pr24276.warn: Likewise.
-
-2019-02-20  Eric Tsai  <erictsai@cadence.com>
-
-	* testsuite/ld-xtensa/call_overflow.d: New test definition.
-	* testsuite/ld-xtensa/call_overflow1.s: New test source.
-	* testsuite/ld-xtensa/call_overflow2.s: New test source.
-	* testsuite/ld-xtensa/call_overflow3.s: New test source.
-	* testsuite/ld-xtensa/xtensa.exp: Add call_overflow test.
-
-2019-02-14  Thomas Schwinge  <thomas@codesourcery.com>
-
-	* testsuite/ld-elf/elf.exp: Remove Hurd XFAILs.
-
-2019-02-12  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Updated French translation.
-
-2019-02-09  Vineet Gupta  <vgupta@synopsys.com>
-
-	* emultempl/arclinux.em: Delete special INIT/FINI handling.
-
-2019-02-07  Nick Clifton  <nickc@redhat.com>
-
-	PR 24175
-	* ld.texi (Options): Add missing word to the description of the
-	--start-group option.
-
-2019-02-06  Alan Modra  <amodra@gmail.com>
-
-	PR ld/24008
-	* testsuite/ld-scripts/pr24008.d: Pass with extra target
-	defined symbols.
-
-2019-02-05  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24151
-	* testsuite/ld-x86-64/pr24151a-x32.d: New file.
-	* testsuite/ld-x86-64/pr24151a.d: Likewise.
-	* testsuite/ld-x86-64/pr24151a.s: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Run pr24151a and pr24151a-x32.
-
-2019-01-31  Alan Modra  <amodra@gmail.com>
-
-	* NEWS: Mention -t change.
-	* ld.texi (--trace/-t): Expand documentation a little.
-
-2019-01-29  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24008
-	* testsuite/ld-scripts/defined.exp: Run pr24008.
-	* testsuite/ld-scripts/pr24008.d: New file.
-	* testsuite/ld-scripts/pr24008.map: Likewise.
-	* testsuite/ld-scripts/pr24008.s: Likewise.
-	* testsuite/ld-scripts/pr24008.t: Likewise.
-
-2019-01-29  Eric Botcazou  <ebotcazou@adacore.com>
-
-	* testsuite/ld-ifunc/ifunc.exp: Skip pr23169 on SPARC.
-
-2019-01-28  Alan Modra  <amodra@gmail.com>
-
-	PR 24008
-	* ldexp.h (lang_phase_type): Add lang_fixed_phase_enum.
-	* ldexp.c (fold_name): Move expld.assign_name check later to
-	avoid an extra lookup.
-	(exp_fold_tree_1): When lang_fixed_phase_enum, don't change symbol
-	values, and don't clear expld.assign_name.
-	* ldlang.c (lang_map): Set expld.phase to lang_fixed_phase_enum.
-	(print_assignment): Resolve entire assignment expression.
-	Don't access symbol u.def unless symbol is defined.
-
-2019-01-25  Nick Clifton  <nickc@redhat.com>
-
-	* po/bg.po: Updated Bulgarian translation.
-
-2019-01-23  Sebastian Huber  <sebastian.huber@embedded-brains.de>
-
-	* ld.texi (--wrap): Add warning that LTO may make this feature
-	ineffective.
-
-2019-01-21  Nick Clifton  <nickc@redhat.com>
-
-	* po/uk.po: Updated Ukranian translation.
-	* po/pr_BR.po: Updated Brazilian Portuguese translation.
-
-2019-01-21  Nick Clifton  <nickc@redhat.com>
-
-	PR 24108
-	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01.d: Update
-	expected error message.
-
-2019-01-19  Nick Clifton  <nickc@redhat.com>
-
-	* configure: Regenerate.
-	* po/ld.pot: Regenerate.
-
-2018-06-24  Nick Clifton  <nickc@redhat.com>
-
-	2.32 branch created.
-
-2019-01-16  Kito Cheng  <kito@andestech.com>
-
-	* testsuite/ld-elf/orphan-region.d: XFAIL for RISC-V, because add new
-	section.
-	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Add new tests.
-	* testsuite/ld-riscv-elf/attr-merge-arch-01.d: New test.
-	* testsuite/ld-riscv-elf/attr-merge-arch-01a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-01b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-02a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-02b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-03a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-03b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-stack-align-a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-stack-align-b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-stack-align-failed-a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-stack-align-failed-b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-stack-align-failed.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-stack-align.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-01.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-01a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-01b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-02.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-02a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-02b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-03.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-03a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-03b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-04.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-04a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-04b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-05.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-05a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-05b.s: Likewise.
-
-2019-01-14  Maamoun Tarsha  <maamountk@hotmail.com>
-
-	PR 20113
-	* emulparams/elf64_s390.sh (SEPARATE_GOTPLT): Define.
-	* emulparams/elf_s390.sh (SEPARATE_GOTPLT): Define.
-	* testsuite/ld-s390/gotreloc_31-1.dd: Update expected output.
-	* testsuite/ld-s390/tlsbin.dd: Likewise.
-	* testsuite/ld-s390/tlsbin.rd: Likewise.
-	* testsuite/ld-s390/tlsbin.sd: Likewise.
-	* testsuite/ld-s390/tlsbin_64.dd: Likewise.
-	* testsuite/ld-s390/tlsbin_64.rd: Likewise.
-	* testsuite/ld-s390/tlsbin_64.sd: Likewise.
-	* testsuite/ld-s390/tlspic.dd: Likewise.
-	* testsuite/ld-s390/tlspic.rd: Likewise.
-	* testsuite/ld-s390/tlspic.sd: Likewise.
-	* testsuite/ld-s390/tlspic_64.dd: Likewise.
-	* testsuite/ld-s390/tlspic_64.rd: Likewise.
-	* testsuite/ld-s390/tlspic_64.sd: Likewise.
-	* testsuite/ld-s390/s390.exp: Skip s390 tests for tpf targets.
-
-2019-01-14  Sebastian Huber  <sebastian.huber@embedded-brains.de>
-
-	* ld.texi (--wrap): Add example to emphasise that only undefined
-	references are replaced by the linker.
-
-2019-01-09  Nick Clifton  <nickc@redhat.com>
-
-	* po/es.po: Updated Spanish translation.
-
-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
-
-	* configure: Regenerate.
-
-2019-01-08  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/sec64k.exp: Use . rather than $objdir in
-	generated source file names.
-	* testsuite/ld-m68k/m68k-got.exp: Likewise.
+	PR 25210
+	PR 24753
+	* emultempl/aarch64elf.em (elf${ELFSIZE}_aarch64_add_stub_section):
+	Remove SEC_LINKER_CREATED.
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add erratum835769-843419.
+	* testsuite/ld-aarch64/erratum835769-843419.d: New test.
 
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/gold/ChangeLog b/gold/ChangeLog
index 31fc1af2b8..41deeeeea3 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,243 +1,27 @@
-2019-09-30  Phil Blundell  <pb@pbcl.net>
+2020-02-01  Nick Clifton  <nickc@redhat.com>
 
-	Release 2.33
-	* doc/Makefile.in, testsuite/Makefile.in, po/gold.pot: Regenerate.
+	Binutils 2.34 release.
 
-2019-09-25  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2019-09-23  Alan Modra  <amodra@gmail.com>
-	* testsuite/plugin_new_section_layout.c (new_input_hook): Correct
-	return status enum values.
-
-2019-09-24  Nick Clifton  <nickc@redhat.com>
-
-	* descriptors.cc: Include <string>
-
-2019-09-20  Alan Modra  <amodra@gmail.com>
-
-	PR 24768
-	* layout.cc (Layout::Layout): Init lto_slim_object_.
-	* object.cc (Sized_relobj_file::do_layout): Wrap overlong line.
-	Don't use C cast.  Validate section size.  Don't copy contents.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
-
-2019-08-16  Martin Liska  <mliska@suse.cz>
-
-	PR ld/24912
-	* object.cc (big_endian>::do_layout): Do not report error,
-	but only set a flag.
-	(big_endian>::do_add_symbols): Report error only for when
-	relocatable.
-
-2019-08-02  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Target_powerpc::Scan::get_reference_flags): Set
-	flags for new relocations, and some missing older relocs.
-	(Target_powerpc::Scan::local): Handle new pcrel tls relocs.
-	Call set_has_static_tls for tprel relocs.
-	(Target_powerpc::Scan::global): Likewise.
-	(Target_powerpc::Relocate::relocate): Handle new pcrel tls relocs.
-
-2019-08-02  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Powerpc_relocate_functions::rela, rela_ua): Perform
-	signed right shift for signed overflow check.
-
-2019-07-29  Martin Liska  <mliska@suse.cz>
-
-	PR 24768
-	* layout.h (class Layout): Add is_lto_slim_object and
-	set_lto_slim_object.
-	* object.cc (struct lto_section): Add lto_slim_object_.
-	(big_endian>::do_layout): Parse content of
-	.gnu_lto_.lto section.
-	(big_endian>::do_add_symbols): Report error for a missing
-	LTO plugin.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (xlate_pcrel_opt): New function.
-	(Target_powerpc::Relocate::relocate): Optimise PCREL34 and
-	GOT_PCREL34 sequences marked with PCREL_OPT.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Powerpc_relobj::make_got_relative): New function.
-	(relative_value_is_known): New functions.
-	(Target_powerpc::Relocate::relocate): Edit code using
-	GOT16_HA, GOT16_LO_DS, and GOT_PCREL34 relocs.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Target_powerpc): Add powerxx_stubs_ and accessor
-	functions.
-	(Target_powerpc::maybe_skip_tls_get_addr_call): Handle PLT_PCREL34
-	and PLT_PCREL34_NOTOC relocs.
-	(Powerpc_relocate_functions): Add addr34, addr34_hi, addr34_ha,
-	addr28, addr16_higher34, addr16_highera34, addr16_highest34,
-	addr16_highest34a functions.
-	(li_11_0, ori_11_11_0, sldi_11_11_34): Define.
-	(paddi_12_pc, pld_12_pc, pnop): Define.
-	(d34, ha34): New inline functions.
-	(Stub_table::add_plt_call_entry): Handle powerxx_stubs.
-	(Stub_table::add_eh_frame): Likewise.
-	(build_powerxx_offset): New function.
-	(Stub_table::plt_call_size): Handle powerxx_stubs.
-	(Stub_table::branch_stub_size): Likewise.
-	(Stub_table::do_write): Likewise.
-	(Target_powerpc::Scan::get_reference_flags): Handle new relocs.
-	(Target_powerpc::Scan::reloc_needs_plt_for_ifunc: Likewise.
-	(Target_powerpc::Scan::local, global, relocate): Likewise.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* ehframe.cc (Fde::operator==): Delete.
-	(Cie::remove_fde): Delete.
-	(Eh_frame::remove_ehframe_for_plt): Delete fde_data and fde_length
-	parameters.  Remove all post-map plt FDEs.
-	* ehframe.h (Fde:post_map): Make const, add variant to compare plt.
-	(Fde::operator==): Delete.
-	(Cie::remove_fde): Implement here.
-	(Cie::last_fde): New accessor.
-	(Eh_frame::remove_ehframe_for_plt): Update prototype.
-	* layout.cc (Layout::remove_eh_frame_for_plt): Delete fde_data and
-	fde_length parameters.
-	* layout.h (Layout::remove_eh_frame_for_plt): Update prototype.
-	* powerpc.cc (Stub_table::tls_get_addr_opt_bctrl_): Delete.
-	(Stub_table::plt_fde_len_, plt_fde_, init_plt_fde): Delete.
-	(Stub_table::add_plt_call_entry): Don't set tls_get_addr_opt_bctrl_.
-	(eh_advance): New function.
-	(stub_sort): New function.
-	(Stub_table::add_eh_frame): Emit eh_frame for notoc plt calls and
-	branches as well as __tls_get_addr_opt plt call stub.
-	(Stub_table::remove_eh_frame): Update to suit.
-
-2019-07-13  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Target_powerpc::maybe_skip_tls_get_addr_call): Handle
-	notoc calls.
-	(is_branch_reloc): Template on size.  Return true for REL24_NOTOC.
-	Update all callers.
-	(max_branch_delta): Likewise.
-	(Target_powerpc::Branch_info::make_stub): Add a stub for notoc
-	calls to functions needing a valid toc pointer.
-	(Target_powerpc::do_relax): Layout stubs again if any need resize.
-	(add_12_11_12, addi_12_11, addis_12_11, ldx_12_11_12, ori_12_12_0),
-	(oris_12_12_0, sldi_12_12_32): Define.
-	(Stub_table::Plt_stub_ent): Add notoc_ and iter_ fields.
-	(Stub_table::Branch_stub_key, Branch_stub_key_hash): Rename from
-	Branch_stub_ent and Branch_stub_ent hash.  Remove save_res_ from key.
-	(Stub_table::Branch_stub_ent): New struct.
-	(class Stub_table): Add need_resize and resizing vars.
-	(Stub_table::need_resize, branch_size): New accessors.
-	(Stub_table::set_resizing): New function.
-	(Stub_table::add_plt_call_entry): Handle notoc calls and resizing
-	on seeing such or a tocsave stubs after a normal stub using the
-	same sym.
-	(Stub_table::add_long_branch_entry): Similarly.
-	(Stub_table::find_long_branch_entry): Return a Branch_stub_ent*.
-	(Stub_table::define_stub_syms): Adjust
-	(Stub_table::build_tls_opt_head, build_tls_opt_tail): New functions.
-	(build_notoc_offset): New function.
-	(Stub_table::plt_call_size): Move out of line.  Handle notoc calls.
-	(Stub_table::branch_stub_size): Similarly.
-	(Stub_table::do_write): Separate loop for ELFv2 stubs, handling
-	notoc calls.  Simplify ELFv1 loop.  Output notoc branch stubs.
-	Use build_tls_opt_head and build_tls_opt_tail.
-	(Target_powerpc::Scan::get_reference_flags): Handle REL24_NOTOC.
-	(Target_powerpc::Scan::reloc_needs_plt_for_ifunc): Likewise,
-	and PLTSEQ_NOTOC and PLTCALL_NOTOC.
-	(Target_powerpc::Scan::local, global, relocate): Likewise.
-
-2019-06-28  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Target_powerpc::Relocate::relocate): Don't look
-	at next/previous reloc when relnum is -1.
-
-2019-06-28  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Stub_table::plt_error): New function.
-	(Stub_table::do_write): Use it.
-	(Output_data_glink::do_write): Don't segfault emitting linkage
-	table error.
-
-2019-06-28  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Target_powerpc::Scan::get_reference_flags): Handle
-	REL16_HIGH* relocs.
-	(Target_powerpc::Scan::local): Likewise.
-	(Target_powerpc::Scan::global): Likewise.
-	(Target_powerpc::Relocate::relocate): Likewise.
-
-2019-06-10  Martin Liska  <mliska@suse.cz>
-
-	* errors.h: Include string.
-
-2019-05-10  Joshua Oreman  <oremanj@hudson-trading.com>
-
-	PR gold/21066
-	* gc.h (gc_process_relocs): Track relocations in .eh_frame sections
-	when ICF is enabled, even though the .eh_frame sections themselves
-	are not foldable.
-	* icf.cc (get_section_contents): Change arguments to permit operation
-	on just part of a section. Include extra identity regions in the
-	referring section's contents recursively.
-	(match_sections): Lock object here instead of in get_section_contents
-	so that get_section_contents can operate recursively.
-	(Icf::add_ehframe_links): New method.
-	(Icf::find_identical_sections): Pass .eh_frame sections to
-	add_ehframe_links(). Increase default iteration count from 2 to 3
-	because handling exception info typically requires one extra iteration.
-	* icf.h (Icf::extra_identity_list_): New data member with accessor.
-	(is_section_foldable_candidate): Include .gcc_except_table sections.
-	* options.h: Update documentation for new default ICF iteration count.
-	* testsuite/Makefile.am (icf_test_pr21066): New test case.
-	* testsuite/Makefile.in: Regenerate.
-	* testsuite/icf_test_pr21066.cc: New source file.
-	* testsuite/icf_test_pr21066.sh: New test script.
-
-2019-02-19  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>
-
-     PR gold/23870
-     * aarch64.cc (Target_aarch64::Scan::global): Check if a symbol with
-     R_AARCH64_MOVW_.ABS_* relocations requires a PLT entry.
-     * testsuite/Makefile.am: Add aarch64_pr23870 test case.
-     * testsuite/Makefile.in: Regenerate.
-     * testsuite/aarch64_pr23870_bar.c: New file.
-     * testsuite/aarch64_pr23870_foo.c: New file.
-     * testsuite/aarch64_pr23870_main.S: New file.
-
-2019-02-12  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Updated French translation.
-
-2019-01-21  Nick Clifton  <nickc@redhat.com>
+2020-01-20  Nick Clifton  <nickc@redhat.com>
 
 	* po/uk.po: Updated Ukranian translation.
 
-2019-01-19  Nick Clifton  <nickc@redhat.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
+	* configure: Regenerate.
 	* po/gold.pot: Regenerate.
 
-2018-06-24  Nick Clifton  <nickc@redhat.com>
-
-	2.32 branch created.
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
-
-	* configure: Regenerate.
+	Binutils 2.34 branch created.
 
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/libiberty/ChangeLog b/libiberty/ChangeLog
index 95cb1525f2..362bd064d0 100644
--- a/libiberty/ChangeLog
+++ b/libiberty/ChangeLog
@@ -1,3 +1,108 @@
+2020-01-17  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/demangle-expected: Update expected demangling of
+	enable_if pattern.
+
+2020-01-01  Jakub Jelinek  <jakub@redhat.com>
+
+	Update copyright years.
+
+2019-12-06  Tim Ruehsen  <tim.ruehsen@gmx.de>
+
+	* make-relative-prefix.c (split_directories):
+	Return early on empty 'name'
+
+2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>
+
+	* cp-demangle.c (d_print_init): Remove const from 4th param.
+	(cplus_demangle_fill_name): Initialize d->d_counting.
+	(cplus_demangle_fill_extended_operator): Likewise.
+	(cplus_demangle_fill_ctor): Likewise.
+	(cplus_demangle_fill_dtor): Likewise.
+	(d_make_empty): Likewise.
+	(d_count_templates_scopes): Remobe const from 3rd param,
+	Return on dc->d_counting > 1,
+	Increment dc->d_counting.
+        * cp-demint.c (cplus_demangle_fill_component): Initialize d->d_counting.
+	(cplus_demangle_fill_builtin_type): Likewise.
+	(cplus_demangle_fill_operator): Likewise.
+
+2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
+
+	* cplus-dem.c (cplus_demangle): Use rust_demangle directly.
+	(rust_demangle): Remove.
+	* rust-demangle.c (is_prefixed_hash): Rename to is_legacy_prefixed_hash.
+	(parse_lower_hex_nibble): Rename to decode_lower_hex_nibble.
+	(parse_legacy_escape): Rename to decode_legacy_escape.
+	(rust_is_mangled): Remove.
+	(struct rust_demangler): Add.
+	(peek): Add.
+	(next): Add.
+	(struct rust_mangled_ident): Add.
+	(parse_ident): Add.
+	(rust_demangle_sym): Remove.
+	(print_str): Add.
+	(PRINT): Add.
+	(print_ident): Add.
+	(rust_demangle_callback): Add.
+	(struct str_buf): Add.
+	(str_buf_reserve): Add.
+	(str_buf_append): Add.
+	(str_buf_demangle_callback): Add.
+	(rust_demangle): Add.
+	* rust-demangle.h: Remove.
+
+2019-11-15  Miguel Saldivar  <saldivarcher@gmail.com>
+
+	* testsuite/demangle-expected: Fix test.
+
+2019-11-04  Kamlesh Kumar  <kamleshbhalui@gmail.com>
+
+	* cp-demangle.c (d_expr_primary): Handle
+	nullptr demangling.
+	* testsuite/demangle-expected: Added test.
+
+2019-10-29 Paul Pluzhnikov  <ppluzhnikov@google.com>
+
+	* cp-demangle.c (d_number): Avoid signed int overflow.
+
+2019-10-28  Miguel Saldivar  <saldivarcher@gmail.com>
+
+	* cp-demangle.c (d_print_mod): Add a space before printing `complex`
+	and `imaginary`, as opposed to after.
+	* testsuite/demangle-expected: Adjust test.
+
+2019-10-03  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
+
+	* rust-demangle.c (looks_like_rust): Remove.
+	(rust_is_mangled): Don't check escapes.
+	(is_prefixed_hash): Allow 0-9a-f permutations.
+	(rust_demangle_sym): Don't bail on unknown escapes.
+	* testsuite/rust-demangle-expected: Update 'main::$99$' test.
+
+2019-09-03  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
+
+	* rust-demangle.c (unescape): Remove.
+	(parse_lower_hex_nibble): New function.
+	(parse_legacy_escape): New function.
+	(is_prefixed_hash): Use parse_lower_hex_nibble.
+	(looks_like_rust): Use parse_legacy_escape.
+	(rust_demangle_sym): Use parse_legacy_escape.
+	* testsuite/rust-demangle-expected: Add 'llv$u6d$' test.
+
+2019-08-27  Martin Liska  <mliska@suse.cz>
+
+	PR lto/91478
+	* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):
+	First find a WEAK HIDDEN symbol in symbol table that will be
+	preserved.  Later, use the symbol name for all removed symbols.
+
+2019-08-12  Martin Liska  <mliska@suse.cz>
+
+	* Makefile.in: Add filedescriptor.c.
+	* filedescriptor.c: New file.
+	* lrealpath.c (is_valid_fd): Remove.
+
 2019-08-08  Martin Liska  <mliska@suse.cz>
 
 	PR bootstrap/91352
diff --git a/gprof/ChangeLog b/gprof/ChangeLog
index 2cb31365d9..656dfce9ad 100644
--- a/gprof/ChangeLog
+++ b/gprof/ChangeLog
@@ -1,69 +1,41 @@
-2019-10-12  Nick Clifton  <nickc@redhat.com>
+2020-02-01  Nick Clifton  <nickc@redhat.com>
 
-	Release 2.33.1
 	* configure: Regenerate.
 
-2019-09-30  Phil Blundell  <pb@pbcl.net>
+2020-02-01  Nick Clifton  <nickc@redhat.com>
 
-	Release 2.33
-	* configure, Makefile.in, po/gprof.pot: Regenerate.
-
-2019-09-16  Phil Blundell  <pb@pbcl.net>
-
-	* configure, Makefile.in: Regenerated.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
+	Binutils 2.34 release.
+	* configure: Regenerate.
 
-2019-05-20  Nick Clifton  <nickc@redhat.com>
+2020-01-23  Nick Clifton  <nickc@redhat.com>
 
-	PR 24569
-	* gprof.c (usage): Restore alphabetical sorting to short options
-	list.  Add -r, -R and -t short options to the list.
-	(main): Add comment about -g and -G possibly being deprecated.
-	* gprof.texi: Update usage example in line with changes above.
+	* po/es.po: Updated Esperanto translation.
+	* po/fi.po: Updated Finish translation.
 
-2019-05-20  Nick Clifton  <nickc@redhat.com>
+2020-01-20  Nick Clifton  <nickc@redhat.com>
 
 	* po/de.po: Updated German translation.
-
-2019-05-08  Alan Modra  <amodra@gmail.com>
-
-	PR 24520
-	* corefile.c (core_init): Set BFD_DECOMPRESS.
-
-2019-04-01  Alan Modra  <amodra@gmail.com>
-
-	PR 24402
-	* symtab.c (symtab_finalize): Init prev_addr to one less than
-	first symbol address, not one more.  Correct test for symbols
-	with leading underscores.
-
-2019-01-21  Nick Clifton  <nickc@redhat.com>
-
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+	* po/ru.po: Updated Russian translation.
 	* po/tr.po: Updated Turkish translation.
+	* po/uk.po: Updated Ukranian translation.
 
-2019-01-19  Nick Clifton  <nickc@redhat.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
 	* po/gprof.pot: Regenerate.
 
-2018-06-24  Nick Clifton  <nickc@redhat.com>
+2020-01-18  Nick Clifton  <nickc@redhat.com>
 
-	2.32 branch created.
-
-2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
-
-	* configure: Regenerate.
+	Binutils 2.34 branch created.
 
-2019-01-01  Alan Modra  <amodra@gmail.com>
+2020-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2018
+For older changes see ChangeLog-2019
 
-Copyright (C) 2019 Free Software Foundation, Inc.
+Copyright (C) 2020 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/include/ChangeLog-2019 b/include/ChangeLog-2019
new file mode 100644
index 0000000000..ce3e049606
--- /dev/null
+++ b/include/ChangeLog-2019
@@ -0,0 +1,773 @@
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* coff/tic80.h: Delete file.
+	* opcode/tic80.h: Delete file.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* opcode/crx.h (inst <match>): Make unsigned int.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* opcode/nds32.h (N32_BIT): Define using 1u.
+	(__SEXT): Use __MASK and N32_BIT.
+	(N32_IMMS): Remove duplicate mask.
+
+2019-12-12  Luis Machado  <luis.machado@linaro.org>
+
+	* diagnostics.h (DIAGNOSTIC_IGNORE_UNUSED_FUNCTION). Remove
+	definitions.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* opcode/mmix.h (PUSHGO_INSN_BYTE): Make unsigned.
+	(GO_INSN_BYTE, SETL_INSN_BYTE, INCML_INSN_BYTE, INCMH_INSN_BYTE),
+	(INCH_INSN_BYTE, SWYM_INSN_BYTE, JMP_INSN_BYTE): Likewise.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* dis-asm.h (INSN_HAS_RELOC, DISASSEMBLE_DATA),
+	(USER_SPECIFIED_MACHINE_TYPE, WIDE_OUTPUT): Make unsigned.
+	* opcode/tic80.h (TIC80_OPERAND_*): Likewise.
+
+2019-12-10  Alan Modra  <amodra@gmail.com>
+
+	PR 24960
+	* dis-asm.h (disassemble_free_target): Declare.
+
+2019-12-10  Alan Modra  <amodra@gmail.com>
+
+	* dis-asm.h (struct disassemble_info): Delete insn_sets.
+	(INIT_DISASSEMBLE_INFO_NO_ARCH): Don't define.
+
+2019-12-05  Jan Beulich  <jbeulich@suse.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_CRYPTO): Expand to the
+	combination of AES and SHA2.
+
+2019-11-25  Alan Modra  <amodra@gmail.com>
+
+	* coff/ti.h (GET_SCNHDR_SIZE, PUT_SCNHDR_SIZE, GET_SCN_SCNLEN),
+	(PUT_SCN_SCNLEN): Adjust bfd_octets_per_byte calls.
+
+2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* opcode/arm.h (ARM_EXT2_CRC): New extension feature
+	to replace CRC_EXT_ARMV8.
+	(CRC_EXT_ARMV8): Remove and mark bit as unused.
+	(ARM_ARCH_V8A_CRC, ARM_ARCH_V8_1A, ARM_ARCH_V8_2A,
+	ARM_ARCH_V8_3A, ARM_ARCH_V8_4A, ARM_ARCH_V8_5A,
+	ARM_ARCH_V8_6A): Redefine using ARM_EXT2_CRC instead of
+	CRC_EXT_ARMV8.
+
+2019-11-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2.h (DW_CIE_VERSION): Delete.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* opcode/arm.h (ARM_EXT2_I8MM): New feature macro.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_I8MM): New.
+	(AARCH64_FEATURE_F32MM): New.
+	(AARCH64_FEATURE_F64MM): New.
+	(AARCH64_OPND_SVE_ADDR_RI_S4x32): New.
+	(enum aarch64_insn_class): Add new instruction class "aarch64_misc" for
+	instructions that do not require special handling.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+	    Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/arm.h (ARM_EXT2_V8_6A, ARM_AEXT2_V8_6A,
+	ARM_ARCH_V8_6A): New.
+	* opcode/arm.h (ARM_EXT2_BF16): New feature macro.
+	(ARM_AEXT2_V8_6A): Include above macro in definition.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+	    Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_BFLOAT16): New feature macros.
+	(AARCH64_ARCH_V8_6): Include BFloat16 feature macros.
+	(enum aarch64_opnd_qualifier): Introduce new operand qualifier
+	AARCH64_OPND_QLF_S_2H.
+	(enum aarch64_insn_class): Introduce new class "bfloat16".
+	(BFLOAT16_SVE_INSNC): New feature set for bfloat16
+	instructions to support the movprfx constraint.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+	    Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_V8_6): New.
+	(AARCH64_ARCH_V8_6): New.
+
+2019-11-07  Alan Modra  <amodra@gmail.com>
+
+	* elf/cr16c.h: Delete.
+
+2019-10-29  Andrew Eikum  <aeikum@codeweavers.com>
+
+	* coff/internal.h (struct internal_extra_pe_filehdr): Use ints
+	instead of longs to hold dos_message.
+
+2019-10-25  Alan Modra  <amodra@gmail.com>
+
+	PR 4499
+	* elf/internal.h (struct elf_segment_map): Delete header_size.
+	Add no_sort_lma and idx.
+
+2019-10-16  Alan Modra  <amodra@gmail.com>
+
+	PR 13616
+	* bfdlink.h (struct bfd_link_info <big_endian>): New field.
+
+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* elf/msp430.h: Add enums for MSPABI and GNU object attribute tag
+	names and values.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_cuname_set): Can now fail, returning int.
+	(ctf_parent_name_set): Likewise.
+
+2019-08-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ECTF_NONREPRESENTABLE): New.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h: Note the instability of the ctf_link interfaces.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* bfdlink.h (elf_strtab_hash): New forward.
+	(elf_sym_strtab): Likewise.
+	(struct bfd_link_callbacks <examine_strtab>): New.
+	(struct bfd_link_callbacks <emit_ctf>): Likewise.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (includes): No longer include <sys/param.h>.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_link_add_cu_mapping): New.
+	(ctf_link_memb_name_changer_f): New.
+	(ctf_link_set_memb_name_changer): New.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ECTF_INTERNAL): New.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (struct ctf_link_sym): New, a symbol in flight to the
+	libctf linking machinery.
+	(CTF_LINK_SHARE_UNCONFLICTED): New.
+	(CTF_LINK_SHARE_DUPLICATED): New.
+	(ECTF_LINKADDEDLATE): New, replacing ECTF_UNUSED.
+	(ECTF_NOTYET): New, a 'not yet implemented' message.
+	(ctf_link_add_ctf): New, add an input file's CTF to the link.
+	(ctf_link): New, merge the type and string sections.
+	(ctf_link_strtab_string_f): New, callback for feeding strtab info.
+	(ctf_link_iter_symbol_f): New, callback for feeding symtab info.
+	(ctf_link_add_strtab): New, tell the CTF linker about the ELF
+	strtab's strings.
+	(ctf_link_shuffle_syms): New, ask the CTF linker to shuffle its
+	symbols into symtab order.
+	(ctf_link_write): New, ask the CTF linker to write the CTF out.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_arc_write_fd): New.
+	(ctf_write_mem): Likewise.
+	(ctf_gzwrite): Spacing fix.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf.h (CTF_SET_STID): New.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_type_all_f): New.
+	(ctf_type_iter_all): New.
+
+2019-07-11  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf.h: Add object index and function index sections.  Describe
+	them. Improve the description of the variable section and clarify
+	the constraints on backward-pointing type nodes.
+	(ctf_header): Add cth_objtidxoff, cth_funcidxoff.
+
+2019-07-06  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_cuname): New function.
+	(ctf_cuname_set): Likewise.
+	* ctf.h: Improve comment around upgrading, no longer
+	implying that v2 is the target of upgrades (it is v3 now).
+	(ctf_header_v2_t): New, old-format header for backward
+	compatibility.
+	(ctf_header_t): Add cth_cuname: this is the first of several
+	header changes in format v3.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfdlink.h (struct bfd_section_already_linked): Forward declare.
+	(bfd_section_already_linked_table_init),
+	(bfd_section_already_linked_table_free),
+	(_bfd_handle_already_linked, _bfd_nearby_section),
+	(_bfd_fix_excluded_sec_syms): Declare.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfdlink.h (enum notice_asneeded_action): Define.
+
+2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>
+
+	* opcode/riscv.h (riscv_insn_class): New enum.
+	* opcode/riscv.h (struct riscv_opcode): Change
+	subset field to insn_class field.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-08-30  Claudiu Zissulescu <claziss@gmail.com>
+
+	* opcode/arc.h (FASTMATH): Move it from insn_class_t to
+	insn_subclass_t enum.
+
+2019-08-22  Alan Modra  <amodra@gmail.com>
+
+	* elf/arm.h (ARM_GET_SYM_CMSE_SPCL, ARM_SET_SYM_CMSE_SPCL): Delete.
+
+2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>
+
+	* elf/mips.h (SHT_GNU_XHASH): New define.
+	(DT_GNU_XHASH): New define.
+
+2019-08-08  Yoshinori Sato  <ysato@users.sourceforge.jp>
+
+	* opcode/h8300.h (EXPAND_UNOP_EXTENDED_B): Add MODEL.
+	(EXPAND_UNOP_EXTENDED_W): Likewise.
+	(EXPAND_UNOP_EXTENDED_L): Likewise.
+	(struct h8_opcode h8_opcodes): Likewise.
+	(struct h8_opcode h8_opcodes): tas / ldm / stm supported H8S or
+	later.
+
+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* opcode/arc.h (FASTMATH): Add.
+	(SWITCH): Likewise.
+
+2019-07-24  Alan Modra  <amodra@gmail.com>
+
+	* elf/internal.h (ELF_SECTION_IN_SEGMENT_1): Exclude non-alloc
+	sections in GNU_MBIND segments.
+
+2019-07-23  Omar Majid  <omajid@redhat.com>
+
+	* coff/i386.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.
+	(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.
+	(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.
+	(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.
+	(I386_APPLE_MAGIC): Define.
+	(I386_FREEBSD_MAGIC): Define.
+	(I386_LINUX_MAGIC): Define.
+	(I386_NETBSD_MAGIC): Define.
+	(I386BADMAG): Extend macro to allow new magic numbers.
+	* coff/x86_64.h (IMAGE_FILE_MACHINE_NATIVE_APPLE_OVERRIDE): Define.
+	(IMAGE_FILE_MACHINE_NATIVE_FREEBSD_OVERRIDE): Define.
+	(IMAGE_FILE_MACHINE_NATIVE_LINUX_OVERRIDE): Define.
+	(IMAGE_FILE_MACHINE_NATIVE_NETBSD_OVERRIDE): Define.
+	(AMD64_APPLE_MAGIC): Define.
+	(AMD64_FREEBSD_MAGIC): Define.
+	(AMD64_LINUX_MAGIC): Define.
+	(AMD64_NETBSD_MAGIC): Define.
+	(AMD64BADMAG): Extend macro to allow new magic numbers.
+
+2019-07-19  Alan Modra  <amodra@gmail.com>
+
+	* elf/ppc64.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),
+	(R_PPC64_GOT_TLSGD34, R_PPC64_GOT_TLSLD34),
+	(R_PPC64_GOT_TPREL34, R_PPC64_GOT_DTPREL34): Define.
+	(IS_PPC64_TLS_RELOC): Include new tls relocs.
+
+2019-07-18  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ECTF_NOTFUNC): Fix description.
+	(ctf_func_type_info): New.
+	(ctf_func_type_args): Likewise.
+	(ctf_type_aname_raw): Likewise.
+
+2019-07-16  Jan Beulich  <jbeulich@suse.com>
+
+	* opcode/i386.h (POP_SEG386_SHORT): New.
+
+2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_insn_class): sve_size_013
+	renamed to sve_size_13.
+
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf.h (ctf_slice_t): Make cts_offset and cts_bits unsigned
+	short, so following structures are properly aligned.
+
+2019-06-14  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* elf/aarch64.h (R_AARCH64_P32_MOVW_PREL_G0): Define.
+	(R_AARCH64_P32_MOVW_PREL_G0_NC): Define.
+	(R_AARCH64_P32_MOVW_PREL_G1): Define.
+
+2019-06-03  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf.h (ctf_enum.cte_value): Fix type to int32_t.
+
+2019-05-29  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_sect_t): Drop cts_type, cts_flags, and cts_offset.
+	(ctf_id_t): This is now an unsigned type.
+	(CTF_ERR): Cast it to ctf_id_t.  Note that it should only be used
+	for ctf_id_t-returning functions.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_dump_decorate_f): New.
+	(ctf_dump_state_t): new.
+	(ctf_dump): New.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_label_f): New.
+	(ctf_label_set): New.
+	(ctf_label_get): New.
+	(ctf_label_topmost): New.
+	(ctf_label_info): New.
+	(ctf_label_iter): New.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_version): New.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_func_info): New.
+	(ctf_func_args): Likewise.
+	(ctf_lookup_by_symbol): Likewise.
+	(ctf_lookup_by_symbol): Likewise.
+	(ctf_lookup_variable): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_visit_f): New definition.
+	(ctf_member_f): Likewise.
+	(ctf_enum_f): Likewise.
+	(ctf_variable_f): Likewise.
+	(ctf_type_f): Likewise.
+	(ctf_type_isparent): Likewise.
+	(ctf_type_ischild): Likewise.
+	(ctf_type_resolve): Likewise.
+	(ctf_type_aname): Likewise.
+	(ctf_type_lname): Likewise.
+	(ctf_type_name): Likewise.
+	(ctf_type_sizee): Likewise.
+	(ctf_type_align): Likewise.
+	(ctf_type_kind): Likewise.
+	(ctf_type_reference): Likewise.
+	(ctf_type_pointer): Likewise.
+	(ctf_type_encoding): Likewise.
+	(ctf_type_visit): Likewise.
+	(ctf_type_cmp): Likewise.
+	(ctf_type_compat): Likewise.
+	(ctf_member_info): Likewise.
+	(ctf_array_info): Likewise.
+	(ctf_enum_name): Likewise.
+	(ctf_enum_value): Likewise.
+	(ctf_member_iter): Likewise.
+	(ctf_enum_iter): Likewise.
+	(ctf_type_iter): Likewise.
+	(ctf_variable_iter): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (struct bfd): New forward.
+	(ctf_fdopen): New.
+	(ctf_bfdopen): Likewise.
+	(ctf_open): Likewise.
+	(ctf_arc_open): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf.h (CTFA_MAGIC): New.
+	(struct ctf_archive): New.
+	(struct ctf_archive_modent): Likewise.
+	* ctf-api.h (ctf_archive_member_f): New.
+	(ctf_archive_raw_member_f): Likewise.
+	(ctf_arc_write): Likewise.
+	(ctf_arc_close): Likewise.
+	(ctf_arc_open_by_name): Likewise.
+	(ctf_archive_iter): Likewise.
+	(ctf_archive_raw_iter): Likewise.
+	(ctf_get_arc): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_file_close): New declaration.
+	(ctf_getdatasect): Likewise.
+	(ctf_parent_file): Likewise.
+	(ctf_parent_name): Likewise.
+	(ctf_parent_name_set): Likewise.
+	(ctf_import): Likewise.
+	(ctf_setmodel): Likewise.
+	(ctf_getmodel): Likewise.
+	(ctf_setspecific): Likewise.
+	(ctf_getspecific): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (zlib.h): New include.
+	(ctf_sect_t): New.
+	(ctf_sect_names_t): Likewise.
+	(ctf_encoding_t): Likewise.
+	(ctf_membinfo_t): Likewise.
+	(ctf_arinfo_t): Likewise.
+	(ctf_funcinfo_t): Likewise.
+	(ctf_lblinfo_t): Likewise.
+	(ctf_snapshot_id_t): Likewise.
+	(CTF_FUNC_VARARG): Likewise.
+	(ctf_simple_open): Likewise.
+	(ctf_bufopen): Likewise.
+	(ctf_create): Likewise.
+	(ctf_add_array): Likewise.
+	(ctf_add_const): Likewise.
+	(ctf_add_enum_encoded): Likewise.
+	(ctf_add_enum): Likewise.
+	(ctf_add_float): Likewise.
+	(ctf_add_forward): Likewise.
+	(ctf_add_function): Likewise.
+	(ctf_add_integer): Likewise.
+	(ctf_add_slice): Likewise.
+	(ctf_add_pointer): Likewise.
+	(ctf_add_type): Likewise.
+	(ctf_add_typedef): Likewise.
+	(ctf_add_restrict): Likewise.
+	(ctf_add_struct): Likewise.
+	(ctf_add_union): Likewise.
+	(ctf_add_struct_sized): Likewise.
+	(ctf_add_union_sized): Likewise.
+	(ctf_add_volatile): Likewise.
+	(ctf_add_enumerator): Likewise.
+	(ctf_add_member): Likewise.
+	(ctf_add_member_offset): Likewise.
+	(ctf_add_member_encoded): Likewise.
+	(ctf_add_variable): Likewise.
+	(ctf_set_array): Likewise.
+	(ctf_update): Likewise.
+	(ctf_snapshot): Likewise.
+	(ctf_rollback): Likewise.
+	(ctf_discard): Likewise.
+	(ctf_write): Likewise.
+	(ctf_gzwrite): Likewise.
+	(ctf_compress_write): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_errno): New declaration.
+	(ctf_errmsg): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_setdebug): New.
+	(ctf_getdebug): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h: New file.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf.h: New file.
+
+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* elf/aarch64.h (DT_AARCH64_VARIANT_PCS): Define.
+	(STO_AARCH64_VARIANT_PCS): Define.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* elf/ppc64.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC),
+	(R_PPC64_PCREL_OPT, R_PPC64_D34, R_PPC64_D34_LO, R_PPC64_D34_HI30),
+	(R_PPC64_D34_HA30, R_PPC64_PCREL34, R_PPC64_GOT_PCREL34),
+	(R_PPC64_PLT_PCREL34, R_PPC64_PLT_PCREL34_NOTOC),
+	(R_PPC64_ADDR16_HIGHER34, R_PPC64_ADDR16_HIGHERA34),
+	(R_PPC64_ADDR16_HIGHEST34, R_PPC64_ADDR16_HIGHESTA34),
+	(R_PPC64_REL16_HIGHER34, R_PPC64_REL16_HIGHERA34),
+	(R_PPC64_REL16_HIGHEST34, R_PPC64_REL16_HIGHESTA34),
+	(R_PPC64_D28, R_PPC64_PCREL28): Define.
+
+2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	* dis-asm.h (WIDE_OUTPUT): Define.
+	* opcode/ppc.h (prefix_opcodes, prefix_num_opcodes): Declare.
+	(PPC_OPCODE_POWERXX, PPC_GET_PREFIX, PPC_GET_SUFFIX),
+	(PPC_PREFIX_P, PPC_PREFIX_SEG): Define.
+
+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* elf/bpf.h: New file.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* elf/arm.h (Tag_MVE_arch): Define new enum value.
+	* opcode/arm.h (FPU_MVE, FPU_MVE_FP): New MACROs for new features.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHLIMM_UNPRED_22
+	operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_tsz_bhs
+	iclass.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): New SVE_Zm4_11_INDEX operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_shift_tsz_bhsd
+	iclass.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHRIMM_UNPRED_22
+	operand.
+	(enum aarch64_insn_class): Add sve_shift_tsz_hsd iclass.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_013 iclass.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_bh iclass.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_sd2 iclass.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): New SVE_ADDR_ZX operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): New SVE_Zm3_11_INDEX operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_hsd2 iclass.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): New SVE_IMM_ROT3 operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_SVE2
+	AARCH64_FEATURE_SVE2_AES, AARCH64_FEATURE_SVE2_BITPERM,
+	AARCH64_FEATURE_SVE2_SM4, AARCH64_FEATURE_SVE2_SHA3): New
+	feature macros.
+
+2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>
+	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* opcode/mips.h (ASE_EVA_R6): New macro.
+	(M_LLWPE_AB, M_SCWPE_AB): New enum values.
+
+2019-05-01  Sudakshina Das  <sudi.das@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_TME): New.
+	(enum aarch64_opnd): Add AARCH64_OPND_TME_UIMM16.
+
+2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>
+	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* opcode/mips.h (M_LLWP_AB, M_LLDP_AB): New enum values.
+	(M_SCWP_AB, M_SCDP_AB): Likewise.
+
+2019-04-25  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* opcode/mips.h: Update comment for MIPS32 CODE20 operand.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF12.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF18.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF16.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* elf/arm.h (TAG_CPU_ARCH_V8_1M_MAIN): new macro.
+	(MAX_TAG_CPU_ARCH): Set value to above macro.
+	* opcode/arm.h (ARM_EXT2_V8_1M_MAIN): New macro.
+	(ARM_AEXT_V8_1M_MAIN): Likewise.
+	(ARM_AEXT2_V8_1M_MAIN): Likewise.
+	(ARM_ARCH_V8_1M_MAIN): Likewise.
+
+2019-04-11  Sudakshina Das  <sudi.das@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): Add AARCH64_OPND_Rt_SP.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf/common.h (GNU_PROPERTY_X86_ISA_1_AVX512_BF16): New.
+
+2019-04-07  Alan Modra  <amodra@gmail.com>
+
+	Merge from gcc.
+	2019-04-03  Vineet Gupta  <vgupta@synopsys.com>
+	PR89877
+	* longlong.h [__arc__] (add_ssaaaa): Add cc clobber.
+	(sub_ddmmss): Likewise.
+
+2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* bfdlink.h (bfd_link_info): Remove x86-specific linker options.
+
+2019-04-01  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* opcode/arm.h (FPU_NEON_ARMV8_1): New.
+	(FPU_ARCH_NEON_VFP_ARMV8_1): Use FPU_NEON_ARMV8_1.
+	(FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_1): Likewise.
+	(FPU_ARCH_DOTPROD_NEON_VFP_ARMV8): Likewise.
+	(FPU_ARCH_NEON_VFP_ARMV8_2_FP16): New.
+	(FPU_ARCH_NEON_VFP_ARMV8_2_FP16FML): New.
+	(FPU_ARCH_NEON_VFP_ARMV8_4_FP16FML): New.
+	(FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_4): New.
+
+2019-03-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24390
+	* opcode/ppc.h (PPC_OPERAND_CR_REG): Comment.
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* dis-asm.h (struct disassemble_info): Add stop_offset.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+
+	* elf/aarch64.h (DT_AARCH64_PAC_PLT): New.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+	    Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* elf/aarch64.h (DT_AARCH64_BTI_PLT): New.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+
+	* elf/common.h (GNU_PROPERTY_AARCH64_FEATURE_1_AND): New.
+	(GNU_PROPERTY_AARCH64_FEATURE_1_BTI): New.
+	(GNU_PROPERTY_AARCH64_FEATURE_1_PAC): New.
+
+2019-02-20  Alan Hayward  <alan.hayward@arm.com>
+
+	* elf/common.h (NT_ARM_PAC_MASK): Add define.
+
+2019-02-15  Saagar Jha  <saagar@saagarjha.com>
+
+	* mach-o/loader.h: Use new OS names in comments.
+
+2019-02-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* splay-tree.h (splay_tree_delete_key_fn): Update comment.
+	(splay_tree_delete_value_fn): Likewise.
+
+2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* opcode/s390.h (enum s390_opcode_cpu_val): Add
+	S390_OPCODE_ARCH13.
+
+2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+	    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): Remove
+	AARCH64_OPND_ADDR_SIMPLE_2.
+	(enum aarch64_insn_class): Remove ldstgv_indexed.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* coff/ecoff.h: Include coff/sym.h.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-16  Kito Cheng  <kito@andestech.com>
+
+	* elf/riscv.h (SHT_RISCV_ATTRIBUTES): Define.
+	(Tag_RISCV_arch): Likewise.
+	(Tag_RISCV_priv_spec): Likewise.
+	(Tag_RISCV_priv_spec_minor): Likewise.
+	(Tag_RISCV_priv_spec_revision): Likewise.
+	(Tag_RISCV_unaligned_access): Likewise.
+	(Tag_RISCV_stack_align): Likewise.
+
+2019-01-14  Pavel I. Kryukov  <kryukov@frtk.ru>
+
+	* dis-asm.h: include <string.h>
+
+2019-01-10  Nick Clifton  <nickc@redhat.com>
+
+	* Merge from GCC:
+	2018-12-22  Jason Merrill  <jason@redhat.com>
+
+	* demangle.h: Remove support for ancient GNU (pre-3.0), Lucid,
+	ARM, HP, and EDG demangling styles.
+
+2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>
+
+	Merge from GCC:
+	PR other/16615
+
+	* libiberty.h: Mechanically replace "can not" with "cannot".
+	* plugin-api.h: Likewise.
+
+2018-12-25  Yoshinori Sato <ysato@users.sourceforge.jp>
+
+	* elf/rx.h (EF_RX_CPU_MASK): Update new bits.
+	(E_FLAG_RX_V3): New RXv3 type.
+	* opcode/rx.h (RX_Size): Add double size.
+	(RX_Operand_Type): Add double FPU registers.
+	(RX_Opcode_ID): Add new instuctions.
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/gdb/ChangeLog-1995 b/gdb/ChangeLog-1995
index 9d4149ebf6..59e88fe4e2 100644
--- a/gdb/ChangeLog-1995
+++ b/gdb/ChangeLog-1995
@@ -1358,7 +1358,6 @@ Wed Sep 20 08:16:03 1995  steve chamberlain  <sac@slash.cygnus.com>
 
 	* defs.h (xmalloc, xrealloc): Delete, they're declared in libiberty.h.
 	(GETENV_PROVIDED, FCLOSE_PROVIDED): New.
-	* doc/gdbint.texinfo (GETENV_PROVIDED, FCLOSE_PROVIDED): Document.
 	* remote-sim.[ch] (sim_callback_write_stdout): New.
 
 Tue Sep 19 15:28:58 1995  Per Bothner  <bothner@kalessin.cygnus.com>
@@ -3531,8 +3530,6 @@ Fri Mar 24 15:45:42 1995  Stu Grossman  (grossman@cygnus.com)
 	* remote-est.c:  Rewrite to use new monitor conventions.
 	* config/m68k/est.mt (TDEPFILES):  Add monitor.o.
 	* config/m68k/tm-est.h:  Set NUM_REGS to 18.
-	* testsuite/gdb.base/break.exp:  Lots of cleanups.  Use gdb_test
-	more thoroughly.
 
 Thu Mar 23 23:20:00 1995  Jeff Law  (law@snake.cs.utah.edu)
 
diff --git a/gdb/ChangeLog-2002 b/gdb/ChangeLog-2002
index e5c141940a..fdd1300d66 100644
--- a/gdb/ChangeLog-2002
+++ b/gdb/ChangeLog-2002
@@ -11,10 +11,6 @@
 	* objc-exp.y (parse_number): Cast sscanf arguments to proper type.
 	(yylex): Initialize c to avoid uninitialized warning.
 
-2002-12-29  Kazu Hirata  <kazu@cs.umass.edu>
-
-	* doc/fdl.texi: Revert the last change.
-
 2002-12-29  Mark Kettenis  <kettenis@gnu.org>
 
 	* tracepoint.c (ISATTY): Removed.
@@ -1725,7 +1721,7 @@
 
 2002-11-18  Adam Fedor  <fedor@gnu.org>
 
-	* gdb/parser-defs.h: (struct objc_class_str): New structure
+	* parser-defs.h: (struct objc_class_str): New structure
 	for parsing ObjC classes.
 
 2002-11-18  Andrew Cagney  <ac131313@redhat.com>
@@ -3622,14 +3618,12 @@ Wed Nov 13 19:51:05 2002  Andrew Cagney  <cagney@redhat.com>
 	(charset.o): Move.
 	* c-lang.c: #include "gdb_string.h"
 
-2002-09-20  Fernando Nasser  <fnasser@redhat.com>
+2002-09-20  George Helffrich  <george@gly.bris.ac.uk>
 
-	From 2002-07-02  George Helffrich <george@gly.bris.ac.uk>
 	* cli/cli-cmds.c (list_command): New function.  Implements the new
 	cli edit command.
 	(_init_cli_cmds): Add new command definition.
 	* gdb.1: Document edit command.
-	* doc/gdb.texinfo: Document edit command.
 
 2002-09-20  Fernando Nasser  <fnasser@redhat.com>
 
@@ -3910,7 +3904,7 @@ Wed Nov 13 19:51:05 2002  Andrew Cagney  <cagney@redhat.com>
 
 2002-09-17  Theodore A. Roth  <troth@verinet.com>
 
-	* gdb/avr-tdep.c(avr_scan_prologue): Fix bad call to 
+	* avr-tdep.c(avr_scan_prologue): Fix bad call to 
 	generic_read_register_dummy() (PR gdb/703).
 	(avr_push_return_address): #if 0 out unused vars.
 	(avr_gdbarch_init): Enable use of avr_push_return_address().
@@ -4227,7 +4221,7 @@ Fri Sep 13 07:42:09 2002  Andrew Cagney  <cagney@redhat.com>
 
 2002-09-03  Theodore A. Roth  <troth@verinet.com>
 
-	* gdb/avr-tdep.c (avr_gdbarch_init): Use
+	* avr-tdep.c (avr_gdbarch_init): Use
 	generic_unwind_get_saved_register.
 
 2002-09-03  David Carlton  <carlton@math.stanford.edu>
@@ -4418,10 +4412,7 @@ Fri Sep 13 07:42:09 2002  Andrew Cagney  <cagney@redhat.com>
 
 	* cli/cli-script.c (copy_command_lines): New function.
 	* defs.h (copy_command_lines): Export.
-	* testsuite/gdb.base/commands.exp: New tests for commands
-	attached to a temporary breakpoint, and for commands that
-	delete the breakpoint they are attached to.
-	
+
 2002-08-26  Michael Snyder  <msnyder@redhat.com>
 
 	* breakpoint.c (bpstat_stop_status): Instead of copying the 
@@ -9057,7 +9048,6 @@ Fri Aug  2 15:53:50 2002  Andrew Cagney  <cagney@redhat.com>
 	(osabi.o): New dependency list.
 	* osabi.c: New file.
 	* osabi.h: New file.
-	* doc/gdbint.texinfo: Document new generic OS ABI framework.
 
 	* Makefile.in (alpha_tdep_h): Define and use instead of
 	alpha-tdep.h.
@@ -12392,14 +12382,12 @@ Wed Apr 24 14:22:21 2002  Andrew Cagney  <cagney@redhat.com>
 	* MAINTAINERS: Change Past Maintainer addresses to ``foo at bar
 	dot com'' form.  Remove references to cygnus.com and sourceware.
 
-2002-02-23  Andrew Cagney  <ac131313@redhat.com>
+2002-02-23  Paul Eggert  <eggert@twinsun.com>
 
-	From 2002-02-19 Paul Eggert <eggert@twinsun.com>:
 	* Makefile.in (VER): Change "head -1" to "sed q", since POSIX
 	1003.1-2001 no longer allows "head -1".
-	* gdb/Makefile.in (version.c): Likewise.
-	* gdb/doc/Makefile.in (GDBvn.texi): Likewise.
-	* gdb/CONTRIBUTE: Change "diff -c3" to "diff -c", which is
+	* Makefile.in (version.c): Likewise.
+	* CONTRIBUTE: Change "diff -c3" to "diff -c", which is
 	equivalent.  POSIX 1003.1-2001 no longer allows "diff -c3".
 
 2002-02-23  Andrew Cagney  <ac131313@redhat.com>
@@ -13365,8 +13353,6 @@ Wed Apr 24 14:22:21 2002  Andrew Cagney  <cagney@redhat.com>
 	* arch-utils.c (default_print_float_info): New function.
 	* arch-utils.h (default_print_float_info): Prototype it.
 	* infcmd.c (float_info): Call PRINT_FLOAT_INFO.
-	* doc/gdbint.texinfo (FLOAT_INFO): Mark as deprecated.
-	(PRINT_FLOAT_INFO): Document it.
 
 	* arm-tdep.c (arm_print_float_info): Renamed from arm_float_info.
 	* config/arm/tm-arm.h (FLOAT_INFO): Delete.
diff --git a/gdb/ChangeLog-2015 b/gdb/ChangeLog-2015
index a741e69564..662e9283e2 100644
--- a/gdb/ChangeLog-2015
+++ b/gdb/ChangeLog-2015
@@ -340,12 +340,12 @@
 
 2015-12-09  Luis Machado  <lgustavo@codesourcery.com>
 
-	* gdb/mi/mi-cmd-var.c (mi_parse_format): Handle new "zero-hexadecimal"
+	* mi/mi-cmd-var.c (mi_parse_format): Handle new "zero-hexadecimal"
 	format.
-	* gdb/varobj.c (varobj_format_string): Add "zero-hexadecimal" entry.
+	* varobj.c (varobj_format_string): Add "zero-hexadecimal" entry.
 	(format_code): Add 'z' entry.
 	(varobj_set_display_format): Handle FORMAT_ZHEXADECIMAL.
-	* gdb/varobj.h (varobj_display_formats) <FORMAT_ZHEXADECIMAL>: New enum
+	* varobj.h (varobj_display_formats) <FORMAT_ZHEXADECIMAL>: New enum
 	field.
 	* NEWS: Add new note to MI changes citing the new zero-hexadecimal
 	format for -var-set-format.
@@ -1085,7 +1085,7 @@
 2015-11-04  Marcin Kościelnicki  <koriakin@0x04.net>
 
 	PR/18376
-	* gdb/s390-linux-tdep.c (s390_is_partial_instruction): New function.
+	* s390-linux-tdep.c (s390_is_partial_instruction): New function.
 	(s390_software_single_step): New function.
 	(s390_displaced_step_hw_singlestep): New function.
 	(s390_gdbarch_init): Fill gdbarch slots with the above.
@@ -1093,8 +1093,8 @@
 2015-11-04  Marcin Kościelnicki  <koriakin@0x04.net>
 
 	PR/18376
-	* gdb/configure.tgt: Add linux-record.o to s390*-linux.
-	* gdb/s390-linux-tdep.c: #include "linux-record.h", "record-full.h"
+	* configure.tgt: Add linux-record.o to s390*-linux.
+	* s390-linux-tdep.c: #include "linux-record.h", "record-full.h"
 	(s390_linux_record_tdep): New static global variable.
 	(s390x_linux_record_tdep): New static global variable.
 	(s390_all_but_pc_registers_record): New function.
@@ -1744,7 +1744,7 @@
 
 2015-10-21  Aleksandar Ristovski  <aristovski@qnx.com>
 
-	* gdb/nto-tdep.c (QNX_NOTE_NAME, QNX_INFO_SECT_NAME): New defines.
+	* nto-tdep.c (QNX_NOTE_NAME, QNX_INFO_SECT_NAME): New defines.
 	(nto_sniff_abi_note_section): New function.
 	(nto_elf_osabi_sniffer): Use new function to recognize nto specific
 	binary.
@@ -1766,7 +1766,7 @@
 
 2015-10-20  Aleksandar Ristovski  <aristovski@qnx.com>
 
-	* gdb/nto-procfs.c (procfs_pid_to_exec_file): New function.
+	* nto-procfs.c (procfs_pid_to_exec_file): New function.
 	(init_procfs_targets): Wire new function.
 
 2015-10-20  Aleksandar Ristovski  <aristovski@qnx.com>
@@ -8207,11 +8207,6 @@
 	(arm_linux_fetch_inferior_registers): Call fetch_fpregs and
 	fetch_regs instead.
 
-2015-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* doc/gdb.texinfo (TUI): Restructure documentation on TUI layout
-	and focus commands.
-
 2015-07-06  Joel Brobecker  <brobecker@adacore.com>
 
 	* NEWS: Create a new section for the next release branch.
@@ -8230,10 +8225,6 @@
 	(remove_breakpoint): Likewise.
 	(mark_breakpoints_out): Likewise.
 
-2015-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* doc/gdb.texinfo (TUI): Add comma after @xref.
-
 2015-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
 
 	* tui/tui-win.c (tui_set_focus): Use structure member 'generic'
@@ -9259,7 +9250,7 @@
 
 2015-05-28  Kyle Huey  <me@kylehuey.com>  (tiny patch)
 
-	* gdb/arm-tdep.c (arm_gdbarch_init): Perform arm_abi detection on
+	* arm-tdep.c (arm_gdbarch_init): Perform arm_abi detection on
 	ELFOSABI_GNU binaries.
 
 2015-05-27  Doug Evans  <dje@google.com>
@@ -10895,7 +10886,7 @@
 
 2015-04-02  Gary Benson <gbenson@redhat.com>
 
-	* gdb/gdb_bfd.h (TARGET_SYSROOT_PREFIX): New definition.
+	* gdb_bfd.h (TARGET_SYSROOT_PREFIX): New definition.
 	(is_target_filename): New declaration.
 	(gdb_bfd_has_target_filename): Likewise.
 	(gdb_bfd_open): Update documentation comment.
@@ -11050,7 +11041,7 @@
 2015-03-31  Antoine Tremblay  <antoine.tremblay@ericsson.com>
 
 	* NEWS: Mention info os cpus support.
-	* gdb/nat/linux-osdata.c (linux_xfer_osdata_cpus): New function.
+	* nat/linux-osdata.c (linux_xfer_osdata_cpus): New function.
 	(struct osdata_type): Add cpus entry, reorder the entries in
 	alphabetical order.
 
@@ -12525,7 +12516,7 @@
 
 2015-02-26  Antoine Tremblay  <antoine.tremblay@ericsson.com>
 
-	* gdb/infcmd.c (print_return_value): use type_to_string to print type.
+	* infcmd.c (print_return_value): use type_to_string to print type.
 
 2015-02-26  Jan Kratochvil  <jan.kratochvil@redhat.com>
 
@@ -13014,7 +13005,7 @@
 2015-02-09  Sergio Durigan Junior  <sergiodj@redhat.com>
 
 	PR remote/17946
-	* gdb/remote.c (remote_parse_stop_reply): Fix wrong comparison
+	* remote.c (remote_parse_stop_reply): Fix wrong comparison
 	of pointer against char.
 
 2015-02-09  Mark Wielaard  <mjw@redhat.com>
diff --git a/gdb/ChangeLog-2017 b/gdb/ChangeLog-2017
index aaadf142a4..9c66577fe2 100644
--- a/gdb/ChangeLog-2017
+++ b/gdb/ChangeLog-2017
@@ -162,7 +162,7 @@
 
 2017-12-17  Stafford Horne  <shorne@gmail.com>
 
-	* gdb/or1k-tdep.c (show_or1k_debug): Fix function parameter alignment.
+	* or1k-tdep.c (show_or1k_debug): Fix function parameter alignment.
 	(or1k_analyse_inst): Likewise.
 	(or1k_single_step_through_delay): Likewise.
 	(or1k_frame_cache): Fix parameter alignment and use paddress()
@@ -5354,12 +5354,12 @@
 	type to std::vector.
 	* tracepoint.c (traceframe_available_memory): Change parameter
 	type to std::vector, adjust.
-	* gdb/mi/mi-main.c (mi_cmd_trace_frame_collected): Adjust to
+	* mi/mi-main.c (mi_cmd_trace_frame_collected): Adjust to
 	std::vector change.
-	* gdb/Makefile.in (SUBDIR_UNITTESTS_SRCS): Add
+	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add
 	unittests/memrange-selftests.c.
 	(SUBDIR_UNITTESTS_OBS): Add memrange-selftests.o.
-	* gdb/unittests/memrange-selftests.c: New file.
+	* unittests/memrange-selftests.c: New file.
 
 2017-10-16  Pedro Alves  <palves@redhat.com>
 
@@ -15712,8 +15712,8 @@
 2017-03-21  Ivo Raisr  <ivo.raisr@oracle.com>
 
 	PR tdep/20928
-	* gdb/sparc-tdep.h (gdbarch_tdep) <sparc64_ccr_type>: New field.
-	* gdb/sparc64-tdep.c (sparc64_ccr_type): New function.
+	* sparc-tdep.h (gdbarch_tdep) <sparc64_ccr_type>: New field.
+	* sparc64-tdep.c (sparc64_ccr_type): New function.
 	(sparc64_fsr_type): Fix %fsr decoding.
 
 2017-03-21  Tim Wiederhake  <tim.wiederhake@intel.com>
@@ -15798,8 +15798,6 @@
 
 	PR gdb/14441
 	* NEWS: Mention support for rvalue references in GDB and python.
-	* doc/gdb.texinfo (C Plus Plus Expressions): Mention that GDB
-	supports both lvalue and rvalue references.
 
 2017-03-20  Artemiy Volkov  <artemiyv@acm.org>
 
@@ -15874,8 +15872,6 @@
 2017-03-20  Artemiy Volkov  <artemiyv@acm.org>
 
 	PR gdb/14441
-	* doc/python.texi (Types in Python): Add TYPE_CODE_RVALUE_REF to
-	table of constants.
 	* python/lib/gdb/command/explore.py: Support exploring values
 	of rvalue reference types.
 	* python/lib/gdb/types.py: Implement get_basic_type() for
@@ -16338,7 +16334,6 @@
 2017-02-28  Peter Bergner  <bergner@vnet.ibm.com>
 
 	* NEWS: Mention new set/show disassembler-options commands.
-	* doc/gdb.texinfo: Document new set/show disassembler-options commands.
 	* disasm.c: Include "arch-utils.h", "gdbcmd.h" and "safe-ctype.h".
 	(prospective_options): New static variable.
 	(gdb_disassembler::gdb_disassembler): Initialize
@@ -17624,7 +17619,7 @@
 
 2017-01-27  Kees Cook  <keescook@google.com>
 
-	* gdb/arm-linux-nat.c (arm_linux_fetch_inferior_registers): Call
+	* arm-linux-nat.c (arm_linux_fetch_inferior_registers): Call
 	fetch_fpregs if target has fpa registers.
 	(arm_linux_store_inferior_registers): Call store_fpregs if target
 	has fpa registers.
diff --git a/gdb/ChangeLog-2000 b/gdb/ChangeLog-2000
index 25ced55f09..7a4076dbc4 100644
--- a/gdb/ChangeLog-2000
+++ b/gdb/ChangeLog-2000
@@ -4521,7 +4521,7 @@ Mon May 22 11:46:01 2000  Andrew Cagney  <cagney@b1.cygnus.com>
 
 2000-05-17  Eli Zaretskii  <eliz@is.elta.co.il>
 
-	* gdb/config/djgpp/README: Fine-tune installation instructions
+	* config/djgpp/README: Fine-tune installation instructions
         based on user reports.
 
 Wed May 17 18:27:45 2000  Andrew Cagney  <cagney@b1.cygnus.com>
@@ -5787,8 +5787,6 @@ Fri Apr  7 13:33:43 2000  Andrew Cagney  <cagney@b1.cygnus.com>
 	1 bit for the flag.
 	* config/sparc/tm-sun4sol2.h: ditto.
 	(SOFTWARE_SINGLE_STEP, SOFTWARE_SINGLE_STEP_P): undefine.
-	* testsuite/gdb.threads/pthreads.exp (all_threads_running): Allow
-	for more than 15 thread increments.
 
 2000-04-06  Eli Zaretskii  <eliz@is.elta.co.il>
 
@@ -8121,14 +8119,12 @@ Thu Jan 13 23:34:17 EST 2000  Nicholas Duffek <nsd@cygnus.com>
 	* config/i386/tm-i386sol2.h: ditto.
 	* config/sparc/tm-sun4sol2.h: ditto.
 	* config/i386/i386v42mp.mh: add uw-thread.o to NATDEPFILES.
-	* testsuite/gdb.threads/pthreads.exp: Try to link with -lthread
-	if -lpthread and -lpthreads fail.
 
 	* procfs.c: (PIDGET, TIDGET, MERGEPID): change default to no-op.
 	(proc_flags): combine flags that UnixWare splits into two locations.
 	(proc_modify_flag): add support for PR_KLC (kill on last close).
 	(proc_[un]set_kill_on_last_close): new functions.
-	
+
 2000-01-07  Elena Zannoni  <ezannoni@kwikemart.cygnus.com>
 
 	* infrun.c (normal_stop): Print out thread id when we stop.
diff --git a/gdb/ChangeLog-1993 b/gdb/ChangeLog-1993
index 4aba2d330f..994e6a3913 100644
--- a/gdb/ChangeLog-1993
+++ b/gdb/ChangeLog-1993
@@ -411,9 +411,9 @@ Mon Nov 22 23:42:59 1993  Steve Chamberlain  (sac@jonny.cygnus.com)
 Mon Nov 22 11:03:45 1993  Fred Fish  (fnf@cygnus.com)
 
 	Merged changes from kev@spuds.geg.mot.com (Kevin A. Buettner):
-	* gdb/config/m88k/delta88.mh (NATDEPFILES): Added corelow.o and
+	* config/m88k/delta88.mh (NATDEPFILES): Added corelow.o and
 	coredep.o to this list.
-	* gdb/m88k-nat.c (m88k_register_u_addr):  Avoid error when passed
+	* m88k-nat.c (m88k_register_u_addr):  Avoid error when passed
 	the number for an M88110 extended register by just returning the
 	address of r0.
 
@@ -5222,7 +5222,7 @@ Mon May 10 19:38:34 1993  John Gilmore  (gnu@cygnus.com)
 Mon May 10 16:03:03 1993  Jim Kingdon  (kingdon@cygnus.com)
 
         Patch from Jeffrey Law:
-        * gdb/config/pa/nm-hppab.h (PTRACE_ARG3_TYPE): Define as caddr_t.
+        * config/pa/nm-hppab.h (PTRACE_ARG3_TYPE): Define as caddr_t.
 
 Mon May 10 15:28:27 1993  Ian Lance Taylor  (ian@cygnus.com)
 
@@ -5274,8 +5274,8 @@ Thu May  6 20:55:35 1993  Fred Fish  (fnf@cygnus.com)
 Thu May  6 15:47:45 1993  Stu Grossman  (grossman@cygnus.com)
 
 	* More patches from Jeffrey Law (law@cs.utah.edu).
-	* gdb/config/nm-hppab.h (PTRACE_ARG3_TYPE): Define as caddr_t.
-	* gdb/config/pa/tm-hppah.h (millicode_start, millicode_end):
+	* config/nm-hppab.h (PTRACE_ARG3_TYPE): Define as caddr_t.
+	* config/pa/tm-hppah.h (millicode_start, millicode_end):
 	Delete unnecessary declarations.
 
 Thu May  6 15:15:46 1993  Stu Grossman  (grossman@cygnus.com)
@@ -5290,25 +5290,25 @@ Thu May  6 10:03:41 1993  Jim Kingdon  (kingdon@cygnus.com)
 Wed May  5 15:16:33 1993  Stu Grossman  (grossman@cygnus.com)
 
         * Patches from Jeffrey Law <law@cs.utah.edu>.
-	* gdb/hppa-tdep.c: Declare frame_saved_pc.
+	* hppa-tdep.c: Declare frame_saved_pc.
 	(frameless_function_invocation): New function.
 	(frame_saved_pc, init_extra_frame_info): Use 
 	frameless_function_invocation.
-	* gdb/config/pa/tm-hppa.h (SAVED_PC_AFTER_CALL): Use saved_pc_after
+	* config/pa/tm-hppa.h (SAVED_PC_AFTER_CALL): Use saved_pc_after
 	call instead of just grabbing the value currently in %r2.
 	(FRAMELESS_FUNCTION_INVOCATION): Use frameless_function_invocation.
-	* gdb/config/pa/tm-hppah.h (SAVED_PC_AFTER_CALL): Delete private
+	* config/pa/tm-hppah.h (SAVED_PC_AFTER_CALL): Delete private
 	definition and use the common one in tm-hppa.h.
-	* gdb/hppa-tdep.c (frame_chain_valid): If "use_unwind" is true, then
+	* hppa-tdep.c (frame_chain_valid): If "use_unwind" is true, then
 	use unwind descriptors to determine if the frame chain is valid.
-	* gdb/hppa-tdep.c (find_dummy_frame_regs):  Rework so that
+	* hppa-tdep.c (find_dummy_frame_regs):  Rework so that
 	it does not assume %r4 is the frame pointer.
-	* gdb/hppa-pinsn.c (print_insn): Handle 'r' and 'R' for break, rsm,
+	* hppa-pinsn.c (print_insn): Handle 'r' and 'R' for break, rsm,
 	and ssm instructions.
-	* gdb/hppa-tdep.c (extract_5r_store, extract_5R_store): New
+	* hppa-tdep.c (extract_5r_store, extract_5R_store): New
 	helper functions for print_insn.
-	* gdb/hppa-tdep.c (gcc_p, hpux_cc_p): Delete unused functions.
-	* gdb/config/pa/tm-hppa.h (ABOUT_TO_RETURN): Handle a return
+	* hppa-tdep.c (gcc_p, hpux_cc_p): Delete unused functions.
+	* config/pa/tm-hppa.h (ABOUT_TO_RETURN): Handle a return
 	which nullifies the following instruction.
 
 Tue May  4 12:11:38 1993  Jim Kingdon  (kingdon@cygnus.com)
@@ -5490,8 +5490,6 @@ Thu Apr 29 00:03:59 1993  Fred Fish  (fnf@cygnus.com)
 	to access the field.
 	* config/convex/xm-convex.h (LONG_LONG):  Replace with
 	CC_HAS_LONG_LONG.  Add define for PRINTF_HAS_LONG_LONG.
-	* doc/gdbint.texinfo (LONG_LONG):  Replace with CC_HAS_LONG_LONG.
-	Add PRINTF_HAS_LONG_LONG references.
 
 Wed Apr 28 06:11:38 1993  Jim Kingdon  (kingdon@cygnus.com)
 
@@ -5520,12 +5518,6 @@ Wed Apr 28 06:11:38 1993  Jim Kingdon  (kingdon@cygnus.com)
 
 	* config/sparc/xm-sun4os4.h [__STDC__]: Don't use MALLOC_INCOMPATIBLE.
 
-Wed Apr 28 11:39:18 1993  Roland H. Pesch  (pesch@fowanton.cygnus.com)
-
-	* doc/gdb.texinfo: make node "Shell Commands" unconditional;
-	describe `set demangle-style arm' (not cfront); 
-	mention can type `q' to discard output, when gdb pages
-
 Wed Apr 28 11:32:39 1993  Peter Schauer  (pes@regent.e-technik.tu-muenchen.de)
 
 	* valops.c (search_struct_field): Fix gdb core dump with incomplete
@@ -5638,10 +5630,6 @@ Fri Apr 23 10:34:02 1993  Stu Grossman  (grossman@cygnus.com)
 	prefix for func	name.  (FIX_CALL_DUMMY):  Move code into
 	hppah-tdep.c.
 
-	* testsuite/gdb.t16/gdbme.c, testsuite/gdb.t17/gdbme.c:  Add calls
-	to malloc() so that we can test GDB eval of dynamically created
-	arrays (like char strings in `print "foo"').
-
 Fri Apr 23 01:28:14 1993  Peter Schauer  (pes@regent.e-technik.tu-muenchen.de)
 
 	* printcmd.c (print_address_symbolic): Search symtabs as well as the
@@ -6202,7 +6190,6 @@ Mon Mar 29 15:03:25 1993  Fred Fish  (fnf@cygnus.com)
 	tm-a29k.h.
 	* config/a29k/a29k-udi.mt (MT_CFLAGS):  Remove TARGET_AM29K
 	define that does not appear anywhere else in the gdb source tree.
-	* doc/gdbinit.texinfo:  Document renaming of tm-29k.h to tm-a29k.h.
 
 Mon Mar 29 13:55:29 1993  Jim Kingdon  (kingdon@cygnus.com)
 
@@ -6753,11 +6740,6 @@ Tue Feb 23 18:58:11 1993  Mike Werner  (mtw@poseidon.cygnus.com)
 
 	* configure.in: added testsuite to configdirs.
 
-Tue Feb 23 11:46:11 1993  Mike Stump  (mrs@cygnus.com)
-
-	* doc/stabs.texi: The `this' pointer is now known by the name
-	`this' instead of `$t'.
-
 Tue Feb 23 11:21:33 1993  Fred Fish  (fnf@cygnus.com)
 
 	* dwarfread.c (read_tag_string_type):  Rewrite to allow forward
@@ -6788,13 +6770,13 @@ Mon Feb 22 15:21:54 1993  Ian Lance Taylor  (ian@cygnus.com)
 
 Mon Feb 22 07:54:03 1993  Mike Werner  (mtw@poseidon.cygnus.com)
 
-        * gdb/testsuite: made modifications to testcases, etc., to allow
+        * testsuite: made modifications to testcases, etc., to allow
         them to work properly  given the reorganization of deja-gnu and the
         relocation of the testcases from deja-gnu to a "tool" subdirectory.
 
 Sun Feb 21 10:55:55 1993  Mike Werner  (mtw@poseidon.cygnus.com)
 
-	* gdb/testsuite: Initial creation of gdb/testsuite.
+	* testsuite: Initial creation of gdb/testsuite.
 	Migrated dejagnu testcases and support files for testing nm to
 	gdb/testsuite from deja-gnu.  These files were moved "as is"
 	with no modifications.	This migration is part of a major overhaul
@@ -6961,8 +6943,6 @@ Wed Feb 10 23:42:37 1993  John Gilmore  (gnu@cygnus.com)
 	* Makefile.in:  xcoffread.o is not built by default.
 	* xm-rs6000.h (IBM6000_HOST):  Remove.
 	* config/rs6000.mh (NATDEPFILES): xcoffread.o is native only.
-	* doc/gdbint.texinfo:  Eliminate IBM6000_HOST, document
-	IBM6000_TARGET.
 
 Wed Feb 10 18:31:20 1993  Stu Grossman  (grossman at cygnus.com)
 
diff --git a/gdb/ChangeLog-2007 b/gdb/ChangeLog-2007
index 3d90983d95..51c6cbd293 100644
--- a/gdb/ChangeLog-2007
+++ b/gdb/ChangeLog-2007
@@ -2342,8 +2342,6 @@
 
 2007-10-16  Gaius Mulley  <gaius@glam.ac.uk>
 
-        * doc/gdb.texinfo:  Add TSIZE definition, removed
-	statement about unbounded arrays being unimplemented.
 	* m2-valprint.c (m2_print_array_contents):  New function.
 	(m2_print_unbounded_array):  New function.
 	(m2_print_array_contents):  New function.
@@ -8382,12 +8380,11 @@
 	varobj_update_one.
 	* mi/mi-cmds.c (mi_cmds): Register '-var-set-frozen'.
 	* mi/mi-cmds.h (mi_cmd_var_set_frozen): Declare.
-	
+
 2007-04-13  Paul Brook  <paul@codesourcery.com>
 
 	* target-descriptions.c (tdesc_named_type): Add ieee_single and
 	ieee_double.
-	* doc/gdb.texinfo: Document ieee_single and ieee_double target types.
 
 2007-04-13  Daniel Jacobowitz  <dan@codesourcery.com>
 
@@ -8486,7 +8483,6 @@
 
 	* configure.ac (build_warnings): Add -Wno-char-subscripts.
 	* configure: Regenerate.
-	* doc/gdbint.texinfo (warning flags): Add -Wno-char-subscripts.
 
 2007-04-11  Jan Kratochvil  <jan.kratochvil@redhat.com>
 
@@ -9511,9 +9507,9 @@
 2007-02-08  Daniel Jacobowitz  <dan@codesourcery.com>
 
 	Reported by timeless@gmail.com:
-	* gdb/target.c (target_flash_erase): Do not return void value.
+	* target.c (target_flash_erase): Do not return void value.
 	(target_flash_done): Likewise.
-	* gdb/cli/cli-cmds.c (source_command): Likewise.
+	* cli/cli-cmds.c (source_command): Likewise.
 
 2007-02-08  Fred Fish  <fnf@specifix.com>
 
@@ -9665,7 +9661,7 @@
 
 2007-02-01  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>
 
-	* gdb/remote-m32r.sdi.c (m32r_fetch_register): Change PWD mask.
+	* remote-m32r.sdi.c (m32r_fetch_register): Change PWD mask.
         (m32r_store_register): Ditto.
 
 2007-01-30  Vladimir Prus  <vladimir@codesourcery.com>
diff --git a/gdb/ChangeLog-2004 b/gdb/ChangeLog-2004
index 0481c1dfb1..e56ab22669 100644
--- a/gdb/ChangeLog-2004
+++ b/gdb/ChangeLog-2004
@@ -1388,7 +1388,7 @@
 
 2004-11-03  Andrew Cagney  <cagney@gnu.org>
 
-	* gdb/NEWS: Mention internationalization, m32r-*-linux-gnu, 'p'
+	* NEWS: Mention internationalization, m32r-*-linux-gnu, 'p'
 	packet, obsolete configurations, end-of-life deprecated_registers.
 
 2004-11-02  Mark Kettenis  <kettenis@gnu.org>
@@ -4209,8 +4209,6 @@
 
 2004-08-11  Joel Brobecker  <brobecker@gnat.com>
 
-	* doc/gdbint.texinfo (Host Definition): Remove documentation
-	for USE_O_NOCTTY, no longer used.
 	* config/xm-aix4.h (USE_O_NOCTTY): Remove, no longer used.
 	* config/rs6000/xm-rs6000.h (USE_O_NOCTTY): Likewise.
 
@@ -6693,7 +6691,7 @@
 
 2004-06-06  Paul Brook  <paul@codesourcery.com>
 
-	* gdb/dwarf2-frame.c (decode_frame_entry_1): Decode version 3 CIE
+	* dwarf2-frame.c (decode_frame_entry_1): Decode version 3 CIE
 	records.
 
 2004-06-08  Paul N. Hilfinger  <Hilfinger@gnat.com>
@@ -6880,7 +6878,7 @@
 2004-06-02  Albert Chin-A-Young  <china@thewrittenword.com>
 
 	Committed by Andrew Cagney.
-	* gdb/dictionary.c, gdb/gdbtypes.h: Remove trailing comma
+	* dictionary.c, gdbtypes.h: Remove trailing comma
 	after last enum constant to avoid error from IBM C
 	compiler.
 
diff --git a/gdb/ChangeLog-2018 b/gdb/ChangeLog-2018
index 2f21e3f8db..a307904b23 100644
--- a/gdb/ChangeLog-2018
+++ b/gdb/ChangeLog-2018
@@ -368,18 +368,18 @@
 
 2018-12-19  Andrew Burgess  <andrew.burgess@embecosm.com>
 
-	* gdb/dummy-frame.c (default_dummy_id): Defined new function.
-	* gdb/dummy-frame.h (default_dummy_id): Declare new function.
-	* gdb/frame-unwind.c (default_unwind_pc): Define new function.
+	* dummy-frame.c (default_dummy_id): Defined new function.
+	* dummy-frame.h (default_dummy_id): Declare new function.
+	* frame-unwind.c (default_unwind_pc): Define new function.
 	(default_unwind_sp): Define new function.
-	* gdb/frame-unwind.h (default_unwind_pc): Declare new function.
+	* frame-unwind.h (default_unwind_pc): Declare new function.
 	(default_unwind_sp): Declare new function.
-	* gdb/frame.c (frame_unwind_pc): Assume gdbarch_unwind_pc is
+	* frame.c (frame_unwind_pc): Assume gdbarch_unwind_pc is
 	available.
 	(get_frame_sp): Assume that gdbarch_unwind_sp is available.
-	* gdb/gdbarch.c: Regenerate.
-	* gdb/gdbarch.h: Regenerate.
-	* gdb/gdbarch.sh: Update definition of dummy_id, unwind_pc, and
+	* gdbarch.c: Regenerate.
+	* gdbarch.h: Regenerate.
+	* gdbarch.sh: Update definition of dummy_id, unwind_pc, and
 	unwind_sp.  Add additional header files to be included in
 	generated file.
 
@@ -839,7 +839,7 @@
 2018-11-29  Rajendra SY  <rajendra.sy@gmail.com>
 
 	PR gdb/23093
-	* gdb/fbsd-tdep.c (fbsd_gdb_signal_from_target)
+	* fbsd-tdep.c (fbsd_gdb_signal_from_target)
 	(fbsd_gdb_signal_to_target): New.
 	(fbsd_init_abi): Install gdbarch "signal_from_target" and
 	"signal_to_target" methods.
@@ -1069,7 +1069,7 @@
 2018-11-21  Benno Fünfstück  <benno.fuenfstueck@gmail.com>
 
 	PR python/23714
-	* gdb/python/python.c (execute_gdb_command): Call
+	* python/python.c (execute_gdb_command): Call
 	prevent_dont_repeat earlier to avoid affecting dont_repeat.
 
 2018-11-21  Andrew Burgess  <andrew.burgess@embecosm.com>
@@ -5038,7 +5038,7 @@
 2018-08-16  Gary Benson <gbenson@redhat.com>
 
 	PR gdb/13000:
-	* gdb/main.c (captured_main_1): Exit with nonzero status
+	* main.c (captured_main_1): Exit with nonzero status
 	in batch mode if the last command to be executed failed.
 	* NEWS: Mention the above.
 
@@ -7745,22 +7745,22 @@
 
 2018-06-29  Pedro Alves  <palves@redhat.com>
 
-	* gdb/amd64-tdep.h (amd64_create_target_description): Add
+	* amd64-tdep.h (amd64_create_target_description): Add
 	"segments" parameter.
-	* gdb/amd64-tdep.c (amd64_none_init_abi, amd64_x32_none_init_abi)
+	* amd64-tdep.c (amd64_none_init_abi, amd64_x32_none_init_abi)
 	(_initialize_amd64_tdep): Update call to
 	amd64_create_target_description.
 	(amd64_target_description): Add "segments" parameter.  Adjust
 	the implementation to use it.
-	* gdb/amd64-linux-tdep.c (amd64_linux_read_description): Update
+	* amd64-linux-tdep.c (amd64_linux_read_description): Update
 	call to amd64_create_target_description.
-	* gdb/amd64-windows-tdep.c (amd64_windows_init_abi): Likewise.
-	* gdb/arch/amd64.h (amd64_create_target_description): Add
+	* amd64-windows-tdep.c (amd64_windows_init_abi): Likewise.
+	* arch/amd64.h (amd64_create_target_description): Add
 	"segments" register.
-	* gdb/arch/amd64.c (amd64_create_target_description): Add
+	* arch/amd64.c (amd64_create_target_description): Add
 	"segments" parameter.  Call create_feature_i386_64bit_segments
 	only if SEGMENTS is true.
-	* gdb/gdbserver/win32-i386-low.c (i386_arch_setup): Update
+	* gdbserver/win32-i386-low.c (i386_arch_setup): Update
 	call to amd64_create_target_description.
 
 2018-06-29  Pedro Alves  <palves@redhat.com>
@@ -9239,7 +9239,7 @@
 2018-05-31  Alan Hayward  <alan.hayward@arm.com>
 
 	* Makefile.in: Add new header.
-	* gdb/arch/aarch64.h (sve_vg_from_vl): New macro.
+	* arch/aarch64.h (sve_vg_from_vl): New macro.
 	(sve_vl_from_vg): Likewise.
 	(sve_vq_from_vl): Likewise.
 	(sve_vl_from_vq): Likewise.
@@ -9262,7 +9262,6 @@
 	* arch/aarch64.c (aarch64_create_target_description): Check VQ.
 	* arch/aarch64.h (aarch64_create_target_description): Add VQ.
 	parmeter.
-	* doc/gdb.texinfo: Describe SVE feature
 	* features/aarch64-sve.c: New file.
 
 2018-05-31  Omair Javaid  <omair.javaid@linaro.org>
@@ -12316,7 +12315,7 @@
 2018-04-28  Dan Robertson  <danlrobertson89@gmail.com>
 
 	PR rust/23124
-	* gdb/rust-exp.y (convert_params_to_types): Ensure that the params
+	* rust-exp.y (convert_params_to_types): Ensure that the params
 	pointer is not null before dereferencing it.
 
 2018-04-30  Tom Tromey  <tom@tromey.com>
@@ -12455,7 +12454,7 @@
 2018-04-29  John Reiser  <jreiser@BitWagon.com>
 
 	PR build/22873
-	* gdb/Makefile.in: (.c:.l, .c:.y): Write the target only in the
+	* Makefile.in: (.c:.l, .c:.y): Write the target only in the
 	last step, and do it atomically.
 
 2018-04-27  Alexandre Oliva  <aoliva@redhat.com>
@@ -12690,13 +12689,6 @@
 
 	* configure: Rebuild.
 
-2018-04-22  Rajendra SY  <rajendra.sy@gmail.com>
-
-	PR gdb/23095
-	* gdb/testsuite/gdb.base/break-probes.exp: Pass shlib_load to
-	prepare_for_testing.  Set normal_bp to r_debug_state if target
-	is bsd.
-
 2018-04-21  Pedro Alves  <palves@redhat.com>
 	    Rajendra SY  <rajendra.sy@gmail.com>
 
@@ -12845,7 +12837,7 @@
 	(tdesc_add_bitfield): Likewise.
 	(tdesc_add_flag): Likewise.
 	(tdesc_add_enum_value): Likewise.
-	* gdb/target-descriptions.h (tdesc_create_enum): Likewise.
+	* target-descriptions.h (tdesc_create_enum): Likewise.
 	(tdesc_add_typed_bitfield): Likewise.
 	(tdesc_add_enum_value): Likewise.
 
@@ -14798,7 +14790,7 @@
 
 2018-02-26  Maciej W. Rozycki  <macro@mips.com>
 
-	* gdb/mips-tdep.c (mips_gdbarch_init): Reorder ABI determination
+	* mips-tdep.c (mips_gdbarch_init): Reorder ABI determination
 	ahead of target description loading.
 
 2018-02-26  Tom Tromey  <tom@tromey.com>
@@ -16416,7 +16408,7 @@
 
 2018-01-08  Samuel Thibault  <samuel.thibault@ens-lyon.org>
 
-	* gdb/gnu-nat.c: Include <elf.h> and <link.h>.
+	* gnu-nat.c: Include <elf.h> and <link.h>.
 	(gnu_xfer_auxv): New function.
 	(gnu_xfer_partial): Call gnu_xfer_auxv when `object' is
 	TARGET_OBJECT_AUXV.
diff --git a/gdb/testsuite/ChangeLog-1993-2013 b/gdb/testsuite/ChangeLog-1993-2013
index d80c5a3443..e3b022418b 100644
--- a/gdb/testsuite/ChangeLog-1993-2013
+++ b/gdb/testsuite/ChangeLog-1993-2013
@@ -24429,6 +24429,12 @@
 	* lib/mi-support.exp (mi_gdb_test): Add global declaration for
 	expect_out so that callers can get at it.
 
+2002-08-26  Joel Brobecker  <brobecker@gnat.com>
+
+	* gdb.base/commands.exp: New tests for commands
+	attached to a temporary breakpoint, and for commands that
+	delete the breakpoint they are attached to.
+
 2002-08-23  Daniel Jacobowitz  <drow@mvista.com>
 
 	* gdb.threads/print-threads.c: New file.
@@ -26039,6 +26045,13 @@ Wed Dec 19 14:10:57 2001  Jeffrey A Law  (law@redhat.com)
 	generated by GDB when it doesn't understand how to debug threads
 	on the target system.
 
+2001-04-17  Michael Snyder  <msnyder@redhat.com>
+
+	* gdb.trace/deltrace.exp: Allow for 64-bit addresses.
+	* gdb.trace/infotrace.exp: Ditto.
+	* gdb.trace/passcount.exp: Ditto.
+	* gdb.trace/while-stepping.exp: Ditto.
+
 2001-03-19  Andrew Cagney  <ac131313@redhat.com>
 
 	* gdb.mi/mi-console.exp: Document ``Hello'' as a known bug.
@@ -26625,7 +26638,12 @@ Mon May  1 15:37:58 2000  Andrew Cagney  <cagney@b1.cygnus.com>
 
 	* gdb.base/funcargs.exp: Relax patterns matching pointers to char.
 
-Thu Mar 30 13:26:19 2000  Philippe De Muyter  <phdm@macqel.be>
+2000-04-06  Michael Snyder  <msnyder@cygnus.com>
+
+	* gdb.threads/pthreads.exp (all_threads_running): Allow
+	for more than 15 thread increments.
+
+2000-03-30  Philippe De Muyter  <phdm@macqel.be>
 
 	* gdb.base/call-ar-st.c (init_small_structs, main): Use floating-point
 	values that can be represented exactly.
@@ -26763,6 +26781,11 @@ Mon Feb 21 13:05:36 2000  Andrew Cagney  <cagney@b1.cygnus.com>
 	* gdb.base/display.exp: Some yacc parsers like to say
 	"A syntax error" rather than "A parse error".  Accept both.
 
+2000-01-07  Michael Snyder  <msnyder@cygnus.com>
+
+	* gdb.threads/pthreads.exp: Try to link with -lthread if -lpthread
+	and -lpthreads fail.
+
 2000-01-06  Fernando Nasser  <fnasser@totem.to.cygnus.com>
 
 	* gdb.base/default.exp: Remove OS dependent string from "target
@@ -26782,6 +26805,22 @@ Mon Feb 21 13:05:36 2000  Andrew Cagney  <cagney@b1.cygnus.com>
 	* gdb.base/ptype.c (FALSE, TRUE): #undef these to avoid clash on
 	AIX, which defines them in <sys/types.h>.
 
+1999-12-20  Michael Snyder  <msnyder@cleaver.cygnus.com>
+
+	* gdb.base/callfuncs.exp: Make "next" test match the next source
+	line, in case the "next" runs away.
+
+1999-02-18  Jason Molenda  (jsm@bugshack.cygnus.com)
+
+	* testsuite/gdb.chill/tests1.ch, testsuite/gdb.chill/tests2.ch,
+	testsuite/gdb.chill/tests2.exp: Update FSF address in copyright
+	notices.
+
+1999-12-16  Michael Snyder  <msnyder@cleaver.cygnus.com>
+
+	* gdb.threads/linux-dp.exp: Make test for "New Thread" message
+	more forgiving.  Ditto test for "info threads".
+
 1999-12-16  Stan Shebs  <shebs@andros.cygnus.com>
 
 	* gdb.base/default.exp: Match arm* etc instead of arm in "info
@@ -30891,6 +30930,11 @@ Fri Mar 24 06:11:05 1995  Jim Kingdon  (kingdon@lioth.cygnus.com)
 	* gdb.base/a1-selftest.exp (test_with_self): Remove comment which
 	apparently went with a (very) old xfail.
 
+Fri Mar 24 15:45:42 1995  Stu Grossman  (grossman@cygnus.com)
+
+	* gdb.base/break.exp: Lots of cleanups.  Use gdb_test more
+	thoroughly.
+
 Fri Mar 24 13:41:09 1995  Kung Hsu  <kung@mexican.cygnus.com>
 
 	* gdb.base/callfuncs.exp: call runto_main instead of runto main.
@@ -33331,6 +33375,12 @@ Fri Apr 23 18:13:28 1993  K. Richard Pixley  (rich@rtl.cygnus.com)
 	* configure.in: switch subdirs assignment to configdirs.
 	* gdb.t*/configure.in: new files.
 
+Fri Apr 23 10:34:02 1993  Stu Grossman  (grossman@cygnus.com)
+
+	* gdb.t16/gdbme.c, testsuite/gdb.t17/gdbme.c:  Add calls
+	to malloc() so that we can test GDB eval of dynamically created
+	arrays (like char strings in `print "foo"').
+
 Thu Apr 22 08:27:53 1993  Ian Lance Taylor  (ian@cygnus.com)
 
 	* gdb.t07/watchpoint.exp: Removed a29k expected failure which now
@@ -33649,6 +33699,6 @@ Sun Feb 21 10:55:55 1993  Mike Werner  (mtw@poseidon.cygnus.com)
 ;; version-control: never
 ;; End:
 
-    Copyright 1993-2019 Free Software Foundation, Inc.
+    Copyright 1993-2020 Free Software Foundation, Inc.
   Copying and distribution of this file, with or without modification,
   are permitted provided the copyright notice and this notice are preserved.
diff --git a/gdb/ChangeLog-1992 b/gdb/ChangeLog-1992
index 8e89824af4..11a01ee28b 100644
--- a/gdb/ChangeLog-1992
+++ b/gdb/ChangeLog-1992
@@ -427,11 +427,6 @@ Thu Dec 17 00:44:57 1992  John Gilmore  (gnu@cygnus.com)
 	* symfile.c (syms_from_objfile):  Insert debugging check to test
 	NAMES_HAVE_UNDERSCORE setting against the BFD support.
 
-	* doc/gdbint.texinfo (Host Conditionals):  Remove
-	NAMES_HAVE_UNDERSCORE, SOME_NAMES_HAVE_DOT, document
-	MEM_FNS_DECLARED.
-	(Target Conditionals):  Remove all of the above.
-
 	* xm-rs6000.h (MEM_FNS_DECLARED):  Update comments.
 
 	* coffread.c (read_coff_symtab, C_BLOCK):  Use complain() rather
@@ -487,9 +482,6 @@ Tue Dec 15 02:01:00 1992  John Gilmore  (gnu@cygnus.com)
 	* main.c (main):  Accept --silent as well as --quiet.  Change +help
 	to --help.  Suggested by Karl Berry, <karl@cs.umb.edu>.
 
-	* doc/gdbint.texinfo:  SWAP_HOST_AND_TARGET => SWAP_TARGET_AND_HOST.
-	Noticed by Andy Jackson, <arj@cam-orl.co.uk>.
-
 Mon Dec 14 23:28:15 1992  John Gilmore  (gnu@cygnus.com)
 
 	* tm-nindy960.h, remote-nindy.c:  Lint.
@@ -1134,7 +1126,6 @@ Tue Oct 27 17:08:45 1992  K. Richard Pixley  (rich@cygnus.com)
 	* defs.h: include nm.h.
 	* coredep.c, infptrace.c, procfs.c, rs6000-nat.c, sparc-nat.c,
 	  sparc-tdep.c, : do not include nm.h.
-	* doc/gdbint.texinfo: nm.h now included in defs.h.
 
 Fri Oct 23 04:47:17 1992  Stu Grossman  (grossman at cygnus.com)
 
@@ -1202,7 +1193,6 @@ Wed Oct 21 17:46:07 1992  K. Richard Pixley  (rich@sendai.cygnus.com)
 Wed Oct 21 03:51:01 1992  John Gilmore  (gnu@cygnus.com)
 
 	* coredep.c:  Include "nm.h" to get REGISTER_U_ADDR.
-	* doc/gdbint.texinfo:  Improve REGISTER_U_ADDR and USE_PROC_FS doc.
 
 	* Makefile.in (VERSION):  Tick to 4.6.9.
 
@@ -1216,9 +1206,6 @@ Tue Oct 20 23:27:56 1992  John Gilmore  (gnu@cygnus.com)
 	(initialize_symmisc):  Remove empty function.
 	* tm-spc-noun.h, tm-sun4os4.h, tm-sun4sol2.h (STACK_END_ADDRESS):
 	Remove obsolete, misspelled macro.
-	* doc/gdbint.texinfo:  Document obsolete STACK_END_ADDR.
-	(all @node commands):  Use new form to avoid nitpicking errors.
-	* doc/gdbint.texinfo:  Document host/native/target split.
 	                                                                   
 Wed Oct 21 00:14:34 1992  Stu Grossman  (grossman at cygnus.com)
 
@@ -1251,8 +1238,6 @@ Tue Oct 20 21:32:18 1992  K. Richard Pixley  (rich@sendai.cygnus.com)
 	* hppa[bh]h-tdep.c: do not include ptrace.h.
 	* Makefile.in (HFILES): added nm-hppa[bh].h.
 
-	* doc/gdbint.texinfo: add PUSH_DUMMY_FRAME, POP_FRAME.
-
 Tue Oct 20 00:01:46 1992  Stu Grossman  (grossman at cygnus.com)
 
 	* mips-nat.c:  Straighten out include files.  Work around
@@ -1402,7 +1387,6 @@ Fri Oct 16 03:34:01 1992  John Gilmore  (gnu@cygnus.com)
 
 	Avoid longjmp()-catching compilation errors in cross-ports.
 
-	* doc/gdbint.texinfo:  Update GET_LONGJMP_TARGET, L_SET doc.
 	* irix4-nat.c, mips-nat.c (JB_ELEMENT_SIZE, get_longjmp_target):
 	Move from mips-tdep.c and tm-{irix3,mips}.h.
 	* mips-nat.c:  Remove a bunch of code that was ifdef'd out of
@@ -1617,9 +1601,6 @@ Thu Oct  8 16:27:45 1992  K. Richard Pixley  (rich@sendai.cygnus.com)
 	* config/sun4os4.mh (XDEPFILES): fork-child.o removed.
 	(NATDEPFILES): added fork-child.o.
 
-	* doc/gdbint.texinfo: document a few more macros, create new
-	  section for native macros.
-
 Thu Oct  8 13:52:46 1992  Stu Grossman  (grossman at cygnus.com)
 
 	* Makefile.in alldeps.mak depend:  Rip out 29k/udi pending
@@ -1832,7 +1813,6 @@ Thu Oct  1 01:57:56 1992  John Gilmore  (gnu@cygnus.com)
 	(define_command):  If defining a new hook, check the command it
 	is hooking, and warn if none.  Install the hook.
 	* source.c (_initialize_source):  "l" is an abbrev for "list".
-	* doc/gdb.texinfo:  Document command hooks.
 
 	* Makefile.in (VERSION):  Roll to 4.6.7.
 	* config/sun4os4.mh:  Remove dup inftarg.o from NATDEPFILES.
@@ -2287,19 +2267,6 @@ Mon Sep 14 19:20:43 1992  Stu Grossman  (grossman at cygnus.com)
 	(energize_call_command):  Call send_location() after doing up,
 	down, and frame commands.
 
-Fri Sep 11 18:28:28 1992  Roland H. Pesch  (pesch@fowanton.cygnus.com)
-
-	* doc/gdb.texinfo, doc/gdbinv-m.m4.in, doc/gdbinv-s.m4.in: first
-	pass at doc for two new remote targets---29K using UDI, and Tandem
-	ST2000 using STDBUG.
-
-	* doc/all.m4, doc/none.m4: new m4 switch, _ST2000__
-
-	* doc/all.m4: turn on H8/300 stuff for generic manual
-
-	* doc/gdbinv-s.m4.in: remove text on special procedures to continue 
-	after explicit call to breakpoint() in serial stubs.
-
 Fri Sep 11 01:34:25 1992  John Gilmore  (gnu@sphagnum.cygnus.com)
 
 	* mipsread.c:  Clean up some white space.
@@ -2366,15 +2333,6 @@ Tue Sep  8 15:22:06 1992  Stu Grossman  (grossman at cygnus.com)
 	* serial.h:  Define struct ttystate properly using HAVE_TERMIO.
 	* xm-apollo68b.h:  #define PTRACE_IN_WRONG_PLACE...
 
-Fri Sep  4 18:53:57 1992  Roland H. Pesch  (pesch@fowanton.cygnus.com)
-
-	* doc/gdb.texinfo: fix shameful error of agreement reported by
-	jimb@occs.cs.oberlin.edu (Jim Blandy)
-	* doc/gdb.texinfo: remove old partial discussion of remote serial
-	protocol (via serial debug stubs)
-	* doc/gdbinv-m.m4.in, doc/gdbinv-s.m4.in: new section discussing
-	use of serial debug stubs
-
 Fri Sep  4 00:34:30 1992  Per Bothner  (bothner@rtl.cygnus.com)
 
 	* symfile.h:  Declaration of set_demangling_style() moved
@@ -3605,7 +3563,6 @@ Fri Jun 19 10:28:05 1992  John Gilmore  (gnu at cygnus.com)
 	* am29k-tdep.c (read_register_stack, write_register_stack):
 	Change RSTACK_HIGH_ADDR to rstack_high_address, a user-settable
 	variable.  Add `set' and `show' commands for it.
-	* doc/gdb.texinfo:  Document it.
 
 Thu Jun 18 19:35:22 1992  Fred Fish  (fnf@cygnus.com)
 
diff --git a/gdb/ChangeLog-2011 b/gdb/ChangeLog-2011
index 5d1f62119e..e3c979edf1 100644
--- a/gdb/ChangeLog-2011
+++ b/gdb/ChangeLog-2011
@@ -2157,9 +2157,9 @@
 	symbol's symtab, use new argument OBJFILE.
 	* cp-support.h (cp_scan_for_anonymous_namespaces): Changed function
 	arguments by adding OBJFILE.
-	* gdb/dwarf2read.c (new_symbol_full): Change call to
+	* dwarf2read.c (new_symbol_full): Change call to
 	cp_scan_for_anonymous_namespaces to match new signature.
-	* gdb/stabsread.c (define_symbol): Change call to
+	* stabsread.c (define_symbol): Change call to
 	cp_scan_for_anonymous_namespaces to match new signature.
 
 2011-10-20  Phil Muldoon  <pmuldoon@redhat.com>
@@ -6464,7 +6464,7 @@
 
 2011-05-26  Yao Qi  <yao@codesourcery.com>
 
-	* gdb/gdb_thread_db.h: Remove HAVE_UINTPTR_T.
+	* gdb_thread_db.h: Remove HAVE_UINTPTR_T.
 
 2011-05-26  Tristan Gingold  <gingold@adacore.com>
 
@@ -9448,7 +9448,7 @@
 	(cleanup_block_load_pc, copy_block_xfer): Likewise.
 	* arm-linux-tdep.c (arm_linux_copy_svc): Callers update.
 	(arm_catch_kernel_helper_return): Likewise.
-	* gdb/arm-tdep.h : Update function declarations.
+	* arm-tdep.h : Update function declarations.
 
 2011-03-07  Michael Snyder  <msnyder@vmware.com>
 
@@ -9670,7 +9670,7 @@
 
 2011-03-03  Yao Qi  <yao@codesourcery.com>
 
-	* gdb/arm-tdep.c (shifted_reg_val): Replace magic number 15 with
+	* arm-tdep.c (shifted_reg_val): Replace magic number 15 with
 	ARM_PC_REGNUM.
 	(thumb_get_next_pc_raw, arm_get_next_pc_raw): Likewise.
 	(displaced_write_reg, displaced_read_reg): Likewise.
@@ -10303,12 +10303,12 @@
 
 2011-02-18  Yao Qi  <yao@codesourcery.com>
 
-	* gdb/arm-tdep.c (arm_displaced_step_copy_insn): Move code to ...
+	* arm-tdep.c (arm_displaced_step_copy_insn): Move code to ...
 	(arm_process_displaced_insn): .. here. Remove parameter INSN.
 	(thumb_process_displaced_insn): New.
-	* gdb/arm-linux-tdep.c (arm_linux_displaced_step_copy_insn): Update
+	* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn): Update
 	call to arm_process_displaced_insn.
-	* gdb/arm-tdep.h : Update declaration of arm_process_displaced_insn.
+	* arm-tdep.h : Update declaration of arm_process_displaced_insn.
 
 2011-02-17  Tom Tromey  <tromey@redhat.com>
 
@@ -11267,8 +11267,8 @@
 2011-01-25  Mathieu Lacage  <mathieu.lacage@inria.fr>
 
 	PR/symtab 11766:
-	* gdb/objfiles.h (struct objfile) <addr_low>: New field.
-	* gdb/solib.c (solib_read_symbols): Check for addr_low in
+	* objfiles.h (struct objfile) <addr_low>: New field.
+	* solib.c (solib_read_symbols): Check for addr_low in
 	equality test for objfile, initialize addr_low if needed.
 
 2011-01-25  Pedro Alves  <pedro@codesourcery.com>
diff --git a/gdb/ChangeLog-1999 b/gdb/ChangeLog-1999
index 8ed06120d2..fbe19e82a5 100644
--- a/gdb/ChangeLog-1999
+++ b/gdb/ChangeLog-1999
@@ -55,8 +55,6 @@ Wed Dec 29 17:41:11 1999  Andrew Cagney  <cagney@b1.cygnus.com>
 	* config/powerpc/solaris.mh: ditto.
 	* config/alpha/alpha-osf2.mh: ditto.
 	* config/alpha/alpha-osf3.mh: ditto.
-	* testsuite/gdb.base/callfuncs.exp: make "next" test match the
-	next source line, in case the "next" runs away.
 	* acconfig.h: remove obsolete def HAVE_MULTIPLE_PROC_FDS, 
 	add new def NEW_PROC_API
 	* config.in; ditto.
@@ -118,13 +116,11 @@ Fri Dec 17 20:45:21 1999  Andrew Cagney  <cagney@b1.cygnus.com>
 	varobjs was not decremented if the first one in the list was deleted.
 
 1999-12-16  Michael Snyder  <msnyder@cleaver.cygnus.com>
-	
+
 	* linux-thread.c: Remove printf-debugging code.
 	* lin-thread.c: ditto.
 	* config/alpha/nm-linux.h: protect with NM_LINUX_H.
-	* testsuite/gdb.threads/linux-dp.exp: Make test for "New Thread"
-	message more forgiving.  Ditto test for "info threads".
-	
+
 1999-12-16  Michael Snyder  <msnyder@cleaver.cygnus.com>
 
 	* lin-thread.c: new file.  Implements multi-thread debugging on
@@ -2102,7 +2098,6 @@ Thu Oct  7 17:20:01 1999  Andrew Cagney  <cagney@amy.cygnus.com>
 	identifiers beginning with `$' unless
 	SYMBOLS_CAN_START_WITH_DOLLAR is non-zero.
 	* config/pa/tm-hppa.h (SYMBOLS_CAN_START_WITH_DOLLAR): Define.
-	* doc/gdbint.texinfo (SYMBOLS_CAN_START_WITH_DOLLAR): Document.
 
 	Remove all traces of the BINOP_SCOPE operator.  It's never
  	generated, and not implemented.
@@ -4832,7 +4827,6 @@ Sun Aug  8 12:06:47 1999  Fred Fish  <fnf@cygnus.com>
 	* dwarf2read.c (dwarf2_build_psymtabs_hard): Minor format tweak.
 	* symfile.c (syms_from_objfile): Ditto, and fix typo.
 	* top.c (init_main): Fix typo in comment (DEFULAT_PROMPT).
-	* doc/gdbint.texinfo (find_sym_fns): This replaces symfile_init.
 
 1999-08-08  James Ingham  <jingham@leda.cygnus.com>
 
@@ -8371,9 +8365,8 @@ Mon Feb 22 12:32:19 1999  Per Bothner  <bothner@cygnus.com>
 	config/i386/nm-i386sco5.h, config/i386/tm-fbsd.h, config/i386/tm-i386.h
 	config/powerpc/nm-aix.h, config/powerpc/tm-macos.h
 	config/powerpc/tm-ppc-aix.h, config/powerpc/xm-aix.h
-	config/rs6000/tm-rs6000-aix4.h, testsuite/gdb.chill/tests1.ch
-	testsuite/gdb.chill/tests2.ch, testsuite/gdb.chill/tests2.exp:
-	Update FSF address in copyright notices.
+	config/rs6000/tm-rs6000-aix4.h: Update FSF address in copyright
+	notices.
 
 1999-02-18  Jason Molenda  (jsm@bugshack.cygnus.com)
 
diff --git a/gdb/ChangeLog-2005 b/gdb/ChangeLog-2005
index f356ddba3f..678c173faf 100644
--- a/gdb/ChangeLog-2005
+++ b/gdb/ChangeLog-2005
@@ -4905,7 +4905,6 @@
 
 2005-03-07  Joel Brobecker  <brobecker@adacore.com>
 
-	* doc/observer.texi (executable_changed): New observer.
 	* symtab.c: Include "observer.h".
 	(find_main_name): New function.
 	(main_name): If name_of_main is unset, then compute it
diff --git a/gdb/ChangeLog-1996 b/gdb/ChangeLog-1996
index 442386fa76..2b583778c0 100644
--- a/gdb/ChangeLog-1996
+++ b/gdb/ChangeLog-1996
@@ -1133,11 +1133,9 @@ Wed Oct  2 22:07:16 1996  Fred Fish  <fnf@cygnus.com>
 
 	* inferior.h (IN_SIGTRAMP): Pass pc to SIGTRAMP_START and
 	SIGTRAMP_END.
-	* config/i386/tm-i386os9k.h (SIGTRAMP_START, SIGTRAMP_END): 
+	* config/i386/tm-i386os9k.h (SIGTRAMP_START, SIGTRAMP_END):
 	Define with dummy pc arg.
 	* config/m68k/tm-nbsd.h: Ditto.
-	* doc/gdbint.texinfo: Document that SIGTRAMP_START and
-	SIGTRAMP_END are macros that take an single argument.
 
 Mon Sep 30 20:02:45 1996  Fred Fish  <fnf@cygnus.com>
 
@@ -2746,7 +2744,7 @@ Tue Jun 25 17:41:06 1996  Martin M. Hunt  <hunt@pizza.cygnus.com>
 
 Tue Jun 25 23:14:07 1996  Jason Molenda  (crash@godzilla.cygnus.co.jp)
 
-	* gdb/gdbserver/Makefile.in (docdir): Removed.
+	* gdbserver/Makefile.in (docdir): Removed.
 
 Tue Jun 25 22:05:38 1996  Jason Molenda  (crash@godzilla.cygnus.co.jp)
 
@@ -2759,7 +2757,7 @@ Tue Jun 25 22:05:38 1996  Jason Molenda  (crash@godzilla.cygnus.co.jp)
 	(docdir): Removed.
 	* nlm/configure.in (AC_PREREQ): autoconf 2.5 or higher.
 	* nlm/configure: Rebuilt.
-        * gdb/gdbserver/Makefile.in (datadir): Set to $(prefix)/share.
+        * gdbserver/Makefile.in (datadir): Set to $(prefix)/share.
 
 Mon Jun 24 09:56:14 1996  Angela Marie Thomas (angela@cygnus.com)
 
diff --git a/gdb/ChangeLog-2010 b/gdb/ChangeLog-2010
index a0a3c2be18..3741992aea 100644
--- a/gdb/ChangeLog-2010
+++ b/gdb/ChangeLog-2010
@@ -1663,7 +1663,7 @@
 
 2010-10-03  Paul Hilfinger  <hilfinger@adacore.com>
 
-        * gdb/ada-typeprint.c (print_selected_record_field_types): New function,
+        * ada-typeprint.c (print_selected_record_field_types): New function,
         incorporating and generalizing print_record_field_types.
         (print_record_field_types): Change return value and update comment.
         Re-implement using print_selected_record_field_types.
@@ -2917,13 +2917,13 @@
 
 2010-08-11  Ken Werner  <ken.werner@de.ibm.com>
 
-	* gdb/valarith.c (vector_binop): New function.
+	* valarith.c (vector_binop): New function.
 	(scalar_binop): Likewise.
 	(value_binop): Call scalar_binop or vector_binop depending on the types.
-	* gdb/eval.c (ptrmath_type_p): Return 0 in case of TYPE_VECTOR.
+	* eval.c (ptrmath_type_p): Return 0 in case of TYPE_VECTOR.
 	(evaluate_subexp_with_coercion): Add vector check to not convert vectors
 	to pointers.
-	* gdb/value.c (coerce_array): Add vector check to not coerce vectors.
+	* value.c (coerce_array): Add vector check to not coerce vectors.
 
 2010-08-11  Brad Roberts  <braddr@puremagic.com>
 
@@ -6915,7 +6915,7 @@
 
 2010-04-21  Mike Frysinger  <vapier@gentoo.org>
 
-	* gdb/sparc-tdep.c (sparc32_store_return_value): Add gdb_assert ()
+	* sparc-tdep.c (sparc32_store_return_value): Add gdb_assert ()
 	for len <= 8.
 
 2010-04-21  Chris Moller  <cmoller@redhat.com>
diff --git a/gdb/ChangeLog-2016 b/gdb/ChangeLog-2016
index db6e91361a..c99ff70450 100644
--- a/gdb/ChangeLog-2016
+++ b/gdb/ChangeLog-2016
@@ -8556,7 +8556,7 @@
 
 2016-03-29  Don Breazeal  <donb@codesourcery.com>
 
-	* gdb/value.c (value_actual_type): Fix formatting issue.
+	* value.c (value_actual_type): Fix formatting issue.
 
 2016-03-23  Yao Qi  <yao.qi@linaro.org>
 
@@ -9336,7 +9336,7 @@
 
 	* amd64-tdep.c (amd64_ax_pseudo_register_collect): New function.
 	(amd64_init_abi): Fill ax_pseudo_register_collect hook.
-	* gdb/i386-tdep.c (i386_pseudo_register_read_into_value): Remove
+	* i386-tdep.c (i386_pseudo_register_read_into_value): Remove
 	misleading comment.
 	(i386_pseudo_register_write): Ditto.
 	(i386_ax_pseudo_register_collect): New function.
diff --git a/gdb/ChangeLog-2001 b/gdb/ChangeLog-2001
index ccd64de50a..98c1d36053 100644
--- a/gdb/ChangeLog-2001
+++ b/gdb/ChangeLog-2001
@@ -6607,20 +6607,16 @@ Thu May 10 16:26:47 2001  Andrew Cagney  <cagney@b1.cygnus.com>
 	* NEWS: Update.
 
 2001-04-17  Michael Snyder  <msnyder@redhat.com>
-	
+
 	* remote.c (remote_open_1): On opening the remote target, activate
 	the solib_create_inferior_hook, so that it can detect when the
 	target loads shared libraries.
 	(remote_async_open_1): Ditto.
 
 2001-04-17  Michael Snyder  <msnyder@redhat.com>
-	
+
 	* breakpoint.c (print_one_breakpoint): Handle 64-bit addresses.
 	* tracepoint.c (tracepoints_info): Handle 64-bit addresses.
-	* testsuite/gdb.trace/deltrace.exp: Allow for 64-bit addresses.
-	* testsuite/gdb.trace/infotrace.exp: Ditto.
-	* testsuite/gdb.trace/passcount.exp: Ditto.
-	* testsuite/gdb.trace/while-stepping.exp: Ditto.
 
 2001-04-17  Michael Snyder  <msnyder@redhat.com>
 
diff --git a/gdb/ChangeLog-2012 b/gdb/ChangeLog-2012
index 3c7c6ae20a..7b75b3bcc3 100644
--- a/gdb/ChangeLog-2012
+++ b/gdb/ChangeLog-2012
@@ -835,8 +835,6 @@
 	rather than sort() method.
 	Adjust syntax for Python 3 compatibility.
 	* python/lib/gdb/command/type_printers.py: Ditto.
-	* doc/gdb.texinfo (Inferior.read_memory): Mention that the return
-	value is a memoryview object if Python 3.
 
 2012-12-12  Tom Tromey  <tromey@redhat.com>
 
@@ -8703,7 +8701,7 @@
 	(GNULIB): New variable.
 	(GNULIB_STDINT_H): Adjust.
 	(AC_OUTPUT): Don't output gnulib/Makefile.
-	* gdb/defs.h: Include build-gnulib/config.h.
+	* defs.h: Include build-gnulib/config.h.
 	* aclocal.m4: Regenerate.
 	* config.in: Regenerate.
 	* configure: Regenerate.
@@ -13186,8 +13184,8 @@
 
 2012-01-02  Joel Brobecker  <brobecker@adacore.com>
 
-	* gdb/common/gdb_thread_db.h, gdb/dbxread.c, gdb/environ.c,
-	gdb/gcore.h, gdb/rs6000-tdep.h, gdb/s390-nat.c, gdb/tic6x-tdep.c:
+	* common/gdb_thread_db.h, dbxread.c, environ.c,
+	gcore.h, rs6000-tdep.h, s390-nat.c, tic6x-tdep.c:
 	Reformat the copyright header.
 
 2012-01-02  Jan Kratochvil  <jan.kratochvil@redhat.com>
diff --git a/gdb/ChangeLog-2006 b/gdb/ChangeLog-2006
index 4d248ab6fe..8dbd863039 100644
--- a/gdb/ChangeLog-2006
+++ b/gdb/ChangeLog-2006
@@ -2080,8 +2080,6 @@
 
 	* remote-file.io.c (remote_fileio_func_system): Treat zero length
 	string as NULL.  Adjust for NULL pointer argument.
-	* doc/gdb.texinfo (system): Document behaviour with zero length
-	string.
 
 2006-06-12  Daniel Jacobowitz  <dan@codesourcery.com>
 
@@ -2356,7 +2354,7 @@
 	(print_unpacked_pointer): New function.
 	(print_variable_at_address): New function.
 	(m2_val_print): Replaced.
-	* gdb/MAINTAINERS (Write After Approval): Added
+	* MAINTAINERS (Write After Approval): Added
 	Gaius Mulley  <gaius@glam.ac.uk>
 
 2006-05-12  Mark Kettenis  <kettenis@gnu.org>
@@ -3027,7 +3025,6 @@
 	* configure.tgt (i[34567]86-*-netware*): Do not set build_nlm.
 	* configure.ac: Remove AC_CONFIG_SUBDIRS of nlm.
 	* configure: Regenerate.
-	* doc/gdb.texinfo: Remove gdbserve.nlm documentation.
 	* nlm: Remove directory.
 
 2006-03-29  Daniel Jacobowitz  <dan@codesourcery.com>
@@ -3413,15 +3410,15 @@
 
 2006-02-24  Charles Wilson  <cygwin@cwilson.fastmail.fm>
 
-	* gdb/defs.h: unconditionally include <fcntl.h>, and
+	* defs.h: unconditionally include <fcntl.h>, and
 	ensure that O_BINARY is defined.
-	* gdb/solib.c(solib_open): ensure solib files are opened in
+	* solib.c(solib_open): ensure solib files are opened in
 	binary mode.
-	* gdb/corelow.c: Remove O_BINARY macro definition.
-	* gdb/exec.c: Remove O_BINARY macro definition
-	* gdb/remote-rdp.c: Remove O_BINARY macro definition
-	* gdb/source.c: Remove O_BINARY macro definition
-	* gdb/symfile.c: Remove O_BINARY macro definition
+	* corelow.c: Remove O_BINARY macro definition.
+	* exec.c: Remove O_BINARY macro definition
+	* remote-rdp.c: Remove O_BINARY macro definition
+	* source.c: Remove O_BINARY macro definition
+	* symfile.c: Remove O_BINARY macro definition
 
 2006-02-24  Randolph Chung  <tausq@debian.org>
 
diff --git a/gdb/ChangeLog-2008 b/gdb/ChangeLog-2008
index a9f0b10c47..a114e1c15f 100644
--- a/gdb/ChangeLog-2008
+++ b/gdb/ChangeLog-2008
@@ -5663,7 +5663,7 @@
 2008-07-13  Vladimir Prus  <vladimir@codesourcery.com>
 
 	Allow all CLI command even if target is executing.
-	* gdb/top.c (execute_command_1): Don't check if the inferiour
+	* top.c (execute_command_1): Don't check if the inferiour
 	is running.
 
 2008-07-13  Vladimir Prus  <vladimir@codesourcery.com>
@@ -6881,7 +6881,7 @@
 2008-06-06  Paul Pluzhnikov  <ppluzhnikov@google.com>
 
 	PR gdb/1147
-	* gdb/valopts.c (find_overload_match): Handle references
+	* valopts.c (find_overload_match): Handle references
 	to pointers.
 
 2008-06-06  Paul N. Hilfinger  <hilfinger@adacore.com>
@@ -9874,7 +9874,6 @@
 2008-03-14  Vladimir Prus  <vladimir@codesourcery.com>
 
 	Implement MI notification for new threads.
-	* doc/observer.texi (new_thread): Document.
 	* observer.sh: Forward declare struct thread_info.
 	* thread.c (add_thread): Notify observer.
 
@@ -10739,9 +10738,9 @@
 2008-01-30  Vladimir Prus  <vladimir@codesourcery.com>
 
 	Use vector for varobj_list_children interface.
-	* gdb/varobj.c (varobj_list_children): Return vector
+	* varobj.c (varobj_list_children): Return vector
 	of varobjs.
-	* gdb/varobj.h (varobj_list_children): Adjust
+	* varobj.h (varobj_list_children): Adjust
 	prototype.
 	(varobj_p): Declare.  Declare vector thereof.
 	* mi/mi-cmd-var.c (mi_cmd_var_list_children): Adjust
diff --git a/gdb/ChangeLog-2014 b/gdb/ChangeLog-2014
index 5661a9f1a4..3b2555bb39 100644
--- a/gdb/ChangeLog-2014
+++ b/gdb/ChangeLog-2014
@@ -934,8 +934,6 @@
 	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-infevents.o.
 	(SUBDIR_PYTHON_SRCS): Add py-infevents.c.
 	(py-infevents.o): New rule.
-	* doc/observer.texi (inferior_call_pre, inferior_call_post)
-	(memory_changed, register_changed): New observers.
 	* infcall.c (call_function_by_hand): Notify observer before and
 	after inferior call.
 	* python/py-event.h (inferior_call_kind): New enum.
@@ -1210,7 +1208,7 @@
 2014-11-24  Samuel Thibault  <samuel.thibault@ens-lyon.org>
 
 	Pushed by Joel Brobecker  <brobecker@adacore.com>
-	* gdb/gnu-nat.c (inf_validate_procinfo): Multiply the number of
+	* gnu-nat.c (inf_validate_procinfo): Multiply the number of
 	elements pi_len by the size of the elements before calling
 	vm_deallocate.
 	(inf_validate_task_sc): Likewise, and properly deallocate the
@@ -2640,7 +2638,7 @@
 
 2014-10-15  Andreas Arnez  <arnez@linux.vnet.ibm.com>
 
-	* gdb/infrun.c (process_event_stop_test): Apply
+	* infrun.c (process_event_stop_test): Apply
 	gdbarch_addr_bits_remove to longjmp resume address.
 
 2014-10-15  Pedro Alves  <palves@redhat.com>
@@ -6241,7 +6239,6 @@
 	microblaze-with-stack-protect microblaze and microblaze-expedite.
 	* regformats/microblaze-with-stack-protect.dat: New file.
 	* regformats/microblaze.dat: New file.
-	* doc/gdb.texinfo (MicroBlaze Features): Added.
 
 2014-07-18  Tom Tromey  <tromey@redhat.com>
 
@@ -6947,7 +6944,7 @@
 	* nat/mips-linux-watch.h: Likewise.
 	* Makefile.in (HFILES_NO_SRCDIR): Reflect new locations.
 	(object file files): Reordered.
-	* gdb/copyright.py (EXCLUDE_LIST): Reflect new location
+	* copyright.py (EXCLUDE_LIST): Reflect new location
 	of glibc_thread_db.h.
 
 2014-06-20  Gary Benson  <gbenson@redhat.com>
diff --git a/gdb/ChangeLog-2019 b/gdb/ChangeLog-2019
new file mode 100644
index 0000000000..e6b55bb9f0
--- /dev/null
+++ b/gdb/ChangeLog-2019
@@ -0,0 +1,17396 @@
+2019-12-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_border_mode_translate)
+	(tui_border_kind_translate_vline, tui_border_kind_translate_hline)
+	(tui_border_kind_translate_ulcorner)
+	(tui_border_kind_translate_urcorner)
+	(tui_border_kind_translate_llcorner)
+	(tui_border_kind_translate_lrcorner, tui_active_border_mode)
+	(tui_border_mode, tui_border_kind): Now static.
+
+2019-12-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-interp.c (tui_start_enabled): Now bool.
+	(_initialize_tui_interp): Update.
+	* tui/tui-hooks.c (tui_refreshing_registers): Now bool.
+	(tui_register_changed)
+	(tui_refresh_frame_and_register_information): Update.
+	* tui/tui-win.c (tui_update_variables): Return bool.
+	* tui/tui-win.h (tui_update_variables): Return bool.
+	* tui/tui.c (tui_get_command_dimension): Return bool.
+	* tui/tui.h (tui_get_command_dimension): Return bool.
+
+2019-12-29  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* buildsym.c (buildsym_compunit::record_line): Do no longer ignore
+	line 65535.
+
+2019-12-27  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Remove
+	commented-out code.
+	* tui/tui.c: Remove #if 0 code.
+
+2019-12-27  Tom Tromey  <tom@tromey.com>
+
+	* cli/cli-cmds.c (print_disassembly): Reorder "if".
+
+2019-12-27  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_active): Now bool.
+	(tui_finish_init): Likewise.
+	(tui_enable): Update.
+	(tui_disable): Update.
+	(tui_is_window_visible): Update.
+	* tui/tui.h (tui_active): Now bool.
+
+2019-12-27  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.c (tui_source_window::maybe_update): Update.
+	* tui/tui-regs.c (tui_data_window::display_registers_from):
+	Update.
+	* tui/tui-layout.c (tui_gen_win_info::resize): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <viewport_height>:
+	Remove.
+	* tui/tui-command.c (tui_cmd_window::resize): Update.
+
+2019-12-26  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-lang.c (ada_decode_symbol): Update.
+	* buildsym.c (add_symbol_to_list): Update.
+	* coffread.c (process_coff_symbol): Update.
+	* ctfread.c (ctf_add_enum_member_cb): Update.
+	(new_symbol): Update.
+	(ctf_add_var_cb): Update.
+	* dwarf2read.c (fixup_go_packaging): Update.
+	(dwarf2_compute_name): Update.
+	(new_symbol): Update.
+	* jit.c (finalize_symtab): Update.
+	* language.c (language_alloc_type_symbol): Update.
+	* mdebugread.c (new_symbol): Update.
+	* minsyms.c (minimal_symbol_reader::record_full): Update.
+	(minimal_symbol_reader::install): Update.
+	* psymtab.c (print_partial_symbols): Update.
+	(psymbol_hash): Update.
+	(psymbol_compare): Update.
+	(add_psymbol_to_bcache): Update.
+	(maintenance_check_psymtabs): Update.
+	* stabsread.c (define_symbol): Update.
+	* symtab.c (symbol_set_names): Rename to...
+	(general_symbol_info::compute_and_set_names): ...this.
+	(general_symbol_info::natural_name): Update.
+	(general_symbol_info::search_name): Update.
+	(fixup_section): Update.
+	* symtab.h (struct general_symbol_info) <name>: Rename to...
+	<m_name>: ...this.
+	<compute_and_set_names>: Rename from...
+	(symbol_set_names): ...this.
+	(SYMBOL_SET_NAMES): Remove.
+	(struct symbol) <ctor>: Update.
+
+2019-12-26  Christian Biesinger  <cbiesinger@google.com>
+
+	* NEWS: Mention that multithreaded symbol loading is now on by
+	default.
+
+2019-12-26  Ruslan Kabatsayev  <b7.10110111@gmail.com>
+
+	* dwarf2read.c (is_valid_DW_AT_defaulted)
+	(is_valid_DW_AT_calling_convention_for_type)
+	(is_valid_DW_AT_calling_convention_for_subroutine): Fix printing
+	ULONGEST variables on x86-32.
+
+2019-12-21  George Barrett  <bob@bob131.so>
+
+	* solib-svr4.c (svr4_handle_solib_event): Add fallback link
+	namespace test for when the debug struct isn't available.
+
+2019-12-21  Eli Zaretskii  <eliz@gnu.org>
+
+	* top.c (print_gdb_configuration): Print "--with-xxhash" or
+	"--without-xxhash" according to HAVE_LIBXXHASH.
+
+2019-12-20  Weimin Pan  <weimin.pan@oracle.com>
+	* ctfread.c (ctf_file_key): Change type to objfile_key.
+	(struct ctf_context): Remove typedef.
+	(get_objfile_text_range): Use ANOFFSET to get text base.
+
+2019-12-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* dwarf2read.c (is_valid_DW_AT_calling_convention_for_subroutine):
+	New function.
+	(read_subroutine_type): Validate the parsed
+	DW_AT_calling_convention value before assigning it to a
+	subroutine's calling_convention attribute.
+	* gdbtypes.h (struct func_type) <calling_convention>: Use
+	an enum bitfield as its type, instead of plain unsigned.
+
+2019-12-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	PR gdb/25054
+	* infcall.c (call_function_by_hand_dummy): Update the argument-
+	passing section for call-by-value parameters.
+	(struct destructor_info): New struct.
+	(call_destructors): New auxiliary function.
+
+2019-12-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gnu-v3-abi.c (enum definition_style): New enum type.
+	(get_def_style): New function.
+	(is_user_provided_def): New function.
+	(is_implicit_def): New function.
+	(is_copy_or_move_constructor_type): New function.
+	(is_copy_constructor_type): New function.
+	(is_move_constructor_type): New function.
+	(gnuv3_pass_by_reference): Collect language_pass_by_ref_info
+	for a given type.
+
+2019-12-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* language.h (struct language_pass_by_ref_info): New struct.
+	(struct language_defn)<la_pass_by_reference>: Change the signature
+	to return a language_pass_by_ref_info instead of an int.
+	(language_pass_by_reference): Ditto.
+	(default_pass_by_reference): Ditto.
+	Adjust the users listed below.
+	* arch-utils.c (default_return_in_first_hidden_param_p):
+	Update.
+	* cp-abi.c (cp_pass_by_reference): Update.
+	* cp-abi.h (cp_pass_by_reference): Update declaration.
+	(struct cp_abi_ops)<pass_by_reference>: Update.
+	* gnu-v3-abi.c (gnuv3_pass_by_reference): Update.
+	* infcall.c (call_function_by_hand_dummy): Update.
+	* language.c (language_pass_by_reference): Update.
+	(default_pass_by_reference): Update.
+	* tic6x-tdep.c (tic6x_return_value): Update.
+
+2019-12-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* dwarf2read.c (dwarf2_add_member_fn): Read the DW_AT_defaulted
+	and DW_AT_deleted attributes of a function.
+	(read_structure_type): Read the DW_AT_calling_convention attribute
+	of a type.
+	(is_valid_DW_AT_defaulted): New function.
+	(is_valid_DW_AT_calling_convention_for_type): New function.
+	* gdbtypes.h: Include dwarf2.h.
+	(struct fn_field)<defaulted>: New field to store the
+	DW_AT_defaulted attribute.
+	(struct fn_field)<is_deleted>: New field to store the
+	DW_AT_deleted attribute.
+	(struct cplus_struct_type)<calling_convention>: New field to store
+	the DW_AT_calling_convention attribute.
+	(TYPE_FN_FIELD_DEFAULTED): New macro.
+	(TYPE_FN_FIELD_DELETED): New macro.
+	(TYPE_CPLUS_CALLING_CONVENTION): New macro.
+	* gdbtypes.c (dump_fn_fieldlists): Update for the changes made
+	to the .h file.
+	(print_cplus_stuff): Likewise.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_show_source): Remove.
+	* tui/tui.h (tui_show_source): Don't declare.
+	* tui/tui-out.c (tui_ui_out::do_field_string): Don't call
+	tui_show_source.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (tui_show_frame_info): Return bool.
+	* tui/tui-stack.c (tui_show_frame_info): Return bool.
+	* tui/tui-hooks.c (tui_refresh_frame_and_register_information):
+	Update.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	PR tui/18932:
+	* tui/tui-hooks.c (tui_refresh_frame_and_register_information):
+	Rename parameters.  Handle the not-from-stack-frame case.
+	(from_stack, from_source_symtab): New globals.
+	(tui_before_prompt, tui_normal_stop): Update.
+	(tui_context_changed, tui_symtab_changed): New functions.
+	(tui_attach_detach_observers): Attach new observers.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* source.c (struct current_source_location) <set, symtab, line>:
+	New methods.
+	<m_symtab, m_line>: Rename.  Now private.
+	(get_current_source_symtab_and_line)
+	(set_default_source_symtab_and_line)
+	(set_current_source_symtab_and_line)
+	(clear_current_source_symtab_and_line, select_source_symtab)
+	(info_source_command, print_source_lines_base)
+	(info_line_command, search_command_helper): Update.
+	* observable.h (current_source_symtab_and_line_changed): Declare
+	observable.
+	* observable.c (current_source_symtab_and_line_changed): Define
+	observable.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-hooks.c (tui_before_prompt): Change parameter to bool.
+	(tui_before_prompt, tui_normal_stop): Update.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c
+	(tui_source_window_base::update_source_window_as_is): Don't call
+	set_current_source_symtab_and_line.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (struct tui_locator_window) <set_locator_info>:
+	Take a symtab_and_line.
+	* tui/tui-stack.c (tui_locator_window::set_locator_info): Take a
+	symtab_and_line.
+	(tui_show_frame_info): Update.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (tui_show_frame_info): Don't call
+	update_exec_info.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_enable): Call tui_display_main.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-disasm.c (tui_get_begin_asm_address): Use
+	get_current_source_symtab_and_line, and main_name.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_show_source): Update.
+	* tui/tui-winsource.h (tui_update_source_windows_with_line): Update.
+	* tui/tui-winsource.c (tui_update_source_windows_with_line): Take
+	a symtab_symbol_info, not a separate symtab and line.  Simplify.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_windows_with_addr):
+	Simplify.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<set_contents, update_source_window_as_is, update_source_window>:
+	Take a sal, not a separate symtab and tui_line_or_address.
+	* tui/tui-winsource.c (tui_source_window_base::update_source_window)
+	(tui_source_window_base::update_source_window_as_is): Take a sal,
+	not a separate symtab and tui_line_or_address.
+	(tui_update_source_windows_with_addr)
+	(tui_update_source_windows_with_line)
+	(tui_source_window_base::rerender)
+	(tui_source_window_base::refill): Update.
+	* tui/tui-source.h (struct tui_source_window) <set_contents>: Take
+	a sal, not a separate symtab and tui_line_or_address.
+	* tui/tui-source.c (tui_source_window::set_contents): Take a sal,
+	not a separate symtab and tui_line_or_address.
+	(tui_source_window::maybe_update): Update.
+	* tui/tui-disasm.h (struct tui_disasm_window) <set_contents>: Take
+	a sal, not a separate symtab and tui_line_or_address.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Take a sal,
+	not a separate symtab and tui_line_or_address.
+	(tui_disasm_window::do_scroll_vertical)
+	(tui_disasm_window::maybe_update): Update.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_source_window_base::refill): Use
+	start_line_or_addr.
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Use
+	start_line_or_addr.
+	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Use
+	start_line_or_addr.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<set_contents>: Return bool.
+	* tui/tui-winsource.c
+	(tui_source_window_base::update_source_window_as_is): Update.
+	* tui/tui-source.h (struct tui_source_window) <set_contents>:
+	Return bool.
+	* tui/tui-source.c (tui_source_window::set_contents): Return
+	bool.  Simplify.
+	* tui/tui-disasm.h (struct tui_disasm_window) <set_contents>:
+	Return bool.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Return
+	bool.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_windows_with_addr)
+	(tui_update_source_windows_with_line): Call update_source_window.
+	* tui/tui-source.h (struct tui_source_window)
+	<show_symtab_source>: Don't declare.
+	* tui/tui-source.c (tui_source_window::show_symtab_source):
+	Remove.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_windows_with_addr): Call
+	update_source_window directly.
+	* tui/tui-disasm.h (tui_show_disassem): Don't declare.
+	* tui/tui-disasm.c (tui_show_disassem): Remove.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c
+	(tui_source_window_base::update_source_window_as_is): Don't switch focus.
+	* tui/tui-disasm.c (tui_show_disassem): Don't switch focus.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<maybe_update>: Remove line_no and addr parameters.
+	* tui/tui-stack.c (tui_show_frame_info): Set PC on sal.  Update.
+	* tui/tui-source.h (struct tui_source_window) <maybe_update>:
+	Update.
+	* tui/tui-source.c (tui_source_window::maybe_update): Remove
+	line_no and addr parameters.
+	* tui/tui-disasm.h (struct tui_disasm_window) <maybe_update>:
+	Update.
+	* tui/tui-disasm.c (tui_disasm_window::maybe_update): Remove
+	line_no and addr parameters.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_source_window_base::set_is_exec_point_at)
+	(tui_source_window_base::update_breakpoint_info): Remove asserts.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_windows_with_addr): Call
+	tui_show_disassem.
+	* tui/tui-disasm.h (tui_show_disassem_and_update_source): Don't
+	declare.
+	* tui/tui-disasm.c (tui_show_disassem_and_update_source): Remove.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.h (tui_show_source): Remove parameters.
+	* tui/tui.c (tui_show_source): Remove parameters.
+	* tui/tui-out.c (tui_ui_out::do_field_string): Update.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_show_source): Update.
+	* tui/tui-winsource.c (tui_display_main): Update.
+	* tui/tui-stack.h (tui_update_locator_fullname): Change parameter
+	to symtab.
+	* tui/tui-stack.c (tui_update_locator_fullname): Change parameter
+	to symtab.
+	* tui/tui-disasm.c (tui_show_disassem_and_update_source): Update.
+
+2019-12-20  Tom Tromey  <tom@tromey.com>
+
+	PR tui/23619:
+	* tui/tui-io.c (tui_rl_saved_prompt): Remove.
+	(tui_redisplay_readline): Use rl_display_prompt.
+	(tui_prep_terminal): Update.
+
+2019-12-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* configure: Regenerate.
+	* configure.ac: Quote variable arguments of test.
+	* gdbsupport/common.m4: Likewise.
+
+2019-12-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* score-tdep.c (score7_analyze_prologue): Pass 2.0 instead of
+	2 to pow ().
+
+2019-12-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* tui/tui-source.c (tui_source_window::set_contents): Cast argument of
+	log10 to double to fix Solaris 11 with gcc 5.5.
+
+2019-12-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* fbsd-tdep.c (fbsd_info_proc_files_entry): Rename local var
+	"sun" to "saddr_un".
+
+2019-12-19  Tom Tromey  <tromey@adacore.com>
+
+	* ui-out.h (enum class field_kind): Fix comment.
+
+2019-12-11  Tom Tromey  <tromey@adacore.com>
+
+	* xml-support.c (xml_fetch_content_from_file): Use FOPEN_RB.
+
+2019-12-18  Tom Tromey  <tromey@adacore.com>
+
+	PR build/25268:
+	* gdbsupport/thread-pool.c (set_thread_name): Expect "int" return
+	type on macOS.  Add comment.
+
+2019-12-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* c-lang.c (c_get_string, asm_language_defn): Remove space
+	before tab.
+
+2019-12-18  Tom Tromey  <tromey@adacore.com>
+
+	PR build/25250:
+	* ui-out.c (ui_out::vmessage): Update.
+	* ui-out.h (enum class field_kind) <FIELD_STRING, FIELD_SIGNED>:
+	Rename.
+	(string_field): Update.
+	(signed_field): Update.
+
+2019-12-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* top.c (print_gdb_configuration): Adjust indentation.
+
+2019-12-17  Christian Biesinger  <cbiesinger@google.com>
+
+	* bsd-kvm.c: Include gdbsupport/pathstuff.h.
+
+2019-12-17  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* tui/tui-layout.h (class tui_layout_base): Add virtual
+	destructor.
+
+2019-12-16  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* infcmd.c (prepare_one_step): Step over skipped inline functions.
+	* infrun.c (inline_frame_is_marked_for_skip): New helper function.
+	(process_event_stop_test): Keep stepping over skipped inline functions.
+
+2019-12-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c (struct gdb_block) <next>: Remove field.
+	(struct gdb_symtab) <~gdb_symtab>: Remove.
+	<blocks>: Change type to std::forward_list<gdb_block>.
+	(compare_block): Remove.
+	(jit_block_open_impl): Adjust to std::forward_list.  Place the new
+	block at the beginning, don't mind about sorting.
+	(finalize_symtab): Adjust to std::forward_list, sort the blocks list
+	before using it.
+
+2019-12-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c (struct gdb_block): Add constructor, initialize
+	real_block and next fields.
+	<name>: Change type to gdb::unique_xmalloc_ptr.
+	(struct gdb_symtab) <~gdb_symtab>: Free blocks with delete.
+	(jit_block_open_impl): Allocate gdb_block with new.
+	(finalize_symtab): Adjust to gdb::unique_xmalloc_ptr.
+
+2019-12-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c: Include forward_list.
+	(struct gdb_symtab) <next>: Remove field.
+	(struct gdb_object) <symtabs>: Change type to
+	std::forward_list<gdb_symtab>.
+	(jit_object_open_impl): Allocate gdb_object with new.
+	(jit_symtab_open_impl): Adjust to std::forward_list.
+	(finalize_symtab): Don't delete symtab.
+	(jit_object_close_impl):  Adjust to std::forward_list.  Free
+	gdb_object with delete.
+
+2019-12-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c (struct gdb_symtab): Add constructor, destructor,
+	initialize fields.
+	<linetable>: Change type to unique_xmalloc_ptr.
+	<file_name>: Change type to std::string.
+	(jit_symtab_open_impl): Allocate gdb_symtab with new.
+	(jit_symtab_line_mapping_add_impl): Adjust.
+	(finalize_symtab): Adjust, call delete on stab.
+
+2019-12-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c (finalize_symtab): Set gdb_block_iter_tmp in loop.
+
+2019-12-16  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat_target::attach): Update.
+	* remote.c (extended_remote_target::attach): Update.
+	* procfs.c (procfs_target::attach): Update.
+	* nto-procfs.c (nto_procfs_target::attach): Update.
+	(nto_procfs_target::create_inferior): Update.
+	* inf-ptrace.c (inf_ptrace_target::attach): Update.
+	* gnu-nat.c (gnu_nat_target::attach): Update.
+	(gnu_nat_target::detach): Update.
+	* darwin-nat.c (darwin_nat_target::attach): Update.
+	* corefile.c (get_exec_file): Constify result.  Remove extraneous
+	return.
+	* bsd-kvm.c (bsd_kvm_target_open): Update.
+	* gdbsupport/common-inferior.h (get_exec_file): Constify result.
+
+2019-12-16  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbsupport/common-defs.h: Remove workaround for a gnulib bug
+	(we no longer need to include time.h before pathmax.h)
+
+2019-12-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-exp.y (write_ambiguous_var): Update.
+	* coffread.c (process_coff_symbol): Update.
+	* ctfread.c (ctf_add_enum_member_cb): Update.
+	(new_symbol): Update.
+	* dwarf2read.c (fixup_go_packaging): Update.
+	(new_symbol): Update.
+	* language.c (language_alloc_type_symbol): Update.
+	* mdebugread.c (new_symbol): Update.
+	* minsyms.c (minimal_symbol_reader::record_full): Update.
+	* psymtab.c (add_psymbol_to_bcache): Update.
+	* stabsread.c (define_symbol): Update.
+	(read_enum_type): Update.
+	* symtab.c (symbol_set_language): Make this a member function...
+	(general_symbol_info::set_language): ... here.
+	* symtab.h (struct general_symbol_info) <set_language>: New function.
+	(SYMBOL_SET_LANGUAGE): Remove.
+	(symbol_set_language): Remove.
+
+2019-12-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-lang.c (ada_add_block_symbols): Update.
+	(ada_collect_symbol_completion_matches): Update.
+	* ax-gdb.c (gen_expr): Update.
+	* block.c (block_lookup_symbol): Update.
+	(block_lookup_symbol_primary): Update.
+	(block_find_symbol): Update.
+	* cp-namespace.c (cp_lookup_symbol_imports_or_template): Update.
+	* dbxread.c (process_one_symbol): Update.
+	* dictionary.c (insert_symbol_hashed): Update.
+	(collate_pending_symbols_by_language): Update.
+	(mdict_add_symbol): Update.
+	* dwarf-index-write.c (write_psymbols): Update.
+	* dwarf2read.c (fixup_go_packaging): Update.
+	* findvar.c (read_var_value): Update.
+	* ft32-tdep.c (ft32_skip_prologue): Update.
+	* go-lang.c (go_symbol_package_name): Update.
+	* language.h (scoped_switch_to_sym_language_if_auto::
+	scoped_switch_to_sym_language_if_auto): Update.
+	* linespec.c (find_method): Update.
+	(find_label_symbols_in_block): Update.
+	* mdebugread.c (parse_symbol): Update.
+	* mi/mi-cmd-stack.c (list_arg_or_local): Update.
+	* minsyms.c (add_minsym_to_demangled_hash_table): Update.
+	(minimal_symbol_reader::install): Update.
+	* moxie-tdep.c (moxie_skip_prologue): Update.
+	* parse.c (parse_exp_in_context): Update.
+	* psymtab.c (psymbol_name_matches): Update.
+	(match_partial_symbol): Update.
+	(lookup_partial_symbol): Update.
+	(psymbol_hash): Update.
+	(psymbol_compare): Update.
+	* python/py-framefilter.c (extract_sym): Update.
+	(py_print_single_arg): Update.
+	* stabsread.c (define_symbol): Update.
+	* stack.c (print_frame_arg): Update.
+	(find_frame_funname): Update.
+	(info_frame_command_core): Update.
+	* symfile.c (set_initial_language): Update.
+	* symtab.c (symbol_set_demangled_name): Update.
+	(symbol_get_demangled_name): Update.
+	(symbol_set_language): Update.
+	(symbol_find_demangled_name): Update.
+	(symbol_set_names): Update.
+	(general_symbol_info::natural_name): Update.
+	(general_symbol_info::demangled_name): Update.
+	(general_symbol_info::search_name): Update.
+	(symbol_matches_search_name): Update.
+	(eq_symbol_entry): Update.
+	(iterate_over_symbols): Update.
+	(completion_list_add_symbol): Update.
+	(completion_list_add_msymbol): Update.
+	(completion_list_add_fields): Update.
+	* symtab.h (struct general_symbol_info) <language>: New function.
+	<language>: Rename to...
+	<m_language>: ...this.
+	(SYMBOL_LANGUAGE): Remove.
+	(MSYMBOL_LANGUAGE): Remove.
+	(struct symbol) <ctor>: Update.
+	* xstormy16-tdep.c (xstormy16_skip_prologue): Update.
+
+2019-12-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-exp.y (write_ambiguous_var): Call symbol_set_language to
+	set the language of sym.
+	* language.c (language_alloc_type_symbol): Likewise.
+
+2019-12-14  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	https://bugzilla.redhat.com/show_bug.cgi?id=1728147
+	PR gdb/23613
+	* bsd-kvm.c (bsd_kvm_target_open): Use 'gdb_abspath'.
+	* corelow.c: Include 'gdbsupport/pathstuff.h'.
+	(core_target_open): Use 'gdb_abspath'.
+	* gdbsupport/pathstuff.c (gdb_abspath): Guard against
+	'current_directory == NULL' case.
+	* gdbsupport/pathstuff.h (gdb_abspath): Expand comment and
+	explain what happens when 'current_directory' is NULL.
+	* go32-nat.c (go32_nat_target::wait): Check if
+	'current_directory' is NULL before call to 'chdir'.
+	* source.c (add_path): Use 'gdb_abspath'.
+	* top.c: Include 'gdbsupport/pathstuff.h'.
+	(init_history): Use 'gdb_abspath'.
+	(set_history_filename): Likewise.
+	* tracefile-tfile.c: Include 'gdbsupport/pathstuff.h'.
+	(tfile_target_open): Use 'gdb_abspath'.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Remove check for multiple calls to
+	warning or error.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Remove call to "fix" for "long long".
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Handle -Wno- prefix.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh (usage): Use GNU style.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* gdbsupport/common-utils.c (string_printf, string_vprintf)
+	(string_vappendf): Add ARI comment.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Remove "fix" call for
+	floatformat_to_double.
+	* target-float.c (host_float_ops<T>::from_target): Add ARI
+	comment.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Remove "fix" call for abort.
+	* utils.c (abort_with_message, dump_core, internal_vproblem): Add
+	ARI marker to abort.
+	* event-top.c (handle_sigsegv): Add ARI marker to abort.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Fix floatformat_from_double text.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Remove ATTRIBUTE_UNUSED check.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Remove "boolean" and "var_boolean"
+	checks.
+
+2019-12-13  Tom Tromey  <tromey@adacore.com>
+
+	* gdbsupport/safe-iterator.h (class basic_safe_range) <begin,
+	end>: No longer "const".
+
+2019-12-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c: Fix indentation, replace spaces with tabs where
+	applicable.
+
+2019-12-13  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* configure.tgt: Match msp430-*-elf* targets when configuring GDB.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (struct objfile) <partial_symtabs>: Now a
+	unique_ptr.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* progspace.h (objfile_list): New typedef.
+	(class unwrapping_objfile_iterator)
+	(struct unwrapping_objfile_range): Newl
+	(struct program_space) <objfiles_range>: Change type.
+	<objfiles>: Change return type.
+	<add_objfile>: Change type of "objfile" parameter.
+	<objfiles_list>: Now a list of shared_ptr.
+	* progspace.c (program_space::add_objfile): Change type of
+	"objfile".  Update.
+	(program_space::remove_objfile): Update.
+	* objfiles.h (struct objfile) <~objfile>: Make public.
+	* objfiles.c (objfile::make): Update.
+	(objfile::unlink): Don't call delete.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (symbol_file_clear): Update.
+	* progspace.h (struct program_space) <free_all_objfiles>: Declare
+	method.
+	* progspace.c (program_space::free_all_objfiles): New method.
+	* objfiles.h (free_all_objfiles): Don't declare.
+	* objfiles.c (free_all_objfiles): Move to program_space.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* progspace.c (program_space::add_objfile)
+	(program_space::remove_objfile): Update.
+	(program_space::multi_objfile_p): Remove.
+	* objfiles.h (struct objfile) <next>: Remove.
+	* objfiles.c (objfile::objfile): Update.
+	(put_objfile_before): Update.
+	(unlink_objfile): Update.
+	* progspace.h (object_files): Remove.
+	(struct program_space) <objfiles_head>: Remove.
+	<objfiles_list>: New member.
+	<objfiles_range, objfiles_safe_range>: Change type.
+	(objfiles): Change return type.
+	(objfiles_safe): Update.
+	(multi_objfile_p): Rewrite and inline.
+	(object_files): Remove macro.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* gdbsupport/safe-iterator.h (basic_safe_iterator): Simplify.  Add
+	second constructor.
+	(basic_safe_range): New class.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* progspace.c (program_space::multi_objfile_p): New method.
+	* printcmd.c (info_symbol_command): Update.
+	* maint.c (maintenance_translate_address): Update.
+	* objfiles.h (MULTI_OBJFILE_P): Remove.
+	* progspace.h (struct program_space) <multi_objfile_p>: New
+	method.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* progspace.h (struct program_space) <remove_objfile>: Declare.
+	* progspace.c (program_space::remove_objfile): New method.
+	* objfiles.c (unlink_objfile): Remove.
+	(objfile::unlink): Call remove_objfile.
+	(objfile): Don't call unlink_objfile.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* progspace.h (struct program_space) <add_objfile>: Declare
+	method.
+	* progspace.c (program_space::add_objfile): New method.
+	* objfiles.c (~objfile): Don't unlink objfile.
+	(put_objfile_before): Remove.
+	(add_separate_debug_objfile): Don't call put_objfile_before.
+	(objfile::make): Call add_objfile.  Set new_objfiles_available on
+	the per-program-space data.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (syms_from_objfile_1): Use objfile_up.
+	(syms_from_objfile_1, remove_symbol_file_command): Call unlink
+	method.
+	(reread_symbols): Use objfile_up.
+	* solib.c (update_solib_list, reload_shared_libraries_1): Call
+	unlink method.
+	* objfiles.h (struct objfile) <~objfile>: Now private.
+	<unlink>: New method.
+	(struct objfile_deleter): New.
+	(objfile_up): New typedef.
+	* objfiles.c (objfile::unlink): New method.
+	(free_objfile_separate_debug, free_all_objfiles)
+	(objfile_purge_solibs): Use it.
+	* jit.c (jit_unregister_code): Remove.
+	(jit_inferior_exit_hook, jit_event_handler): Call unlink on
+	objfile.
+	* compile/compile-object-run.c (do_module_cleanup): Call unlink on
+	objfile.
+	* compile/compile-object-load.c (compile_object_load): Use
+	objfile_up.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (symbol_file_add_with_addrs): Pass "parent" to
+	objfile::make.
+	* objfiles.h (struct objjfile) <make>: No longer inline.
+	(add_separate_debug_objfile): Don't declare.
+	* objfiles.c (add_separate_debug_objfile): Now static.
+	(objfile::make): Move from objfiles.h.  Call
+	add_separate_debug_objfile.  Add "parent" parameter.
+
+2019-12-12  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (symbol_file_add_with_addrs): Use objfile::make.
+	* objfiles.h (struct objfile): Make constructor private.
+	<make>: New static method.
+	* jit.c (jit_object_close_impl): Update.
+
+2019-12-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c (jit_reader_try_read_symtab): Replace xmalloc/xfree with
+	gdb::byte_vector.
+
+2019-12-12  Tom Tromey  <tromey@adacore.com>
+
+	* xml-support.c (xml_fetch_content_from_file): Don't call
+	malloc_failure.
+	* utils.h (class gdb_argv): Remove malloc_failure comment.
+	* utils.c (gdb_argv::reset): Don't call malloc_failure.
+
+2019-12-12  Tom Tromey  <tromey@adacore.com>
+
+	* Makefile.in (ALL_TARGET_OBS): Add riscv-ravenscar-thread.o.
+	(HFILES_NO_SRCDIR): Add riscv-ravenscar-thread.h.
+	(ALLDEPFILES): Add riscv-ravenscar-thread.c.
+	* configure.tgt (riscv-*-*): Add riscv-ravenscar-thread.o.
+	* riscv-ravenscar-thread.c: New file.
+	* riscv-ravenscar-thread.h: New file.
+	* riscv-tdep.c (riscv_gdbarch_init): Call
+	register_riscv_ravenscar_ops.
+
+2019-12-12  Tom Tromey  <tromey@adacore.com>
+
+	* gdbsupport/thread-pool.c (set_thread_name): Use
+	ATTRIBUTE_UNUSED.
+
+2019-12-12  Luis Machado  <luis.machado@linaro.org>
+
+	* gdbsupport/safe-strerror.c: Don't include diagnostics.h.
+	(select_strerror_r): Use ATTRIBUTE_UNUSED instead of the diagnostics
+	macros.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_set_win_height_command): Call
+	tui_adjust_window_height.
+	(tui_adjust_win_heights, new_height_ok): Remove.
+	* tui/tui-layout.h (tui_adjust_window_height): Declare.
+	* tui/tui-layout.c (tui_adjust_window_height): New function.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_resize_all): Remove code, call
+	tui_apply_current_layout.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.h (tui_apply_current_layout): Declare.
+	* tui/tui-layout.c (standard_layouts, applied_layout): New
+	globals.
+	(tui_apply_current_layout): New function.
+	(show_layout): Set applied_layout.  Call
+	tui_apply_current_layout.
+	(show_source_command, show_disasm_command)
+	(show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Remove.
+	(initialize_layouts): New function.
+	(_initialize_tui_layout): Call initialize_layouts.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.h (class tui_layout_base)
+	(class tui_layout_window, class tui_layout_split): New.
+	* tui/tui-layout.c (tui_get_window_by_name)
+	(tui_layout_window::clone, tui_layout_window::apply)
+	(tui_layout_window::get_sizes, tui_layout_window::add_split)
+	(tui_layout_split::add_window, tui_layout_split::clone)
+	(tui_layout_split::get_sizes)
+	(tui_layout_split::set_weights_from_heights)
+	(tui_layout_split::adjust_size, tui_layout_split::apply): New
+	functions.
+	(tui_layout_split::add_split, tui_layout_split::add_split)
+	(tui_layout_split::set_weights_from_heights)
+	(tui_layout_split::set_weights_from_heights): New functions.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_gen_win_info::make_window): Update.
+	* tui/tui-win.c (tui_adjust_win_heights, tui_resize_all): Update.
+	* tui/tui-layout.c (tui_gen_win_info::resize): Update.
+	* tui/tui-data.h (struct tui_point): Remove.
+	(struct tui_gen_win_info) <origin>: Remove.
+	<x, y>: New fields.
+	* tui/tui-command.c (tui_cmd_window::resize): Update.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (struct tui_locator_window) <min_height>:
+	Implement.
+	* tui/tui-regs.h (struct tui_data_item_window) <min_height>:
+	Implement.
+	* tui/tui-data.h (struct tui_gen_win_info) <min_height>: New
+	method.
+	(struct tui_win_info) <min_height>: Implement.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_gen_win_info) <can_box>: New method.
+	(struct tui_win_info) <can_box>: Update.
+
+2019-12-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (struct tui_locator_window) <max_height>: New
+	method.
+	* tui/tui-regs.h (struct tui_data_item_window) <max_height>: New
+	method.
+	* tui/tui-data.h (struct tui_gen_win_info) <max_height>: New
+	method.
+	(struct tui_win_info) <max_height>: Now override.
+
+2019-12-11  Joel Brobecker  <brobecker@adacore.com>
+
+	* NEWS: Create a new section for the next release branch.
+	Rename the section of the current branch, now that it has
+	been cut.
+
+2019-12-11  Joel Brobecker  <brobecker@adacore.com>
+
+	GDB 9 branch created (27f7b2f64062ac9e52afc60509263c2702a9ebd0):
+	* version.in: Bump version to 10.0.50.DATE-git.
+
+2019-12-11  Tom Tromey  <tromey@adacore.com>
+
+	PR build/25268:
+	* gdbsupport/thread-pool.c (set_thread_name): New function.
+	(thread_pool::set_thread_count): Don't call pthread_setname_np.
+	(thread_pool::thread_function): Call set_thread_name.
+
+2019-12-11  Tom Tromey  <tromey@adacore.com>
+
+	* fbsd-tdep.c (fbsd_core_info_proc_status): Cast result of
+	bfd_get_signed_8.
+
+2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Document -raw-values option and the related setting commands.
+	* printcmd.c (print_command_parse_format): Do not set opts->raw off,
+	only set it on when /r is given.
+	* valprint.c (value_print_option_defs): New element raw-values.
+	* Makefile.in: Add the new file.
+
+2019-12-10  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbsupport/safe-strerror.c: Supress the unused function warning
+	for select_strerror_r.
+
+2019-12-10  Christian Biesinger  <cbiesinger@google.com>
+
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* gdbsupport/agent.c (gdb_connect_sync_socket): Call
+	safe_strerror instead of strerror.
+	* gdbsupport/common.m4: Don't check for strerror.
+	* gdbsupport/safe-strerror.c: Support both the glibc version
+	of strerror_r and the XSI version.
+
+2019-12-10  Tom Tromey  <tromey@adacore.com>
+
+	* ada-typeprint.c (print_choices): Use a single "?".
+	(print_variant_part): Print "?" if the discriminant name
+	is not known.
+
+2019-12-10  George Barrett  <bob@bob131.so>
+
+	Fix scripted probe breakpoints.
+	* breakpoint.c (tracepoint_probe_breakpoint_ops): Move
+	declaration forward.
+	(breakpoint_ops_for_event_location_type)
+	(breakpoint_ops_for_event_location): Add function definitions.
+	(break_command_1, trace_command): Use
+	breakpoint_ops_for_event_location.
+	* breakpoint.h (breakpoint_ops_for_event_location): Add function
+	declarations.
+	* guile/scm-breakpoint.c (gdbscm_register_breakpoint_x): Use
+	breakpoint_ops_for_event_location.
+	* python/py-breakpoint.c (bppy_init): Use
+	breakpoint_ops_for_event_location.
+
+2019-12-09  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdbtypes.c (rank_one_type): Return INCOMPATIBLE_TYPE_BADNESS
+	when ranking an lvalue argument for an rvalue parameter.
+
+2019-12-08  Wataru Ashihara  <wataash@wataash.com>
+
+	* darwin-nat.c (darwin_nat_target::create_inferior): Fix
+	template argument for scoped_restore_tmpl from bool to int.
+
+2019-12-07  Keith Seitz  <keiths@redhat.com>
+
+	* build-id.c (build_id_bfd_get): Permit bfd_core, too.
+	(build_id_to_debug_bfd): Make static, rewriting to use
+	build_id_to_bfd_suffix.
+	(build_id_to_bfd_suffix): Copy of build_id_to_debug_bfd,
+	adding `suffix' parameter. Append SUFFIX to file names
+	when searching for matching files.
+	(build_id_to_debug_bfd): Use build_id_to_bfd_suffix.
+	(build_id_to_exec_bfd): Likewise.
+	* build-id.h (build_id_to_debug_bfd): Clarify that function
+	searches for BFD of debug info file.
+	(build_id_to_exec_bfd): Declare.
+	* corelow.c: Include build-id.h.
+	(locate_exec_from_corefile_build_id): New function.
+	(core_target_open): If no executable BFD is found,
+	search for a core file BFD using build-id.
+
+2019-12-06  Christian Biesinger  <cbiesinger@google.com>
+
+	* bcache.c: Put in namespace gdb.
+	* bcache.h: Likewise.
+	* gdbtypes.c (check_types_worklist): Update.
+	(types_deeply_equal): Update.
+	* macrotab.c (struct macro_table) <bcache>: Update.
+	(new_macro_table): Update.
+	* macrotab.h (struct bcache): Put this forward declaration
+	inside namespace gdb.
+	(new_macro_table): Update.
+	* objfiles.h (struct objfile_per_bfd_storage) <filename_cache>:
+	Update.
+	<macro_cache>: Update.
+	* psymtab.h: (psymtab_storage) <psymbol_cache>: Update.
+
+2019-12-06  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/24971
+	* block.c (best_symbol, better_symbol): New function.
+	(block_lookup_symbol_primary, block_lookup_symbol): Prefer def over
+	decl.
+
+2019-12-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdbtypes.h: Define the REFERENCE_SEE_THROUGH_BADNESS value.
+	* gdbtypes.c (rank_one_type): Use REFERENCE_SEE_THROUGH_BADNESS
+	for ranking see-through reference cases.
+
+2019-12-06  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	* stack.c (faas_command): Check a command is provided.
+	* thread.c (taas_command, tfaas_command): Likewise.
+
+2019-12-05  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	* inferior.c (prune_inferiors):  Only call delete_inferior,
+	Do not modify the inferior list.
+
+2019-12-05  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* c-exp.y: Update calls to lookup_typename,
+	lookup_signed_typename and lookup_unsigned_typename.
+	* c-lang.c (evaluate_subexp_c): Likewise.
+	* cp-namespace.c (cp_lookup_symbol_imports_or_template):
+	Likewise.
+	* eval.c (binop_promote): Likewise.
+	* gdbtypes.c (lookup_typename): Remove gdbarch parameter.
+	(lookup_unsigned_typename): Likewise.
+	(lookup_signed_typename): Likewise.
+	* gdbtypes.h (lookup_unsigned_typename): Likewise.
+	(lookup_signed_typename): Likewise.
+	(lookup_typename): Likewise.
+	* guile/scm-type.c (tyscm_lookup_typename): Update calls to
+	lookup_typename, lookup_signed_typename,
+	lookup_unsigned_typename.
+	* m2-exp.y: Likewise.
+	* printcmd.c (printf_wide_c_string): Likewise.
+	(ui_printf): Likewise.
+	* python/py-type.c (typy_lookup_typename): Likewise.
+	* python/py-xmethods.c (python_xmethod_worker::invoke):
+	Likewise.
+	* rust-exp.y: Likewise.
+
+2019-12-04  Christian Biesinger  <cbiesinger@google.com>
+
+	* configure.nat (obsd64): Add missing files x86-nat.o and
+	nat/x86-dregs.o.
+
+2019-12-04  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (val_print_string): Use metadata_style.
+	* go-valprint.c (print_go_string): Use metadata style.
+	* p-valprint.c (pascal_object_print_static_field): Use metadata
+	style.
+	* cp-valprint.c (cp_print_static_field): Use metadata style.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Chris January  <chris.january@arm.com>
+
+	* f-exp.y (COMPLEX_KEYWORD, SINGLE, DOUBLE, PRECISION): New
+	tokens.
+	(typebase): New patterns for complex, single/double precision, and
+	single/double complex.
+	(f77_keywords): Change token for complex keyword, and add single,
+	double, and precision keywords.
+
+2019-12-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* avr-tdep.c (_initialize_avr_tdep): Improve help of command
+	"info io_registers".
+
+2019-12-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regcache.c (cooked_read_test): Initialize thread list of
+	mock_inferior.
+
+2019-12-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* aarch64-linux-tdep.c: Remove includes.
+
+2019-12-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* aarch64-tdep.c: Remove includes.
+
+2019-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* filtered-iterator.h (filtered_iterator) <operator==,
+	operator!=>: Compare wrapped iterators, not wrapped pointers.
+	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add
+	unittests/filtered_iterator-selftests.c.
+	* unittests/filtered_iterator-selftests.c: New file.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdbtypes.c (create_range_type): Inherit endianity
+	from base type.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (decode_constrained_packed_array)
+	(ada_value_assign, value_assign_to_component): Update.
+	* dwarf2loc.c (rw_pieced_value, access_memory)
+	(dwarf2_compile_expr_to_ax): Update.
+	* dwarf2read.c (dwarf2_add_field): Update.
+	* eval.c (evaluate_subexp_standard): Update.
+	* gdbarch.c, gdbarch.h: Rebuild.
+	* gdbarch.sh (bits_big_endian): Remove.
+	* gdbtypes.h (union field_location): Update comment.
+	* target-descriptions.c (make_gdb_type): Update.
+	* valarith.c (value_bit_index): Update.
+	* value.c (struct value) <bitpos>: Update comment.
+	(unpack_bits_as_long, modify_field): Update.
+	* value.h (value_bitpos): Update comment.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdbtypes.c (type_byte_order): Move earlier.  Assert for unknown
+	endian-ness.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (dwarf2_init_float_type)
+	(dwarf2_init_complex_target_type): Add byte_order parameter.
+	(read_base_type): Compute byte order earlier.
+	* gdbtypes.c (init_float_type): Add byte_order parameter.
+	* gdbtypes.h (init_float_type): Add byte_order parameter.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* unittests/tui-selftests.c: Conditionally include tui-winsource.h.
+
+2019-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (process_structure_scope): Initialize
+	"discr_offset".
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* mi/mi-symbol-cmds.c (mi_symbol_info): Take extra parameter, and
+	add it into the search spec.
+	(parse_max_results_option): New function.
+	(mi_info_functions_or_variables): Parse -max-results flag and pass
+	it to mi_symbol_info.
+	(mi_cmd_symbol_info_modules): Likewise.
+	(mi_cmd_symbol_info_types): Likewise.
+	* symtab.c (global_symbol_searcher::add_matching_symbols): Change
+	return type to bool, change result container into a set, and don't
+	add new results if we have enough already.
+	(global_symbol_searcher::add_matching_msymbols): Change return
+	type to bool, and don't add new results if we have enough already.
+	(sort_search_symbols_remove_dups): Delete.
+	(global_symbol_searcher::search): Early exit from search loop when
+	we have enough results.  Use a std::set to collect the results
+	from calling add_matching_symbols.
+	* symtab.h (global_symbol_searcher) <set_max_seach_results>: New
+	member function.
+	(global_symbol_searcher) <m_max_search_results>: New member
+	variable.
+	(global_symbol_searcher) <add_matching_symbols>: Update header
+	comment and change return type to bool.
+	(global_symbol_searcher) <add_matching_msymbols>: Update header
+	comment and change return type to bool.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* symtab.c (symbol_search::compare_search_syms): Update header
+	comment.
+	(global_symbol_searcher::is_suitable_msymbol): New function.
+	(global_symbol_searcher::expand_symtabs): New function.
+	(global_symbol_searcher::add_matching_symbols): New function.
+	(global_symbol_searcher::add_matching_msymbols): New function.
+	(global_symbol_searcher::search): Move most of the content
+	into the new functions above, and call them as needed.
+	* symtab.h (global_symbol_searcher) <expand_symtabs>: New member
+	function.
+	(global_symbol_searcher) <add_matching_symbols>: New member
+	function.
+	(global_symbol_searcher) <add_matching_msymbols>: New member
+	function.
+	(global_symbol_searcher) <is_suitable_msymbol>: New member
+	function.
+
+2019-12-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* mi/mi-cmds.c (mi_cmds): Add -symbol-info-module-functions and
+	-symbol-info-module-variables entries.
+	* mi/mi-cmds.h (mi_cmd_symbol_info_module_functions): Declare.
+	(mi_cmd_symbol_info_module_variables): Declare.
+	* mi/mi-symbol-cmds.c
+	(module_symbol_search_iterator): New typedef.
+	(output_module_symbols_in_single_module_and_file): New function.
+	(output_module_symbols_in_single_module): New function.
+	(mi_info_module_functions_or_variables): New function.
+	(mi_cmd_symbol_info_module_functions): New function.
+	(mi_cmd_symbol_info_module_variables): New function.
+	* NEWS: Mention new MI command.
+
+2019-12-03  Christian Biesinger  <cbiesinger@google.com>
+
+	* bcache.c (hash): Remove.
+	(hash_continue): Remove.
+	* bcache.h (hash): Remove.
+	(hash_continue): Remove.
+	(struct bcache) <ctor>: Update.
+	* psymtab.c (psymbol_hash): Update.
+	* stabsread.c (hashname): Update.
+	* utils.h (fast_hash): Add an argument for a start value,
+	defaulting to zero.
+
+2019-12-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	* symtab.c (symbol_cache_clear_slot):  Move close to cleared type.
+	(destroy_block_symbol_cache): New function.
+	(symbol_cache:~symbol_cache) Call destroy_block_symbol_cache.
+	(resize_symbol_cache): Likewise.
+
+2019-12-02  Tom Tromey  <tom@tromey.com>
+
+	* unittests/tui-selftests.c (run_tests): Make conditional.
+	(_initialize_tui_selftest): Make conditional.
+
+2019-12-02  Christian Biesinger  <cbiesinger@google.com>
+
+	* aix-thread.c (debug_aix_thread): Change type to bool.
+
+2019-12-02  Luis Machado  <luis.machado@linaro.org>
+
+	* infrun.c (follow_fork_inferior): Remove outdated FIXME comment.
+
+2019-12-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (read_tag_string_type): Read the fields required to
+	make a dynamic string, and possibly create a dynamic range for the
+	string.
+	(attr_to_dynamic_prop): Setup is_reference based on the type of
+	attribute being processed.
+	* gdbtypes.c (is_dynamic_type_internal): Handle TYPE_CODE_STRING.
+	(resolve_dynamic_array): Rename to...
+	(resolve_dynamic_array_or_string): ...this, update header comment,
+	and accept TYPE_CODE_STRING.
+	(resolve_dynamic_type_internal): Handle TYPE_CODE_STRING.
+
+2019-12-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (dwarf2_per_cu_int_type): New function, takes most
+	of its implementation from...
+	(dwarf2_per_cu_addr_sized_int_type): ...here, which now just calls
+	the new function.
+
+2019-12-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (read_subrange_type): Read bit and byte stride and
+	create a range with stride where appropriate.
+	* f-valprint.c: Include 'gdbarch.h'.
+	(f77_print_array_1): Take the stride into account when walking the
+	array.  Also convert the stride into addressable units.
+	* gdbtypes.c (create_range_type): Initialise the stride to
+	constant zero.
+	(create_range_type_with_stride): New function, initialise the
+	range as normal, and then setup the stride.
+	(has_static_range): Include the stride here.  Also change the
+	return type to bool.
+	(create_array_type_with_stride): Consider the range stride if the
+	array isn't given its own stride.
+	(resolve_dynamic_range): Resolve the stride if needed.
+	* gdbtypes.h (struct range_bounds) <stride>: New member variable.
+	(struct range_bounds) <flag_is_byte_stride>: New member variable.
+	(TYPE_BIT_STRIDE): Define.
+	(TYPE_ARRAY_BIT_STRIDE): Define.
+	(create_range_type_with_stride): Declare.
+	* valarith.c (value_subscripted_rvalue): Take range stride into
+	account when walking the array.
+
+2019-12-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_all_windows_info): Treat inactive TUI
+	specially.
+
+2019-12-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_copy_source_line): Don't advance past
+	\0.
+	* unittests/tui-selftests.c: New file.
+	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add tui-selftests.c.
+
+2019-12-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_enable): Call tui_update_variables earlier.
+
+2019-12-01  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Document new settings.
+	* tui/tui-wingeneral.c (box_win): Apply appropriate border style.
+	* tui/tui-win.c (_initialize_tui_win): Add border style
+	observers.
+	* tui/tui-io.h (tui_apply_style): Declare.
+	* tui/tui-io.c (tui_apply_style): Rename from apply_style.  No
+	longer static.
+	(apply_ansi_escape, tui_set_reverse_mode): Update.
+	* cli/cli-style.h (class cli_style_option) <add_setshow_commands>:
+	Add "skip_intensity" parameter.
+	<changed>: New member.
+	<do_set_value>: Declare.
+	(tui_border_style, tui_active_border_style): Declare.
+	* cli/cli-style.c (tui_border_style, tui_active_border_style): New
+	globals.
+	(cli_style_option): Initialize "changed".
+	(cli_style_option::do_set_value): New function.
+	(cli_style_option::add_setshow_commands): Add "skip_intensity"
+	parameter.  Update.
+	(STYLE_ADD_SETSHOW_COMMANDS): Add "SKIP" parameter.
+	(_initialize_cli_style): Update.  Create TUI border style
+	commands.
+
+2019-12-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_copy_source_line): Add "ndigits"
+	parameter.
+	* tui/tui-winsource.c (tui_copy_source_line): Add "ndigits"
+	parameter.
+	* tui/tui-win.h (compact_source): Declare.
+	* tui/tui-win.c (compact_source): New global.
+	(tui_set_compact_source, tui_show_compact_source): New functions.
+	(_initialize_tui_win): Add "compact-source" setting.
+	* tui/tui-source.c (tui_source_window::set_contents): Handle
+	compact_source setting.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.
+	* NEWS: Document new setting.
+
+2019-11-30  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (dwarf2_add_field): Include field offset when
+	computing variant part length.
+
+2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	* NEWS:  Mention define-prefix.  Tell that command names can now
+	contain a . character.
+
+2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* command.h (valid_cmd_char_p): Declare.
+	* cli/cli-decode.c (valid_cmd_char_p): New function factorizing
+	the check of valid command char.
+	(find_command_name_length, valid_user_defined_cmd_name_p): Use
+	valid_cmd_char_p.
+	* cli/cli-script.c (validate_comname): Likewise.
+	* completer.c (gdb_completer_command_word_break_characters):
+	Do not remove . from the word break char, update comments.
+	(complete_line_internal_1): Use valid_cmd_char_p.
+	* guile/scm-cmd.c (gdbscm_parse_command_name): Likewise.
+	* python/py-cmd.c (gdbpy_parse_command_name): Likewise.
+
+2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-script.c (do_define_command): Ensure a redefined
+	prefix command is kept as a prefix command.
+	(define_prefix_command): New function.
+	(show_user_1): Report user defined prefixes.
+	(_initialize_cli_script):  Create the new 'define-prefix' command.
+	Add completers for 'define' and 'document'.
+	* top.c (execute_command):  If command is a user-defined prefix only
+	command, report the list of commands for this prefix command.
+
+2019-11-29  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* valops.c (find_oload_champ): Improve debug output.
+
+2019-11-29  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* valops.c (find_oload_champ): Print part of debug messages
+	before the badness vector is std::move'd.
+
+2019-11-28  Tom Tromey  <tom@tromey.com>
+
+	* value.c (creal_internal_fn): Fix comment.
+
+2019-11-28  Tom Tromey  <tom@tromey.com>
+
+	* gdbtypes.h (struct range_bounds) <flag_upper_bound_is_count,
+	flag_bound_evaluated>: Now unsigned.
+
+2019-11-28  Tom Tromey  <tom@tromey.com>
+
+	* guile/guile-internal.h (vlscm_scm_from_value_unsafe): Don't
+	declare.
+
+2019-11-28  Mihails Strasuns  <mihails.strasuns@intel.com>
+
+	* jit.c (jit_bfd_try_read_symtab): Fix printed function name in the
+	debug output.
+	* jit.c (jit_unregister_code): Add debug print to match
+	`jit_register_code`.
+
+2019-11-27  Christian Biesinger  <cbiesinger@google.com>
+
+	* NEWS: Mention the new multithreaded symbol loading.
+
+2019-11-27  Christian Biesinger  <cbiesinger@google.com>
+
+	* maint.c (n_worker_threads): Default to 0.
+	(worker_threads_disabled): New function.
+	* maint.h (worker_threads_disabled): New function.
+	* minsyms.c (minimal_symbol_reader::record_full): Call symbol_set_names
+	here if worker_threads_disabled () is true.
+	(minimal_symbol_reader::install): Skip all threading if
+	worker_threads_disabled () is true.
+
+2019-11-27  Christian Biesinger  <cbiesinger@google.com>
+
+	* minsyms.c (add_minsym_to_hash_table): Use a previously computed
+	hash code if possible.
+	(add_minsym_to_demangled_hash_table): Likewise.
+	(minimal_symbol_reader::install): Compute the hash codes for msymbol
+	on the background thread.
+	* symtab.h (struct minimal_symbol) <hash_value, demangled_hash_value>:
+	Add these fields.
+
+2019-11-27  Christian Biesinger  <cbiesinger@google.com>
+
+	* minsyms.c (minimal_symbol_reader::install): Also compute the hash
+	of the mangled name on the background thread.
+	* symtab.c (symbol_set_names): Allow passing in the hash of the
+	linkage_name.
+	* symtab.h (symbol_set_names): Likewise.
+
+2019-11-27  Kevin Buettner  <kevinb@redhat.com>
+
+	* dwarf2read.c (inherit_abstract_dies): Ensure that delayed
+	physnames are computed for inherited DIEs.
+
+2019-11-27  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.h (struct dwarf2_per_objfile): Remove unnecessary
+	backslashes.
+	* cp-support.c: Remove unnecessary backslashes.
+
+2019-11-27  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-exp.y (write_ambiguous_var): Replace SYMBOL_SET_LINKAGE_NAME
+	with sym->set_linkage_name.
+	* coffread.c (coff_read_enum_type): Likewise.
+	* mdebugread.c (parse_symbol): Likewise.
+	* stabsread.c (patch_block_stabs): Likewise.
+	(define_symbol): Likewise.
+	(read_enum_type): Likewise.
+	(common_block_end): Likewise.
+	* symtab.h (struct general_symbol_info) <set_linkage_name>: New
+	function.
+	(SYMBOL_SET_LINKAGE_NAME): Remove.
+	* xcoffread.c (process_xcoff_symbol): Replace SYMBOL_SET_LINKAGE_NAME
+	with sym->set_linkage_name.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* mi/mi-cmds.c (mi_cmds): Add 'symbol-info-modules' entry.
+	* mi/mi-cmds.h (mi_cmd_symbol_info_modules): Declare.
+	* mi/mi-symbol-cmds.c (mi_cmd_symbol_info_modules): New function.
+	* NEWS: Mention new MI command.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* mi/mi-cmds.c (mi_cmds): Add '-symbol-info-functions',
+	'-symbol-info-types', and '-symbol-info-variables'.
+	* mi/mi-cmds.h (mi_cmd_symbol_info_functions): Declare.
+	(mi_cmd_symbol_info_types): Declare.
+	(mi_cmd_symbol_info_variables): Declare.
+	* mi/mi-symbol-cmds.c: Add 'source.h' and 'mi-getopt.h' includes.
+	(output_debug_symbol): New function.
+	(output_nondebug_symbol): New function.
+	(mi_symbol_info): New function.
+	(mi_info_functions_or_variables): New function.
+	(mi_cmd_symbol_info_functions): New function.
+	(mi_cmd_symbol_info_types): New function.
+	(mi_cmd_symbol_info_variables): New function.
+	* NEWS: Mention new commands.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* symtab.c (symbol_to_info_string): New function, most content
+	moved from print_symbol_info, but updated to return a std::string.
+	(print_symbol_info): Update to use symbol_to_info_string and print
+	returned string.
+	* symtab.h (symbol_to_info_string): Declare new function.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/python.c (gdbpy_rbreak): Convert to using
+	global_symbol_searcher.
+	* symtab.c (file_matches): Convert return type to bool, change
+	file list to std::vector, update header comment.
+	(search_symbols): Rename to...
+	(global_symbol_searcher::search): ...this and update now its
+	a member function of global_symbol_searcher.  Take account of the
+	changes to file_matches.
+	(symtab_symbol_info): Convert to using global_symbol_searcher.
+	(rbreak_command): Likewise.
+	(search_module_symbols): Likewise.
+	* symtab.h (enum symbol_search): Update comment.
+	(search_symbols): Remove declaration.
+	(class global_symbol_searcher): New class.
+
+2019-11-26  Tom Tromey  <tromey@adacore.com>
+
+	* cp-support.c (_initialize_cp_support): Conditionally initialize
+	gdb_demangle_attempt_core_dump.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* python/py-function.c (fnpy_init): Update.
+	* value.h (add_internal_function): Adjust declaration.
+	* value.c (function_destroyer): Remove.
+	(do_add_internal_function): Don't set destroyer or copy name.
+	(add_internal_function): Take unique_xmalloc_ptr<char> for name.
+	Set name_allocated.
+	* python/py-cmd.c (cmdpy_destroyer): Don't free "name".
+	(cmdpy_init): Set name_allocated.
+	* cli/cli-decode.h (struct cmd_list_element) <name_allocated>: New
+	member.
+	(~cmd_list_element): Free "name" if needed.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* value.h (add_internal_function): Add new overload.  Move
+	documentation from value.h.
+	* value.c (do_add_internal_function): New function.
+	(add_internal_function): Use it.  Add new overload.
+	(function_destroyer): Don't free doc.
+	* python/py-function.c (fnpy_init): Update.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* python/py-cmd.c (cmdpy_destroyer): Don't free "doc".
+	(cmdpy_init): Set "doc_allocated".
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* gdbsupport/thread-pool.c (thread_pool::set_thread_count): Set
+	name of worker thread.
+	* gdbsupport/common.m4 (GDB_AC_COMMON): Check for
+	pthread_setname_np.
+	* configure, config.in: Rebuild.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* python/python.c (class gdbpy_gil): New.
+	(struct gdbpy_event): Add constructor, destructor, operator().
+	(gdbpy_post_event): Use run_on_main_thread.
+	(gdbpy_initialize_events): Remove.
+	(do_start_initialization): Update.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Add entry.
+	* maint.c (_initialize_maint_cmds): Add "worker-threads" maint
+	commands.  Call update_thread_pool_size.
+	(update_thread_pool_size, maintenance_set_worker_threads): New
+	functions.
+	(n_worker_threads): New global.
+
+2019-11-26  Christian Biesinger  <cbiesinger@google.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* minsyms.c (minimal_symbol_reader::install): Use
+	parallel_for_each.
+	* gdbsupport/parallel-for.h: New file.
+	* Makefile.in (HFILES_NO_SRCDIR): Add gdbsupport/parallel-for.h.
+
+2019-11-26  Christian Biesinger  <cbiesinger@google.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* gdbsupport/thread-pool.h: New file.
+	* gdbsupport/thread-pool.c: New file.
+	* Makefile.in (COMMON_SFILES): Add thread-pool.c.
+	(HFILES_NO_SRCDIR): Add thread-pool.h.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* event-top.h (thread_local_segv_handler): Declare.
+	* event-top.c (thread_local_segv_handler): New global.
+	(install_handle_sigsegv, handle_sigsegv): New functions.
+	(async_init_signals): Install SIGSEGV handler.
+	* cp-support.c (gdb_demangle_jmp_buf): Change type.  Now
+	thread-local.
+	(report_failed_demangle): New function.
+	(gdb_demangle): Make core_dump_allowed atomic.  Remove signal
+	handler-setting code, instead use segv_handler.  Run warning code
+	on main thread.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* run-on-main-thread.c: New file.
+	* run-on-main-thread.h: New file.
+	* unittests/main-thread-selftests.c: New file.
+	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add
+	main-thread-selftests.c.
+	(HFILES_NO_SRCDIR): Add run-on-main-thread.h.
+	(COMMON_SFILES): Add run-on-main-thread.c.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* main.c (setup_alternate_signal_stack): Remove.
+	(captured_main_1): Use gdb::alternate_signal_stack.
+	* gdbsupport/alt-stack.h: New file.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* gdbsupport/signals-state-save-restore.c (original_signal_mask):
+	Remove comment.
+	(save_original_signals_state, restore_original_signals_state): Use
+	gdb_sigmask.
+	* linux-nat.c (block_child_signals, restore_child_signals_mask)
+	(_initialize_linux_nat): Use gdb_sigmask.
+	* guile/guile.c (_initialize_guile): Use block_signals.
+	* Makefile.in (HFILES_NO_SRCDIR): Add gdb-sigmask.h.
+	* gdbsupport/gdb-sigmask.h: New file.
+	* event-top.c (async_sigtstp_handler): Use gdb_sigmask.
+	* cp-support.c (gdb_demangle): Use gdb_sigmask.
+	* gdbsupport/common.m4 (GDB_AC_COMMON): Check for
+	pthread_sigmask.
+	* configure, config.in: Rebuild.
+	* gdbsupport/block-signals.h: New file.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* acinclude.m4: Include ax_pthread.m4.
+	* Makefile.in (PTHREAD_CFLAGS, PTHREAD_LIBS): New variables.
+	(INTERNAL_CFLAGS_BASE): Use PTHREAD_CFLAGS.
+	(CLIBS): Use PTHREAD_LIBS.
+	(aclocal_m4_deps): Add ax_pthread.m4.
+	* config.in, configure: Rebuild.
+	* gdbsupport/common.m4 (GDB_AC_COMMON): Check for std::thread.
+
+2019-11-26  Tom Tromey  <tom@tromey.com>
+
+	* symtab.h (struct minimal_symbol) <name_set>: New member.
+	* minsyms.c (minimal_symbol_reader::record_full): Copy name.
+	Don't call symbol_set_names.
+	(minimal_symbol_reader::install): Call symbol_set_names.
+
+2019-11-26  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* python/python.c (gdbpy_enter::~gdbpy_enter): Release GIL after
+	restore_active_ext_lang, as GIL is needed for (indirectly)
+	called PyOS_InterruptOccurred.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* sparc-nat.c (sparc_xfer_wcookie): Sync declaration with
+	definition.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* remote-sim.c (simulator_command): Make static, remove
+	declaration.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* unittests/array-view-selftests.c (check_ptr_size_ctor2): Make
+	static.
+	* unittests/basic_string_view/capacity/1.cc (test01): Likewise.
+	* unittests/basic_string_view/cons/char/1.cc (test01): Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/cons/char/2.cc (test03): Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/cons/char/3.cc (test05): Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/element_access/char/1.cc (test01):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/element_access/char/empty.cc (main):
+	Likewise.
+	* unittests/basic_string_view/element_access/char/front_back.cc
+	(test01): Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/inserters/char/2.cc (test05):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/modifiers/remove_prefix/char/1.cc
+	(test01): Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/modifiers/remove_suffix/char/1.cc
+	(test01): Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/modifiers/swap/char/1.cc (test01):
+	Likewise.
+	* unittests/basic_string_view/operations/compare/char/1.cc
+	(test01): Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/compare/char/13650.cc
+	(test01): Likewise.
+	* unittests/basic_string_view/operations/copy/char/1.cc (test01):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/data/char/1.cc (test01):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/find/char/1.cc (test01):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/find/char/2.cc (test02):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/find/char/3.cc (test03):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/find/char/4.cc (main):
+	Likewise.
+	* unittests/basic_string_view/operations/rfind/char/1.cc (test01):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/rfind/char/2.cc (test02):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/rfind/char/3.cc (test03):
+	Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operations/substr/char/1.cc
+	(test01): Likewise.
+	(main): Likewise.
+	* unittests/basic_string_view/operators/char/2.cc (main):
+	Likewise.
+	* unittests/optional/assignment/1.cc (test): Likewise.
+	* unittests/optional/assignment/2.cc (test): Likewise.
+	* unittests/optional/assignment/3.cc (test): Likewise.
+	* unittests/optional/assignment/4.cc (test): Likewise.
+	* unittests/optional/assignment/5.cc (test): Likewise.
+	* unittests/optional/assignment/6.cc (test): Likewise.
+	* unittests/optional/assignment/7.cc (test): Likewise.
+	* unittests/optional/cons/copy.cc (test): Likewise.
+	* unittests/optional/cons/default.cc (test): Likewise.
+	* unittests/optional/cons/move.cc (test): Likewise.
+	* unittests/optional/cons/value.cc (test): Likewise.
+	* unittests/optional/in_place.cc (test): Likewise.
+	* unittests/optional/observers/1.cc (test): Likewise.
+	* unittests/optional/observers/2.cc (test): Likewise.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* tui-win.h (tui_set_var_cmd): Remove.
+	* tui-win.c (tui_set_var_cmd): Make static.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* breakpoint.h (hbreak_command_wrapper, thbreak_command_wrapper,
+	rbreak_command_wrapper): Remove.
+	* symtab.c (rbreak_command_wrapper): Remove.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* inferior.h (info_terminal_command): Remove declaration.
+	* inflow.c (info_terminal_command): Make static.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* inferior.c (exit_inferior_silent): Remove.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dictionary.c (dict_empty, mdict_empty): Remove.
+	* dictionary.c (mdict_empty): Remove.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	 * arc-tdep.c (arc_insn_get_memory_base_reg): Make static.
+	 (arc_insn_get_memory_offset): Likewise.
+	 (arc_insn_dump): Likewise.
+	 * cp-support.c (test_cp_symbol_name_matches): Likewise.
+	 * csky-linux-tdep.c (csky_supply_fregset): Likewise.
+	 * dictionary.c (dict_iterator_next): Likewise.
+	 (dict_iter_match_first): Likewise.
+	 (dict_iter_match_next): Likewise.
+	 * f-lang.c (evaluate_subexp_f): Likewise.
+	 * hppa-tdep.c (hppa_read_pc): Likewise.
+	 * i386-tdep.c (i386_floatformat_for_type): Likewise.
+	 * parse.c (write_exp_elt_msym): Likewise.
+	 * ppc-linux-tdep.c (ppc_floatformat_for_type): Likewise.
+	 * remote.c (remote_packet_size): Likewise.
+	 (remote_notif_stop_parse): Likewise.
+	 * rs6000-aix-tdep.c (aix_sighandle_frame_sniffer): Likewise.
+	 * s12z-tdep.c (s12z_disassemble_info): Likewise.
+	 * source.c (prepare_path_for_appending): Likewise.
+	 * sparc64-linux-tdep.c
+	 (sparc64_linux_handle_segmentation_fault); Likewise.
+	 * stack.c (frame_selection_by_function_completer): Likewise.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* completer.c (set_gdb_completion_word_break_characters):
+	Remove.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf-index-write.c: Include dwarf-index-write.h.
+	* mi/mi-interp.c: Include mi/mi-interp.h.
+
+2019-11-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aarch32-tdep.c: Include aarch32-tdep.h.
+	* aarch32-tdep.h: Forward-declare struct target_desc.
+
+2019-11-26  Christian Biesinger  <cbiesinger@google.com>
+
+	* linux-nat.c (detach_one_lwp): Call safe_strerror instead of
+	strerror.
+	* nto-procfs.c (nto_procfs_target::create_inferior): Likewise.
+	* windows-nat.c (windows_nat_target::create_inferior): Likewise.
+
+2019-11-25  Tom de Vries  <tdevries@suse.de>
+
+	* contrib/words.sh: Add -c option.
+
+2019-11-25  Christian Biesinger  <cbiesinger@google.com>
+
+	* solib.c (solib_find_1): Change int to bool.
+	(exec_file_find): Change int to bool.
+	(solib_find): Change int to bool.
+	(solib_read_symbols): Change int to bool.
+	(solib_used): Change int to bool.
+	(solib_add): Change int to bool.
+	(info_sharedlibrary_command): Change int to bool.
+	(solib_contains_address_p): Change int to bool.
+	(solib_keep_data_in_core): Change int to bool.
+	(in_solib_dynsym_resolve_code): Change int to bool.
+	(reload_shared_libraries_1): Change int to bool.
+	(gdb_sysroot_changed): Change int to bool.
+	* solib.h (solib_read_symbols): Change int to bool.
+	(solib_contains_address_p): Change int to bool.
+	(solib_keep_data_in_core): Change int to bool.
+	(in_solib_dynsym_resolve_code): Change int to bool.
+	(libpthread_name_p): Change int to bool.
+
+2019-11-25  Luis Machado  <luis.machado@linaro.org>
+
+	* NEWS (New Commands): Mention "set debug remote-packet-max-chars".
+	* remote.c (REMOTE_DEBUG_MAX_CHAR): Remove.
+	(remote_packet_max_chars): New static global.
+	(show_remote_packet_max_chars): New function.
+	(remote_target::putpkt_binary): Adjust to use new
+	remote_packet_max_chars option.
+	(remote_target::getpkt_or_notif_sane_1): Likewise.
+	(_initialize_remote): Register new remote-packet-max-chars option.
+
+2019-11-24  Simon Marchi  <simon.marchi@efficios.com>
+
+	* m68k-linux-nat.c: Include gdbarch.h.
+
+2019-11-24  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (read_symbols): Update.
+	* psymtab.c (require_partial_symbols): Change type of "verbose" to
+	bool.
+	(psym_map_symtabs_matching_filename, find_pc_sect_psymtab)
+	(psym_lookup_symbol, psym_find_last_source_symtab)
+	(psym_forget_cached_source_info, psym_print_stats)
+	(psym_expand_symtabs_for_function, psym_expand_all_symtabs)
+	(psym_expand_symtabs_with_fullname, psym_map_symbol_filenames)
+	(psym_map_matching_symbols, psym_expand_symtabs_matching)
+	(psym_find_compunit_symtab_by_address)
+	(maintenance_print_psymbols, maintenance_info_psymtabs)
+	(maintenance_check_psymtabs): Update.
+	* psymtab.h (require_partial_symbols): Change type of "verbose" to
+	bool.
+
+2019-11-22  Tom Tromey  <tom@tromey.com>
+
+	* observable.h: Update comments.
+
+2019-11-22  Tom Tromey  <tromey@adacore.com>
+
+	* ada-tasks.c (ada_task_is_alive): Make parameter const.
+	(print_ada_task_info): Don't try to fetch thread id if task is not
+	alive.
+
+2019-11-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-exp.y: Update.
+	* ada-lang.c (sort_choices): Update.
+	(ada_print_symbol_signature): Update.
+	(resolve_subexp): Update.
+	(ada_parse_renaming): Update.
+	(ada_read_renaming_var_value): Update.
+	(lesseq_defined_than): Update.
+	(remove_extra_symbols): Update.
+	(remove_irrelevant_renamings): Update.
+	(ada_add_block_symbols): Update.
+	(ada_collect_symbol_completion_matches): Update.
+	(ada_is_renaming_symbol): Update.
+	(aggregate_assign_from_choices): Update.
+	(ada_evaluate_subexp): Update.
+	(ada_has_this_exception_support): Update.
+	(ada_is_non_standard_exception_sym): Update.
+	(ada_add_exceptions_from_frame): Update.
+	(ada_add_global_exceptions): Update.
+	(ada_print_subexp): Update.
+	* ax-gdb.c (gen_var_ref): Update.
+	(gen_maybe_namespace_elt): Update.
+	(gen_expr_for_cast): Update.
+	(gen_expr): Update.
+	* block.h: Update.
+	* blockframe.c (find_pc_partial_function): Update.
+	* breakpoint.c (print_breakpoint_location): Update.
+	(update_static_tracepoint): Update.
+	* btrace.c (ftrace_print_function_name): Update.
+	(ftrace_function_switched): Update.
+	* buildsym.c (find_symbol_in_list): Update.
+	* c-exp.y: Update.
+	* c-typeprint.c (c_print_typedef): Update.
+	(c_type_print_template_args): Update.
+	* cli/cli-cmds.c (edit_command): Update.
+	(list_command): Update.
+	(print_sal_location): Update.
+	* coffread.c (patch_opaque_types): Update.
+	(process_coff_symbol): Update.
+	(coff_read_enum_type): Update.
+	* compile/compile-c-symbols.c (c_symbol_substitution_name): Update.
+	(convert_one_symbol): Update.
+	(hash_symname): Update.
+	(eq_symname): Update.
+	* compile/compile-cplus-symbols.c (convert_one_symbol): Update.
+	* compile/compile-cplus-types.c (debug_print_scope): Update.
+	* compile/compile-loc2c.c (do_compile_dwarf_expr_to_c): Update.
+	* compile/compile-object-load.c (get_out_value_type): Update.
+	* cp-namespace.c (cp_scan_for_anonymous_namespaces): Update.
+	(search_symbol_list): Update.
+	(cp_lookup_symbol_imports_or_template): Update.
+	* cp-support.c (overload_list_add_symbol): Update.
+	* ctfread.c (psymtab_to_symtab): Update.
+	* dbxread.c (cp_set_block_scope): Update.
+	* dictionary.c (iter_match_first_hashed): Update.
+	(iter_match_next_hashed): Update.
+	(insert_symbol_hashed): Update.
+	(iter_match_next_linear): Update.
+	* dictionary.h: Update.
+	* dwarf2loc.c (func_get_frame_base_dwarf_block): Update.
+	(locexpr_describe_location_piece): Update.
+	(locexpr_describe_location_1): Update.
+	(locexpr_generate_c_location): Update.
+	(loclist_describe_location): Update.
+	(loclist_generate_c_location): Update.
+	* dwarf2read.c (dw2_debug_names_lookup_symbol): Update.
+	(read_func_scope): Update.
+	(process_enumeration_scope): Update.
+	(new_symbol): Update.
+	(dwarf2_const_value): Update.
+	(dwarf2_symbol_mark_computed): Update.
+	* eval.c (evaluate_funcall): Update.
+	(evaluate_subexp_standard): Update.
+	* expprint.c (print_subexp_standard): Update.
+	(dump_subexp_body_standard): Update.
+	* f-valprint.c (info_common_command_for_block): Update.
+	* findvar.c (get_hosting_frame): Update.
+	(default_read_var_value): Update.
+	* go-lang.c (go_symbol_package_name): Update.
+	* guile/scm-block.c (bkscm_print_block_smob): Update.
+	* guile/scm-symbol.c (syscm_print_symbol_smob): Update.
+	(gdbscm_symbol_name): Update.
+	(gdbscm_symbol_linkage_name): Update.
+	(gdbscm_symbol_print_name): Update.
+	* infcall.c (get_function_name): Update.
+	* infcmd.c (jump_command): Update.
+	(finish_command): Update.
+	* infrun.c (insert_exception_resume_breakpoint): Update.
+	* linespec.c (canonicalize_linespec): Update.
+	(create_sals_line_offset): Update.
+	(convert_linespec_to_sals): Update.
+	(complete_label): Update.
+	(find_label_symbols_in_block): Update.
+	* m2-typeprint.c (m2_print_typedef): Update.
+	* mdebugread.c (mdebug_reg_to_regnum): Update.
+	(parse_symbol): Update.
+	(mylookup_symbol): Update.
+	* mi/mi-cmd-stack.c (list_arg_or_local): Update.
+	(list_args_or_locals): Update.
+	* objc-lang.c (compare_selectors): Update.
+	(info_selectors_command): Update.
+	(compare_classes): Update.
+	(info_classes_command): Update.
+	(find_imps): Update.
+	* p-typeprint.c (pascal_print_typedef): Update.
+	* printcmd.c (build_address_symbolic): Update.
+	(info_address_command): Update.
+	(print_variable_and_value): Update.
+	* python/py-framefilter.c (extract_sym): Update.
+	(py_print_single_arg): Update.
+	* python/py-symbol.c (sympy_str): Update.
+	(sympy_get_name): Update.
+	(sympy_get_linkage_name): Update.
+	* python/python.c (gdbpy_rbreak): Update.
+	* record-btrace.c (btrace_get_bfun_name): Update.
+	(btrace_call_history): Update.
+	* rust-lang.c (rust_print_typedef): Update.
+	* solib-frv.c (frv_fdpic_find_canonical_descriptor): Update.
+	* stabsread.c (stab_reg_to_regnum): Update.
+	(define_symbol): Update.
+	(read_enum_type): Update.
+	(common_block_end): Update.
+	(cleanup_undefined_types_1): Update.
+	(scan_file_globals): Update.
+	* stack.c (print_frame_arg): Update.
+	(print_frame_args): Update.
+	(find_frame_funname): Update.
+	(info_frame_command_core): Update.
+	(iterate_over_block_locals): Update.
+	(print_block_frame_labels): Update.
+	(do_print_variable_and_value): Update.
+	(iterate_over_block_arg_vars): Update.
+	(return_command): Update.
+	* symmisc.c (dump_symtab_1): Update.
+	(print_symbol): Update.
+	* symtab.c (eq_symbol_entry): Update.
+	(symbol_cache_dump): Update.
+	(lookup_language_this): Update.
+	(find_pc_sect_line): Update.
+	(skip_prologue_sal): Update.
+	(symbol_search::compare_search_syms): Update.
+	(treg_matches_sym_type_name): Update.
+	(search_symbols): Update.
+	(print_symbol_info): Update.
+	(rbreak_command): Update.
+	(completion_list_add_symbol): Update.
+	(find_gnu_ifunc): Update.
+	(get_symbol_address): Update.
+	(search_module_symbols): Update.
+	(info_module_subcommand): Update.
+	* symtab.h (SYMBOL_NATURAL_NAME): Remove.
+	(SYMBOL_LINKAGE_NAME): Remove.
+	(SYMBOL_DEMANGLED_NAME): Remove.
+	(SYMBOL_PRINT_NAME): Remove.
+	(SYMBOL_SEARCH_NAME): Remove.
+	* tracepoint.c (set_traceframe_context): Update.
+	(validate_actionline): Update.
+	(collection_list::collect_symbol): Update.
+	(encode_actions_1): Update.
+	(info_scope_command): Update.
+	(print_one_static_tracepoint_marker): Update.
+	* typeprint.c (typedef_hash_table::add_template_parameters): Update.
+	* valops.c (address_of_variable): Update.
+	(find_overload_match): Update.
+	(find_oload_champ): Update.
+
+2019-11-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-lang.c (ada_lookup_simple_minsym): Update.
+	(ada_collect_symbol_completion_matches): Update.
+	* ada-tasks.c (read_atcb): Update.
+	* amd64-windows-tdep.c (amd64_skip_main_prologue): Update.
+	(amd64_windows_skip_trampoline_code): Update.
+	* arm-tdep.c (skip_prologue_function): Update.
+	(arm_skip_stack_protector): Update.
+	* arm-wince-tdep.c (arm_pe_skip_trampoline_code): Update.
+	(arm_wince_skip_main_prologue): Update.
+	* ax-gdb.c (gen_expr): Update.
+	* block.c (call_site_for_pc): Update.
+	* blockframe.c (find_pc_partial_function): Update.
+	* breakpoint.c (set_breakpoint_location_function): Update.
+	* btrace.c (ftrace_print_function_name): Update.
+	(ftrace_function_switched): Update.
+	* c-valprint.c (print_unpacked_pointer): Update.
+	* coffread.c (coff_symfile_read): Update.
+	* compile/compile-c-symbols.c (convert_symbol_bmsym): Update.
+	* compile/compile-cplus-symbols.c (convert_symbol_bmsym): Update.
+	* dwarf-index-write.c (write_psymbols): Update.
+	* dwarf2loc.c (call_site_to_target_addr): Update.
+	(func_verify_no_selftailcall): Update.
+	(tailcall_dump): Update.
+	(call_site_find_chain_1): Update.
+	(dwarf_expr_reg_to_entry_parameter): Update.
+	* elfread.c (elf_gnu_ifunc_record_cache): Update.
+	* eval.c (evaluate_funcall): Update.
+	(evaluate_subexp_standard): Update.
+	(evaluate_subexp_for_sizeof): Update.
+	* expprint.c (print_subexp_standard): Update.
+	(dump_subexp_body_standard): Update.
+	* frame.c (get_prev_frame_always_1): Update.
+	* frv-tdep.c (frv_skip_main_prologue): Update.
+	* gnu-v2-abi.c (gnuv2_value_rtti_type): Update.
+	* gnu-v3-abi.c (gnuv3_rtti_type): Update.
+	(gnuv3_get_typename_from_type_info): Update.
+	(gnuv3_skip_trampoline): Update.
+	* hppa-tdep.c (hppa_lookup_stub_minimal_symbol): Update.
+	* i386-tdep.c (i386_skip_main_prologue): Update.
+	(i386_pe_skip_trampoline_code): Update.
+	* ia64-tdep.c (ia64_convert_from_func_ptr_addr): Update.
+	* infcall.c (get_function_name): Update.
+	* linespec.c (minsym_found): Update.
+	* linux-fork.c (info_checkpoints_command): Update.
+	* m32c-tdep.c (m32c_m16c_address_to_pointer): Update.
+	(m32c_m16c_pointer_to_address): Update.
+	* maint.c (maintenance_translate_address): Update.
+	* minsyms.c (add_minsym_to_hash_table): Update.
+	(add_minsym_to_demangled_hash_table): Update.
+	(lookup_minimal_symbol_mangled): Update.
+	(lookup_minimal_symbol_demangled): Update.
+	(lookup_minimal_symbol_linkage): Update.
+	(lookup_minimal_symbol_text): Update.
+	(lookup_minimal_symbol_by_pc_name): Update.
+	(minimal_symbol_is_less_than): Update.
+	(compact_minimal_symbols): Update.
+	(build_minimal_symbol_hash_tables): Update.
+	(find_solib_trampoline_target): Update.
+	* mips-tdep.c (mips_stub_frame_sniffer): Update.
+	(mips_skip_pic_trampoline_code): Update.
+	* msp430-tdep.c (msp430_skip_trampoline_code): Update.
+	* objc-lang.c (info_selectors_command): Update.
+	(info_classes_command): Update.
+	(find_methods): Update.
+	(find_imps): Update.
+	* p-valprint.c (pascal_val_print): Update.
+	* ppc-linux-tdep.c (powerpc_linux_in_dynsym_resolve_code): Update.
+	* ppc-sysv-tdep.c (convert_code_addr_to_desc_addr): Update.
+	* printcmd.c (build_address_symbolic): Update.
+	(info_symbol_command): Update.
+	* psymtab.c (psymbol_name_matches): Update.
+	(match_partial_symbol): Update.
+	(lookup_partial_symbol): Update.
+	(print_partial_symbols): Update.
+	(sort_pst_symbols): Update.
+	(maintenance_check_psymtabs): Update.
+	* python/py-framefilter.c (py_print_frame): Update.
+	* python/python.c (gdbpy_rbreak): Update.
+	* record-btrace.c (btrace_get_bfun_name): Update.
+	(btrace_call_history): Update.
+	* rs6000-tdep.c (rs6000_skip_main_prologue): Update.
+	(rs6000_skip_trampoline_code): Update.
+	* sol-thread.c (info_cb): Update.
+	* stabsread.c (scan_file_globals): Update.
+	* stack.c (find_frame_funname): Update.
+	(info_frame_command_core): Update.
+	* symmisc.c (dump_msymbols): Update.
+	* symtab.c (symbol_natural_name): Rename to..,
+	(general_symbol_info::natural_name): ...this.
+	(symbol_demangled_name): Rename to...
+	(general_symbol_info::demangled_name): ...this.
+	(symbol_search_name): Rename to...
+	(general_symbol_info::search_name): ...this.
+	(symbol_matches_search_name): Update.
+	(find_pc_sect_line): Update.
+	(skip_prologue_sal): Update.
+	(search_symbols): Update.
+	(print_msymbol_info): Update.
+	(rbreak_command): Update.
+	(completion_list_add_msymbol): Update.
+	(completion_list_objc_symbol): Update.
+	(get_msymbol_address): Update.
+	* symtab.h (struct general_symbol_info): Add member functions
+	natural_name (), linkage_name (), print_name (), demangled_name (),
+	and search_name ().
+	(SYMBOL_NATURAL_NAME): Update.
+	(symbol_natural_name): Move to a member function on general_symbol_info.
+	(SYMBOL_DEMANGLED_NAME): Update.
+	(symbol_demangled_name): Move to a member function on
+	general_symbol_info.
+	(SYMBOL_SEARCH_NAME): Update.
+	(symbol_search_name): Move to a member function on general_symbol_info.
+	(MSYMBOL_NATURAL_NAME): Remove.
+	(MSYMBOL_LINKAGE_NAME): Remove.
+	(MSYMBOL_PRINT_NAME): Remove.
+	(MSYMBOL_DEMANGLED_NAME): Remove.
+	(MSYMBOL_SEARCH_NAME): Remove.
+	* x86-tdep.c (x86_in_indirect_branch_thunk): Update.
+
+2019-11-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (create_demangled_names_hash): Use per_bfd->
+	minimal_symbol_count for computing the initial size, if greater
+	than our default size.
+
+2019-11-22  Tom de Vries  <tdevries@suse.de>
+
+	* contrib/words.sh: Improve words extraction.
+
+2019-11-22  Tom de Vries  <tdevries@suse.de>
+
+	* contrib/words.sh: Combine sed invocations.
+
+2019-11-21  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Update.
+	* demangle.c: Rename to...
+	* gdb-demangle.c: ..this.
+	(is_cplus_marker): Change return type to bool.
+	(_initialize_demangler): Rename to...
+	(_initialize_gdb_demangle): ...this.
+	* gdb-demangle.h (is_cplus_marker): Change return type to bool.
+	* symtab.h (demangle): Remove declaration; instead include
+	gdb-demangle.h.
+
+2019-11-21  Tom Tromey  <tromey@adacore.com>
+
+	* gdbsupport/format.c (format_pieces): Parse %I64d.
+	* unittests/format_pieces-selftests.c (test_windows_formats): New
+	function.
+	(run_tests): Call it.
+
+2019-11-21  Peeter Joot  <peeter.joot@lzlabs.com>
+
+	Byte reverse display of variables with DW_END_big, DW_END_little
+	(DW_AT_endianity) dwarf attributes if different than the native
+	byte order.
+	* ada-lang.c (ada_value_binop):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* ada-valprint.c (printstr):
+	(ada_val_print_string):
+	* ada-lang.c (value_pointer):
+	(ada_value_binop):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* c-lang.c (c_get_string):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* c-valprint.c (c_val_print_array):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* cp-valprint.c (cp_print_class_member):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* dwarf2loc.c (rw_pieced_value):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* dwarf2read.c (read_base_type): Handle DW_END_big,
+	DW_END_little
+	* f-lang.c (f_get_encoding):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* findvar.c (default_read_var_value):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* gdbtypes.c (check_types_equal):
+	Require matching TYPE_ENDIANITY_NOT_DEFAULT if set.
+	(recursive_dump_type): Print TYPE_ENDIANITY_BIG,
+	and TYPE_ENDIANITY_LITTLE if set.
+	(type_byte_order): new function.
+	* gdbtypes.h (TYPE_ENDIANITY_NOT_DEFAULT): New macro.
+	(struct main_type) <flag_endianity_not_default>:
+	New field.
+	(type_byte_order): New function.
+	* infcmd.c (default_print_one_register_info):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* p-lang.c (pascal_printstr):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* p-valprint.c (pascal_val_print):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* printcmd.c (print_scalar_formatted):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* solib-darwin.c (darwin_current_sos):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* solib-svr4.c (solib_svr4_r_ldsomap):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* stap-probe.c (stap_modify_semaphore):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* target-float.c (target_float_same_format_p):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* valarith.c (scalar_binop):
+	(value_bit_index):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* valops.c (value_cast):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* valprint.c (generic_emit_char):
+	(generic_printstr):
+	(val_print_string):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* value.c (unpack_long):
+	(unpack_bits_as_long):
+	(unpack_value_bitfield):
+	(modify_field):
+	(pack_long):
+	(pack_unsigned_long):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* findvar.c (unsigned_pointer_to_address):
+	(signed_pointer_to_address):
+	(unsigned_address_to_pointer):
+	(address_to_signed_pointer):
+	(default_read_var_value):
+	(default_value_from_register):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* gnu-v3-abi.c (gnuv3_make_method_ptr):
+	Use type_byte_order instead of gdbarch_byte_order.
+	* riscv-tdep.c (riscv_print_one_register_info):
+	Use type_byte_order instead of gdbarch_byte_order.
+
+2019-11-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* top.c (current_ui_gdb_stdout_ptr): Spell out by hand.
+	(current_ui_gdb_stdin_ptr): Likewise.
+	(current_ui_gdb_stderr_ptr): Likewise.
+	(current_ui_gdb_stdlog_ptr): Likewise.
+	(current_ui_current_uiout_ptr): Likewise.
+	(gen_ret_current_ui_field_ptr): Remove.
+
+2019-11-21  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24956
+	* cli/cli-script.c (execute_control_command): Only switch to
+	INTERP_CONSOLE's ui_out when INTERP_MI is active.
+
+2019-11-19  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_partial_win_by_name): Move from tui-data.c.
+	Now static.  Change type of "name".
+	(tui_set_win_height_command): Don't copy "arg".
+	* tui/tui-data.h (tui_partial_win_by_name): Don't declare.
+	* tui/tui-data.c (tui_partial_win_by_name): Move to tui-win.c.
+
+2019-11-19  Ali Tamur <tamur@google.com>
+
+	* dwarf2read.c (dw2_get_file_names_reader): Replace "if (attr)" with
+	"if (attr != nullptr)".
+	(dwarf2_find_base_address): Likewise.
+	(dwarf2_build_include_psymtabs): Likewise.
+	(read_cutu_die_from_dwo): Likewise.
+	(read_func_scope): Likewise.
+	(read_call_site_scope): Likewise.
+	(dwarf2_get_pc_bounds): Likewise.
+	(dwarf2_record_block_ranges): Likewise.
+	(dwarf2_add_field): Likewise.
+	(dwarf2_add_member_fn): Likewise.
+	(read_structure_type): Likewise.
+	(read_enumeration_type): Likewise.
+	(read_array_type): Likewise.
+	(read_array_order): Likewise.
+	(read_set_type): Likewise.
+	(read_common_block): Likewise.
+	(read_tag_reference_type): Likewise.
+	(read_tag_string_type): Likewise.
+	(read_subroutine_type): Likewise.
+	(read_base_type): Likewise.
+	(read_subrange_type): Likewise.
+	(new_symbol): Likewise.
+	(prepare_one_comp_unit): Likewise.
+
+2019-11-19  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat_target::attach): Include GetLastError
+	result in error when DebugActiveProcess fails.
+
+2019-11-18  Sergio Durigan Junior  <sergiodj@redhat.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	https://bugzilla.redhat.com/show_bug.cgi?id=1765117
+	* target.c (target_stack::push): Call 'unpush' if there's a
+	target on top of the stack.
+
+2019-11-18  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* python/py-block.c (blpy_dealloc): Call tp_free.
+	(blpy_block_syms_dealloc): Likewise.
+	* python/py-finishbreakpoint.c (bpfinishpy_dealloc): Likewise.
+	* python/py-inferior.c (infpy_dealloc): Likewise.
+	* python/py-lazy-string.c (stpy_dealloc): Likewise.
+	* python/py-linetable.c (ltpy_iterator_dealloc): Likewise.
+	* python/py-symbol.c (sympy_dealloc): Likewise.
+	* python/py-symtab.c (stpy_dealloc): Likewise.
+	* python/py-type.c (typy_iterator_dealloc): Likewise.
+
+2019-11-18  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.h (struct symbol) <owner>: Initialize explicitly in the
+	constructor instead of using a class initializer.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Replace {posix,mingw}-strerror.c with safe-strerror.c.
+	* configure: Regenerate.
+	* configure.ac: Don't source common.host.
+	* gdbsupport/common.host: Remove.
+	* gdbsupport/mingw-strerror.c: Remove.
+	* gdbsupport/posix-strerror.c: Rename to...
+	* gdbsupport/safe-strerror.c: ...this.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* maint.c (scoped_command_stats::print_time): Use localtime_r
+	instead of localtime (provided through gnulib if necessary).
+	* nat/linux-osdata.c (time_from_time_t): Use ctime_r instead
+	of ctime.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbsupport/common-defs.h: Include time.h before pathmax.h to
+	avoid compile errors.
+
+2019-11-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* gdbsupport/common.m4: No longer check for strerror_r.
+	* gdbsupport/posix-strerror.c (safe_strerror): Always call the
+	POSIX version of strerror_r, now that gnulib provides it if
+	necessary.
+
+2019-11-14  Christian Biesinger  <cbiesinger@google.com>
+
+	* README (`configure' options): Update.
+
+2019-11-14  Tom Tromey  <tromey@adacore.com>
+
+	* eval.c (evaluate_subexp_standard) <BINOP_ASSIGN>: Do not pass an
+	expected type for the RHS if the LHS is a convenience variable.
+
+2019-11-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* unittests/vec-utils-selftests.c (unordered_remove_tests::obj):
+	Provide explicit default and copy constructor.
+
+2019-11-14  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* python/py-finishbreakpoint.c (gdbpy_breakpoint_created):
+	only call Py_INCREF (newbp) in the bppy_pending_object case.
+
+2019-11-13  Tom Tromey  <tromey@adacore.com>
+
+	PR build/25182:
+	* psympriv.h (partial_symbol): Remove static assert.
+	* symtab.h (general_symbol_info, symbol): Remove static assert.
+
+2019-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbsupport/format.c (format_pieces::format_pieces): Support
+	printf 'z' size modifier.
+	* gdbsupport/format.h (enum argclass): Add size_t_arg.
+	* printcmd.c (ui_printf):  Handle size_t_arg.
+	* ui-out.c (ui_out::vmessage): Likewise.
+	* unittests/format_pieces-selftests.c (test_format_int_sizes): New
+	function.
+	(run_tests): Call test_format_int_sizes.
+
+2019-11-12  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-exp.y (write_ambiguous_var): Update.
+	* buildsym.c (add_symbol_to_list): Update.
+	* dwarf2read.c (read_variable): Update.
+	(new_symbol): Update.
+	* jit.c (finalize_symtab): Update.
+	* language.c (language_alloc_type_symbol): Update.
+	* symtab.c (fixup_symbol_section): Update.
+	(initialize_objfile_symbol_1): Move code to...
+	(initialize_objfile_symbol): ...here. Remove now-unnecessary memset.
+	(allocate_symbol): Update.
+	(allocate_template_symbol): Update.
+	(get_symbol_address): Update.
+	* symtab.h (struct symbol): Inherit from general_symbol_info instead
+	of having as a field, and add a constructor.
+	(SYMBOL_VALUE): Update.
+	(SYMBOL_VALUE_ADDRESS): Update.
+	(SET_SYMBOL_VALUE_ADDRESS): Update.
+	(SYMBOL_VALUE_BYTES): Update.
+	(SYMBOL_VALUE_COMMON_BLOCK): Update.
+	(SYMBOL_BLOCK_VALUE): Update.
+	(SYMBOL_VALUE_CHAIN): Update.
+	(SYMBOL_LANGUAGE): Update.
+	(SYMBOL_SECTION): Update.
+	(SYMBOL_OBJ_SECTION): Update.
+	(SYMBOL_SET_LANGUAGE): Update.
+	(SYMBOL_SET_LINKAGE_NAME): Update.
+	(SYMBOL_SET_NAMES): Update.
+	(SYMBOL_NATURAL_NAME): Update.
+	(SYMBOL_LINKAGE_NAME): Update.
+	(SYMBOL_DEMANGLED_NAME): Update.
+	(SYMBOL_SEARCH_NAME): Update.
+	(SYMBOL_MATCHES_SEARCH_NAME): Update.
+	(struct symbol): Update.
+	(struct template_symbol): Update.
+	(struct rust_vtable_symbol): Update.
+	* xcoffread.c (SYMBOL_DUP): Update.
+
+2019-11-12  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_layout): Set current_layout.
+	(show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Don't set current_layout.
+
+2019-11-12  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (_initialize_tui_layout): Move to end.
+
+2019-11-12  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (resize_message): New global.
+	(show_tui_resize_message): New function.
+	(tui_async_resize_screen): Print message if requested.
+	(_initialize_tui_win): Add tui-resize-message setting.
+	* NEWS: Add entry for new commands.
+
+2019-11-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_initialize_readline): Add new bindable readline
+	functions.
+
+2019-11-11  Christian Biesinger  <cbiesinger@google.com>
+
+	* nat/linux-osdata.c (user_from_uid): Use getpwuid_r.
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-symbol.c (gdbpy_lookup_static_symbols): New
+	function.
+	* python/python-internal.h (gdbpy_lookup_static_symbols):
+	Declare new function.
+	* python/python.c (python_GdbMethods): Add
+	gdb.lookup_static_symbols method.
+	* NEWS: Mention gdb.lookup_static_symbols.
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-symbol.c (gdbpy_lookup_static_symbol): Lookup in
+	static block of current object file first.  Also fix typo in
+	header comment.
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* stack.c (set_last_displayed_sal): Delete.
+	(last_displayed_sal_valid): Delete.
+	(last_displayed_pspace): Delete.
+	(last_displayed_addr): Delete.
+	(last_displayed_symtab): Delete.
+	(last_displayed_line): Delete.
+	(class last_displayed_symtab_info_type): New.
+	(last_displayed_symtab_info): New static global variable.
+	(print_frame_info): Call methods on last_displayed_symtab_info.
+	(clear_last_displayed_sal): Update header comment, and make use of
+	last_displayed_symtab_info.
+	(last_displayed_sal_is_valid): Likewise.
+	(get_last_displayed_pspace): Likewise.
+	(get_last_displayed_addr): Likewise.
+	(get_last_displayed_symtab): Likewise.
+	(get_last_displayed_line): Likewise.
+	(get_last_displayed_sal): Likewise.
+	* stack.h (clear_last_displayed_sal): Update header comment.
+	(last_displayed_sal_is_valid): Likewise.
+	(get_last_displayed_pspace): Likewise.
+	(get_last_displayed_addr): Likewise.
+	(get_last_displayed_symtab): Likewise.
+	(get_last_displayed_line): Likewise.
+	(get_last_displayed_sal): Likewise.
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* stack.c (frame_show_address): Convert return type to bool.
+	* stack.h (frame_show_address): Likewise, and update header
+	comment.
+
+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add new file to the list.
+	* unittests/vec-utils-selftests.c: New file.
+	* gdbsupport/gdb_vecs.h (unordered_remove): Avoid self move assign.
+
+2019-11-10  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_unhighlight_win): Use can_box.
+	(tui_highlight_win): Likewise.
+	(tui_win_info::check_and_display_highlight_if_needed): Likewise.
+	* tui/tui-data.h (struct tui_win_info) <can_highlight>: Remove.
+	* tui/tui-command.h (struct tui_cmd_window) <tui_cmd_window>:
+	Don't set can_highlight.
+
+2019-11-10  Tom Tromey  <tom@tromey.com>
+
+	* cli/cli-style.h (class cli_style_option) <cli_style_option>:
+	Remove unused declaration.
+
+2019-11-08  Tom Tromey  <tromey@adacore.com>
+
+	* top.c (read_command_file): Update.
+	(command_line_input): Make return type const.
+	* python/py-gdb-readline.c: Update.
+	* linespec.c (decode_line_2): Update.
+	* defs.h (command_line_input): Make return type const.
+	* cli/cli-script.c (read_next_line): Make return type const.
+	* ada-lang.c (get_selections): Update.
+
+2019-11-06  Christian Biesinger  <cbiesinger@google.com>
+
+	* linux-tdep.c (linux_info_proc): Use strtok_r instead of strtok.
+	* mi/mi-main.c (output_cores): Likewise.
+	* nat/linux-osdata.c (linux_xfer_osdata_cpus): Likewise.
+	(linux_xfer_osdata_modules): Likewise.
+	* remote.c (register_remote_support_xml): Likewise.
+	* sparc64-tdep.c (adi_is_addr_mapped): Likewise.
+	* xml-syscall.c (syscall_create_syscall_desc): Likewise.
+
+2019-11-06  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-interp.c: Don't include readline.h.
+	* tui/tui-hooks.c: Don't include readline.h.
+	* symmisc.c: Include tilde.h, not readline.h.
+	* symfile.c: Include tilde.h, not readline.h.
+	* source.c: Include tilde.h, not readline.h.
+	* solib.c: Include tilde.h, not readline.h.
+	* psymtab.c: Include tilde.h, not readline.h.
+	* exec.c: Include tilde.h, not readline.h.
+	* corelow.c: Include tilde.h, not readline.h.
+	* cli/cli-dump.c: Include tilde.h, not readline.h.
+	* cli/cli-cmds.c: Don't include readline.h.
+
+2019-11-05  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-disasm.c (struct tui_asm_line) <addr_size>: New member.
+	(tui_disassemble): Set addr_size.
+	(tui_disasm_window::set_contents): Use addr_size.
+
+2019-11-05  Tom Tromey  <tom@tromey.com>
+
+	* rust-lang.c (rust_language_defn): Update.
+	* python/py-value.c (valpy_string): Call c_get_string.
+	* p-lang.c (pascal_language_defn): Update.
+	* opencl-lang.c (opencl_language_defn): Update.
+	* objc-lang.c (objc_language_defn): Update.
+	* m2-lang.c (m2_language_defn): Update.
+	* language.c (unknown_language_defn, auto_language_defn): Update.
+	(default_get_string): Remove.
+	* guile/scm-value.c (gdbscm_value_to_string): Use c_get_string.
+	* go-lang.c (go_language_defn): Update.
+	* f-lang.c (f_language_defn): Update.
+	* d-lang.c (d_language_defn): Update.
+	* c-lang.c (c_language_defn, cplus_language_defn)
+	(asm_language_defn, minimal_language_defn): Update.
+	* ada-lang.c (ada_language_defn): Update.
+	* language.h (struct language_defn) <la_get_string>: Remove.
+	(LA_GET_STRING): Remove.
+	(default_get_string): Don't declare.
+
+2019-11-05  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.h (struct tui_source_window): Inline
+	constructor.  Remove destructor.
+	<style_changed, m_observable>: Move to superclass.
+	* tui/tui-winsource.h (tui_copy_source_line): Declare.
+	(struct tui_source_window_base): Move private members to end.
+	<style_changed, m_observable>: Move from tui_source_window.
+	* tui/tui-winsource.c (tui_copy_source_line): Move from
+	tui-source.c.  Rename from copy_source_line.  Add special handling
+	for negative line number.
+	(tui_source_window_base::style_changed): Move from
+	tui_source_window.
+	(tui_source_window_base): Register observer.
+	(~tui_source_window_base): New.
+	* tui/tui-source.c (copy_source_line): Move to tui-winsource.c;
+	rename.
+	(tui_source_window::set_contents): Use tui_copy_source_line.
+	(tui_source_window::tui_source_window): Move to tui-source.h.
+	(tui_source_window::~tui_source_window): Remove.
+	(tui_source_window::style_changed): Move to superclass.
+	* tui/tui-disasm.c (tui_disassemble): Create string file with
+	styling, when possible.  Add "addr_size" parameter.
+	(tui_disasm_window::set_contents): Use tui_copy_source_line.
+	Don't compute maximum size.
+	(len_without_escapes): New function
+
+2019-11-05  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_element) <line>: Now a
+	std::string.
+	* tui/tui-winsource.c (tui_show_source_line): Update.
+	* tui/tui-source.c (tui_source_window::set_contents): Update.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.
+
+2019-11-05  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.h (gdb_static_assert): Put && operator at the beginning
+	of the line instead of the end.
+
+2019-11-04  Christian Biesinger  <cbiesinger@google.com>
+
+	* psympriv.h: Add static_asserts for sizeof (general_symbol_info)
+	and sizeof (symbol).
+	* symtab.h: Add a static_assert for sizeof (partial_symbol).
+
+2019-11-04  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* NEWS (Changes since GDB 8.3): Document Solaris 10 removal.
+	* configure.host: Mark *-*-solaris2.10* obsolete.
+	* configure.tgt: Mark Solaris < 11 obsolete.
+	* MAINTAINERS (Target Instruction Set Architectures) <sparc>:
+	Update target triplet.
+
+2019-11-01  Tom Tromey  <tromey@adacore.com>
+
+	* utils.c (print_sys_errmsg): Simplify.
+
+2019-11-01  Tom Tromey  <tromey@adacore.com>
+
+	* gdbsupport/mingw-strerror.c (safe_strerror): Constify result.
+
+2019-11-01  Christian Biesinger  <cbiesinger@google.com>
+
+	* configure: Regenerate.
+	* configure.ac: Remove check for strerror_r.
+	* gdbsupport/common.m4: Check for strerror_r.
+
+2019-11-01  Luis Machado  <luis.machado@linaro.org>
+
+	PR gdb/25124
+
+	* arm-tdep.c (arm_per_objfile): Rename to ...
+	(arm_per_bfd): ... this.
+	(arm_objfile_data_key): Rename to ...
+	(arm_bfd_data_key): ... this.
+	(arm_find_mapping_symbol): Adjust access to new bfd_key-based
+	data.
+	(arm_record_special_symbol): Likewise.
+
+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-typeprint.c (ada_print_typedef): Don't print newline at the
+	end.
+	* c-typeprint.c (c_print_typedef): Likewise.
+	* f-typeprint.c (f_print_typedef): Likewise.
+	* m2-typeprint.c (m2_print_typedef): Likewise.
+	* p-typeprint.c (pascal_print_typedef): Likewise.
+	* rust-lang.c (rust_print_typedef): Likewise.
+	* symtab.c (print_symbol_info): Print a newline after calling
+	typedef_print.
+
+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* symtab.c (info_module_cmdlist): New variable.
+	(info_module_command): New function.
+	(search_module_symbols): New function.
+	(info_module_subcommand): New function.
+	(struct info_modules_var_func_options): New struct.
+	(info_modules_var_func_options_defs): New variable.
+	(make_info_modules_var_func_options_def_group): New function.
+	(info_module_functions_command): New function.
+	(info_module_variables_command): New function.
+	(info_module_var_func_command_completer): New function.
+	(_initialize_symtab): Register new 'info module functions' and
+	'info module variables' commands.
+	* symtab.h (typedef symbol_search_in_module): New typedef.
+	(search_module_symbols): Declare new function.
+	* NEWS: Mention new commands.
+
+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (dw2_symtab_iter_next): Handle MODULE_DOMAIN.
+	(dw2_expand_marked_cus): Handle MODULES_DOMAIN.
+	(dw2_debug_names_iterator::next): Handle MODULE_DOMAIN and
+	MODULES_DOMAIN.
+	(scan_partial_symbols): Only create partial module symbols for non
+	declarations.
+	* psymtab.c (recursively_search_psymtabs): Handle MODULE_DOMAIN
+	and MODULES_DOMAIN.
+	* symtab.c (search_domain_name): Likewise.
+	(search_symbols): Likewise.
+	(print_symbol_info): Likewise.
+	(symtab_symbol_info): Likewise.
+	(info_modules_command): New function.
+	(_initialize_symtab): Register 'info modules' command.
+	* symtab.h (enum search_domain): Add MODULES_DOMAIN.
+	* NEWS: Mention new 'info modules' command.
+
+2019-10-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention $_gdb_setting, $_gdb_setting_str, $_gdb_maint_setting
+	and $_gdb_maint_setting_str.
+
+2019-10-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-cmds.c (setting_cmd, value_from_setting)
+	(gdb_setting_internal_fn, gdb_maint_setting_internal_fn)
+	(str_value_from_setting, gdb_setting_str_internal_fn)
+	(gdb_maint_setting_str_internal_fn): New functions.
+	(_initialize_cli_cmds): Define the new convenience functions.
+	* cli/cli-setshow.h (get_setshow_command_value_string): Constify.
+	* cli/cli-setshow.c (get_setshow_command_value_string): Constify.
+
+2019-10-31  Christian Biesinger  <cbiesinger@google.com>
+
+	* agent.c (set_can_use_agent): When the setting is turned on,
+	look up agent symbols if we don't have them yet.
+	(agent_new_objfile): Don't look up agent symbols when the agent
+	setting is off.
+
+2019-10-31  Christian Biesinger  <cbiesinger@google.com>
+
+	* config.in: Regenerate.
+
+2019-10-31  Christian Biesinger  <cbiesinger@google.com>
+
+	* configure: Regenerate.
+	* configure.ac: Check for strerror_r.
+	* gdbsupport/common-utils.h (safe_strerror): Change return value
+	to const char * and document that this function is now threadsafe.
+	* gdbsupport/posix-strerror.c (safe_strerror): Make buf
+	thread_local and call strerror_r, if available.
+	* utils.c (perror_string): Update.
+	(print_sys_errmsg): Update.
+
+2019-10-31  Luis Machado  <luis.machado@linaro.org>
+
+	* arm-tdep.c (arm_exidx_data_key): Use bfd_key instead of
+	objfile_key.
+	(arm_exidx_new_objfile): Adjust to use objfile->obfd instead of
+	objfile to fetch per-bfd data.
+	(arm_find_exidx_entry): Likewise.
+
+2019-10-31  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbsupport/agent.c (debug_agent): Change type to bool.
+	(use_agent): Likewise.
+	(all_agent_symbols_look_up): Likewise.
+	(agent_loaded_p): Change return value to bool.
+	(agent_look_up_symbols): Update.
+	(agent_capability_check): Change return value to bool.
+	* gdbsupport/agent.h (agent_loaded_p): Likewise.
+	(debug_agent): Change type to bool.
+	(use_agent): Likewise.
+	(agent_capability_check): Change return value to bool.
+
+2019-10-30  Christian Biesinger  <cbiesinger@google.com>
+
+	* minsyms.c (clear_minimal_symbol_hash_tables): New function.
+	(build_minimal_symbol_hash_tables): Code to clear the table moved
+	to clear_minimal_symbol_hash_tables.
+	(minimal_symbol_reader::install): Call clear_minimal_symbol_hash_tables
+	when needed.
+
+2019-10-29  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infcmd.c: Remove includes.
+	* infrun.c: Remove includes.
+
+2019-10-29  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* ada-lang.h (GROW_VECT): Move to ada-lang.c.
+	(grow_vect): Remove declaration.
+	(ada_type_of_array): Remove declaration.
+	(ada_update_initial_language): Remove declaration.
+	(ada_fold_name): Remove declaration.
+	(ada_fill_in_ada_prototype): Remove declaration.
+	(user_select_syms): Remove declaration.
+	(get_selections): Remove declaration.
+	(ada_tag_type): Remove declaration.
+	(ada_value_tag): Remove declaration.
+	(ada_is_others_clause): Remove declaration.
+	(ada_in_variant): Remove declaration.
+	(ada_value_struct_elt): Remove declaration.
+	(ada_attribute_name): Remove declaration.
+	(ada_system_address_type): Remove declaration.
+	* ada-lang.c (ada_watch_location_expression): Make static.
+	(GROW_VECT): Move here from ada-lang.h.
+	(grow_vect): Make static.
+	(ada_update_initial_language): Make static.
+	(ada_fold_name): Make static.
+	(ada_type_of_array): Make static.
+	(encoded_ordered_before): Move up.
+	(sort_choices): Move up.
+	(print_signatures): Move up.
+	(ada_print_symbol_signature): Move up.
+	(get_selections): Move up and make static.
+	(user_select_syms): Move up and make static.
+	(ada_value_struct_elt): Move up and make static.
+	(ada_tag_type): Make static.
+	(ada_value_tag): Make static.
+	(ada_is_others_clause): Make static.
+	(ada_in_variant): Make static.
+	(ada_attribute_name): Make static.
+
+2019-10-29  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* ada-lang.c: Remove includes.
+	* ada-typeprint.c: Remove includes.
+	* ada-valprint.c: Remove includes.
+
+2019-10-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* addrmap.c: Add static assertions of type size, moved from
+	_initialize_addrmap.
+	(_initialize_addrmap): Remove.
+
+2019-10-29  Christian Biesinger  <cbiesinger@google.com>
+
+	* coffread.c (record_minimal_symbol): Update.
+	(process_coff_symbol): Update.
+	* dbxread.c (read_dbx_symtab): Update.
+	* dwarf2read.c (add_partial_symbol): Update.
+	(fixup_go_packaging): Update.
+	(load_partial_dies): Update.
+	(new_symbol): Update.
+	* elfread.c (record_minimal_symbol): Change signature to use
+	gdb::string_view instead of name+len.
+	(elf_symtab_read): Update.
+	(elf_rel_plt_read): Update.
+	* mdebugread.c (parse_partial_symbols): Update.
+	(handle_psymbol_enumerators): Update.
+	(new_symbol): Update.
+	* minsyms.c (minimal_symbol_reader::record_full): Change signature
+	to use gdb::string_view instead of name+len.
+	* minsyms.h (class minimal_symbol_reader) <record_full>: Likewise.
+	* psympriv.h (add_psymbol_to_list): Likewise.
+	* psymtab.c (add_psymbol_to_bcache): Likewise.
+	(add_psymbol_to_list): Likewise.
+	* stabsread.c (define_symbol): Update.
+	* symtab.c (symbol_set_names): Change signature to use gdb::string_view.
+	* symtab.h (SYMBOL_SET_NAMES): Likewise.
+	(symbol_set_names): Likewise.
+	* xcoffread.c (scan_xcoff_symtab): Update.
+
+2019-10-29  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.h (symbol_set_names): Document that copy_name must be
+	set to true for non-nullterminated strings.
+	* symtab.c (symbol_set_names): Only make a nullterminated copy of
+	linkage_name if the entry was not found and we need to demangle.
+
+2019-10-29  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in (HFILES_NO_SRCDIR): Add gdb_binary_search.h.
+	* dwarf2-frame.c (bsearch_fde_cmp): Update.
+	(dwarf2_frame_find_fde): Replace bsearch with gdb::binary_search.
+	* gdbsupport/gdb_binary_search.h: New file.
+
+2019-10-29  Christian Biesinger  <cbiesinger@google.com>
+
+	* NEWS: Mention new --with-system-gdbinit-dir option.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* configure.ac: Add new option --with-system-gdbinit-dir.
+	* extension.c (get_ext_lang_of_file): Return extension_language_gdb
+	for a ".gdb" suffix.
+	* main.c (get_init_files): Change system_gdbinit argument to
+	a vector and return the files in SYSTEM_GDBINIT_DIR in
+	addition to SYSTEM_GDBINIT.
+	(captured_main_1): Update.
+	(print_gdb_help): Update.
+	* top.c (print_gdb_configuration): Also print the value of
+	SYSTEM_GDBINIT_DIR.
+
+2019-10-28  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbsupport/common-utils.h (startswith): Add an overloaded version
+	that takes gdb::string_view arguments.
+
+2019-10-26  Tom de Vries  <tdevries@suse.de>
+
+	* aarch64-linux-tdep.c: Fix typos in comments.
+	* aarch64-tdep.c: Same.
+	* ada-lang.c: Same.
+	* amd64-nat.c: Same.
+	* arc-tdep.c: Same.
+	* arch/aarch64-insn.c: Same.
+	* block.c: Same.
+	* breakpoint.h: Same.
+	* btrace.h: Same.
+	* c-varobj.c: Same.
+	* cli/cli-decode.c: Same.
+	* cli/cli-script.c: Same.
+	* cli/cli-utils.h: Same.
+	* coff-pe-read.c: Same.
+	* coffread.c: Same.
+	* compile/compile-cplus-symbols.c: Same.
+	* compile/compile-object-run.c: Same.
+	* completer.c: Same.
+	* corelow.c: Same.
+	* cp-support.c: Same.
+	* demangle.c: Same.
+	* dwarf-index-write.c: Same.
+	* dwarf2-frame.c: Same.
+	* dwarf2-frame.h: Same.
+	* eval.c: Same.
+	* frame-base.h: Same.
+	* frame.h: Same.
+	* gdbcmd.h: Same.
+	* gdbtypes.h: Same.
+	* gnu-nat.c: Same.
+	* guile/scm-objfile.c: Same.
+	* i386-tdep.c: Same.
+	* i386-tdep.h: Same.
+	* infcall.c: Same.
+	* infcall.h: Same.
+	* linux-nat.c: Same.
+	* m68k-tdep.c: Same.
+	* macroexp.c: Same.
+	* memattr.c: Same.
+	* mi/mi-cmd-disas.c: Same.
+	* mi/mi-getopt.h: Same.
+	* mi/mi-main.c: Same.
+	* minsyms.c: Same.
+	* nat/aarch64-sve-linux-sigcontext.h: Same.
+	* objfiles.h: Same.
+	* ppc-linux-nat.c: Same.
+	* ppc-linux-tdep.c: Same.
+	* ppc-tdep.h: Same.
+	* progspace.h: Same.
+	* prologue-value.h: Same.
+	* python/py-evtregistry.c: Same.
+	* python/py-instruction.h: Same.
+	* record-btrace.c: Same.
+	* record-full.c: Same.
+	* remote.c: Same.
+	* rs6000-tdep.c: Same.
+	* ser-tcp.c: Same.
+	* sol-thread.c: Same.
+	* sparc-sol2-tdep.c: Same.
+	* sparc64-tdep.c: Same.
+	* stabsread.c: Same.
+	* symfile.c: Same.
+	* symtab.h: Same.
+	* target.c: Same.
+	* tracepoint.c: Same.
+	* tui/tui-data.h: Same.
+	* tui/tui-io.c: Same.
+	* tui/tui-win.c: Same.
+	* tui/tui.c: Same.
+	* unittests/rsp-low-selftests.c: Same.
+	* user-regs.h: Same.
+	* utils.c: Same.
+	* utils.h: Same.
+	* valarith.c: Same.
+	* valops.c: Same.
+	* valprint.c: Same.
+	* valprint.h: Same.
+	* value.c: Same.
+	* value.h: Same.
+	* varobj.c: Same.
+	* x86-nat.h: Same.
+	* xtensa-tdep.c: Same.
+
+2019-10-25  Ali Tamur <tamur@google.com>
+
+	* charset.c (find_charset_names): Reflect API change.
+
+2019-10-25  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (struct demangled_name_entry): Change demangled name
+	to a unique_xmalloc_ptr<char>, now that we don't allocate it as
+	part of the struct anymore.
+	(symbol_set_names): No longer obstack allocate + copy the demangled
+	name, just store the allocated name from bfd.
+
+2019-10-25  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2-frame.c (dwarf2_cie_table): Now a typedef.
+	(bsearch_cie_cmp, add_cie): Remove.
+	(find_cie): Reimplement.
+	(decode_frame_entry_1, decode_frame_entry): Change type.  Update.
+	(dwarf2_build_frame_info): Update.
+
+2019-10-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gdb/25126
+	* symfile.c (reread_symbols): Call forget_cached_source_info to
+	clear the stale source cache.
+
+2019-10-24  Christian Biesinger  <cbiesinger@google.com>
+
+	* configure: Regenerate.
+	* configure.ac: Remove code that sets python_has_threads.
+
+2019-10-24  Christian Biesinger  <cbiesinger@google.com>
+
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* configure.ac: Remove the code that uses sed to get the python
+	version and defines HAVE_LIBPYTHON2_6 / HAVE_LIBPYTHON2_7.
+
+2019-10-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-progspace.c (pspy_block_for_pc): Return None for all
+	error paths.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	* arc-tdep.c: Remove ".." from include.
+	* frv-tdep.c: Remove ".." from include.
+	* lm32-tdep.c: Remove ".." from include.
+	* microblaze-tdep.c: Remove ".." from include.
+	* or1k-tdep.h: Remove ".." from include.
+	* s12z-tdep.c: Remove ".." from include.
+	* Makefile.in (OPCODES_CFLAGS): Add comment.
+	(TOP_CFLAGS): New variable.
+	(INTERNAL_CFLAGS_BASE): Add TOP_CFLAGS.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	* Makefile.in (READLINE_DIR): Update.
+
+2019-10-23  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infcall.c (call_function_by_hand_dummy): Fix the function
+	comment.  And extract out a code section into...
+	(reserve_stack_space): ...this new function.
+
+2019-10-23  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infcall.c (value_arg_coerce): Remove an unused parameter.
+	(call_function_by_hand_dummy): Update the call to
+	'value_arg_coerce'.
+
+2019-10-23  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infcall.c (call_function_by_hand_dummy): Refactor.
+
+2019-10-23  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* MAINTAINERS (Write After Approval): Add Tankut Baris Aktemur.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* configure.ac: Don't check for sigprocmask.
+	* gdbsupport/common.m4 (GDB_AC_COMMON): Check for sigprocmask.
+
+2019-10-23  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* acinclude.m4: Use m4_include, not sinclude.
+
+2019-10-23  Tom de Vries  <tdevries@suse.de>
+
+	PR breakpoints/24687
+	* symtab.c (iterate_over_some_symtabs): Apply gdb_realpath on fullname.
+
+2019-10-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (struct demangled_name_entry) <language>: Change from
+	bitfield to regular variable.
+
+2019-10-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (struct demangled_name_entry): Add a constructor.
+	(free_demangled_name_entry): New function to call the destructor
+	for demangled_name_entry.
+	(create_demangled_names_hash): Pass free_demangled_name_entry to
+	htab_create_alloc.
+	(symbol_set_names): Call placement new for demangled_name_entry.
+	* utils.c: No longer include xxhash.h here, now that fast_hash
+	is inlined in the header.
+	* utils.h: Instead, include it here.
+
+2019-10-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Link with libxxhash.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* configure.ac: Search for libxxhash.
+	* utils.c (fast_hash): Use xxhash if present.
+
+2019-10-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* utils.h (fast_hash): New function.
+	* symtab.c (hash_demangled_name_entry): Call new function
+	fast_hash.
+
+2019-10-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (struct demangled_name_entry): Change type of mangled
+	to gdb::string_view. Also adds a constructor that takes the
+	mangled name.
+	(hash_demangled_name_entry): Update.
+	(eq_demangled_name_entry): Update.
+	(free_demangled_name_entry): New function to call the destructor
+	now that this is not a POD anymore.
+	(create_demangled_names_hash): Pass free_demangled_name_entry to
+	htab_create_alloc.
+	(symbol_set_names): Update.
+
+2019-10-21  Ali Tamur  <tamu@google.com>
+
+	* dwarf2read.c (dir_index): Change type.
+	(file_name_index): Likewise.
+	(line_header::include_dir_at): Change comment and implementation on
+	whether it is DWARF 5.
+	(line_header::is_valid_file_index): New function.
+	(line_header::file_name_at): Change comment and implementation on
+	whether it is DWARF 5.
+	(line_header::file_names): Change to private field renamed as
+	m_file_names and introduce a new accessor method.
+	(line_header::file_names_size): New method.
+	(line_header::include_dirs): Change to private field and rename as
+	m_include_dirs.
+	(dw2_get_file_names_reader): Define local var at a smaller scope and
+	reflect API change.
+	(dwarf2_cu::setup_type_unit_groups): Reflect API change.
+	(process_structure_scope): Likewise.
+	(line_header::add_include_dir): Change message and reflect renaming.
+	(line_header::add_file_name): Likewise.
+	(read_formatted_entries): Handle DW_FORM_data16.
+	(dwarf_decode_line_header): Fix line header length calculation.
+	(psymtab_include_file_name): Change comment and API.
+	(lnp_state_machine::m_file): Update comment and reflect type change.
+	(lnp_state_machine::record_line): Reflect type change.
+	(dwarf_decode_lines): Reflect API change.
+	(file_file_name): Likewise.
+	(file_full_name): Likewise.
+
+2019-10-21  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* objfiles.c (sort_cmp): Ensure that !(a < a) holds true.
+
+2019-10-21  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_exec_info_content): Remove typedef.
+
+2019-10-21  Tom Tromey  <tom@tromey.com>
+
+	* configure.ac (nm.h): Conditionally create nm.h link.  Subst
+	NM_H.   Use AC_CONFIG_LINKS.
+	* configure: Rebuild.
+	* Makefile.in (NM_H): New variable.
+	(generated_files): Add NM_H.  Remove gcore.
+	(nm.h, stamp-nmh): New targets.
+
+2019-10-20  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (unlink_objfile, put_objfile_before): Don't declare.
+	* objfiles.c (unlink_objfile): Move earlier.  Now static.  Remove
+	obsolete comment.
+	(put_objfile_before): Now static.
+
+2019-10-19  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbsupport/common-utils.h (startswith): Change return type to
+	bool.
+
+2019-10-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* bcache.c (bcache::print_statistics): Use std::sort instead of qsort.
+	* breakpoint.c (bp_locations_compare): Rename to...
+	(bp_location_is_less_than): ...this, and change to std::sort semantics.
+	(update_global_location_list): Use std::sort instead of qsort.
+	* buildsym.c (compare_line_numbers): Rename to...
+	(lte_is_less_than): ...this, and change to std::sort semantics.
+	(buildsym_compunit::end_symtab_with_blockvector): Use std::sort
+	instead of qsort.
+	* disasm.c (compare_lines): Rename to...
+	(line_is_less_than): ...this, and change to std::sort semantics.
+	(do_mixed_source_and_assembly_deprecated): Call std::sort instead
+	of qsort.
+	* dwarf2-frame.c (qsort_fde_cmp): Rename to...
+	(fde_is_less_than): ...this, and change to std::sort semantics.
+	(dwarf2_build_frame_info): Call std::sort instead of qsort.
+	* mdebugread.c (compare_blocks):
+	(block_is_less_than): ...this, and change to std::sort semantics.
+	(sort_blocks): Call std::sort instead of qsort.
+	* objfiles.c (qsort_cmp): Rename to...
+	(sort_cmp): ...this, and change to std::sort semantics.
+	(update_section_map): Call std::sort instead of qsort.
+	* remote.c (compare_pnums): Remove.
+	(map_regcache_remote_table): Call std::sort instead of qsort.
+	* utils.c (compare_positive_ints): Remove.
+	* utils.h (compare_positive_ints): Remove.
+	* xcoffread.c (compare_lte): Remove.
+	(arrange_linetable): Call std::sort instead of qsort.
+
+2019-10-19  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* symfile.c (init_entry_point_info): Fix typo.
+	* i386-darwin-tdep.c (darwin_dwarf_signal_frame_p): Fix typo.
+
+2019-10-18  Tom de Vries  <tdevries@suse.de>
+
+	* aarch64-tdep.c: Fix typos in comments.
+	* ada-lang.c: Same.
+	* ada-tasks.c: Same.
+	* alpha-tdep.c: Same.
+	* alpha-tdep.h: Same.
+	* amd64-nat.c: Same.
+	* amd64-windows-tdep.c: Same.
+	* arc-tdep.c: Same.
+	* arc-tdep.h: Same.
+	* arch-utils.c: Same.
+	* arm-nbsd-tdep.c: Same.
+	* arm-tdep.c: Same.
+	* ax-gdb.c: Same.
+	* blockframe.c: Same.
+	* btrace.c: Same.
+	* c-varobj.c: Same.
+	* coff-pe-read.c: Same.
+	* coffread.c: Same.
+	* cris-tdep.c: Same.
+	* darwin-nat.c: Same.
+	* dbxread.c: Same.
+	* dcache.c: Same.
+	* disasm.c: Same.
+	* dtrace-probe.c: Same.
+	* dwarf-index-write.c: Same.
+	* dwarf2-frame-tailcall.c: Same.
+	* dwarf2-frame.c: Same.
+	* dwarf2read.c: Same.
+	* eval.c: Same.
+	* exceptions.c: Same.
+	* fbsd-tdep.c: Same.
+	* findvar.c: Same.
+	* frame.c: Same.
+	* frv-tdep.c: Same.
+	* gnu-v3-abi.c: Same.
+	* go32-nat.c: Same.
+	* h8300-tdep.c: Same.
+	* hppa-tdep.c: Same.
+	* i386-linux-tdep.c: Same.
+	* i386-tdep.c: Same.
+	* ia64-libunwind-tdep.c: Same.
+	* ia64-tdep.c: Same.
+	* infcmd.c: Same.
+	* infrun.c: Same.
+	* linespec.c: Same.
+	* linux-nat.c: Same.
+	* linux-thread-db.c: Same.
+	* machoread.c: Same.
+	* mdebugread.c: Same.
+	* mep-tdep.c: Same.
+	* mn10300-tdep.c: Same.
+	* namespace.c: Same.
+	* objfiles.c: Same.
+	* opencl-lang.c: Same.
+	* or1k-tdep.c: Same.
+	* osabi.c: Same.
+	* ppc-linux-nat.c: Same.
+	* ppc-linux-tdep.c: Same.
+	* ppc-sysv-tdep.c: Same.
+	* printcmd.c: Same.
+	* procfs.c: Same.
+	* record-btrace.c: Same.
+	* record-full.c: Same.
+	* remote-fileio.c: Same.
+	* remote.c: Same.
+	* rs6000-tdep.c: Same.
+	* s12z-tdep.c: Same.
+	* score-tdep.c: Same.
+	* ser-base.c: Same.
+	* ser-go32.c: Same.
+	* skip.c: Same.
+	* sol-thread.c: Same.
+	* solib-svr4.c: Same.
+	* solib.c: Same.
+	* source.c: Same.
+	* sparc-nat.c: Same.
+	* sparc-sol2-tdep.c: Same.
+	* sparc-tdep.c: Same.
+	* sparc64-tdep.c: Same.
+	* stabsread.c: Same.
+	* stack.c: Same.
+	* symfile.c: Same.
+	* symtab.c: Same.
+	* target-descriptions.c: Same.
+	* target-float.c: Same.
+	* thread.c: Same.
+	* utils.c: Same.
+	* valops.c: Same.
+	* valprint.c: Same.
+	* value.c: Same.
+	* varobj.c: Same.
+	* windows-nat.c: Same.
+	* xcoffread.c: Same.
+	* xstormy16-tdep.c: Same.
+	* xtensa-tdep.c: Same.
+
+2019-10-17  Tom Tromey  <tromey@adacore.com>
+
+	* configure: Rebuild.
+	* configure.ac: Use AC_CONFIG_HEADERS.  Create stamp-h there, not
+	in AC_CONFIG_FILES invocation.
+	* Makefile.in (Makefile, data-directory/Makefile, stamp-h): Use
+	new-style config.status invocation.
+
+2019-10-17  Tom de Vries  <tdevries@suse.de>
+
+	* arm-nbsd-nat.c: Fix typos in comments.
+	* arm-tdep.c: Same.
+	* darwin-nat-info.c: Same.
+	* dwarf2read.c: Same.
+	* elfread.c: Same.
+	* event-top.c: Same.
+	* findvar.c: Same.
+	* gdbtypes.c: Same.
+	* hppa-tdep.c: Same.
+	* i386-tdep.c: Same.
+	* jit.c: Same.
+	* main.c: Same.
+	* mdebugread.c: Same.
+	* moxie-tdep.c: Same.
+	* nto-procfs.c: Same.
+	* osabi.c: Same.
+	* ppc-linux-tdep.c: Same.
+	* remote.c: Same.
+	* riscv-tdep.c: Same.
+	* s390-tdep.c: Same.
+	* sh-tdep.c: Same.
+	* sparc-linux-tdep.c: Same.
+	* sparc-nat.c: Same.
+	* stack.c: Same.
+	* target-descriptions.c: Same.
+	* top.c: Same.
+	* varobj.c: Same.
+
+2019-10-16  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (struct objfile) <original_name>: Now const.
+
+2019-10-16  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbsupport/gdb_setjmp.h (SIGSETJMP): Allow passing in the value to
+	pass on to sigsetjmp's second argument.
+	* cp-support.c (gdb_demangle): Unblock SIGSEGV if we caught a crash.
+
+2019-10-16  Keith Seitz  <keiths@redhat.com>
+
+	PR gdb/23567
+	* dwarf2read.c (dwarf2_per_objfile::locate_sections): Discard
+	sections whose size is greater than the file size.
+
+2019-10-16  Jim Wilson  <jimw@sifive.com>
+
+	* riscv-tdep.c (riscv_gcc_target_options): New.
+	(riscv_gnu_triplet_regexp): New.
+	(riscv_gdbarch_init): Call set_gdbarch_gcc_triplet_options and
+	set_gdbarch_gnu_triplet_regexp.
+
+2019-10-16  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in: Add xml-builtin.h.
+	* features/feature_to_c.sh: Add an include for xml-builtin.h
+	to ensure that the compiler checks that the types match.
+	* xml-builtin.h: New file.
+	* xml-support.c (fetch_xml_builtin): Add missing const.
+	* xml-support.h: Remove declaration of xml_builtins.
+
+2019-10-16  Tom de Vries  <tdevries@suse.de>
+
+	PR tdep/25096
+	* amd64-tdep.c (amd64_classify_aggregate_field): Factor out of ...
+	(amd64_classify_aggregate): ... here.
+	(amd64_classify_aggregate_field): Handled fiels of nested structs
+	recursively.
+
+2019-10-16  Tom de Vries  <tdevries@suse.de>
+
+	PR tdep/24104
+	* amd64-tdep.c (amd64_push_arguments): Handle AMD64_NO_CLASS in loop
+	that handles 'theclass'.
+
+2019-10-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linespec.c (decode_digits_ordinary): Update comment.
+	* make-target-delegates: No longer need to handle VEC case.
+	* memrange.c (normalize_mem_ranges): Update comment.
+	* namespace.c (add_using_directive): Update comment.
+	* objc-lang.c (uniquify_strings): Update comment.
+	* ppc-linux-nat.c (struct thread_points): Update comment.
+	* probe.h (find_probes_in_objfile): Update comment.
+	* target.h (enum flash_preserve_mode): Update comment.
+	* varobj.c (varobj_restrict_range): Update comment.
+	* varobj.h (varobj_list_children): Update comment.
+
+2019-10-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in: Remove references to vec.h and vec.c.
+	* aarch64-tdep.c: No longer include vec.h.
+	* ada-lang.c: Likewise.
+	* ada-lang.h: Likewise.
+	* arm-tdep.c: Likewise.
+	* ax.h: Likewise.
+	* breakpoint.h: Likewise.
+	* charset.c: Likewise.
+	* cp-support.h: Likewise.
+	* dtrace-probe.c: Likewise.
+	* dwarf2read.c: Likewise.
+	* extension.h: Likewise.
+	* gdb_bfd.c: Likewise.
+	* gdbsupport/gdb_vecs.h: Likewise.
+	* gdbsupport/vec.c: Remove.
+	* gdbsupport/vec.h: Remove.
+	* gdbthread.h: Likewise.
+	* guile/scm-type.c: Likewise.
+	* inline-frame.c: Likewise.
+	* machoread.c: Likewise.
+	* memattr.c: Likewise.
+	* memrange.h: Likewise.
+	* namespace.h: Likewise.
+	* nat/linux-btrace.h: Likewise.
+	* osdata.c: Likewise.
+	* parser-defs.h: Likewise.
+	* progspace.h: Likewise.
+	* python/py-type.c: Likewise.
+	* record-btrace.c: Likewise.
+	* rust-exp.y: Likewise.
+	* solib-target.c: Likewise.
+	* stap-probe.c: Likewise.
+	* target-descriptions.c: Likewise.
+	* target-memory.c: Likewise.
+	* target.h: Likewise.
+	* varobj.c: Likewise.
+	* varobj.h: Likewise.
+	* xml-support.h: Likewise.
+
+2019-10-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (dwarf2_per_objfile::~dwarf2_per_objfile):
+	Update for new std::vector based implementation.
+	(process_psymtab_comp_unit_reader): Likewise.
+	(scan_partial_symbols): Likewise.
+	(recursively_compute_inclusions): Likewise.
+	(compute_compunit_symtab_includes): Likewise.
+	(process_imported_unit_die): Likewise.
+	(queue_and_load_dwo_tu): Likewise.
+	(follow_die_sig_1): Likewise.
+	* dwarf2read.h: Remove DEF_VEC_P.
+	(typedef dwarf2_per_cu_ptr): Remove.
+	(struct dwarf2_per_cu_data) <imported_symtabs_empty>: New
+	function.
+	(struct dwarf2_per_cu_data) <imported_symtabs_push>: New function.
+	(struct dwarf2_per_cu_data) <imported_symtabs_size>: New function.
+	(struct dwarf2_per_cu_data) <imported_symtabs_free>: New function.
+	(struct dwarf2_per_cu_data) <imported_symtabs>: Change to
+	std::vector.
+
+2019-10-15  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat_target::resume): Use %x when logging
+	TID.
+
+2019-10-15  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat_target::fetch_registers)
+	(windows_nat_target::store_registers): Rename "pid" to "tid".
+
+2019-10-15  Tom Tromey  <tromey@adacore.com>
+
+	* gdbarch.h, gdbarch.c: Rebuild.
+	* gdbarch.sh (gcc_target_options): Change return type to
+	std::string.
+	* compile/compile.c (get_args): Update.
+	* nios2-tdep.c (nios2_gcc_target_options): Return std::string.
+	* arm-linux-tdep.c (arm_linux_gcc_target_options): Return
+	std::string.
+	* aarch64-linux-tdep.c (aarch64_linux_gcc_target_options): Return
+	std::string.
+	* arch-utils.c (default_gcc_target_options): Return std::string.
+	* arch-utils.h (default_gcc_target_options): Return std::string.
+	* s390-tdep.c (s390_gcc_target_options): Return std::string.
+
+2019-10-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* breakpoint.c (breakpoint_chain): Make static.
+	* tui/tui-winsource.c: Call iterate_over_breakpoints instead
+	of accessing breakpoint_chain.
+
+2019-10-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* breakpoint.c (iterate_over_breakpoints): Change function pointer
+	to a gdb::function_view and return value to bool.
+	* breakpoint.h (iterate_over_breakpoints): Likewise.
+	* dummy-frame.c (pop_dummy_frame_bpt): Update.
+	(pop_dummy_frame): Update.
+	* guile/scm-breakpoint.c (bpscm_build_bp_list): Update.
+	(gdbscm_breakpoints): Update.
+	* python/py-breakpoint.c (build_bp_list): Update.
+	(gdbpy_breakpoints): Update.
+	* python/py-finishbreakpoint.c (bpfinishpy_detect_out_scope_cb):
+	Update.
+	(bpfinishpy_handle_stop): Update.
+	(bpfinishpy_handle_exit): Update.
+	* solib-svr4.c (svr4_update_solib_event_breakpoint): Update.
+	(svr4_update_solib_event_breakpoints): Update.
+
+2019-10-15  Andreas Arnez  <arnez@linux.ibm.com>
+
+	* s390-tdep.c (s390_effective_inner_type): Ignore static fields
+	when unwrapping single-field structs.
+
+2019-10-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2read.c: Remove includes.
+
+2019-10-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* ui-out.c (ui_out::call_do_message): Silence
+	-Wformat-nonliteral warning.
+
+2019-10-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* breakpoint.c: Remove some includes: continuations.h, skip.h,
+	mi/mi-main.h, readline/readline.h, readline/history.h.  Add
+	include: readline/tilde.h.
+
+2019-10-12  Christian Biesinger  <cbiesinger@google.com>
+
+	* remote.c (remote_target::get_trace_status): Remove declaration of
+	trace_regblock_size.
+
+2019-10-12  Christian Biesinger  <cbiesinger@google.com>
+
+	* cli/cli-cmds.c (max_user_call_depth): Move comment to header.
+	(show_user): Remove declaration of cmdlist.
+	* cli/cli-cmds.h (max_user_call_depth): Declare.
+	* cli/cli-script.c (execute_user_command): Remove declaration
+	of max_user_call_depth.
+
+2019-10-11  Jim Wilson  <jimw@sifive.com>
+
+	* gdbsupport/print-utils.h (pulongest): Fix comment.
+	(plongest): Likewise.
+	(phex): Add missing comment, mention leading zeros.
+	(phex_nz): Add mention of no leading zeros to comment.
+
+	* riscv-tdep.c (riscv_push_dummy_code): Change %lld to %s and use
+	plongest instead of unsigned long long cast.
+
+2019-10-10  Christian Biesinger  <cbiesinger@google.com>
+
+	* main.c (captured_main_1): Include gdbtk.h and remove declarations
+	for external_editor_command and gdbtk_test.
+
+2019-10-10  Christian Biesinger  <cbiesinger@google.com>
+
+	* mi/mi-cmd-var.c (varobjdebug): Remove declaration.
+	* varobj.c (varobjdebug): Move comment to...
+	* varobj.h (varobjdebug): ...here, and declare.
+
+2019-10-09  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::show_registers): Don't call
+	erase_data_content.
+
+2019-10-09  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_delete_win): Don't declare.
+	* tui/tui-stack.c (tui_locator_window::rerender): Update.
+	* tui/tui-command.c (tui_cmd_window::resize)
+	(tui_refresh_cmd_win): Update.
+	* tui/tui-win.c (tui_resize_all, tui_set_focus_command): Update.
+	* tui/tui.c (tui_rl_other_window, tui_enable): Update.
+	* tui/tui-data.c (~tui_gen_win_info): Remove.
+	* tui/tui-layout.c (tui_gen_win_info::resize): Update.
+	* tui/tui-io.c (update_cmdwin_start_line, tui_putc, tui_puts)
+	(tui_redisplay_readline, tui_mld_flush)
+	(tui_mld_erase_entire_line, tui_mld_getc, tui_getc): Update.
+	* tui/tui-regs.c (tui_data_window::delete_data_content_windows)
+	(tui_data_window::erase_data_content)
+	(tui_data_item_window::rerender)
+	(tui_data_item_window::refresh_window): Update.
+	* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window)
+	(box_win, tui_gen_win_info::make_window)
+	(tui_gen_win_info::make_visible): Update.
+	(tui_delete_win): Remove.
+	* tui/tui-winsource.c
+	(tui_source_window_base::do_erase_source_content): Update.
+	(tui_show_source_line, tui_source_window_base::update_tab_width)
+	(tui_source_window_base::update_exec_info): Update.
+	* tui/tui-data.h (struct curses_deleter): New.
+	(struct tui_gen_win_info) <handle>: Now a unique_ptr.
+	(struct tui_gen_win_info) <~tui_gen_win_info>: Define.
+
+2019-10-09  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (struct tui_gen_win_info): Don't declare.
+
+2019-10-09  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.c (tui_win_is_auxiliary): Remove.
+	* tui/tui-data.h (tui_win_is_auxiliary): Don't declare.
+
+2019-10-09  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-disasm.c (tui_get_low_disassembly_address): Compute
+	window height directly.
+	* tui/tui-layout.h (tui_default_win_viewport_height): Don't
+	declare.
+	* tui/tui-layout.c (tui_default_win_height): Remove.
+	(tui_default_win_viewport_height): Remove.
+
+2019-10-09  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.h: Remove comments.
+
+2019-10-09  Tom de Vries  <tdevries@suse.de>
+
+	* python/lib/gdb/printer/bound_registers.py: Use
+	'^builtin_type_bound128' as regexp argument for
+	add_builtin_pretty_printer.
+
+2019-10-09  Christian Biesinger  <cbiesinger@google.com>
+
+	* guile/guile.c (guile_extension_script_ops): Remove forward
+	declaration and mark as static.
+	(guile_script_ops): Likewise.
+	(extension_language_guile): Move further down in the file so
+	it can reference the definitions for guile_{extension_,}script_ops.
+
+2019-10-09  Andreas Arnez  <arnez@linux.ibm.com>
+
+	* s390-tdep.c (390_process_record): Handle new arch13 instructions
+	except SORTL, DFLTCC, and KDSA.
+
+2019-10-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (struct windows_thread_info_struct) <sf>: Remove.
+	(struct safe_symbol_file_add_args): Remove.
+
+2019-10-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c: Don't include buildsym-legacy.h.
+
+2019-10-08  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh (%p): Allow gdb-specific %p extensions.
+
+2019-10-08  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbtypes.c (overload_debug): Move comment to header.
+	* gdbtypes.h (overload_debug): Declare.
+	* valops.c: Remove declaration of overload_debug, instead
+	include gdbtypes.h.
+
+2019-10-08  Christian Biesinger  <cbiesinger@google.com>
+
+	* language.c (show_language_command): Pass lang_frame_mismatch_warn
+	through _().
+	(lang_frame_mismatch_warn): Make const, mark with N_(), and
+	move comment...
+	* language.h (lang_frame_mismatch_warn): ... here. Also add
+	declaration.
+	* top.c (lang_frame_mismatch_warn): Remove declaration.
+	(check_frame_language_change): Pass lang_frame_mismatch_warn
+	through _().
+
+2019-10-07  Christian Biesinger  <cbiesinger@google.com>
+
+	* c-lang.h (vtbl_ptr_name): Declare.
+	* cp-valprint.c (vtbl_ptr_name): Remove "extern" now that we get
+	it from the header.
+	* stabsread.c (define_symbol): Remove declaration of vtbl_ptr_name.
+
+2019-10-07  Christian Biesinger  <cbiesinger@google.com>
+
+	* charset.c (your_gdb_wchar_t_is_bogus): Replace with a
+	gdb_static_assert.
+
+2019-10-07  Weimin Pan  <weimin.pan@oracle.com>
+
+	* ../Makefile.def (dependencies): Add all-libctf to all-gdb
+	* ../Makefile.in: Add "all-gdb: maybe-all-libctf"
+	* ctfread.c: New file.
+	* ctfread.h: New file.
+	* elfread.c: Include ctfread.h.
+	(struct elfinfo text_p): New member ctfsect.
+	(elf_locate_sections): Mark CTF section.
+	(elf_symfile_read): Call elfctf_build_psymtabs.
+	* Makefile.in (LIBCTF): Add.
+	(CLIBS): Use it.
+	(CDEPS): Likewise.
+	(DIST): Add ctfread.c.
+
+2019-10-07  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ctfread.c (struct nextfield): Renamed to ...
+	(struct ctf_nextfield): ... this.
+	(struct field_info): Renamed to ...
+	(strut ctf_field_info): ... this.
+	(attach_fields_to_type): Update for renamed structures.
+	(ctf_add_member_cb): Likewise.
+	(ctf_add_enum_member_cb): Likewise.
+	(process_struct_members): Likewise.
+	(process_enum_type): Likewise.
+
+2019-10-07  Weimin Pan  <weimin.pan@oracle.com>
+
+	* tracectf.h: Rename, was ctf.h.
+	* tracectf.c: Rename, was ctf.c, replace ctf.h with tracectf.h.
+	* tracefile.c: Likewise.
+	* tracepoint.c: Remove unused include ctf.h.
+	* mi/mi-main.c: Likewise.
+	* Makefile.in Replace ctf.c with tracectf.c.
+
+2019-10-06  Joel Brobecker  <brobecker@adacore.com>
+
+	* version.in: Change version number to "9.0.50.DATE-git".
+
+2019-10-03  Tom Tromey  <tom@tromey.com>
+
+	PR rust/24976:
+	* dwarf2read.c (quirk_rust_enum): Handle single-element unions.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-lang.c (f_language_defn): Use cp_get_symbol_name_matcher and
+	cp_search_name_hash.
+	* NEWS: Add entry about nested function support.
+
+2019-10-03  Bernhard Heckel  <bernhard.heckel@intel.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cp-namespace.c (cp_search_static_and_baseclasses): Only search
+	for nested static variables when searchin VAR_DOMAIN.
+	* dwarf2read.c (add_partial_symbol): Add nested subroutines to the
+	global scope, update comment.
+	(add_partial_subprogram): Call add_partial_subprogram recursively
+	for nested subroutines when processinng Fortran.
+	(load_partial_dies): Process the child entities of a subprogram
+	when processing Fortran.
+	(partial_die_parent_scope): Handle building scope
+	for Fortran nested functions.
+	(process_die): Record that nested functions have a scope.
+	(new_symbol): Always record Fortran subprograms on the global
+	symbol list.
+	(determine_prefix): How to build the prefix for Fortran
+	subprograms.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-nat.c (linux_nat_filter_event): Don't ignore SIGSTOP if we
+	have just sent the thread a SIGSTOP and are waiting for it to
+	arrive.
+
+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* btrace.c (btrace_add_pc): Remove whitespace before the template
+	parameter in 'std::vector <...>'.
+	(parse_xml_btrace_block): Likewise.
+	(btrace_maint_decode_pt): Likewise.
+	(btrace_maint_update_packets): Likewise.
+	(btrace_maint_print_packets): Likewise.
+	* btrace.h (struct btrace_maint_info): Likewise.
+	* dwarf2read.c (struct type_unit_group): Likewise.
+	(build_type_psymtabs_reader): Likewise.
+	* gdbsupport/btrace-common.c (btrace_data_append): Likewise.
+	* gdbsupport/btrace-common.h (struct btrace_data_bts): Likewise.
+	* nat/linux-btrace.c (perf_event_read_bts): Likewise.
+
+2019-10-03  Tom de Vries  <tdevries@suse.de>
+
+	* cli/cli-style.c (_initialize_cli_style): Adding a '.' at the end of
+	the first line of the help text for set/show style metadata.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* Makefile.in (COMMON_SFILES): Add common-inferior.c.
+	* gdbsupport/common-inferior.c: New file.
+	* infcmd.c (startup_with_shell): Don't define.
+	* nat/fork-inferior.h (startup_with_shell): Don't declare.
+	* gdbsupport/common-inferior.h (startup_with_shell): Declare.
+	* inferior.h (startup_with_shell): Don't declare.
+
+2019-10-02  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbsupport/gdb_assert.h: Include errors.h.
+	* gdbsupport/gdb_string_view.h: Include gdb_assert.h.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* NEWS: Add $_ada_exception entry.
+	* ada-lang.c (struct ada_catchpoint): Add constructor.
+	<m_kind>: New member.
+	(allocate_location_exception, re_set_exception): Remove
+	"ex" parameter.
+	(should_stop_exception): Compute $_ada_exception.
+	(check_status_exception, print_it_exception)
+	(print_one_exception, print_mention_exception): Remove
+	"ex" parameter.
+	(allocate_location_catch_exception, re_set_catch_exception)
+	(check_status_exception, print_it_catch_exception)
+	(print_one_catch_exception, print_mention_catch_exception)
+	(print_recreate_catch_exception)
+	(allocate_location_catch_exception_unhandled)
+	(re_set_catch_exception_unhandled)
+	(check_status_exception, print_it_catch_exception_unhandled)
+	(print_one_catch_exception_unhandled)
+	(print_mention_catch_exception_unhandled)
+	(print_recreate_catch_exception_unhandled)
+	(allocate_location_catch_assert, re_set_catch_assert)
+	(check_status_assert, print_it_catch_assert)
+	(print_one_catch_assert, print_mention_catch_assert)
+	(print_recreate_catch_assert)
+	(allocate_location_catch_handlers, re_set_catch_handlers)
+	(check_status_handlers, print_it_catch_handlers)
+	(print_one_catch_handlers, print_mention_catch_handlers)
+	(print_recreate_catch_handlers): Remove.
+	(create_ada_exception_catchpoint): Update.
+	(initialize_ada_catchpoint_ops): Update.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_lookup_simple_minsyms): Remove.
+	(create_excep_cond_exprs): Simplify exception string computation.
+	(ada_exception_catchpoint_cond_string): Likewise.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* symmisc.c (dump_msymbols): Don't use MSYMBOL_VALUE_ADDRESS.
+	* ada-lang.c (lesseq_defined_than): Handle
+	LOC_STATIC.
+	* dwarf2read.c (dwarf2_per_objfile): Add can_copy
+	parameter.
+	(dwarf2_has_info): Likewise.
+	(new_symbol): Set maybe_copied on symbol when
+	appropriate.
+	* dwarf2read.h (dwarf2_per_objfile): Add can_copy
+	parameter.
+	<can_copy>: New member.
+	* elfread.c (record_minimal_symbol): Set maybe_copied
+	on symbol when appropriate.
+	(elf_symfile_read): Update call to dwarf2_has_info.
+	* minsyms.c (lookup_minimal_symbol_linkage): New
+	function.
+	* minsyms.h (lookup_minimal_symbol_linkage): Declare.
+	* symtab.c (get_symbol_address, get_msymbol_address):
+	New functions.
+	* symtab.h (get_symbol_address, get_msymbol_address):
+	Declare.
+	(SYMBOL_VALUE_ADDRESS, MSYMBOL_VALUE_ADDRESS): Handle
+	maybe_copied.
+	(struct symbol, struct minimal_symbol) <maybe_copied>:
+	New member.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* source.c (struct current_source_location): New.
+	(current_source_key): New global.
+	(current_source_symtab, current_source_line)
+	(current_source_pspace): Remove.
+	(get_source_location): New function.
+	(get_current_source_symtab_and_line)
+	(set_default_source_symtab_and_line)
+	(set_current_source_symtab_and_line)
+	(clear_current_source_symtab_and_line, select_source_symtab)
+	(info_source_command, print_source_lines_base)
+	(info_line_command, search_command_helper, _initialize_source):
+	Update.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* source.c (select_source_symtab): Don't call
+	decode_line_with_current_source.
+
+2019-10-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* symtab.c (lookup_global_symbol): Search global block.
+
+2019-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* coffread.c (process_coff_symbol): Update.
+	* dwarf2read.c (var_decode_location, new_symbol): Update.
+	* mdebugread.c (parse_symbol): Update.
+	* objfiles.c (relocate_one_symbol): Update.
+	* stabsread.c (define_symbol, fix_common_block)
+	(scan_file_globals): Update.
+	* symtab.h (SYMBOL_VALUE_ADDRESS): Expand to an rvalue.
+	(SET_SYMBOL_VALUE_ADDRESS): New macro.
+	* xcoffread.c (process_xcoff_symbol): Update.
+
+2019-10-02  Andreas Arnez  <arnez@linux.ibm.com>
+
+	* MAINTAINERS: Update my email address.
+
+2019-10-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (struct type_unit_group) <tus>: Convert to
+	std::vector.
+	(build_type_psymtabs_reader): Update for std::vector.
+	(build_type_psymtab_dependencies): Likewise.
+	* dwarf2read.h: Remove use of DEF_VEC_P.
+	(typedef sig_type_ptr): Delete.
+
+2019-10-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* btrace.c (btrace_maint_clear): Update to handle change from VEC
+	to std::vector.
+	(btrace_maint_decode_pt): Likewise, and move allocation of the
+	vector outside of the loop.
+	(btrace_maint_update_packets): Update to handle change from VEC to
+	std::vector.
+	(btrace_maint_print_packets): Likewise.
+	(maint_info_btrace_cmd): Likewise.
+	* btrace.h: Remove use of DEF_VEC_O.
+	(typedef btrace_pt_packet_s): Delete.
+	(struct btrace_maint_info) <packets>: Change fromm VEC to
+	std::vector.
+	* gdbsupport/btrace-common.h: Remove 'vec.h' include.
+
+2019-10-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* btrace.c (btrace_compute_ftrace_bts): Update for std::vector,
+	make accesses into the vector constant references.
+	(btrace_add_pc): Update for std::vector.
+	(btrace_stitch_bts): Likewise.
+	(parse_xml_btrace_block): Likewise.
+	(btrace_maint_update_packets): Likewise.
+	(btrace_maint_print_packets): Likewise.
+	(maint_info_btrace_cmd): Likewise.
+	* gdbsupport/btrace-common.c (btrace_data::fini): Update for
+	std::vector.
+	(btrace_data::empty): Likewise.
+	(btrace_data_append): Likewise.
+	* gdbsupport/btrace-common.h: Remove use of DEF_VEC_O.
+	(typedef btrace_block_s): Delete.
+	(struct btrace_block): Add constructor.
+	(struct btrace_data_bts) <blocks>: Change to std::vector.
+	* nat/linux-btrace.c (perf_event_read_bts): Update for
+	std::vector.
+	(linux_read_bts): Likewise.
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* cli/cli-logging.c (show_logging_filename): Use styled_string.
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* stack.c (print_frame, info_frame_command_core): Use
+	styled_string.
+	* linux-thread-db.c (try_thread_db_load_1)
+	(try_thread_db_load_from_pdir_1): Use styled_string.
+	* auto-load.c (file_is_auto_load_safe, execute_script_contents)
+	(auto_load_section_scripts, info_auto_load_local_gdbinit)
+	(maybe_print_unsupported_script_warning)
+	(maybe_print_script_not_found_warning): Use styled_string.
+	* ada-lang.c (user_select_syms): Use styled_string.
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* p-lang.c (pascal_printstr): Use metadata style.
+	* value.c (show_convenience): Use metadata style.
+	* valprint.c (valprint_check_validity, val_print_optimized_out)
+	(val_print_not_saved, val_print_unavailable)
+	(val_print_invalid_address, generic_val_print, val_print)
+	(value_check_printable, val_print_array_elements): Use metadata
+	style.
+	* ui-out.h (class ui_out) <field_fmt>: New overload.
+	<do_field_fmt>: Add style parameter.
+	* ui-out.c (ui_out::field_fmt): New overload.
+	* typeprint.c (type_print_unknown_return_type)
+	(val_print_not_allocated, val_print_not_associated): Use metadata
+	style.
+	* tui/tui-out.h (class tui_ui_out) <do_field_fmt>: Add style
+	parameter.
+	* tui/tui-out.c (tui_ui_out::do_field_fmt): Update.
+	* tracepoint.c (tvariables_info_1): Use metadata style.
+	* stack.c (print_frame_arg, print_frame_info, print_frame)
+	(info_frame_command_core): Use metadata style.
+	* skip.c (info_skip_command): Use metadata style.
+	* rust-lang.c (rust_print_enum): Use metadata style.
+	* python/py-prettyprint.c (print_stack_unless_memory_error): Use
+	metadata style.
+	* python/py-framefilter.c (py_print_single_arg): Use metadata
+	style.
+	* printcmd.c (do_one_display, print_variable_and_value): Use
+	metadata style.
+	* p-valprint.c (pascal_val_print)
+	(pascal_object_print_value_fields): Use metadata style.
+	* p-typeprint.c (pascal_type_print_base): Use metadata style.
+	* mi/mi-out.h (class mi_ui_out) <do_field_fmt>: Add style
+	parameter.
+	* mi/mi-out.c (mi_ui_out::do_field_fmt): Update.
+	* m2-valprint.c (m2_print_long_set): Use metadata style.
+	* m2-typeprint.c (m2_print_type): Use metadata style.
+	* infcmd.c (print_return_value_1): Use metadata style.
+	* gnu-v3-abi.c (print_one_vtable): Use metadata style.
+	* f-valprint.c (info_common_command_for_block): Use metadata
+	style.
+	* f-typeprint.c (f_type_print_base): Use metadata style.
+	* expprint.c (print_subexp_standard): Use metadata style.
+	* cp-valprint.c (cp_print_value_fields): Use metadata style.
+	* cli/cli-style.h (class cli_style_option): Add constructor.
+	(metadata_style): Declare.
+	* cli/cli-style.c (metadata_style): New global.
+	(_initialize_cli_style): Register metadata style.
+	* cli-out.h (class cli_ui_out) <do_field_fmt>: Add style
+	parameter.
+	* cli-out.c (cli_ui_out::do_field_fmt): Update.
+	* c-typeprint.c (c_type_print_base_struct_union)
+	(c_type_print_base_1): Use metadata style.
+	* breakpoint.c (watchpoint_value_print)
+	(print_one_breakpoint_location): Use metadata style.
+	* break-catch-syscall.c (print_one_catch_syscall): Use metadata
+	style.
+	* break-catch-sig.c (signal_catchpoint_print_one): Use metadata
+	style.
+	* ada-valprint.c (val_print_packed_array_elements, printstr)
+	(print_field_values, ada_val_print_ref, ada_val_print): Use
+	metadata style.
+	* ada-typeprint.c (print_array_type, ada_print_type): Use metadata
+	style.
+	* ada-tasks.c (print_ada_task_info, info_task): Use metadata
+	style.
+	* ada-lang.c (user_select_syms): Use metadata style.
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* cli/cli-cmds.c (pwd_command): Style output.
+
+2019-10-01  Pedro Alves  <palves@redhat.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (print_symbol_info): Use %ps.
+	(print_msymbol_info): Use %ps.
+	* symfile.c (symbol_file_add_with_addrs): Use %ps.
+	* printcmd.c (print_variable_and_value): Use %ps.
+	* macrocmd.c (show_pp_source_pos): Use %ps.
+	* infrun.c (print_exited_reason): Use ui_out::message.
+	* breakpoint.c (watchpoint_check, print_one_breakpoint_location)
+	(describe_other_breakpoints): Use ui_out::message and new
+	formats.
+	(say_where): Use new formats.
+	(bkpt_print_it, tracepoint_print_one_detail): Use ui_out::message
+	and new formats.
+
+2019-10-01  Pedro Alves  <palves@redhat.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* unittests/format_pieces-selftests.c: Add gdb_format parameter.
+	(test_gdb_formats): New function.
+	(run_tests): Call it.
+	(test_format_specifier): Update.
+	* utils.h (fputs_filtered): Update comment.
+	(vfprintf_styled, vfprintf_styled_no_gdbfmt)
+	(fputs_styled_unfiltered): Declare.
+	* utils.c (fputs_styled_unfiltered): New function.
+	(vfprintf_maybe_filtered): Add gdbfmt parameter.
+	(vfprintf_filtered): Update.
+	(vfprintf_unfiltered, vprintf_filtered): Update.
+	(vfprintf_styled, vfprintf_styled_no_gdbfmt): New functions.
+	* ui-out.h (enum ui_out_flag) <unfiltered_output,
+	disallow_ui_out_field>: New constants.
+	(enum class field_kind): New.
+	(struct base_field_s, struct signed_field_s): New.
+	(signed_field): New function.
+	(struct string_field_s): New.
+	(string_field): New function.
+	(struct styled_string_s): New.
+	(styled_string): New function.
+	(class ui_out) <message>: Add comment.
+	<vmessage, call_do_message>: New methods.
+	<do_message>: Add style parameter.
+	* ui-out.c (ui_out::call_do_message, ui_out::vmessage): New
+	methods.
+	(ui_out::message): Rewrite.
+	* mi/mi-out.h (class mi_ui_out) <do_message>: Add style
+	parameter.
+	* mi/mi-out.c (mi_ui_out::do_message): Add style parameter.
+	* gdbsupport/format.h (class format_pieces) <format_pieces>: Add
+	gdb_extensions parameter.
+	(class format_piece): Add parameter to constructor.
+	(n_int_args): New field.
+	* gdbsupport/format.c (format_pieces::format_pieces): Add
+	gdb_extensions parameter.  Handle '*'.
+	* cli-out.h (class cli_ui_out) <do_message>: Add style parameter.
+	* cli-out.c (cli_ui_out::do_message): Add style parameter.  Call
+	vfprintf_styled_no_gdbfmt.
+	(cli_ui_out::do_field_string, cli_ui_out::do_spaces)
+	(cli_ui_out::do_text, cli_ui_out::field_separator): Allow
+	unfiltered output.
+	* ui-style.h (struct ui_file_style) <ptr>: New method.
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* unittests/format_pieces-selftests.c: Update.  Add final format.
+	* gdbsupport/format.c (format_pieces::format_pieces): Don't add
+	empty literal pieces.
+
+2019-10-01  Tom Tromey  <tom@tromey.com>
+
+	* ui-out.h (enum class ui_out_style_kind): Remove.
+	(class ui_out) <field_string, field_stsream, do_field_string>:
+	Change type of "style".
+	* ui-out.c (ui_out::field_core_addr, ui_out::field_stream)
+	(ui_out::field_string): Update.
+	* tui/tui-out.h (class tui_ui_out) <do_field_string>: Change type
+	of "style".
+	* tui/tui-out.c (tui_ui_out::do_field_string): Update.
+	* tracepoint.c (print_one_static_tracepoint_marker): Update.
+	* stack.c (print_frame_arg, print_frame_info, print_frame):
+	Update.
+	* source.c (print_source_lines_base): Update.
+	* solib.c (info_sharedlibrary_command): Update.
+	* skip.c (info_skip_command): Update.
+	* record-btrace.c (btrace_call_history_src_line)
+	(btrace_call_history): Update.
+	* python/py-framefilter.c (py_print_frame): Update.
+	* mi/mi-out.h (class mi_ui_out) <do_field_string>: Change type of
+	"style".
+	* mi/mi-out.c (mi_ui_out::do_table_header)
+	(mi_ui_out::do_field_signed, mi_ui_out::do_field_unsigned)
+	(mi_ui_out::do_field_string): Update.
+	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):
+	Update.
+	* cli-out.h (class cli_ui_out) <do_field_string>: Change type of
+	"style".
+	* cli-out.c (cli_ui_out::do_table_header)
+	(cli_ui_out::do_field_signed, cli_ui_out::do_field_unsigned)
+	(cli_ui_out::do_field_skip, cli_ui_out::do_field_string)
+	(cli_ui_out::do_field_fmt): Update.
+	* breakpoint.c (print_breakpoint_location): Update.
+	(update_static_tracepoint): Update.
+
+2019-10-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* main.c (relocate_gdbinit_path_maybe_in_datadir): Remove std::string
+	conversion of gdb_datadir.
+	(captured_main_1): Remove xstrdup when assigning to gdb_datadir,
+	remove not needed c_str ().
+
+2019-09-30  Ali Tamur <tamur@google.com>
+
+	* dwarf2read.c (skip_one_die): Handle DW_FORM_strx forms.
+	(dwarf2_string_attr): Likewise.
+
+2019-09-30  Ali Tamur <tamur@google.com>
+
+	* dwarf2read.c (process_full_comp_unit): Remove whitespace at the EOL.
+	(process_full_type_unit): Likewise.
+	(dump_die_shallow): Likewise.
+	(cu_debug_loc_section): Likewise.
+
+2019-09-28  Christian Biesinger  <cbiesinger@google.com>
+
+	* minsyms.c (compare_minimal_symbols): Rename to...
+	(minimal_symbol_is_less_than): ...this, and adjust to STL
+	conventions (return bool, take arguments as references)
+	(minimal_symbol_reader::install): Call std::sort instead
+	of qsort.
+
+2019-09-29  Christian Biesinger  <cbiesinger@google.com>
+
+	* minsyms.h (msymbol_hash): Document that this is a case-insensitive
+	hash and why.
+	* objfiles.h (struct objfile_per_bfd_storage) <demangled_names_hash,
+	msymbol_hash, msymbol_demangled_hash>: Improve comments.
+
+2019-09-30  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* psymtab.c (add_psymbol_to_list): Move comment to psympriv.h.
+	* psympriv.h (add_psymbol_to_list): Move comment here and update
+	it.
+
+2019-09-29  Tom de Vries  <tdevries@suse.de>
+
+	* contrib/cc-with-tweaks.sh (get_tmpdir): New function.
+	Use $tmpdir/$(basename "$output_file").dwz instead of
+	"${output_file}.dwz".
+
+2019-09-28  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/25045
+	* hppa-linux-nat.c: Include gdbarch.h.
+
+2019-09-26  Christian Biesinger  <cbiesinger@google.com>
+
+	* blockframe.c (find_pc_partial_function): Change return type to bool.
+	* elfread.c (elf_gnu_ifunc_resolve_name): Likewise.
+	* minsyms.c (in_gnu_ifunc_stub): Likewise.
+	(stub_gnu_ifunc_resolve_name): Likewise.
+	* symtab.c (compare_filenames_for_search): Likewise.
+	(compare_glob_filenames_for_search): Likewise.
+	(matching_obj_sections): Likewise.
+	(symbol_matches_domain): Likewise.
+	(find_line_symtab): Change out param EXACT_MATCH to bool *.
+	(find_line_pc): Change return type to bool.
+	(find_line_pc_range): Likewise.
+	(producer_is_realview): Likewise.
+	* symtab.h (symbol_matches_domain): Likewise.
+	(find_pc_partial_function): Likewise.
+	(find_pc_line_pc_range): Likewise.
+	(in_gnu_ifunc_stub): Likewise.
+	(struct gnu_ifunc_fns) <gnu_ifunc_resolve_name>: Likewise.
+	(find_line_pc): Likewise.
+	(find_line_pc_range): Likewise.
+	(matching_obj_sections): Likewise.
+	(find_line_symtab): Change out parameter to bool.
+	(producer_is_realview): Change return type to bool.
+	(compare_filenames_for_search): Likewise.
+	(compare_glob_filenames_for_search): Likewise.
+
+2019-09-26  Tom Tromey  <tom@tromey.com>
+
+	* Makefile.in (COMMON_SFILES): Remove gdb_usleep.c.
+	(HFILES_NO_SRCDIR): Remove gdb_usleep.h.
+	* gdb_usleep.h: Remove.
+	* gdb_usleep.c: Remove.
+	* utils.c: Don't include gdb_usleep.h.
+
+2019-09-26  Tom Tromey  <tromey@adacore.com>
+
+	* python/py-type.c (type_to_type_object): Call check_typedef
+	for stub types.
+
+2019-09-26  Tom Tromey  <tom@tromey.com>
+
+	* utils.h (initialize_utils): Don't declare.
+	* top.c (gdb_init): Don't call initialize_utils.
+	* utils.c (initialize_utils): Remove.  Move contents...
+	(_initialize_utils): ... here.
+
+2019-09-25  Tom Tromey  <tom@tromey.com>
+
+	* python/py-objfile.c (objfpy_get_build_id): Use bin2hex.
+	* utils.h (make_hex_string): Don't declare.
+	* utils.c (make_hex_string): Remove.
+
+2019-09-24  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/23815
+	* amd64-linux-nat.c (amd64_linux_nat_target::fetch_registers):
+	Initialize xstateregs before ptrace PTRACE_GETREGSET call.
+
+2019-09-23  Dimitar Dimitrov  <dimitar@dinux.eu>
+
+	* NEWS: Mention new simulator port for PRU.
+
+2019-09-23  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-exp.y (write_object_remaining): Update.
+	* ada-lang.c (ada_decode): Return a std::string instead of a char*
+	and eliminate the static buffer.
+	(ada_decode_symbol): Update.
+	(ada_la_decode): Update.
+	(ada_sniff_from_mangled_name): Update.
+	(is_valid_name_for_wild_match): Update.
+	(ada_lookup_name_info::matches): Update and simplify.
+	(name_matches_regex): Update.
+	(ada_add_global_exceptions): Update.
+	* ada-lang.h (ada_decode): Update signature.
+	* ada-varobj.c (ada_varobj_describe_simple_array_child): Update.
+	* dwarf-index-write.c (debug_names::insert): Update.
+
+2019-09-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* solib-svr4.c (svr4_iterate_over_objfiles_in_search_order): Fix
+	formatting.
+
+2019-09-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* breakpoint.h (bp_location) <inserted, permanent, duplicate>:
+	Change "nonzero" to "true" in documentation.
+
+2019-09-20  Christian Biesinger  <cbiesinger@google.com>
+
+	* solib-darwin.c (darwin_lookup_lib_symbol): Remove.
+	(_initialize_darwin_solib): Don't set
+	darwin_so_ops.lookup_lib_global_symbol.
+	* solib-svr4.c (set_solib_svr4_fetch_link_map_offsets): Call
+	set_gdbarch_iterate_over_objfiles_in_search_order.
+	(elf_lookup_lib_symbol): Rename to...
+	(svr4_iterate_over_objfiles_in_search_order): this, and update
+	to iterate semantics.
+	(_initialize_svr4_solib): Don't set lookup_lib_global_symbol.
+	* solib.c (solib_global_lookup): Remove.
+	* solist.h (struct target_so_ops): Remove lookup_lib_global_symbol.
+	(solib_global_lookup): Remove.
+	* symtab.c (lookup_global_or_static_symbol): Remove call to
+	solib_global_lookup.
+
+2019-09-20  Joel Brobecker  <brobecker@adacore.com>
+
+	* NEWS: Move entries about default MI version now being
+	version 3, and about the GDB/MI fix for multi-location
+	breakpoints to the "since GDB 8.3" section.
+
+2019-09-20  Joel Brobecker  <brobecker@adacore.com>
+
+	GDB 8.3.1 released.
+
+2019-09-20  Ulrich Weigand  <uweigand@de.ibm.com>
+
+	* NEWS: Mention that Cell/B.E. debugging support was removed.
+	* MAINTAINERS: Remove spu target.
+
+	* config/djgpp/fnchange.lst: Remove entries for removed files.
+
+	* Makefile.in (ALL_TARGET_OBS): Remove solib-spu.o,
+	spu-multiarch.o, and spu-tdep.o.
+	(HFILES_NO_SRCDIR): Remove solib-spu.h and spu-tdep.h.
+	(ALLDEPFILES): Remove solib-spu.c, spu-linux-nat.c,
+	spu-multiarch.c, and spu-tdep.c.
+	* spu-linux-nat.c: Remove file.
+	* spu-multiarch.c: Remove file.
+	* spu-tdep.c: Remove file.
+	* spu-tdep.h: Remove file.
+	* solib-spu.c: Remove file.
+	* solib-spu.h: Remove file.
+
+	* configure.host (powerpc64*-*-linux*): Remove Cell/B.E. support.
+	* configure.nat (spu-linux): Remove.
+	* configure.tgt (powerpc*-*-linux*): Remove solib-spu.o and
+	solib-multiarch.o from gdb_target_obs.
+	(spu*-*-*): Remove.
+
+	* arch/ppc-linux-common.h (struct ppc_linux_features): Remove "cell"
+	feature flag.
+	(ppc_linux_no_features): Update.
+	* arch/ppc-linux-common.c (ppc_linux_match_description): Remove
+	Cell/B.E. support.
+	* arch/ppc-linux-tdesc.h (tdesc_powerpc_cell32l): Remove declaration.
+	(tdesc_powerpc_cell64l): Likewise.
+	* nat/ppc-linux.h (PPC_FEATURE_CELL): Remove.
+	* ppc-linux-nat.c (ppc_linux_nat_target::read_description): Remove
+	Cell/B.E. support.
+	* ppc-linux-tdep.h: Do not include "solib-spu.h" or "spu-tdep.h".
+	Do not include "features/rs6000/powerpc-cell32l.c" or
+	"features/rs6000/powerpc-cell64l.c".
+	(ppc_linux_spu_section): Remove.
+	(ppc_linux_core_read_description): Remove Cell/B.E. support.
+	(spe_context_objfile, spe_context_lm_addr, spe_context_offset,
+	spe_context_cache_ptid, spe_context_cache_ptid): Remove.
+	(ppc_linux_spe_context_lookup): Remove.
+	(ppc_linux_spe_context_inferior_created): Remove.
+	(ppc_linux_spe_context_solib_loaded): Remove.
+	(ppc_linux_spe_context_solib_unloaded): Remove.
+	(ppc_linux_spe_context): Remove.
+	(struct ppu2spu_cache): Remove.
+	(ppu2spu_prev_arch, ppu2spu_this_id, ppu2spu_prev_register): Remove.
+	(struct ppu2spu_data): Remove.
+	(ppu2spu_unwind_register, ppu2spu_sniffer, ppu2spu_dealloc_cache,
+	ppu2spu_unwind): Remove.
+	(ppc_linux_init_abi): Remove Cell/B.E. support.
+	* rs6000-tdep.h (rs6000_gdbarch_init): Remove Cell/B.E. support.
+
+	* features/Makefile (rs6000/powerpc-cell32l-expedite): Remove.
+	(rs6000/powerpc-cell64l-expedite): Likewise
+	(WHICH): Remove rs6000/powerpc-cell32l and rs6000/powerpc-cell64l.
+	(XMLTOC): Remove rs6000/powerpc-cell32l.xml and
+	rs6000/powerpc-cell64l.xml.
+	* features/rs6000/powerpc-cell32l.xml: Remove.
+	* features/rs6000/powerpc-cell64l.xml: Likewise.
+	* features/rs6000/powerpc-cell32l.c: Remove generated file.
+	* features/rs6000/powerpc-cell64l.c: Likewise.
+	* regformats/rs6000/powerpc-cell32l.dat: Remove generated file.
+	* regformats/rs6000/powerpc-cell64l.dat: Likewise.
+	* regformats/reg-spu.dat: Remove.
+
+	* target.h (enum target_object): Remove TARGET_OBJECT_SPU.
+	* corelow.c (struct spuid_list): Remove.
+	(add_to_spuid_list): Remove.
+	(core_target::xfer_partial): Remove support for TARGET_OBJECT_SPU.
+	* remote.c (PACKET_qXfer_spu_read, PACKET_qXfer_spu_write): Remove.
+	(remote_protocol_features): Remove associated entries.
+	(_initialize_remote): No longer initialize them.
+	(remote_target::xfer_partial): Remove support for TARGET_OBJECT_SPU.
+	* linux-nat.c (SPUFS_MAGIC): Remove.
+	(linux_proc_xfer_spu): Remove.
+	(spu_enumerate_spu_ids): Remove.
+	(linux_nat_target::xfer_partial): Remove support for TARGET_OBJECT_SPU.
+	* linux-tdep.c (-linux_spu_make_corefile_notes): Remove.
+	(linux_make_corefile_notes): No longer call it.
+
+	* regcache.c (cooked_read_test): Remove bfd_arch_spu special case.
+	(cooked_write_test): Likewise.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Mention case-sensitivity of TUI commands.
+	* tui/tui-win.c (tui_set_focus_command): Now case-sensitive.
+	(tui_set_win_height_command, parse_scrolling_args): Likewise.
+	* tui/tui-layout.c (tui_layout_command): Now case-sensitive.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.c (tui_source_window::set_contents): Use
+	make_unique_xstrdup.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Use
+	make_unique_xstrdup.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.c: Remove separator comments.
+	* tui/tui-layout.c: Remove separator comments.
+	* tui/tui-win.c: Remove separator comments.
+	* tui/tui-wingeneral.c: Remove separator comments.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.h (strcat_to_buf): Don't declare.
+	* tui/tui.c (strcat_to_buf): Remove.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.h (struct tui_source_window) <m_fullname>: Rename
+	from "fullname".
+	* tui/tui-source.c (tui_source_window::set_contents)
+	(tui_source_window::location_matches_p)
+	(tui_source_window::maybe_update): Update.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window) <get_current_group>:
+	Update.
+	<m_regs_content, m_regs_column_count, m_current_group>: Add "m_"
+	prefix.
+	* tui/tui-regs.c (tui_data_window::last_regs_line_no)
+	(tui_data_window::line_from_reg_element_no)
+	(tui_data_window::first_reg_element_no_inline)
+	(tui_data_window::show_registers)
+	(tui_data_window::show_register_group)
+	(tui_data_window::display_registers_from)
+	(tui_data_window::display_registers_from_line)
+	(tui_data_window::first_data_item_displayed)
+	(tui_data_window::delete_data_content_windows)
+	(tui_data_window::erase_data_content)
+	(tui_data_window::do_scroll_vertical)
+	(tui_data_window::refresh_window)
+	(tui_data_window::check_register_values): Update.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (MAX_LOCATOR_ELEMENT_LEN): Remove define.
+	(struct tui_locator_window) <full_name, proc_name>: Now
+	std::string.
+	* tui/tui-stack.c (tui_locator_window::make_status_line)
+	(tui_locator_window::set_locator_fullname)
+	(tui_locator_window::set_locator_info): Update.
+	* tui/tui-source.c (tui_source_window::set_contents)
+	(tui_source_window::showing_source_p): Update.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (tui_locator_window::set_locator_fullname):
+	Don't call tui_locator_win_info_ptr.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_resize_all): Don't call refresh.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Use 1 as
+	height for locator.
+	* tui/tui-stack.c (tui_locator_window::rerender): Call scrollok.
+	* tui/tui-layout.c (show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Use 1 as height for locator.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_enable): Update.
+	* tui/tui-win.c (tui_sigwinch_handler, tui_async_resize_screen):
+	Update.
+	* tui/tui-data.h (tui_win_resized, tui_set_win_resized_to):
+	Update.
+	* tui/tui-data.c (win_resized): Now bool.
+	(tui_win_resized): Return bool.
+	(tui_set_win_resized_to): Accept a bool.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window) <show_register_group>:
+	Change type of "refresh_values_only".
+	* tui/tui-regs.c (tui_data_window::show_register_group): Change
+	type of "refresh_values_only".
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-disasm.c (struct tui_asm_line) <addr_string, insn>: Now
+	std::string.
+	(tui_disassemble): Add "pos" parameter.
+	(tui_disasm_window::set_contents): Simplify.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<show_source_content>: Now private.
+	* tui/tui-winsource.c
+	(tui_source_window_base::show_source_content): Don't handle empty
+	content case.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_source_disasm_command)
+	(show_source_or_disasm_and_command): Don't call
+	show_source_content.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (struct tui_locator_window) <make_status_line>:
+	Declare.
+	* tui/tui-stack.c (tui_locator_window::make_status_line): Rename
+	from tui_make_status_line.
+	(tui_locator_window::rerender): Update.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (tui_make_status_line): Return std::string.
+	(tui_locator_window::rerender): Update.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<~tui_source_window_base>: Don't declare.
+	<fullname>: Remove.
+	* tui/tui-winsource.c (~tui_source_window_base): Remove.
+	* tui/tui-source.h (struct tui_source_window) <fullname>: New
+	member.
+	* tui/tui-source.c (tui_source_window::set_contents): Update.
+	(tui_source_window::location_matches_p)
+	(tui_source_window::maybe_update): Update.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (~tui_source_element): Remove.
+	(tui_source_element): Update.
+	(struct tui_source_element) <line>: Now a unique_xmalloc_ptr.
+	* tui/tui-winsource.c (tui_show_source_line): Update.
+	* tui/tui-source.c (tui_source_window::set_contents): Update.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.
+
+2019-09-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (tui_clear_source_windows_detail): Don't
+	declare.
+	* tui/tui-layout.c (tui_add_win_to_layout): Don't call
+	tui_clear_source_windows_detail.
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<clear_detail>: Don't declare.
+	* tui/tui-winsource.c (tui_source_window_base::clear_detail):
+	Remove.
+	* tui/tui-data.c (tui_clear_source_windows_detail): Remove.
+
+2019-09-20  Tom Tromey  <tromey@adacore.com>
+
+	PR ada/24919:
+	* block.c (contained_in): Fix final return value.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* gdb_bfd.c (gdb_bfd_ref, gdb_bfd_unref): Use bfd_set_usrdata.
+	* dwarf2read.c (dwarf2_read_gdb_index, dwarf2_read_debug_names),
+	(read_indirect_string_from_dwz): Use bfd accessor.
+	* dwarf2read.h (struct dwz_file <filename>): Likewise.
+	* machoread.c (macho_symfile_read_all_oso): Likewise.
+	* solib.c (solib_bfd_open): Likewise.
+
+2019-09-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* eval.c: Move declaration of overload_resolution to...
+	* value.h: ...here.
+
+2019-09-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* arm-linux-nat.c: Remove extern declaration for arm_apcs_32.
+	* arm-linux-tdep.c: Likewise.
+	* arm-nbsd-nat.c: Likewise.
+	* arm-tdep.h: Declare arm_apcs_32.
+	* arm-tdep.c: Move documentation for arm_apcs_32 to arm-tdep.h.
+
+2019-09-19  Christian Biesinger  <cbiesinger@google.com>
+
+	* dwarf2loc.c: Remove extern declaration of dwarf_always_disassemble.
+	* dwarf2read.h: Declare dwarf_always_disassemble.
+
+2019-09-19  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/25009
+	* source-cache.c (source_cache::ensure): Catch exception thrown during
+	construction of the highlighter.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* aarch64-linux-tdep.c, * arm-tdep.c, * auto-load.c,
+	* coff-pe-read.c, * coffread.c, * corelow.c, * dbxread.c,
+	* dicos-tdep.c, * dwarf2-frame.c, * dwarf2read.c, * elfread.c,
+	* exec.c, * fbsd-tdep.c, * gcore.c, * gdb_bfd.c, * gdb_bfd.h,
+	* hppa-tdep.c, * i386-cygwin-tdep.c, * i386-fbsd-tdep.c,
+	* i386-linux-tdep.c, * jit.c, * linux-tdep.c, * machoread.c,
+	* maint.c, * mdebugread.c, * minidebug.c, * mips-linux-tdep.c,
+	* mips-sde-tdep.c, * mips-tdep.c, * mipsread.c, * nto-tdep.c,
+	* objfiles.c, * objfiles.h, * osabi.c, * ppc-linux-tdep.c,
+	* ppc64-tdep.c, * record-btrace.c, * record-full.c, * remote.c,
+	* rs6000-aix-tdep.c, * rs6000-tdep.c, * s390-linux-tdep.c,
+	* s390-tdep.c, * solib-aix.c, * solib-dsbt.c, * solib-frv.c,
+	* solib-spu.c, * solib-svr4.c, * solib-target.c,
+	* spu-linux-nat.c, * spu-tdep.c, * symfile-mem.c, * symfile.c,
+	* symmisc.c, * symtab.c, * target.c, * windows-nat.c,
+	* xcoffread.c, * cli/cli-dump.c, * compile/compile-object-load.c,
+	* mi/mi-interp.c: Update throughout for bfd section macro and
+	function changes.
+	* gcore (gcore_create_callback): Use bfd_set_section_lma.
+	* spu-tdep.c (spu_overlay_new_objfile): Likewise.
+
+2019-09-18  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Add entry.
+	* tui/tui.c (tui_initialize_readline): Set name of keymap.  Do not
+	call rl_initialize.
+	(tui_enable): Do not call rl_initialize.
+
+2019-09-18  Christian Groessler  <chris@groessler.org>
+
+	* alpha-linux-nat.c: Include gdbarch.h.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* ui-file.c: Include cli/cli-style.h.
+	(term_cli_styling): Remove cli_styling declaration.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* arm-tdep.c (arm_record_special_symbol): Update bfd_get_section
+	to bfd_asymbol_section.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* amd64-dicos-tdep.c (amd64_dicos_osabi_sniffer): Constify target.
+	* i386-cygwin-tdep.c (i386_cygwin_init_abi): Likewise.
+	* i386-dicos-tdep.c (i386_dicos_osabi_sniffer): Likewise.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* solib-spu.c (spu_bfd_open): Use bfd_set_filename.
+	* spu-linux-nat.c (spu_bfd_open): Likewise.
+
+2019-09-18  Christian Biesinger  <cbiesinger@google.com>
+
+	* dwarf2loc.c: Change extern declaration of dwarf_always_disassemble
+	to bool to match definition in dwarf2read.c.
+
+2019-09-17  Christian Biesinger  <cbiesinger@google.com>
+
+	* ada-lang.c (ada_ignore_descriptive_types_p): Change to bool.
+	(print_signatures): Likewise.
+	(trust_pad_over_xvs): Likewise.
+	* arch/aarch64-insn.c (aarch64_debug): Likewise.
+	* arch/aarch64-insn.h (aarch64_debug): Likewise.
+	* arm-linux-nat.c (arm_apcs_32): Likewise.
+	* arm-linux-tdep.c (arm_apcs_32): Likewise.
+	* arm-nbsd-nat.c (arm_apcs_32): Likewise.
+	* arm-tdep.c (arm_debug): Likewise.
+	(arm_apcs_32): Likewise.
+	* auto-load.c (debug_auto_load): Likewise.
+	(auto_load_gdb_scripts): Likewise.
+	(global_auto_load): Likewise.
+	(auto_load_local_gdbinit): Likewise.
+	(auto_load_local_gdbinit_loaded): Likewise.
+	* auto-load.h (global_auto_load): Likewise.
+	(auto_load_local_gdbinit): Likewise.
+	(auto_load_local_gdbinit_loaded): Likewise.
+	* breakpoint.c (disconnected_dprintf): Likewise.
+	(breakpoint_proceeded): Likewise.
+	(automatic_hardware_breakpoints): Likewise.
+	(always_inserted_mode): Likewise.
+	(target_exact_watchpoints): Likewise.
+	(_initialize_breakpoint): Update.
+	* breakpoint.h (target_exact_watchpoints): Change to bool.
+	* btrace.c (maint_btrace_pt_skip_pad): Likewise.
+	* cli/cli-cmds.c (trace_commands): Likewise.
+	* cli/cli-cmds.h (trace_commands): Likewise.
+	* cli/cli-decode.c (add_setshow_boolean_cmd): Change int* argument
+	to bool*.
+	* cli/cli-logging.c (logging_overwrite): Change to bool.
+	(logging_redirect): Likewise.
+	(debug_redirect): Likewise.
+	* cli/cli-option.h (option_def) <boolean>: Change return type to bool*.
+	(struct boolean_option_def) <get_var_address_cb_>: Change return type
+	to bool.
+	<boolean_option_def>: Update.
+	(struct flag_option_def): Change default type of Context to bool
+	from int.
+	<flag_option_def>: Change return type of var_address_cb_ to bool*.
+	* cli/cli-setshow.c (do_set_command): Cast to bool* instead of int*.
+	(get_setshow_command_value_string): Likewise.
+	* cli/cli-style.c (cli_styling): Change to bool.
+	(source_styling): Likewise.
+	* cli/cli-style.h (source_styling): Likewise.
+	(cli_styling): Likewise.
+	* cli/cli-utils.h (struct qcs_flags) <quiet, cont, silent>: Change
+	to bool.
+	* command.h (var_types): Update comment.
+	(add_setshow_boolean_cmd): Change int* var argument to bool*.
+	* compile/compile-cplus-types.c (debug_compile_cplus_types): Change to
+	bool.
+	(debug_compile_cplus_scopes): Likewise.
+	* compile/compile-internal.h (compile_debug): Likewise.
+	* compile/compile.c (compile_debug): Likewise.
+	(struct compile_options) <raw>: Likewise.
+	* cp-support.c (catch_demangler_crashes): Likewise.
+	* cris-tdep.c (usr_cmd_cris_version_valid): Likewise.
+	(usr_cmd_cris_dwarf2_cfi): Likewise.
+	* csky-tdep.c (csky_debug): Likewise.
+	* darwin-nat.c (enable_mach_exceptions): Likewise.
+	* dcache.c (dcache_enabled_p): Likewise.
+	* defs.h (info_verbose): Likewise.
+	* demangle.c (demangle): Likewise.
+	(asm_demangle): Likewise.
+	* dwarf-index-cache.c (debug_index_cache): Likewise.
+	* dwarf2-frame.c (dwarf2_frame_unwinders_enabled_p): Likewise.
+	* dwarf2-frame.h (dwarf2_frame_unwinders_enabled_p): Likewise.
+	* dwarf2read.c (check_physname): Likewise.
+	(use_deprecated_index_sections): Likewise.
+	(dwarf_always_disassemble): Likewise.
+	* eval.c (overload_resolution): Likewise.
+	* event-top.c (set_editing_cmd_var): Likewise.
+	(exec_done_display_p): Likewise.
+	* event-top.h (set_editing_cmd_var): Likewise.
+	(exec_done_display_p): Likewise.
+	* exec.c (write_files): Likewise.
+	* fbsd-nat.c (debug_fbsd_lwp): Likewise
+	(debug_fbsd_nat): Likewise.
+	* frame.h (struct frame_print_options) <print_raw_frame_arguments>:
+	Likewise.
+	(struct set_backtrace_options) <backtrace_past_main>: Likewise.
+	<backtrace_past_entry> Likewise.
+	* gdb-demangle.h (demangle): Likewise.
+	(asm_demangle): Likewise.
+	* gdb_bfd.c (bfd_sharing): Likewise.
+	* gdbcore.h (write_files): Likewise.
+	* gdbsupport/common-debug.c (show_debug_regs): Likewise.
+	* gdbsupport/common-debug.h (show_debug_regs): Likewise.
+	* gdbthread.h (print_thread_events): Likewise.
+	* gdbtypes.c (opaque_type_resolution): Likewise.
+	(strict_type_checking): Likewise.
+	* gnu-nat.c (gnu_debug_flag): Likewise.
+	* guile/scm-auto-load.c (auto_load_guile_scripts): Likewise.
+	* guile/scm-param.c (pascm_variable): Add boolval.
+	(add_setshow_generic): Update.
+	(pascm_param_value): Update.
+	(pascm_set_param_value_x): Update.
+	* hppa-tdep.c (hppa_debug): Change to bool..
+	* infcall.c (may_call_functions_p): Likewise.
+	(coerce_float_to_double_p): Likewise.
+	(unwind_on_signal_p): Likewise.
+	(unwind_on_terminating_exception_p): Likewise.
+	* infcmd.c (startup_with_shell): Likewise.
+	* inferior.c (print_inferior_events): Likewise.
+	* inferior.h (startup_with_shell): Likewise.
+	(print_inferior_events): Likewise.
+	* infrun.c (step_stop_if_no_debug): Likewise.
+	(detach_fork): Likewise.
+	(debug_displaced): Likewise.
+	(disable_randomization): Likewise.
+	(non_stop): Likewise.
+	(non_stop_1): Likewise.
+	(observer_mode): Likewise.
+	(observer_mode_1): Likewise.
+	(set_observer_mode): Update.
+	(sched_multi): Change to bool.
+	* infrun.h (debug_displaced): Likewise.
+	(sched_multi): Likewise.
+	(step_stop_if_no_debug): Likewise.
+	(non_stop): Likewise.
+	(disable_randomization): Likewise.
+	* linux-tdep.c (use_coredump_filter): Likewise.
+	(dump_excluded_mappings): Likewise.
+	* linux-thread-db.c (auto_load_thread_db): Likewise.
+	(check_thread_db_on_load): Likewise.
+	* main.c (captured_main_1): Update.
+	* maint-test-options.c (struct test_options_opts) <flag_opt, xx1_opt,
+	xx2_opt, boolean_opt>: Change to bool.
+	* maint-test-settings.c (maintenance_test_settings_boolean): Likewise.
+	* maint.c (maintenance_profile_p): Likewise.
+	(per_command_time): Likewise.
+	(per_command_space): Likewise.
+	(per_command_symtab): Likewise.
+	* memattr.c (inaccessible_by_default): Likewise.
+	* mi/mi-main.c (mi_async): Likewise.
+	(mi_async_1): Likewise.
+	* mips-tdep.c (mips64_transfers_32bit_regs_p): Likewise.
+	* nat/fork-inferior.h (startup_with_shell): Likewise.
+	* nat/linux-namespaces.c (debug_linux_namespaces): Likewise.
+	* nat/linux-namespaces.h (debug_linux_namespaces): Likewise.
+	* nios2-tdep.c (nios2_debug): Likewise.
+	* or1k-tdep.c (or1k_debug): Likewise.
+	* parse.c (parser_debug): Likewise.
+	* parser-defs.h (parser_debug): Likewise.
+	* printcmd.c (print_symbol_filename): Likewise.
+	* proc-api.c (procfs_trace): Likewise.
+	* python/py-auto-load.c (auto_load_python_scripts): Likewise.
+	* python/py-param.c (union parmpy_variable): Add "bool boolval" field.
+	(set_parameter_value): Update.
+	(add_setshow_generic): Update.
+	* python/py-value.c (copy_py_bool_obj): Change argument from int*
+	to bool*.
+	* python/python.c (gdbpy_parameter_value): Cast to bool* instead of
+	int*.
+	* ravenscar-thread.c (ravenscar_task_support): Change to bool.
+	* record-btrace.c (record_btrace_target::store_registers): Update.
+	* record-full.c (record_full_memory_query): Change to bool.
+	(record_full_stop_at_limit): Likewise.
+	* record-full.h (record_full_memory_query): Likewise.
+	* remote-notif.c (notif_debug): Likewise.
+	* remote-notif.h (notif_debug): Likewise.
+	* remote.c (use_range_stepping): Likewise.
+	(interrupt_on_connect): Likewise.
+	(remote_break): Likewise.
+	* ser-tcp.c (tcp_auto_retry): Likewise.
+	* ser-unix.c (serial_hwflow): Likewise.
+	* skip.c (debug_skip): Likewise.
+	* solib-aix.c (solib_aix_debug): Likewise.
+	* spu-tdep.c (spu_stop_on_load_p): Likewise.
+	(spu_auto_flush_cache_p): Likewise.
+	* stack.c (struct backtrace_cmd_options) <full, no_filters, hide>:
+	Likewise.
+	(struct info_print_options) <quiet>: Likewise.
+	* symfile-debug.c (debug_symfile): Likewise.
+	* symfile.c (auto_solib_add): Likewise.
+	(separate_debug_file_debug): Likewise.
+	* symfile.h (auto_solib_add): Likewise.
+	(separate_debug_file_debug): Likewise.
+	* symtab.c (basenames_may_differ): Likewise.
+	(struct filename_partial_match_opts) <dirname, basename>: Likewise.
+	(struct info_print_options) <quiet, exclude_minsyms>: Likewise.
+	(struct info_types_options) <quiet>: Likewise.
+	* symtab.h (demangle): Likewise.
+	(basenames_may_differ): Likewise.
+	* target-dcache.c (stack_cache_enabled_1): Likewise.
+	(code_cache_enabled_1): Likewise.
+	* target.c (trust_readonly): Likewise.
+	(may_write_registers): Likewise.
+	(may_write_memory): Likewise.
+	(may_insert_breakpoints): Likewise.
+	(may_insert_tracepoints): Likewise.
+	(may_insert_fast_tracepoints): Likewise.
+	(may_stop): Likewise.
+	(auto_connect_native_target): Likewise.
+	(target_stop_and_wait): Update.
+	(target_async_permitted): Change to bool.
+	(target_async_permitted_1): Likewise.
+	(may_write_registers_1): Likewise.
+	(may_write_memory_1): Likewise.
+	(may_insert_breakpoints_1): Likewise.
+	(may_insert_tracepoints_1): Likewise.
+	(may_insert_fast_tracepoints_1): Likewise.
+	(may_stop_1): Likewise.
+	* target.h (target_async_permitted): Likewise.
+	(may_write_registers): Likewise.
+	(may_write_memory): Likewise.
+	(may_insert_breakpoints): Likewise.
+	(may_insert_tracepoints): Likewise.
+	(may_insert_fast_tracepoints): Likewise.
+	(may_stop): Likewise.
+	* thread.c (struct info_threads_opts) <show_global_ids>: Likewise.
+	(make_thread_apply_all_options_def_group): Change argument from int*
+	to bool*.
+	(thread_apply_all_command): Update.
+	(print_thread_events): Change to bool.
+	* top.c (confirm): Likewise.
+	(command_editing_p): Likewise.
+	(history_expansion_p): Likewise.
+	(write_history_p): Likewise.
+	(info_verbose): Likewise.
+	* top.h (confirm): Likewise.
+	(history_expansion_p): Likewise.
+	* tracepoint.c (disconnected_tracing): Likewise.
+	(circular_trace_buffer): Likewise.
+	* typeprint.c (print_methods): Likewise.
+	(print_typedefs): Likewise.
+	* utils.c (debug_timestamp): Likewise.
+	(sevenbit_strings): Likewise.
+	(pagination_enabled): Likewise.
+	* utils.h (sevenbit_strings): Likewise.
+	(pagination_enabled): Likewise.
+	* valops.c (overload_resolution): Likewise.
+	* valprint.h (struct value_print_options) <prettyformat_arrays,
+	prettyformat_structs, vtblprint, unionprint, addressprint, objectprint,
+	stop_print_at_null, print_array_indexes, deref_ref, static_field_print,
+	pascal_static_field_print, raw, summary, symbol_print, finish_print>:
+	Likewise.
+	* windows-nat.c (new_console): Likewise.
+	(cygwin_exceptions): Likewise.
+	(new_group): Likewise.
+	(debug_exec): Likewise.
+	(debug_events): Likewise.
+	(debug_memory): Likewise.
+	(debug_exceptions): Likewise.
+	(useshell): Likewise.
+	* windows-tdep.c (maint_display_all_tib): Likewise.
+	* xml-support.c (debug_xml): Likewise.
+
+2019-09-17  Mike Gulick  <mgulick@mathworks.com>
+
+	* source.c (prepare_path_for_appending): New function.
+	(openp): Make use of new function.
+	(find_and_open_source): Search for the compilation directory and
+	source file as a relative path beneath the directory search path.
+
+2019-09-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* source-cache.c (source_cache::get_line_charpos): Catch
+	exceptions and return false, this matches the behaviour documented
+	in the header file.
+
+2019-09-17  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-tasks.c (info_task): Remove quoting of the task's name.
+
+2019-09-16  Christian Biesinger  <cbiesinger@google.com>
+
+	* symfile.c (auto_solib_add): Replace comment with a reference
+	to the header file.
+
+2019-09-14  Christian Biesinger  <cbiesinger@google.com>
+
+	* NEWS: Mention that gdb can now be compiled with Python 3
+	on Windows.
+
+2019-09-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* maint.c (maint_print_section_data::maint_print_section_data):
+	Force use of 'float log10 (float)' by casting the argument to
+	float.
+
+2019-09-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* maint.c: Add 'cmath' include.
+	(struct maint_print_section_data): New structure.
+	(print_section_index): New function.
+	(print_bfd_section_info): Add header comment, small whitespace
+	cleanup, and update to call new print_section_index function.
+	(print_objfile_section_info): Likewise.
+	(maint_obj_section_from_bfd_section): New function.
+	(print_bfd_section_info_maybe_relocated): New function.
+	(maintenance_info_sections): Add header comment, always use
+	bfd_map_over_sections instead of ALL_OBJFILE_OSECTIONS.
+
+2019-09-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* psymtab.c (find_pc_sect_psymtab): Move baseaddr local into more
+	inner scope, add check that the objfile has psymtabs before
+	checking psymtabs_addrmap.
+	* psymtab.h (psymtab_storage) <psymtabs_addrmap>: Extend comment.
+
+2019-09-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Announce that Ada task names are now shown at more places,
+	and between quotes (except in info task output).
+	* ada-tasks.c (task_to_str): New function.
+	(display_current_task_id): Call task_to_str.
+	(task_command_1): Likewise.
+	(print_ada_task_info): In non-mi mode, Properly align headers and data
+	when task-id length is > 9 (9 is the default for a 32 bits CORE_ADDR).
+
+2019-09-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* procfs.c (procfs_target::wait) <PR_FAULTED>: Get signal from
+	prstatus.pr_lwp.pr_info instead of making it up.
+
+2019-09-11  Christian Biesinger  <cbiesinger@google.com>
+
+	* auto-load.c (auto_load_expand_dir_vars): Update.
+	* defs.h (gdb_datadir): Change to std::string.
+	(python_libdir): Likewise.
+	(relocate_gdb_directory): Change return type to std::string.
+	* guile/guile.c (gdbscm_data_directory): Update.
+	(initialize_scheme_side): Update.
+	* jit.c (jit_reader_dir): Change to std::string.
+	(jit_reader_load_command): Update.
+	* main.c (gdb_datadir): Change to std::string.
+	(python_libdir): Likewise.
+	(set_gdb_data_directory): Update.
+	(relocate_path): Change to return std::string.
+	(relocate_gdb_directory): Change to return std::string.
+	(relocate_gdbinit_path_maybe_in_datadir): Update.
+	(captured_main_1): Update.
+	* python/python.c (do_start_initialization): Update.
+	* top.c (show_gdb_datadir): Update.
+	* xml-syscall.c (xml_init_syscalls_info): Update.
+	(init_syscalls_info): Update.
+
+2019-09-11  Christian Biesinger  <cbiesinger@google.com>
+
+	* main.c (relocate_gdbinit_path_maybe_in_datadir): Factor this code
+	out of get_init_files.
+	(get_init_files): Update.
+
+2019-09-11  Christian Biesinger  <cbiesinger@google.com>
+
+	* main.c (get_init_files): Change to use std::string.
+	(captured_main_1): Update.
+	(print_gdb_help): Update.
+
+2019-09-11  Ali Tamur  <tamur@google.com>
+
+	* target-float.c (host_float_ops<T>::to_longest): Update
+	implementation.
+
+2019-09-11  Christian Biesinger  <cbiesinger@google.com>
+
+	* dbxread.c (read_dbx_symtab): Update.
+	* dwarf2read.c (load_partial_dies): Update.
+	* mdebugread.c (parse_partial_symbols): Update.
+	(handle_psymbol_enumerators): Update.
+	* psympriv.h (add_psymbol_to_list): Change type of copy_names to bool.
+	* psymtab.c (add_psymbol_to_bcache): Likewise.
+	(add_psymbol_to_list): Likewise.
+	* symtab.c (symbol_set_names): Likewise.
+	* symtab.h (symbol_set_names): Likewise.
+	* xcoffread.c (scan_xcoff_symtab): Update.
+
+2019-09-11  Tom Tromey  <tom@tromey.com>
+
+	* symfile-mem.c (symbol_file_add_from_memory): Use
+	bfd_set_filename.
+	* solib-darwin.c (darwin_bfd_open): Use bfd_set_filename.
+	* solib-aix.c (solib_aix_bfd_open): Use bfd_set_filename.
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf-index-write.c (write_psymbols): Extend error message.
+	(debug_names::insert): Add Ada code.
+	(debug_names::write_psymbols): Remove Ada check.
+	(debug_names) <m_string_obstack>: New member.
+	* dwarf2read.c (gdb_index_symbol_name_matcher): Remove.
+	(gdb_index_symbol_name_matcher::matches): Remove.
+	(mapped_index_base::find_name_components_bounds): Add "lang"
+	parameter.
+	(mapped_index_base::build_name_components): Also split names
+	according to Ada syntax.
+	(dw2_expand_symtabs_matching_symbol): Loop over languages.  Change
+	type of "match_callback".
+	(check_match, check_find_bounds_finds)
+	(dw2_expand_symtabs_matching): Update.
+	(dw2_debug_names_iterator): Add new constructor.
+	(dw2_debug_names_map_matching_symbols): New function.
+	(dw2_debug_names_expand_symtabs_matching): Update.
+	(dwarf2_debug_names_functions): Use
+	dw2_debug_names_map_matching_symbols.
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (dw2_get_file_names_reader): Add the
+	CU's file name to the results.
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (add_nonlocal_symbols): Combine calls to
+	map_matching_symbols.  Update.
+	* dwarf2read.c (dw2_map_matching_symbols): Update.
+	* psymtab.c (match_partial_symbol): Change type; update.
+	(psym_map_matching_symbols): Likewise.
+	* symfile-debug.c (debug_qf_map_matching_symbols): Change
+	type; update.
+	* symfile.h (struct quick_symbol_functions)
+	<map_matching_symbols>: Change "name" to be a lookup_name_info.
+	Remove "match".
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* psymtab.c (map_block): Remove.
+	(psym_map_matching_symbols): Use iterate_over_symbols_terminated.
+	* symtab.c (iterate_over_symbols_terminated): New function.
+	* symtab.c (iterate_over_symbols_terminated): Declare.
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_iterate_over_symbols): Return bool.
+	* language.h (struct language_defn) <la_iterate_over_symbols>:
+	Return bool.
+	* symtab.c (iterate_over_symbols): Return bool.
+	* symtab.h (iterate_over_symbols): Return bool.
+
+2019-09-10  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (aux_add_nonlocal_symbols): Change type.
+	(add_nonlocal_symbols): Update.
+	* dwarf2read.c (dw2_map_matching_symbols): Change type.
+	* psymtab.c (map_block, psym_map_matching_symbols): Change type.
+	* symfile-debug.c (debug_qf_map_matching_symbols): Change type.
+	* symfile.h (struct quick_symbol_functions) <map_matching_symbols>:
+	Change type of "callback".  Remove "data".
+
+
+2019-09-09  Ali Tamur  <tamur@google.com>
+
+	* dwarf2read.c (comp_unit_head): Update comment.                     
+	(dwarf2_dwo_name): New function declaration.                             
+	(dwarf_unit_type_name): New function declaration.                        
+	(read_comp_unit_head): Add support for new compilation units,            
+	DW_UT_partial, DW_UT_skeleton, DW_UT_split_compile, DW_UT_split_type.    
+	Particularly, DW_UT_skeleton and DW_UT_split_compile have dwo_id         
+	(currently named as "signature") in their header. Also clarify error     
+	messages.                                                                
+	(lookup_dwo_id): New function. Returns the dwo id of the given           
+	compile unit.                                                            
+	(lookup_dwo_unit): Use the new lookup_dwo_id function.                   
+	(init_cutu_and_read_dies): Use the new dwarf2_dwo_name and lookup_dwo_id 
+	functions.                                                               
+	(create_dwo_cu_reader): Use the added lookup_dwo_id function.            
+	(dwarf2_dwo_name): Get the dwo name if present.                          
+	(dwarf_unit_type_name): Convert DW_UT_* types to string for diagnostic   
+	purposes.
+
+2019-09-09  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_all_windows_info): Use ui_out.
+
+2019-09-09  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* python/python.c (do_start_initialization): Make progname_copy static,
+	to avoid a leak report.
+
+2019-09-08  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (box_win): Truncate long window titles.
+
+2019-09-07  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2read.c (struct dw2_symtab_iterator) <block_index>:
+	Change type to gdb::optional<block_enum>.
+	(dw2_symtab_iter_init): Change block_index parameter type
+	to gdb::optional<block_enum>.
+	(dw2_lookup_symbol): Change block_index parameter
+	type to block_enum.c
+	(dw2_debug_names_lookup_symbol): Likewise.
+	* psymtab.c (psym_lookup_symbol): Likewise.
+	* symfile-debug.c (debug_qf_lookup_symbol): Likewise.
+	* symfile.h (struct quick_symbol_functions) <lookup_symbol>:
+	Likewise.
+
+2019-09-06  Christian Biesinger  <cbiesinger@google.com>
+
+	* defs.h (relocate_gdb_directory): Change int to bool in
+	signature and rename flag to relocatable.
+	* main.c (relocate_path): Likewise.
+	(relocate_gdb_directory): Likewise.
+
+2019-09-06  Alan Modra  <amodra@gmail.com>
+
+	* coffread.c (coff_symfile_read): Constify filename variable.
+	* dbxread.c (dbx_symfile_init, coffstab_build_psymtabs),
+	(elfstab_build_psymtabs, stabsect_build_psymtabs): Likewise.
+	* gdb_bfd.c (gdb_bfd_close_or_warn): Likewise.
+	* solib.c (reload_shared_libraries_1): Likewise.
+	* symfile.c (reread_symbols): Likewise.
+	* solib-aix.c (solib_aix_bfd_open): Add cast for xfree of filename.
+	* solib-darwin.c (darwin_bfd_open): Likewise.
+	* symfile-mem.c (symbol_file_add_from_memory): Likewise.
+
+2019-09-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* psymtab.c (print_partial_symbols): Handle missing domain_enum
+	values MODULE_DOMAIN and COMMON_BLOCK_DOMAIN.
+
+2019-09-03  Tom Tromey  <tromey@adacore.com>
+
+	* ada-valprint.c (ada_val_print_num): Don't recurse for range
+	types.
+	(has_negatives): Unbias a range type bound.
+	* dwarf2read.c (read_subrange_type): Handle DW_AT_GNU_bias.
+	* gdbtypes.c (operator==): Handle new field.
+	(create_range_type): Add "bias" parameter.
+	(create_static_range_type, resolve_dynamic_range): Update.
+	* gdbtypes.h (struct range_bounds) <bias>: New member.
+	(create_range_type): Add bias parameter.
+	* printcmd.c (print_scalar_formatted): Unbias range types.
+	* value.c (unpack_long): Unbias range types.
+	(pack_long): Bias range types.
+
+2019-09-02  Alan Hayward  <alan.hayward@arm.com>
+
+	* solib-svr4.c (svr4_find_and_create_probe_breakpoints): Check all
+	probe arguments.
+
+2019-09-02  Alan Hayward  <alan.hayward@arm.com>
+
+	* break-catch-throw.c (fetch_probe_arguments): Use gdbarch.
+	* dtrace-probe.c (dtrace_probe::get_argument_count): Likewise.
+	* probe.c (probe_safe_evaluate_at_pc) (compute_probe_arg)
+	(compile_probe_arg): Likewise.
+	* probe.h (get_argument_count): Likewise.
+	* solib-svr4.c (solib_event_probe_action): Likewise.
+	* stap-probe.c (stap_probe::get_argument_count): Likewise.
+
+2019-09-02  Alan Hayward  <alan.hayward@arm.com>
+
+	* solib-svr4.c (svr4_find_and_create_probe_breakpoints): Move
+	code to here...
+	(svr4_create_solib_event_breakpoints): ...from here.
+
+2019-08-30  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* nat/fork-inferior.c (trace_start_error): Remove "\nError: "
+	suffix from warning message.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<refresh_all>: Don't declare.
+	* tui/tui-winsource.c (tui_source_window_base::refresh_all):
+	Remove.
+	* tui/tui-win.c (tui_refresh_all_win): Don't call refresh_all or
+	tui_show_locator_content.
+	* tui/tui-regs.h (struct tui_data_window) <refresh_all>: Don't
+	declare.
+	* tui/tui-regs.c (tui_data_window::refresh_all): Remove.
+	* tui/tui-data.h (struct tui_win_info) <refresh_all>: Don't
+	declare.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-io.c (tui_cont_sig): Don't call wrefresh.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (_initialize_tui_stack): Move later.
+	Remove unnecessary forward declarations.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (tui_locator_window::set_locator_fullname): Call
+	rerender.
+	(tui_update_locator_fullname, tui_show_frame_info): Don't call
+	tui_show_locator_content.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (tui_show_locator_content): Move lower.  Rewrite.
+	(tui_locator_window::rerender): Rewrite using body of previous
+	tui_show_locator_content.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (struct tui_locator_window) <set_locator_info,
+	set_locator_fullname>: New methods.
+	* tui/tui-stack.c (tui_locator_window::set_locator_fullname):
+	Rename from tui_set_locator_fullname.
+	(tui_locator_window::set_locator_info): Rename from
+	tui_set_locator_info.  Return bool.
+	(tui_update_locator_fullname, tui_show_frame_info): Update.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_layout): Don't call tui_refresh_all.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window): Don't
+	call touchwin.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (box_win): Assume win_info and
+	win_info->handle cannot be NULL.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_item_window) <rerender,
+	refresh_window>: Declare.
+	* tui/tui-regs.c (tui_data_window::display_registers_from): Call
+	resize.
+	(tui_data_item_window::rerender): Rename from
+	tui_display_register.
+	(tui_data_item_window::refresh_window): New method.
+	* tui/tui-layout.c (tui_gen_win_info::resize): Do nothing on
+	no-op.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window) <regs_content,
+	regs_column_count, current_group>: Move later.  Now private.
+	<get_current_group>: New method.
+	* tui/tui-regs.c (tui_reg_command): Update.
+	* tui/tui-layout.c (tui_set_layout): Update.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::display_registers_from_line)
+	(tui_data_window::rerender): Don't call
+	check_and_display_highlight_if_needed.
+	(tui_data_window::refresh_all): Remove call to
+	erase_data_content.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::last_regs_line_no)
+	(tui_data_window::display_registers_from)
+	(tui_data_window::display_reg_element_at_line)
+	(tui_data_window::display_registers_from_line): Remove checks of
+	"empty".
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window) <display_all_data>:
+	Don't declare.
+	* tui/tui-regs.c (tui_data_window::show_registers): Call
+	rerender.
+	(tui_data_window::rerender): Rename from display_all_data.
+	(tui_data_window::rerender): Remove old implementation.
+
+2019-08-30  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::display_all_data): Change
+	text.
+	* tui/tui-data.h (NO_DATA_STRING): Remove define.
+
+2019-08-29  Bernhard Wodok  <barto@gmx.net>
+	    Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	PR win32/24284
+	* mingw-hdep.c (gdb_select): Handle case when 'n' is zero.
+
+2019-08-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* symtab.c (search_symbols): Don't include MODULE_DOMAIN symbols
+	when searching for types.
+
+2019-08-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-lang.c (f_language_defn): Use f_print_typedef.
+	* f-lang.h (f_print_typedef): Declare.
+	* f-typeprint.c (f_print_typedef): Define.
+
+2019-08-27  Christian Biesinger  <cbiesinger@google.com>
+
+	* nat/linux-namespaces.c (mnsh_main): Initialize fd (to -1).
+
+2019-08-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cli/cli-utils.c (info_print_options_defs): Delete.
+	(make_info_print_options_def_group): Delete.
+	(extract_info_print_options): Delete.
+	(info_print_command_completer): Delete.
+	(info_print_args_help): Add extra parameter, and optionally
+	include text about -n flag.
+	* cli/cli-utils.h (struct info_print_options): Delete.
+	(extract_info_print_options): Delete declaration.
+	(info_print_command_completer): Delete declaration.
+	(info_print_args_help): Add extra parameter, extend header
+	comment.
+	* python/python.c (gdbpy_rbreak): Pass additional parameter to
+	search_symbols.
+	* stack.c (struct info_print_options): New type.
+	(info_print_options_defs): New file scoped variable.
+	(make_info_print_options_def_group): New static function.
+	(info_print_command_completer): New static function.
+	(info_locals_command): Update to use new local functions.
+	(info_args_command): Likewise.
+	(_initialize_stack): Add extra parameter to calls to
+	info_print_args_help.
+	* symtab.c (search_symbols): Add extra parameter, use this to
+	possibly excluse non-debug symbols.
+	(symtab_symbol_info): Add extra parameter, which is passed on to
+	search_symbols.
+	(struct info_print_options): New type.
+	(info_print_options_defs): New file scoped variable.
+	(make_info_print_options_def_group): New static function.
+	(info_print_command_completer): New static function.
+	(info_variables_command): Update to use local functions, and pass
+	extra parameter through to symtab_symbol_info.
+	(info_functions_command): Likewise.
+	(info_types_command): Pass additional argument through to
+	symtab_symbol_info.
+	(rbreak_command): Pass extra argument to search_symbols.
+	(_initialize_symtab): Add extra arguments for calls to
+	info_print_args_help, and update help text for 'info variables',
+	'whereis', and 'info functions' commands.
+	* symtab.h (search_symbols): Add extra argument to declaration.
+	* NEWS: Mention new flags.
+
+2019-08-26  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (lookup_static_symbol): Call the new function (and move
+	it down to be next to lookup_global_symbol).
+	(struct global_sym_lookup_data): Add block_enum member and rename to...
+	(struct global_or_static_sym_lookup_data): ...this.
+	(lookup_symbol_global_iterator_cb): Pass block_index instead of
+	GLOBAL_BLOCK to lookup_symbol_in_objfile and rename to...
+	(lookup_symbol_global_or_static_iterator_cb): ...this.
+	(lookup_global_or_static_symbol): New function.
+	(lookup_global_symbol): Call new function.
+
+2019-08-26  Tom de Vries  <tdevries@suse.de>
+
+	PR c++/24852
+	* break-catch-throw.c (fetch_probe_arguments): Improve error mesage
+	when pc_probe.prob == NULL.
+
+2019-08-25  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2read.c (dw2_debug_names_iterator::next): Rename local
+	variable symbol_linkage to symbol_linkage_.
+
+2019-08-25  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2read.c (dw2_debug_names_iterator::next): Use enum to
+	represent whether the symbol is static, dynamic, or we don't
+	know.
+
+2019-08-25  Yoshinori Sato <ysato@users.sourceforge.jp>
+
+        * rx-tdep.c (rx_register_names): New.
+        (rx_register_name): Delete.
+        (rx_psw_type): Delete.
+        (rx_fpsw_type): Delete.
+        (rx_register_type): Delete.
+        (rx_gdbarch_init): Convert target-descriptions.
+        (_initialize_rx_tdep): Add initialize_tdesc_rx.
+        * features/Makefile: Add rx.xml.
+        * features/rx.xml: New.
+        * features/rx.c: Generated.
+        * NEWS: Mention target description support.
+
+2019-08-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (symbol_cache_lookup): Always initialize *bsc_ptr and
+	*slot_ptr.
+
+2019-08-23  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* configure.ac: Don't check for 'dlfcn.h' (moved to
+	gdbsupport/common.m4).
+	* Makefile.in (COMMON_SFILES): Move 'gdb-dlfcn.c' to
+	'gdbsupport/'.
+	(HFILES_NO_SRCDIR): Likewise, for 'gdb-dlfcn.h'.
+	* compile/compile-c-support.c: Include
+	'gdbsupport/gdb-dlfcn.h'.
+	* gdbsupport/common.m4: Check for 'dlfcn.h'.
+	* gdb-dlfcn.c: Move to...
+	* gdbsupport/gdb-dlfcn.c: ... here.
+	* gdb-dlfcn.h: Move to...
+	* gdbsupport/gdb-dlfcn.h: ... here.
+
+2019-08-23  Sandra Loosemore  <sandra@codesourcery.com>
+
+	* nios2-tdep.c (struct reg_value): Improve comments.  Make
+	the offset field signed.
+
+2019-08-22  Christian Biesinger  <cbiesinger@google.com>
+
+	* python/lib/gdb/__init__.py (_execute_file): New function.
+	* python/python.c (python_run_simple_file): Call gdb._execute_file
+	on Windows.
+
+2019-08-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-exp.y (yylex): Remove is_a_field_of_this local variable, and
+	all uses as this was never set to anything but a zero value.
+
+2019-08-21  Bogdan Harjoc  <harjoc@gmail.com>
+
+	* cli/cli-cmds.c (with_command_1): Error out if no arguments.
+
+2019-08-21  Christian Biesinger  <cbiesinger@google.com>
+
+	* tui/tui-data.h (tui_gen_win_info): Add an =default
+	move constructor, required by some GCC versions.
+
+2019-08-21  Jinke Fan  <fanjinke51@yeah.net>
+
+	* go32-nat.c (go32_sysinfo): Add hygon_p.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window) <last_regs_line_no,
+	line_from_reg_element_no, first_reg_element_no_inline,
+	display_all_data, delete_data_content_windows,
+	erase_data_content>: Now private.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (box_win): Change type of highlight_flag.
+	(tui_unhighlight_win, tui_highlight_win)
+	(tui_win_info::make_window): Update.
+	* tui/tui-data.h (HILITE, NO_HILITE): Remove.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (PROC_PREFIX, LINE_PREFIX, PC_PREFIX)
+	(MIN_LINE_WIDTH, MIN_PROC_WIDTH, MAX_TARGET_WIDTH)
+	(MAX_PID_WIDTH): Move to tui-stack.c.
+	* tui/tui-stack.c (PROC_PREFIX, LINE_PREFIX, PC_PREFIX)
+	(MIN_LINE_WIDTH, MIN_PROC_WIDTH, MAX_TARGET_WIDTH)
+	(MAX_PID_WIDTH): Move from tui-data.h.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_make_window): Don't declare.
+	* tui/tui-wingeneral.c (box_win): Change type of win_info.
+	(box_win): Update.
+	(tui_gen_win_info::make_window): Rename from tui_make_window.
+	(tui_win_info::make_window): New method.
+	(tui_gen_win_info::make_visible): Update.
+	* tui/tui-source.c (tui_source_window::set_contents): Update.
+	* tui/tui-regs.c (tui_data_window::show_register_group): Update.
+	(tui_data_window::display_registers_from): Update.
+	* tui/tui-layout.c (tui_gen_win_info::resize): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <make_window>:
+	Declare.
+	<can_box>: Remove.
+	<title>: Remove.
+	(struct tui_win_info) <make_window>: Declare.
+	<can_box>: Now virtual.
+	<title>: New member.
+	* tui/tui-data.c (~tui_gen_win_info): Don't free title.
+	* tui/tui-command.c (tui_cmd_window::resize): Update.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window) <display_regs>: Remove.
+	* tui/tui-regs.c (tui_data_window::show_registers): Update.
+	(tui_data_window::check_register_values): Update.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window): Use
+	DISABLE_COPY_AND_ASSIGN.
+	<regs_content>: Change type, removing unique_ptr.
+	<tui_data_window>: Add move constructor.
+	* tui/tui-regs.c (tui_data_window::show_registers)
+	(tui_data_window::show_register_group)
+	(tui_data_window::display_registers_from)
+	(tui_data_window::display_registers_from)
+	(tui_data_window::first_data_item_displayed)
+	(tui_data_window::delete_data_content_windows)
+	(tui_data_window::rerender, tui_data_window::refresh_window)
+	(tui_data_window::check_register_values): Update.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window) <show_registers,
+	show_register_group>: Declare.
+	(tui_show_register_group): Don't declare.
+	* tui/tui-regs.c (tui_data_window::show_registers): Rename from
+	tui_show_registers.
+	(tui_data_window::show_register_group): Rename from
+	tui_show_register_group.
+	(tui_data_window::check_register_values, tui_reg_command):
+	Update.
+	* tui/tui-layout.c (tui_set_layout): Update.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_window) <check_register_values>:
+	Declare.
+	(tui_check_register_values): Don't declare.
+	* tui/tui-regs.c (tui_data_window::check_register_values): Rename
+	from tui_check_register_values.
+	* tui/tui-hooks.c (tui_register_changed): Update.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_reg_layout): Move later.
+	(tui_show_registers): Don't enable TUI mode or change layout.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_item_window)
+	<~tui_data_item_window>: Remove.
+	<content>: Now a unique_xmalloc_ptr.
+	* tui/tui-regs.c (tui_register_format): Return a
+	unique_xmalloc_ptr.
+	(tui_get_register): Update.
+	(~tui_data_item_window): Remove.
+	(tui_data_window::display_registers_from, tui_display_register):
+	Update.
+	* tui/tui-io.h (tui_expand_tabs): Update.
+	* tui/tui-io.c (tui_expand_tabs): Return a unique_xmalloc_ptr.
+	Remove "col" parameter.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_item_window) <value>: Remove
+	field.
+	* tui/tui-regs.c (~tui_data_item_window): Update.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_register_format, tui_get_register): Move
+	earlier.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_reg_command): Remove NULL check.
+
+2019-08-20  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.h (struct tui_source_window): Update.
+	* tui/tui-regs.c (tui_show_registers): Update.
+	* tui/tui-disasm.h (struct tui_disasm_window): Update.
+	* tui/tui-data.h (NO_SRC_STRING, NO_DISASSEM_STRING)
+	(NO_REGS_STRING): Remove defines.
+
+2019-08-20  Conrad Meyer  <cem@FreeBSD.org>
+
+	* remote.c (remote_target::remote_btrace_maybe_reopen): Avoid
+	unnecessary thread walk if remote doesn't support the packet.
+
+2019-08-19  Tom Tromey  <tromey@adacore.com>
+
+	* python/py-value.c (value_has_field): Fix indentation.
+
+2019-08-19  Tom Tromey  <tromey@adacore.com>
+
+	* printcmd.c (do_one_display, info_display_command): Update.
+	* block.h (contained_in): Return bool.  Add allow_nested
+	parameter.
+	* block.c (contained_in): Return bool.  Add allow_nested
+	parameter.
+
+2019-08-19  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* configure.ac: Disallow the combination of -static-libstdc++ and
+	source highlight.
+	* source-cache.c (get_language_name): Handle rust.
+	(source_cache::get_source_lines): Ignore highlighting exceptions.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.h (enum tui_win_type) <EXEC_INFO_WIN>: Remove.
+	* tui/tui-winsource.h (struct tui_exec_info_window): Remove.
+	(struct tui_source_window_base) <make_visible, refresh_window,
+	resize>: Remove methods.
+	<execution_info>: Remove field.
+	* tui/tui-winsource.c (tui_source_window_base::do_erase_source_content)
+	(tui_show_source_line, tui_source_window_base)
+	(~tui_source_window_base): Update.
+	(tui_source_window_base::resize)
+	(tui_source_window_base::make_visible)
+	(tui_source_window_base::refresh_window): Remove.
+	(tui_source_window_base::update_exec_info): Update.
+	* tui/tui-source.c (tui_source_window::set_contents): Update.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-hooks.c (tui_remove_hooks): Don't set
+	deprecated_query_hook.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_windows_with_addr)
+	(tui_update_source_windows_with_line): Update.
+	* tui/tui-source.h (struct tui_source_window)
+	<show_symtab_source>: Declare.
+	(tui_show_symtab_source): Don't declare.
+	* tui/tui-source.c (tui_show_symtab_source): Rename from
+	tui_show_symtab_source.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<set_contents>: Declare.
+	* tui/tui-winsource.c
+	(tui_source_window_base::update_source_window_as_is): Update.
+	* tui/tui-source.h (struct tui_source_window) <set_contents>:
+	Declare.
+	(tui_set_source_content): Don't declare.
+	* tui/tui-source.c (tui_source_window::set_contents): Rename from
+	tui_set_source_content.
+	* tui/tui-disasm.h (struct tui_disasm_window) <set_contents>:
+	Declare.
+	(tui_set_disassem_content): Don't declare.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Rename from
+	tui_set_disassem_content.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<update_breakpoint_info>: Declare.
+	(tui_update_breakpoint_info): Don't declare.
+	* tui/tui-winsource.c (tui_source_window_base::update_source_window_as_is)
+	(tui_update_all_breakpoint_info): Update.
+	(tui_source_window_base::update_breakpoint_info): Rename from
+	tui_update_breakpoint_info.
+	(tui_source_window_base::update_exec_info): Update.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<update_source_window>: Declare.
+	(tui_update_source_window): Don't declare.
+	* tui/tui-winsource.c
+	(tui_source_window_base::update_source_window): Rename from
+	tui_update_source_window.
+	(tui_source_window_base::rerender): Update.
+	* tui/tui-source.c (tui_source_window::maybe_update): Update.
+	* tui/tui-disasm.c (tui_show_disassem)
+	(tui_show_disassem_and_update_source)
+	(tui_disasm_window::maybe_update): Update.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<update_source_window_as_is>: Declare.
+	(tui_update_source_window_as_is): Don't declare.
+	* tui/tui-winsource.c (tui_update_source_window): Update
+	(tui_source_window_base::update_source_window_as_is): Rename from
+	tui_update_source_window_as_is.
+	(tui_source_window_base::refill): Update.
+	* tui/tui-source.c (tui_show_symtab_source): Update.
+	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical):
+	Update.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_update_source_window)
+	(tui_update_source_window_as_is): Remove "noerror" parameter.
+	* tui/tui-winsource.c (tui_update_source_window)
+	(tui_update_source_window_as_is): Remove "noerror" parameter.
+	(tui_update_source_windows_with_addr)
+	(tui_update_source_windows_with_line)
+	(tui_source_window_base::rerender)
+	(tui_source_window_base::refill): Update.
+	* tui/tui-source.h (tui_set_source_content)
+	(tui_show_symtab_source): Remove "noerror" parameter.
+	* tui/tui-source.c (tui_set_source_content): Remove "noerror"
+	parameter.
+	(tui_show_symtab_source): Likewise.
+	(tui_source_window::maybe_update): Update.
+	* tui/tui-disasm.c (tui_show_disassem)
+	(tui_show_disassem_and_update_source)
+	(tui_disasm_window::do_scroll_vertical)
+	(tui_disasm_window::maybe_update): Update.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_is_window_visible): Update.
+	* tui/tui-wingeneral.c (tui_make_window)
+	(tui_gen_win_info::make_visible, tui_refresh_all): Update.
+	* tui/tui-win.c (window_name_completer, tui_refresh_all_win)
+	(tui_set_focus_command, tui_all_windows_info, update_tab_width)
+	(tui_set_win_height_command, parse_scrolling_args): Update.
+	* tui/tui-source.c (tui_source_window::style_changed): Update.
+	* tui/tui-regs.c (tui_show_registers)
+	(tui_data_window::first_data_item_displayed)
+	(tui_data_window::delete_data_content_windows)
+	(tui_check_register_values, tui_reg_command): Update.
+	* tui/tui-disasm.c (tui_show_disassem): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <is_visible>: New
+	method.
+	<is_visible>: Remove field.
+	* tui/tui-data.c (tui_next_win, tui_prev_win)
+	(tui_delete_invisible_windows): Update.
+
+2019-08-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<m_has_locator>: Remove.
+	* tui/tui-layout.c (show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Update.
+
+2019-08-16  Alan Hayward  <alan.hayward@arm.com>
+
+	* NEWS (Other MI changes): New subsection.
+	* aarch64-tdep.c (aarch64_get_pc_address_flags): New function.
+	(aarch64_gdbarch_init): Add aarch64_get_pc_address_flags.
+	* arch-utils.c (default_get_pc_address_flags): New function.
+	* arch-utils.h (default_get_pc_address_flags): New declaration.
+	* gdbarch.sh: Add get_pc_address_flags.
+	* gdbarch.c: Regenerate.
+	* gdbarch.h: Likewise.
+	* stack.c (print_pc): New function.
+	(print_frame_info) (print_frame): Call print_pc.
+
+2019-08-16  Tom de Vries  <tdevries@suse.de>
+
+	* maint.c (maintenance_info_sections): Also handle !ALLOBJ case using
+	print_objfile_section_info.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-io.c (tui_puts_internal): Check TUI_CMD_WIN before
+	calling update_cmdwin_start_line.
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<do_make_visible_with_new_height, set_new_height>: Don't declare.
+	<rerender>: Declare.
+	* tui/tui-winsource.c (tui_source_window_base::update_tab_width):
+	Call rerender.
+	(tui_source_window_base::set_new_height): Remove.
+	(tui_source_window_base::rerender): Rename from
+	do_make_visible_with_new_height.
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Use
+	resize method.
+	(tui_win_info::make_invisible_and_set_new_height)
+	(tui_win_info::make_visible_with_new_height): Remove.
+	* tui/tui-stack.h (struct tui_locator_window) <rerender>:
+	Declare.
+	* tui/tui-stack.c (tui_locator_window::rerender): New method.
+	* tui/tui-regs.h (struct tui_data_window) <set_new_height,
+	do_make_visible_with_new_height>: Don't declare.
+	<rerender>: Declare.
+	* tui/tui-regs.c (tui_data_window::rerender): Rename from
+	set_new_height.
+	(tui_data_window::do_make_visible_with_new_height): Remove.
+	* tui/tui-layout.c (show_source_disasm_command, show_data): Don't
+	call tui_show_locator_content.
+	(tui_gen_win_info::resize): Call rerender.
+	(show_source_or_disasm_and_command): Don't call
+	tui_show_locator_content.
+	* tui/tui-data.h (struct tui_gen_win_info) <rerender>: New
+	method.
+	(struct tui_win_info) <rerender>: Declare.
+	<set_new_height, make_invisible_and_set_new_height,
+	make_visible_with_new_height>: Don't declare.
+	* tui/tui-data.c (tui_win_list::rerender): New method.
+	* tui/tui-command.h (struct tui_cmd_window)
+	<do_make_visible_with_new_height>: Don't declare.
+	* tui/tui-command.c
+	(tui_cmd_window::do_make_visible_with_new_height): Remove.
+
+2019-08-15  Tom Tromey  <tromey@adacore.com>
+
+	* ada-exp.y (convert_char_literal): Handle "Q%c" encoding.
+	* ada-lang.c (ada_enum_name): Likewise.
+
+2019-08-15  Christian Biesinger  <cbiesinger@google.com>
+
+	* python/lib/gdb/__init__.py (GdbOutputFile): Rename to have a
+	leading underscore.
+	(GdbOutputErrorFile): Likewise.
+	(global scope): Adjust constructor calls to GdbOutput{,Error}File
+	accordingly.
+	(execute_unwinders): Rename to have a leading underscore.
+	(auto_load_packages): Likewise.
+	(global scope): Adjust call to auto_load_packages accordingly.
+	(GdbSetPythonDirectory): Likewise.
+	* python/py-unwind.c (pyuw_sniffer): Call _execute_unwinders
+	instead of execute_unwinders.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_layout, show_source_disasm_command)
+	(show_data): Don't change window visibility.
+	(tui_gen_win_info::resize): Remove special case for command
+	window.  Use wresize, when available.
+	(show_source_or_disasm_and_command): Don't change window
+	visibility.
+	* tui/tui-command.h (struct tui_cmd_window) <resize>: Declare.
+	<make_visible>: New method.
+	* tui/tui-command.c (tui_cmd_window::resize): New method.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_iterator): New.
+	(struct tui_source_windows): New.
+	* tui/tui-winsource.c (tui_display_main): Update.
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights)
+	(new_height_ok, parse_scrolling_args): Update.
+	* tui/tui-layout.c (show_layout, show_data): Update.
+	* tui/tui-data.h (tui_source_windows, tui_clear_source_windows)
+	(tui_add_to_source_windows): Don't declare.
+	* tui/tui-data.c (source_windows, tui_source_windows)
+	(tui_clear_source_windows, tui_add_to_source_windows): Remove.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base) <resize>:
+	Rename from reset.
+	* tui/tui-winsource.c (tui_source_window_base::resize): Rename.
+	* tui/tui-layout.c (show_source_disasm_command, show_data):
+	Update.
+	(tui_gen_win_info::resize): Rename.
+	(show_source_or_disasm_and_command): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <resize>: Rename from
+	reset.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (tui_initialize_static_data): Remove.
+	* tui/tui-interp.c (tui_interp::init): Don't call
+	tui_initialize_static_data.
+	* tui/tui-data.h (tui_initialize_static_data): Don't declare.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (tui_default_win_viewport_height): Don't
+	examine tui_win_list.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_clear_source_content): Don't declare.
+	* tui/tui-winsource.c (tui_update_source_window_as_is): Don't call
+	tui_clear_source_content.
+	(tui_clear_source_content): Remove.
+	(tui_source_window_base::do_erase_source_content): Hoist call to
+	content.clear().
+	* tui/tui-stack.c (tui_show_frame_info): Don't call
+	tui_clear_source_content.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<do_erase_source_content>: New method.
+	<erase_source_content>: New method.
+	(tui_erase_source_content): Don't declare.
+	* tui/tui-winsource.c (tui_clear_source_content): Update.
+	(tui_source_window_base::do_erase_source_content): Rename from
+	tui_erase_source_content.
+	(tui_source_window_base::show_source_content): Update.
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Update.
+	* tui/tui-source.h (struct tui_source_window)
+	<erase_source_content>: New method.
+	* tui/tui-disasm.h (struct tui_disasm_window)
+	<erase_source_content>: New method.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_alloc_source_buffer): Don't declare.
+	(struct tui_source_element): Add DISABLE_COPY_AND_ASSIGN, and move
+	constructor.
+	* tui/tui-winsource.c (tui_alloc_source_buffer): Remove.
+	* tui/tui-source.c (tui_set_source_content): Update.
+	* tui/tui-disasm.c (tui_set_disassem_content): Update.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_line_is_displayed): Don't declare.
+	* tui/tui-winsource.c (tui_line_is_displayed): Move to
+	tui-source.c.
+	* tui/tui-source.h (struct tui_source_window) <line_is_displayed>:
+	Declare.
+	* tui/tui-source.c (tui_source_window::line_is_displayed): New
+	method.
+	(tui_source_window::maybe_update): Update.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_addr_is_displayed): Don't declare.
+	* tui/tui-winsource.c (tui_addr_is_displayed): Move to
+	tui-disasm.c.
+	* tui/tui-disasm.h (struct tui_disasm_window) <addr_is_displayed>:
+	Declare.
+	* tui/tui-disasm.c (tui_disasm_window::addr_is_displayed): New
+	method.
+	(tui_disasm_window::maybe_update): Update.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<maybe_update>: Declare.
+	* tui/tui-stack.c (tui_show_frame_info): Call maybe_update
+	method.
+	* tui/tui-source.h (struct tui_source_window) <maybe_update>:
+	Declare.
+	* tui/tui-source.c (tui_source_window::maybe_update): New method.
+	* tui/tui-disasm.h (struct tui_disasm_window) <maybe_update>:
+	Declare.
+	* tui/tui-disasm.c (tui_disasm_window::maybe_update): New method.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (tui_make_status_line): Use string constructor.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c: Include tui-stack.h.
+	* tui/tui-stack.h (MAX_LOCATOR_ELEMENT_LEN)
+	(struct tui_locator_window): Move from tui-data.h.
+	* tui/tui-stack.c (_locator, tui_locator_win_info_ptr)
+	(tui_initialize_static_data): Move from tui-data.c.
+	* tui/tui-data.h (MAX_LOCATOR_ELEMENT_LEN)
+	(struct tui_locator_window): Move to tui-stack.c.
+	* tui/tui-data.c (_locator, tui_locator_win_info_ptr)
+	(tui_initialize_static_data): Move to tui-stack.c.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_source_disasm_command)
+	(show_source_or_disasm_and_command): Use make_visible method, not
+	tui_make_window.
+	* tui/tui-command.h (struct tui_cmd_window) <make_visible>:
+	Remove.
+
+2019-08-15  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_make_window): Update.
+	* tui/tui-wingeneral.c (tui_make_window): Remove "box_it"
+	parameter.
+	(tui_gen_win_info::make_visible): Update.
+	* tui/tui-regs.c (tui_data_window::display_registers_from):
+	Update.
+	* tui/tui-layout.c (show_source_disasm_command)
+	(show_source_or_disasm_and_command): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <can_box>: New method.
+	(enum tui_box): Remove.
+	(struct tui_win_info) <can_box>: New method.
+	* tui/tui-command.h (struct tui_cmd_window) <can_box>: New
+	method.
+
+2019-08-15  Tom de Vries  <tdevries@suse.de>
+
+	* linux-nat-trad.c: Include gdbarch.h.
+
+2019-08-14  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aarch64_analyze_prologue): Allow any valid
+	register sizes.
+
+2019-08-14  Tom Tromey  <tromey@adacore.com>
+
+	* darwin-nat.c: Include gdbarch.h.
+	* darwin-nat-info.c: Include gdbarch.h.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_gen_win_info) <last_visible_line>:
+	Remove.
+	* tui/tui-data.c (tui_initialize_static_data): Update.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_exec_info_window)
+	<~tui_exec_info_window, maybe_allocate_content, get_content,
+	m_content>: Remove.
+	(struct tui_source_window_base) <set_exec_info_content,
+	show_exec_info_content>: Don't declare.
+	* tui/tui-winsource.c
+	(tui_exec_info_window::maybe_allocate_content): Remove.
+	(tui_source_window_base::update_exec_info): Rename from
+	set_exec_info_content.
+	(tui_source_window_base::show_exec_info_content)
+	(tui_source_window_base::update_exec_info): Remove.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_clear_exec_info_content): Don't
+	declare.
+	* tui/tui-winsource.c (tui_update_source_window_as_is)
+	(tui_update_source_windows_with_addr, tui_erase_source_content):
+	Update.
+	(tui_clear_exec_info_content): Remove.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_erase_exec_info_content): Don't
+	declare.
+	* tui/tui-winsource.c (tui_source_window_base::refresh_all): Don't
+	call tui_erase_exec_info_content.
+	(tui_clear_exec_info_content): Rename from
+	tui_erase_exec_info_content.
+	(tui_clear_exec_info_content): Delete.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<show_exec_info_content>: Declare.
+	(tui_show_exec_info_content): Don't declare.
+	* tui/tui-winsource.c
+	(tui_source_window_base::show_exec_info_content): Rename from
+	tui_show_exec_info_content.
+	(tui_source_window_base::update_exec_info): Update.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (enum tui_bp_flag, tui_bp_flags, struct tui_source_element)
+	(TUI_BP_HIT_POS, TUI_BP_BREAK_POS, TUI_EXEC_POS)
+	(TUI_EXECINFO_SIZE, tui_exec_info_content): Move ...
+	* tui/tui-winsource.h (enum tui_bp_flag, tui_bp_flags, struct
+	tui_source_element, TUI_BP_HIT_POS, TUI_BP_BREAK_POS)
+	(TUI_EXEC_POS, TUI_EXECINFO_SIZE, tui_exec_info_content):
+	... here.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<update_exec_info>: Declare.
+	(tui_update_exec_info): Don't declare.
+	* tui/tui-winsource.c (tui_update_source_window_as_is)
+	(tui_source_window_base::refresh_all)
+	(tui_update_all_breakpoint_info): Update.
+	(tui_source_window_base::update_exec_info): Rename from
+	tui_update_exec_info.
+	* tui/tui-stack.c (tui_show_frame_info): Update.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<set_exec_info_content>: Declare.
+	(tui_set_exec_info_content): Don't declare.
+	* tui/tui-winsource.c
+	(tui_source_window_base::set_exec_info_content): Rename from
+	tui_set_exec_info_content.
+	(tui_update_exec_info): Update.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<show_source_content>: Declare.
+	(tui_show_source_content): Don't declare.
+	* tui/tui-winsource.c (tui_update_source_window_as_is): Update.
+	(tui_source_window_base::show_source_content): Rename from
+	tui_show_source_content.
+	(tui_source_window_base::refresh_all): Update.
+	* tui/tui-layout.c (show_source_disasm_command)
+	(show_source_or_disasm_and_command): Update.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_erase_source_content)
+	(tui_show_source_content, tui_source_window_base::refresh_all):
+	Update.
+	* tui/tui-wingeneral.h
+	(tui_check_and_display_highlight_if_needed): Don't declare.
+	* tui/tui-wingeneral.c
+	(tui_win_info::check_and_display_highlight_if_needed): Rename from
+	check_and_display_highlight_if_needed.
+	* tui/tui-win.c (tui_rehighlight_all)
+	(tui_win_info::make_visible_with_new_height): Update.
+	* tui/tui-regs.c (tui_data_window::display_registers_from_line)
+	(tui_data_window::erase_data_content)
+	(tui_data_window::display_all_data): Update.
+	* tui/tui-data.h (struct tui_win_info)
+	<check_and_display_highlight_if_needed>: Declare.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_resize_all): Call
+	tui_delete_invisible_windows.
+	* tui/tui-layout.c (show_layout): Call
+	tui_delete_invisible_windows.
+	* tui/tui-data.h (tui_delete_invisible_windows): Declare.
+	* tui/tui-data.c (tui_delete_invisible_windows): New function.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-disasm.c (tui_show_disassem): Add assertion.  Don't call
+	tui_add_win_to_layout.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.h (tui_default_win_height): Don't declare.
+	* tui/tui-layout.c (tui_default_win_height): Now static.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_layout): Unify all layout cases into a
+	single switch.
+	(show_source_disasm_command, show_source_or_disasm_and_command):
+	Don't check current layout.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (make_all_visible): Remove.
+	(tui_make_all_invisible): Simplify.
+	* tui/tui-layout.c (tui_make_all_invisible): Move from
+	tui-wingeneral.c; simplify.
+	(show_layout): Hoist call to tui_make_all_invisible.
+	(show_data): Don't call tui_make_all_invisible.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_make_all_visible): Don't declare.
+	* tui/tui-wingeneral.c (tui_make_all_visible): Remove.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (current_layout, tui_current_layout): Move from
+	tui-data.c.
+	(show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Don't use
+	tui_set_current_layout_to.
+	* tui/tui-data.h (tui_set_current_layout_to): Don't declare.
+	* tui/tui-data.c (current_layout, tui_current_layout): Move to
+	tui-layout.c.
+	(tui_set_current_layout_to): Remove.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (tui_set_layout): Update.
+	* tui/tui-data.h (struct tui_layout_def): Remove.
+	(tui_layout_def): Don't declare.
+	* tui/tui-data.c (layout_def): Remove.
+	(tui_layout_def): Remove.
+
+2019-08-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<clear_detail>: No longer "override".
+	* tui/tui-regs.h (struct tui_data_window) <clear_detail>: Remove.
+	* tui/tui-regs.c (tui_data_window::clear_detail): Remove.
+	* tui/tui-data.h (struct tui_win_info) <clear_detail>: Remove.
+	* tui/tui-command.h (struct tui_cmd_window) <clear_detail>:
+	Remove.
+	* tui/tui-command.c (tui_cmd_window::clear_detail): Remove.
+
+2019-08-13  Tom Tromey  <tromey@adacore.com>
+
+	* tracepoint.c: Don't include readline.h or history.h.
+
+2019-08-12  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* configure.ac: Check for readline 7.
+	* NEWS: Mention readline 7 requirement.
+	* README: Update.
+
+2019-08-12  Tom Tromey  <tom@tromey.com>
+
+	* mingw-hdep.c (gdb_select): Remove readline hack.
+
+2019-08-09  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
+
+	* blockframe.c (find_pc_partial_function): Set *block to nullptr
+	when the function fails.
+
+2019-08-09  Andreas Arnez  <arnez@linux.ibm.com>
+
+	* s390-tdep.c (s390_type_align): New function.
+	(s390_gdbarch_init): Set it as type_align gdbarch method.
+
+2019-08-09  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24591
+	* dwarf2read.c (dwarf2_fetch_die_loc_sect_off): Adjust pc_high and
+	pc_low with relocation offset.
+
+2019-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* stack.c (print_frame_arg, read_frame_local, read_frame_arg)
+	(print_frame_args): Update.
+	* python/py-framefilter.c (py_print_single_arg, enumerate_args):
+	Update.
+	* mi/mi-cmd-stack.c (list_arg_or_local): Update.
+	* frame.h (struct frame_arg): Add initializers.
+	<error>: Now a unique_xmalloc_ptr.
+
+2019-08-07  Alan Hayward  <alan.hayward@arm.com>
+
+	* NEWS: Expand the Pointer Authentication entry.
+	* aarch64-tdep.c (aarch64_frame_unmask_address): Rename from this.
+	(aarch64_frame_unmask_lr): ... to this.
+	(aarch64_prologue_prev_register, aarch64_dwarf2_prev_register):
+	Call aarch64_frame_unmask_lr.
+	* frame.c (struct frame_info): Add "masked" variable.
+	(frame_set_previous_pc_masked) (frame_get_pc_masked): New functions.
+	(fprint_frame): Check for masked pc.
+	* frame.h (frame_set_previous_pc_masked) (frame_get_pc_masked): New
+	declarations.
+	* python/py-framefilter.c (py_print_frame): Check for masked pc.
+	* stack.c (print_frame): Check for masked pc.
+
+2019-08-06  Tom Tromey  <tom@tromey.com>
+
+	* stabsread.c (patch_block_stabs, read_one_struct_field)
+	(read_enum_type): Use obstack_strndup.
+	* rust-exp.y (rust_parser::copy_name): Use obstack_strndup.
+	* gdb_obstack.h (obstack_strndup): Use obstack_strndup.
+	* dwarf2read.c (guess_full_die_structure_name)
+	(anonymous_struct_prefix): Use obstack_strndup.
+	* dbxread.c (cp_set_block_scope): Use obstack_strndup.
+	* c-exp.y (yylex): Use obstack_strndup.
+	* ada-exp.y (write_object_renaming, write_ambiguous_var)
+	(write_var_or_type): Use obstack_strndup.
+
+2019-08-06  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (reread_symbols): Use obstack_strdup.
+	* stabsread.c (read_type): Use obstack_strdup.
+	* gdb_obstack.h (obstack_strdup): New overload.
+	* dwarf2read.c (dwarf2_compute_name, create_dwo_unit_in_dwp_v1)
+	(create_dwo_unit_in_dwp_v2, build_error_marker_type)
+	(dwarf2_canonicalize_name): Use obstack_strdup.
+	* dbxread.c (read_dbx_symtab): Use obstack_strdup.
+	* cp-support.c (inspect_type, replace_typedefs_qualified_name):
+	Use obstack_strdup.
+
+2019-08-06  Tom Tromey  <tom@tromey.com>
+
+	* gdb_obstack.h (obstack_strdup): Define.
+	* gdb_obstack.c (obstack_strdup): Don't define.
+
+2019-08-06  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (SYMNAME_ALLOC, process_xcoff_symbol): Use
+	obstack_strdup.
+	* typeprint.c (typedef_hash_table::find_global_typedef): Use
+	obstack_strdup.
+	* symfile.c (allocate_compunit_symtab): Use obstack_strdup.
+	* stabsread.c (common_block_start): Use obstack_strdup.
+	* objfiles.c (set_objfile_main_name, objfile): Use
+	obstack_strdup.
+	* namespace.c (add_using_directive): Use obstack_strdup.
+	* mdebugread.c (parse_symbol, parse_type): Use obstack_strdup.
+	* jit.c (finalize_symtab): Use obstack_strdup.
+	* dwarf2read.c (fixup_go_packaging, dwarf2_physname)
+	(guess_partial_die_structure_name, partial_die_info::fixup)
+	(dwarf2_name): Use obstack_strdup.
+	* coffread.c (coff_read_struct_type, coff_read_enum_type): Use
+	obstack_strdup.
+	* c-exp.y (scan_macro_expansion): Use obstack_strdup.
+	* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Use
+	obstack_strdup.
+	* ada-lang.c (ada_decode_symbol): Use obstack_strdup.
+
+2019-08-07  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* unittests/help-doc-selftests.c: New file.
+	* Makefile.in: Add the new file.
+
+2019-08-07  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-decode.h (print_doc_line): Add for_value_prefix argument.
+	* cli/cli-decode.c (print_doc_line): Likewise.  It now prints
+	the full first line, except when FOR_VALUE_PREFIX.  In this case,
+	the trailing '.' is not output, and the first character is uppercased.
+	(print_help_for_command): Update call to print_doc_line.
+	(print_doc_of_command): Likewise.
+	* cli/cli-setshow.c (deprecated_show_value_hack): Likewise.
+	* cli/cli-option.c (append_indented_doc): Do not append newline.
+	(build_help_option): Append newline after first appended_indented_doc
+	only if a second call is done.
+	(build_help): Append 2 new lines before each option, except the first
+	one.
+	* compile/compile.c (_initialize_compile): Add new lines after
+	%OPTIONS%, when not at the end of the help.
+	Change help doc or code
+	producing the help doc to respect the invariants.
+	* maint-test-options.c (_initialize_maint_test_options): Likewise.
+	Also removed the new line after 'Options:', as all other commands
+	do not put an empty line between 'Options:' and the first option.
+	* printcmd.c (_initialize_printcmd): Likewise.
+	* stack.c (_initialize_stack): Likewise.
+	* interps.c (interpreter_exec_cmd): Fix "Usage:" line that was
+	incorrectly telling COMMAND is optional.
+	* ada-lang.c (_initialize_ada_language): Change help doc or code
+	producing the help doc to respect the invariants.
+	* ada-tasks.c (_initialize_ada_tasks): Likewise.
+	* breakpoint.c (_initialize_breakpoint): Likewise.
+	* cli/cli-cmds.c (_initialize_cli_cmds): Likewise.
+	* cli/cli-logging.c (_initialize_cli_logging): Likewise.
+	* cli/cli-setshow.c (_initialize_cli_setshow): Likewise.
+	* cli/cli-style.c (cli_style_option::add_setshow_commands,
+	_initialize_cli_style): Likewise.
+	* corelow.c (core_target_info): Likewise.
+	* dwarf-index-cache.c (_initialize_index_cache): Likewise.
+	* dwarf2read.c (_initialize_dwarf2_read): Likewise.
+	* filesystem.c (_initialize_filesystem): Likewise.
+	* frame.c (_initialize_frame): Likewise.
+	* gnu-nat.c (add_task_commands): Likewise.
+	* infcall.c (_initialize_infcall): Likewise.
+	* infcmd.c (_initialize_infcmd): Likewise.
+	* interps.c (_initialize_interpreter): Likewise.
+	* language.c (_initialize_language): Likewise.
+	* linux-fork.c (_initialize_linux_fork): Likewise.
+	* maint-test-settings.c (_initialize_maint_test_settings): Likewise.
+	* maint.c (_initialize_maint_cmds): Likewise.
+	* memattr.c (_initialize_mem): Likewise.
+	* printcmd.c (_initialize_printcmd): Likewise.
+	* python/lib/gdb/function/strfns.py (_MemEq, _StrLen, _StrEq,
+	_RegEx): Likewise.
+	* ravenscar-thread.c (_initialize_ravenscar): Likewise.
+	* record-btrace.c (_initialize_record_btrace): Likewise.
+	* record-full.c (_initialize_record_full): Likewise.
+	* record.c (_initialize_record): Likewise.
+	* regcache-dump.c (_initialize_regcache_dump): Likewise.
+	* regcache.c (_initialize_regcache): Likewise.
+	* remote.c (add_packet_config_cmd, init_remote_threadtests,
+	_initialize_remote): Likewise.
+	* ser-tcp.c (_initialize_ser_tcp): Likewise.
+	* serial.c (_initialize_serial): Likewise.
+	* skip.c (_initialize_step_skip): Likewise.
+	* source.c (_initialize_source): Likewise.
+	* stack.c (_initialize_stack): Likewise.
+	* symfile.c (_initialize_symfile): Likewise.
+	* symtab.c (_initialize_symtab): Likewise.
+	* target-descriptions.c (_initialize_target_descriptions): Likewise.
+	* top.c (init_main): Likewise.
+	* tracefile-tfile.c (tfile_target_info): Likewise.
+	* tracepoint.c (_initialize_tracepoint): Likewise.
+	* tui/tui-win.c (_initialize_tui_win): Likewise.
+	* utils.c (add_internal_problem_command): Likewise.
+	* valprint.c (value_print_option_defs): Likewise.
+
+2019-08-06  Frank Ch. Eigler  <fche@redhat.com>
+
+	PR build/24886
+	* configure.ac: Drop enable-libmcheck support.
+	* configure, config.in: Rebuild.
+	* libmcheck.m4: Remove.
+	* acinclude.m4: Don't include it.
+	* Makefile.in: Don't distribute it.
+	* top.c (print_gdb_configuration): Don't mention it.
+
+2019-08-06  Tom Tromey  <tom@tromey.com>
+
+	* utils.c (set_output_style): Sometimes pass stream to
+	emit_style_escape.
+	* ui-out.h (class ui_out) <can_emit_style_escape>: Declare.
+	* record-btrace.c (btrace_insn_history): Update.
+	* mi/mi-out.h (class mi_ui_out) <can_emit_style_escape>: New
+	method.
+	* disasm.h (gdb_pretty_print_disassembler): Add uiout parameter.
+	Update initializers.
+	<m_uiout>: New field.
+	<m_di>: Move lower.
+	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):
+	Remove "uiout" parameter.
+	(dump_insns): Update.
+	* cli-out.h (class cli_ui_out) <can_emit_style_escape>: Declare.
+	* cli-out.c (cli_ui_out::can_emit_style_escape): New method.
+
+2019-08-06  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (symbol_cache_lookup): Change int to enum block_enum.
+	(error_in_psymtab_expansion): Likewise.
+	(lookup_symbol_via_quick_fns): Likewise.
+	(basic_lookup_transparent_type_quick): Likewise.
+	(basic_lookup_transparent_type_1): Likewise.
+
+2019-08-06  Tom Tromey  <tromey@adacore.com>
+
+	* source.c (last_source_error): Now bool.
+	(print_source_lines_base): Make "noprint" bool.  Only open
+	source file when last_source_visited changes.
+
+2019-08-06  Tom Tromey  <tromey@adacore.com>
+
+	* annotate.c (annotate_source_line): Use g_source_cache.
+	* source-cache.c (source_cache::get_plain_source_lines): Change
+	parameters.  Populate m_offset_cache.
+	(source_cache::ensure): New method.
+	(source_cache::get_line_charpos): New method.
+	(extract_lines): Move lower.  Change parameters.
+	(source_cache::get_source_lines): Move lower.
+	* source-cache.h (class source_cache): Update comment.
+	<get_line_charpos>: New method.
+	<get_source_lines>: Update comment.
+	<clear>: Clear m_offset_cache.
+	<get_plain_source_lines>: Change parameters.
+	<ensure>: New method
+	<m_offset_cache>: New member.
+	* source.c (forget_cached_source_info_for_objfile): Update.
+	(info_source_command): Use g_source_cache.
+	(find_source_lines, open_source_file_with_line_charpos): Remove.
+	(print_source_lines_base, search_command_helper): Use g_source_cache.
+	* source.h (open_source_file_with_line_charpos): Don't declare.
+	* symtab.h (struct symtab) <nlines, line_charpos>: Remove.
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical):
+	Use g_source_cache.
+
+2019-08-06  Tom Tromey  <tromey@adacore.com>
+
+	* source-cache.c (source_cache::get_plain_source_lines):
+	Remove "first_line" and "last_line" parameters.
+	(source_cache::get_source_lines): Cache plain text.
+	* source-cache.h (class source_cache)
+	<get_plain_source_lines>: Update.
+
+2019-08-06  Tom Tromey  <tromey@adacore.com>
+
+	* source-cache.c (extract_lines): No longer a method.
+	Changed type of parameter.  Include final newline.
+	(selftests::extract_lines_test): New function.
+	(_initialize_source_cache): Likewise.
+	* source-cache.h (class source_cache)
+	<extract_lines>: Don't declare.
+
+2019-08-06  Tom Tromey  <tromey@adacore.com>
+
+	* breakpoint.c (init_breakpoint_sal): Update.
+	(breakpoint): Update.
+	* breakpoint.h (struct breakpoint) <filter>: Now a
+	unique_xmalloc_ptr.
+
+2019-08-05  Christian Biesinger  <cbiesinger@google.com>
+
+	* NEWS: Mention dictionary access on blocks.
+	* python/py-block.c (blpy_getitem): New function.
+	(block_object_as_mapping): New struct.
+	(block_object_type): Use new struct for tp_as_mapping field.
+
+2019-08-05  Christian Biesinger  <cbiesinger@google.com>
+
+	* objfiles.h (objfile): Add a comment describing partial symbols.
+
+2019-08-05  Tom Tromey  <tromey@adacore.com>
+
+	* compile/compile.c (_initialize_compile): Use _(), not N_().
+	* thread.c (_initialize_thread): Use _(), not N_().
+	* stack.c (_initialize_stack): Use _(), not N_().
+	* printcmd.c (_initialize_printcmd): Use _(), not N_().
+
+2019-08-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2read.c (struct dw2_symtab_iterator):
+	<want_specific_block>: Remove.
+	<block_index>: Change type to gdb::optional.
+	(dw2_symtab_iter_init): Remove WANT_SPECIFIC_BLOCK parameter,
+	change type of BLOCK_INDEX parameter to gdb::optional.
+	(dw2_symtab_iter_next): Re-write in function of gdb::optional.
+	(dw2_lookup_symbol): Don't pass argument for
+	WANT_SPECIFIC_BLOCK.
+	(dw2_expand_symtabs_for_function): Don't pass argument for
+	WANT_SPECIFIC_BLOCK, pass empty optional for BLOCK_INDEX.
+	(class dw2_debug_names_iterator)
+	<dw2_debug_names_iterator>: Remove WANT_SPECIFIC_BLOCK
+	parameter, change BLOCK_INDEX type to gdb::optional.
+	<m_want_specific_block>: Remove.
+	<m_block_index>: Change type to gdb::optional.
+	(dw2_debug_names_iterator::next): Change type of IS_STATIC to
+	gdb::optional.  Re-write in function of gdb::optional.
+	(dw2_debug_names_lookup_symbol): Don't pass argument for
+	WANT_SPECIFIC_BLOCK.
+	(dw2_debug_names_expand_symtabs_for_function): Don't pass
+	argument for WANT_SPECIFIC_BLOCK, pass empty optional for
+	BLOCK_INDEX.
+
+2019-08-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+        * NEWS: Mention changes to "info sources" command.
+
+2019-08-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* symtab.c (filename_partial_match_opts): New struct type.
+	(struct output_source_filename_data): New members
+	regexp, c_regexp, partial_match.
+	(output_source_filename): Use new members to decide to print file.
+	(info_sources_option_defs): New variable.
+	(make_info_sources_options_def_group, print_info_sources_header,
+	info_sources_command_completer):
+	New functions.
+	(info_sources_command): Read new optional arguments.
+	(_initialize_symtab): Update info sources help.
+
+2019-08-02  Alexandre Oliva <oliva@adacore.com>
+
+	* ada-lang.c (exception_support_info_v0): Renamed from...
+	(default_exception_support_info): ... this.  Create new
+	definition for v1.
+	(ada_has_this_exception_support): Look up catch_handlers_sym.
+	(ada_exception_support_info_sniffer): Try v0 after default.
+
+2019-08-01  Tom Tromey  <tromey@adacore.com>
+
+	* ia64-libunwind-tdep.h (struct libunwind_descr): Include
+	gdbarch.h.
+
+2019-08-01  Christian Biesinger  <cbiesinger@google.com>
+
+	* s12z-tdep.c: Fix include path for s12z-opc.h.
+
+2019-08-01  Alan Hayward  <alan.hayward@arm.com>
+
+	* NEWS: Require GNU make 3.82.
+
+2019-07-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_copy_win, tui_box_win): Don't
+	declare.
+
+2019-07-30  Tom Tromey  <tromey@adacore.com>
+
+	* block.c (contained_in): Remove BLOCK_FUNCTION check.
+
+2019-07-30  Kevin Buettner  <kevinb@redhat.com>
+
+	* printcmd.c (print_address_symbolic): Print negative offsets.
+	(build_address_symbolic): Force signed arithmetic when computing
+	offset.
+
+2019-07-30  Christian Biesinger  <cbiesinger@google.com>
+
+	PR/24474: Add a function to lookup static variables.
+	* NEWS: Mention this new function.
+	* python/py-symbol.c (gdbpy_lookup_static_symbol): New function.
+	* python/python-internal.h (gdbpy_lookup_static_symbol): New function.
+	* python/python.c (python_GdbMethods): Add new function.
+
+2019-07-29  Christian Biesinger  <cbiesinger@google.com>
+
+	* NEWS: Mention new functions Objfile.lookup_{global,static}_symbol.
+	* python/py-objfile.c (objfpy_lookup_global_symbol): New function.
+	(objfpy_lookup_static_symbol): New function.
+	(objfile_object_methods): Add new functions.
+
+2019-07-29  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention 'set|show print frame-info'.  Mention new
+	'presence' value for 'frame-arguments'.  Mention new '-frame-info'
+	backtrace argument.  Mention that python frame filtering code
+	is now consistent with what 'backtrace' command prints.
+
+2019-07-29  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* frame.h (enum print_what): New value 'SHORT_LOCATION', update
+	comments.
+	(print_frame_info_auto, print_frame_info_source_line,
+	print_frame_info_location, print_frame_info_source_and_location,
+	print_frame_info_location_and_address, print_frame_info_short_location):
+	New declarations.
+	(struct frame_print_options): New member print_frame_info.
+	* extension.h (enum ext_lang_frame_args): New value CLI_PRESENCE.
+	* stack.h (get_user_print_what_frame_info): New declaration.
+	(frame_show_address): New declaration.
+	* stack.c (print_frame_arguments_choices): New value 'presence'.
+	(print_frame_info_auto, print_frame_info_source_line,
+	print_frame_info_location, print_frame_info_source_and_location,
+	print_frame_info_location_and_address, print_frame_info_short_location,
+	print_frame_info_choices, print_frame_info_print_what): New definitions.
+	(print_frame_args): Only print dots for args if print frame-arguments
+	is 'presence'.
+	(frame_print_option_defs): New element for "frame-info".
+	(get_user_print_what_frame_info): New function.
+	(frame_show_address): Make non static.  Move comment to stack.h.
+	(print_frame_info_to_print_what): New function.
+	(print_frame_info): Update comment.  Use fp_opts.print_frame_info
+	to decide what to print.
+	(backtrace_command_1): Handle the new print_frame_arguments_presence
+	value.
+	(_initialize_stack): Call add_setshow_enum_cmd for frame-info.
+	* python/py-framefilter.c (py_print_args): Handle CLI_PRESENCE.
+	(py_print_frame): In non-mi mode, use LOCATION as default for
+	print_what, similarly to frame information printed directly by
+	backtrace command. Handle frame-info user option in non MI mode.
+
+2019-07-27  Kevin Buettner  <kevinb@redhat.com>
+
+	* linux-thread-db.c (thread_db_target::thread_handle_to_thread_info):
+	Add case for debugging 32-bit target on 64-bit host.  Revise
+	comment.
+
+2019-07-27  Kevin Buettner  <kevinb@redhat.com>
+
+	* infrun.c (fill_in_stop_func): Use find_pc_partial_function
+	instead of find_function_entry_range_from_pc.
+
+2019-07-27  Kevin Buettner  <kevinb@redhat.com>
+
+	* stack.c (find_frame_funname): Remove code which preferred
+	minsym over symtab sym in "certain pathological cases".
+
+	* valprint.h (build_address_symbolic): Add "prefer_sym_over_minsym"
+	parameter.  Change type of "do_demangle" to bool.
+	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):
+	Pass suitable "prefer_sym_over_minsym" flag to
+	build_address_symbolic().  Don't output "+" for negative offsets.
+	* printcmd.c (print_address_symbolic): Update invocation of
+	build_address_symbolic to include a "prefer_sym_over_minsym"
+	flag.
+	(build_address_symbolic): Add "prefer_sym_over_minsym" parameter.
+	Restrict cases in which use of minimal symbol is preferred to that
+	of a found symbol.  Update comments.
+
+	* dwarf2-frame.c (dwarf2_frame_cache): Don't decode FDE instructions
+	for entry pc when entry pc is out of range for that FDE.
+
+2019-07-26  Brian Callahan  <bcallah@openbsd.org>
+
+	PR gdb/24839:
+	* obsd-nat.c (obsd_nat_target::pid_to_str): Fix typo in return
+	type.
+
+2019-07-25  Christian Biesinger  <cbiesinger@google.com>
+
+	* python/py-objfile.c (add_separate_debug_file): Fix comment about
+	this function's Python signature.
+
+
+2019-07-24  Christian Biesinger  <cbiesinger@google.com>
+
+	* compile/compile-object-load.c (compile_object_load): Pass GLOBAL_SCOPE.
+	* solib-spu.c (spu_lookup_lib_symbol): Pass GLOBAL_SCOPE.
+	* solib-svr4.c (elf_lookup_lib_symbol): Pass GLOBAL_SCOPE.
+	* symtab.c (lookup_global_symbol_from_objfile): Add a scope parameter.
+	* symtab.h (lookup_global_symbol_from_objfile): Likewise.
+
+
+2019-07-24  Yoshinori Sato  <ysato@users.sourceforge.jp>
+
+	* h8300-tdep.c (h8300_register_name_common): New.
+	h8300_register_name): Use h8300_register_name_common.
+	(h8300s_register_name): Likewise.
+	(h8300sx_register_name): Likewise.
+	(h8300h_register_nam): New.
+	(h8300_gdbarch_init): Use h8300h_register_name in h8300h machine.
+
+
+2019-07-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* arm-tdep.c (arm_skip_cmse_entry): New function.
+	(arm_is_sgstubs_section): New function.
+	(arm_skip_stub): Add call to arm_skip_cmse_entry function.
+
+2019-07-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_win_info::make_invisible_and_set_new_height):
+	Don't self-assign.
+
+2019-07-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* c-typeprint.c (c_print_typedef): Pass -1 instead of 0 to
+	type_print.
+
+2019-07-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* symtab.c (search_symbols): Adjust msymbol matching type arrays
+	so that GDB doesn't match any msymbols when searching in the
+	TYPES_DOMAIN.
+	(print_symbol_info): Print using typedef_print or type_print based
+	on the type of the symbol.  Add updated FIXME comment moved from...
+	(_initialize_symtab): ... move and update FIXME comment to above.
+
+2019-07-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention adding -q option to "info types".
+	* symtab.c (struct info_types_options): New struct.
+	(info_types_options_defs): New variable.
+	(make_info_types_options_def_group): New function.
+	(info_types_command): Use gdb::option framework to parse options.
+	(info_types_command_completer): New function.
+	(_initialize_symtab): Extend the help text on "info types" and
+	register command completer.
+
+2019-07-21  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (lookup_symbol_in_objfile_symtabs): Change int to block_enum.
+	(lookup_symbol_in_objfile): Change int to block_enum and add a
+	gdb_assert to make sure block_index is GLOBAL_BLOCK or STATIC_BLOCK.
+
+2019-07-20  Christian Biesinger  <cbiesinger@google.com>
+
+	* MAINTAINERS (Write After Approval): Add self.
+
+2019-07-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_push_dummy_code): Write a 4-byte nop
+	instruction to the dummy code region.
+
+2019-07-19  Tom Tromey  <tromey@adacore.com>
+
+	* contrib/ari/gdb_ari.sh: Mention C++11, not ISO C 90.
+	(ARGSUSED, PARAMS, __func__): Remove rules.
+
+2019-07-19  Alan Hayward  <alan.hayward@arm.com>
+
+	* arm-tdep.c (_initialize_arm_tdep): Remove xml tests.
+	* features/arm/arm-with-iwmmxt.c: Remove.
+	* features/arm/arm-with-iwmmxt.xml: Remove.
+	* features/arm/arm-with-m-fpa-layout.c: Remove.
+	* features/arm/arm-with-m-fpa-layout.xml: Remove.
+	* features/arm/arm-with-m-vfp-d16.c: Remove.
+	* features/arm/arm-with-m-vfp-d16.xml: Remove.
+	* features/arm/arm-with-m.c: Remove.
+	* features/arm/arm-with-m.xml: Remove.
+	* features/arm/arm-with-neon.c: Remove.
+	* features/arm/arm-with-neon.xml: Remove.
+	* features/arm/arm-with-vfpv2.c: Remove.
+	* features/arm/arm-with-vfpv2.xml: Remove.
+	* features/arm/arm-with-vfpv3.c: Remove.
+	* features/arm/arm-with-vfpv3.xml: Remove.
+
+2019-07-19  Alan Hayward  <alan.hayward@arm.com>
+
+	* arm-tdep.c (_initialize_arm_tdep): Add xml regression tests.
+
+2019-07-19  Alan Hayward  <alan.hayward@arm.com>
+
+	* arch/aarch32.c (aarch32_create_target_description): Create
+	target descriptions using features.
+	* arch/arm.c (arm_create_target_description)
+	(arm_create_mprofile_target_description): Likewise.
+	* arm-tdep.c (_initialize_arm_tdep): Remove tdesc init calls.
+
+2019-07-19  Alan Hayward  <alan.hayward@arm.com>
+
+	* Makefile.in: Add new files.
+	* aarch32-tdep.c: New file.
+	* aarch32-tdep.h: New file.
+	* aarch64-linux-nat.c (aarch64_linux_nat_target::read_description):
+	Call aarch32_read_description.
+	* arch/aarch32.c: New file.
+	* arch/aarch32.h: New file.
+	* arch/arm.c (arm_create_target_description)
+	(arm_create_mprofile_target_description): New function.
+	* arch/arm.h (arm_fp_type, arm_m_profile_type): New enum.
+	(arm_create_target_description)
+	(arm_create_mprofile_target_description): New declaration.
+	* arm-fbsd-tdep.c (arm_fbsd_read_description_auxv): Call
+	read_description functions.
+	* arm-linux-nat.c (arm_linux_nat_target::read_description):
+	Likewise.
+	* arm-linux-tdep.c (arm_linux_core_read_description): Likewise.
+	* arm-tdep.c (tdesc_arm_list): New variable.
+	(arm_register_g_packet_guesses): Call create description functions.
+	(arm_read_description) (arm_read_mprofile_description): New
+	function.
+	* arm-tdep.h (arm_read_description)
+	(arm_read_mprofile_description): Add declaration.
+	* configure.tgt: Add new files.
+
+2019-07-18  Guillaume LABARTHE  <guillaume.labarthe@gmail.com>
+
+	* top.c (new_ui_command): Open specified terminal just once.
+
+2019-07-18  Tom Tromey  <tromey@adacore.com>
+
+	* symtab.c (main_name): Constify return type.
+	* symfile.c (set_initial_language): Update.
+	* symtab.h (main_name): Constify return type.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_window)
+	(tui_update_source_window_as_is)
+	(tui_update_source_windows_with_line): Remove return.
+	* tui/tui-disasm.c (tui_show_disassem)
+	(tui_show_disassem_and_update_source): Remove return.
+	* tui/tui.c (tui_reset): Remove return.
+	* tui/tui-wingeneral.c
+	(tui_check_and_display_highlight_if_needed): Remove return.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (parse_scrolling_args): Throw separate errors.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_exec_info_window)
+	(struct tui_source_window_base): Move from tui-data.h.
+	* tui/tui-winsource.c: Move many method definitions from
+	elsewhere.  Remove "structuring" comments.
+	* tui/tui-wingeneral.c (tui_source_window_base::make_visible)
+	(tui_source_window_base::refresh_window): Move to
+	tui-winsource.c.
+	* tui/tui-win.c (tui_source_window_base::refresh_all)
+	(tui_source_window_base::update_tab_width)
+	(tui_source_window_base::set_new_height)
+	(tui_source_window_base::do_make_visible_with_new_height): Move to
+	tui-winsource.c.
+	* tui/tui-source.h: Update.
+	* tui/tui-source.c (tui_source_window_base::reset): Move to
+	tui-winsource.c.
+	* tui/tui-disasm.h: Update.
+	* tui/tui-data.h (struct tui_exec_info_window): Move to
+	tui-winsource.h.
+	(struct tui_source_window_base): Likewise.
+	* tui/tui-data.c (tui_source_window_base::clear_detail)
+	(tui_source_window_base, ~tui_source_window_base): Move to
+	tui-winsource.c.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_resize_all)
+	(tui_source_window_base::update_tab_width)
+	(tui_adjust_win_heights): Update.
+	(tui_win_info::make_invisible_and_set_new_height): Rename from
+	make_invisible_and_set_new_height.
+	* tui/tui-data.h (struct tui_win_info)
+	<make_invisible_and_set_new_height>: New method.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c: Update.
+	* tui/tui-source.h (struct tui_source_window): Move from
+	tui-data.h.
+	* tui/tui-layout.c: Update.
+	* tui/tui-disasm.c: Update.
+	* tui/tui-data.h (struct tui_source_window): Move to
+	tui-source.h.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-disasm.h (struct tui_disasm_window): Move from
+	tui-data.h.
+	* tui/tui-data.h (struct tui_disasm_window): Move to
+	tui-disasm.h.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_item_window): Move from
+	tui-data.h.
+	* tui/tui-regs.c (tui_data_item_window): Move from tui-data.c.
+	* tui/tui-data.h (struct tui_data_item_window): Move to
+	tui-regs.h.
+	* tui/tui-data.c (~tui_data_item_window): Move to tui-regs.c.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c: Update.
+	* tui/tui-win.c (tui_cmd_window::do_make_visible_with_new_height)
+	(tui_cmd_window::max_height): Move to tui-command.c.
+	* tui/tui-layout.c: Update.
+	* tui/tui-data.h (struct tui_cmd_window): Move to tui-command.h.
+	* tui/tui-data.c (tui_cmd_window::clear_detail): Move to
+	tui-command.c.
+	* tui/tui-command.h (struct tui_cmd_window): Move from
+	tui-data.h.
+	* tui/tui-command.c: Remove "structuring" comments.
+	(tui_cmd_window::clear_detail)
+	(tui_cmd_window::do_make_visible_with_new_height)
+	(tui_cmd_window::max_height): Move from elsewhere.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-io.c (tui_dispatch_ctrl_char): Move from tui-command.c.
+	Now static.
+	* tui/tui-command.h (tui_dispatch_ctrl_char): Don't declare.
+	* tui/tui-command.c (tui_dispatch_ctrl_char): Move to tui-io.c.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c: Update.
+	* tui/tui-wingeneral.c (tui_data_window::refresh_window): Move to
+	tui-regs.c.
+	* tui/tui-windata.h: Remove file.
+	* tui/tui-windata.c: Remove file.
+	* tui/tui-win.c (tui_data_window::set_new_height)
+	(tui_data_window::do_make_visible_with_new_height): Move to
+	tui-regs.c.
+	* tui/tui-regs.h (struct tui_data_window): Move from tui-data.h.
+	* tui/tui-regs.c: Remove "structuring" comments.
+	(tui_data_window::first_data_item_displayed)
+	(tui_data_window::delete_data_content_windows)
+	(tui_data_window::erase_data_content)
+	(tui_data_window::display_all_data)
+	(tui_data_window::refresh_all)
+	(tui_data_window::do_scroll_vertical)
+	(tui_data_window::clear_detail, tui_data_window::set_new_height)
+	(tui_data_window::do_make_visible_with_new_height)
+	(tui_data_window::refresh_window): Move from elsewhere.
+	(_initialize_tui_regs): Move to end of file.
+	* tui/tui-layout.c: Update.
+	* tui/tui-hooks.c: Update.
+	* tui/tui-data.h (struct tui_data_window): Move to tui-regs.h.
+	* tui/tui-data.c (tui_data_window::clear_detail): Move to
+	tui-regs.c.
+	* Makefile.in (SUBDIR_TUI_SRCS): Remove tui-windata.c.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-io.c (tui_puts_internal): Call wrefresh if newline is
+	seen.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_source_window_base::set_new_height)
+	(tui_source_window_base::do_make_visible_with_new_height): Use
+	m_has_locator field directly.
+	* tui/tui-data.h (struct tui_win_info) <has_locator>: Remove
+	method.
+	(struct tui_source_window_base) <has_locator>: Likewise.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_make_visible, tui_make_invisible):
+	Don't declare.
+	* tui/tui-wingeneral.c (tui_make_visible, tui_make_invisible):
+	Remove.
+	* tui/tui-win.c (tui_source_window_base::set_new_height)
+	(tui_source_window_base::set_new_height)
+	(make_invisible_and_set_new_height)
+	(tui_source_window_base::do_make_visible_with_new_height)
+	(tui_source_window_base::do_make_visible_with_new_height):
+	Update.
+	* tui/tui-layout.c (show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Update.
+	* tui/tui-layout.c (show_layout): Update.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (make_data_window): Remove.
+	(show_data): Unify creation and re-initialization cases.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (make_source_window, make_disasm_window):
+	Remove.
+	(show_data): Unify creation and re-initialization cases.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (make_command_window): Remove.
+	(show_source_disasm_command, show_source_or_disasm_and_command):
+	Unify creation and re-initialization cases.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_source_or_disasm_and_command): Unify
+	creation and re-initialization cases.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_get_register): Return void.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_gen_win_info::make_visible):
+	Simplify.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_source_disasm_command): Simplify window
+	resetting.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.h (tui_set_layout_by_name): Don't declare.
+	* tui/tui-regs.c (tui_reg_layout): New function.
+	(tui_show_registers, tui_reg_command): Use it.
+	* tui/tui-layout.c (LAYOUT_USAGE): Remove.
+	(tui_layout_command): Rename from tui_set_layout_by_name.  Change
+	parameters.
+	(tui_layout_command): Remove.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.h (tui/tui-layout): Return void.
+	* tui/tui-layout.c (tui_set_layout): Return void.  Add assert.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_source_disasm_command, show_data):
+	Update.
+	(reset_locator): Remove.
+	(show_source_or_disasm_and_command): Update.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.c (tui_source_window_base::reset): Remove
+	win_type parameter.
+	* tui/tui-layout.c (make_command_window, make_source_window)
+	(make_disasm_window, make_data_window)
+	(show_source_disasm_command, show_data, tui_gen_win_info::reset)
+	(reset_locator, show_source_or_disasm_and_command): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <reset>: Remove
+	win_type parameter.
+	(struct tui_source_window_base) <reset>: Likewise.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_source_disasm_command): Use
+	reset_locator.
+	(reset_locator): New function.
+	(init_and_make_win): Remove.
+	(show_source_or_disasm_and_command): Use reset_locator.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_set_exec_info_content): Remove
+	condition.
+	* tui/tui-wingeneral.c (tui_source_window_base::make_visible):
+	Remove condition.
+	* tui/tui-source.c (tui_source_window_base::reset): New method.
+	* tui/tui-layout.c (make_command_window): Don't call
+	init_and_make_win.
+	(make_source_window, make_disasm_window): Don't call
+	make_source_or_disasm_window.
+	(make_data_window): Don't call init_and_make_win.  Change calling
+	convention.
+	(show_source_disasm_command, show_data): Simplify.
+	(make_source_or_disasm_window): Remove.
+	(show_source_or_disasm_and_command): Simplify.
+	* tui/tui-data.h (struct tui_gen_win_info) <reset>: Now virtual.
+	(struct tui_source_window_base) <reset>: Likewise.
+	<execution_info>: Remove initializer.
+	* tui/tui-data.c (tui_source_window_base): Initialize
+	execution_info.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (tui_set_layout): Remove regs_populate
+	variable.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_rl_other_window): Update.
+	* tui/tui-wingeneral.c (tui_data_window::refresh_window): Call
+	superclass method first.  Always iterate over regs_content.
+	(tui_unhighlight_win, tui_highlight_win): Use refresh_window
+	method.
+	* tui/tui-win.c (tui_set_focus_command): Update.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_set_focus_command): Rename from
+	tui_set_focus.  Call tui_enable.
+	(tui_set_focus_command): Remove.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_show_exec_info_content): Don't call
+	refresh_window.
+	* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window): Call
+	touchwin.
+	(tui_data_window::refresh_window): Call refresh_window on data
+	items.  Always call superclass refresh_window.
+	(tui_win_info::refresh): Remove.
+	(tui_source_window_base::refresh_window): Update.
+	(tui_refresh_all): Update.
+	* tui/tui-layout.c (show_source_disasm_command): Remove call to
+	refresh_window.
+	(show_source_or_disasm_and_command): Likewise.
+	* tui/tui-data.h (struct tui_win_info) <refresh>: Remove.
+	(struct tui_source_window_base) <refresh>: Likewise.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_clear_source_content)
+	(tui_show_source_content): Update.
+	* tui/tui-source.c (tui_source_window::showing_source_p): Check
+	whether content is empty.
+	* tui/tui-data.h (struct tui_source_window_base) <content_in_use>:
+	Remove.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_erase_source_content): Clear the
+	window's contents.
+	* tui/tui-source.h (tui_set_source_content_nil): Don't declare.
+	* tui/tui-source.c (tui_set_source_content_nil): Remove.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (UNDEFINED_ITEM): Remove define.
+	(struct tui_data_item_window): Update.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (MAX_CONTENT_COUNT, TUI_NULL_STR)
+	(DEFAULT_HISTORY_COUNT, WITH_LOCATOR, NO_LOCATOR): Remove
+	defines.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_erase_source_content)
+	(tui_clear_source_content): Remove "display_prompt" parameter.
+	* tui/tui-winsource.c (tui_update_source_window_as_is)
+	(tui_update_source_windows_with_addr): Update.
+	(tui_clear_source_content): Remove "display_prompt" parameter.
+	(tui_erase_source_content): Likewise.  Simplify.
+	(tui_show_source_content): Update.
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Update.
+	* tui/tui-stack.c (tui_show_frame_info): Update.
+	* tui/tui-data.h (EMPTY_SOURCE_PROMPT, NO_EMPTY_SOURCE_PROMPT):
+	Remove defines.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_window_as_is): Update.
+	* tui/tui-disasm.h (tui_set_disassem_content): Add win_info
+	parameter.
+	* tui/tui-disasm.c (tui_set_disassem_content): Add win_info
+	parameter.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_clear_source_content)
+	(tui_show_source_content, tui_show_exec_info_content)
+	(tui_clear_exec_info_content): Update.
+	* tui/tui-stack.c (tui_show_locator_content): Update.
+	(tui_show_frame_info): Update.
+	* tui/tui-source.h (tui_source_window): Don't declare.
+	* tui/tui-source.c (tui_source_window::showing_source_p): Rename
+	from tui_source_is_displayed.
+	* tui/tui-data.h (struct tui_gen_win_info) <content_in_use>:
+	Remove field.
+	(struct tui_source_window_base) <content_in_use>: New field.  Now
+	bool.
+	(struct tui_source_window) <showing_source_p>: New method.
+	(TUI_SRC_WIN): Change cast.
+	* tui/tui-data.c (tui_initialize_static_data): Update.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_breakpoint_info): Use
+	location_matches_p.
+	* tui/tui-source.c (tui_source_window::location_matches_p): New
+	method.
+	* tui/tui-disasm.c (tui_disasm_window::location_matches_p): New
+	method.
+	* tui/tui-data.h (struct tui_source_window_base)
+	<location_matches_p>: New method.
+	(struct tui_source_window, struct tui_disasm_window)
+	<location_matches_p>: Likewise.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_set_win_height_command): Rename from
+	tui_set_win_height.
+	(tui_set_win_height_command): Remove.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.c (tui_source_window): New constructor.  Add
+	observer.
+	(~tui_source_window): New destructor.
+	(tui_source_window::style_changed): New method.
+	* tui/tui-hooks.c (tui_redisplay_source): Remove.
+	(tui_attach_detach_observers): Update.
+	* tui/tui-data.h (struct tui_source_window): Make constructor not
+	inline.  Add destructor.
+	(struct tui_source_window) <style_changed>: New method.
+	<m_observable>: New member.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.c (tui_clear_source_windows_detail): Fix typo.
+	* tui/tui-win.c (tui_resize_all): Fix typo.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_refresh_all): Update.
+	* tui/tui-wingeneral.c (make_all_visible): Use foreach.
+	(tui_refresh_all): Remove "list" parameter.  Use foreach.
+	* tui/tui-win.c (window_name_completer): Use foreach.
+	(tui_refresh_all_win, tui_rehighlight_all, tui_all_windows_info)
+	(update_tab_width): Likewise.
+	* tui/tui-layout.c (show_layout): Update.
+	* tui/tui-data.h (class tui_window_iterator): New.
+	(struct all_tui_windows): New.
+	* tui/tui-data.c (tui_partial_win_by_name): Use foreach.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_reg_next, tui_reg_prev): Add "current_group"
+	parameter.  Don't reference globals.
+	(tui_reg_command): Update.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_show_registers): Simplify.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_show_registers): Update.
+	(tui_show_register_group): Add win_info parameter.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::display_reg_element_at_line):
+	Rename from tui_display_reg_element_at_line.
+	(tui_data_window::display_registers_from_line): Update.
+	* tui/tui-data.h (struct tui_data_window)
+	<display_reg_element_at_line>: New method.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (tui_display_registers_from)
+	(tui_display_registers_from_line): Don't declare.
+	* tui/tui-windata.c (tui_data_window::display_all_data)
+	(tui_data_window::refresh_all)
+	(tui_data_window::do_scroll_vertical): Update.
+	* tui/tui-regs.c (tui_data_window::display_registers_from): Rename
+	from tui_display_registers_from.
+	(tui_display_reg_element_at_line): Update.
+	(tui_data_window::display_registers_from_line): Rename from
+	tui_display_registers_from_line.
+	* tui/tui-data.h (struct tui_data_window) <display_registers_from,
+	display_registers_from_line>: New methods.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.h (tui_erase_data_content): Don't declare.
+	* tui/tui-windata.c (tui_data_window::erase_data_content): Rename
+	from tui_erase_data_content.
+	(tui_data_window::display_all_data)
+	(tui_data_window::refresh_all)
+	(tui_data_window::do_scroll_vertical): Update.
+	* tui/tui-regs.c (tui_show_registers): Update.
+	* tui/tui-data.h (struct tui_data_window) <erase_data_content>:
+	New method.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.h (tui_delete_data_content_windows): Don't
+	declare.
+	* tui/tui-windata.c
+	(tui_data_window::delete_data_content_windows): Rename from
+	tui_delete_data_content_windows.
+	(tui_data_window::display_all_data)
+	(tui_data_window::do_scroll_vertical): Update.
+	* tui/tui-data.h (struct tui_data_window)
+	<delete_data_content_windows>: New method.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.h (tui_refresh_data_win): Don't declare.
+	* tui/tui-regs.h (tui_first_reg_element_inline): Don't declare.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.h (tui_display_all_data): Don't declare.
+	* tui/tui-windata.c (tui_data_window::display_all_data): Rename
+	from tui_display_all_data.
+	* tui/tui-win.c
+	(tui_data_window::do_make_visible_with_new_height): Update.
+	* tui/tui-regs.c (tui_show_registers): Update.
+	* tui/tui-layout.c (tui_set_layout): Update.
+	* tui/tui-data.h (struct tui_data_window) <display_all_data>: New
+	method.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.h (tui_display_data_from): Don't declare.
+	* tui/tui-windata.c (tui_display_data_from): Remove.
+	(tui_data_window::refresh_all): Update.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.h (tui_display_data_from_line): Don't declare.
+	* tui/tui-windata.c (tui_display_data_from_line): Remove.
+	(tui_display_data_from, tui_data_window::do_scroll_vertical): Call
+	tui_display_registers_from_line.
+	* tui/tui-regs.h (tui_display_registers_from_line): Update.
+	* tui/tui-regs.c (tui_display_registers_from_line): Remove
+	"force_display" parameter.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (tui_first_reg_element_no_inline): Don't
+	declare.
+	* tui/tui-regs.c (tui_data_window::first_reg_element_no_inline):
+	Rename from tui_first_reg_element_no_inline.
+	(tui_display_reg_element_at_line)
+	(tui_display_registers_from_line): Update.
+	* tui/tui-data.h (struct tui_data_window)
+	<first_reg_element_no_inline>: New method.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.c (tui_display_data_from)
+	(tui_data_window::do_scroll_vertical): Update.
+	* tui/tui-regs.h (tui_line_from_reg_element_no): Don't declare.
+	* tui/tui-regs.c (tui_data_window::line_from_reg_element_no):
+	Rename from tui_line_from_reg_element_no.
+	(tui_display_registers_from_line): Update.
+	* tui/tui-data.h (struct tui_data_window)
+	<line_from_reg_element_no>: New method.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (tui_last_regs_line_no): Don't declare.
+	* tui/tui-regs.c (tui_data_window::last_regs_line_no): Rename from
+	tui_last_regs_line_no.
+	(tui_display_reg_element_at_line)
+	(tui_display_registers_from_line): Update.
+	* tui/tui-data.h (struct tui_data_window) <last_regs_line_no>: New
+	method.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	PR tui/24722:
+	* tui/tui-winsource.h (tui_update_all_breakpoint_info)
+	(tui_update_breakpoint_info): Add "being_deleted" parameter.
+	* tui/tui-winsource.c (tui_update_source_window_as_is): Update.
+	(tui_update_all_breakpoint_info): Add "being_deleted" parameter.
+	(tui_update_breakpoint_info): Likewise.
+	* tui/tui-hooks.c (tui_event_create_breakpoint)
+	(tui_event_delete_breakpoint, tui_event_modify_breakpoint):
+	Update.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (tui_show_frame_info): Consolidate "if"s.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_window_as_is)
+	(tui_update_source_windows_with_addr): Update.
+	* tui/tui-source.h (tui_set_source_content)
+	(tui_show_symtab_source): Add "win_info" parameter.
+	* tui/tui-source.c (tui_set_source_content): Add "win_info"
+	parameter.
+	(tui_show_symtab_source): Likewise.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c
+	(tui_check_and_display_highlight_if_needed): Check can_highlight.
+
+2019-07-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_win_info) <can_scroll>: New method.
+	(struct tui_cmd_window) <can_scroll>: New method.
+	* tui/tui-command.c (tui_dispatch_ctrl_char): Use can_scroll
+	method.
+
+2019-07-17  Tom Tromey  <tromey@adacore.com>
+
+	* ui-out.h (class ui_out) <field_signed, field_fmt_signed,
+	do_field_signed>: Rename.  Change type of "value".
+	* ui-out.c (ui_out::field_signed): Rename from field_int.
+	Change type of "value".
+	(ui_out::field_fmt_signed): Rename from field_fmt_int.  Change
+	type of "value".
+	* tui/tui-out.h (class tui_ui_out) <do_field_signed>: Rename from
+	do_field_int.  Change type of "value".
+	* tui/tui-out.c (tui_ui_out::do_field_signed): Rename from
+	do_field_int.  Change type of "value".
+	* tracepoint.c (trace_status_mi, tfind_1)
+	(print_one_static_tracepoint_marker): Update.
+	* thread.c (print_thread_info_1, print_selected_thread_frame):
+	Update.
+	* stack.c (print_frame, print_frame_info): Update.
+	* spu-tdep.c (info_spu_signal_command, info_spu_dma_cmdlist):
+	Update.
+	* source.c (print_source_lines_base): Update.
+	* skip.c (info_skip_command): Update.
+	* record-btrace.c (btrace_ui_out_decode_error)
+	(btrace_call_history_src_line): Update.
+	* python/py-framefilter.c (py_print_single_arg, py_print_frame):
+	Update.
+	* progspace.c (print_program_space): Update.
+	* mi/mi-symbol-cmds.c (mi_cmd_symbol_list_lines): Update.
+	* mi/mi-out.h (class mi_ui_out) <do_field_signed>: Rename from
+	do_field_int.  Change type of "value".
+	* mi/mi-out.c (mi_ui_out::do_table_begin)
+	(mi_ui_out::do_table_header): Update.
+	(mi_ui_out::do_field_signed): Rename from do_field_int.  Change
+	type of "value".
+	* mi/mi-main.c (mi_cmd_thread_list_ids, print_one_inferior)
+	(mi_cmd_data_list_changed_registers, output_register)
+	(mi_cmd_data_read_memory, mi_load_progress)
+	(mi_cmd_trace_frame_collected): Update.
+	* mi/mi-interp.c (mi_on_normal_stop_1, mi_output_solib_attribs):
+	Update.
+	* mi/mi-cmd-var.c (print_varobj, mi_cmd_var_create)
+	(mi_cmd_var_delete, mi_cmd_var_info_num_children)
+	(mi_cmd_var_list_children, varobj_update_one): Update.
+	* mi/mi-cmd-stack.c (mi_cmd_stack_info_depth)
+	(mi_cmd_stack_list_args, list_arg_or_local): Update.
+	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_file): Update.
+	* inferior.c (print_inferior): Update.
+	* gdb_bfd.c (print_one_bfd): Update.
+	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):
+	Update.
+	* darwin-nat-info.c (darwin_debug_regions_recurse): Update.
+	* cli-out.h (class cli_ui_out) <do_field_signed>: Rename from
+	do_field_int.  Change type of "value".
+	* cli-out.c (cli_ui_out::do_field_signed): Rename from
+	do_field_int.  Change type of "value".
+	* breakpoint.c (watchpoint_check, print_breakpoint_location)
+	(print_one_breakpoint_location, print_it_catch_fork)
+	(print_one_catch_fork, print_it_catch_vfork)
+	(print_one_catch_vfork, print_it_catch_solib)
+	(print_it_catch_exec, print_it_ranged_breakpoint)
+	(print_mention_watchpoint, print_mention_masked_watchpoint)
+	(bkpt_print_it, update_static_tracepoint): Update.
+	* break-catch-throw.c (print_it_exception_catchpoint): Update.
+	* break-catch-syscall.c (print_it_catch_syscall): Update.
+	* ada-tasks.c (print_ada_task_info): Update.
+	* ada-lang.c (print_it_exception, print_mention_exception):
+	Update.
+
+2019-07-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR breakpoints/24541
+	* gdbarch.c: Regenerate.
+	* gdbarch.h: Regenerate.
+	* gdbarch.sh: Adjust return type and parameter types for
+	'stap_adjust_register'.
+	(i386_stap_adjust_register): Adjust signature and return new
+	register name.
+	* stap-probe.c (stap_parse_register_operand): Adjust use of
+	'gdbarch_stap_adjust_register'.
+
+2019-07-17  Tom Tromey  <tromey@adacore.com>
+
+	* s390-linux-nat.c (s390_watch_area): Remove typedef.  Don't
+	declare VEC.
+	(struct s390_debug_reg_state) <watch_areas, break_areas>: Now
+	std::vector.
+	(struct s390_process_info): Add initializers.
+	(s390_add_process): Use new.
+	(s390_linux_nat_target::low_forget_process): Use delete.
+	(s390_linux_nat_target::low_new_fork)
+	(s390_linux_nat_target::stopped_by_watchpoint)
+	(s390_linux_nat_target::low_prepare_to_resume)
+	(s390_linux_nat_target::insert_watchpoint)
+	(s390_linux_nat_target::insert_hw_breakpoint)
+	(s390_linux_nat_target::remove_watchpoint)
+	(s390_linux_nat_target::remove_hw_breakpoint): Update.
+
+2019-07-16  John Baldwin  <jhb@FreeBSD.org>
+
+	* aarch64-fbsd-nat.c: Include regcache.h.
+	(getregs_supplies, getfpregs_supplies): Remove unused gdbarch
+	argument.
+	(aarch64_fbsd_nat_target::fetch_registers)
+	(aarch64_fbsd_nat_target::store_registers): Remove gdbarch
+	variable.
+	* arm-fbsd-nat.c, riscv-fbsd-nat.c: Likewise.
+
+2019-07-16  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.c: Include gdbarch.h.
+
+2019-07-15  Tom Tromey  <tromey@adacore.com>
+
+	* mi/mi-out.c (mi_ui_out::do_field_int): Use plongest.
+
+2019-07-15  Tom Tromey  <tromey@adacore.com>
+
+	* mi/mi-out.h (class mi_ui_out) <do_field_unsigned>: Declare.
+	* mi/mi-out.c (mi_ui_out::do_field_unsigned): New method.
+	* cli-out.h (class cli_ui_out) <do_field_unsigned>: Declare.
+	* cli-out.c (cli_ui_out::do_field_int): New method.
+	* ui-out.c (ui_out::field_unsigned): New method.
+	* symfile.c (generic_load): Use field_unsigned.
+	(print_transfer_performance): Likewise.
+	* record-btrace.c (ui_out_field_uint): Remove.
+	(btrace_call_history_insn_range, btrace_call_history): Use
+	field_unsigned.
+	* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn): Use
+	field_unsigned.
+	* ui-out.h (class ui_out) <field_unsigned>: New method.
+	<do_field_unsigned>: Likewise.
+
+2019-07-15  Tom Tromey  <tromey@adacore.com>
+
+	* mi/mi-main.c (list_available_thread_groups): Use field_string.
+	* mi/mi-interp.c (mi_memory_changed): Use field_string.
+	* target.c (flash_erase_command): Use field_string.
+	* infrun.c (print_signal_received_reason): Use field_string.
+	* i386-tdep.c (i386_mpx_print_bounds): Use field_string.
+	* breakpoint.c (maybe_print_thread_hit_breakpoint): Use
+	field_string.
+	* ada-tasks.c (print_ada_task_info): Use field_string.
+
+2019-07-15  Tom Tromey  <tromey@adacore.com>
+
+	* target.c (flash_erase_command): Use field_core_addr.
+	* symfile.c (generic_load): Use field_core_addr.
+	* sparc64-linux-tdep.c (sparc64_linux_handle_segmentation_fault):
+	Use field_core_addr.
+	* i386-linux-tdep.c (i386_linux_handle_segmentation_fault): Use
+	field_core_addr.
+
+2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2loc.c (dwarf2_evaluate_property): Sign extend property
+	value if its desired type is smaller than a CORE_ADDR and signed.
+
+2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2loc.c (dwarf2_evaluate_property): Update to take account
+	of changes to field names, and use new is_reference field to
+	decide if a property is a reference or not.
+	* dwarf2loc.h (struct dwarf2_locexpr_baton): Add 'is_reference'
+	field.
+	(struct dwarf2_property_baton): Update header comment, rename
+	'referenced_type' to 'property_type' and update comments.
+	* dwarf2read.c (attr_to_dynamic_prop): Add extra parameter to hold
+	default property type, store in property baton, update to take
+	accound of renamed field.
+	(read_func_scope): Update call to attr_to_dynamic_prop.
+	(read_array_type): Likewise.
+	(dwarf2_per_cu_addr_sized_int_type): New function.
+	(read_subrange_index_type): Move type finding code to
+	dwarf2_per_cu_addr_sized_int_type.
+	(read_subrange_type): Update calls to attr_to_dynamic_prop.
+	(dwarf2_per_cu_addr_type): New function.
+	(set_die_type): Update calls to attr_to_dynamic_prop.
+
+2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (read_subrange_index_type): New function.
+	(read_subrange_type): Move code into new function and call it.
+	* gdbtypes.c (create_range_type): Add some asserts.
+
+2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2loc.c (dwarf2_evaluate_property): Change return type, and
+	update return statements.
+	* dwarf2loc.h (dwarf2_evaluate_property): Update return type on
+	declaration, and update comment to match.
+	* gdbtypes.c (resolve_dynamic_array): Update call to
+	dwarf2_evaluate_property to match new return type.
+
+2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* valarith.c (value_subscripted_rvalue): Change lowerbound
+	parameter type from int to LONGEST.
+	* value.h (value_subscripted_rvalue): Likewise in declaration.
+
+2019-07-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cli/cli-utils.c (info_print_command_completer): New function.
+	* cli/cli-utils.h: Add 'completer.h' include, and forward
+	declaration for 'struct cmd_list_element'.
+	(info_print_command_completer): Declare.
+	* stack.c (_initialize_stack): Add completer for 'info locals' and
+	'info args'.
+	* symtab.c (_initialize_symtab): Add completer for 'info
+	variables' and 'info functions'.
+	* NEWS: Mention completion for additional info commands.
+
+2019-07-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cli/cli-utils.c (extract_info_print_args): Delete.
+	(extract_arg_maybe_quoted): Delete.
+	(info_print_options_defs): New variable.
+	(make_info_print_options_def_group): New function.
+	(extract_info_print_options): Define new function.
+	* cli/cli-utils.h (extract_info_print_args): Delete.
+	(struct info_print_options): New structure.
+	(extract_info_print_options): Declare new function.
+	* stack.c (info_locals_command): Update to use new
+	extract_info_print_options, also add a header comment.
+	(info_args_command): Likewise.
+	* symtab.c (info_variables_command): Likewise.
+	(info_functions_command): Likewise.
+
+2019-07-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cli/cli-option.c (parse_option): Use extract_string_maybe_quoted
+	to extract string arguments.
+	* common/common-utils.c (extract_string_maybe_quoted): New function.
+	* common/common-utils.h (extract_string_maybe_quoted): Declare.
+
+2019-07-11  Tom Tromey  <tromey@adacore.com>
+
+	* main.c (get_init_files): Use GDBINIT, not gdbinit.
+	* auto-load.c (file_is_auto_load_safe): Use GDBINIT, not gdbinit.
+	* top.h (gdbinit): Don't declare.
+	* cli/cli-cmds.c (init_cli_cmds): Remove, merging contents
+	into...
+	(_initialize_cli_cmds): ...here.  Use GDBINIT, not gdbinit.
+	* top.c (gdb_init): Don't call init_cli_cmds.
+	(gdbinit): Remove.
+	* cli/cli-cmds.h (init_cli_cmds): Don't declare.
+
+2019-07-11  Tom Tromey  <tromey@adacore.com>
+
+	* python/py-inferior.c (add_thread_object): Don't use thread_obj
+	after it has been moved.
+
+2019-07-10  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* valops.c (value_must_coerce_to_target): Change return type to
+	bool.
+	* value.h (value_must_coerce_to_target): Likewise.
+
+2019-07-10  Simon Marchi  <simon.marchi@efficios.com>
+
+	* breakpoint.c (is_hardware_watchpoint): Remove
+	forward-declaration.
+	(is_masked_watchpoint): Change return type to bool.
+	(is_tracepoint): Likewise.
+	(is_breakpoint): Likewise.
+	(is_hardware_watchpoint): Likewise.
+	(is_watchpoint): Likewise.
+	(is_no_memory_software_watchpoint): Likewise.
+	(is_catchpoint): Likewise.
+	(breakpoint_1): Make FILTER parameter's return type bool.
+	is_masked_watchpoint): Change return type to bool.
+	(save_breakpoints): Make FILTER parameter's return type bool.
+	* breakpoint.h (is_breakpoint): Change return type to bool.
+	(is_watchpoint): Likewise.
+	(is_catchpoint): Likewise.
+	(is_tracepoint): Likewise.
+
+2019-07-10  Tom Tromey  <tom@tromey.com>
+
+	* defs.h: Don't include gdbarch.h.
+	* aarch64-ravenscar-thread.c, aarch64-tdep.c, alpha-bsd-tdep.h,
+	alpha-linux-tdep.c, alpha-mdebug-tdep.c, arch-utils.h, arm-tdep.h,
+	ax-general.c, btrace.c, buildsym-legacy.c, buildsym.h, c-lang.c,
+	cli/cli-decode.h, cli/cli-dump.c, cli/cli-script.h,
+	cli/cli-style.h, coff-pe-read.h, compile/compile-c-support.c,
+	compile/compile-cplus.h, compile/compile-loc2c.c, corefile.c,
+	cp-valprint.c, cris-linux-tdep.c, ctf.c, d-lang.c, d-namespace.c,
+	dcache.c, dicos-tdep.c, dictionary.c, disasm-selftests.c,
+	dummy-frame.c, dummy-frame.h, dwarf2-frame-tailcall.c,
+	dwarf2expr.c, expression.h, f-lang.c, frame-base.c,
+	frame-unwind.c, frv-linux-tdep.c, gdbarch-selftests.c, gdbtypes.h,
+	go-lang.c, hppa-nbsd-tdep.c, hppa-obsd-tdep.c, i386-dicos-tdep.c,
+	i386-tdep.h, ia64-vms-tdep.c, interps.h, language.c,
+	linux-record.c, location.h, m2-lang.c, m32r-linux-tdep.c,
+	mem-break.c, memattr.c, mn10300-linux-tdep.c, nios2-linux-tdep.c,
+	objfiles.h, opencl-lang.c, or1k-linux-tdep.c, p-lang.c,
+	parser-defs.h, ppc-tdep.h, probe.h, python/py-record-btrace.c,
+	record-btrace.c, record.h, regcache-dump.c, regcache.h,
+	riscv-fbsd-tdep.c, riscv-linux-tdep.c, rust-exp.y,
+	sh-linux-tdep.c, sh-nbsd-tdep.c, source-cache.c,
+	sparc-nbsd-tdep.c, sparc-obsd-tdep.c, sparc-ravenscar-thread.c,
+	sparc64-fbsd-tdep.c, std-regs.c, target-descriptions.h,
+	target-float.c, tic6x-linux-tdep.c, tilegx-linux-tdep.c, top.c,
+	tracefile.c, trad-frame.c, type-stack.h, ui-style.c, utils.c,
+	utils.h, valarith.c, valprint.c, varobj.c, x86-tdep.c,
+	xml-support.h, xtensa-linux-tdep.c, cli/cli-cmds.h: Update.
+	* s390-linux-nat.c, procfs.c, inf-ptrace.c: Likewise.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.h (is_ada_exception_catchpoint): Declare.
+	* breakpoint.c (init_ada_exception_breakpoint): Register as
+	bp_catchpoint.
+	(print_one_breakpoint_location, print_one_breakpoint): Use
+	is_ada_exception_catchpoint.
+	* ada-lang.c (class ada_catchpoint_location): Pass
+	bp_loc_software_breakpoint to bp_location constructor.
+	(is_ada_exception_catchpoint): New function.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* arm-tdep.c (arm_exidx_entry_s): Remove typedef.  Don't define
+	VEC.
+	(struct arm_exidx_entry): New method operator<.
+	(struct arm_exidx_data) <section_maps>: Change type.
+	(arm_exidx_data_free): Remove.
+	(arm_exidx_data_key): Change type.  Move lower.
+	(arm_exidx_new_objfile): Update.
+	(arm_compare_exidx_entries): Remove.
+	(arm_find_exidx_entry, _initialize_arm_tdep)
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* solib-spu.c (ocl_program_data_key): Change type.
+	(append_ocl_sos, ocl_enable_break, _initialize_spu_solib):
+	Update.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* solib-aix.c (lm_info_aix_p): Remove typedef.  Don't define VEC.
+	(struct solib_aix_inferior_data) <library_list>: Change type.
+	(solib_aix_inferior_data_handle): Change type.
+	(get_solib_aix_inferior_data): Update.
+	(solib_aix_free_library_list): Remove.
+	(library_list_start_library): Update.
+	(solib_aix_parse_libraries, solib_aix_get_library_list): Change
+	return type.
+	(solib_aix_get_library_list)
+	(solib_aix_solib_create_inferior_hook, solib_aix_current_sos)
+	(solib_aix_normal_stop_observer, _initialize_solib_aix): Update.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* solib-dsbt.c (struct dsbt_info): Add initializers.
+	(solib_dsbt_pspace_data): Change type.
+	(dsbt_pspace_data_cleanup): Remove.
+	(get_dsbt_info, _initialize_dsbt_solib): Update.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* spu-tdep.c (spu_overlay_data): Change type.
+	(spu_get_overlay_table, spu_overlay_new_objfile)
+	(_initialize_spu_tdep): Update.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* gdb-stabs.h (struct dbx_symfile_info): Add initializers and
+	destructor.
+	(dbx_objfile_data_key): Change type and declare later.
+	(DBX_SYMFILE_INFO): Rewrite.
+	* dbxread.c (dbx_objfile_data_key): Change type.
+	(dbx_symfile_init): Update.
+	(~dbx_symfile_info): Rename from dbx_free_symfile_info.  Update.
+	(coffstab_build_psymtabs, elfstab_build_psymtabs)
+	(stabsect_build_psymtabs, _initialize_dbxread): Update.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* jit.c (jit_program_space_key): Change type.  Move lower.
+	(get_jit_program_space_data): Update.
+	(jit_program_space_data_cleanup): Remove.
+	(jit_breakpoint_deleted, free_objfile_data, _initialize_jit):
+	Update.
+	(struct jit_program_space_data): Add initializers.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* solib-darwin.c (struct darwin_info): Add initializers.
+	(solib_darwin_pspace_data): Change type.
+	(darwin_pspace_data_cleanup): Remove.
+	(get_darwin_info, _initialize_darwin_solib): Update.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* remote-sim.c (struct sim_inferior_data): Add initializers,
+	constructor, and destructor.
+	(sim_inferior_data_key): Change type.  Move lower.
+	(check_for_duplicate_sim_descriptor): Update.
+	(get_sim_inferior_data): Use new.  Update.
+	(~sim_inferior_data_cleanup): Rename from
+	sim_inferior_data_cleanup.  Simplify.
+	(gdbsim_close_inferior, simulator_command)
+	(sim_command_completer, _initialize_remote_sim): Update.
+	(next_pid, INITIAL_PID): Move earlier.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* python/python-internal.h (create_thread_object): Return
+	gdbpy_ref.
+	* python/py-infthread.c (create_thread_object): Return gdbpy_ref.
+	* python/py-inferior.c (struct threadlist_entry): Add
+	constructor.
+	<thread_obj>: Now a gdbpy_ref.
+	(thread_to_thread_object): Update.
+	(add_thread_object): Use new.
+	(delete_thread_object): Use delete.
+	(infpy_threads): Update.
+	(py_free_inferior): Update.  Construct "inf_obj" after acquiring
+	GIL.
+
+2019-07-10  Tom Tromey  <tromey@adacore.com>
+
+	* valops.c (value_cast): Specialize error message for Ada.
+
+2019-07-10  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* breakpoint.c (breakpoint_1): Update doc and parameter names.
+
+2019-07-10  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* breakpoint.h (bpstat_explains_signal, bpstat_causes_stop,
+	bpstat_should_step): Return bool, adjust comments.
+	* breakpoint.c (bpstat_explains_signal, bpstat_causes_stop,
+	bpstat_should_step): Likewise.
+
+2019-07-10  Alan Hayward  <alan.hayward@arm.com>
+
+	* features/Makefile: Use feature target descriptions for Arm.
+	* features/arm/arm-core.c: Generate new file.
+	* features/arm/arm-fpa.c: Likewise.
+	* features/arm/arm-m-profile-with-fpa.xml: Likewise.
+	* features/arm/arm-m-profile.c: Likewise.
+	* features/arm/arm-vfpv2.c: Likewise.
+	* features/arm/arm-vfpv3.c: Likewise.
+	* features/arm/xscale-iwmmxt.c: Likewise.
+	* target-descriptions.c (maint_print_c_tdesc_cmd): Add Arm.
+
+2019-07-10  Alan Hayward  <alan.hayward@arm.com>
+
+	* arm-linux-nat.c (arm_linux_nat_target::read_description): Check
+	ptrace earlier.
+
+2019-07-10  Alan Hayward  <alan.hayward@arm.com>
+
+	* features/aarch64-pauth.c: Regenerate.
+
+2019-07-09  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* breakpoint.h (struct bpstat_what) <is_longjmp>: Change type to
+	bool.
+	(bpstat_what): Use false instead of 0.
+
+2019-07-09  Pedro Alves  <palves@redhat.com>
+
+	* break-catch-throw.c (is_exception_catchpoint): New.
+	* breakpoint.c (print_one_breakpoint_location): New parameter
+	'raw_loc'.  Handle it.  Use
+	is_watchpoint/is_catchpoint/is_exception_catchpoint instead of
+	looking at the breakpoint's type.
+	(print_one_breakpoint): If handling "maint info breakpoints", also
+	print locations of exception catchpoints.
+	* breakpoint.h (is_exception_catchpoint): Declare.
+
+2019-07-09  Pedro Alves  <palves@redhat.com>
+
+	* break-catch-throw.c (print_one_exception_catchpoint): Skip the
+	"addr" field.
+	(allocate_location_exception_catchpoint): New.
+	(handle_gnu_v3_exceptions): Don't reset 'type' to bp_breakpoint.
+	(initialize_throw_catchpoint_ops): Install
+	allocate_location_exception_catchpoint as allocate_location
+	method.
+	* breakpoint.c (bpstat_what) <bp_catch>: Set action to
+	BPSTAT_WHAT_SINGLE if not stopping and the location's type is not
+	bp_loc_other.
+	(breakpoint_address_is_meaningful): Delete.
+	(bl_address_is_meaningful): New.
+	(breakpoint_locations_match): Adjust comment.
+	(bp_location_from_bp_type): New, factored out of...
+	(bp_location::bp_location(breakpoint *)): ... this.
+	(bp_location::bp_location(breakpoint *, bp_loc_type)): New,
+	factored out of...
+	(bp_location::bp_location(breakpoint *)): ... this.  Reimplement.
+	(bp_loc_is_permanent): Use bl_address_is_meaningful instead of
+	breakpoint_address_is_meaningful.
+	(bp_locations_compare): Adjust comment.
+	(update_global_location_list): Use bl_address_is_meaningful
+	instead of breakpoint_address_is_meaningful.
+	* breakpoint.h (bp_location::bp_location(breakpoint *)): New
+	explicit.
+	(bp_location::bp_location(breakpoint *, bp_loc_type)): Declare.
+	* python/py-breakpoint.c (bppy_get_location): No longer check
+	whether location is null.
+
+2019-07-09  Pedro Alves  <palves@redhat.com>
+
+	PR c++/15468
+	* breakpoint.c (print_one_breakpoint_location): Remove
+	single-location assert.
+
+2019-07-09  Tom Tromey  <tom@tromey.com>
+
+	* contrib/ari/gdb_ari.sh: Change common to gdbsupport.
+	* configure: Rebuild.
+	* configure.ac: Change common to gdbsupport.
+	* gdbsupport: Rename from common.
+	* acinclude.m4: Change common to gdbsupport.
+	* Makefile.in (CONFIG_SRC_SUBDIR, COMMON_SFILES)
+	(HFILES_NO_SRCDIR, stamp-version, ALLDEPFILES): Change common to
+	gdbsupport.
+	* aarch64-tdep.c, ada-lang.c, ada-lang.h, agent.c, alloc.c,
+	amd64-darwin-tdep.c, amd64-dicos-tdep.c, amd64-fbsd-nat.c,
+	amd64-fbsd-tdep.c, amd64-linux-nat.c, amd64-linux-tdep.c,
+	amd64-nbsd-tdep.c, amd64-obsd-tdep.c, amd64-sol2-tdep.c,
+	amd64-tdep.c, amd64-windows-tdep.c, arch-utils.c,
+	arch/aarch64-insn.c, arch/aarch64.c, arch/aarch64.h, arch/amd64.c,
+	arch/amd64.h, arch/arm-get-next-pcs.c, arch/arm-linux.c,
+	arch/arm.c, arch/i386.c, arch/i386.h, arch/ppc-linux-common.c,
+	arch/riscv.c, arch/riscv.h, arch/tic6x.c, arm-tdep.c, auto-load.c,
+	auxv.c, ax-gdb.c, ax-general.c, ax.h, breakpoint.c, breakpoint.h,
+	btrace.c, btrace.h, build-id.c, build-id.h, c-lang.h, charset.c,
+	charset.h, cli/cli-cmds.c, cli/cli-cmds.h, cli/cli-decode.c,
+	cli/cli-dump.c, cli/cli-option.h, cli/cli-script.c,
+	coff-pe-read.c, command.h, compile/compile-c-support.c,
+	compile/compile-c.h, compile/compile-cplus-symbols.c,
+	compile/compile-cplus-types.c, compile/compile-cplus.h,
+	compile/compile-loc2c.c, compile/compile.c, completer.c,
+	completer.h, contrib/ari/gdb_ari.sh, corefile.c, corelow.c,
+	cp-support.c, cp-support.h, cp-valprint.c, csky-tdep.c, ctf.c,
+	darwin-nat.c, debug.c, defs.h, disasm-selftests.c, disasm.c,
+	disasm.h, dtrace-probe.c, dwarf-index-cache.c,
+	dwarf-index-cache.h, dwarf-index-write.c, dwarf2-frame.c,
+	dwarf2expr.c, dwarf2loc.c, dwarf2read.c, event-loop.c,
+	event-top.c, exceptions.c, exec.c, extension.h, fbsd-nat.c,
+	features/aarch64-core.c, features/aarch64-fpu.c,
+	features/aarch64-pauth.c, features/aarch64-sve.c,
+	features/i386/32bit-avx.c, features/i386/32bit-avx512.c,
+	features/i386/32bit-core.c, features/i386/32bit-linux.c,
+	features/i386/32bit-mpx.c, features/i386/32bit-pkeys.c,
+	features/i386/32bit-segments.c, features/i386/32bit-sse.c,
+	features/i386/64bit-avx.c, features/i386/64bit-avx512.c,
+	features/i386/64bit-core.c, features/i386/64bit-linux.c,
+	features/i386/64bit-mpx.c, features/i386/64bit-pkeys.c,
+	features/i386/64bit-segments.c, features/i386/64bit-sse.c,
+	features/i386/x32-core.c, features/riscv/32bit-cpu.c,
+	features/riscv/32bit-csr.c, features/riscv/32bit-fpu.c,
+	features/riscv/64bit-cpu.c, features/riscv/64bit-csr.c,
+	features/riscv/64bit-fpu.c, features/tic6x-c6xp.c,
+	features/tic6x-core.c, features/tic6x-gp.c, filename-seen-cache.h,
+	findcmd.c, findvar.c, fork-child.c, gcore.c, gdb_bfd.c, gdb_bfd.h,
+	gdb_proc_service.h, gdb_regex.c, gdb_select.h, gdb_usleep.c,
+	gdbarch-selftests.c, gdbthread.h, gdbtypes.h, gnu-nat.c,
+	go32-nat.c, guile/guile.c, guile/scm-ports.c,
+	guile/scm-safe-call.c, guile/scm-type.c, i386-fbsd-nat.c,
+	i386-fbsd-tdep.c, i386-go32-tdep.c, i386-linux-nat.c,
+	i386-linux-tdep.c, i386-tdep.c, i387-tdep.c,
+	ia64-libunwind-tdep.c, ia64-linux-nat.c, inf-child.c,
+	inf-ptrace.c, infcall.c, infcall.h, infcmd.c, inferior-iter.h,
+	inferior.c, inferior.h, inflow.c, inflow.h, infrun.c, infrun.h,
+	inline-frame.c, language.h, linespec.c, linux-fork.c, linux-nat.c,
+	linux-tdep.c, linux-thread-db.c, location.c, machoread.c,
+	macrotab.h, main.c, maint.c, maint.h, memattr.c, memrange.h,
+	mi/mi-cmd-break.h, mi/mi-cmd-env.c, mi/mi-cmd-stack.c,
+	mi/mi-cmd-var.c, mi/mi-interp.c, mi/mi-main.c, mi/mi-parse.h,
+	minsyms.c, mips-linux-tdep.c, namespace.h,
+	nat/aarch64-linux-hw-point.c, nat/aarch64-linux-hw-point.h,
+	nat/aarch64-linux.c, nat/aarch64-sve-linux-ptrace.c,
+	nat/amd64-linux-siginfo.c, nat/fork-inferior.c,
+	nat/linux-btrace.c, nat/linux-btrace.h, nat/linux-namespaces.c,
+	nat/linux-nat.h, nat/linux-osdata.c, nat/linux-personality.c,
+	nat/linux-procfs.c, nat/linux-ptrace.c, nat/linux-ptrace.h,
+	nat/linux-waitpid.c, nat/mips-linux-watch.c,
+	nat/mips-linux-watch.h, nat/ppc-linux.c, nat/x86-dregs.c,
+	nat/x86-dregs.h, nat/x86-linux-dregs.c, nat/x86-linux.c,
+	nto-procfs.c, nto-tdep.c, objfile-flags.h, objfiles.c, objfiles.h,
+	obsd-nat.c, observable.h, osdata.c, p-valprint.c, parse.c,
+	parser-defs.h, ppc-linux-nat.c, printcmd.c, probe.c, proc-api.c,
+	procfs.c, producer.c, progspace.h, psymtab.h,
+	python/py-framefilter.c, python/py-inferior.c, python/py-ref.h,
+	python/py-type.c, python/python.c, record-btrace.c, record-full.c,
+	record.c, record.h, regcache-dump.c, regcache.c, regcache.h,
+	remote-fileio.c, remote-fileio.h, remote-sim.c, remote.c,
+	riscv-tdep.c, rs6000-aix-tdep.c, rust-exp.y, s12z-tdep.c,
+	selftest-arch.c, ser-base.c, ser-event.c, ser-pipe.c, ser-tcp.c,
+	ser-unix.c, skip.c, solib-aix.c, solib-target.c, solib.c,
+	source-cache.c, source.c, source.h, sparc-nat.c, spu-linux-nat.c,
+	stack.c, stap-probe.c, symfile-add-flags.h, symfile.c, symfile.h,
+	symtab.c, symtab.h, target-descriptions.c, target-descriptions.h,
+	target-memory.c, target.c, target.h, target/waitstatus.c,
+	target/waitstatus.h, thread-iter.h, thread.c, tilegx-tdep.c,
+	top.c, top.h, tracefile-tfile.c, tracefile.c, tracepoint.c,
+	tracepoint.h, tui/tui-io.c, ui-file.c, ui-out.h,
+	unittests/array-view-selftests.c,
+	unittests/child-path-selftests.c, unittests/cli-utils-selftests.c,
+	unittests/common-utils-selftests.c,
+	unittests/copy_bitwise-selftests.c, unittests/environ-selftests.c,
+	unittests/format_pieces-selftests.c,
+	unittests/function-view-selftests.c,
+	unittests/lookup_name_info-selftests.c,
+	unittests/memory-map-selftests.c, unittests/memrange-selftests.c,
+	unittests/mkdir-recursive-selftests.c,
+	unittests/observable-selftests.c,
+	unittests/offset-type-selftests.c, unittests/optional-selftests.c,
+	unittests/parse-connection-spec-selftests.c,
+	unittests/ptid-selftests.c, unittests/rsp-low-selftests.c,
+	unittests/scoped_fd-selftests.c,
+	unittests/scoped_mmap-selftests.c,
+	unittests/scoped_restore-selftests.c,
+	unittests/string_view-selftests.c, unittests/style-selftests.c,
+	unittests/tracepoint-selftests.c, unittests/unpack-selftests.c,
+	unittests/utils-selftests.c, unittests/xml-utils-selftests.c,
+	utils.c, utils.h, valarith.c, valops.c, valprint.c, value.c,
+	value.h, varobj.c, varobj.h, windows-nat.c, x86-linux-nat.c,
+	xml-support.c, xml-support.h, xml-tdesc.h, xstormy16-tdep.c,
+	xtensa-linux-nat.c, dwarf2read.h: Change common to gdbsupport.
+
+2019-07-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linespec.c (decode_digits_list_mode): Set explicit_line to a
+	bool value.
+	(decode_digits_ordinary): Set explicit_line field in sal.
+	* symtab.c (skip_prologue_sal): Don't skip prologue for a
+	symtab_and_line that was set on an explicit line number in
+	assembler code.  Do always update the recorded symtab and line if
+	we do skip the prologue.
+
+2019-07-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* breakpoint.c (set_breakpoint_location_function): Remove
+	explicit_loc parameter.
+	(momentary_breakpoint_from_master): Update call to
+	set_breakpoint_location_function.
+	(add_location_to_breakpoint): Likewise.
+
+2019-07-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_features_from_gdbarch_info): Don't modify
+	required features based on default bfd type when no specific bfd
+	is present.
+
+2019-07-08  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention that GDB printf and eval commands can now print
+	C-style and Ada-style convenience var strings without
+	calling the inferior.
+	* printcmd.c (printf_c_string): Locally print GDB internal var
+	instead of transiting via the inferior.
+	(printf_wide_c_string): Likewise.
+
+2019-07-04  Alan Hayward  <alan.hayward@arm.com>
+
+	PR breakpoints/25011
+	* symfile.c (symbol_file_command): Call solib_create_inferior_hook.
+
+2019-07-04  Tom Tromey  <tom@tromey.com>
+
+	PR tui/24724:
+	* tui/tui-winsource.c (tui_clear_source_content): Update.
+	(tui_source_window_base::set_is_exec_point_at): Fix comment.
+	(tui_update_breakpoint_info): Update.
+	(tui_set_exec_info_content): Update.
+	* tui/tui-source.c (tui_set_source_content_nil): Update.
+	* tui/tui-disasm.c (tui_set_disassem_content): Don't set
+	has_break.
+	* tui/tui-data.h (enum tui_bp_flag): New.
+	(tui_bp_flags): New enum flags type.
+	(struct tui_source_element) <break_mode>: Change type.  Rename
+	from has_break.
+	(TUI_BP_ENABLED, TUI_BP_DISABLED, TUI_BP_HIT)
+	(TUI_BP_CONDITIONAL, TUI_BP_HARDWARE): Don't define.  Now enum
+	constants.
+	* tui/tui-winsource.h: Fix comment.
+
+2019-07-04  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch32-linux-nat.h (VFP_REGS_SIZE): Remove define.
+	* aarch64-linux-nat.c (fetch_fpregs_from_thread)
+	(store_fpregs_to_thread)
+	(aarch64_linux_nat_target::read_description): Use ARM_VFP3_REGS_SIZE.
+	* arch/arm.h (IWMMXT_VEC_REGISTER_SIZE, ARM_CORE_REGS_SIZE)
+	(ARM_FP_REGS_SIZE, ARM_VFP2_REGS_SIZE, ARM_VFP3_REGS_SIZE)
+	(IWMMXT_REGS_SIZE): Add define.
+	* arm-linux-nat.c (IWMMXT_REGS_SIZE): Remove define.
+	(fetch_vfp_regs, store_vfp_regs)
+	(arm_linux_nat_target::read_description): Use ARM_VFP3_REGS_SIZE.
+	* arm-tdep.c (arm_register_g_packet_guesses): Use new defines.
+
+2019-07-04  Alan Hayward  <alan.hayward@arm.com>
+
+        * arch/arm-get-next-pcs.c (thumb_get_next_pcs_raw): Use ARM_
+        defines.
+        * arch/arm-linux.c (arm_linux_sigreturn_next_pc_offset): Likewise.
+        * arch/arm.h (INT_REGISTER_SIZE) Rename from...
+        (ARM_INT_REGISTER_SIZE): ...to this.
+        (ARM_FP_REGISTER_SIZE) (ARM_VFP_REGISTER_SIZE): Add define.
+        * arm-linux-tdep.c (ARM_LINUX_JB_ELEMENT_SIZE)
+        (ARM_LINUX_SIZEOF_GREGSET, arm_linux_supply_gregset)
+        (arm_linux_collect_gregset, supply_nwfpe_register)
+        (collect_nwfpe_register, arm_linux_collect_nwfpe): Use ARM_
+        defines.
+        * arm-linux-tdep.h (ARM_LINUX_SIZEOF_NWFPE, NWFPE_FPSR_OFFSET)
+        (NWFPE_FPCR_OFFSET, NWFPE_TAGS_OFFSET): Likewise
+        * arm-nbsd-tdep.c (ARM_NBSD_JB_ELEMENT_SIZE): Likewise.
+        * arm-tdep.c (arm_push_dummy_call, arm_extract_return_value)
+        (arm_return_in_memory, arm_store_return_value)
+        (arm_get_longjmp_target, arm_register_g_packet_guesses)
+        (arm_record_ld_st_multiple): Likewise.
+        * arm-tdep.h (FP_REGISTER_SIZE, VFP_REGISTER_SIZE): Remove.
+        * arm-wince-tdep.c (ARM_WINCE_JB_ELEMENT_SIZE): Use ARM_ defines.
+
+2019-07-04  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-linux-tdep.c (aarch64_linux_init_abi): Use
+	AARCH64_DISPLACED_MODIFIED_INSNS.
+	* aarch64-tdep.c (struct aarch64_displaced_step_data)
+	(aarch64_displaced_step_copy_insn): Likewise.
+	* aarch64-tdep.h (DISPLACED_MODIFIED_INSNS): Rename from..
+	(AARCH64_DISPLACED_MODIFIED_INSNS): ...to this.
+	* arm-linux-tdep.c (arm_linux_cleanup_svc): Use
+	ARM_DISPLACED_MODIFIED_INSNS.
+	* arm-tdep.c (arm_gdbarch_init): Likewise.
+	* arm-tdep.h (DISPLACED_MODIFIED_INSNS): Rename from..
+	(ARM_DISPLACED_MODIFIED_INSNS): ...to this.
+	(struct arm_displaced_step_closure): Use
+	ARM_DISPLACED_MODIFIED_INSNS.
+
+2019-07-04  Alan Hayward  <alan.hayward@arm.com>
+
+	* features/Makefile: Remove unused xml files.
+	* features/aarch64.xml: Remove.
+	* features/i386/amd64-avx-avx512-linux.xml: Remove.
+	* features/i386/amd64-avx-avx512.xml: Remove.
+	* features/i386/amd64-avx-linux.xml: Remove.
+	* features/i386/amd64-avx-mpx-avx512-pku-linux.xml: Remove.
+	* features/i386/amd64-avx-mpx-avx512-pku.xml: Remove.
+	* features/i386/amd64-avx-mpx-linux.xml: Remove.
+	* features/i386/amd64-avx-mpx.xml: Remove.
+	* features/i386/amd64-avx.xml: Remove.
+	* features/i386/amd64-linux.xml: Remove.
+	* features/i386/amd64-mpx-linux.xml: Remove.
+	* features/i386/amd64-mpx.xml: Remove.
+	* features/i386/amd64.xml: Remove.
+	* features/i386/i386-avx-avx512-linux.xml: Remove.
+	* features/i386/i386-avx-avx512.xml: Remove.
+	* features/i386/i386-avx-linux.xml: Remove.
+	* features/i386/i386-avx-mpx-avx512-pku-linux.xml: Remove.
+	* features/i386/i386-avx-mpx-avx512-pku.xml: Remove.
+	* features/i386/i386-avx-mpx-linux.xml: Remove.
+	* features/i386/i386-avx-mpx.xml: Remove.
+	* features/i386/i386-avx.xml: Remove.
+	* features/i386/i386-linux.xml: Remove.
+	* features/i386/i386-mmx-linux.xml: Remove.
+	* features/i386/i386-mmx.xml: Remove.
+	* features/i386/i386-mpx-linux.xml: Remove.
+	* features/i386/i386-mpx.xml: Remove.
+	* features/i386/i386.xml: Remove.
+	* features/i386/x32-avx-avx512-linux.xml: Remove.
+	* features/i386/x32-avx-linux.xml: Remove.
+	* features/i386/x32-linux.xml: Remove.
+
+2019-07-04  Alan Hayward  <alan.hayward@arm.com>
+
+	* regformats/aarch64.dat: Remove.
+	* regformats/i386/amd64-avx-avx512-linux.dat: Remove.
+	* regformats/i386/amd64-avx-linux.dat: Remove.
+	* regformats/i386/amd64-avx-mpx-avx512-pku-linux.dat: Remove.
+	* regformats/i386/amd64-avx-mpx-linux.dat: Remove.
+	* regformats/i386/amd64-linux.dat: Remove.
+	* regformats/i386/amd64-mpx-linux.dat: Remove.
+	* regformats/i386/amd64.dat: Remove.
+	* regformats/i386/i386-avx-avx512-linux.dat: Remove.
+	* regformats/i386/i386-avx-linux.dat: Remove.
+	* regformats/i386/i386-avx-mpx-avx512-pku-linux.dat: Remove.
+	* regformats/i386/i386-avx-mpx-linux.dat: Remove.
+	* regformats/i386/i386-linux.dat: Remove.
+	* regformats/i386/i386-mmx-linux.dat: Remove.
+	* regformats/i386/i386-mpx-linux.dat: Remove.
+	* regformats/i386/i386.dat: Remove.
+	* regformats/i386/x32-avx-avx512-linux.dat: Remove.
+	* regformats/i386/x32-avx-linux.dat: Remove.
+	* regformats/i386/x32-linux.dat: Remove.
+
+2019-07-04  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c: Remove xml self tests.
+	* amd64-linux-tdep.c: Likewise.
+	* amd64-tdep.c: Likewise.
+	* i386-linux-tdep.c: Likewise.
+	* i386-tdep.c: Likewise.
+
+2019-07-03  Pedro Alves  <palves@redhat.com>
+
+	PR cli/24732
+	* cli/cli-cmds.c (struct pipe_cmd_opts): New.
+	(pipe_cmd_option_defs): New.
+	(make_pipe_cmd_options_def_group): New.
+	(pipe_command): Use gdb::option::process_options.
+	(pipe_command_completer): New function.
+	(_initialize_cli_cmds): Install completer for "pipe" command.
+
+2019-07-03  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-option.c (union option_value) <string>: New field.
+	(struct option_def_and_value): Add ctor, move ctor, dtor and
+	use DISABLE_COPY_AND_ASSIGN.
+	(option_def_and_value::clear_value): New.
+	(parse_option, save_option_value_in_ctx, get_val_type_str)
+	(add_setshow_cmds_for_options): Handle var_string.
+	* cli-option.h (union option_def::var_address) <string>: New
+	field.
+	(struct string_option_def): New.
+	* maint-test-options.c (struct test_options_opts): Add default
+	ctor and use DISABLE_COPY_AND_ASSIGN.
+	<string_opt>: New field.
+	(test_options_opts::~test_options_opts): New.
+	(test_options_opts::dump): Also dump "-string".
+	(test_options_option_defs): Install "string.
+
+2019-07-03  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-option.c (parse_option) <var_enum>: Don't return an
+	option_value with a null enumeration.
+	(complete_options): Save the option values in the context.
+	(save_option_value_in_ctx): New, factored out from ...
+	(process_options): ... here.
+	* cli/cli-utils.c (get_ulongest): Don't advance PP until the end
+	of the function.
+	* maint-test-options.c (test_options_opts::dump): New, factored
+	out from ...
+	(maintenance_test_options_command_mode): ... here.
+	(maintenance_test_options_command_completion_result): Delete.
+	(maintenance_test_options_command_completion_text): Update
+	comment.
+	(maintenance_show_test_options_completion_result): Change
+	prototype.  Just print
+	maintenance_test_options_command_completion_text.
+	(save_completion_result): New.
+	(maintenance_test_options_completer_mode): Pass options context to
+	complete_options, and then save a dump.
+	(_initialize_maint_test_options): Use add_cmd to install "maint
+	show test-options-completion-result".
+
+2019-07-03  Pedro Alves  <palves@redhat.com>
+
+	* NEWS (New commands): Mention "with" and "maint with".
+	* cli/cli-cmds.c (with_command_1, with_command_completer_1)
+	(with_command, with_command_completer): New.
+	(pipe_command): Adjust to new repeat_previous
+	interface.
+	(_initialize_cli_cmds): Install the "with" command and its "w"
+	alias.
+	* cli/cli-cmds.h (with_command_1, with_command_completer_1): New
+	declarations.
+	* cli/cli-setshow.c (parse_cli_var_uinteger)
+	(parse_cli_var_zuinteger_unlimited, do_set_command): Handle empty
+	argument strings for all var_types.
+	(get_setshow_command_value_string): New, factored out from ...
+	(do_show_command): ... this.
+	* cli/cli-setshow.h: Include <string>.
+	(get_setshow_command_value_string): Declare.
+	* command.h (repeat_previous): Now returns const char *.  Adjust
+	comment.
+	* maint.c: Include "cli/cli-cmds.h".
+	(maintenance_with_cmd, maintenance_with_cmd_completer): New.
+	(_initialize_maint_cmds): Register the "maintenance with" command.
+	* top.c (repeat_previous): Move bits from pipe_command here:
+	Return the saved command line, if any; error out if there's no
+	command to relaunch.
+
+2019-07-03  Pedro Alves  <palves@redhat.com>
+
+	* NEWS (New commands): Mention "maint set/show test-settings"
+	instead of "maint test-settings".
+	* maint-test-settings.c (maintenance_test_settings_list): Delete.
+	(maintenance_test_settings_set_list): Rename to ...
+	(maintenance_set_test_settings_list): ... this.
+	(maintenance_test_settings_show_list): Rename to  ...
+	(maintenance_show_test_settings_list): ... this.
+	(maintenance_test_settings_cmd): Delete.
+	(maintenance_test_settings_set_cmd): ...
+	(maintenance_set_test_settings_cmd): ... this.
+	(maintenance_test_settings_show_cmd): ...
+	(maintenance_show_test_settings_cmd): ... this.
+	(maintenance_test_settings_show_value_cmd):
+	(maintenance_show_test_settings_value_cmd): ... this.
+	(_initialize_maint_test_settings): No longer install the "maint
+	test-settings" prefix command.  Rename "maint test-settings set"
+	to "maint set test-settings", and "maint test-settings show" to
+	"maint show test-settings".  Adjust all subcommands.
+
+2019-07-03  Pedro Alves  <palves@redhat.com>
+
+	* maint-test-settings.c: Fix file's intro comment.  Replace all
+	references to "test-options" with references to "test-settings",
+	in comments.
+
+2019-07-03  Pedro Alves  <palves@redhat.com>
+
+	* maint-test-settings.c (maintenance_test_settings_xxx)
+	(maintenance_test_settings_yyy, maintenance_test_settings_zzz):
+	New.
+	(maintenance_test_settings_enums): Use them.
+	(maintenance_test_settings_enum): Default to
+	maintenance_test_settings_xxx.
+	(_initialize_maint_test_settings): Initialize
+	MAINTENANCE_TEST_SETTINGS_FILENAME.
+
+2019-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* breakpoint.h (remove_breakpoints_inf): Change return type to
+	void, move function documentation here.
+	* breakpoint.c (remove_breakpoints_inf): Change return type to
+	void, move function documentation to header.
+
+2019-07-02  Pedro Alves  <palves@redhat.com>
+
+	* NEWS (Completion improvements): Mention "info threads".
+	* thread.c (struct info_threads_opts, info_threads_option_defs)
+	(make_info_threads_options_def_group): New.
+	(info_threads_command): Use gdb::option::process_options.
+	(info_threads_command_completer): New.
+	(_initialize_thread): Use gdb::option::build_help to build the
+	help text for "info threads".
+
+2019-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* defs.h (generic_load): Move from here...
+	* symfile.h (generic_load): ... to here.  Rename name parameter
+	to args.
+	* symfile.c (generic_load): Add comment.
+
+2019-07-01  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c
+	(dw2_debug_names_iterator::find_vec_in_debug_names): Hoist
+	declaration of without_params.  Fix formatting.
+
+2019-07-01  Tom Tromey  <tromey@adacore.com>
+
+	* ada-exp.y (find_primitive_type): Update.
+	* ada-lang.h (ada_lookup_symbol): Update.
+	* ada-lang.c (ada_lookup_symbol): Remove "is_a_field_of_this"
+	parameter.
+	(ada_lookup_encoded_symbol, ada_lookup_symbol_nonlocal): Update.
+
+2019-06-28  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	PR breakpoints/24541
+	* gdbarch.c: Regenerate.
+	* gdbarch.h: Regenerate.
+	* gdbarch.sh: Add 'stap_adjust_register'.
+	* i386-tdep.c: Include '<unordered_set>'.
+	(i386_stap_adjust_register): New function.
+	(i386_elf_init_abi): Register 'i386_stap_adjust_register'.
+	* stap-probe.c (stap_parse_register_operand): Call
+	'gdbarch_stap_adjust_register'.
+
+2019-06-28  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	PR python/24742
+	https://bugzilla.redhat.com/show_bug.cgi?id=1723564
+	* python/python.c (do_start_initialization): Use 'xmalloc'
+	instead of 'PyMem_Malloc'.
+
+2019-06-28  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (partial_die_info::read): Prefer the linkage name
+	for Ada.
+
+2019-06-27  Tom Tromey  <tromey@adacore.com>
+
+	* arm-tdep.c (arm_objfile_data_key): Move lower.  Change type to
+	objfile_key.
+	(arm_find_mapping_symbol, arm_record_special_symbol)
+	(_initialize_arm_tdep): Update.
+	(arm_objfile_data_free): Remove.
+
+2019-06-27  Tom Tromey  <tromey@adacore.com>
+
+	* cp-valprint.c (cp_print_value_fields): Pass opts, not options,
+	to cp_print_static_field.
+
+2019-06-26  Tom Tromey  <tromey@adacore.com>
+
+	* minsyms.c (lookup_minimal_symbol_solib_trampoline): Remove.
+	* minsyms.h (lookup_minimal_symbol_solib_trampoline): Don't
+	declare.
+
+2019-06-26  Alan Hayward  <alan.hayward@arm.com>
+
+	* features/aarch64-core.c (create_feature_aarch64_core):
+	Regenerate.
+	* features/aarch64-core.xml: Add cpsr flags.
+
+2019-06-26  Alan Hayward  <alan.hayward@arm.com>
+
+	* arm-tdep.c (arm_gnu_triplet_regexp): New function.
+	(arm_gdbarch_init): Add arm_gnu_triplet_regexp.
+
+2019-06-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* arm-tdep.c (struct arm_per_objfile) <section_maps_sorted>: New
+	field.
+	(arm_find_mapping_symbol): Sort mapping symbol vectors on first
+	use.
+	(arm_record_special_symbol): Don't insert new symbol in sorted
+	position, push it at the end.
+
+2019-06-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* arm-tdep.c (struct arm_mapping_symbol) (operator <): New.
+	(arm_mapping_symbol_s): Remove.
+	(DEF_VEC_O(arm_mapping_symbol_s)): Remove.
+	(arm_mapping_symbol_vec): New typedef.
+	(struct arm_per_objfile): Add constructor.
+	<section_maps>: Change type to
+	std::unique_ptr<arm_mapping_symbol_vec[]>.
+	(arm_compare_mapping_symbols): Remove.
+	(arm_find_mapping_symbol): Adjust to section_maps type change.
+	(arm_objfile_data_free): Call delete on arm_per_objfile.
+	(arm_record_special_symbol): Adjust to section_maps type change.
+	Allocate arm_per_objfile with new.
+
+2019-06-25  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-cmds.c (alias_command): Compare the alias prefix
+	with the command prefix.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_delete_win): Remove "return".
+	* tui/tui-data.c (~tui_gen_win_info): Remove "if".
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (init_and_make_win): Assert on unrecognized
+	type.
+	* tui/tui-data.h (struct tui_gen_win_info): Make constructor
+	protected.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c
+	(tui_source_window_base::set_is_exec_point_at): Add check against
+	LOA_ADDRESS.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.c (tui_set_source_content): Don't check before
+	xfree.
+	* tui/tui-disasm.c (tui_disassemble): Don't check before xfree.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_update_source_window_as_is)
+	(tui_alloc_source_buffer, tui_line_is_displayed)
+	(tui_addr_is_displayed): Change type of win_info.
+	* tui/tui-winsource.c (tui_update_source_window_as_is)
+	(tui_clear_source_content, tui_show_source_line)
+	(tui_show_source_content, tui_source_window_base::refill)
+	(tui_source_window_base::set_is_exec_point_at)
+	(tui_source_window_base::set_is_exec_point_at)
+	(tui_update_breakpoint_info, tui_set_exec_info_content): Update.
+	(tui_alloc_source_buffer, tui_line_is_displayed)
+	(tui_addr_is_displayed): Change type of win_info.  Update.
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights)
+	(tui_source_window_base::do_make_visible_with_new_height):
+	Update.
+	* tui/tui-source.c (tui_set_source_content)
+	(tui_set_source_content_nil)
+	(tui_source_window::do_scroll_vertical): Update.
+	* tui/tui-layout.c (show_layout): Update.
+	* tui/tui-disasm.c (tui_set_disassem_content)
+	(tui_disasm_window::do_scroll_vertical): Update.
+	* tui/tui-data.h (tui_win_content): Remove.
+	(struct tui_gen_win_info) <content, content_size>: Remove.
+	(struct tui_source_element): Add initializers and destructor.
+	(union tui_which_element, struct tui_win_element): Remove.
+	(struct tui_source_window_base) <content>: New field.
+	(struct tui_data_window): Remove destructor.
+	(tui_alloc_content, tui_free_win_content)
+	(tui_free_all_source_wins_content): Don't declare.
+	* tui/tui-data.c (tui_initialize_static_data): Update.
+	(init_content_element, tui_alloc_content): Remove.
+	(~tui_gen_win_info): Update.
+	(~tui_data_window, tui_free_all_source_wins_content)
+	(tui_free_win_content, free_content, free_content_elements):
+	Remove.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_clear_source_content)
+	(tui_erase_source_content, tui_show_source_content): Change type
+	of win_info.
+	* tui/tui-winsource.c (tui_clear_source_content)
+	(tui_erase_source_content, tui_show_source_content): Change type
+	of win_info.
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Update.
+	* tui/tui-source.h (tui_set_source_content_nil): Change type of
+	win_info.
+	* tui/tui-source.c (tui_set_source_content_nil): Change type of
+	win_info.
+	* tui/tui-layout.c (show_source_or_disasm_and_command): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_clear_source_content)
+	(tui_source_window_base::set_is_exec_point_at): Update.
+	* tui/tui-source.c (tui_set_source_content_nil): Update.
+	* tui/tui-data.h (struct tui_source_element) <is_exec_point>: Now
+	a bool.
+	* tui/tui-data.c (init_content_element): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_gen_win_info::make_visible): Update.
+	* tui/tui-win.c (make_invisible_and_set_new_height): Update.
+	* tui/tui-layout.c (init_and_make_win): Update.
+	* tui/tui.h (enum tui_win_type): Update.
+	* tui/tui-data.h (tui_win_is_auxiliary): Rename from
+	tui_win_is_auxillary.
+	* tui/tui-data.c (tui_win_is_auxiliary): Rename from
+	tui_win_is_auxillary.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_data_window::refresh_window): Update.
+	* tui/tui-windata.c (tui_data_window::first_data_item_displayed)
+	(tui_delete_data_content_windows, tui_display_all_data)
+	(tui_data_window::do_scroll_vertical, tui_display_data_from):
+	Update.
+	* tui/tui-win.c (tui_data_window::set_new_height): Simplify.
+	* tui/tui-regs.c (tui_last_regs_line_no)
+	(tui_line_from_reg_element_no, tui_first_reg_element_no_inline)
+	(tui_show_registers): Update.
+	(tui_show_register_group): Return void.  Update.
+	(tui_display_registers_from, tui_display_reg_element_at_line)
+	(tui_display_registers_from_line, tui_check_register_values):
+	Update.
+	* tui/tui-data.h (union tui_which_element) <data_window>: Remove
+	member.
+	(struct tui_data_window) <regs_content>: Now a std::vector.
+	<regs_content_count>: Remove.
+	(tui_add_content_elements, tui_free_data_content): Don't declare.
+	* tui/tui-data.c (tui_data_window::clear_detail): Update.
+	(init_content_element): Remove DATA_WIN case.  Add assert.
+	(tui_add_content_elements): Remove.
+	(tui_data_window): Update.
+	(tui_free_data_content): Remove.
+	(free_content_elements): Remove DATA_WIN case.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.c (tui_data_item_window): Update.
+	* tui/tui-windata.h (tui_check_data_values): Don't declare.
+	* tui/tui-windata.c (tui_display_all_data)
+	(tui_display_data_from_line): Update.
+	(tui_check_data_values): Remove.
+	* tui/tui-regs.c (tui_show_register_group)
+	(tui_display_reg_element_at_line): Update.
+	* tui/tui-hooks.c (tui_register_changed)
+	(tui_refresh_frame_and_register_information): Call
+	tui_check_register_values.
+	* tui/tui-data.h (struct tui_data_window) <data_content,
+	data_content_count, data_type>: Remove.
+	(enum tui_data_type): Remove.
+
+	* tui/tui-data.c (tui_data_window::clear_detail)
+	(~tui_data_window): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.h (tui_first_data_item_displayed): Don't
+	declare.
+	* tui/tui-windata.c (tui_data_window::first_data_item_displayed):
+	Rename from tui_first_data_item_displayed.  Update.
+	(tui_data_window::refresh_all)
+	(tui_data_window::do_scroll_vertical): Update.
+	* tui/tui-data.h (struct tui_data_window)
+	<first_data_item_displayed>: Declare new method.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (tui_init_generic_part): Don't declare.
+	* tui/tui-data.c (tui_init_generic_part): Remove, moving
+	contents...
+	(tui_initialize_static_data): ...here.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_show_registers, tui_show_register_group)
+	(tui_display_registers_from, tui_check_register_values): Update.
+	(tui_display_register): Remove win_info parameter; update.
+	(tui_get_register): Change type of parameters.
+	* tui/tui-data.h (struct tui_data_element): Remove.
+	(union tui_which_element) <data>: Remove.
+	<data_window>: Change type.
+	(struct tui_data_item_window): New.
+	* tui/tui-data.c (init_content_element): Remove DATA_ITEM_WIN
+	case.  Add assert.
+	(~tui_data_item_window): New destructor.
+	(free_content_elements): Remove DATA_ITEM_WIN case.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.h (enum tui_win_type) <MAX_WINDOWS, UNDEFINED_WIN>:
+	Remove.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_command_element): Remove.
+	(union tui_which_element) <command>: Remove.
+	* tui/tui-data.c (init_content_element): Remove CMD_WIN case.  Add
+	assert.
+	(free_content_elements): Remove CMD_WIN case.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (tui_set_layout): Update.
+	* tui/tui-data.h (struct tui_layout_def) <split>: Remove.
+	* tui/tui-data.c (layout_def): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_refresh_all): Update.
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights)
+	(tui_source_window_base::set_new_height): Update.
+	* tui/tui-stack.c (tui_make_status_line): Change parameter type.
+	Update.
+	(tui_set_locator_fullname, tui_set_locator_info)
+	(tui_show_frame_info): Update.
+	* tui/tui-source.c (tui_set_source_content)
+	(tui_source_is_displayed): Update.
+	* tui/tui-layout.c (show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Update.
+	* tui/tui-disasm.c (tui_set_disassem_content)
+	(tui_get_begin_asm_address): Update.
+	* tui/tui-data.h (struct tui_locator_element): Remove.
+	(union tui_which_element) <locator>: Remove.
+	(struct tui_locator_window): New.
+	(tui_locator_win_info_ptr): Change return type.
+	* tui/tui-data.c (_locator): Change type.
+	(tui_locator_win_info_ptr): Change return type.
+	(init_content_element): Remove LOCATOR_WIN case.  Add assert.
+	(tui_alloc_content): Add assert.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c
+	(tui_exec_info_window::maybe_allocate_content): New method.
+	(tui_set_exec_info_content, tui_show_exec_info_content): Update.
+	* tui/tui-layout.c (init_and_make_win): Add EXEC_INFO_WIN case.
+	(make_source_or_disasm_window): Add cast.
+	* tui/tui-data.h (union tui_which_element) <simple_string>:
+	Remove.
+	(struct tui_source_info): New.
+	(struct tui_source_window_base) <execution_info>: Change type.
+	* tui/tui-data.c (init_content_element): Remove EXEC_INFO_WIN
+	case, and add assert.
+	(tui_alloc_content): Add assert.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (tui_alloc_win_info): Don't declare.
+	* tui/tui-layout.c (init_and_make_win): Use "new" directly.
+	* tui/tui-data.c (tui_alloc_win_info): Remove.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_set_win_focus_to): Don't check window type.
+	* tui/tui-wingeneral.c (tui_unhighlight_win): Check
+	can_highlight.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_source_window_base::update_tab_width): Call
+	make_visible_with_new_height method.
+	(tui_win_info::make_visible_with_new_height): New method.
+	(tui_source_window_base::do_make_visible_with_new_height)
+	(tui_data_window::do_make_visible_with_new_height)
+	(tui_cmd_window::do_make_visible_with_new_height): New methods.
+	(make_visible_with_new_height): Remove.
+	(tui_resize_all, tui_adjust_win_heights): Use
+	make_visible_with_new_height method.
+	* tui/tui-data.h (struct tui_win_info)
+	<do_make_visible_with_new_height, make_visible_with_new_height>:
+	New methods.
+	(struct tui_source_window_base, struct tui_data_window)
+	(struct tui_cmd_window) <do_make_visible_with_new_height>: New
+	methods.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_source_window_base::update_tab_width): New
+	method.
+	(update_tab_width): Call update_tab_width method.
+	* tui/tui-data.h (struct tui_win_info)
+	(struct tui_source_window_base) <update_tab_width>: New methods.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_make_window): Change type of "box_it"
+	parameter.
+	* tui/tui-wingeneral.c (tui_make_window): Change type of "box_it"
+	parameter.
+	(tui_gen_win_info::make_visible): Update.
+	* tui/tui-layout.c (init_and_make_win): Change type of "box_it"
+	parameter.
+	* tui/tui-data.h (enum tui_box): New enum.
+	(BOX_WINDOW, DONT_BOX_WINDOW): Remove defines.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (make_source_or_disasm_window): Always use
+	init_and_make_win for EXEC_INFO_WIN.
+	* tui/tui-data.h (struct tui_gen_win_info) <~tui_gen_win_info>: No
+	longer inline.
+	(struct tui_win_info) <~tui_win_info>: Inline.
+	(tui_source_exec_info_win_ptr, tui_disassem_exec_info_win_ptr):
+	Don't declare.
+	* tui/tui-data.c (source_win, disasm_win): Remove globals.
+	(tui_source_exec_info_win_ptr, tui_disassem_exec_info_win_ptr):
+	Remove.
+	(tui_initialize_static_data): Update.
+	(~tui_gen_win_info): Handle more cleanup here.
+	(~tui_source_window_base): Delete "execution_info".
+	(~tui_win_info): Move code to ~tui_gen_win_info; remove.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (make_command_window): Don't set
+	can_highlight.
+	(show_source_disasm_command): Call the reset method.
+	(show_data): Don't set can_highlight.  Call the reset method.
+	(tui_gen_win_info::reset): Rename from init_gen_win_info
+	(init_and_make_win): Simplify.  Return tui_gen_win_info.
+	(show_source_or_disasm_and_command): Call the reset method.
+	* tui/tui-data.h (struct tui_gen_win_info) <reset>: New method.
+	(struct tui_cmd_window): Set can_highlight.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_gen_win_info::make_visible): Rename
+	from make_visible.
+	(tui_make_visible, tui_make_invisible): Rewrite.
+	(tui_win_info::make_visible): Remove.
+	(tui_source_window_base::make_visible): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <make_visible>: New
+	method.  Moved from...
+	(struct tui_win_info) <make_visible>: ...here.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c
+	(tui_source_window_base::do_scroll_horizontal): Remove direction
+	parameter.
+	* tui/tui-windata.c (tui_data_window::do_scroll_vertical): Remove
+	direction parameter.
+	* tui/tui-win.c (tui_win_info::forward_scroll)
+	(tui_win_info::backward_scroll, tui_win_info::left_scroll)
+	(tui_win_info::right_scroll): Update.
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Remove
+	direction parameter.
+	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Remove
+	direction parameter.
+	* tui/tui-data.h (enum tui_scroll_direction): Remove.
+	(struct tui_win_info) <do_scroll_vertical, do_scroll_horizontal>:
+	Remove direction parameter.
+	(struct tui_source_window_base, struct tui_source_window)
+	(struct tui_disasm_window, struct tui_data_window)
+	(struct tui_cmd_window): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_set_exec_info_content)
+	(tui_show_exec_info_content, tui_erase_exec_info_content)
+	(tui_clear_exec_info_content, tui_update_exec_info): Change
+	argument to tui_source_window_base.
+	* tui/tui-winsource.c (tui_set_exec_info_content)
+	(tui_show_exec_info_content, tui_erase_exec_info_content)
+	(tui_clear_exec_info_content, tui_update_exec_info): Change
+	argument to tui_source_window_base.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_set_exec_info_content): Return void.
+	* tui/tui-winsource.c (tui_set_exec_info_content): Return void.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_set_exec_info_content): Remove NULL
+	check.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_alloc_source_buffer): Change return
+	type to void.
+	* tui/tui-winsource.c (tui_alloc_source_buffer): Change return
+	type to void.
+	* tui/tui-source.c (tui_set_source_content): Update.
+	* tui/tui-disasm.c (tui_set_disassem_content): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (window_name_completer, tui_set_focus)
+	(tui_all_windows_info): Use name method.
+	* tui/tui-data.h (struct tui_gen_win_info)
+	(struct tui_source_window, struct tui_disasm_window)
+	(struct tui_data_window, struct tui_cmd_window) <name>: New
+	method.
+	(tui_win_name): Don't declare.
+	* tui/tui-data.c (tui_partial_win_by_name): Use name method.
+	(tui_win_name): Remove.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_update_source_window)
+	(tui_update_source_window_as_is): Change parameter type.
+	* tui/tui-winsource.c (tui_update_source_window): Change win_info
+	to be a tui_source_window_base.
+	(tui_update_source_window_as_is): Likewise.
+	* tui/tui-win.c (make_visible_with_new_height): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_erase_source_content)
+	(tui_show_source_content, tui_show_exec_info_content)
+	(tui_erase_exec_info_content): Use refresh_window method.
+	* tui/tui-wingeneral.h (tui_refresh_win): Don't declare.
+	* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window): Rename
+	from tui_refresh_win.
+	(tui_data_window::refresh_window): New method.
+	(tui_win_info::refresh, tui_source_window_base::refresh)
+	(tui_refresh_all): Use refresh_window method.
+	* tui/tui-stack.c (tui_show_locator_content): Call refresh_window
+	method.
+	* tui/tui-regs.c (tui_display_register): Call refresh_window
+	method.
+	* tui/tui-layout.c (show_source_disasm_command)
+	(show_source_or_disasm_and_command): Call refresh_window method.
+	* tui/tui-data.h (struct tui_gen_win_info)
+	(struct tui_data_window, struct tui_cmd_window) <refresh_window>:
+	New method.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_rl_other_window, tui_enable)
+	(tui_is_window_visible, tui_get_command_dimension): Update.
+	* tui/tui-winsource.c (tui_update_source_window_as_is)
+	(tui_clear_source_content, tui_erase_source_content)
+	(tui_show_source_line, tui_source_window_base::refill)
+	(tui_source_window_base::do_scroll_horizontal)
+	(tui_source_window_base::set_is_exec_point_at)
+	(tui_update_breakpoint_info, tui_set_exec_info_content)
+	(tui_alloc_source_buffer, tui_line_is_displayed)
+	(tui_addr_is_displayed): Update.
+	* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win)
+	(tui_check_and_display_highlight_if_needed)
+	(tui_win_info::make_visible, tui_win_info::refresh)
+	(tui_refresh_all): Update.
+	* tui/tui-windata.c (tui_first_data_item_displayed)
+	(tui_delete_data_content_windows, tui_erase_data_content)
+	(tui_display_all_data, tui_data_window::refresh_all)
+	(tui_check_data_values): Update.
+	* tui/tui-win.c (window_name_completer, tui_update_gdb_sizes)
+	(tui_set_win_focus_to, tui_win_info::forward_scroll)
+	(tui_win_info::backward_scroll, tui_refresh_all_win)
+	(tui_resize_all, tui_set_focus, tui_all_windows_info)
+	(update_tab_width, tui_set_win_height, tui_adjust_win_heights)
+	(tui_source_window_base::set_new_height)
+	(tui_data_window::set_new_height)
+	(make_invisible_and_set_new_height)
+	(make_visible_with_new_height, new_height_ok)
+	(parse_scrolling_args): Update.
+	* tui/tui-stack.c (tui_show_frame_info): Update.
+	* tui/tui-source.c (tui_set_source_content)
+	(tui_set_source_content_nil, tui_source_is_displayed)
+	(tui_source_window::do_scroll_vertical): Update.
+	* tui/tui-regs.c (tui_show_registers, tui_show_register_group)
+	(tui_display_registers_from, tui_display_reg_element_at_line)
+	(tui_check_register_values, tui_reg_command): Update.
+	* tui/tui-layout.c (tui_default_win_height)
+	(show_source_disasm_command, show_data, init_and_make_win)
+	(show_source_or_disasm_and_command): Update.
+	* tui/tui-io.c (update_cmdwin_start_line, tui_putc, tui_puts)
+	(tui_redisplay_readline, tui_mld_flush)
+	(tui_mld_erase_entire_line, tui_mld_getc, tui_cont_sig)
+	(tui_getc): Update.
+	* tui/tui-disasm.c (tui_set_disassem_content)
+	(tui_disasm_window::do_scroll_vertical): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <~tui_gen_win_info>:
+	Now virtual.
+	(struct tui_win_info): Derive from tui_gen_win_info.
+	<~tui_win_info>: Mark as override.
+	<generic>: Remove member.
+	* tui/tui-data.c (tui_cmd_window::clear_detail, tui_next_win)
+	(tui_prev_win, tui_partial_win_by_name, tui_win_info)
+	(~tui_data_window, ~tui_win_info)
+	(tui_free_all_source_wins_content): Update.
+	* tui/tui-command.c (tui_refresh_cmd_win): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (init_and_make_win): Use new.
+	* tui/tui-data.h (struct tui_gen_win_info): Add constructor,
+	destructor, initializers.
+	(tui_alloc_generic_win_info): Don't declare.
+	* tui/tui-data.c (_locator): Add argument to constructor.
+	(source_win, disasm_win): New globals.
+	(exec_info): Remove.
+	(tui_source_exec_info_win_ptr, tui_disassem_exec_info_win_ptr):
+	Update.
+	(tui_alloc_generic_win_info): Remove.
+	(init_content_element): Use new.
+	(tui_win_info::tui_win_info): Update.
+	(free_content_elements) <case DATA_WIN>: Use delete.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_refresh_win): Update.
+	* tui/tui-windata.c (tui_first_data_item_displayed)
+	(tui_delete_data_content_windows): Update.
+	* tui/tui-win.c (tui_data_window::set_new_height): Update.
+	* tui/tui-regs.c (tui_show_registers, tui_show_register_group)
+	(tui_display_registers_from, tui_check_register_values): Update.
+	* tui/tui-data.h (union tui_which_element) <data_window>: Now a
+	pointer.
+	* tui/tui-data.c (init_content_element): Update.  Allocate the new
+	window.
+	(tui_free_data_content): Update.
+	(free_content_elements) <case DATA_WIN>: Free the window.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win):
+	Update.
+	* tui/tui-layout.c (make_command_window)
+	(show_source_disasm_command, show_data, init_and_make_win)
+	(show_source_or_disasm_and_command): Update.
+	* tui/tui-data.h (struct tui_win_info) <set_highlight>: New
+	method.
+	<can_highight, is_highlighted>: Now bool.
+	(tui_set_win_highlight): Don't declare.
+	* tui/tui-data.c (tui_set_win_highlight): Remove.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (make_visible): Remove check of window
+	type.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_win_info::max_height)
+	(tui_cmd_window::max_height): New methods.
+	(new_height_ok): Call max_height.
+	* tui/tui-data.h (struct tui_win_info, struct tui_cmd_window)
+	<max_height>: New method.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_source_window_base::set_new_height)
+	(tui_data_window::set_new_height): New methods.
+	(make_invisible_and_set_new_height): Call set_new_height method.
+	* tui/tui-data.h (struct tui_win_info)
+	(struct tui_source_window_base, struct tui_data_window)
+	<set_new_height>: New method.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_rl_other_window): Call the refresh_all method.
+	* tui/tui-windata.c (tui_data_window::refresh_all): Rename from
+	tui_refresh_data_win.
+	* tui/tui-win.c (tui_source_window_base::refresh_all): New
+	method.
+	(tui_refresh_all_win): Call the refresh_all method.
+	(tui_set_focus): Likewise.
+	* tui/tui-data.h (struct tui_win_info) <refresh_all>: New method.
+	(struct tui_source_window_base, struct tui_data_window) <refresh>:
+	Likewise.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_refill_source_window)
+	(tui_set_is_exec_point_at): Don't declare.
+	* tui/tui-winsource.c (tui_update_source_windows_with_addr)
+	(tui_source_window_base::refill): Rename from
+	tui_refill_source_window.
+	(tui_source_window_base::do_scroll_horizontal): Update.
+	(tui_source_window_base::set_is_exec_point_at): Rename from
+	tui_set_is_exec_point_at.
+	(tui_update_all_breakpoint_info): Update.
+	* tui/tui-stack.c (tui_show_frame_info): Update.
+	* tui/tui-layout.c (show_data): Add cast.
+	* tui/tui-hooks.c (tui_redisplay_source): Call refill method.
+	* tui/tui-data.h (struct tui_source_window_base) <refill,
+	set_is_exec_point_at>: New methods.
+	(tui_source_windows, tui_add_to_source_windows): Update types.
+	(tui_add_to_source_windows): Remove redundant declaration.
+	* tui/tui-data.c (source_windows): Store tui_source_window_base.
+	(tui_source_windows): Change return type.
+	(tui_clear_source_windows_detail): Update.
+	(tui_add_to_source_windows): Change type of parameter.
+	(tui_free_all_source_wins_content): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_win_info::refresh)
+	(tui_source_window_base::refresh): New methods.
+	(tui_refresh_all): Call the refresh method.
+	* tui/tui-data.h (struct tui_win_info)
+	(struct tui_source_window_base) <refresh>: New method.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.h (tui_is_window_visible): Return bool.
+	* tui/tui.c (tui_is_window_visible): Return bool.
+	* tui/tui-wingeneral.c (tui_make_window, make_visible)
+	(tui_make_visible, tui_make_invisible)
+	(tui_win_info::make_visible)
+	(tui_source_window_base::make_visible, make_all_visible)
+	(tui_make_all_visible, tui_make_all_invisible): Update.
+	* tui/tui-windata.c (tui_delete_data_content_windows): Update.
+	* tui/tui-data.h (struct tui_gen_win_info) <is_visible>: Now
+	bool.
+	(struct tui_win_info, struct tui_source_window_base)
+	(struct tui_cmd_window) <make_visible>: Change parameter to bool.
+	* tui/tui-data.c (tui_init_generic_part): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_win_info::make_visible)
+	(tui_source_window_base::make_visible): New methods.
+	(make_all_visible): Make method call.
+	* tui/tui-data.h (struct tui_win_info) <make_visible>: New method.
+	(struct tui_source_window_base, struct tui_cmd_window): Override
+	make_visible.
+	(tui_win_is_source_type): Don't declare.
+	* tui/tui-data.c (tui_win_is_source_type): Remove.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_source_or_disasm_and_command): Remove
+	NULL check.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_data_window, struct tui_cmd_window):
+	Inline constructor.  Add initializers for members.
+	* tui/tui-data.c (tui_data_window, tui_cmd_window): Remove
+	constructors; now inline in class.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_show_registers): Update.
+	* tui/tui-data.h (struct tui_data_window) <display_regs>: Now
+	bool.
+	* tui/tui-data.c (tui_data_window::clear_detail)
+	(tui_data_window): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.c (tui_display_all_data)
+	(tui_display_data_from_line, tui_display_data_from)
+	(tui_check_data_values, tui_data_window::do_scroll_vertical):
+	Update.
+	* tui/tui-regs.c (tui_last_regs_line_no)
+	(tui_line_from_reg_element_no, tui_first_reg_element_no_inline)
+	(tui_show_registers, tui_show_register_group)
+	(tui_display_registers_from, tui_display_reg_element_at_line)
+	(tui_display_registers_from_line, tui_check_register_values)
+	(tui_reg_next, tui_reg_prev): Update.
+	* tui/tui-layout.c (tui_set_layout, show_data): Update.
+	* tui/tui-data.h (struct tui_data_info): Remove.  Move contents to
+	tui_data_window.
+	(struct tui_win_info) <detail>: Remove.  Add new fields from
+	tui_data_info.
+	(TUI_DATA_WIN): Add cast.
+	* tui/tui-data.c (tui_data_window::clear_detail, tui_data_window)
+	(~tui_data_window): Simplify.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (show_source_disasm_command)
+	(show_source_or_disasm_and_command): Update.
+	* tui/tui-io.c (update_cmdwin_start_line)
+	(tui_redisplay_readline): Update.
+	* tui/tui-data.h (struct tui_command_info): Remove.
+	(struct tui_win_info) <detail>: Remove command_info member.
+	(struct tui_data_window) <start_line>: New member, from
+	tui_command_info.
+	(TUI_CMD_WIN): Add casts.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_window)
+	(tui_refill_source_window)
+	(tui_source_window_base::do_scroll_horizontal)
+	(tui_update_breakpoint_info, tui_set_exec_info_content)
+	(tui_show_exec_info_content, tui_erase_exec_info_content)
+	(tui_clear_exec_info_content): Update.
+	* tui/tui-wingeneral.c (make_all_visible, tui_refresh_all):
+	Update.
+	* tui/tui-win.c (make_invisible_and_set_new_height)
+	(make_visible_with_new_height): Update.
+	* tui/tui-source.c (tui_set_source_content)
+	(tui_show_symtab_source): Update.
+	* tui/tui-layout.c (extract_display_start_addr)
+	(show_source_disasm_command, show_data)
+	(make_source_or_disasm_window)
+	(show_source_or_disasm_and_command): Update.
+	* tui/tui-disasm.c (tui_set_disassem_content): Simplify.
+	(tui_disasm_window::do_scroll_vertical): Remove shadowing
+	"gdbarch".
+	* tui/tui-data.h (struct tui_source_info): Remove.  Move contents
+	to tui_source_window_base.
+	(struct tui_win_info) <detail>: Remove source_info member.
+	(struct tui_source_window_base) <has_locator>: Inline.
+	Move contents from tui_source_info; rename has_locator member to
+	m_has_locator.
+	(TUI_SRC_WIN, TUI_DISASM_WIN): Add casts.
+	* tui/tui-data.c (tui_source_window_base::has_locator): Move to
+	header file.
+	(tui_source_window_base::clear_detail, ~tui_source_window_base):
+	Simplify.
+	(tui_free_all_source_wins_content): Cast to
+	tui_source_window_base.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (make_invisible_and_set_new_height)
+	(make_visible_with_new_height): Call has_locator method.
+	* tui/tui-layout.c (show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Update for bool change.
+	* tui/tui-data.h (struct tui_source_info) <has_locator>: Now bool.
+	(tui_win_info) <has_locator>: New method.
+	(struct tui_source_window_base) <has_locator>: New method.
+	(tui_win_has_locator): Don't declare.
+	* tui/tui-data.c (tui_source_window_base::has_locator): Rename
+	from tui_win_has_locator.
+	(tui_source_window_base): Use false, not FALSE.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (tui_clear_win_detail): Don't declare.
+	* tui/tui-data.c (tui_clear_source_windows_detail): Call the
+	clear_detail method directly.
+	(tui_clear_win_detail): Remove.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Use
+	"this", not TUI_DISASM_WIN.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (tui_horizontal_source_scroll):  Don't
+	declare.
+	* tui/tui-winsource.c
+	(tui_source_window_base::do_scroll_horizontal): Rename from
+	tui_horizontal_source_scroll.
+	* tui/tui-windata.h (tui_vertical_data_scroll): Don't declare.
+	* tui/tui-windata.c (tui_data_window::do_scroll_vertical): Rename
+	from tui_vertical_data_scroll.
+	* tui/tui-win.h (tui_scroll): Don't declare.
+	* tui/tui-win.c (tui_win_info::forward_scroll)
+	(tui_win_info::backward_scroll, tui_win_info::left_scroll)
+	(tui_win_info::right_scroll): Rename and update.
+	(tui_scroll_forward_command, tui_scroll_backward_command)
+	(tui_scroll_left_command, tui_scroll_right_command): Update.
+	(tui_scroll): Remove.
+	* tui/tui-source.h: Don't declare tui_vertical_source_scroll.
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Rename
+	from tui_vertical_source_scroll.
+	* tui/tui-disasm.h (tui_vertical_disassem_scroll): Don't declare.
+	* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Rename
+	from tui_vertical_disassem_scroll.
+	* tui/tui-data.h (struct tui_win_info) <do_scroll_vertical,
+	do_scroll_horizontal>: New methods.
+	<forward_scroll, backward_scroll, left_scroll, right_scroll>:
+	Likewise.
+	(struct tui_source_window_base): Add do_scroll_horizontal.
+	(struct tui_source_window, struct tui_disasm_window): Add
+	do_scroll_vertical.
+	(struct tui_data_window, struct tui_cmd_window): Add
+	do_scroll_horizontal and do_scroll_vertical.
+	* tui/tui-command.c (tui_dispatch_ctrl_char): Use method calls.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_source_window_base): New struct.
+	(struct tui_source_window): Derive from tui_source_window_base.
+	(struct tui_disasm_window): New struct.
+	* tui/tui-data.c (tui_source_window_base::clear_detail): Rename
+	from tui_source_window::clear_detail.
+	(tui_source_window_base): Rename from tui_source_window.
+	(~tui_source_window_base): Rename from ~tui_source_window.
+	(tui_alloc_win_info): Create a tui_disasm_window.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_source_window)
+	(struct tui_data_window): Declare destructors.
+	* tui/tui-data.c (~tui_source_window, ~tui_data_window): New
+	destructors.
+	(tui_win_info): Simplify.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_display_main)
+	(tui_update_source_windows_with_addr)
+	(tui_update_all_breakpoint_info): Update.
+	* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights)
+	(new_height_ok, parse_scrolling_args): Update.
+	* tui/tui-stack.c (tui_show_frame_info): Update.
+	* tui/tui-data.h (struct tui_list): Remove.
+	(tui_source_windows): Return a reference to a std::vector.
+	* tui/tui-data.c (source_windows): Now a std::vector.
+	(tui_source_windows): Change return type.
+	(tui_clear_source_windows): Rewrite.
+	(tui_clear_source_windows_detail, tui_add_to_source_windows)
+	(tui_free_all_source_wins_content): Rewrite.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_win_info, struct tui_source_window)
+	(struct tui_data_window, struct tui_cmd_window): Declare
+	clear_detail method.
+	* tui/tui-data.c (tui_source_window::clear_detail)
+	(tui_cmd_window::clear_detail, tui_data_window::clear_detail): New
+	methods.
+	(tui_clear_win_detail): Simplify.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (make_source_window, make_disasm_window)
+	(make_source_or_disasm_window): Remove win_info_ptr parameter.
+	Return the new window.
+	(show_source_disasm_command, show_data)
+	(show_source_or_disasm_and_command): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (make_command_window): Remove win_info_ptr
+	parameter.  Return the new window.
+	(show_source_disasm_command): Update and remove NULL check.
+	(show_source_or_disasm_and_command): Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (init_and_make_win): Remove NULL check.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_win_info): Make constructor
+	protected.  Make destructor virtual.  Add initializers.
+	(tui_source_window, tui_data_window, tui_cmd_window): New
+	classes.
+	* tui/tui-data.c (tui_win_info): Rename from init_win_info.  Now a
+	constructor.  Add "type" parameter.
+	(tui_source_window, tui_data_window, tui_cmd_window): New
+	constructors.
+	(tui_alloc_win_info): Instantiate the appropriate subclass.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_resize_all): Use delete.
+	* tui/tui-data.h (struct tui_win_info) <~tui_win_info>: Declare
+	destructor.
+	(tui_free_window): Don't declare.
+	* tui/tui-data.c (~tui_win_info): Rename from tui_free_window.
+	Update.
+
+2019-06-25  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_win_info): Add constructor.
+	* tui/tui-data.c (tui_alloc_win_info): Use new.
+	(tui_free_window): Use delete.
+
+2019-06-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-windata.h (tui_first_data_element_no_in_line): Don't
+	declare.
+	* tui/tui-windata.c (tui_first_data_element_no_in_line): Remove.
+
+2019-06-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (tui_del_window, tui_del_data_windows): Don't
+	declare.
+	* tui/tui-data.c (tui_del_window, tui_del_data_windows): Remove.
+
+2019-06-22  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2read.c (create_addrmap_from_aranges)
+	(read_debug_names_from_section): Print ptrdiff_t using '%s' and plongest
+	instead of '%zu'.
+
+2019-06-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2read.h (dwarf2_section_info_def): Remove.
+	(DEF_VEC_O (dwarf2_section_info_def)): Remove.
+	* dwarf2read.c (struct dwo_sections) <types>: Change type to
+	std::vector<dwarf2_section_info>.
+	(struct dwo_file) <~dwo_file>: Remove.
+	(dwarf2_per_objfile::~dwarf2_per_objfile): Don't manually free
+	types field.
+	(dwarf2_per_objfile::locate_sections): Adjust to std::vector.
+	(dwarf2_read_debug_names): Likewise.
+	(create_debug_types_hash_table): Change parameter type to
+	array_view, adjust code accordingly.
+	(dwarf2_locate_dwo_sections): Adjust to std::vector.
+	(partial_die_info::fixup): Likewise.
+	(determine_prefix): Likewise.
+	* dwarf-index-write.c (write_psymtabs_to_index): Adjust.
+
+2019-06-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2read.c (struct dwo_file) <dbfd>: Change type to
+	gdb_bfd_ref_ptr.
+	<~dwo_file>: Remove call to gdb_bfd_unref.
+	(open_and_init_dwo_file): Move gdb_bfd_ref_ptr into dbfd field. Call
+	gdb_bfd_ref_ptr::get.
+
+2019-06-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2read.h (struct dwarf2_per_objfile) <dwo_files>: Change
+	type to htab_up.
+	* dwarf2read.c (struct dwo_file): Initialize fields.
+	<~dwo_file>: New.
+	(free_dwo_file): Remove, move content to ~dwo_file.
+	(struct dwo_file_deleter): Remove.
+	(dwo_file_up>: Remove custom deleter.
+	(free_dwo_files): Remove.
+	(dwarf2_per_objfile::~dwarf2_per_objfile): Don't explicitly free
+	dwo_files.
+	(process_skeletonless_type_units): Call unique_ptr::get.
+	(allocate_dwo_file_hash_table): Add deleter to created hash
+	table.  Change return type to htab_up.
+	(lookup_dwo_file_slot): Don't memset dwo_file, call
+	unique_ptr::get.
+	(create_dwo_unit_in_dwp_v1): Allocate dwo_file with new.
+	(create_dwo_unit_in_dwp_v2): Likewise.
+	(open_and_init_dwo_file): Likewise.
+	(free_dwo_file_from_slot): Remove.
+
+2019-06-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2read.h (struct dwarf2_section_info) <readin,
+	is_virtual>: Change type to bool.
+	* dwarf2read.c (dwarf2_read_section, create_dwp_v2_section): Use
+	true instead of 1.
+
+2019-06-19  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (tui_init_content_element): Don't declare.
+
+2019-06-19  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (tui_init_win_info): Don't declare.
+
+2019-06-19  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2read.h (abstract_to_concrete): Change type to
+	std::unordered_map<sect_offset, std::vector<sect_offset>,
+	gdb::hash_enum<sect_offset>>.
+
+2019-06-19  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_evaluate_subexp) <case OP_ATR_FIRST>: Handle
+	EVAL_AVOID_SIDE_EFFECTS specially.
+
+2019-06-19  Tom Tromey  <tromey@adacore.com>
+
+	* source-cache.c (highlighter): New global.
+	(source_cache::get_source_lines): Create a highlighter on demand.
+
+2019-06-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* defs.h (deprecated_interactive_hook): Delete declaration.
+	* interps.c (clear_interpreter_hooks): Remove use of
+	deprecated_interactive_hook.
+	* top.c (deprecated_interactive_hook): Delete definition.
+	* utils.c (maybe_quit): Remove use of deprecated_interactive_hook.
+
+2019-06-18  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24515
+	* dwarf2read.h (abstract_to_concrete): Change type from
+	std::unordered_map<die_info_ptr, std::vector<die_info_ptr>> to
+	std::unordered_map<sect_offset, std::vector<sect_offset>>.
+	* dwarf2read.c (read_variable): Update.
+	(dwarf2_fetch_die_loc_sect_off): Update.
+
+2019-06-17  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24617
+	* common/pathstuff.c (child_path): Make sure parent_len > 0 before
+	accessing parent[parent_len - 1].
+
+2019-06-17  Paul Pluzhnikov  <ppluzhnikov@google.com>
+
+	PR gdb/24364
+	* dtrace-probe.c (dtrace_static_probe_ops::get_probe): Don't
+	call dtrace_process_dof with NULL dof.
+
+2019-06-16  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24445
+	* contrib/gdb-add-index.sh: Update to handle dwz-m-ed executable.
+
+2019-06-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_unhighlight_win, tui_highlight_win)
+	(make_all_visible): Use address of member.
+
+2019-06-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.c (tui_clear_win_detail, init_win_info)
+	(tui_free_window, free_content, free_content_elements): Remove
+	unnecessary cast.
+	* tui/tui-windata.c (tui_display_all_data): Remove unnecessary
+	cast.
+	* tui/tui-regs.c (tui_show_register_group)
+	(tui_display_registers_from, tui_display_reg_element_at_line):
+	Remove unnecessary cast.
+
+2019-06-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-nat.c (normal_mask): Delete.
+	(_initialize_linux_nat): Don't initialise normal_mask.
+
+2019-06-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/24445
+	* dwarf-index-write.h (write_psymtabs_to_index): Add
+	dwz_basename parameter.
+	* dwarf-index-write.c (write_gdbindex): Move file writing to
+	write_gdbindex_1.  Change return type void.
+	(assert_file_size): Move up, remove filename parameter.
+	(write_gdbindex_1): New function.
+	(write_debug_names): Change return type to void, call
+	assert_file_size.
+	(struct index_wip_file): New struct.
+	(write_psymtabs_to_index): Add dwz_basename parameter.  Move
+	file logic to index_wip_file.  Write index for dwz file if
+	needed.
+	(save_gdb_index_command): Pass basename of dwz file, if present.
+	* dwarf-index-cache.c (index_cache::store): Obtain and pass
+	build-id of dwz file, if present.
+	* dwarf2read.c (struct dwz_file): Move to dwarf2read.h.
+	(dwarf2_get_dwz_file): Likewise.
+	* dwarf2read.h (struct dwz_file): Move from dwarf2read.c.
+	(dwarf2_get_dwz_file): Likewise.
+
+2019-06-16  Tom Tromey  <tom@tromey.com>
+
+	* coffread.c (process_coff_symbol): Use xstrdup.
+	* value.c (create_internalvar): Use xstrdup.
+
+2019-06-16  Tom Tromey  <tom@tromey.com>
+
+	* valops.c (value_cast, value_slice): Remove unnecessary cast.
+	* breakpoint.c (stopin_command, stopat_command)
+	(until_break_command, decode_location_default): Remove unnecessary
+	cast.
+	* utils.c (subset_compare): Remove unnecessary cast.
+	* ada-lang.c (ada_update_initial_language): Remove unnecessary
+	cast.
+	* linespec.c (decode_line_with_last_displayed): Remove unnecessary
+	cast.
+	* infcmd.c (path_command): Remove unnecessary cast.
+	* coffread.c (decode_type): Remove unnecessary cast.
+	* xcoffread.c (read_xcoff_symtab): Remove unnecessary cast.
+	* mipsread.c (mipscoff_symfile_read): Remove unnecessary cast.
+	* tui/tui-stack.c (tui_show_locator_content)
+	(tui_show_frame_info): Remove unnecessary cast.
+	* tui/tui-win.c (tui_scroll_forward_command)
+	(tui_scroll_backward_command, tui_set_focus, tui_set_win_height)
+	(parse_scrolling_args): Remove unnecessary cast.
+	* tui/tui-data.c (init_win_info, tui_del_window)
+	(tui_free_window, tui_del_data_windows, tui_free_data_content)
+	(free_content_elements): Remove unnecessary cast.
+	* tui/tui-windata.c (tui_first_data_item_displayed): Remove
+	unnecessary cast.
+	* tui/tui-source.c (tui_set_source_content)
+	(tui_vertical_source_scroll): Remove unnecessary cast.
+	* tui/tui-layout.c (tui_default_win_height): Remove unnecessary
+	cast.
+	* tui/tui-io.c (tui_initialize_io): Remove unnecessary cast.
+	* tui/tui-regs.c (tui_display_registers_from)
+	(tui_display_register): Remove unnecessary cast.
+	* tui/tui-wingeneral.c (tui_refresh_win, tui_delete_win)
+	(tui_unhighlight_win, tui_highlight_win, tui_make_window)
+	(make_visible): Remove unnecessary cast.
+	* tui/tui-winsource.c (tui_erase_source_content)
+	(tui_update_breakpoint_info, tui_set_exec_info_content): Remove
+	unnecessary cast.
+	* ax-gdb.c (agent_command_1): Remove unnecessary cast.
+	* cli/cli-setshow.c (cmd_show_list): Remove unnecessary cast.
+	* stabsread.c (read_type, read_array_type, read_range_type):
+	Remove unnecessary cast.
+	* mdebugread.c (mdebug_build_psymtabs): Remove unnecessary cast.
+	(parse_symbol, parse_type, upgrade_type, parse_external)
+	(parse_partial_symbols, psymtab_to_symtab_1, cross_ref): Remove
+	unnecessary cast.
+	* gdb_bfd.c (gdb_bfd_map_section): Remove unnecessary cast.
+
+2019-06-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.c (tui_alloc_generic_win_info)
+	(tui_alloc_win_info, tui_add_content_elements): Remove NULL
+	checks.
+
+2019-06-16  Bernhard Heckel  <bernhard.heckel@intel.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-typeprint.c (f_print_type): Don't return early for not
+	associated or not allocated types.
+	(f_type_print_varspec_suffix): Add print_rank parameter and print
+	ranks of array types in case they dangling.
+	(f_type_print_base): Add print_rank parameter.
+
+2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention new MI commands.
+	* break-catch-throw.c (enum exception_event_kind): Move to
+	breakpoint.h.
+	(print_mention_exception_catchpoint): Output text as a single
+	message.
+	(catch_exception_command_1): Rename to...
+	(catch_exception_event): ...this, make non-static, update header
+	command, and change some parameter types.
+	(catch_catch_command): Update for changes to
+	catch_exception_command_1.
+	(catch_throw_command): Likewise.
+	(catch_rethrow_command): Likewise.
+	* breakpoint.c (enum exception_event_kind): Delete.
+	* breakpoint.h (enum exception_event_kind): Moved here from
+	break-catch-throw.c.
+	(catch_exception_event): Declare.
+	* mi/mi-cmd-catch.c (mi_cmd_catch_exception_event): New function.
+	(mi_cmd_catch_throw): New function.
+	(mi_cmd_catch_rethrow): New function.
+	(mi_cmd_catch_catch): New function.
+	* mi/mi-cmds.c (mi_cmds): Add 'catch-throw', 'catch-rethrow', and
+	'catch-catch' entries.
+	* mi/mi-cmds.h (mi_cmd_catch_throw): Declare.
+	(mi_cmd_catch_rethrow): Declare.
+	(mi_cmd_catch_catch): Declare.
+
+2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* annotate.c (annotate_source_line): Change return type to void,
+	update implementation to match.
+	* annotate.h (annotate_source_line): Change return type to void,
+	update header comment.
+	* stack.c (print_frame_info): Don't change what frame information
+	is printed based on whether annotations are on or not.
+
+2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* annotate.c: Add 'source.h' and 'objfiles.h' includes.
+	(annotate_source): Make static.
+	(annotate_source_line): Moved from source.c and renamed from
+	identify_source_line.  Update the return type.
+	* annotate.h (annotate_source): Delete declaration.
+	(annotate_source_line): Declaration moved from source.h, and
+	renamed from identify_source_line.  Return type updated.
+	* source.c (identify_source_line): Moved to annotate.c and renamed
+	to annotate_source_line.
+	(info_line_command): Remove check of annotation_level.
+	* source.h (identify_source_line): Move declaration to annotate.h
+	and rename to annotate_source_line.
+	* stack.c: Add 'annotate.h' include.
+	(print_frame_info): Remove check of annotation_level before
+	calling annotate_source_line.
+
+2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* source-cache.c (source_cache::get_plain_source_lines): Use
+	open_source_file_with_line_charpos instead of just
+	open_source_file, remove call to find_source_lines.
+	(source_cache::get_source_lines): Likewise.
+	* source.c (find_source_lines): Make static.
+	(get_filename_and_charpos): Renamed into...
+	(open_source_file_with_line_charpos): ..this along with changes to
+	return a scoped_fd, and some other minor clean ups.
+	(identify_source_line): Use open_source_file_with_line_charpos.
+	(search_command_helper): Use open_source_file_with_line_charpos
+	instead of just open_source_file, remove call to
+	find_source_lines.
+	* source.h (open_source_file_with_line_charpos): Declare new
+	function.
+	(find_source_lines): Delete declaration.
+
+2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* source.c (get_filename_and_charpos): Remove fullname
+	parameter.
+	(identify_source_line): Update call to get_filename_and_charpos.
+
+2019-06-14  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/24502:
+	* ui-style.h (skip_ansi_escape): Update comment.
+	* ui-file.h (class no_terminal_escape_file): New class.
+	* ui-file.c (no_terminal_escape_file::write)
+	(no_terminal_escape_file::puts): New methods.
+	* cli/cli-logging.c (handle_redirections): Use
+	no_terminal_escape_file.
+
+2019-06-14  Tom Tromey  <tromey@adacore.com>
+
+	* NEWS: Move convenience variable news above Python news.
+
+2019-06-14  Tom Tromey  <tom@tromey.com>
+
+	* gnulib: Move directory to top-level.
+	* configure.ac: Don't configure gnulib.
+	* configure: Rebuild.
+	* common/common-defs.h: Use new path to gnulib.
+	* Makefile.in (GNULIB_BUILDDIR): Now ../gnulib.
+	(GNULIB_H): Remove.
+	(INCGNU): Look in new gnulib location.
+	(HFILES_NO_SRCDIR): Remove gnulib files.
+	(SUBDIR, REQUIRED_SUBDIRS): Remove gnulib.
+	(generated_files): Remove GNULIB_H.
+	($(LIBGNU), all-lib): Remove targets.
+	(distclean): Don't mention GNULIB_BUILDDIR.
+	($(GNULIB_BUILDDIR)/Makefile): Remove target.
+
+2019-06-14  Tom Tromey  <tromey@adacore.com>
+
+	* symfile.c (add_symbol_file_command): Remove obsolete comment.
+	Warn if symbol file does not provide any symbols.
+
+2019-06-14  Tom Tromey  <tromey@adacore.com>
+
+	* source.c (find_and_open_source): Respect basenames_may_differ.
+
+2019-06-14  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* annotate.c (annotate_breakpoints_invalid): Make use of
+	scoped_restore_terminal_state.
+	(annotate_frames_invalid): Likewise.
+
+2019-06-14  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_evaluate_subexp) <case BINOP_ASSIGN>: Always
+	allow assignment to an internalvar.
+
+2019-06-14  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lex.l: Allow "_" in attribute names.
+
+2019-06-14  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/24653:
+	* regcache.c (registers_changed): Don't call alloca.
+	* top.c (execute_command): Don't call alloca.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-setshow.c (cli/cli-setshow.c): New parameter
+	'expression'.  When parsing an expression, error out if there's
+	junk after "unlimited".
+	(parse_cli_var_uinteger, parse_cli_var_zuinteger_unlimited)
+	(do_set_command): Adjust calls to is_unlimited_literal.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* compile/compile.c (make_compile_options_def_group): Add braces
+	around array_view initializer.
+	* thread.c (make_thread_apply_all_options_def_group)
+	(make_thread_apply_all_options_def_group): Likewise.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* NEWS (New commands): Mention "maint test-options
+	require-delimiter", "maint test-options unknown-is-error", "maint
+	test-options unknown-is-operand" and "maint show
+	test-options-completion-result".
+	(New command options, command completion): New section.
+	(Completion improvements): New section.
+	Mention that you can abbreviate "unlimited".
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-utils.c (parse_flags, parse_flags_qcs): Delete.
+	* cli/cli-utils.h (parse_flags, parse_flags_qcs): Delete.
+	* unittests/cli-utils-selftests.c (test_parse_flags)
+	(test_parse_flags_qcs): Delete.
+	(test_cli_utils): Don't call deleted functions.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* thread.c: Include "cli/cli-option.h".
+	(tp_array_compar_ascending): Global.
+	(tp_array_compar): Delete function.
+	(tp_array_compar_ascending, tp_array_compar_descending): New
+	functions.
+	(ascending_option_def, qcs_flag_option_def)
+	(thr_qcs_flags_option_defs)
+	(make_thread_apply_all_options_def_group)
+	(make_thread_apply_options_def_group): New.
+	(thread_apply_all_command): Use gdb::option::process_options.
+	(thread_apply_command_completer)
+	(thread_apply_all_command_completer): New.
+	(thread_apply_command): Use gdb::option::process_options.
+	(_initialize_thread): Delete THREAD_APPLY_FLAGS_HELP, replace it
+	with a new THREAD_APPLY_OPTION_HELP.  Use gdb::option::build_help
+	to generate help text of "thread apply".  Adjust "taas"'s help.
+	* tid-parse.c (tid_range_parser::in_thread_range): New method.
+	* tid-parse.h (tid_range_parser::in_thread_range): New method.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* thread.c (thread_apply_command): Check for invalid TID with
+	isdigit instead of !isalpha.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-utils.c (parse_flags_qcs): Use validate_flags_qcs.
+	(validate_flags_qcs): New.
+	* cli/cli-utils.h (struct qcs_flags): Change field types to int.
+	(validate_flags_qcs): Declare.
+	* stack.c (qcs_flag_option_def, fr_qcs_flags_option_defs): New.
+	(make_frame_apply_options_def_group): New.
+	(frame_apply_command_count): Process options with
+	gdb::option::process_options.
+	(frame_apply_completer): New.
+	(frame_apply_level_completer, frame_apply_all_completer)
+	(frame_apply_completer): New.
+	(_initialize_stack): Update help of "frame apply", "frame apply
+	level", "frame apply all" and "faas" to mention supported options
+	and install command completers.
+	* stack.h (frame_apply_all_completer): Declare.
+	* thread.c: Include "stack.h".
+	(tfaas_command): Add "--".
+	(_initialize_thread): Update help "tfaas" to mention supported
+	options and install command completer.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* completer.c (complete_nested_command_line): New.
+	(gdb_completion_word_break_characters_throw): Add assertion.
+	* completer.h (complete_nested_command_line): Declare.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* stack.c (parse_backtrace_qualifiers): New.
+	(backtrace_command): Use it.
+	(backtrace_command_completer): Complete on qualifiers.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* frame.c: Include "cli/cli-option.h.
+	(user_set_backtrace_options): New.
+	(backtrace_past_main, backtrace_past_entry, backtrace_limit):
+	Delete.
+	(get_prev_frame): Adjust.
+	(boolean_option_def, uinteger_option_def)
+	(set_backtrace_option_defs): New.
+	(_initialize_frame): Adjust and use
+	gdb::option::add_setshow_cmds_for_options to install "set
+	backtrace past-main" and "set backtrace past-entry".
+	* frame.h: Include "cli/cli-option.h".
+	(struct frame_print_options): Forward declare.
+	(print_frame_arguments_all, print_frame_arguments_scalars)
+	(print_frame_arguments_none): Declare.
+	(print_entry_values): Delete declaration.
+	(struct frame_print_options, user_frame_print_options): New.
+	(struct set_backtrace_options): New.
+	(set_backtrace_option_defs, user_set_backtrace_options): Declare.
+	* mi/mi-cmd-stack.c (mi_cmd_stack_list_frames)
+	(mi_cmd_stack_list_locals, mi_cmd_stack_list_args)
+	(mi_cmd_stack_list_variables): Pass down USER_FRAME_PRINT_OPTIONS.
+	(list_args_or_locals): Add frame_print_options parameter.
+	(mi_cmd_stack_info_frame): Pass down USER_FRAME_PRINT_OPTIONS.
+	* python/py-framefilter.c (enumerate_args): Pass down
+	USER_FRAME_PRINT_OPTIONS.
+	* stack.c: Include "cli/cli-option.h".
+	(print_frame_arguments_all, print_frame_arguments_scalars)
+	(print_frame_arguments_none): Declare.
+	(print_raw_frame_arguments, print_entry_values): Delete.
+	(user_frame_print_options): New.
+	(boolean_option_def, enum_option_def, frame_print_option_defs):
+	New.
+	(struct backtrace_cmd_options): New.
+	(bt_flag_option_def): New.
+	(backtrace_command_option_defs): New.
+	(print_stack_frame): Pass down USER_FRAME_PRINT_OPTIONS.
+	(print_frame_arg, read_frame_arg, print_frame_args)
+	(print_frame_info, print_frame): Add frame_print_options parameter
+	and use it.
+	(info_frame_command_core): Pass down USER_FRAME_PRINT_OPTIONS.
+	(backtrace_command_1): Add frame_print_options and
+	backtrace_cmd_options parameters and use them.
+	(make_backtrace_options_def_group): New.
+	(backtrace_command): Process command options with
+	gdb::option::process_options.
+	(backtrace_command_completer): New.
+	(_initialize_stack): Extend "backtrace"'s help to mention
+	supported options.  Install completer for "backtrace".
+	Install some settings commands with add_setshow_cmds_for_options.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* NEWS (Changed commands): Mention set/show print raw-frame-arguments,
+	and that "set/show print raw frame-arguments" are now deprecated.
+
+	* cli/cli-decode.c (add_setshow_boolean_cmd): Now returns the
+	command.
+	* command.h (add_setshow_boolean_cmd): Return cmd_list_element *.
+	* stack.c (_initialize_stack): Install "set/show print
+	raw-frame-arguments", and deprecate "set/show print raw
+	frame-arguments".
+	* valprint.c (_initialize_valprint): Deprecate "set/show print
+	raw".
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* compile/compile.c (struct compile_options): New.
+	(compile_flag_option_def, compile_command_option_defs)
+	(make_compile_options_def_group): New.
+	(compile_file_command): Handle options with
+	gdb::option::process_options.
+	(compile_file_command_completer): New function.
+	(compile_code_command): Handle options with
+	gdb::option::process_options.
+	(compile_code_command_completer): New function.
+	(_initialize_compiler): Install completers for "compile code" and
+	"compile file".  Mention available options in "compile code" and
+	"compile code"'s help.
+	* completer.c (advance_to_completion_word): New, factored out from
+	...
+	(advance_to_expression_complete_word_point): ... this.
+	(advance_to_filename_complete_word_point): New.
+	* completer.h (advance_to_filename_complete_word_point): New
+	declaration.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* compile/compile.c: Include "cli/cli-option.h".
+	(compile_print_value): Scope data pointer is now a
+	value_print_options pointer; adjust.
+	(compile_print_command): Process options.  Scope data pointer is
+	now a value_print_options pointer; adjust.
+	(_initialize_compile): Update "compile print"'s help to include
+	supported options.  Install a completer for "compile print".
+	* cp-valprint.c (show_vtblprint, show_objectprint)
+	(show_static_field_print): Delete.
+	(_initialize_cp_valprint): Don't install "set print
+	static-members", "set print vtbl", "set print object" here.
+	* printcmd.c: Include "cli/cli-option.h" and
+	"common/gdb_optional.h".
+	(print_command_parse_format): Rework to fill in a
+	value_print_options instead of a format_data.
+	(print_value): Change parameter type from format_data pointer to
+	value_print_options reference.  Adjust.
+	(print_command_1): Process options.  Adjust to pass down a
+	value_print_options.
+	(print_command_completer): New.
+	(_initialize_printcmd): Install print_command_completer as
+	handle_brkchars completer for the "print" command.  Update
+	"print"'s help to include supported options.
+	* valprint.c: Include "cli/cli-option.h".
+	(show_vtblprint, show_objectprint, show_static_field_print): Moved
+	here from cp-valprint.c.
+	(boolean_option_def, uinteger_option_def)
+	(value_print_option_defs, make_value_print_options_def_group):
+	New.  Use gdb::option::add_setshow_cmds_for_options to install
+	"set print elements", "set print null-stop", "set print repeats",
+	"set print pretty", "set print union", "set print array", "set
+	print address", "set print symbol", "set print array-indexes".
+	* valprint.h: Include <string> and "cli/cli-option.h".
+	(make_value_print_options_def_group): Declare.
+	(print_value): Change parameter type from format_data pointer to
+	value_print_options reference.
+	(print_command_completer): Declare.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* Makefile.in (SUBDIR_CLI_SRCS): Add cli/cli-option.c.
+	(COMMON_SFILES): Add maint-test-settings.c.
+	* cli/cli-decode.c (boolean_enums): New global, factored out from
+	...
+	(add_setshow_boolean_cmd): ... here.
+	* cli/cli-decode.h (boolean_enums): Declare.
+	* cli/cli-option.c: New file.
+	* cli/cli-option.h: New file.
+	* cli/cli-setshow.c (parse_cli_boolean_value(const char **)): New,
+	factored out from ...
+	(parse_cli_boolean_value(const char *)): ... this.
+	(is_unlimited_literal): Change parameter type to pointer to
+	pointer.  Adjust and advance ARG pointer.
+	(parse_cli_var_uinteger, parse_cli_var_zuinteger_unlimited)
+	(parse_cli_var_enum): New, factored out from ...
+	(do_set_command): ... this.  Adjust.
+	* cli/cli-setshow.h (parse_cli_boolean_value)
+	(parse_cli_var_uinteger, parse_cli_var_zuinteger_unlimited)
+	(parse_cli_var_enum): Declare.
+	* cli/cli-utils.c: Include "cli/cli-option.h".
+	(get_ulongest): New.
+	* cli/cli-utils.h (get_ulongest): Declare.
+	(check_for_argument): New overloads.
+	* maint-test-options.c: New file.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-utils.c (number_or_range_parser::get_number): Do not
+	parse a range if "-" is at the end of the string.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-setshow.c (parse_auto_binary_operation)
+	(parse_cli_boolean_value): Don't allow "o".
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* Makefile.in (COMMON_SFILES): Add maint-test-settings.c.
+	* NEWS: Mention maint test-settings KIND.
+	* maint-test-settings.c: New file.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-decode.c (add_setshow_cmd_full): Remove "show"
+	completer.
+	(add_setshow_string_cmd, add_setshow_string_noescape_cmd): Remove
+	"set" completers.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-setshow.c (do_set_command) <var_enum>: Detect junk
+	after item.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* cli/cli-setshow.c (is_unlimited_literal): Allow abbreviations.
+
+2019-06-13  Pedro Alves <palves@redhat.com>
+
+	* ax-gdb.c (agent_command_1): Remove skip_spaces call.
+	* breakpoint.c (watch_maybe_just_location): Remove skip_spaces
+	call.
+	* cli/cli-cmds.c (apropos_command): Remove skip_spaces call.
+	* cli/cli-utils.c (extract_info_print_args): Remove skip_spaces
+	calls.
+	(check_for_argument): Skip spaces after argument.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* thread.c (thread_apply_command): Adjust TID parsing.
+	* tid-parse.c (tid_range_parser::finished): Ensure parsing end is
+	detected before end of string.
+	(tid_is_in_list): Error out if LIST is invalid.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* completer.c (complete_line_internal_1): Rewind completion word
+	point.
+	(completion_tracker::advance_custom_word_point_by): Change
+	parameter type to int.
+	* completer.h (completion_tracker::advance_custom_word_point_by):
+	Likewise.
+
+2019-06-13  Pedro Alves  <palves@redhat.com>
+
+	* completer.c (advance_to_completion_word): Handle delimiters.
+
+2019-06-11  Bernhard Heckel  <bernhard.heckel@intel.com>
+
+	* dwarf2read.c (add_partial_symbol): Skip nameless modules.
+
+2019-06-11  Tom Tromey  <tom@tromey.com>
+
+	* common/common-utils.c (xmalloc, xrealloc, xcalloc)
+	(xmalloc_failed): Move to alloc.c.
+	* alloc.c: New file.
+	* Makefile.in (COMMON_SFILES): Add alloc.c.
+
+2019-06-11  Tom Tromey  <tom@tromey.com>
+
+	* nat/linux-waitpid.c: Don't include server.h.
+	(linux_debug): Remove.
+	(my_waitpid): Update.
+
+2019-06-11  Tom Tromey  <tromey@adacore.com>
+
+	* infcall.c (_initialize_infcall): Remove trailing newline from
+	help.
+	* user-regs.c (_initialize_user_regs): Remove trailing newline
+	from help.
+	* typeprint.c (_initialize_typeprint): Remove trailing newline
+	from help.
+	* reverse.c (_initialize_reverse): Remove trailing newlines from
+	help.
+	* tracepoint.c (_initialize_tracepoint): Remove trailing newlines
+	from help.
+	* language.c (add_set_language_command): Remove trailing newline
+	from help.
+	* infcmd.c (_initialize_infcmd): Remove trailing newlines from
+	help.
+	* disasm.c (_initialize_disasm): Remove trailing newline from
+	help.
+	* top.c (init_main): Remove trailing newline from help.
+	* interps.c (_initialize_interpreter): Remove trailing newline
+	from help.
+	* btrace.c (_initialize_btrace): Remove trailing newlines from
+	help.
+	* breakpoint.c (_initialize_breakpoint): Remove trailing newline
+	from help.
+	* python/python.c (_initialize_python): Remove trailing newline
+	from help.
+	* spu-tdep.c (_initialize_spu_tdep): Remove trailing newlines from
+	help.
+	* tui/tui-win.c (_initialize_tui_win): Remove trailing newlines
+	from help.  Reformat some text.
+	* tui/tui-stack.c (_initialize_tui_stack): Remove trailing newline
+	from help.
+	* tui/tui-layout.c (_initialize_tui_layout): Remove trailing
+	newline from help.
+
+2019-06-11  Tom Tromey  <tromey@adacore.com>
+
+	* darwin-nat.c (darwin_decode_exception_message)
+	(darwin_decode_message, darwin_nat_target::kill): Fix shadowing.
+
+2019-06-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* valops.c (value_slice): Check for not allocated or not
+	associated values.
+
+2019-06-10  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24618
+	* dwarf2read.c (struct mapped_index::symbol_name_slot_invalid): Make
+	sure an empty slot (defined by a 32-bit zero pair) is recognized as
+	invalid.
+
+2019-06-10  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24611
+	* linespec.c (linespec_lexer_lex_string): Remove incorrect
+	"++(PARSER_STREAM (parser))" for "[abi"-prefixed colon.  Add assert.
+
+2019-06-10  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/24545
+	* symtab.c (struct demangled_name_entry): Add language field.
+	(symbol_set_names):  Revert "[gdb/symtab] Fix language of duplicate
+	static minimal symbol".  Set and use language field.
+
+2019-06-10  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (_initialize_ada_language): Update help text.
+
+2019-06-10  Tom Tromey  <tromey@adacore.com>
+
+	* m32c-tdep.c (m32c_m16c_address_to_pointer): Don't end warning
+	with a newline.
+	* guile/guile.c (handle_boot_error): Don't end warning with a
+	newline.
+	* cli/cli-cmds.c (exit_status_set_internal_vars): Don't end
+	warning with a newline.
+	* s12z-tdep.c (s12z_skip_prologue): Don't end warning with a
+	newline.
+	(s12z_frame_cache): Likewise.
+	* dwarf-index-cache.c (index_cache::store): Don't end warning with
+	a newline.
+	* solib-svr4.c (disable_probes_interface): Don't end warning with
+	a newline.
+	* nat/fork-inferior.c (fork_inferior): Don't end warning with a
+	newline.
+	* python/python.c (do_finish_initialization): Don't end warning
+	with a newline.
+
+2019-06-10  Tom Tromey  <tom@tromey.com>
+
+	* python/py-breakpoint.c (gdbpy_breakpoint_created)
+	(gdbpy_breakpoint_deleted, gdbpy_breakpoint_modified): Use
+	gdbpy_enter.
+
+2019-06-10  Tom Tromey  <tromey@adacore.com>
+
+	* elfread.c (elf_read_minimal_symbols): Don't set the dbx objfile
+	data.
+	(elf_new_init): Don't call stabsread_new_init.
+	* dbxread.c (coffstab_build_psymtabs): Set dbx objfile data.
+	(elfstab_build_psymtabs): Likewise.  Call stabsread_new_init.
+	* coffread.c (coff_symfile_init): Don't set the dbx objfile data.
+
+2019-06-10  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/16264
+	PR symtab/24517
+	* dwarf2read.c (read_func_scope): Handle DW_AT_main_subprogram.
+
+2019-06-06  Руслан Ижбулатов <lrn1986@gmail.com>
+
+	* source.c (find_and_open_source): Also rewrite relative file
+	names.
+
+2019-04-26  Amos Bird  <amosbird@gmail.com>
+
+	* annotate.c (annotate_thread_exited): Add "thread-exited"
+	annotation.
+
+2019-06-06  Tom Tromey  <tromey@adacore.com>
+
+	* maint.h (class scoped_command_stats): Use
+	DISABLE_COPY_AND_ASSIGN.
+	<print_time>: New method.
+	* maint.c (scoped_command_stats, ~scoped_command_stats): Call
+	print_time.
+	(scoped_command_stats::print_time): New method.
+
+2019-06-05  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_insn::decode): Gracefully ignore
+	instructions of lengths 6 or 8 bytes.
+
+2019-06-04  Pedro Alves  <palves@redhat.com>
+
+	* common/gdb_unique_ptr.h (make_unique_xstrdup): New.
+
+	* ada-lang.c (catch_ada_completer): Use make_unique_xstrdup.
+	* breakpoint.c (condition_completer): Likewise.
+	* cli/cli-dump.c (scan_expression): Likewise.
+	* common/filestuff.c (mkdir_recursive): Likewise.
+	* common/gdb_tilde_expand.c (gdb_tilde_expand_up)
+	* common/pathstuff.c (gdb_realpath, gdb_realpath_keepfile)
+	(gdb_abspath): Likewise.
+	* compile/compile-cplus-types.c
+	(compile_cplus_instance::decl_name): Likewise.
+	* completer.c (complete_explicit_location):
+	(signal_completer, reg_or_group_completer_1): Likewise.
+	* cp-support.c (cp_remove_params_if_any): Likewise.
+	* fbsd-tdep.c (fbsd_core_vnode_path): Likewise.
+	* guile/scm-safe-call.c (gdbscm_safe_eval_string): Likewise.
+	* infcmd.c (strip_bg_char): Likewise.
+	* linespec.c (copy_token_string): Likewise.
+	* mi/mi-main.c (output_cores): Likewise.
+	* psymtab.c (psymtab_search_name):
+	* symfile.c (test_set_ext_lang_command): Likewise.
+	* target.c (target_fileio_read_stralloc): Likewise.
+	* tui/tui-regs.c (tui_reggroup_completer): Likewise.
+	* value.c (complete_internalvar): Likewise.
+
+2019-06-04  Christian Biesinger  <cbiesinger@google.com>
+
+	Add objfile property to gdb.Type.
+	* NEWS: Mention Python API addition.
+	* python/py-type.c (typy_get_objfile): New method.
+
+2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention the new set|show style [title|highlight].
+	Mention changes to "show style", "help" and "apropos".
+
+2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-decode.h (apropos_cmd): Add verbose argument.
+	* cli/cli-decode.c (apropos_cmd): Likewise.  Use print_doc_of_command
+	instead of print_help_for_command.
+	(print_doc_of_command): New function.
+	(help_list): Add 'apropos -v word' suggestion.
+	(print_help_for_command): Style the command name using title style.
+	* cli/cli-cmds.c (apropos_command): Parse optional -v flag.
+	(_initialize_cli_cmds): Describe -v in apropos_command help.
+
+2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-style.h (cli_style_option): Add name in constructor,
+	add m_name class member, add constructor with intensity,
+	add name class function.
+	(cli_style_option::add_setshow_commands): Remove name argument.
+	(highlight_style, title_style): New styles.
+	* cli/cli-style.c (do_show): New function that shows a style
+	characteristic styling the style name with itself.
+	(set_style_name): New function.
+	(STYLE_ADD_SETSHOW_COMMANDS): Remove NAME arguments.
+	Update all callers according to the changes in cli/cli-style.h.
+	* utils.h (fputs_highlighted): New function.
+	* utils.c (fputs_highlighted): Likewise.
+
+2019-05-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention new pipe command and new convenience variables.
+
+2019-05-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-cmds.c (pipe_command): New function.
+	(_initialize_cli_cmds): Call add_com for pipe_command.
+	Define | as an alias for pipe.
+	(exit_status_set_internal_vars): New function.
+	(shell_escape): Call exit_status_set_internal_vars.
+	cli/cli-decode.c (find_command_name_length): Recognize | as
+	a single character command.
+
+2019-05-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdbcmd.h (execute_command_to_ui_file): New declaration.
+	top.c (execute_command_to_ui_file): New function, mostly a copy
+	of execute_command_to_string.
+	(execute_command_to_string): Implement by calling
+	execute_command_to_ui_file.
+
+2019-05-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* top.h (saved_command_line): Remove declaration.
+	* top.c (previous_saved_command_line, previous_repeat_arguments):
+	New variables.
+	(saved_command_line): Make static, define together with other
+	'repeat variables'.
+	(dont_repeat): Clear repeat_arguments.
+	(repeat_previous, get_saved_command_line, save_command_line):
+	New functions.
+	(gdb_init): Initialize saved_command_line
+	and previous_saved_command_line.
+	* main.c (captured_main_1): Remove saved_command_line initialization.
+	* event-top.c (handle_line_of_input): Update to use
+	the new 'repeat' related functions instead of direct access to
+	saved_command_line.
+	* command.h (repeat_previous, get_saved_command_line,
+	save_command_line): New declarations.
+	(dont_repeat): Add comment.
+
+2019-05-30  Tom Tromey  <tromey@adacore.com>
+
+	* gdbtypes.h (struct range_bounds) <flag_upper_bound_is_count>:
+	Fix comment.
+	(TYPE_ARRAY_UPPER_BOUND_IS_UNDEFINED): Rewrite comment.
+
+2019-05-30  Jan Vrany  <jan.vrany@fit.cvut.cz>
+
+	PR cli/24587
+	* completer.c (complete): Initialize variable word.
+
+2019-05-29  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	Ref.: https://bugzilla.redhat.com/show_bug.cgi?id=1708192
+	Ref.: https://bugzilla.redhat.com/show_bug.cgi?id=1715008
+	* dwarf2read.c (dwarf_decode_macro_bytes): Move check to see if
+	'body' is NULL to the outter 'if', protecting the '!is_define'
+	situation as well.
+
+2019-05-29  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (partial_die_parent_scope): Call dwarf_tag_name.
+	(dwarf_unknown): New function.
+	(dwarf_tag_name, dwarf_attr_name, dwarf_form_name)
+	(dwarf_type_encoding_name): Use dwarf_unknown.
+
+2019-05-29  Tom Tromey  <tromey@adacore.com>
+
+	PR c++/20020:
+	* cp-valprint.c (cp_print_value_fields): Call
+	cp_print_static_field inside "try".
+
+2019-05-29  Tom Tromey  <tromey@adacore.com>
+
+	* inflow.c (struct terminal_info): Add default operator=.
+	* configure: Rebuild.
+	* warning.m4 (AM_GDB_WARNINGS): Add -Wdeprecated-copy,
+	-Wdeprecated-copy-dtor, -Wredundant-move.
+
+2019-05-29  Tom Tromey  <tromey@adacore.com>
+
+	* NEWS: Add entry.
+	* infcmd.c (print_return_value_1): Handle finish_print
+	option.
+	(show_print_finish): New function.
+	(_initialize_infcmd): Add "set/show print finish" commands.
+	* valprint.c (user_print_options): Initialize new member.
+	* valprint.h (struct value_print_options) <finish_print>: New
+	member.
+
+2019-05-28  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_remove_Xbn_suffix)
+	(find_old_style_renaming_symbol)
+	(parse_old_style_renaming): Remove.
+	(ada_find_renaming_symbol): Don't call
+	find_old_style_renaming_symbol.
+	(ada_is_renaming_symbol): Rename from
+	ada_find_renaming_symbol.  Remove "block" parameter.  Return
+	bool.  Now static.
+	(ada_read_var_value): Update and simplify.
+	* ada-exp.y (write_var_or_type): Remove old code.
+
+2019-05-28  Alan Hayward  <alan.hayward@arm.com>
+
+	PR gdb/25010
+	* event-top.c: Remove include comment.
+	* inflow.c (class scoped_ignore_sigttou): Move from here...
+	* inflow.h (class scoped_ignore_sigttou): ...to here.
+	* ser-unix.c (hardwire_drain_output): Block SIGTTOU during drain.
+	* top.c:  Remove include comment.
+
+2019-05-27  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Fix typo.
+
+2019-05-22  Tom Tromey  <tromey@adacore.com>
+
+	* target.c (target_follow_exec): Constify parameter.
+	* target-delegates.c: Rebuild.
+	* remote.c (remote_target::follow_exec): Constify parameter.
+	* infrun.c (follow_exec): Constify parameter.
+	* target.h (struct target_ops) <follow_exec>: Constify parameter.
+	(target_follow_exec): Likewise.
+
+2019-05-22  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aarch64_execute_dwarf_cfa_vendor_op): Treat
+	DW_CFA_AARCH64_negate_ra_state as nop on non pauth targets.
+
+2019-05-22  Alan Hayward  <alan.hayward@arm.com>
+
+	* NEWS: Add debugredirect and testsuite sections.
+
+2019-05-22  Simon Cook  <simon.cook@embecosm.com>
+
+	* riscv-tdep.c (riscv_gdbarch_init): Support determining flen from
+	target descriptions using exclusively floating point register name
+	aliases.
+
+2019-05-21  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR gdb/18644:
+	* f-lang.c (build_fortran_types): Handle the case where
+	gdbarch_floatformat_for_type returns a nullptr.
+
+2019-05-21  Tom de Vries  <tdevries@suse.de>
+
+	PR cli/24587
+	* cli/cli-cmds.c (complete_command): Fix use of unitialized variable.
+
+2019-05-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR gdb/18644:
+	* f-lang.c (build_fortran_types): Use floatformats_ia64_quad for
+	16-byte floats.
+	* i386-tdep.c (i386_floatformat_for_type): Use
+	floatformats_ia64_quad for the 16-byte floating point component
+	within a fortran 32-byte complex number.
+
+2019-05-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (struct cu_partial_die_info): Add constructor,
+	delete default constructor.
+	(find_partial_die): Update to return const struct.
+	(partial_die_parent_scope): Move variable declaration into scope
+	of its use and change its type to auto.
+	(guess_partial_die_structure_name): Likewise.
+	(partial_die_info::fixup): Likewise.
+
+2019-05-17  Tom Tromey  <tromey@adacore.com>
+
+	* source.c (find_and_open_source): Remove cast.
+
+2019-05-17  Tom Tromey  <tromey@adacore.com>
+
+	* annotate.c (annotate_source): Make "filename" const.
+	* annotate.h (annotate_source): Use const.
+
+2019-05-17  Alan Hayward  <alan.hayward@arm.com>
+
+	* disasm.c (set_disassembler_options): Send errors to stderr.
+
+2019-05-17  Alan Hayward  <alan.hayward@arm.com>
+
+	* cli/cli-interp.c (struct saved_output_files): Add saved entry.
+	(cli_interp_base::set_logging): Check debug_redirect.
+	* cli/cli-interp.h (set_logging): Add debug_redirect parameter.
+	* cli/cli-logging.c (debug_redirect): Add static variable.
+	(pop_output_files): Add default param.
+	(handle_redirections): Print debug setting.
+	(show_logging_command): Likewise.
+	(_initialize_cli_logging): Add debugredirect command.
+	* interps.c (current_interp_set_logging): Add debug_redirect
+	parameter.
+	* interps.h (set_logging): Add debug_redirect parameter.
+	(current_interp_set_logging): Likewise.
+	* mi/mi-common.h: Likewise.
+	* mi/mi-interp.c (mi_interp::set_logging): Likewise.
+
+2019-05-17  Alan Hayward  <alan.hayward@arm.com>
+	    Tom Tromey  <tromey@adacore.com>
+
+	* cli/cli-interp.c (cli_interp_base::set_logging): Create tee_file
+	directly.
+	* cli/cli-interp.h (make_logging_output): Remove declaration.
+	* cli/cli-logging.c (make_logging_output): Remove function.
+	* mi/mi-interp.c (mi_interp::set_logging): Create tee_file
+	directly.
+	* ui-file.c (tee_file::tee_file): Remove bools.
+	(tee_file::~tee_file): Remove deletes.
+	* ui-file.h (tee_file): Remove bools.
+
+2019-01-28  Jan Vrany  <jan.vrany@fit.cvut.cz>
+
+	* mi/mi-cmds.h (mi_cmd_complete): New function.
+	* mi/mi-main.c (mi_cmd_complete): Likewise.
+	* mi/mi-cmds.c: Define new MI command -complete.
+	* NEWS: Mention new -complete command.
+
+2019-01-24  Jan Vrany  <jan.vrany@fit.cvut.cz>
+
+	* completer.h (complete): New function.
+	* completer.c (complete): Likewise.
+	* cli/cli-cmds.c: (complete_command): Update to use new complete()
+	function defined in completer.h.
+
+2019-05-17  Jan Vrany  <jan.vrany@fit.cvut.cz>
+
+	* MAINTAINERS (Write After Approval): Add myself.
+
+2019-05-17  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24094
+	* dwarf2read.c (struct cu_partial_die_info): New struct.
+	(find_partial_die): Return cu_partial_die_info.
+	(partial_die_parent_scope, guess_partial_die_structure_name)
+	(partial_die_info::fixup): Handle new return type of find_partial_die.
+
+2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	PR breakpoints/24541
+	* stap-probe.c (stap_parse_register_operand): Make "regname" an
+	"std::string", simplifying the algorithm.
+
+2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* stap-probe.c (handle_stap_probe): Fix complaint formatting.
+	(stap_static_probe_ops::get_probes): Likewise.
+
+2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* stap-probe.c (stap_parse_register_operand): Make "if (*p->arg ==
+	'-')" and "else if".
+	(stap_parse_single_operand): Join checks for
+	"gdbarch_stap_parse_special_token_p" and
+	"gdbarch_stap_parse_special_token" in the same "if" statement.
+	Invert check when verifying for operation on register
+	displacement.
+
+2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* stap-probe.c (stap_get_opcode): Update comment.
+	(stap_get_expected_argument_type): Likewise.
+	(handle_stap_probe): Likewise.
+
+2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* i386-tdep.c (i386_stap_parse_special_token_triplet): Change
+	return type to 'bool'.  Adjust comment.  Use 'bool' when
+	appropriate.
+	(i386_stap_parse_special_token_three_arg_disp): Likewise.
+	* stap-probe.c (stap_parse_argument_1): Likewise.
+	(stap_is_operator): Likewise.
+	(stap_is_generic_prefix): Likewise.
+	(stap_is_register_prefix): Likewise.
+	(stap_is_register_indirection_prefix): Likewise.
+	(stap_is_integer_prefix): Likewise.
+	(stap_generic_check_suffix): Likewise.
+	(stap_check_integer_suffix): Likewise.
+	(stap_check_register_suffix): Likewise.
+	(stap_check_register_indirection_suffix): Likewise.
+	(stap_parse_register_operand): Likewise.
+	(stap_parse_single_operand): Likewise.
+	(stap_parse_argument_1): Likewise.
+	(stap_probe::get_argument_count): Likewise.
+	(stap_is_operator): Likewise.
+
+2019-05-16  Tom Tromey  <tromey@adacore.com>
+
+	* darwin-nat.c (thread_info_from_private_thread_info): Add struct
+	keyword to foreach.
+
+2019-05-15  Simon Marchi  <simon.marchi@efficios.com>
+
+	* linux-thread-db.c (try_thread_db_load_1): Change return type
+	to bool.
+	(try_thread_db_load): Likewise.
+	(try_thread_db_load_from_pdir_1): Likewise.
+	(try_thread_db_load_from_pdir): Likewise.
+	(try_thread_db_load_from_sdir): Likewise.
+	(try_thread_db_load_from_dir): Likewise.
+	(thread_db_load_search): Likewise.
+	(has_libpthread): Likewise.
+	(thread_db_load): Likewise.
+
+2019-05-15  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	Ref.: https://bugzilla.redhat.com/show_bug.cgi?id=1708192
+	* dwarf2read.c (parse_macro_definition): Check whether 'body' is
+	NULL, and complain/return if that's the case.
+
+2019-05-15  John Darrington <john@darrington.wattle.id.au>
+
+	* s12z-tdep.c (push_pull_get_stack_adjustment): New function.
+	(advance, posn, abstract_read_memory): New functions.
+	[struct mem_read_abstraction]: New struct.
+	(s12z_frame_cache): Use opcodes API to interpret stack frame code.
+
+2019-05-14  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (coerce_unspec_val_to_type): Only set address when
+	value is not lval_memory.
+
+2019-05-14  Tom Tromey  <tromey@adacore.com>
+
+	* solib.c (info_sharedlibrary_command): Style the file name.
+
+2019-05-14  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aarch64_vnh_type): Add half view.
+	(aarch64_vnv_type): Likewise.
+	* target-descriptions.c (make_gdb_type): Add TDESC_TYPE_IEEE_HALF.
+	* common/tdesc.c: Likewise.
+	* common/tdesc.h (enum tdesc_type_kind): Likewise.
+	* features/aarch64-fpu.c (create_feature_aarch64_fpu): Regenerate.
+	* features/aarch64-fpu.xml: Add ieee half view.
+	* features/aarch64-sve.c (create_feature_aarch64_fpu): Likewise.
+	* gdbtypes.c (gdbtypes_post_init): Add builtin_half
+	* gdbtypes.h (struct builtin_type): Likewise.
+	(struct objfile_type): Likewise.
+
+2019-05-12  Paul Naert  <paul.naert@polymtl.ca>
+
+	* language.c (language_sniff_from_mangled_name): Fix "langauge"
+	typo.
+	* location.h (string_to_event_location): Likewise.
+
+2019-05-11  Joel Brobecker  <brobecker@adacore.com>
+
+	GDB 8.3 released.
+
+2019-05-10  Simon Marchi  <simon.marchi@efficios.com>
+
+	* breakpoint.h (fix_multi_location_breakpoint_output_globally):
+	New variable declaration.
+	* breakpoint.c (fix_multi_location_breakpoint_output_globally):
+	New variable.
+	(print_one_breakpoint): Use ui_out::test_flags and new global
+	variable to compute use_fixed_output.
+	* mi/mi-main.h (mi_multi_location_breakpoint_output_fixed):
+	Remove.
+	* mi/mi-main.c (fix_multi_location_breakpoint_output): Remove.
+	(mi_multi_location_breakpoint_output_fixed): Remove.
+	(mi_cmd_fix_multi_location_breakpoint_output): Adjust to set the
+	new variable.
+	* mi/mi-out.c (mi_ui_out::mi_ui_out): Set
+	fix_multi_location_breakpoint_output flag if version >= 3.
+	* ui-out.h (enum ui_out_flag)
+	<fix_multi_location_breakpoint_output>: New enumerator.
+
+2019-05-10  Simon Marchi  <simon.marchi@efficios.com>
+
+	* contrib/cc-with-tweaks.sh: Validate dwz's work.
+
+2019-05-10  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (catch_ada_completer): New function.
+	(_initialize_ada_language): Use it.
+
+2019-05-10  Tom Tromey  <tromey@adacore.com>
+
+	* thread.c (print_thread_info): Make "requested_threads" const.
+	* gdbthread.h (print_thread_info): Make "requested_threads"
+	const.
+	* ada-tasks.c (print_ada_task_info): Make "taskno_str" const.
+	* ada-lang.h (print_ada_task_info): Make "taskno_str" const.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* gdbtypes.c (objfile_type_data): Change type.
+	(objfile_type, _initialize_gdbtypes): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2-frame.c (dwarf2_frame_objfile_data): Change type.
+	(dwarf2_frame_find_fde, dwarf2_build_frame_info)
+	(_initialize_dwarf2_frame): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* objc-lang.c (objc_objfile_data): Change type.
+	(find_methods): Update.
+	(_initialize_objc_lang): Remove.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* stabsread.c (rs6000_builtin_type_data): Change type.
+	(rs6000_builtin_type, _initialize_stabsread): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* mips-tdep.c (mips_pdr_data): Remove.
+	(_initialize_mips_tdep): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* hppa-tdep.c (hppa_objfile_priv_data): Change type.
+	(hppa_init_objfile_priv_data, read_unwind_info)
+	(find_unwind_entry, _initialize_hppa_tdep): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* elfread.c (elf_objfile_gnu_ifunc_cache_data): Change type.
+	(elf_gnu_ifunc_record_cache): Update.  Don't allocate hash table
+	on obstack.
+	(elf_gnu_ifunc_resolve_by_cache, _initialize_elfread): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* mdebugread.c (basic_type_data): Change type.
+	(basic_type, _initialize_mdebugread): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* common/gdb_unique_ptr.h (struct noop_deleter): New.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* nto-tdep.c (nto_inferior_data_reg): Change type.
+	(nto_inferior_data): Update.
+	(nto_inferior_data_cleanup, nto_new_inferior_data)
+	(_initialize_nto_tdep): Remove.
+	* nto-tdep.h (struct nto_inferior_data): Add initializers.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* ada-lang.c (struct ada_inferior_data): Add initializers.
+	(ada_inferior_data): Change type.
+	(ada_inferior_data_cleanup): Remove.
+	(get_ada_inferior_data, ada_inferior_exit)
+	(struct ada_pspace_data): Add initializers, destructor.
+	(ada_pspace_data_handle): Change type.
+	(get_ada_pspace_data): Update.
+	(ada_pspace_data_cleanup): Remove.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* coffread.c (struct coff_symfile_info): Add initializers.
+	(coff_objfile_data_key): Move lower.  Change type.
+	(coff_symfile_init, coff_symfile_read, _initialize_coffread):
+	Update.
+	(coff_free_info): Remove.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* fbsd-tdep.c (struct fbsd_pspace_data): Add initializers.
+	(fbsd_pspace_data_handle): Move lower.  Change type.
+	(get_fbsd_pspace_data): Update.
+	(fbsd_pspace_data_cleanup): Remove.
+	(_initialize_fbsd_tdep): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* ada-tasks.c (ada_tasks_pspace_data_handle): Change type.
+	(get_ada_tasks_pspace_data): Update.
+	(ada_tasks_pspace_data_cleanup): Remove.
+	(_initialize_tasks): Update.
+	(ada_tasks_inferior_data_handle): Change type.
+	(get_ada_tasks_inferior_data): Update.
+	(ada_tasks_inferior_data_cleanup): Remove.
+	(struct ada_tasks_pspace_data): Add initializers.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* symfile.h (struct sym_probe_fns) <sym_get_probes>: Change type.
+	* symfile-debug.c (debug_sym_get_probes): Change type.
+	* stap-probe.c (handle_stap_probe):
+	(stap_static_probe_ops::get_probes): Change type.
+	* probe.h (class static_probe_ops) <get_probes>: Change type.
+	* probe.c (class any_static_probe_ops) <get_probes>: Change type.
+	(parse_probes_in_pspace): Update.
+	(find_probes_in_objfile, find_probe_by_pc, collect_probes):
+	Update.
+	(any_static_probe_ops::get_probes): Change type.
+	* elfread.c (elfread_data): New typedef.
+	(probe_key): Change type.
+	(elf_get_probes): Likewise.  Update.
+	(probe_key_free): Remove.
+	(_initialize_elfread): Update.
+	* dtrace-probe.c (class dtrace_static_probe_ops) <get_probes>:
+	Change type.
+	(dtrace_process_dof_probe, dtrace_process_dof)
+	(dtrace_static_probe_ops::get_probe): Change type.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (struct xcoff_symfile_info): Rename from
+	coff_symfile_info.  Add initializers.
+	(xcoff_objfile_data_key): Move lower.  Change type.
+	(XCOFF_DATA): Rewrite.
+	(xcoff_free_info): Remove.
+	(xcoff_symfile_init, _initialize_xcoffread, read_xcoff_symtab)
+	(read_symbol, read_symbol_lineno, find_linenos, init_stringtab)
+	(xcoff_initial_scan): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* solib-svr4.c (struct svr4_info): Add initializers and
+	destructor.
+	<probes_table>: Now an htab_up.
+	(solib_svr4_pspace_data): Change type.
+	(free_probes_table): Simplify.
+	(~svr4_info): Rename from svr4_pspace_data_cleanup.
+	(get_svr4_info, probes_table_htab_remove_objfile_probes)
+	(probes_table_remove_objfile_probes, register_solib_event_probe)
+	(solib_event_probe_at, svr4_update_solib_event_breakpoint)
+	(_initialize_svr4_solib): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* remote.c (remote_pspace_data): Change type.
+	(remote_pspace_data_cleanup): Remove.
+	(get_remote_exec_file, set_pspace_remote_exec_file)
+	(_initialize_remote): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* breakpoint.c (breakpoint_objfile_key): Change type.
+	(get_breakpoint_objfile_data): Update.
+	(free_breakpoint_objfile_data): Remove.
+	(_initialize_breakpoint): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* linux-tdep.c (struct linux_info): Add initializers.
+	(linux_inferior_data): Move.  Change type.
+	(invalidate_linux_cache_inf): Update.
+	(linux_inferior_data_cleanup): Remove.
+	(get_linux_inferior_data, _initialize_linux_tdep): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* auxv.c (auxv_inferior_data): Move.  Change type.
+	(auxv_inferior_data_cleanup): Remove.
+	(invalidate_auxv_cache_inf): Rewrite.
+	(get_auxv_inferior_data, _initialize_auxv): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* symfile-debug.c (struct debug_sym_fns_data): Add initializers.
+	(symfile_debug_objfile_data_key): Change type.
+	(symfile_debug_installed, debug_qf_has_symbols)
+	(debug_qf_find_last_source_symtab)
+	(debug_qf_forget_cached_source_info)
+	(debug_qf_map_symtabs_matching_filename, debug_qf_lookup_symbol)
+	(debug_qf_print_stats, debug_qf_dump)
+	(debug_qf_expand_symtabs_for_function)
+	(debug_qf_expand_all_symtabs)
+	(debug_qf_expand_symtabs_with_fullname)
+	(debug_qf_map_matching_symbols)
+	(debug_qf_expand_symtabs_matching)
+	(debug_qf_find_pc_sect_compunit_symtab)
+	(debug_qf_map_symbol_filenames)
+	(debug_qf_find_compunit_symtab_by_address, debug_sym_get_probes)
+	(debug_sym_new_init, debug_sym_init, debug_sym_read)
+	(debug_sym_read_psymbols, debug_sym_finish, debug_sym_offsets)
+	(debug_sym_read_linetable, debug_sym_relocate): Update.
+	(symfile_debug_free_objfile): Remove.
+	(install_symfile_debug_logging, _initialize_symfile_debug):
+	Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.h (struct dwarf2_per_objfile): Don't inherit from
+	allocate_on_obstack.
+	* dwarf2read.c (dwarf2_objfile_data_key): Change type.
+	(get_dwarf2_per_objfile): Update.
+	(set_dwarf2_per_objfile): Remove.
+	(dwarf2_has_info, dwarf2_get_section_info): Update.
+	(dwarf2_free_objfile): Remove.
+	(_initialize_dwarf2_read): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* auto-load.c (struct auto_load_pspace_info): Add destructor and
+	initializers.
+	<unsupported_script_warning_printed,
+	script_not_found_warning_printed>: Now bool.
+	(auto_load_pspace_data): Change type.
+	(~auto_load_pspace_info): Rename from
+	auto_load_pspace_data_cleanup.
+	(get_auto_load_pspace_data, init_loaded_scripts_info)
+	(clear_section_scripts, maybe_print_unsupported_script_warning)
+	(maybe_print_script_not_found_warning, _initialize_auto_load):
+	Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.c (objfile_pspace_info): Add destructor and
+	initializers.
+	(objfiles_pspace_data): Change type.
+	(~objfile_pspace_info): Rename from objfiles_pspace_data_cleanup.
+	(get_objfile_pspace_data): Update.
+	(objfiles_bfd_data): Change type.
+	(get_objfile_bfd_data): Update.
+	(objfile_bfd_data_free, _initialize_objfiles): Remove.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* break-catch-syscall.c (catch_syscall_inferior_data): Move.
+	Change type.
+	(get_catch_syscall_inferior_data): Update.
+	(catch_syscall_inferior_data_cleanup): Remove.
+	(_initialize_break_catch_syscall): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* inflow.c (struct terminal_info): Add destructor and
+	initializers.
+	(inflow_inferior_data): Change type.
+	(~terminal_info): Rename from inflow_inferior_data_cleanup.
+	(get_inflow_inferior_data, inflow_inferior_exit)
+	(swap_terminal_info, _initialize_inflow): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* target-dcache.c (target_dcache_cleanup): Remove.
+	(target_dcache_aspace_key): Change type.
+	(target_dcache_init_p, target_dcache_invalidate)
+	(target_dcache_get, target_dcache_get_or_init)
+	(_initialize_target_dcache): Update.
+	* dcache.h (struct dcache_deleter): New.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (struct symbol_cache): Add destructor and
+	initializers.
+	(symbol_cache_key): Move.  Change type.
+	(make_symbol_cache, free_symbol_cache): Remove.
+	(get_symbol_cache): Update.
+	(symbol_cache_cleanup): Remove.
+	(ALL_PSPACES, symbol_cache_flush)
+	(maintenance_print_symbol_cache)
+	(maintenance_print_symbol_cache_statistics, _initialize_symtab):
+	Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (struct main_info): Add destructor and initializers.
+	(main_progspace_key): Move.  Change type.
+	(get_main_info): Update.
+	(main_info_cleanup): Remove.
+	(_initialize_symtab): Update.
+
+2019-05-08  Tom Tromey  <tom@tromey.com>
+
+	* registry.h (DECLARE_REGISTRY): Define the _key class.
+
+2019-05-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Merge two 'New commands' sections.
+
+2019-05-08  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-valprint.c (ada_val_print_gnat_array): Remove language
+	parameter and use Ada language definition instead.
+	(ada_val_print_ptr): Remove unused language parameter.
+	(ada_val_print_num): Remove language parameter and use Ada language
+	definition instead.
+	(ada_val_print_enum, ada_val_print_flt): Remove unused language
+	parameter.
+	(ada_val_print_struct_union, ada_val_print_ref): Remove language
+	parameter and use Ada language definition instead.
+	(ada_val_print_1): Update all ada_val_print_xxx calls.
+	Remove language parameter.
+	(ada_val_print): Update ada_val_print_1 call.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* remote.c (remote_hw_watchpoint_limit)
+	(remote_hw_watchpoint_length_limit, remote_hw_breakpoint_limit):
+	Now static.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* maint.c (_initialize_maint_cmds): Move initialization code to
+	remote.c.
+	(watchdog, show_watchdog): Move to remote.c.
+	* remote.c (watchdog, show_watchdog): Move from maint.c.  Make
+	"watchdog" static.
+	(_initialize_remote): Move initialization code from maint.c.
+	* defs.h (watchdog): Don't declare.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* tui/tui-interp.c: Include main.h.
+	* interps.c: Include main.h.
+	* main.h (interpreter_p): Declare.
+	* defs.h (interpreter_p): Don't declare.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2loc.c: Include dwarf2read.h.
+	* defs.h (read_unsigned_leb128): Don't declare.
+	* dwarf2read.h (read_unsigned_leb128): Declare.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* utils.c (fputs_maybe_filtered): Call can_emit_style_escape as a
+	method.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* utils.c (fputs_maybe_filtered): Reset style after paging, even
+	when no wrap column is set.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* c-lang.c (c_get_string): Handle non-C-style arrays.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* typeprint.c (print_offset_data::update): Print the bit offset,
+	not the number of bits remaining.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* typeprint.c (print_offset_data::maybe_print_hole): Add extra
+	padding at end of comment.
+
+2019-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2loc.c (dwarf2_evaluate_property) <PROP_ADDR_OFFSET>:
+	Compare main types.
+
+2019-05-06  Tom Tromey  <tom@tromey.com>
+
+	* common/scoped_mmap.c: Include common-defs.h.
+	* common/scoped_mmap.h: Don't include config.h.
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* aarch64-tdep.c (stack_item_t): Remove typedef and DEF_VEC.
+	(struct aarch64_call_info): Add initializers.
+	<si>: Now a std::vector.
+	(pass_on_stack, aarch64_push_dummy_call): Update.
+
+2019-05-04  Simon Marchi  <simon.marchi@efficios.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* ppc-linux-nat.c (thread_points_p): Remove typedef and DEF_VEC.
+	(ppc_threads): Now a std::vector.  Now static.
+	(hwdebug_find_thread_points_by_tid)
+	(ppc_linux_nat_target::low_new_thread, ppc_linux_thread_exit):
+	Update.
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* arc-tdep.c (arc_tdesc_init): Return bool.
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* arm-linux-nat.c (arm_linux_nat_target::can_use_hw_breakpoint):
+	Use gdb_assert_not_reached.
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile-cplus-types.c (compile_cplus_convert_enum): Use
+	"false".
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* arc-tdep.c (arc_tdesc_init): Use bool.
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* stack.c (select_frame_for_mi): Use "false", not "FALSE".
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* cli/cli-cmds.c (valid_command_p): Return bool.
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* cli/cli-decode.c (valid_user_defined_cmd_name_p): Return bool.
+	* command.h (valid_user_defined_cmd_name_p): Channge return type.
+
+2019-05-04  Raul Tambre  <raul@tambre.ee>
+
+	* python/lib/gdb/prompt.py (_ExtendedPrompt)
+	<before_prompt_hook, get_show_string>: Fix incorrect use of 'is'
+	operator for comparison.
+
+2019-05-04  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.c (psymbol_name_matches, match_partial_symbol)
+	(lookup_partial_symbol, print_partial_symbols)
+	(recursively_search_psymtabs, sort_pst_symbols, psymbol_hash)
+	(psymbol_compare): Update.
+	(add_psymbol_to_bcache): Clear the entire psymbol.
+	(maintenance_check_psymtabs): Update.
+	* psympriv.h (struct partial_symbol): Don't derive from
+	general_symbol_info.
+	<obj_section, unrelocated_address, address,
+	set_unrelocated_address>: Update.
+	<ginfo>: New member.
+	* dwarf-index-write.c (write_psymbols, debug_names::insert)
+	(debug_names::write_psymbols): Update.
+
+2019-05-04  Tom de Vries  <tdevries@suse.de>
+
+	* contrib/cc-with-tweaks.sh: Support -n arg.
+
+2019-05-04  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* corelow.c (core_target::detach): Ensure frame cache and
+	register caches are cleared.
+	inferior.c (exit_inferior_1): Likewise.
+
+2019-05-03  Sandra Loosemore  <sandra@codesourcery.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* dictionary.c (collate_pending_symbols_by_language): Remove
+	"struct" from foreach.
+	* symtab.c (lookup_global_symbol_from_objfile)
+	(lookup_symbol_in_objfile_from_linkage_name): Remove "struct" from
+	foreach.
+	* ser-tcp.c (net_open): Remove "struct" from foreach.
+	* objfiles.c (objfile_relocate, objfile_rebase)
+	(objfile_has_symbols): Remove "struct" from foreach.
+	* minsyms.c (lookup_minimal_symbol_by_pc_section): Remove "struct"
+	from foreach.
+	* dwarf2read.c (handle_struct_member_die): Remove "struct" from
+	foreach.
+	* darwin-nat.c (thread_info_from_private_thread_info): Remove
+	"struct" from foreach.
+	* ada-lang.c (create_excep_cond_exprs)
+	(ada_exception_catchpoint_cond_string): Remove "struct" from
+	foreach.
+
+2019-05-03  Tom Tromey  <tromey@adacore.com>
+
+	* ada-exp.y (convert_char_literal): Check suffix of each
+	enumerator.
+
+2019-05-03  Dilyan Palauzov  <dilyan.palauzov@aegee.org>
+
+	PR ada/21406:
+	* ada-exp.y (yywrap): Don't define.
+	* ada-lex.l (%option): Add noyywrap
+	(yywrap): Remove.
+
+2019-05-03  Eli Zaretskii  <eliz@gnu.org>
+
+	* common/common-defs.h [__MINGW32__ || __CYGWIN__]: Define
+	_WIN32_WINNT to the XP level, unless already defined to a higher
+	level.
+
+	* unittests/parse-connection-spec-selftests.c:
+	* ser-tcp.c:
+	* common/netstuff.c [USE_WIN32API]:  Remove the _WIN32_WINNT
+	override.
+
+	* symfile.c (find_separate_debug_file): Remove colon from the
+	drive spec of DOS/Windows file names of the target, so that the
+	file name produced from DEBUGDIR and the target's directory will
+	be valid on DOS/Windows systems.
+
+2019-05-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* rust-lang.c (val_print_struct): Handle printing structures
+	containing strings.
+
+2019-05-02  Tom Tromey  <tromey@adacore.com>
+
+	* valarith.c (_initialize_valarith): Remove.
+
+2019-05-01  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_value_primitive_field): Treat more fields as
+	bitfields.
+
+2019-05-01  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_value_assign): Correctly compute starting offset
+	for big-endian copies.
+
+2019-04-30  Ali Tamur  <tamur@google.com>
+
+	* dwarf2read.c (read_3_bytes): New declaration.
+	(read_attribute_value): Added DW_FORM_strx1-4 cases.
+	(read_3_bytes): New function.
+
+2019-04-30  Joel Brobecker  <brobecker@adacore.com>
+
+	* windows-nat.c (main_thread_id): Delete.
+	(handle_output_debug_string): Replace main_thread_id by
+	current_event.dwThreadId.
+	(fake_create_process): Likewise.
+	(get_windows_debug_event) <CREATE_PROCESS_DEBUG_EVENT>:
+	Do not set main_thread_id.
+	<LOAD_DLL_DEBUG_EVENT>: Replace main_thread_id by
+	current_event.dwThreadId.
+	<UNLOAD_DLL_DEBUG_EVENT>: Likewise.
+
+2019-04-30  Joel Brobecker  <brobecker@adacore.com>
+
+	* windows-nat.c (get_windows_debug_event) <EXIT_PROCESS_DEBUG_EVENT>:
+	Use current_event.dwThreadId instead of main_thread_id.
+
+2019-04-30  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_lookup_simple_minsyms): New function.
+	(create_excep_cond_exprs): Iterate over program spaces.
+	(ada_exception_catchpoint_cond_string): Examine all minimal
+	symbols for exception types.
+
+2019-04-30  Tom Tromey  <tromey@adacore.com>
+
+	PR c++/24470:
+	* dwarf2read.c (process_structure_scope): Handle case where type
+	has template parameters but no symbol was created.
+
+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Chris January  <chris.january@arm.com>
+
+	* f-typeprint.c (f_type_print_base): Print 'allocatable' type
+	qualifier.
+	* gdbtypes.h (TYPE_IS_ALLOCATABLE): Define.
+
+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-typeprint.c (f_print_type): Update rules for printing
+	whitespace.
+	(f_type_print_varspec_suffix): Likewise.
+
+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Chris January  <chris.january@arm.com>
+
+	* f-typeprint.c (f_type_print_varspec_suffix): Handle printing
+	function arguments.
+
+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-lang.c (build_fortran_types): Change name of void type to
+	lower case.
+	* f-typeprint.c (f_type_print_base): Print the name of the void
+	type, rather than a fixed string.
+	* f-valprint.c (f_decorations): Use lower case void string.
+
+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Chris January  <chris.january@arm.com>
+
+	* dwarf2read.c (dwarf2_init_complex_target_type): Use different
+	types for Fortran.
+
+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Chris January  <chris.january@arm.com>
+	    David Lecomber  <david.lecomber@arm.com>
+
+	* f-exp.y (BINOP_INTRINSIC): New token.
+	(exp): New parser rule handling BINOP_INTRINSIC.
+	(f77_keywords): Add new builtin procedures.
+	* f-lang.c (evaluate_subexp_f): Handle BINOP_MOD, UNOP_FORTRAN_CEILING,
+	UNOP_FORTRAN_FLOOR, BINOP_FORTRAN_MODULO, BINOP_FORTRAN_CMPLX.
+	(operator_length_f): Handle UNOP_FORTRAN_CEILING,
+	UNOP_FORTRAN_FLOOR, BINOP_FORTRAN_MODULO, BINOP_FORTRAN_CMPLX.
+	(print_unop_subexp_f): New function.
+	(print_binop_subexp_f): New function.
+	(print_subexp_f): Handle UNOP_FORTRAN_CEILING, UNOP_FORTRAN_FLOOR,
+	BINOP_FORTRAN_MODULO, BINOP_FORTRAN_CMPLX.
+	(dump_subexp_body_f): Likewise.
+	(operator_check_f): Likewise.
+	* fortran-operator.def: Add UNOP_FORTRAN_CEILING, UNOP_FORTRAN_FLOOR,
+	BINOP_FORTRAN_MODULO, BINOP_FORTRAN_CMPLX
+
+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* expprint.c (dump_subexp_body_standard): Remove use of
+	UNOP_KIND.
+	* expression.h (exp_opcode): Include 'fortran-operator.def'.
+	* f-exp.y (exp): Rename UNOP_KIND to UNOP_FORTRAN_KIND.
+	* f-lang.c (evaluate_subexp_f): Likewise.
+	(operator_length_f): New fuction.
+	(print_subexp_f): New function.
+	(op_name_f): New function.
+	(dump_subexp_body_f): New function.
+	(operator_check_f): New function.
+	(exp_descriptor_f): Replace standard expression handling functions
+	with new functions.
+	* fortran-operator.def: New file.
+	* parse.c (operator_length_standard): Remove use of UNOP_KIND.
+	* std-operator.def: Remove UNOP_KIND.
+
+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* std-operator.def: Remove unbalanced, stray double quote
+	character.
+
+2019-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Chris January  <chris.january@arm.com>
+	    Daniel Everett  <daniel.everett@arm.com>
+	    Nick Forrington  <nick.forrington@arm.com>
+	    Richard Bunt  <richard.bunt@arm.com>
+
+	* cp-valprint.c (cp_print_value_fields): Allow an additional level
+	of depth when printing anonymous structs or unions.
+	* guile/scm-pretty-print.c (gdbscm_apply_val_pretty_printer):
+	Don't print either the top-level value, or the children if the
+	max-depth is exceeded.
+	(ppscm_print_children): When printing the key of a map, allow one
+	extra level of depth.
+	* python/py-prettyprint.c (gdbpy_apply_val_pretty_printer): Don't
+	print either the top-level value, or the children if the max-depth
+	is exceeded.
+	(print_children): When printing the key of a map, allow one extra
+	level of depth.
+	* python/py-value.c (valpy_format_string): Add max_depth keyword.
+	* valprint.c: (PRINT_MAX_DEPTH_DEFAULT): Define.
+	(user_print_options): Initialise max_depth field.
+	(val_print_scalar_or_string_type_p): New function.
+	(val_print): Check to see if the max depth has been reached.
+	(val_print_check_max_depth): Define new function.
+	(show_print_max_depth): New function.
+	(_initialize_valprint): Add 'print max-depth' option.
+	* valprint.h (struct value_print_options) <max_depth>: New field.
+	(val_print_check_max_depth): Declare new function.
+	* NEWS: Document new feature.
+
+2019-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_defn): Initialise new field.
+	* c-lang.c (c_is_string_type_p): New function.
+	(c_language_defn): Initialise new field.
+	(cplus_language_defn): Initialise new field.
+	(asm_language_defn): Initialise new field.
+	(minimal_language_defn): Initialise new field.
+	* c-lang.h (c_is_string_type_p): Declare new function.
+	* d-lang.c (d_language_defn): Initialise new field.
+	* f-lang.c (f_is_string_type_p): New function.
+	(f_language_defn): Initialise new field.
+	* go-lang.c (go_is_string_type_p): New function.
+	(go_language_defn): Initialise new field.
+	* language.c (default_is_string_type_p): New function.
+	(unknown_language_defn): Initialise new field.
+	(auto_language_defn): Initialise new field.
+	* language.h (struct language_defn) <la_is_string_type_p>: New
+	member variable.
+	(default_is_string_type_p): Declare new function.
+	* m2-lang.c (m2_language_defn): Initialise new field.
+	* objc-lang.c (objc_language_defn): Initialise new field.
+	* opencl-lang.c (opencl_language_defn): Initialise new field.
+	* p-lang.c (pascal_is_string_type_p): New function.
+	(pascal_language_defn): Initialise new field.
+	* rust-lang.c (rust_is_string_type_p): New function.
+	(rust_language_defn): Initialise new field.
+
+2019-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* language.h (struct language_defn) <la_struct_too_deep_ellipsis>:
+	New field.
+	* ada-lang.c (ada_language_defn): Initialise new field.
+	* c-lang.c (c_language_defn): Likewise.
+	(cplus_language_defn): Likewise.
+	(asm_language_defn): Likewise.
+	(minimal_language_defn): Likewise.
+	* d-lang.c (d_language_defn): Likewise.
+	* f-lang.c (f_language_defn): Likewise.
+	* go-lang.c (go_language_defn): Likewise.
+	* language.c (unknown_language_defn): Likewise.
+	(auto_language_defn): Likewise.
+	* m2-lang.c (m2_language_defn): Likewise.
+	* objc-lang.c (objc_language_defn): Likewise.
+	* opencl-lang.c (opencl_language_defn): Likewise.
+	* p-lang.c (pascal_language_defn): Likewise.
+	* rust-lang.c (rust_language_defn): Likewise.
+
+2019-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_is_character_type): Change return type to bool.
+	(ada_is_string_type): Likewise.
+	* ada-lang.h (ada_is_character_type): Update declaration
+	(ada_is_string_type): Likewise.
+
+2019-04-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	Support style in 'frame|thread apply'
+
+	* gdbcmd.h (execute_command_to_string): New term_out parameter.
+	* record.c (record_start, record_stop): Update callers of
+	execute_command_to_string with false.
+	* guile/guile.c (gdbscm_execute_gdb_command): Likewise.
+	* ui-file.h (class ui_file): New term_out and can_emit_style_escape
+	methods.
+	(class string_file): New constructor with term_out parameter.
+	Override methods term_out and can_emit_style_escape.  New member
+	term_out.
+	(class stdio_file): Override can_emit_style_escape.
+	(class tee_file): Override term_out and can_emit_style_escape.
+	* utils.h (can_emit_style_escape): Remove.
+	* utils.c (can_emit_style_escape): Likewise.
+	Update all callers of can_emit_style_escape (SOMESTREAM) to
+	SOMESTREAM->can_emit_style_escape.
+	* source-cache.c (source_cache::get_source_lines): Likewise.
+	* stack.c (frame_apply_command_count): Call execute_command_to_string
+	passing the term_out characteristic of the current gdb_stdout.
+	* thread.c (thr_try_catch_cmd): Likewise.
+	* top.c (execute_command_to_string): pass term_out parameter
+	to construct the string_file for the command output.
+	* ui-file.c (term_cli_styling): New function (most code moved
+	from utils.c can_emit_style_escape).
+	(string_file::string_file, string_file::can_emit_style_escape,
+	stdio_file::can_emit_style_escape, tee_file::term_out,
+	tee_file::can_emit_style_escape): New functions.
+
+2019-04-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention the new set|show may-call-functions.
+	* infcall.c (may_call_functions_p): New variable.
+	(show_may_call_functions_p): New function.
+	(call_function_by_hand_dummy): Throws an error if not
+	may-call-functions.
+	(_initialize_infcall): Call add_setshow_boolean_cmd for
+	may-call-functions.
+
+2019-04-25  Keith Seitz  <keiths@redhat.com>
+
+	PR c++/24367
+	* cp-support.c (inspect_type): Don't attempt substitutions
+	of symbol with the same name.
+
+2019-04-25  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/24475:
+	* event-top.c (gdb_rl_callback_handler): Make "gdb_rl_expt"
+	static.
+
+2019-04-25  Tom Tromey  <tromey@adacore.com>
+
+	* xml-support.c (struct gdb_xml_parser) <set_error>: Take an
+	rvalue reference.
+	(gdb_xml_start_element_wrapper, gdb_xml_end_element_wrapper)
+	(gdb_xml_parser::parse): Use std::move.
+	* python/python-internal.h (gdbpy_convert_exception): Take a const
+	reference.
+	* python/py-value.c (valpy_getitem, valpy_nonzero): Use
+	std::move.
+	* python/py-utils.c (gdbpy_convert_exception): Take a const
+	reference.
+	* python/py-inferior.c (infpy_write_memory, infpy_search_memory):
+	Use std::move.
+	* python/py-breakpoint.c (bppy_set_condition, bppy_set_commands):
+	Use std::move.
+	* mi/mi-main.c (mi_print_exception): Take a const reference.
+	* main.c (handle_command_errors): Take a const reference.
+	* linespec.c (parse_linespec): Use std::move.
+	* infcall.c (run_inferior_call): Use std::move.
+	(call_function_by_hand_dummy): Use std::move.
+	* exec.c (try_open_exec_file): Use std::move.
+	* exceptions.h (exception_print, exception_fprintf)
+	(exception_print_same): Update.
+	* exceptions.c (print_exception, exception_print)
+	(exception_fprintf, exception_print_same): Change parameters to
+	const reference.
+	* event-top.c (gdb_rl_callback_read_char_wrapper): Update.
+	* common/new-op.c: Use std::move.
+	* common/common-exceptions.h (struct gdb_exception): Add move
+	constructor.
+	(struct gdb_exception_error, struct gdb_exception_quit, struct
+	gdb_quit_bad_alloc): Change constructor to move constructor.
+	(throw_exception): Change parameter to rvalue reference.
+	* common/common-exceptions.c (throw_exception): Take rvalue
+	reference.
+	* cli/cli-interp.c (safe_execute_command): Use std::move.
+	* breakpoint.c (insert_bp_location, location_to_sals): Use
+	std::move.
+
+2019-04-25  Tom Tromey  <tromey@adacore.com>
+
+	* guile/scm-exception.c (gdbscm_scm_from_gdb_exception)
+	(gdbscm_throw_gdb_exception): Take a gdbscm_gdb_exception.
+	* guile/scm-block.c, guile/scm-breakpoint.c, guile/scm-cmd.c,
+	guile/scm-disasm.c, guile/scm-frame.c, guile/scm-lazy-string.c,
+	guile/scm-math.c, guile/scm-param.c, guile/scm-ports.c,
+	guile/scm-symbol.c, guile/scm-symtab.c, guile/scm-type.c,
+	guile/scm-value.c: Use unpack.
+	* guile/guile-internal.h (gdbscm_scm_from_gdb_exception): Take a
+	gdbscm_gdb_exception.
+	(gdbscm_throw_gdb_exception): Likewise.
+	(struct gdbscm_gdb_exception): New.
+	(unpack): New function.
+	(gdbscm_wrap): Use unpack.
+
+2019-04-25  Tom Tromey  <tromey@adacore.com>
+
+	* event-top.c (gdb_rl_callback_read_char_wrapper_noexcept)
+	(gdb_rl_callback_handler): Use std::move.
+	* common/common-exceptions.h (struct gdb_exception): Add move
+	assignment operator.
+	(throw_exception_sjlj): Change "exception" to const reference.
+	* common/common-exceptions.c (exceptions_state_mc_catch): Update.
+	(throw_exception_sjlj): Change "exception" to const reference.
+
+2019-04-25  Tom Tromey  <tromey@adacore.com>
+
+	* xml-support.c (gdb_xml_parser::gdb_xml_parser): Update.
+	* python/py-value.c (valpy_getitem, valpy_nonzero): Update.
+	* python/py-inferior.c (infpy_write_memory, infpy_search_memory):
+	Update.
+	* python/py-breakpoint.c (bppy_set_condition, bppy_set_commands):
+	Update.
+	* mi/mi-interp.c (mi_interp::exec): Update.
+	* linespec.c (parse_linespec): Update.
+	* infcall.c (run_inferior_call): Update.
+	* guile/scm-value.c (gdbscm_value_to_lazy_string): Update.
+	* guile/scm-symbol.c (gdbscm_lookup_symbol)
+	(gdbscm_lookup_global_symbol): Update.
+	* guile/scm-param.c (gdbscm_parameter_value): Update.
+	* guile/scm-frame.c (gdbscm_frame_read_register)
+	(gdbscm_frame_read_var): Update.
+	* guile/scm-breakpoint.c (gdbscm_register_breakpoint_x): Update.
+	* exec.c (try_open_exec_file): Update.
+	* event-top.c (gdb_rl_callback_read_char_wrapper_noexcept)
+	(gdb_rl_callback_handler): Update.
+	* common/common-exceptions.h (exception_none): Don't declare.
+	* common/common-exceptions.c (exception_none): Don't define.
+	(struct catcher) <exception>: Update.
+	* cli/cli-interp.c (safe_execute_command): Update.
+	* breakpoint.c (insert_bp_location, location_to_sals): Update.
+
+2019-04-25  Ali Tamur  <tamur@google.com>
+
+	* dwarf2read.c (skip_one_die): Add DW_FORM_strx.
+	(read_attribute_value): Likewise.
+	(dwarf2_read_addr_index): Update comment.
+	(read_str_index): Add DW_FORM_strx.
+	(dwarf2_string_attr): Likewise.
+	(dwarf2_const_value_attr): Likewise.
+	(dump_die_shallow): Likewise.
+	(dwarf2_fetch_constant_bytes): Likewise.
+	(skip_form_bytes): Likewise.
+
+2019-04-25  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	PR corefiles/11608
+	PR corefiles/18187
+	* linux-tdep.c (dump_mapping_p): Add new parameters ADDR and
+	OFFSET.  Verify if current mapping contains an ELF header.
+	(linux_find_memory_regions_full): Adjust call to
+	dump_mapping_p.
+
+2019-04-25  Sandra Loosemore  <sandra@codesourcery.com>
+	    Kang Li <kanglictf@gmail.com>
+
+	PR gdb/21600
+
+	* dwarf2-frame.c (read_initial_length): Be consistent about using
+	unsigned representation of length.
+	(decode_frame_entry_1): Likewise.  Check for wraparound of
+	end pointer as well as buffer overflow.
+
+2019-04-24  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* aarch64-tdep.c (aarch64_gdbarch_init): Use "pulongest" to print
+	"vq".
+
+2019-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* amd64-tdep.c (amd64_has_unaligned_fields): Ignore bitfields.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* s12z-tdep.c (s12z_unwind_pc): Delete.
+	(s12z_unwind_sp): Delete.
+	(s12z_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* rl78-tdep.c (rl78_unwind_sp): Delete.
+	(rl78_gdbarch_init): Don't register deleted function with gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* xstormy16-tdep.c (xstormy16_unwind_sp): Delete.
+	(xstormy16_unwind_pc): Delete.
+	(xstormy16_dummy_id): Delete.
+	(xstormy16_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* vax-tdep.c (vax_unwind_pc): Delete.
+	(vax_gdbarch_init): Don't register deleted function with gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* v850-tdep.c (v850_unwind_sp): Delete.
+	(v850_unwind_pc): Delete.
+	(v850_dummy_id): Delete.
+	(v850_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tilegx-tdep.c (tilegx_unwind_sp): Delete.
+	(tilegx_unwind_pc): Delete.
+	(tilegx_unwind_dummy_id): Delete.
+	(tilegx_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tic6x-tdep.c (tic6x_unwind_sp): Delete.
+	(tic6x_dummy_id): Delete.
+	(tic6x_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* sparc-tdep.c (sparc_unwind_pc): Delete.
+	(sparc32_gdbarch_init): Don't register deleted function with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* sh-tdep.c (sh_unwind_sp): Delete.
+	(sh_unwind_pc): Delete.
+	(sh_dummy_id): Delete.
+	(sh_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* score-tdep.c (score_unwind_sp): Delete.
+	(score_unwind_pc): Delete.
+	(score_dummy_id): Delete.
+	(score_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* rx-tdep.c (rx_unwind_pc): Delete.
+	(rx_unwind_sp): Delete.
+	(rx_dummy_id): Delete.
+	(rx_gdbarch_init): Don't register deleted functions with
+	gdbarch.  Update comment.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* rs6000-tdep.c (rs6000_unwind_pc): Delete.
+	(rs6000_dummy_id): Delete.
+	(rs6000_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* or1k-tdep.c (or1k_dummy_id): Delete.
+	(or1k_gdbarch_init): Don't register deleted function with gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* nios2-tdep.c (nios2_dummy_id): Delete.
+	(nios2_unwind_sp): Delete.
+	(nios2_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* nds32-tdep.c (nds32_dummy_id): Delete.
+	(nds32_unwind_pc): Delete.
+	(nds32_unwind_sp): Delete.
+	(nds32_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* msp430-tdep.c (msp430_unwind_pc): Delete.
+	(msp430_unwind_sp): Delete.
+	(msp430_dummy_id): Delete.
+	(msp430_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* moxie-tdep.c (moxie_unwind_sp): Delete.
+	(moxie_unwind_pc): Delete.
+	(moxie_dummy_id): Delete.
+	(moxie_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* mn10300-tdep.c (mn10300_dummy_id): Delete.
+	(mn10300_unwind_pc): Delete.
+	(mn10300_unwind_sp): Delete.
+	(mn10300_push_dummy_call): Use gdbarch_unwind_sp not
+	mn10300_unwind_sp.
+	(mn10300_frame_unwind_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* mep-tdep.c (mep_unwind_pc): Delete.
+	(mep_unwind_sp): Delete.
+	(mep_dummy_id): Delete.
+	(mep_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* m68hc11-tdep.c (m68hc11_unwind_pc): Delete.
+	(m68hc11_unwind_sp): Delete.
+	(m68hc11_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* m32r-tdep.c (m32r_unwind_sp): Delete.
+	(m32r_unwind_pc): Delete.
+	(m32r_dummy_id): Delete.
+	(m32r_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* m32c-tdep.c (m32c_unwind_pc): Delete.
+	(m32c_unwind_sp): Delete.
+	(m32c_dummy_id): Delete.
+	(m32c_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lm32-tdep.c (lm32_unwind_sp): Delete.
+	(lm32_unwind_pc): Delete.
+	(lm32_dummy_id): Delete.
+	(lm32_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* iq2000-tdep.c (iq2000_unwind_sp): Delete.
+	(iq2000_unwind_pc): Delete.
+	(iq2000_dummy_id): Delete.
+	(iq2000_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* nds32-tdep.c (nds32_type_align): Delete.
+	(nds32_push_dummy_call): Use type_align instead.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arm-tdep.c (arm_type_align): Only handle vector override case.
+	(arm_push_dummy_call): Use type_align.
+	(arm_gdbarch_init): Register arm_type_align gdbarch function.
+
+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* aarch64-tdep.c (aarch64_type_align): Only handle vector override
+	case.
+	(pass_on_stack): Use type_align.
+	(aarch64_gdbarch_init): Register aarch64_type_align gdbarch
+	function.
+
+2019-04-23  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (line_header::file_name_at): Remove unused
+	overload.
+
+2019-04-23  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/24438
+	* contrib/cc-with-tweaks.sh: Remove superfluous .alt file after dwz
+	invocation.
+
+
+2019-03-27  Ali Tamur  <tamur@google.com>
+
+	* dwarf2-frame.c(dwarf_expr_executor::get_addr_index): Update comment
+	* dwarf2expr.c(dwarf_expr_context::execute_stack_op): Add DW_OP_addrx
+	* dwarf2expr.h(dwarf_expr_context::offset): Update comment
+	(dwarf_expr_context::get_addr_index): Likewise
+	* dwarf2loc.c(dwarf_evaluate_loc_desc::get_addr_index): Likewise
+	(symbol_needs_eval_context::get_addr_index): Likewise
+	(disassemble_dwarf_expression): Add DW_OP_addrx
+	* dwarf2read.c(attr_value_as_address): Add DW_FORM_addrx
+	(read_cutu_die_from_dwo): Update comment
+	(skip_one_die): Add DW_FORM_addrx
+	(read_attribute_value): Likewise
+	(var_decode_location): Add DW_OP_addrx
+	(dwarf2_const_value_attr): Add DW_FORM_addrx
+	(dump_die_shallow): Likewise
+	(dwarf2_fetch_constant_bytes): Likewise
+	(decode_locdesc): Add DW_OP_addrx
+	(skip_form_bytes): Add DW_FORM_addrx
+
+2019-04-22  Ali Tamur  <tamur@google.com>
+
+	* MAINTAINERS (Write After Approval): Add self.
+
+2019-04-22  Simon Marchi  <simon.marchi@efficios.com>
+
+	* solib-svr4.c (get_svr4_info): Add pspace parameter.
+	(svr4_keep_data_in_core): Pass current_program_space to get_svr4_info.
+	(open_symbol_file_object): Likewise.
+	(svr4_default_sos): Add info parameter.
+	(svr4_read_so_list): Likewise.
+	(svr4_current_sos_direct): Adjust functions calls to pass down
+	info.
+	(svr4_current_sos_1): Add info parameter.
+	(svr4_current_sos): Call get_svr4_info, pass info down to
+	svr4_current_sos_1.
+	(svr4_fetch_objfile_link_map): Pass objfile->pspace to
+	get_svr4_info.
+	(svr4_in_dynsym_resolve_code): Pass current_program_space to
+	get_svr4_info.
+	(probes_table_htab_remove_objfile_probes): Pass objfile->pspace
+	to get_svr4_info.
+	(probes_table_remove_objfile_probes): Likewise.
+	(register_solib_event_probe): Add info parameter.
+	(solist_update_incremental): Pass info parameter down to
+	svr4_read_so_list.
+	(disable_probes_interface): Add info parameter.
+	(svr4_handle_solib_event): Pass current_program_space to
+	get_svr4_info.  Adjust disable_probes_interface cleanup.
+	(svr4_create_probe_breakpoints): Add info parameter, pass it
+	down to register_solib_event_probe.
+	(svr4_create_solib_event_breakpoints): Add info parameter,
+	pass it down to svr4_create_probe_breakpoints.
+	(enable_break): Pass info down to
+	svr4_create_solib_event_breakpoints.
+	(svr4_solib_create_inferior_hook): Pass current_program_space to
+	get_svr4_info.
+	(svr4_clear_solib): Likewise.
+
+2019-04-22  Pedro Alves  <palves@redhat.com>
+
+	* solib-svr4.c (svr4_free_objfile_observer): New.
+	(probe_and_action::objfile): New field.
+	(probes_table_htab_remove_objfile_probes)
+	(probes_table_remove_objfile_probes): New functions.
+	(register_solib_event_probe): Add 'objfile' parameter.  Store it
+	in the new probe_and_action.  Don't store the probe in 'lookup'.
+	(svr4_create_probe_breakpoints): Pass objfile to
+	register_solib_event_probe.
+	(_initialize_svr4_solib): Register a free_objfile observer.
+
+2019-04-19  Tom Tromey  <tom@tromey.com>
+
+	* common/queue.h: Remove.
+
+2019-04-19  Tom Tromey  <tom@tromey.com>
+
+	* event-loop.c: Don't include "common/queue.h".
+
+2019-04-19  Tom Tromey  <tom@tromey.com>
+
+	* remote.c (remote_target): Use delete.
+	* remote-notif.h: Include <list>, not "common/queue.h".
+	(notif_client_p): Remove typedef.
+	(remote_notif_state): Add constructor, destructor, initializer.
+	<notif_queue>: Now a std::list.
+	(remote_notif_state_xfree): Don't declare.
+	* remote-notif.c (remote_notif_process, handle_notification)
+	(remote_notif_state_allocate): Update.
+	(~remote_notif_state): Rename from remote_notif_state_xfree.
+
+2019-04-19  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (reread_symbols): Update.
+	* objfiles.c (objfile_register_static_link)
+	(objfile_lookup_static_link): Update
+	(~objfile) Don't delete static_links.
+	* objfiles.h (struct objfile) <static_links>: Now an htab_up.
+
+2019-04-19  Tom Tromey  <tom@tromey.com>
+
+	* type-stack.h (struct type_stack) <insert>: Constify string.
+	* type-stack.c (type_stack::insert): Constify string.
+	* gdbtypes.h (lookup_template_type): Update.
+	(address_space_name_to_int): Update.
+	* gdbtypes.c (address_space_name_to_int): Make space_identifier
+	const.
+	(lookup_template_type): Make name const.
+	* c-exp.y: Update rules.
+	(lex_one_token, classify_name, classify_inner_name)
+	(c_print_token): Update.
+	* p-exp.y: Update rules.
+	(yylex): Update.
+	* f-exp.y: Update rules.
+	(yylex): Update.
+	* d-exp.y: Update rules.
+	(lex_one_token, classify_name, classify_inner_name): Update.
+	* parse.c (write_dollar_variable, copy_name): Return std::string.
+	* parser-defs.h (copy_name): Change return type.
+	* m2-exp.y: Update rules.
+	(yylex): Update.
+	* go-exp.y (lex_one_token): Update.
+	Update rules.
+	(classify_unsafe_function, classify_packaged_name)
+	(classify_name, yylex): Update.
+
+2019-04-19  Sergei Trofimovich <siarheit@google.com>
+
+	* configure.ac: add --enable-source-highlight switch.
+	* configure: Regenerate.
+	* top.c (print_gdb_version): plumb --enable-source-highlight
+	status to "show configuration".
+
+2019-04-19  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_is_variant_part, ada_to_fixed_type_1):
+	Check ADA_TYPE_P.
+	(empty_record, ada_template_to_fixed_record_type_1)
+	(template_to_static_fixed_type)
+	(to_record_with_fixed_variant_part): Use INIT_NONE_SPECIFIC.
+	* cp-abi.c (value_rtti_type): Check HAVE_CPLUS_STRUCT.
+	* gdbtypes.h (INIT_NONE_SPECIFIC, ADA_TYPE_P): New
+	macros.
+
+2019-04-19  Ilya Yu. Malakhov  <malakhov@mcst.ru>
+
+	PR symtab/24423:
+	* source.c (print_source_lines_base): Advance "iter" when a
+	control character is seen.
+
+2019-04-19  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* inferior.h (struct infcall_suspend_state_deleter):
+	Catch exception in destructor to avoid crash.
+
+2019-04-19  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-cmds.c (_initialize_cli_cmds): Move "shell" "!" alias
+	close to the add_com "shell".
+
+2019-04-18  Tom Tromey  <tromey@adacore.com>
+
+	* process-stratum-target.h (class process_stratum_target)
+	<stratum>: Add "final".
+
+2019-04-17  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (dwarf2_init_complex_target_type): Check "tt"
+	against nullptr before use.
+
+2019-04-17  Alan Hayward  <alan.hayward@arm.com>
+
+	* nat/linux-waitpid.c (linux_debug): Call debug_vprintf.
+
+2019-04-17  Jim Wilson  <jimw@sifive.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_breakpoint_kind_from_pc): Hanndle case where
+	code read might fail, assume 4-byte breakpoint in that case.
+
+2019-04-15  Leszek Swirski  <leszeks@google.com>
+
+	* amd64-tdep.c (amd64_classify_aggregate): Use cp_pass_by_reference
+	rather than a hand-rolled POD check when checking for forced MEMORY
+	classification.
+
+2019-04-15  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-linux-nat.c (store_sveregs_to_thread): Set vector length.
+	* nat/aarch64-sve-linux-ptrace.c (aarch64_sve_set_vq): New
+	function.
+	(aarch64_sve_regs_copy_to_reg_buf): Remove VG checks.
+	(aarch64_sve_regs_copy_from_reg_buf): Likewise.
+	* nat/aarch64-sve-linux-ptrace.h (aarch64_sve_set_vq): New
+	declaration.
+
+2019-04-15  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-linux-nat.c
+	(aarch64_linux_nat_target::thread_architecture): Add override.
+	* aarch64-tdep.c (aarch64_gdbarch_init): Ensure different tdesc for
+	each VQ.
+
+2019-04-15  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aarch64_gdbarch_init): Move gdbarch lookup.
+
+2019-04-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (dwarf2_init_complex_target_type): Handle complex
+	target types of size 96-bits, add some additional comments, and
+	check that the builtin type we found was the correct size.
+
+2019-04-12  Eli Zaretskii  <eliz@gnu.org>
+
+	* utils.c (prompt_for_continue): Don't restore the styling at the
+	end, as applied_style has the wrong value.  This fixes styling in
+	long lists of file names that are interrupted by the "Continue?"
+	prompt.
+
+2019-04-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_defn): Remove use of LANG_MAGIC.
+	* c-lang.c (c_language_defn): Likewise.
+	(cplus_language_defn): Likewise.
+	(asm_language_defn): Likewise.
+	(minimal_language_defn): Likewise.
+	* d-lang.c (d_language_defn): Likewise.
+	* f-lang.c (f_language_defn): Likewise.
+	* go-lang.c (go_language_defn): Likewise.
+	* language.c (unknown_language_defn): Likewise.
+	(auto_language_defn): Likewise.
+	* language.h (struct language_defn): Remove la_magic field.
+	(LANG_MAGIC): Delete.
+	* m2-lang.c (m2_language_defn): Remove use of LANG_MAGIC.
+	* objc-lang.c (objc_language_defn): Likewise.
+	* opencl-lang.c (opencl_language_defn): Likewise.
+	* p-lang.c (pascal_language_defn): Likewise.
+	* rust-lang.c (rust_language_defn): Likewise.
+
+2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_type_align): New function.
+	(riscv_type_alignment): Delete.
+	(riscv_arg_location): Use 'type_align'.
+	(riscv_gdbarch_init): Register riscv_type_align gdbarch function.
+
+2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbtypes.c (type_align): A struct with no non-static fields also
+	has alignment of 1.
+
+2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_call_arg_complex_float): Fix offset of first
+	component to 0.
+	(riscv_struct_info::riscv_struct_info): Initialise m_offsets
+	member.
+	(riscv_struct_info::analyse): New implementation using new
+	analyse_inner member function.
+	(riscv_struct_info::field_offset): New member function.
+	(riscv_struct_info::m_offsets): New member variable.
+	(riscv_struct_info::analyse_inner): New private member function,
+	takes the old implementation of riscv_struct_info::analyse but
+	extended to track field offsets.
+	(riscv_call_arg_struct): Update the struct folding special cases
+	to handle cases where empty C++ structs, which are non-zero
+	length, are found.
+	(riscv_arg_location): Initialise the length of each location, a
+	non-zero length now indicates the location is in use.
+	(riscv_push_dummy_call): Allow for the first location having a
+	non-zero offset when setting up arguments.
+	(riscv_return_value): Likewise, but for return values.
+
+2019-04-11  Tom Tromey  <tromey@adacore.com>
+
+	* utils.c (internal_vproblem): Make "msg" const.
+
+2019-04-11  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aarch64_analyze_prologue_test): Reset saved regs.
+	* trad-frame.c (trad_frame_reset_saved_regs): New function.
+	(trad_frame_alloc_saved_regs): Call trad_frame_reset_saved_regs.
+	* trad-frame.h (trad_frame_reset_saved_regs): New declaration.
+
+2019-04-10  Kevin Buettner  <kevinb@redhat.com>
+
+	* amd64-linux-nat.c (amd64_linux_collect_native_gregset): New
+	function.
+	(fill_gregset): Call amd64_linux_collect_native_gregset instead
+	of amd64_collect_native_gregset.
+	(amd64_linux_nat_target::store_registers): Likewise.
+
+2019-04-10  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (lookup_global_symbol_from_objfile)
+	(lookup_symbol_in_objfile_from_linkage_name): Use the iterator.
+	* objfiles.h (class separate_debug_iterator): New.
+	(class separate_debug_range): New.
+	(struct objfile) <separate_debug_objfiles>: New method.
+	(objfile_separate_debug_iterate): Don't declare.
+	* objfiles.c (separate_debug_iterator::operator++): Rename from
+	objfile_separate_debug_iterate.
+	(objfile_relocate, objfile_rebase, objfile_has_symbols): Use the
+	iterator.
+	* minsyms.c (lookup_minimal_symbol_by_pc_section): Use the
+	iterator.
+
+2019-04-10  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (reread_symbols): Remove old comment.
+	* objfiles.c (free_all_objfiles): Fix a typo.
+
+2019-04-10  Tom Tromey  <tom@tromey.com>
+
+	* ia64-tdep.c (ia64_get_dyn_info_list): Use foreach.
+	* minsyms.c (lookup_minimal_symbol): Use foreach.
+	(lookup_minimal_symbol_text, lookup_minimal_symbol_by_pc_name)
+	(lookup_minimal_symbol_solib_trampoline): Likewise.
+	* symfile.c (reread_symbols): Use foreach.
+
+2019-04-09  Ivan Begert  <ivanbegert@gmail.com>
+	    Tom Tromey  <tromey@adacore.com>
+
+	PR rust/24414:
+	* rust-exp.y (rust_parser::lex_number): Use strtoulst.
+	(rust_lex_int_test): Change "value" to be LONGEST.
+	(rust_lex_tests): Add test for long integer literal.
+
+2019-04-09  Tom Tromey  <tromey@adacore.com>
+
+	* remote.c (remote_target::remote_add_inferior): Change fake_pid_p
+	to bool.
+	(extended_remote_target::attach): Update.
+	(remote_target::remote_notice_new_inferior): Update.
+	(remote_target::add_current_inferior_and_thread): Update.
+	* inferior.c (exit_inferior_1): Use "false".
+	* corelow.c (add_to_thread_list): Make fake_pid_p bool.
+
+2019-04-09  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infcmd.c (run_command_1): Pass -qualified to tbreak when using
+	the "start" command.
+
+2019-04-08  Kevin Buettner  <kevinb@redhat.com>
+
+	* python/py-inferior.c (infpy_thread_from_thread_handle):
+	Adjust comments to reflect renaming of thread_from_thread_handle
+	to thread_from_handle.  Adjust keywords.  Fix type error message.
+	(inferior_object_methods): Add thread_from_handle.  Retain
+	thread_from_thread_handle, but mark it as deprecated.
+
+2019-04-08  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdbthread.h (find_thread_by_handle): Revise declaration.
+	* thread.c (find_thread_by_handle): Likewise.  Adjust
+	implementation too.
+	* python/py-inferior.c (infpy_thread_from_thread_handle): Add
+	support for buffer objects as handles.
+
+2019-04-08  Kevin Buettner  <kevinb@redhat.com>
+
+	* python/py-infthread.c (thpy_thread_handle): New function.
+	(thread_object_methods): Register thpy_thread_handle.
+
+2019-04-08  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdbthread.h (thread_to_thread_handle): Declare.
+	* thread.c (gdbtypes.h): Include.
+	(thread_to_thread_handle): New function.
+
+	* target.h (struct target_ops): Add thread_info_to_thread_handle.
+	(target_thread_info_to_thread_handle): Declare.
+	* target.c (target_thread_info_to_thread_handle): New function.
+	* target-debug.h (target_debug_print_gdb_byte_vector): Define.
+	* target-delegates.c: Regenerate.
+
+	* linux-thread-db.c (class thread_db_target): Add method
+	thread_info_to_thread_handle.
+	(thread_db_target::thread_info_to_thread_handle): Define.
+	* remote.c (class remote_target): Add new method
+	thread_info_to_thread_handle.
+	(remote_target::thread_info_to_thread_handle): Define.
+
+2019-04-08  Pedro Alves  <palves@redhat.com>
+
+	* common/common-exceptions.c (throw_exception): Don't create
+	named object to throw; throw directly.
+	(throw_it): Likewise.  Don't initialize gdb_exception::message
+	here, with new; pass FMT and AP to the ctor instead.
+	* common/common-exceptions.h: Include <string>.
+	(gdb_exception::gdb_exception(enum return_reason, enum errors,
+	const char *, va_list)): New ctor.  Use std::make_shared.
+	(gdb_exception_error::gdb_exception_error(enum return_reason, enum
+	errors)): Delete.
+	(gdb_exception_error::gdb_exception_error(enum errors, const char
+	*, va_list)): New.
+	(gdb_exception_error::gdb_exception_error(const gdb_exception &)):
+	Add assertion.
+	(gdb_exception_quit::gdb_exception_quit(enum return_reason, enum
+	errors)): Delete.
+	(gdb_exception_quit::gdb_exception_quit(const char *, va_list)): New.
+	(gdb_exception_quit::gdb_exception_quit(const gdb_exception &)):
+	Add assertion.
+
+2019-04-08  Tom Tromey  <tom@tromey.com>
+
+	* valops.c (value_rtti_indirect_type): Replace throw_exception
+	with throw.
+	* tracefile-tfile.c (tfile_target_open): Replace throw_exception
+	with throw.
+	* thread.c (thr_try_catch_cmd): Replace throw_exception with
+	throw.
+	* target.c (target_translate_tls_address): Replace throw_exception
+	with throw.
+	* stack.c (frame_apply_command_count): Replace throw_exception
+	with throw.
+	* solib-spu.c (append_ocl_sos): Replace throw_exception with
+	throw.
+	* s390-tdep.c (s390_frame_unwind_cache): Replace throw_exception
+	with throw.
+	* rs6000-tdep.c (rs6000_frame_cache)
+	(rs6000_epilogue_frame_cache): Replace throw_exception with throw.
+	* remote.c: Replace throw_exception with throw.
+	* record-full.c (record_full_message, record_full_wait_1)
+	(record_full_restore): Replace throw_exception with throw.
+	* record-btrace.c:
+	(get_thread_current_frame_id, record_btrace_start_replaying)
+	(cmd_record_btrace_bts_start, cmd_record_btrace_pt_start)
+	(cmd_record_btrace_start): Replace throw_exception with throw.
+	* parse.c (parse_exp_in_context_1): Replace throw_exception with
+	throw.
+	* linux-nat.c (detach_one_lwp, linux_resume_one_lwp)
+	(resume_stopped_resumed_lwps): Replace throw_exception with throw.
+	* linespec.c:
+	(find_linespec_symbols): Replace throw_exception with throw.
+	* infrun.c (displaced_step_prepare, resume): Replace
+	throw_exception with throw.
+	* infcmd.c (post_create_inferior): Replace throw_exception with
+	throw.
+	* inf-loop.c (inferior_event_handler): Replace throw_exception
+	with throw.
+	* i386-tdep.c (i386_frame_cache, i386_epilogue_frame_cache)
+	(i386_sigtramp_frame_cache): Replace throw_exception with throw.
+	* frame.c (frame_unwind_pc, get_prev_frame_if_no_cycle)
+	(get_prev_frame_always, get_frame_pc_if_available)
+	(get_frame_address_in_block_if_available, get_frame_language):
+	Replace throw_exception with throw.
+	* frame-unwind.c (frame_unwind_try_unwinder): Replace
+	throw_exception with throw.
+	* eval.c (fetch_subexp_value, evaluate_var_value)
+	(evaluate_funcall, evaluate_subexp_standard): Replace
+	throw_exception with throw.
+	* dwarf2loc.c (call_site_find_chain)
+	(dwarf2_evaluate_loc_desc_full, dwarf2_locexpr_baton_eval):
+	Replace throw_exception with throw.
+	* dwarf2-frame.c (dwarf2_frame_cache): Replace throw_exception
+	with throw.
+	* darwin-nat.c (darwin_attach_pid): Replace throw_exception with
+	throw.
+	* cp-abi.c (baseclass_offset): Replace throw_exception with throw.
+	* completer.c (complete_line_internal): Replace throw_exception
+	with throw.
+	* compile/compile-object-run.c (compile_object_run): Replace
+	throw_exception with throw.
+	* cli/cli-script.c (process_next_line): Replace throw_exception
+	with throw.
+	* btrace.c (btrace_compute_ftrace_pt, btrace_compute_ftrace)
+	(btrace_enable, btrace_maint_update_pt_packets): Replace
+	throw_exception with throw.
+	* breakpoint.c (create_breakpoint, save_breakpoints): Replace
+	throw_exception with throw.
+	* break-catch-throw.c (re_set_exception_catchpoint): Replace
+	throw_exception with throw.
+	* amd64-tdep.c (amd64_frame_cache, amd64_sigtramp_frame_cache)
+	(amd64_epilogue_frame_cache): Replace throw_exception with throw.
+	* aarch64-tdep.c (aarch64_make_prologue_cache)
+	(aarch64_make_stub_cache): Replace throw_exception with throw.
+
+2019-04-08  Tom Tromey  <tom@tromey.com>
+
+	* common/common-exceptions.c (throw_exception): Rename from
+	throw_exception_cxx.  Remove old copy.  Make argument const.
+	(throw_it): Create and throw exception objects directly.
+	* common/common-exceptions.h (throw_exception): Make argument
+	const.
+	(struct gdb_exception_error): Add constructor.
+	(struct gdb_exception_quit): Add constructor.
+
+2019-04-08  Tom Tromey  <tom@tromey.com>
+
+	* common/common-exceptions.h (exception_rethrow): Don't declare.
+	(TRY_SJLJ): Update comment.
+	(TRY, CATCH, END_CATCH): Remove.
+	* common/common-exceptions.c (exception_rethrow): Remove.
+
+2019-04-08  Tom Tromey  <tom@tromey.com>
+
+	* common/common-exceptions.h (gdb_exception_RETURN_MASK_ALL):
+	Remove.
+	(gdb_exception_error): Rename from
+	gdb_exception_RETURN_MASK_ERROR.
+	(gdb_exception_quit): Rename from gdb_exception_RETURN_MASK_QUIT.
+	(gdb_quit_bad_alloc): Update.
+	* aarch64-tdep.c: Update.
+	* ada-lang.c: Update.
+	* ada-typeprint.c: Update.
+	* ada-valprint.c: Update.
+	* amd64-tdep.c: Update.
+	* arch-utils.c: Update.
+	* break-catch-throw.c: Update.
+	* breakpoint.c: Update.
+	* btrace.c: Update.
+	* c-varobj.c: Update.
+	* cli/cli-cmds.c: Update.
+	* cli/cli-interp.c: Update.
+	* cli/cli-script.c: Update.
+	* common/common-exceptions.c: Update.
+	* common/new-op.c: Update.
+	* common/selftest.c: Update.
+	* compile/compile-c-symbols.c: Update.
+	* compile/compile-cplus-symbols.c: Update.
+	* compile/compile-object-load.c: Update.
+	* compile/compile-object-run.c: Update.
+	* completer.c: Update.
+	* corelow.c: Update.
+	* cp-abi.c: Update.
+	* cp-support.c: Update.
+	* cp-valprint.c: Update.
+	* darwin-nat.c: Update.
+	* disasm-selftests.c: Update.
+	* dtrace-probe.c: Update.
+	* dwarf-index-cache.c: Update.
+	* dwarf-index-write.c: Update.
+	* dwarf2-frame-tailcall.c: Update.
+	* dwarf2-frame.c: Update.
+	* dwarf2loc.c: Update.
+	* dwarf2read.c: Update.
+	* eval.c: Update.
+	* event-loop.c: Update.
+	* event-top.c: Update.
+	* exec.c: Update.
+	* f-valprint.c: Update.
+	* fbsd-tdep.c: Update.
+	* frame-unwind.c: Update.
+	* frame.c: Update.
+	* gdbtypes.c: Update.
+	* gnu-v3-abi.c: Update.
+	* guile/guile-internal.h: Update.
+	* guile/scm-block.c: Update.
+	* guile/scm-breakpoint.c: Update.
+	* guile/scm-cmd.c: Update.
+	* guile/scm-disasm.c: Update.
+	* guile/scm-frame.c: Update.
+	* guile/scm-lazy-string.c: Update.
+	* guile/scm-math.c: Update.
+	* guile/scm-param.c: Update.
+	* guile/scm-ports.c: Update.
+	* guile/scm-pretty-print.c: Update.
+	* guile/scm-symbol.c: Update.
+	* guile/scm-symtab.c: Update.
+	* guile/scm-type.c: Update.
+	* guile/scm-value.c: Update.
+	* i386-linux-tdep.c: Update.
+	* i386-tdep.c: Update.
+	* inf-loop.c: Update.
+	* infcall.c: Update.
+	* infcmd.c: Update.
+	* infrun.c: Update.
+	* jit.c: Update.
+	* language.c: Update.
+	* linespec.c: Update.
+	* linux-fork.c: Update.
+	* linux-nat.c: Update.
+	* linux-tdep.c: Update.
+	* linux-thread-db.c: Update.
+	* main.c: Update.
+	* mi/mi-cmd-break.c: Update.
+	* mi/mi-cmd-stack.c: Update.
+	* mi/mi-interp.c: Update.
+	* mi/mi-main.c: Update.
+	* objc-lang.c: Update.
+	* p-valprint.c: Update.
+	* parse.c: Update.
+	* ppc-linux-tdep.c: Update.
+	* printcmd.c: Update.
+	* python/py-arch.c: Update.
+	* python/py-breakpoint.c: Update.
+	* python/py-cmd.c: Update.
+	* python/py-finishbreakpoint.c: Update.
+	* python/py-frame.c: Update.
+	* python/py-framefilter.c: Update.
+	* python/py-gdb-readline.c: Update.
+	* python/py-inferior.c: Update.
+	* python/py-infthread.c: Update.
+	* python/py-lazy-string.c: Update.
+	* python/py-linetable.c: Update.
+	* python/py-objfile.c: Update.
+	* python/py-param.c: Update.
+	* python/py-prettyprint.c: Update.
+	* python/py-progspace.c: Update.
+	* python/py-record-btrace.c: Update.
+	* python/py-record.c: Update.
+	* python/py-symbol.c: Update.
+	* python/py-type.c: Update.
+	* python/py-unwind.c: Update.
+	* python/py-utils.c: Update.
+	* python/py-value.c: Update.
+	* python/python.c: Update.
+	* record-btrace.c: Update.
+	* record-full.c: Update.
+	* remote-fileio.c: Update.
+	* remote.c: Update.
+	* riscv-tdep.c: Update.
+	* rs6000-aix-tdep.c: Update.
+	* rs6000-tdep.c: Update.
+	* rust-exp.y: Update.
+	* rust-lang.c: Update.
+	* s390-tdep.c: Update.
+	* selftest-arch.c: Update.
+	* solib-dsbt.c: Update.
+	* solib-frv.c: Update.
+	* solib-spu.c: Update.
+	* solib-svr4.c: Update.
+	* solib.c: Update.
+	* sparc64-linux-tdep.c: Update.
+	* stack.c: Update.
+	* symfile-mem.c: Update.
+	* symmisc.c: Update.
+	* target.c: Update.
+	* thread.c: Update.
+	* top.c: Update.
+	* tracefile-tfile.c: Update.
+	* tui/tui.c: Update.
+	* typeprint.c: Update.
+	* unittests/cli-utils-selftests.c: Update.
+	* unittests/parse-connection-spec-selftests.c: Update.
+	* valops.c: Update.
+	* valprint.c: Update.
+	* value.c: Update.
+	* varobj.c: Update.
+	* windows-nat.c: Update.
+	* x86-linux-nat.c: Update.
+	* xml-support.c: Update.
+
+2019-04-08  Tom Tromey  <tom@tromey.com>
+
+	* xml-support.c: Use C++ exception handling.
+	* x86-linux-nat.c: Use C++ exception handling.
+	* windows-nat.c: Use C++ exception handling.
+	* varobj.c: Use C++ exception handling.
+	* value.c: Use C++ exception handling.
+	* valprint.c: Use C++ exception handling.
+	* valops.c: Use C++ exception handling.
+	* unittests/parse-connection-spec-selftests.c: Use C++ exception
+	handling.
+	* unittests/cli-utils-selftests.c: Use C++ exception handling.
+	* typeprint.c: Use C++ exception handling.
+	* tui/tui.c: Use C++ exception handling.
+	* tracefile-tfile.c: Use C++ exception handling.
+	* top.c: Use C++ exception handling.
+	* thread.c: Use C++ exception handling.
+	* target.c: Use C++ exception handling.
+	* symmisc.c: Use C++ exception handling.
+	* symfile-mem.c: Use C++ exception handling.
+	* stack.c: Use C++ exception handling.
+	* sparc64-linux-tdep.c: Use C++ exception handling.
+	* solib.c: Use C++ exception handling.
+	* solib-svr4.c: Use C++ exception handling.
+	* solib-spu.c: Use C++ exception handling.
+	* solib-frv.c: Use C++ exception handling.
+	* solib-dsbt.c: Use C++ exception handling.
+	* selftest-arch.c: Use C++ exception handling.
+	* s390-tdep.c: Use C++ exception handling.
+	* rust-lang.c: Use C++ exception handling.
+	* rust-exp.y: Use C++ exception handling.
+	* rs6000-tdep.c: Use C++ exception handling.
+	* rs6000-aix-tdep.c: Use C++ exception handling.
+	* riscv-tdep.c: Use C++ exception handling.
+	* remote.c: Use C++ exception handling.
+	* remote-fileio.c: Use C++ exception handling.
+	* record-full.c: Use C++ exception handling.
+	* record-btrace.c: Use C++ exception handling.
+	* python/python.c: Use C++ exception handling.
+	* python/py-value.c: Use C++ exception handling.
+	* python/py-utils.c: Use C++ exception handling.
+	* python/py-unwind.c: Use C++ exception handling.
+	* python/py-type.c: Use C++ exception handling.
+	* python/py-symbol.c: Use C++ exception handling.
+	* python/py-record.c: Use C++ exception handling.
+	* python/py-record-btrace.c: Use C++ exception handling.
+	* python/py-progspace.c: Use C++ exception handling.
+	* python/py-prettyprint.c: Use C++ exception handling.
+	* python/py-param.c: Use C++ exception handling.
+	* python/py-objfile.c: Use C++ exception handling.
+	* python/py-linetable.c: Use C++ exception handling.
+	* python/py-lazy-string.c: Use C++ exception handling.
+	* python/py-infthread.c: Use C++ exception handling.
+	* python/py-inferior.c: Use C++ exception handling.
+	* python/py-gdb-readline.c: Use C++ exception handling.
+	* python/py-framefilter.c: Use C++ exception handling.
+	* python/py-frame.c: Use C++ exception handling.
+	* python/py-finishbreakpoint.c: Use C++ exception handling.
+	* python/py-cmd.c: Use C++ exception handling.
+	* python/py-breakpoint.c: Use C++ exception handling.
+	* python/py-arch.c: Use C++ exception handling.
+	* printcmd.c: Use C++ exception handling.
+	* ppc-linux-tdep.c: Use C++ exception handling.
+	* parse.c: Use C++ exception handling.
+	* p-valprint.c: Use C++ exception handling.
+	* objc-lang.c: Use C++ exception handling.
+	* mi/mi-main.c: Use C++ exception handling.
+	* mi/mi-interp.c: Use C++ exception handling.
+	* mi/mi-cmd-stack.c: Use C++ exception handling.
+	* mi/mi-cmd-break.c: Use C++ exception handling.
+	* main.c: Use C++ exception handling.
+	* linux-thread-db.c: Use C++ exception handling.
+	* linux-tdep.c: Use C++ exception handling.
+	* linux-nat.c: Use C++ exception handling.
+	* linux-fork.c: Use C++ exception handling.
+	* linespec.c: Use C++ exception handling.
+	* language.c: Use C++ exception handling.
+	* jit.c: Use C++ exception handling.
+	* infrun.c: Use C++ exception handling.
+	* infcmd.c: Use C++ exception handling.
+	* infcall.c: Use C++ exception handling.
+	* inf-loop.c: Use C++ exception handling.
+	* i386-tdep.c: Use C++ exception handling.
+	* i386-linux-tdep.c: Use C++ exception handling.
+	* guile/scm-value.c: Use C++ exception handling.
+	* guile/scm-type.c: Use C++ exception handling.
+	* guile/scm-symtab.c: Use C++ exception handling.
+	* guile/scm-symbol.c: Use C++ exception handling.
+	* guile/scm-pretty-print.c: Use C++ exception handling.
+	* guile/scm-ports.c: Use C++ exception handling.
+	* guile/scm-param.c: Use C++ exception handling.
+	* guile/scm-math.c: Use C++ exception handling.
+	* guile/scm-lazy-string.c: Use C++ exception handling.
+	* guile/scm-frame.c: Use C++ exception handling.
+	* guile/scm-disasm.c: Use C++ exception handling.
+	* guile/scm-cmd.c: Use C++ exception handling.
+	* guile/scm-breakpoint.c: Use C++ exception handling.
+	* guile/scm-block.c: Use C++ exception handling.
+	* guile/guile-internal.h: Use C++ exception handling.
+	* gnu-v3-abi.c: Use C++ exception handling.
+	* gdbtypes.c: Use C++ exception handling.
+	* frame.c: Use C++ exception handling.
+	* frame-unwind.c: Use C++ exception handling.
+	* fbsd-tdep.c: Use C++ exception handling.
+	* f-valprint.c: Use C++ exception handling.
+	* exec.c: Use C++ exception handling.
+	* event-top.c: Use C++ exception handling.
+	* event-loop.c: Use C++ exception handling.
+	* eval.c: Use C++ exception handling.
+	* dwarf2read.c: Use C++ exception handling.
+	* dwarf2loc.c: Use C++ exception handling.
+	* dwarf2-frame.c: Use C++ exception handling.
+	* dwarf2-frame-tailcall.c: Use C++ exception handling.
+	* dwarf-index-write.c: Use C++ exception handling.
+	* dwarf-index-cache.c: Use C++ exception handling.
+	* dtrace-probe.c: Use C++ exception handling.
+	* disasm-selftests.c: Use C++ exception handling.
+	* darwin-nat.c: Use C++ exception handling.
+	* cp-valprint.c: Use C++ exception handling.
+	* cp-support.c: Use C++ exception handling.
+	* cp-abi.c: Use C++ exception handling.
+	* corelow.c: Use C++ exception handling.
+	* completer.c: Use C++ exception handling.
+	* compile/compile-object-run.c: Use C++ exception handling.
+	* compile/compile-object-load.c: Use C++ exception handling.
+	* compile/compile-cplus-symbols.c: Use C++ exception handling.
+	* compile/compile-c-symbols.c: Use C++ exception handling.
+	* common/selftest.c: Use C++ exception handling.
+	* common/new-op.c: Use C++ exception handling.
+	* cli/cli-script.c: Use C++ exception handling.
+	* cli/cli-interp.c: Use C++ exception handling.
+	* cli/cli-cmds.c: Use C++ exception handling.
+	* c-varobj.c: Use C++ exception handling.
+	* btrace.c: Use C++ exception handling.
+	* breakpoint.c: Use C++ exception handling.
+	* break-catch-throw.c: Use C++ exception handling.
+	* arch-utils.c: Use C++ exception handling.
+	* amd64-tdep.c: Use C++ exception handling.
+	* ada-valprint.c: Use C++ exception handling.
+	* ada-typeprint.c: Use C++ exception handling.
+	* ada-lang.c: Use C++ exception handling.
+	* aarch64-tdep.c: Use C++ exception handling.
+
+2019-04-08  Tom Tromey  <tom@tromey.com>
+
+	* xml-support.c (gdb_xml_parser::parse): Update.
+	* x86-linux-nat.c (x86_linux_nat_target::enable_btrace): Update.
+	* value.c (show_convenience): Update.
+	* unittests/cli-utils-selftests.c (test_number_or_range_parser)
+	(test_parse_flags_qcs): Update.
+	* thread.c (thr_try_catch_cmd): Update.
+	* target.c (target_translate_tls_address): Update.
+	* stack.c (print_frame_arg, read_frame_local, read_frame_arg)
+	(info_frame_command_core, frame_apply_command_count): Update.
+	* rust-exp.y (rust_lex_exception_test): Update.
+	* riscv-tdep.c (riscv_print_one_register_info): Update.
+	* remote.c (remote_target::enable_btrace): Update.
+	* record-btrace.c (record_btrace_enable_warn): Update.
+	* python/py-utils.c (gdbpy_convert_exception): Update.
+	* printcmd.c (do_one_display, print_variable_and_value): Update.
+	* mi/mi-main.c (mi_print_exception): Update.
+	* mi/mi-interp.c (mi_cmd_interpreter_exec): Use SCOPE_EXIT.
+	* mi/mi-cmd-stack.c (list_arg_or_local): Update.
+	* linux-nat.c (linux_nat_target::attach): Update.
+	* linux-fork.c (class scoped_switch_fork_info): Update.
+	* infrun.c (displaced_step_prepare): Update.
+	* infcall.c (call_function_by_hand_dummy): Update.
+	* guile/scm-exception.c (gdbscm_scm_from_gdb_exception): Update.
+	* gnu-v3-abi.c (print_one_vtable): Update.
+	* frame.c (get_prev_frame_always): Update.
+	* f-valprint.c (info_common_command_for_block): Update.
+	* exec.c (try_open_exec_file): Update.
+	* exceptions.c (print_exception, exception_print)
+	(exception_fprintf, exception_print_same): Update.
+	* dwarf2-frame.c (dwarf2_build_frame_info): Update.
+	* dwarf-index-cache.c (index_cache::store)
+	(index_cache::lookup_gdb_index): Update.
+	* darwin-nat.c (maybe_cache_shell): Update.
+	* cp-valprint.c (cp_print_value_fields): Update.
+	* compile/compile-cplus-symbols.c (gcc_cplus_convert_symbol)
+	(gcc_cplus_symbol_address): Update.
+	* compile/compile-c-symbols.c (gcc_convert_symbol)
+	(gcc_symbol_address, generate_c_for_for_one_variable): Update.
+	* common/selftest.c: Update.
+	* common/common-exceptions.h (struct gdb_exception) <message>: Now
+	a std::string.
+	(exception_try_scope_entry, exception_try_scope_exit): Don't
+	declare.
+	(struct exception_try_scope): Remove.
+	(TRY): Don't use exception_try_scope.
+	(struct gdb_exception): Add constructor, operator=.
+	<what>: New method.
+	(struct gdb_exception_RETURN_MASK_ALL)
+	(struct gdb_exception_RETURN_MASK_ERROR)
+	(struct gdb_exception_RETURN_MASK_QUIT): Add constructor.
+	(struct gdb_quit_bad_alloc): Update.
+	* common/common-exceptions.c (exception_none): Change
+	initializer.
+	(struct catcher) <state, exception>: Initialize inline.
+	<prev>: Remove member.
+	(current_catcher): Remove.
+	(catchers): New global.
+	(exceptions_state_mc_init): Simplify.
+	(catcher_pop): Remove.
+	(exceptions_state_mc, exceptions_state_mc_catch): Update.
+	(try_scope_depth, exception_try_scope_entry)
+	(exception_try_scope_exit): Remove.
+	(throw_exception_sjlj): Update.
+	(exception_messages, exception_messages_size): Remove.
+	(throw_it): Simplify.
+	(gdb_exception_sliced_copy): Remove.
+	(throw_exception_cxx): Update.
+	* cli/cli-script.c (script_from_file): Update.
+	* breakpoint.c (insert_bp_location, update_breakpoint_locations):
+	Update.
+	* ada-valprint.c (ada_val_print): Update.
+	* ada-lang.c (ada_to_fixed_type_1, ada_exception_name_addr)
+	(create_excep_cond_exprs): Update.
+
+2019-04-08  Tom Tromey  <tom@tromey.com>
+
+	* common/common-exceptions.h (GDB_XCPT_SJMP, GDB_XCPT_TRY)
+	(GDB_XCPT_RAW_TRY, GDB_XCPT): Remove.
+	(TRY, CATCH, END_CATCH): Remove some definitions.
+	* common/common-exceptions.c: Don't use GDB_XCPT.
+	(catcher_list_size): Remove.
+	(throw_exception, throw_it): Simplify.
+
+2019-04-05  Tom Tromey  <tom@tromey.com>
+
+	Revert the header-sorting patch.
+	* ft32-tdep.c: Revert.
+	* frv-tdep.c: Revert.
+	* frv-linux-tdep.c: Revert.
+	* frame.c: Revert.
+	* frame-unwind.c: Revert.
+	* frame-base.c: Revert.
+	* fork-child.c: Revert.
+	* findvar.c: Revert.
+	* findcmd.c: Revert.
+	* filesystem.c: Revert.
+	* filename-seen-cache.h: Revert.
+	* filename-seen-cache.c: Revert.
+	* fbsd-tdep.c: Revert.
+	* fbsd-nat.h: Revert.
+	* fbsd-nat.c: Revert.
+	* f-valprint.c: Revert.
+	* f-typeprint.c: Revert.
+	* f-lang.c: Revert.
+	* extension.h: Revert.
+	* extension.c: Revert.
+	* extension-priv.h: Revert.
+	* expprint.c: Revert.
+	* exec.h: Revert.
+	* exec.c: Revert.
+	* exceptions.c: Revert.
+	* event-top.c: Revert.
+	* event-loop.c: Revert.
+	* eval.c: Revert.
+	* elfread.c: Revert.
+	* dwarf2read.h: Revert.
+	* dwarf2read.c: Revert.
+	* dwarf2loc.c: Revert.
+	* dwarf2expr.h: Revert.
+	* dwarf2expr.c: Revert.
+	* dwarf2-frame.c: Revert.
+	* dwarf2-frame-tailcall.c: Revert.
+	* dwarf-index-write.h: Revert.
+	* dwarf-index-write.c: Revert.
+	* dwarf-index-common.c: Revert.
+	* dwarf-index-cache.h: Revert.
+	* dwarf-index-cache.c: Revert.
+	* dummy-frame.c: Revert.
+	* dtrace-probe.c: Revert.
+	* disasm.h: Revert.
+	* disasm.c: Revert.
+	* disasm-selftests.c: Revert.
+	* dictionary.c: Revert.
+	* dicos-tdep.c: Revert.
+	* demangle.c: Revert.
+	* dcache.h: Revert.
+	* dcache.c: Revert.
+	* darwin-nat.h: Revert.
+	* darwin-nat.c: Revert.
+	* darwin-nat-info.c: Revert.
+	* d-valprint.c: Revert.
+	* d-namespace.c: Revert.
+	* d-lang.c: Revert.
+	* ctf.c: Revert.
+	* csky-tdep.c: Revert.
+	* csky-linux-tdep.c: Revert.
+	* cris-tdep.c: Revert.
+	* cris-linux-tdep.c: Revert.
+	* cp-valprint.c: Revert.
+	* cp-support.c: Revert.
+	* cp-namespace.c: Revert.
+	* cp-abi.c: Revert.
+	* corelow.c: Revert.
+	* corefile.c: Revert.
+	* continuations.c: Revert.
+	* completer.h: Revert.
+	* completer.c: Revert.
+	* complaints.c: Revert.
+	* coffread.c: Revert.
+	* coff-pe-read.c: Revert.
+	* cli-out.h: Revert.
+	* cli-out.c: Revert.
+	* charset.c: Revert.
+	* c-varobj.c: Revert.
+	* c-valprint.c: Revert.
+	* c-typeprint.c: Revert.
+	* c-lang.c: Revert.
+	* buildsym.c: Revert.
+	* buildsym-legacy.c: Revert.
+	* build-id.h: Revert.
+	* build-id.c: Revert.
+	* btrace.c: Revert.
+	* bsd-uthread.c: Revert.
+	* breakpoint.h: Revert.
+	* breakpoint.c: Revert.
+	* break-catch-throw.c: Revert.
+	* break-catch-syscall.c: Revert.
+	* break-catch-sig.c: Revert.
+	* blockframe.c: Revert.
+	* block.c: Revert.
+	* bfin-tdep.c: Revert.
+	* bfin-linux-tdep.c: Revert.
+	* bfd-target.c: Revert.
+	* bcache.c: Revert.
+	* ax-general.c: Revert.
+	* ax-gdb.h: Revert.
+	* ax-gdb.c: Revert.
+	* avr-tdep.c: Revert.
+	* auxv.c: Revert.
+	* auto-load.c: Revert.
+	* arm-wince-tdep.c: Revert.
+	* arm-tdep.c: Revert.
+	* arm-symbian-tdep.c: Revert.
+	* arm-pikeos-tdep.c: Revert.
+	* arm-obsd-tdep.c: Revert.
+	* arm-nbsd-tdep.c: Revert.
+	* arm-nbsd-nat.c: Revert.
+	* arm-linux-tdep.c: Revert.
+	* arm-linux-nat.c: Revert.
+	* arm-fbsd-tdep.c: Revert.
+	* arm-fbsd-nat.c: Revert.
+	* arm-bsd-tdep.c: Revert.
+	* arch-utils.c: Revert.
+	* arc-tdep.c: Revert.
+	* arc-newlib-tdep.c: Revert.
+	* annotate.h: Revert.
+	* annotate.c: Revert.
+	* amd64-windows-tdep.c: Revert.
+	* amd64-windows-nat.c: Revert.
+	* amd64-tdep.c: Revert.
+	* amd64-sol2-tdep.c: Revert.
+	* amd64-obsd-tdep.c: Revert.
+	* amd64-obsd-nat.c: Revert.
+	* amd64-nbsd-tdep.c: Revert.
+	* amd64-nbsd-nat.c: Revert.
+	* amd64-nat.c: Revert.
+	* amd64-linux-tdep.c: Revert.
+	* amd64-linux-nat.c: Revert.
+	* amd64-fbsd-tdep.c: Revert.
+	* amd64-fbsd-nat.c: Revert.
+	* amd64-dicos-tdep.c: Revert.
+	* amd64-darwin-tdep.c: Revert.
+	* amd64-bsd-nat.c: Revert.
+	* alpha-tdep.c: Revert.
+	* alpha-obsd-tdep.c: Revert.
+	* alpha-nbsd-tdep.c: Revert.
+	* alpha-mdebug-tdep.c: Revert.
+	* alpha-linux-tdep.c: Revert.
+	* alpha-linux-nat.c: Revert.
+	* alpha-bsd-tdep.c: Revert.
+	* alpha-bsd-nat.c: Revert.
+	* aix-thread.c: Revert.
+	* agent.c: Revert.
+	* addrmap.c: Revert.
+	* ada-varobj.c: Revert.
+	* ada-valprint.c: Revert.
+	* ada-typeprint.c: Revert.
+	* ada-tasks.c: Revert.
+	* ada-lang.c: Revert.
+	* aarch64-tdep.c: Revert.
+	* aarch64-ravenscar-thread.c: Revert.
+	* aarch64-newlib-tdep.c: Revert.
+	* aarch64-linux-tdep.c: Revert.
+	* aarch64-linux-nat.c: Revert.
+	* aarch64-fbsd-tdep.c: Revert.
+	* aarch64-fbsd-nat.c: Revert.
+	* aarch32-linux-nat.c: Revert.
+
+2019-04-05  Tom Tromey  <tom@tromey.com>
+
+	* ft32-tdep.c: Sort headers.
+	* frv-tdep.c: Sort headers.
+	* frv-linux-tdep.c: Sort headers.
+	* frame.c: Sort headers.
+	* frame-unwind.c: Sort headers.
+	* frame-base.c: Sort headers.
+	* fork-child.c: Sort headers.
+	* findvar.c: Sort headers.
+	* findcmd.c: Sort headers.
+	* filesystem.c: Sort headers.
+	* filename-seen-cache.h: Sort headers.
+	* filename-seen-cache.c: Sort headers.
+	* fbsd-tdep.c: Sort headers.
+	* fbsd-nat.h: Sort headers.
+	* fbsd-nat.c: Sort headers.
+	* f-valprint.c: Sort headers.
+	* f-typeprint.c: Sort headers.
+	* f-lang.c: Sort headers.
+	* extension.h: Sort headers.
+	* extension.c: Sort headers.
+	* extension-priv.h: Sort headers.
+	* expprint.c: Sort headers.
+	* exec.h: Sort headers.
+	* exec.c: Sort headers.
+	* exceptions.c: Sort headers.
+	* event-top.c: Sort headers.
+	* event-loop.c: Sort headers.
+	* eval.c: Sort headers.
+	* elfread.c: Sort headers.
+	* dwarf2read.h: Sort headers.
+	* dwarf2read.c: Sort headers.
+	* dwarf2loc.c: Sort headers.
+	* dwarf2expr.h: Sort headers.
+	* dwarf2expr.c: Sort headers.
+	* dwarf2-frame.c: Sort headers.
+	* dwarf2-frame-tailcall.c: Sort headers.
+	* dwarf-index-write.h: Sort headers.
+	* dwarf-index-write.c: Sort headers.
+	* dwarf-index-common.c: Sort headers.
+	* dwarf-index-cache.h: Sort headers.
+	* dwarf-index-cache.c: Sort headers.
+	* dummy-frame.c: Sort headers.
+	* dtrace-probe.c: Sort headers.
+	* disasm.h: Sort headers.
+	* disasm.c: Sort headers.
+	* disasm-selftests.c: Sort headers.
+	* dictionary.c: Sort headers.
+	* dicos-tdep.c: Sort headers.
+	* demangle.c: Sort headers.
+	* dcache.h: Sort headers.
+	* dcache.c: Sort headers.
+	* darwin-nat.h: Sort headers.
+	* darwin-nat.c: Sort headers.
+	* darwin-nat-info.c: Sort headers.
+	* d-valprint.c: Sort headers.
+	* d-namespace.c: Sort headers.
+	* d-lang.c: Sort headers.
+	* ctf.c: Sort headers.
+	* csky-tdep.c: Sort headers.
+	* csky-linux-tdep.c: Sort headers.
+	* cris-tdep.c: Sort headers.
+	* cris-linux-tdep.c: Sort headers.
+	* cp-valprint.c: Sort headers.
+	* cp-support.c: Sort headers.
+	* cp-namespace.c: Sort headers.
+	* cp-abi.c: Sort headers.
+	* corelow.c: Sort headers.
+	* corefile.c: Sort headers.
+	* continuations.c: Sort headers.
+	* completer.h: Sort headers.
+	* completer.c: Sort headers.
+	* complaints.c: Sort headers.
+	* coffread.c: Sort headers.
+	* coff-pe-read.c: Sort headers.
+	* cli-out.h: Sort headers.
+	* cli-out.c: Sort headers.
+	* charset.c: Sort headers.
+	* c-varobj.c: Sort headers.
+	* c-valprint.c: Sort headers.
+	* c-typeprint.c: Sort headers.
+	* c-lang.c: Sort headers.
+	* buildsym.c: Sort headers.
+	* buildsym-legacy.c: Sort headers.
+	* build-id.h: Sort headers.
+	* build-id.c: Sort headers.
+	* btrace.c: Sort headers.
+	* bsd-uthread.c: Sort headers.
+	* breakpoint.h: Sort headers.
+	* breakpoint.c: Sort headers.
+	* break-catch-throw.c: Sort headers.
+	* break-catch-syscall.c: Sort headers.
+	* break-catch-sig.c: Sort headers.
+	* blockframe.c: Sort headers.
+	* block.c: Sort headers.
+	* bfin-tdep.c: Sort headers.
+	* bfin-linux-tdep.c: Sort headers.
+	* bfd-target.c: Sort headers.
+	* bcache.c: Sort headers.
+	* ax-general.c: Sort headers.
+	* ax-gdb.h: Sort headers.
+	* ax-gdb.c: Sort headers.
+	* avr-tdep.c: Sort headers.
+	* auxv.c: Sort headers.
+	* auto-load.c: Sort headers.
+	* arm-wince-tdep.c: Sort headers.
+	* arm-tdep.c: Sort headers.
+	* arm-symbian-tdep.c: Sort headers.
+	* arm-pikeos-tdep.c: Sort headers.
+	* arm-obsd-tdep.c: Sort headers.
+	* arm-nbsd-tdep.c: Sort headers.
+	* arm-nbsd-nat.c: Sort headers.
+	* arm-linux-tdep.c: Sort headers.
+	* arm-linux-nat.c: Sort headers.
+	* arm-fbsd-tdep.c: Sort headers.
+	* arm-fbsd-nat.c: Sort headers.
+	* arm-bsd-tdep.c: Sort headers.
+	* arch-utils.c: Sort headers.
+	* arc-tdep.c: Sort headers.
+	* arc-newlib-tdep.c: Sort headers.
+	* annotate.h: Sort headers.
+	* annotate.c: Sort headers.
+	* amd64-windows-tdep.c: Sort headers.
+	* amd64-windows-nat.c: Sort headers.
+	* amd64-tdep.c: Sort headers.
+	* amd64-sol2-tdep.c: Sort headers.
+	* amd64-obsd-tdep.c: Sort headers.
+	* amd64-obsd-nat.c: Sort headers.
+	* amd64-nbsd-tdep.c: Sort headers.
+	* amd64-nbsd-nat.c: Sort headers.
+	* amd64-nat.c: Sort headers.
+	* amd64-linux-tdep.c: Sort headers.
+	* amd64-linux-nat.c: Sort headers.
+	* amd64-fbsd-tdep.c: Sort headers.
+	* amd64-fbsd-nat.c: Sort headers.
+	* amd64-dicos-tdep.c: Sort headers.
+	* amd64-darwin-tdep.c: Sort headers.
+	* amd64-bsd-nat.c: Sort headers.
+	* alpha-tdep.c: Sort headers.
+	* alpha-obsd-tdep.c: Sort headers.
+	* alpha-nbsd-tdep.c: Sort headers.
+	* alpha-mdebug-tdep.c: Sort headers.
+	* alpha-linux-tdep.c: Sort headers.
+	* alpha-linux-nat.c: Sort headers.
+	* alpha-bsd-tdep.c: Sort headers.
+	* alpha-bsd-nat.c: Sort headers.
+	* aix-thread.c: Sort headers.
+	* agent.c: Sort headers.
+	* addrmap.c: Sort headers.
+	* ada-varobj.c: Sort headers.
+	* ada-valprint.c: Sort headers.
+	* ada-typeprint.c: Sort headers.
+	* ada-tasks.c: Sort headers.
+	* ada-lang.c: Sort headers.
+	* aarch64-tdep.c: Sort headers.
+	* aarch64-ravenscar-thread.c: Sort headers.
+	* aarch64-newlib-tdep.c: Sort headers.
+	* aarch64-linux-tdep.c: Sort headers.
+	* aarch64-linux-nat.c: Sort headers.
+	* aarch64-fbsd-tdep.c: Sort headers.
+	* aarch64-fbsd-nat.c: Sort headers.
+	* aarch32-linux-nat.c: Sort headers.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (varobj_create): Update.
+	* rust-exp.y (struct rust_parser) <update_innermost_block,
+	lookup_symbol>: New methods.
+	(rust_parser::update_innermost_block, rust_parser::lookup_symbol):
+	Rename.
+	(rust_parser::rust_lookup_type)
+	(rust_parser::convert_ast_to_expression, rust_lex_tests): Update.
+	* printcmd.c (display_command, do_one_display): Update.
+	* parser-defs.h (struct parser_state) <parser_state>: Add
+	"tracker" parameter.
+	(block_tracker): New member.
+	(class innermost_block_tracker) <innermost_block_tracker>: Add
+	"types" parameter.
+	<reset>: Remove method.
+	(innermost_block): Don't declare.
+	(null_post_parser): Update.
+	* parse.c (innermost_block): Remove global.
+	(write_dollar_variable): Update.
+	(parse_exp_1, parse_exp_in_context): Add "tracker" parameter.
+	Remove "tracker_types" parameter.
+	(parse_expression): Add "tracker" parameter.
+	(parse_expression_for_completion): Update.
+	(null_post_parser): Add "tracker" parameter.
+	* p-exp.y: Update rules.
+	* m2-exp.y: Update rules.
+	* language.h (struct language_defn) <la_post_parser>: Add
+	"tracker" parameter.
+	* go-exp.y: Update rules.
+	* f-exp.y: Update rules.
+	* expression.h (parse_expression, parse_exp_1): Add "tracker"
+	parameter.
+	* d-exp.y: Update rules.
+	* c-exp.y: Update rules.
+	* breakpoint.c (set_breakpoint_condition): Create an
+	innermost_block_tracker.
+	(watch_command_1): Likewise.
+	* ada-lang.c (resolve): Add "tracker" parameter.
+	(resolve_subexp): Likewise.
+	* ada-exp.y (write_var_from_sym): Update.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* type-stack.h: New file.
+	* type-stack.c: New file.
+	* parser-defs.h (enum type_pieces, union type_stack_elt): Move to
+	type-stack.h.
+	(insert_into_type_stack, insert_type, push_type, push_type_int)
+	(insert_type_address_space, pop_type, pop_type_int)
+	(pop_typelist, pop_type_stack, append_type_stack)
+	(push_type_stack, get_type_stack, push_typelist)
+	(follow_type_instance_flags, follow_types): Don't declare.
+	* parse.c (type_stack): Remove global.
+	(parse_exp_in_context): Update.
+	(insert_into_type_stack, insert_type, push_type, push_type_int)
+	(insert_type_address_space, pop_type, pop_type_int)
+	(pop_typelist, pop_type_stack, append_type_stack)
+	(push_type_stack, get_type_stack, push_typelist)
+	(follow_type_instance_flags, follow_types): Remove (moved to
+	type-stack.c).
+	* f-exp.y (type_stack): New global.
+	Update rules.
+	(push_kind_type, f_parse): Update.
+	* d-exp.y (type_stack): New global.
+	Update rules.
+	(d_parse): Update.
+	* c-exp.y (struct c_parse_state) <type_stack>: New member.
+	Update rules.
+	* Makefile.in (COMMON_SFILES): Add type-stack.c.
+	(HFILES_NO_SRCDIR): Add type-stack.h.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* rust-exp.y (rust_parser::lex_identifier, rustyylex)
+	(rust_parser::convert_ast_to_expression, rust_parse)
+	(rust_lex_test_completion, rust_lex_tests): Update.
+	* parser-defs.h (struct expr_completion_state): New.
+	(struct parser_state) <parser_state>: Add completion parameter.
+	<mark_struct_expression, mark_completion_tag>: New methods.
+	<parse_completion, m_completion_state>: New members.
+	(prefixify_expression, null_post_parser): Update.
+	(mark_struct_expression, mark_completion_tag): Don't declare.
+	* parse.c (parse_completion, expout_last_struct)
+	(expout_tag_completion_type, expout_completion_name): Remove
+	globals.
+	(parser_state::mark_struct_expression)
+	(parser_state::mark_completion_tag): Now methods.
+	(prefixify_expression): Add last_struct parameter.
+	(prefixify_subexp): Likewise.
+	(parse_exp_1): Update.
+	(parse_exp_in_context): Add cstate parameter.  Update.
+	(parse_expression_for_completion): Create an
+	expr_completion_state.
+	(null_post_parser): Add "completion" parameter.
+	* p-exp.y: Update rules.
+	(yylex): Update.
+	* language.h (struct language_defn) <la_post_parser>: Add
+	"completing" parameter.
+	* go-exp.y: Update rules.
+	(lex_one_token): Update.
+	* expression.h (parse_completion): Don't declare.
+	* d-exp.y: Update rules.
+	(lex_one_token): Update rules.
+	* c-exp.y: Update rules.
+	(lex_one_token): Update.
+	* ada-lang.c (resolve): Add "parse_completion" parameter.
+	(resolve_subexp): Likewise.
+	(ada_resolve_function): Likewise.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* parser-defs.h (struct parser_state) <start_arglist,
+	end_arglist>: New methods.
+	<arglist_len, m_funcall_chain>: New members.
+	(arglist_len, start_arglist, end_arglist): Don't declare.
+	* parse.c (arglist_len, funcall_chain): Remove global.
+	(start_arglist, end_arglist): Remove functions.
+	(parse_exp_in_context): Update.
+	* p-exp.y: Update rules.
+	* m2-exp.y: Update rules.
+	* go-exp.y: Update rules.
+	* f-exp.y: Update rules.
+	* d-exp.y: Update rules.
+	* c-exp.y: Update rules.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* rust-exp.y (struct rust_parser) <lex_hex, lex_escape,
+	lex_operator, push_back>: New methods.
+	Update all rules.
+	(rust_parser::lex_hex, lex_escape): Rename and update.
+	(rust_parser::lex_string, rust_parser::lex_identifier): Update.
+	(rust_parser::lex_operator): Rename and update.
+	(rust_parser::lex_number, rustyylex, rustyyerror)
+	(rust_lex_test_init, rust_lex_test_sequence)
+	(rust_lex_test_push_back, rust_lex_tests): Update.
+	* parser-defs.h (struct parser_state) <parser_state>: Add "input"
+	parameter.
+	<lexptr, prev_lexptr>: New members.
+	(lexptr, prev_lexptr): Don't declare.
+	* parse.c (lexptr, prev_lexptr): Remove globals.
+	(parse_exp_in_context): Update.
+	* p-exp.y (yylex, yyerror): Update.
+	* m2-exp.y (parse_number, yylex, yyerror): Update.
+	* go-exp.y (lex_one_token, yyerror): Update.
+	* f-exp.y (match_string_literal, yylex, yyerror): Update.
+	* d-exp.y (lex_one_token, yyerror): Update.
+	* c-exp.y (scan_macro_expansion, finished_macro_expansion)
+	(lex_one_token, yyerror): Update.
+	* ada-lex.l (YY_INPUT): Update.
+	(rewind_to_char): Update.
+	* ada-exp.y (yyerror): Update.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* rust-exp.y (rustyylex, rust_lex_tests): Update.
+	* parser-defs.h (struct parser_state) <parser_state>: Add new
+	parameter.
+	<comma_terminates>: New member.
+	(comma_terminates): Don't declare global.
+	* parse.c (comma_terminates): Remove global.
+	(parse_exp_in_context): Update.
+	* p-exp.y (yylex): Update.
+	* m2-exp.y (yylex): Update.
+	* go-exp.y (lex_one_token): Update.
+	* f-exp.y (yylex): Update.
+	* d-exp.y (lex_one_token): Update.
+	* c-exp.y (lex_one_token): Update.
+	* ada-lex.l: Update.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* rust-exp.y (struct rust_parser) <paren_depth>: New member.
+	(rustyylex, rust_lex_test_init, rust_lex_test_one)
+	(rust_lex_test_sequence, rust_lex_test_push_back): Update.
+	* parser-defs.h (paren_depth): Don't declare.
+	* parse.c (paren_depth): Remove global.
+	(parse_exp_in_context): Update.
+	* p-exp.y (paren_depth): New global.
+	(pascal_parse): Initialize it.
+	* m2-exp.y (paren_depth): New global.
+	(m2_parse): Initialize it.
+	* go-exp.y (paren_depth): New global.
+	(go_parse): Initialize it.
+	* f-exp.y (paren_depth): New global.
+	(f_parse): Initialize it.
+	* d-exp.y (paren_depth): New global.
+	(d_parse): Initialize it.
+	* c-exp.y (paren_depth): New global.
+	(c_parse): Initialize it.
+	* ada-lex.l (paren_depth): New global.
+	(lexer_init): Initialize it.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* rust-exp.y (rust_parser::crate_name, rust_parser::super_name)
+	(rust_parser::convert_ast_to_type)
+	(rust_parser::convert_ast_to_expression, rust_lex_tests): Update.
+	* parser-defs.h (struct parser_state) <parser_state>: Add
+	parameters.  Initialize new members.
+	<expression_context_block, expression_context_pc>: New members.
+	* parse.c (expression_context_block, expression_context_pc):
+	Remove globals.
+	(parse_exp_in_context): Update.
+	* p-exp.y: Update all rules.
+	(yylex): Update.
+	* m2-exp.y: Update all rules.
+	(yylex): Update.
+	* go-exp.y (yylex): Update.
+	* f-exp.y (yylex): Update.
+	* d-exp.y: Update all rules.
+	(yylex): Update.
+	* c-exp.y: Update all rules.
+	(lex_one_token, classify_name, yylex, c_parse): Update.
+	* ada-exp.y (write_var_or_type, write_name_assoc): Update.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* gdbarch.h, gdbarch.c: Rebuild.
+	* gdbarch.sh (dtrace_parse_probe_argument): Change type.
+	* stap-probe.h: 
+	(struct stap_parse_info): Replace "parser_state" with
+	"expr_builder".
+	* parser-defs.h (struct expr_builder): Rename from "parser_state".
+	(parser_state): New class.
+	* parse.c (expr_builder): Rename.
+	(expr_builder::release): Rename.
+	(write_exp_elt, write_exp_elt_opcode, write_exp_elt_sym)
+	(write_exp_elt_msym, write_exp_elt_block, write_exp_elt_objfile)
+	(write_exp_elt_longcst, write_exp_elt_floatcst)
+	(write_exp_elt_type, write_exp_elt_intern, write_exp_string)
+	(write_exp_string_vector, write_exp_bitstring)
+	(write_exp_msymbol, mark_struct_expression)
+	(write_dollar_variable)
+	(insert_type_address_space, increase_expout_size): Replace
+	"parser_state" with "expr_builder".
+	* dtrace-probe.c: Replace "parser_state" with "expr_builder".
+	* amd64-linux-tdep.c (amd64_dtrace_parse_probe_argument): Replace
+	"parser_state" with "expr_builder".
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* rust-exp.y: Replace "parse_language" with method call.
+	* p-exp.y: 
+	(yylex): Replace "parse_language" with method call.
+	* m2-exp.y: 
+	(yylex): Replace "parse_language" with method call.
+	* go-exp.y (classify_name): Replace "parse_language" with method
+	call.
+	* f-exp.y (yylex): Replace "parse_language" with method call.
+	* d-exp.y (lex_one_token): Replace "parse_language" with method
+	call.
+	* c-exp.y: 
+	(lex_one_token, classify_name, yylex): Replace "parse_language"
+	with method call.
+	* ada-exp.y (find_primitive_type, type_char)
+	(type_system_address): Replace "parse_language" with method call.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* rust-exp.y: Replace "parse_gdbarch" with method call.
+	* parse.c (write_dollar_variable, insert_type_address_space):
+	Replace "parse_gdbarch" with method call.
+	* p-exp.y (parse_type, yylex): Replace "parse_gdbarch" with method
+	call.
+	* objc-lang.c (end_msglist): Replace "parse_gdbarch" with method
+	call.
+	* m2-exp.y (parse_type, parse_m2_type, yylex): Replace
+	"parse_gdbarch" with method call.
+	* go-exp.y (parse_type, classify_name): Replace "parse_gdbarch"
+	with method call.
+	* f-exp.y (parse_type, parse_f_type, yylex): Replace
+	"parse_gdbarch" with method call.
+	* d-exp.y (parse_type, parse_d_type, lex_one_token): Replace
+	"parse_gdbarch" with method call.
+	* c-exp.y (parse_type, parse_number, classify_name): Replace
+	"parse_gdbarch" with method call.
+	* ada-lex.l: Replace "parse_gdbarch" with method call.
+	* ada-exp.y (parse_type, find_primitive_type, type_char)
+	(type_system_address): Replace "parse_gdbarch" with method call.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* dtrace-probe.c (dtrace_probe::build_arg_exprs): Update.
+	* stap-probe.c (stap_parse_argument): Update.
+	* stap-probe.h (struct stap_parse_info) <stap_parse_info>: Remove
+	initial_size parameter.
+	* rust-exp.y (rust_lex_tests): Update.
+	* parse.c (parser_state): Update.
+	(parse_exp_in_context): Update.
+	* parser-defs.h (struct parser_state) <parser_state>: Remove
+	"initial_size" parameter.
+
+2019-04-04  Tom Tromey  <tom@tromey.com>
+
+	* parser-defs.h (increase_expout_size): Don't declare.
+	* parse.c (increase_expout_size): Now static.
+
+2019-04-04  Thomas Schwinge  <thomas@codesourcery.com>
+
+	* gnu-nat.c (gnu_nat_target::wait): Fix
+	target_waitstatus_to_string call.
+
+2019-04-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* eval.c (evaluate_subexp_standard): Handle internal functions
+	during Fortran function call handling.
+
+2019-04-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention new internal functions.
+	* dwarf2read.c (dwarf2_init_complex_target_type): New function.
+	(read_base_type): Use dwarf2_init_complex_target_type.
+	* value.c (creal_internal_fn): New function.
+	(cimag_internal_fn): New function.
+	(_initialize_values): Register new internal functions.
+
+2019-04-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* infrun.c (stop_all_threads): If debug_infrun, always
+	trace the wait status after wait_one, using
+	target_waitstatus_to_string and target_pid_to_str.
+	(handle_inferior_event): Replace various trace of
+	wait status kind by a single trace.
+	* gnu-nat.c (gnu_nat_target::wait): Replace local
+	wait status kind image by target_waitstatus_to_string.
+	* target/waitstatus.c (target_waitstatus_to_string): Fix
+	obsolete comment.
+
+2019-04-01  Tom Tromey  <tromey@adacore.com>
+
+	PR symtab/23331:
+	* dwarf2read.c (partial_die_info::read): Handle DW_AT_ranges.
+
+2019-04-01  Sergio Durigan Junior  <sergiodj@redhat.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* top.c (quit_force): Call 'finalize_values'.
+	* value.c (finalize_values): New function.
+	* value.h (finalize_values): Declare.
+
+2019-03-30  Eli Zaretskii  <eliz@gnu.org>
+
+	* NEWS: Announce $_gdb_major and $_gdb_minor.
+
+	* top.c (init_gdb_version_vars): New function.
+	(gdb_init): Call init_gdb_version_vars.
+
+2019-03-29  Tom Tromey  <tromey@adacore.com>
+
+	* printcmd.c (_initialize_printcmd): Add usage lines.  Update some
+	help text.  Remove dead code.
+
+2019-03-29  Keith Seitz  <keiths@redhat.com>
+
+	From Siddhesh Poyarekar:
+	* f-lang.h (f77_get_upperbound): Return LONGEST.
+	(f77_get_lowerbound): Likewise.
+	* f-typeprint.c (f_type_print_varspec_suffix): Expand
+	UPPER_BOUND and LOWER_BOUND to LONGEST.  Use plongest to format
+	print them.
+	(f_type_print_base): Expand UPPER_BOUND to LONGEST.  Use
+	plongest to format print it.
+	* f-valprint.c (f77_get_lowerbound): Return LONGEST.
+	(f77_get_upperbound): Likewise.
+	(f77_get_dynamic_length_of_aggregate): Expand UPPER_BOUND,
+	LOWER_BOUND to LONGEST.
+	(f77_create_arrayprint_offset_tbl): Likewise.
+
+2019-03-29  Keith Seitz  <keiths@redhat.com>
+
+	* ada-lang.c (ada_template_to_fixed_record_type_1): Use
+	%s/pulongest for TYPE_LENGTH instead of %d in format
+	strings.
+	* ada-typerint.c (ada_print_type): Likewise.
+	* amd64-windows-tdep.c (amd64_windows_store_arg_in_reg): Likewise.
+	* compile/compile-c-support.c (generate_register_struct): Likewise.
+	* gdbtypes.c (recursive_dump_type): Likewise.
+	* gdbtypes.h (struct type) <length>: Change type to ULONGEST.
+	* m2-typeprint.c (m2_array):  Use %s/pulongest for TYPE_LENGTH
+	instead of %d in format strings.
+	* riscv-tdep.c (riscv_type_alignment): Cast second argument
+	to std::min to ULONGEST.
+	* symmisc.c (print_symbol): Use %s/pulongest for TYPE_LENGTH
+	instead of %d in format strings.
+	* tracepoint.c (info_scope_command): Likewise.
+	* typeprint.c (print_offset_data::update)
+	(print_offset_data::finish): Likewise.
+	* xtensa-tdep.c (xtensa_store_return_value)
+	(xtensa_push_dummy_call): Likewise.
+
+2019-03-28  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* windows-nat.c (display_selector): Fixed format specifications
+	for 64-bit Cygwin.
+
+2019-03-28  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* infrun.c (follow_exec): Call target_terminal::ours_for_output.
+
+2019-03-28  Sandra Loosemore  <sandra@codesourcery.com>
+
+	* nios2-tdep.h (struct gdbarch_tdep): Add is_kernel_helper.
+	* nios2-tdep.c (nios2_get_next_pc): Skip over kernel helpers.
+	* nios2-linux-tdep.c (nios2_linux_is_kernel_helper): New.
+	(nios2_linux_init_abi): Install it.
+
+2019-03-28  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aarch64_vnv_type): Use vector types.
+
+2019-03-28  Alan Hayward  <alan.hayward@arm.com>
+
+	* features/aarch64-sve.c (create_feature_aarch64_sve): Add q view.
+
+2019-03-24  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	    Tom Tromey  <tromey@adacore.com>
+
+	* minsyms.c (minimal_symbol_upper_bound): Fix buffer overflow.
+
+2019-03-26  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb-gdb.py.in (StructMainTypePrettyPrinter.bound_img): New method.
+	(StructMainTypePrettyPrinter.bounds_img): Use new "bound_img"
+	method to compute the bounds of range types. Also print "[evaluated]"
+	if the bounds' values come from a dynamic evaluation.
+
+2019-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cp-valprint.c (cp_print_value_fields): Don't print trailing
+	whitespace when pretty printing is on.
+
+2019-03-26  Alan Hayward  <alan.hayward@arm.com>
+
+	* ppc-linux-nat.c: Add include.
+
+2019-03-26  Alan Hayward  <alan.hayward@arm.com>
+
+	* NEWS: Mention AArch64 Pointer Authentication.
+
+2019-03-26  Alan Hayward  <alan.hayward@arm.com>
+
+	* arm-linux-nat.c: Add include.
+
+2019-03-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* source-cache.c (source_cache::get_source_lines): Re-read
+	fullname after calling open_source_file.
+
+2019-03-25  John Baldwin  <jhb@FreeBSD.org>
+
+	* NEWS: Mention TLS support for FreeBSD.
+
+2019-03-25  Tom Tromey  <tromey@adacore.com>
+
+	* minsyms.c (BUNCH_SIZE): Update comment.
+	(~minimal_symbol_reader): Remove old comment.
+	(compact_minimal_symbols): Update comment.
+	(minimal_symbol_reader::install): Remove old comment.  Update
+	other comments.
+
+2019-03-25  Alan Hayward  <alan.hayward@arm.com>
+
+	* s390-linux-nat.c: Add include.
+
+2019-03-25  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-linux-nat.c (aarch64_linux_nat_target::read_description):
+	Call linux_get_hwcap.
+	* aarch64-linux-tdep.c (aarch64_linux_core_read_description):
+	Likewise.
+	(aarch64_linux_get_hwcap): Remove function.
+	* aarch64-linux-tdep.h (aarch64_linux_get_hwcap): Remove
+	declaration.
+	* arm-linux-nat.c (arm_linux_nat_target::read_description):Call
+	linux_get_hwcap.
+	* arm-linux-tdep.c (arm_linux_core_read_description): Likewise.
+	* linux-tdep.c (linux_get_hwcap): Add function.
+	(linux_get_hwcap2): Likewise.
+	* linux-tdep.h (linux_get_hwcap): Add declaration.
+	(linux_get_hwcap2): Likewise.
+	* ppc-linux-nat.c (ppc_linux_get_hwcap): Remove function.
+	(ppc_linux_get_hwcap2): Likewise.
+	(ppc_linux_nat_target::region_ok_for_hw_watchpoint): Call
+	linux_get_hwcap.
+	(ppc_linux_nat_target::insert_watchpoint): Likewise.
+	(ppc_linux_nat_target::watchpoint_addr_within_range): Likewise.
+	(ppc_linux_nat_target::read_description): Likewise.
+	* ppc-linux-tdep.c (ppc_linux_core_read_description): Likewise.
+	* s390-linux-nat.c: Likewise.
+	* s390-linux-tdep.c (s390_core_read_description): Likewise.
+
+2019-03-24  Tom Tromey  <tom@tromey.com>
+
+	* ada-lang.c (standard_lookup): Simplify initialization.
+	(ada_lookup_symbol_nonlocal): Simplify return.
+	* solib-spu.c (spu_lookup_lib_symbol): Simplify return.
+	* solib-darwin.c (darwin_lookup_lib_symbol): Simplify return.
+	* solib-svr4.c (elf_lookup_lib_symbol): Simplify return.
+	* rust-lang.c (rust_lookup_symbol_nonlocal): Simplify
+	initialization.
+	* solib.c (solib_global_lookup): Simplify.
+	* symtab.c (null_block_symbol): Remove.
+	(symbol_cache_lookup): Simplify returns.
+	(lookup_language_this): Simplify returns.
+	(lookup_symbol_aux): Simplify return.
+	(lookup_local_symbol): Simplify returns.
+	(lookup_global_symbol_from_objfile): Simplify return.
+	(lookup_symbol_in_objfile_symtabs)
+	(lookup_symbol_in_objfile_from_linkage_name): Simplify return.
+	(lookup_symbol_via_quick_fns, lookup_symbol_in_static_block)
+	(lookup_static_symbol, lookup_global_symbol): Simplify return.
+	* cp-namespace.c (cp_lookup_bare_symbol)
+	(cp_search_static_and_baseclasses, cp_lookup_symbol_via_imports)
+	(cp_lookup_symbol_via_all_imports, cp_lookup_nested_symbol_1)
+	(cp_lookup_nested_symbol): Don't use null_block_symbol.
+	(cp_lookup_symbol_via_imports): Simplify initialization.
+	(find_symbol_in_baseclass): Likewise.
+	* symtab.h (null_block_symbol): Remove.
+	* d-namespace.c (d_lookup_symbol): Don't use null_block_symbol.
+	(d_lookup_nested_symbol, d_lookup_symbol_imports)
+	(d_lookup_symbol_module): Likewise.
+	(find_symbol_in_baseclass): Simplify initialization.
+
+2019-03-24  Tom Tromey  <tom@tromey.com>
+
+	* expression.h: Don't include symtab.h.
+	(struct block): Forward declare.
+
+2019-03-24  Tom Tromey  <tom@tromey.com>
+
+	* c-exp.y (typebase): Remove casts.
+	* gdbtypes.c (lookup_unsigned_typename, )
+	(lookup_signed_typename): Remove cast.
+	* eval.c (parse_to_comma_and_eval): Remove cast.
+	* parse.c (write_dollar_variable): Remove cast.
+	* block.h (struct block) <superblock>: Now const.
+	* symfile-debug.c (debug_qf_map_matching_symbols): Update.
+	* psymtab.c (psym_map_matching_symbols): Make "block" const.
+	(map_block): Make "block" const.
+	* symfile.h (struct quick_symbol_functions)
+	<map_matching_symbols>: Constify block argument to "callback".
+	* symtab.c (basic_lookup_transparent_type_quick): Make "block"
+	const.
+	(find_pc_sect_compunit_symtab): Make "b" const.
+	(find_symbol_at_address): Likewise.
+	(search_symbols): Likewise.
+	* dwarf2read.c (dw2_lookup_symbol): Make "block" const.
+	(dw2_debug_names_lookup_symbol): Likewise.
+	(dw2_map_matching_symbols): Update.
+	* p-valprint.c (pascal_val_print): Remove "block".
+	* ada-lang.c (ada_add_global_exceptions): Make "b" const.
+	(aux_add_nonlocal_symbols): Make "block" const.
+	(resolve_subexp): Remove cast.
+	* linespec.c (iterate_over_all_matching_symtabs): Make "block"
+	const.
+	(iterate_over_file_blocks): Likewise.
+	* f-exp.y (%union) <bval>: Remove.
+	* coffread.c (patch_opaque_types): Make "b" const.
+	* spu-tdep.c (spu_catch_start): Make "block" const.
+	* c-valprint.c (print_unpacked_pointer): Remove "block".
+	* symmisc.c (dump_symtab_1): Make "b" const.
+	(block_depth): Make "block" const.
+	* d-exp.y (%union) <bval>: Remove.
+	* cp-support.h (cp_lookup_rtti_type): Update.
+	* cp-support.c (cp_lookup_rtti_type): Make "block" const.
+	* psymtab.c (psym_lookup_symbol): Make "block" const.
+	(maintenance_check_psymtabs): Make "b" const.
+	* python/py-framefilter.c (extract_sym): Make "sym_block" const.
+	(enumerate_locals, enumerate_args): Update.
+	* python/py-symtab.c (stpy_global_block): Make "block" const.
+	(stpy_static_block): Likewise.
+	* inline-frame.c (block_starting_point_at): Make "new_block"
+	const.
+	* block.c (find_block_in_blockvector): Make return type const.
+	(blockvector_for_pc_sect): Make "b" const.
+	(find_block_in_blockvector): Make "b" const.
+
+2019-03-23  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (varobj_create): Update.
+	* symfile.c (clear_symtab_users): Don't reset innermost_block.
+	* printcmd.c (display_command, do_one_display): Don't reset
+	innermost_block.
+	* parser-defs.h (enum innermost_block_tracker_type): Move to
+	expression.h.
+	(innermost_block): Update comment.
+	* parse.c (parse_exp_1): Add tracker_types parameter.
+	(parse_exp_in_context): Rename from parse_exp_in_context_1.  Add
+	tracker_types parameter.  Reset innermost_block.
+	(parse_exp_in_context): Remove.
+	(parse_expression_for_completion): Update.
+	* objfiles.c (~objfile): Don't reset expression_context_block or
+	innermost_block.
+	* expression.h (enum innermost_block_tracker_type): Move from
+	parser-defs.h.
+	(parse_exp_1): Add tracker_types parameter.
+	* breakpoint.c (set_breakpoint_condition, watch_command_1): Don't
+	reset innermost_block.
+
+2019-03-23  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h: Include bcache.h.
+
+2019-03-23  Tom Tromey  <tom@tromey.com>
+
+	* linespec.c (get_current_search_block): Use
+	scoped_restore_current_language.
+	* symmisc.c (dump_symtab): Use scoped_restore_current_language.
+
+2019-03-22  Alan Hayward  <alan.hayward@arm.com>
+	    Jiong Wang  <jiong.wang@arm.com>
+
+	* aarch64-linux-tdep.c
+	(aarch64_linux_iterate_over_regset_sections): Check for pauth
+	section.
+	* aarch64-linux-tdep.h (AARCH64_LINUX_SIZEOF_PAUTH): New define.
+
+2019-03-22  Alan Hayward  <alan.hayward@arm.com>
+	    Jiong Wang  <jiong.wang@arm.com>
+
+	* aarch64-tdep.c (aarch64_analyze_prologue): Check for pauth
+	instructions.
+	(aarch64_analyze_prologue_test): Add PACIASP test.
+	(aarch64_prologue_prev_register): Unmask PC value.
+
+2019-03-22  Alan Hayward  <alan.hayward@arm.com>
+	    Jiong Wang  <jiong.wang@arm.com>
+
+	* aarch64-tdep.c (aarch64_frame_unmask_address): New function.
+	(aarch64_dwarf2_prev_register): Unmask PC value.
+	(aarch64_dwarf2_frame_init_reg): Init pauth registers.
+	(aarch64_execute_dwarf_cfa_vendor_op): Check for
+	DW_CFA_AARCH64_negate_ra_state.
+	(aarch64_gdbarch_init): Add aarch64_execute_dwarf_cfa_vendor_op.
+
+2019-03-22  Alan Hayward  <alan.hayward@arm.com>
+	    Jiong Wang  <jiong.wang@arm.com>
+
+	* aarch64-tdep.c (aarch64_dwarf_reg_to_regnum): Check for pauth
+	registers.
+	(aarch64_pseudo_register_name): Likewise.
+	(aarch64_pseudo_register_type): Likewise.
+	(aarch64_pseudo_register_reggroup_p): Likewise.
+	(aarch64_gdbarch_init): Add pauth registers.
+	* aarch64-tdep.h (AARCH64_DWARF_PAUTH_RA_STATE): New define.
+	(AARCH64_DWARF_PAUTH_DMASK): Likewise.
+	(AARCH64_DWARF_PAUTH_CMASK): Likewise.
+	(struct gdbarch_tdep): Add regnum for ra_state.
+
+2019-03-22  Alan Hayward  <alan.hayward@arm.com>
+	    Jiong Wang  <jiong.wang@arm.com>
+
+	* arch/aarch64.h (AARCH64_PAUTH_REGS_SIZE): New define.
+
+2019-03-22  Alan Hayward  <alan.hayward@arm.com>
+	    Jiong Wang  <jiong.wang@arm.com>
+
+	* aarch64-linux-nat.c (fetch_pauth_masks_from_thread): New
+	function.
+	(aarch64_linux_nat_target::fetch_registers): Read pauth registers.
+	* aarch64-tdep.c (aarch64_cannot_store_register): New function.
+	(aarch64_gdbarch_init): Add puth registers.
+	* aarch64-tdep.h (struct gdbarch_tdep): Add pauth features.
+	* arch/aarch64.h (AARCH64_PAUTH_DMASK_REGNUM): New define.
+	(AARCH64_PAUTH_CMASK_REGNUM): Likewise.
+
+2019-03-22  Alan Hayward  <alan.hayward@arm.com>
+	    Jiong Wang  <jiong.wang@arm.com>
+
+	* aarch64-linux-nat.c
+	(aarch64_linux_nat_target::read_description): Read PACA hwcap.
+	* aarch64-linux-tdep.c
+	(aarch64_linux_core_read_description): Likewise.
+	(aarch64_linux_get_hwcap): New function.
+	* aarch64-linux-tdep.h (AARCH64_HWCAP_PACA): New define.
+	(aarch64_linux_get_hwcap): New declaration.
+
+2019-03-22  Alan Hayward  <alan.hayward@arm.com>
+	    Jiong Wang  <jiong.wang@arm.com>
+
+	* aarch64-linux-nat.c
+	(aarch64_linux_nat_target::read_description): Add pauth param.
+	* aarch64-linux-tdep.c
+	(aarch64_linux_core_read_description): Likewise.
+	* aarch64-tdep.c (struct target_desc): Add in pauth.
+	(aarch64_read_description): Add pauth param.
+	(aarch64_gdbarch_init): Likewise.
+	* aarch64-tdep.h (aarch64_read_description): Likewise.
+	* arch/aarch64.c (aarch64_create_target_description): Likewise.
+	* arch/aarch64.h (aarch64_create_target_description): Likewise.
+	* features/Makefile: Add new files.
+	* features/aarch64-pauth.c: New file.
+	* features/aarch64-pauth.xml: New file.
+
+2019-03-20  Tom Tromey  <tromey@adacore.com>
+
+	* infrun.c (handle_inferior_event): Rename from
+	handle_inferior_event_1.  Create a scoped_value_mark.
+	(handle_inferior_event): Remove.
+
+2019-03-19  Tom Tromey  <tromey@adacore.com>
+
+	* mi/mi-interp.c (mi_on_normal_stop_1): Only show displays once.
+	* infrun.h (print_stop_event): Add "displays" parameter.
+	* infrun.c (print_stop_event): Add "displays" parameter.
+
+2019-03-19  Pedro Alves  <palves@redhat.com>
+
+	* tui/tui-out.c (tui_ui_out::do_field_string): Simplify.
+	(tui_ui_out::do_text): Add comments.  Reset M_LINE to 0 instead of
+	to -1.  Fix TABs vs spaces.
+	(tui_ui_out::tui_ui_out): Don't initialize fields here.
+	* tui/tui-out.h (tui_ui_out) Add intro comments.
+	<m_line, m_start_of_line>: In-class initialize, and add describing
+	comment.
+
+2019-03-18  Alan Hayward  <alan.hayward@arm.com>
+
+	* arm-linux-nat.c (arm_linux_insert_hw_breakpoint1): Fix
+	variable names.
+	(arm_linux_remove_hw_breakpoint1): Use a gdb::function_view.
+
+2019-03-18  Pedro Alves  <palves@redhat.com>
+	    Eli Zaretskii <eliz@gnu.org>
+
+	* tui/tui-out.c (tui_ui_out::tui_ui_out): Fix initialization of
+	m_line and m_start_of_line.
+
+2019-03-18  Eli Zaretskii  <eliz@gnu.org>
+
+	* tui/tui-io.c (gdb_wgetch): Don't echo CR.
+	(tui_getc): When gdb_wgetch returns a CR, behave the same as when
+	it returns a newline.  This fixes a regression in TU mode, whereby
+	the next line is output on the same screen line as the user input.
+
+2019-03-18  Tom Tromey  <tromey@adacore.com>
+
+	* minsyms.c (minimal_symbol_reader::install): Remove call to
+	obstack_blank.
+
+2019-03-18  Pedro Alves  <palves@redhat.com>
+
+	* tui/tui-io.c (reverse_mode_p, reverse_save_bg, reverse_save_fg):
+	New globals.
+	(apply_style): New, factored out from ...
+	(apply_ansi_escape): ... this.  Handle reverse video mode.
+	(tui_set_reverse_mode): New function.
+	* tui/tui-io.h (tui_set_reverse_mode): New declaration.
+	* tui/tui-winsource.c (tui_show_source_line): Use
+	tui_set_reverse_mode instead of setting A_STANDOUT.
+	* ui-style.h (struct ui_file_style) <set_reverse, set_fg, set_bg>:
+	New setter methods.
+
+2019-03-18  Hannes Domani  <ssbssa@yahoo.de>
+
+	* tui/tui-source.c (copy_source_line): Fix handling of 'column'.
+	Handle tabs.
+
+2019-03-18  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (empty_array): Add "high" parameter.
+	(ada_evaluate_subexp): Update.
+
+2019-03-17  Sergei Trofimovich <siarheit@google.com>
+
+	* unittests/string_view-selftests.c: Define
+	_initialize_string_view_selftests unconditionally.
+
+2019-03-17  Vladimir Martyanov  <vilgeforce@gmail.com>
+
+	PR gdb/24350
+	* windows-nat.c (windows_make_so): Remove unused text_vma variable.
+
+2019-03-17  Vladimir Martyanov  <vilgeforce@gmail.com>
+
+	PR gdb/24351
+	* windows-nat.c (display_selector): Fix format specifiers.
+
+2019-03-17  Eli Zaretskii  <eliz@gnu.org>
+
+	* tui/tui-winsource.c (tui_set_is_exec_point_at): Call
+	tui_refill_source_window instead of tui_refresh_win, to update the
+	current execution line.  This fixes redisplay of the current line
+	when stepping through the code with "next" or "step".
+
+2019-03-16  Eli Zaretskii  <eliz@gnu.org>
+
+	* source-cache.c (source_cache::get_source_lines): Call
+	find_source_lines to initialize s->nlines.  This fixes vertical
+	scrolling of TUI source window when the DOWN arrow is pressed.
+
+2019-03-16  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* auto-load.c (_initialize_auto_load): Fix 'This options has'.
+	linux-thread-db.c (_initialize_thread_db): Likewise.
+
+2019-03-16  Eli Zaretskii  <eliz@gnu.org>
+
+	* tui/tui-winsource.c (tui_show_source_line): Revert "Use
+	wclrtoeol in tui_show_source_line".  This reverts changes made in
+	commit 4a3045920bbe4e50a0f4920b0fdc4e88ef23015c.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* symtab.h (struct minimal_symbol): Derive from
+	general_symbol_info.
+	(MSYMBOL_VALUE, MSYMBOL_VALUE_RAW_ADDRESS)
+	(MSYMBOL_VALUE_ADDRESS, MSYMBOL_VALUE_BYTES)
+	(MSYMBOL_BLOCK_VALUE, MSYMBOL_VALUE_CHAIN, MSYMBOL_LANGUAGE)
+	(MSYMBOL_SECTION, MSYMBOL_OBJ_SECTION, MSYMBOL_NATURAL_NAME)
+	(MSYMBOL_LINKAGE_NAME, MSYMBOL_DEMANGLED_NAME)
+	(MSYMBOL_SEARCH_NAME): Update.
+	(MSYMBOL_SET_LANGUAGE, MSYMBOL_SET_NAMES): Remove.
+	* solib.c (gdb_bfd_lookup_symbol_from_symtab): Don't use memset.
+	* minsyms.c (minimal_symbol_reader::record_full): Update.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* minsyms.c (minimal_symbol_reader::install): Use memcpy.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (struct objfile_per_bfd_storage) <msymbols>: Now a
+	unique_xmalloc_ptr.
+	(objfile::msymbols_range::begin, objfile::msymbols_range::end):
+	Update.
+	* minsyms.c (lookup_minimal_symbol_by_pc_section)
+	(build_minimal_symbol_hash_tables)
+	(minimal_symbol_reader::install): Update.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (create_demangled_names_hash): Update.
+	(symbol_set_names): Update.
+	* objfiles.h (struct objfile_per_bfd_storage)
+	<demangled_names_hash>: Now an htab_up.
+	* objfiles.c (objfile_per_bfd_storage): Simplify.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (struct objfile_per_bfd_storage): Declare
+	destructor.
+	* objfiles.c (objfile_per_bfd_storage::~objfile_per_bfd_storage):
+	New.
+	(get_objfile_bfd_data): Use new.  Don't initialize
+	language_of_main.
+	(free_objfile_per_bfd_storage): Remove.
+	(objfile_bfd_data_free, objfile::~objfile): Use delete.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (reread_symbols): Update.
+	* objfiles.c (objfile::objfile): Update.
+	* minsyms.h (terminate_minimal_symbol_table): Don't declare.
+	* minsyms.c (lookup_minimal_symbol_by_pc_section): Update
+	comment.
+	(minimal_symbol_reader::install): Update.
+	(terminate_minimal_symbol_table): Remove.
+	* jit.c (jit_object_close_impl): Update.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* minsyms.c (minimal_symbol_reader::record_full): Remove some
+	initializations.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (struct objfile_per_bfd_storage)
+	<demangled_hash_languages>: Now a bitset.
+	* minsyms.c (add_minsym_to_demangled_hash_table): Update.
+	(lookup_minimal_symbol): Update.
+
+2019-03-15  Tom Tromey  <tom@tromey.com>
+
+	* minsyms.h (class minimal_symbol_reader) <record_with_info>:
+	Don't return the symbol.
+	* coffread.c (record_minimal_symbol): Use record_full.
+
+2019-03-14  Eli Zaretskii  <eliz@gnu.org>
+
+	The MS-Windows port of ncurses fails to switch to a color pair if
+	one or both of the colors are the implicit default colors.  This
+	change records the default colors when TUI is initialized, and
+	then specifies them explicitly when a color pair uses the default
+	colors.  This allows color styling in TUI mode on MS-Windows.
+
+	* tui/tui-io.c [__MINGW32__]: Include windows.h.  Declare
+	ncurses_norm_attr.
+	(tui_initialize_io) [__MINGW32__]: Record the default terminal
+	colors in ncurses_norm_attr.
+	(apply_ansi_escape) [__MINGW32__]: If a color in a color pair is
+	"none", replace it with the default color recorded in
+	ncurses_norm_attr.
+
+2019-03-14  Tom Tromey  <tromey@adacore.com>
+
+	* source-cache.h (class source_cache) <get_source_lines>: Return
+	std::string.
+	* source-cache.c (source_cache::extract_lines): Handle case where
+	first_pos==npos.  Return std::string.
+	(source_cache::get_source_lines): Update.
+
+2019-03-14  Tom Tromey  <tromey@adacore.com>
+
+	* NEWS: Add item for "style sources" commands.
+	* source-cache.c (source_cache::get_source_lines): Check
+	source_styling.
+	* cli/cli-style.c (source_styling): New global.
+	(_initialize_cli_style): Add "style sources" commands.
+	(show_style_sources): New function.
+	* cli/cli-style.h (source_styling): Declare.
+
+2019-03-14  Pedro Alves  <palves@redhat.com>
+	    Tom Tromey  <tromey@adacore.com>
+
+	* tui/tui-winsource.h (tui_refill_source_window): Declare.
+	* tui/tui-winsource.c (tui_refill_source_window): New function,
+	from...
+	(tui_horizontal_source_scroll): ... here.  Move some logic.
+	* cli/cli-style.c (set_style_enabled): Notify new observable.
+	* tui/tui-hooks.c (tui_redisplay_source): New function.
+	(tui_attach_detach_observers): Attach or detach
+	tui_redisplay_source.
+	* observable.h (source_styling_changed): New observable.
+	* observable.c: Define source_styling_changed observable.
+
+2019-03-13  Tom Tromey  <tromey@adacore.com>
+
+	* i386-gnu-nat.c (i386_gnu_nat_target::fetch_registers)
+	(i386_gnu_nat_target::store_registers): Update.
+	* target-debug.h (target_debug_print_std_string): New macro.
+	* x86-linux-nat.c (x86_linux_nat_target::enable_btrace): Update.
+	* windows-tdep.c (display_one_tib): Update.
+	* tui/tui-stack.c (tui_make_status_line): Update.
+	* top.c (print_inferior_quit_action): Update.
+	* thread.c (thr_try_catch_cmd): Update.
+	(add_thread_with_info): Update.
+	(thread_target_id_str): Update.
+	(thr_try_catch_cmd): Update.
+	(thread_command): Update.
+	(thread_find_command): Update.
+	* record-btrace.c (record_btrace_target::info_record)
+	(record_btrace_resume_thread, record_btrace_target::resume)
+	(record_btrace_cancel_resume, record_btrace_step_thread)
+	(record_btrace_target::wait, record_btrace_target::wait)
+	(record_btrace_target::wait, record_btrace_target::stop): Update.
+	* progspace.c (print_program_space): Update.
+	* process-stratum-target.c
+	(process_stratum_target::thread_address_space): Update.
+	* linux-fork.c (linux_fork_mourn_inferior)
+	(detach_checkpoint_command, info_checkpoints_command)
+	(linux_fork_context): Update.
+	(linux_fork_detach): Update.
+	(class scoped_switch_fork_info): Update.
+	(delete_checkpoint_command): Update.
+	* infrun.c (follow_fork_inferior): Update.
+	(follow_fork_inferior): Update.
+	(proceed_after_vfork_done): Update.
+	(handle_vfork_child_exec_or_exit): Update.
+	(follow_exec): Update.
+	(displaced_step_prepare_throw): Update.
+	(displaced_step_restore): Update.
+	(start_step_over): Update.
+	(resume_1): Update.
+	(clear_proceed_status_thread): Update.
+	(proceed): Update.
+	(print_target_wait_results): Update.
+	(do_target_wait): Update.
+	(context_switch): Update.
+	(stop_all_threads): Update.
+	(restart_threads): Update.
+	(finish_step_over): Update.
+	(handle_signal_stop): Update.
+	(switch_back_to_stepped_thread): Update.
+	(keep_going_pass_signal): Update.
+	(print_exited_reason): Update.
+	(normal_stop): Update.
+	* inferior.c (inferior_pid_to_str): Change return type.
+	(print_selected_inferior): Update.
+	(add_inferior): Update.
+	(detach_inferior): Update.
+	* dummy-frame.c (fprint_dummy_frames): Update.
+	* dcache.c (dcache_info_1): Update.
+	* btrace.c (btrace_enable, btrace_disable, btrace_teardown)
+	(btrace_fetch, btrace_clear): Update.
+	* linux-tdep.c (linux_core_pid_to_str): Change return type.
+	* i386-cygwin-tdep.c (i386_windows_core_pid_to_str): Change return
+	type.
+	* fbsd-tdep.c (fbsd_core_pid_to_str): Change return type.
+	* sol2-tdep.h (sol2_core_pid_to_str): Change return type.
+	* sol2-tdep.c (sol2_core_pid_to_str): Change return type.
+	* gdbarch.c, gdbarch.h: Rebuild.
+	* gdbarch.sh (core_pid_to_str): Change return type.
+	* windows-nat.c (struct windows_nat_target) <pid_to_str>: Change
+	return type.
+	(windows_nat_target::pid_to_str): Change return type.
+	(windows_delete_thread): Update.
+	(windows_nat_target::attach): Update.
+	(windows_nat_target::files_info): Update.
+	* target-delegates.c: Rebuild.
+	* sol-thread.c (class sol_thread_target) <pid_to_str>: Change
+	return type.
+	(sol_thread_target::pid_to_str): Change return type.
+	* remote.c (class remote_target) <pid_to_str>: Change return
+	type.
+	(remote_target::pid_to_str): Change return type.
+	(extended_remote_target::attach, remote_target::remote_stop_ns)
+	(remote_target::remote_notif_remove_queued_reply)
+	(remote_target::push_stop_reply, remote_target::disable_btrace):
+	Update.
+	(extended_remote_target::attach): Update.
+	* remote-sim.c (struct gdbsim_target) <pid_to_str>: Change return
+	type.
+	(gdbsim_target::pid_to_str): Change return type.
+	* ravenscar-thread.c (struct ravenscar_thread_target)
+	<pid_to_str>: Change return type.
+	(ravenscar_thread_target::pid_to_str): Change return type.
+	* procfs.c (class procfs_target) <pid_to_str>: Change return
+	type.
+	(procfs_target::pid_to_str): Change return type.
+	(procfs_target::attach): Update.
+	(procfs_target::detach): Update.
+	(procfs_target::fetch_registers): Update.
+	(procfs_target::store_registers): Update.
+	(procfs_target::wait): Update.
+	(procfs_target::files_info): Update.
+	* obsd-nat.c (obsd_nat_target::pid_to_str): Change return type.
+	* nto-procfs.c (struct nto_procfs_target) <pid_to_str>: Change
+	return type.
+	(nto_procfs_target::pid_to_str): Change return type.
+	(nto_procfs_target::files_info, nto_procfs_target::attach): Update.
+	* linux-thread-db.c (class thread_db_target) <pid_to_str>: Change
+	return type.
+	* linux-nat.c (linux_nat_target::pid_to_str): Change return type.
+	(exit_lwp): Update.
+	(attach_proc_task_lwp_callback, get_detach_signal)
+	(detach_one_lwp, resume_lwp, linux_nat_target::resume)
+	(linux_nat_target::resume, wait_lwp, stop_callback)
+	(maybe_clear_ignore_sigint, stop_wait_callback, status_callback)
+	(save_stop_reason, select_event_lwp, linux_nat_filter_event)
+	(linux_nat_wait_1, resume_stopped_resumed_lwps)
+	(linux_nat_target::wait, linux_nat_stop_lwp): Update.
+	* inf-ptrace.c (inf_ptrace_target::pid_to_str): Change return
+	type.
+	(inf_ptrace_target::attach): Update.
+	(inf_ptrace_target::files_info): Update.
+	* go32-nat.c (struct go32_nat_target) <pid_to_str>: Change return
+	type.
+	(go32_nat_target::pid_to_str): Change return type.
+	* gnu-nat.c (gnu_nat_target::pid_to_str): Change return type.
+	(gnu_nat_target::wait): Update.
+	(gnu_nat_target::wait): Update.
+	(gnu_nat_target::resume): Update.
+	* fbsd-nat.c (fbsd_nat_target::pid_to_str): Change return type.
+	(fbsd_nat_target::wait): Update.
+	* darwin-nat.c (darwin_nat_target::pid_to_str): Change return
+	type.
+	(darwin_nat_target::attach): Update.
+	* corelow.c (class core_target) <pid_to_str>: Change return type.
+	(core_target::pid_to_str): Change return type.
+	* target.c (normal_pid_to_str): Change return type.
+	(default_pid_to_str): Likewise.
+	(target_pid_to_str): Change return type.
+	(target_translate_tls_address): Update.
+	(target_announce_detach): Update.
+	* bsd-uthread.c (struct bsd_uthread_target) <pid_to_str>: Change
+	return type.
+	(bsd_uthread_target::pid_to_str): Change return type.
+	* bsd-kvm.c (class bsd_kvm_target) <pid_to_str>: Change return
+	type.
+	(bsd_kvm_target::pid_to_str): Change return type.
+	* aix-thread.c (class aix_thread_target) <pid_to_str>: Change
+	return type.
+	(aix_thread_target::pid_to_str): Change return type.
+	* target.h (struct target_ops) <pid_to_str>: Change return type.
+	(target_pid_to_str, normal_pid_to_str): Likewise.
+	* obsd-nat.h (class obsd_nat_target) <pid_to_str>: Change return
+	type.
+	* linux-nat.h (class linux_nat_target) <pid_to_str>: Change return
+	type.
+	* inf-ptrace.h (struct inf_ptrace_target) <pid_to_str>: Change
+	return type.
+	* gnu-nat.h (struct gnu_nat_target) <pid_to_str>: Change return
+	type.
+	* fbsd-nat.h (class fbsd_nat_target) <pid_to_str>: Change return
+	type.
+	* darwin-nat.h (class darwin_nat_target) <pid_to_str>: Change
+	return type.
+
+2019-03-13  Simon Marchi  <simon.marchi@ericsson.com>
+
+	* NEWS: Mention that the new default MI version is 3.  Mention
+	changes to the output of commands and events that deal with
+	multi-location breakpoints.
+	* breakpoint.c: Include "mi/mi-out.h".
+	(print_one_breakpoint): Change output syntax if using MI version
+	>= 3.
+	* mi/mi-main.h (mi_cmd_fix_multi_location_breakpoint_output):
+	New.
+	(mi_multi_location_breakpoint_output_fixed): New.
+	* mi/mi-main.c (fix_multi_location_breakpoint_output): New.
+	(mi_cmd_fix_multi_location_breakpoint_output): New.
+	(mi_multi_location_breakpoint_output_fixed): New.
+	* mi/mi-cmds.c (mi_cmds): Register command
+	-fix-multi-location-breakpoint-output.
+	* mi/mi-out.c (mi_out_new): Instantiate version 3 when using
+	interpreter "mi".
+
+2019-03-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* mi/mi-out.h (mi_out_new): Change parameter to const char *.
+	* mi/mi-out.c (mi_out_new): Change parameter to const char *,
+	instantiate mi_ui_out based on interpreter name.
+	* mi/mi-interp.c (mi_interp::init): Use the new mi_out_new.
+	* mi/mi-main.c (mi_load_progress): Likewise.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* NEWS: Combine separate "New targets" sections for 8.3.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* ppc-fbsd-tdep.c (ppcfbsd_get_thread_local_address): New.
+	(ppcfbsd_init_abi): Install gdbarch
+	"fetch_tls_load_module_address" and "get_thread_local_address"
+	methods.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* riscv-fbsd-tdep.c (riscv_fbsd_get_thread_local_address): New.
+	(riscv_fbsd_init_abi): Install gdbarch
+	"fetch_tls_load_module_address" and "get_thread_local_address"
+	methods.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* i386-fbsd-tdep.c (i386fbsd_get_thread_local_address): New.
+	(i386fbsd_init_abi): Install gdbarch
+	"fetch_tls_load_module_address" and "get_thread_local_address"
+	methods.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* amd64-fbsd-tdep.c (amd64fbsd_get_thread_local_address): New.
+	(amd64fbsd_init_abi): Install gdbarch
+	"fetch_tls_load_module_address" and "get_thread_local_address"
+	methods.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-tdep.c (fbsd_pspace_data_handle): New variable.
+	(struct fbsd_pspace_data): New type.
+	(get_fbsd_pspace_data, fbsd_pspace_data_cleanup)
+	(fbsd_read_integer_by_name, fbsd_fetch_rtld_offsets)
+	(fbsd_get_tls_index, fbsd_get_thread_local_address): New function.
+	(_initialize_fbsd_tdep): Initialize 'fbsd_pspace_data_handle'.
+	* fbsd-tdep.c (fbsd_get_thread_local_address): New prototype.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* gdbtypes.c (lookup_struct_elt): New function.
+	(lookup_struct_elt_type): Reimplement via lookup_struct_elt.
+	* gdbtypes.h (struct struct_elt): New type.
+	(lookup_struct_elt): New prototype.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* gdbtypes.c (lookup_struct_elt_type): Update comment and
+	remove disabled code block.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* gdbarch.sh (get_thread_local_address): New method.
+	* gdbarch.h, gdbarch.c: Regenerate.
+	* target.c (target_translate_tls_address): Use
+	gdbarch_get_thread_local_address if present instead of
+	target::get_thread_local_address.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* target.h (target::get_thread_local_address): Update comment.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* solib-svr4.c (svr4_fetch_objfile_link_map): Look for
+	objfile->separate_debug_objfile_backlink if not NULL.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* amd64-bsd-nat.c (amd64bsd_fetch_inferior_registers): Use
+	tdep->fsbase_regnum instead of constants for fs_base and gs_base.
+	(amd64bsd_store_inferior_registers): Likewise.
+	* amd64-fbsd-nat.c (amd64_fbsd_nat_target::read_description):
+	Enable segment base registers.
+	* i386-bsd-nat.c (i386bsd_fetch_inferior_registers): Use
+	PT_GETFSBASE and PT_GETGSBASE.
+	(i386bsd_store_inferior_registers): Use PT_SETFSBASE and
+	PT_SETGSBASE.
+	* i386-fbsd-nat.c (i386_fbsd_nat_target::read_description): Enable
+	segment base registers.
+	* i386-fbsd-tdep.c (i386fbsd_core_read_description): Likewise.
+
+2019-03-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* amd64-fbsd-nat.c (amd64_fbsd_nat_target::read_description):
+	Update calls to i386_target_description to add 'segments'
+	parameter.
+	* amd64-tdep.c (amd64_init_abi): Set tdep->fsbase_regnum.  Don't
+	add segment base registers.
+	* arch/i386.c (i386_create_target_description): Add 'segments'
+	parameter to enable segment base registers.
+	* arch/i386.h (i386_create_target_description): Likewise.
+	* features/i386/32bit-segments.xml: New file.
+	* features/i386/32bit-segments.c: Generate.
+	* i386-fbsd-nat.c (i386_fbsd_nat_target::read_description): Update
+	call to i386_target_description to add 'segments' parameter.
+	* i386-fbsd-tdep.c (i386fbsd_core_read_description): Likewise.
+	* i386-go32-tdep.c (i386_go32_init_abi): Likewise.
+	* i386-linux-tdep.c (i386_linux_read_description): Likewise.
+	* i386-tdep.c (i386_validate_tdesc_p): Add segment base registers
+	if feature is present.
+	(i386_gdbarch_init): Pass I386_NUM_REGS to set_gdbarch_num_regs.
+	Add 'segments' parameter to call to i386_target_description.
+	(i386_target_description): Add 'segments' parameter to enable
+	segment base registers.
+	(_initialize_i386_tdep) [GDB_SELF_TEST]: Add 'segments' parameter
+	to call to i386_target_description.
+	* i386-tdep.h (struct gdbarch_tdep): Add 'fsbase_regnum'.
+	(enum i386_regnum): Add I386_FSBASE_REGNUM and I386_GSBASE_REGNUM.
+	Define I386_NUM_REGS.
+	(i386_target_description): Add 'segments' parameter to enable
+	segment base registers.
+
+2019-03-12  Eli Zaretskii  <eliz@gnu.org>
+
+	PR/24325
+	* source-cache.c: #undef open and close, to avoid unresolved
+	externals during linking.
+
+2019-03-12  Tom Tromey  <tromey@adacore.com>
+
+	* remote.c (magic_null_ptid, not_sent_ptid, any_thread_ptid): Now
+	const.  Add initializers.
+	(_initialize_remote): Don't initialize ptid globals.
+
+2019-03-12  Pedro Alves  <palves@redhat.com>
+
+	* yy-remap.h [TEST_CPNAMES] (YYFPRINTF): Don't define.
+
+2019-03-12  Pedro Alves  <palves@redhat.com>
+
+	* cp-name-parser.y (main): Remove unused 'len' variable.
+
+2019-03-12  Tom Tromey  <tromey@adacore.com>
+
+	* common/ptid.c (null_ptid, minus_one_ptid): Now const.
+	* common/ptid.h (null_ptid, minus_one_ptid): Now const.
+
+2019-03-12  Tom Tromey  <tromey@adacore.com>
+
+	* linux-nat.c (iterate_over_lwps): Update.
+	(stop_callback): Remove parameter.
+	(stop_wait_callback, detach_callback, resume_set_callback)
+	(select_singlestep_lwp_callback, set_ignore_sigint)
+	(status_callback, resumed_callback, resume_clear_callback)
+	(kill_callback, kill_wait_callback, linux_nat_stop_lwp): Remove
+	data parameter.
+	(linux_nat_target::detach, linux_nat_target::resume)
+	(linux_stop_and_wait_all_lwps, select_event_lwp)
+	(linux_nat_filter_event, linux_nat_wait_1)
+	(linux_nat_target::kill, linux_nat_target::stop)
+	(linux_nat_target::stop): Update.
+	(linux_nat_resume_callback): Change type.
+	(resume_stopped_resumed_lwps, count_events_callback)
+	(select_event_lwp_callback): Likewise.
+	(linux_stop_lwp, linux_nat_stop_lwp): Update.
+	* arm-linux-nat.c (struct update_registers_data): Remove.
+	(update_registers_callback): Change type.
+	(arm_linux_insert_hw_breakpoint1): Update.
+	* nat/x86-linux-dregs.c (update_debug_registers_callback): Remove
+	parameter.
+	(x86_linux_dr_set_addr): Update.
+	(x86_linux_dr_set_control): Update.
+	* nat/linux-nat.h (iterate_over_lwps_ftype): Remove parameter.
+	(iterate_over_lwps): Use gdb::function_view.
+	* nat/aarch64-linux-hw-point.c (struct
+	aarch64_dr_update_callback_param): Remove.
+	(debug_reg_change_callback): Change type.
+	(aarch64_notify_debug_reg_change): Update.
+	* s390-linux-nat.c (s390_refresh_per_info): Update.
+
+2019-03-11  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (dwarf2_find_containing_comp_unit): Remove
+	redundant assignment to "this_cu".
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type): Remove unnecessary cases from switch.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_set): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_struct): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_complex): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_float): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_bool): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_range): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_char): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_enum): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_int): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_func): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_array): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (rank_one_type_parm_ptr): New function extracted
+	from...
+	(rank_one_type): ... this.
+
+2019-02-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* inferior.c (initialize_inferiors): Ensure 'help set/show print
+	inferior-events' shows the example events.
+
+2019-03-08  Eli Zaretskii  <eliz@gnu.org>
+
+	Support styling on native MS-Windows console
+
+	PR/24315
+	* utils.c (can_emit_style_escape) [_WIN32]: Don't disable styling
+	on MS-Windows if $TERM is not defined.
+
+	* cli/cli-style.c: Set cli_styling to 1 in the MinGW build.
+
+	* posix-hdep.c (gdb_console_fputs):
+	* mingw-hdep.c (rgb_to_16colors, gdb_console_fputs): New
+	functions.
+	* ui-file.h (gdb_console_fputs): Add prototype.
+
+	* ui-file.c (stdio_file::puts): Call gdb_console_fputs, and fall
+	back to fputs only if the former returns zero.
+
+2019-03-07  Tom Tromey  <tom@tromey.com>
+
+	* symmisc.c (print_symbol_bcache_statistics): Update.
+	(print_objfile_statistics): Update.
+	* symfile.c (allocate_symtab): Update.
+	* stabsread.c: Don't include bcache.h.
+	* psymtab.h (struct psymbol_bcache): Don't declare.
+	(class psymtab_storage) <psymbol_cache>: Now a bcache.
+	(psymbol_bcache_init, psymbol_bcache_free)
+	(psymbol_bcache_get_bcache): Don't declare.
+	* psymtab.c (struct psymbol_bcache): Remove.
+	(psymtab_storage::psymtab_storage): Update.
+	(psymtab_storage::~psymtab_storage): Update.
+	(psymbol_bcache_init, psymbol_bcache_free)
+	(psymbol_bcache_get_bcache, psymbol_bcache_full): Remove.
+	(add_psymbol_to_bcache): Update.
+	(allocate_psymtab): Update.
+	* objfiles.h (struct objfile_per_bfd_storage) <filename_cache,
+	macro_cache>: No longer pointers.
+	* objfiles.c (get_objfile_bfd_data): Don't call bcache_xmalloc.
+	(free_objfile_per_bfd_storage): Don't call bcache_xfree.
+	* macrotab.c (macro_bcache): Update.
+	* macroexp.c: Don't include bcache.h.
+	* gdbtypes.c (check_types_worklist): Update.
+	(types_deeply_equal): Remove TRY/CATCH.  Update.
+	* elfread.c (elf_symtab_read): Update.
+	* dwarf2read.c: Don't include bcache.h.
+	* buildsym.c (buildsym_compunit::get_macro_table): Update.
+	* bcache.h (bcache, bcache_full, bcache_xffree, bcache_xmalloc)
+	(print_bcache_statistics, bcache_memory_used): Don't declare.
+	(struct bcache): Move from bcache.c.  Add constructor, destructor,
+	methods.  Rename all data members.
+	* bcache.c (struct bcache): Move to bcache.h.
+	(bcache::expand_hash_table): Rename from expand_hash_table.
+	(bcache): Remove.
+	(bcache::insert): Rename from bcache_full.
+	(bcache::compare): Rename from bcache_compare.
+	(bcache_xmalloc): Remove.
+	(bcache::~bcache): Rename from bcache_xfree.
+	(bcache::print_statistics): Rename from print_bcache_statistics.
+	(bcache::memory_used): Rename from bcache_memory_used.
+
+2019-03-07  Pedro Alves  <palves@redhat.com>
+
+	* infrun.c (normal_stop): Also check for
+	TARGET_WAITKIND_NO_RESUMED before referring to inferior_thread().
+
+2019-03-07  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-lang.c (value_from_host_double): Moved to...
+	* value.c (value_from_host_double): ...here.
+	* value.h (value_from_host_double): Declare.
+	* guile/scm-math.c (vlscm_convert_typed_number): Use
+	value_from_host_double.
+	(vlscm_convert_number): Likewise.
+	* guile/scm-value.c (gdbscm_value_to_real): Likewise.
+	* python/py-value.c (convert_value_from_python): Likewise.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* gcore.c (write_gcore_file): Use SCOPE_EXIT.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* utils.h (free_current_contents): Don't declare.
+	* utils.c (free_current_contents): Remove.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* top.c (quit_force): Update.
+	* main.c (captured_command_loop): Update.
+	* common/new-op.c (operator new): Update.
+	* common/common-exceptions.c (struct catcher)
+	<save_cleanup_chain>: Remove member.
+	(exceptions_state_mc_init): Update.
+	(exception_try_scope_entry): Return nullptr.
+	(exception_try_scope_exit, exception_rethrow)
+	(throw_exception_sjlj, throw_exception_cxx): Update.
+	* common/cleanups.h (make_cleanup, make_cleanup_dtor)
+	(all_cleanups, do_cleanups, discard_cleanups)
+	(discard_final_cleanups, save_cleanups, save_final_cleanups)
+	(restore_cleanups, restore_final_cleanups): Don't declare.
+	(do_final_cleanups): Remove parameter.
+	* common/cleanups.c (cleanup_chain, make_cleanup)
+	(make_cleanup_dtor, all_cleanups, do_cleanups)
+	(discard_my_cleanups, discard_cleanups)
+	(discard_final_cleanups, save_my_cleanups, save_cleanups)
+	(save_final_cleanups, restore_my_cleanups, restore_cleanups)
+	(null_cleanup): Remove.
+	(do_final_cleanups): Remove parameter.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* remote.c (remote_target::remote_parse_stop_reply): Use
+	unique_xmalloc_ptr.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* stabsread.c (struct stabs_field_info): Rename from field_info.
+	<list, fnlist>: Add initializers.
+	<obstack>: New member.
+	(read_member_functions, read_struct_fields, read_baseclasses):
+	Allocate on obstack.  Don't use cleanups.
+	(read_one_struct_field, read_member_functions, read_struct_fields)
+	(read_baseclasses, read_tilde_fields, attach_fn_fields_to_type)
+	(attach_fields_to_type, read_cpp_abbrev, read_member_functions)
+	(read_struct_type): Update.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* nat/linux-namespaces.c (linux_mntns_access_fs): Use SCOPE_EXIT.
+	* common/filestuff.h (make_cleanup_close): Don't declare.
+	* common/filestuff.c (do_close_cleanup, make_cleanup_close):
+	Remove.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* solib-aix.c: Use make_scope_exit.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* solib-svr4.c (svr4_parse_libraries, svr4_current_sos_direct):
+	Use make_scope_exit.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* solib-svr4.c (disable_probes_interface): Remove parameter.
+	(svr4_handle_solib_event): Use make_scope_exit.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* remote.c (struct stop_reply_deleter): Remove.
+	(stop_reply_up): Update.
+	(struct stop_reply): Derive from notif_event.  Don't typedef.
+	<regcache>: Now a std::vector.
+	(stop_reply_xfree): Remove.
+	(stop_reply::~stop_reply): Rename from stop_reply_dtr.
+	(remote_notif_stop_alloc_reply): Return a unique_ptr.  Use new.
+	(remote_target::discard_pending_stop_replies): Use delete.
+	(remote_target::remote_parse_stop_reply): Update.
+	(remote_target::process_stop_reply): Update.
+	* remote-notif.h (struct notif_event): Add virtual destructor.
+	Remove "dtr" member.
+	(struct notif_client) <alloc_event>: Return a unique_ptr.
+	(notif_event_xfree): Don't declare.
+	(notif_event_up): New typedef.
+	* remote-notif.c (remote_notif_ack, remote_notif_parse): Update.
+	(notif_event_xfree, do_notif_event_xfree): Remove.
+	(remote_notif_state_xfree): Update.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* infrun.c (displaced_step_clear_cleanup): Now a
+	forward_scope_exit type.
+	(displaced_step_prepare_throw): Update.
+	(displaced_step_fixup): Update.
+
+2019-03-06  Tom Tromey  <tom@tromey.com>
+
+	* inferior.h (class inferior): Update comment.
+	* gdbthread.h (class thread_info): Update comment.
+
+2019-03-06  Joel Brobecker  <brobecker@adacore.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* stabsread.h (struct stab_section_list): Remove.
+	(coffstab_build_psymtabs): Update.
+	* dbxread.c (symbuf_sections): Now a std::vector.
+	(sect_idx): New global.
+	(fill_symbuf): Update.
+	(coffstab_build_psymtabs): Change type of stabsects parameter.
+	Update.
+	* coffread.c (struct coff_symfile_info) <stabsects>: Now a
+	std::vector.
+	(linetab, linetab_offset, linetab_size, stringtab): Move earlier.
+	(coff_locate_sections): Update.
+	(coff_symfile_read): Remove cleanups.  Update.
+	(init_stringtab): Add storage parameter.
+	(free_stringtab, free_stringtab_cleanup): Remove.
+	(init_lineno): Add storage parameter.
+	(free_linetab, free_linetab_cleanup): Remove.
+
+2019-03-06  Pedro Alves  <palves@redhat.com>
+
+	* linux-fork.c (fork_info::clobber_regs): Delete.
+	(fork_load_infrun_state): Remove reference to 'clobber_regs'.
+	(fork_save_infrun_state): Remove 'clobber_regs' parameter.  Update
+	comment.  Adjust.
+	(scoped_switch_fork_info::scoped_switch_fork_info)
+	(checkpoint_command, linux_fork_context): Adjust
+	fork_save_infrun_state calls.
+
+2019-03-06  Pedro Alves  <palves@redhat.com>
+
+	* linux-fork.c (inf_has_multiple_thread_cb): Delete.
+	(inf_has_multiple_threads): Return 'bool' and rewrite using
+	inferior_info::threads().
+
+2019-03-06  Pedro Alves  <palves@redhat.com>
+
+	* linux-fork.c: Include <list>.
+	(fork_list): Now a std::list instance.
+	(fork_info): Add ctor, dtor, and in-class initialize all fields.
+	(forks_exist_p, find_last_fork): Adjust.
+	(new_fork): Delete.
+	(one_fork_p): New.
+	(add_fork): Adjust.
+	(free_fork): Delete, folded into fork_info::~fork_info().
+	(delete_fork, find_fork_ptid, find_fork_id, find_fork_pid):
+	Adjust.
+	(init_fork_list): Delete.
+	(linux_fork_killall, linux_fork_mourn_inferior)
+	(linux_fork_detach, info_checkpoints_command): Adjust.
+	(_initialize_linux_fork): No longer call init_fork_list.
+
+2019-03-06  Pedro Alves  <palves@redhat.com>
+
+	* linux-fork.c (new_fork): New, split out of ...
+	(add_fork): ... this.  Return void.  Move "first fork" special
+	case from here, to ...
+	(checkpoint_command): ... here.
+	* linux-linux.h (add_fork): Return void.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-exp.y (direct_abs_decl): Handle TYPE*SIZE type names.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Chris January  <chris.january@arm.com>
+	    David Lecomber  <david.lecomber@arm.com>
+
+	* f-exp.y: New token, UNOP_INTRINSIC.
+	(exp): New pattern using UNOP_INTRINSIC token.
+	(f77_keywords): Add 'abs' keyword.
+	* f-lang.c: Add 'target-float.h' and 'math.h' includes.
+	(value_from_host_double): New function.
+	(evaluate_subexp_f): Support UNOP_ABS.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-lang.c (build_fortran_types): Use TYPE_CODE_CHAR for character
+	types.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-exp.y (convert_to_kind_type): Handle integer (kind=8).
+	* f-lang.c (build_fortran_types): Setup builtin_integer_s8.
+	* f-lang.h (struct builtin_f_type): Add builtin_integer_s8 field.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-exp.y (convert_to_kind_type): Handle more type kinds.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Chris January  <chris.january@arm.com>
+
+	* expprint.c (dump_subexp_body_standard): Support UNOP_KIND.
+	* f-exp.y: Define 'KIND' token.
+	(exp): New pattern for KIND expressions.
+	(ptype): Handle types with a kind extension.
+	(direct_abs_decl): Extend to spot kind extensions.
+	(f77_keywords): Add 'kind' to the list.
+	(push_kind_type): New function.
+	(convert_to_kind_type): New function.
+	* f-lang.c (evaluate_subexp_f): Support UNOP_KIND.
+	* parse.c (operator_length_standard): Likewise.
+	* parser-defs.h (enum type_pieces): Add tp_kind.
+	* std-operator.def: Add UNOP_KIND.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-exp.y (f_parse): Set yydebug.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-lang.c (evaluate_subexp_f): New function.
+	(exp_descriptor_f): New global.
+	(f_language_defn): Use exp_descriptor_f instead of
+	exp_descriptor_standard.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-exp.y (struct token): Add comments.
+	(dot_ops): Remove uppercase versions and the end marker.
+	(f77_keywords): Likewise.
+	(yylex): Use ARRAY_SIZE to iterate over dot_ops, assert all
+	entries in the dot_ops array are case insensitive, and use
+	strncasecmp to compare strings.  Also some whitespace cleanup in
+	this area.  Similar for the f77_keywords array, except entries in
+	this list might be case sensitive.
+
+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-exp.y (struct f77_boolean_val): Add comments.
+	(boolean_values): Remove uppercase versions, and end marker.
+	(yylex): Use ARRAY_SIZE for iterating over boolean_values array,
+	and use strncasecmp to achieve case insensitivity.  Additionally,
+	perform whitespace cleanup around this code.
+
+2019-03-06  Tom Tromey  <tromey@adacore.com>
+
+	* remote-sim.c (gdbsim_target_open): Use result of
+	gdb_argv::release.
+
+2019-03-06  Richard Bunt  <richard.bunt@arm.com>
+	Dirk Schubert  <dirk.schubert@arm.com>
+	Chris January  <chris.january@arm.com>
+
+	* eval.c (evaluate_subexp_standard): Call Fortran argument
+	wrapping logic.
+	* f-lang.c (struct value): A value which can be passed into a
+	Fortran function call.
+	(fortran_argument_convert): Wrap Fortran arguments in a pointer
+	where appropriate.
+	(struct type): Value ready for a Fortran function call.
+	(fortran_preserve_arg_pointer): Undo check_typedef, the pointer
+	is needed.
+	* f-lang.h (fortran_argument_convert): Declaration.
+	(fortran_preserve_arg_pointer): Declaration.
+	* infcall.c (value_arg_coerce): Call Fortran argument logic.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* python/py-prettyprint.c (print_string_repr): Remove #if.
+	* python/py-utils.c (unicode_to_encoded_string): Remove #if.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* target.c (the_dummy_target): Move later.  Change type to
+	"dummy_target".
+	(initialize_targets): Don't initialize the_dummy_target.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* gdb_bfd.c (gdb_bfd_fdopenr): Remove.
+	* gdb_bfd.h (gdb_bfd_fdopenr): Don't declare.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat_target::attach)
+	(windows_nat_target::detach): Don't call gdb_flush.
+	* valprint.c (generic_val_print, val_print, val_print_string):
+	Don't call gdb_flush.
+	* utils.c (defaulted_query): Don't call gdb_flush.
+	* typeprint.c (print_type_scalar): Don't call gdb_flush.
+	* target.c (target_announce_detach): Don't call gdb_flush.
+	* sparc64-tdep.c (adi_print_versions): Don't call gdb_flush.
+	* remote.c (extended_remote_target::attach): Don't call
+	gdb_flush.
+	* procfs.c (procfs_target::detach): Don't call gdb_flush.
+	* printcmd.c (do_examine): Don't call gdb_flush.
+	(info_display_command): Don't call gdb_flush.
+	* p-valprint.c (pascal_val_print): Don't call gdb_flush.
+	* nto-procfs.c (nto_procfs_target::attach): Don't call gdb_flush.
+	* memattr.c (info_mem_command): Don't call gdb_flush.
+	* mdebugread.c (mdebug_build_psymtabs): Don't call gdb_flush.
+	* m2-valprint.c (m2_val_print): Don't call gdb_flush.
+	* infrun.c (follow_exec, handle_command): Don't call gdb_flush.
+	* inf-ptrace.c (inf_ptrace_target::attach): Don't call gdb_flush.
+	* hppa-tdep.c (unwind_command): Don't call gdb_flush.
+	* gnu-nat.c (gnu_nat_target::attach): Don't call gdb_flush.
+	(gnu_nat_target::detach): Don't call gdb_flush.
+	* f-valprint.c (f_val_print): Don't call gdb_flush.
+	* darwin-nat.c (darwin_nat_target::attach): Don't call gdb_flush.
+	* cli/cli-script.c (read_command_lines): Don't call gdb_flush.
+	* cli/cli-cmds.c (shell_escape, print_disassembly): Don't call
+	gdb_flush.
+	* c-valprint.c (c_val_print): Don't call gdb_flush.
+	* ada-valprint.c (ada_print_scalar): Don't call gdb_flush.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* varobj.c (update_dynamic_varobj_children): Update.
+	(install_default_visualizer): Use reset, not release.
+	* value.c (set_internalvar): Update.
+	* dwarf2loc.c (value_of_dwarf_reg_entry): Update.
+	* common/gdb_ref_ptr.h (class ref_ptr) <release>: Add
+	ATTRIBUTE_UNUSED_RESULT.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* remote.c (class scoped_remote_fd) <release>: Add
+	ATTRIBUTE_UNUSED_RESULT.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* macroexp.c (struct macro_buffer) <release>: Add
+	ATTRIBUTE_UNUSED_RESULT.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* nat/linux-btrace.c (linux_enable_bts, linux_enable_pt): Update.
+	* common/scoped_mmap.h (class scoped_mmap) <release>: Add
+	ATTRIBUTE_UNUSED_RESULT.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* common/scoped_fd.h (class scoped_fd) <release>: Add
+	ATTRIBUTE_UNUSED_RESULT.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* parser-defs.h (struct parser_state) <release>: Add
+	ATTRIBUTE_UNUSED_RESULT.
+
+2019-03-05  Tom Tromey  <tromey@adacore.com>
+
+	* utils.h (class gdb_argv) <release>: Add
+	ATTRIBUTE_UNUSED_RESULT.
+	* common/common-defs.h (ATTRIBUTE_UNUSED_RESULT): Define.
+
+2019-03-02  Eli Zaretskii  <eliz@gnu.org>
+
+	* xml-syscall.c (xml_list_syscalls_by_group): Drop 'struct' from
+	for-loop range, to avoid compiler warnings.
+
+	* tui/tui.c (tui_enable) [__MINGW32__]: Don't declare 'cap', to
+	avoid compiler warnings about unused variables.
+
+	* NEWS: Mention end of support for native debugging on MS-Windows
+	before XP.
+
+	PR gdb/24292
+	* common/netstuff.c:
+	* gdbserver/gdbreplay.c
+	* gdbserver/remote-utils.c:
+	* ser-tcp.c:
+	* unittests/parse-connection-spec-selftests.c [USE_WIN32API]:
+	Include ws2tcpip.h instead of wsiapi.h and winsock2.h.  Redefine
+	_WIN32_WINNT to 0x0501 if defined to a smaller value, as
+	'getaddrinfo' and 'freeaddrinfo' were not available before
+	Windows XP, and mingw.org's MinGW headers by default define
+	_WIN32_WINNT to 0x500.
+
+2019-03-01  Gary Benson <gbenson@redhat.com>
+
+	* coffread.c (coff_start_symtab): Remove unnecessary xstrdup.
+
+2019-02-28  Brian Vandenberg  <phantall@gmail.com>
+	    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	PR gdb/8527
+	* procfs.c (proc_wait_for_stop): Wrap write of PCWSTOP in
+	set_sigint_trap, clear_sigint_trap.
+
+2019-02-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* target.c (target_detach): Clear the regcache and the
+	frame cache.
+
+2019-02-27  Pedro Alves  <palves@redhat.com>
+
+	* utils.c (set_screen_size): When we cap the height/width sizes,
+	tweak the corresponding command variable to show "unlimited":
+
+2019-02-27  Saagar Jha  <saagar@saagarjha.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* utils.c (set_screen_size): Reduce "infinite" rows and columns
+	before calling rl_set_screen_size.
+
+2019-02-27  Tom Tromey  <tromey@adacore.com>
+
+	* configure.ac (HAVE_LIBPYTHON2_4, HAVE_LIBPYTHON2_5): Never
+	define.
+	* python/py-value.c: Remove Python 2.4 workaround.
+	* python/py-utils.c (gdb_pymodule_addobject): Remove Python 2.4
+	workaround.
+	* python/py-type.c (convert_field, gdbpy_initialize_types): Remove
+	Python 2.4 workaround.
+	* python/python-internal.h: Remove Python 2.4 comment.
+	(Py_ssize_t): Don't define.
+	(PyVarObject_HEAD_INIT, Py_TYPE): Don't define.
+	(gdb_Py_DECREF): Remove Python 2.4 workaround.
+	(gdb_PyObject_GetAttrString, PyObject_GetAttrString): Remove.
+	(gdb_PyObject_HasAttrString, PyObject_HasAttrString): Remove.
+	* python/python.c (do_start_initialization): Remove Python 2.4
+	workaround.
+	* python/py-prettyprint.c (class dummy_python_frame): Remove.
+	(print_children): Remove Python 2.4 workaround.
+	* python/py-inferior.c (buffer_procs): Remove Python 2.4
+	workaround.
+	(CHARBUFFERPROC_NAME): Remove.
+	* python/py-breakpoint.c (gdbpy_initialize_breakpoints): Remove
+	Python 2.4 workaround.
+
+2019-02-27  Kevin Buettner  <kevinb@redhat.com>
+
+	* NEWS: Note minimum Python version.
+
+2019-02-27  Kevin Buettner  <kevinb@redhat.com>
+
+	* python/py-inferior.c (infpy_write_memory): Remove non-IS_PY3K
+	code from these functions.  Remove corresponding ifdefs.  Use
+	Py_buffer_up instead of explicit calls to PyBuffer_Release.
+	Remove gotos and target of gotos.
+	(infpy_search_memory): Likewise.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* hppa-tdep.c (hppa_dummy_id): Delete.
+	(hppa_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* h8300-tdep.c (h8300_unwind_pc): Delete.
+	(h8300_unwind_sp): Delete.
+	(h8300_dummy_id): Delete.
+	(h8300_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ft32-tdep.c (ft32_dummy_id): Delete.
+	(ft32_unwind_pc): Delete.
+	(ft32_unwind_sp): Delete.
+	(ft32_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* frv-tdep.c (frv_dummy_id): Delete.
+	(frv_unwind_pc): Delete.
+	(frv_unwind_sp): Delete.
+	(frv_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_dummy_id): Delete.
+	(riscv_unwind_pc): Delete.
+	(riscv_unwind_sp): Delete.
+	(riscv_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* csky-tdep.c (csky_dummy_id): Delete.
+	(csky_unwind_pc): Delete.
+	(csky_unwind_sp): Delete.
+	(csky_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cris-tdep.c (cris_dummy_id): Delete.
+	(cris_unwind_pc): Delete.
+	(cris_unwind_sp): Delete.
+	(cris_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* bfin-tdep.c (bfin_dummy_id): Delete.
+	(bfin_unwind_pc): Delete.
+	(bfin_gdbarch_init): Don't register deleted functions with gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arm-tdep.c (arm_dummy_id): Delete.
+	(arm_unwind_pc): Delete.
+	(arm_unwind_sp): Delete.
+	(arm_gdbarch_init): Don't register deleted functions with gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arc-tdep.c (arc_dummy_id): Delete.
+	(arc_unwind_pc): Delete.
+	(arc_unwind_sp): Delete.
+	(arc_gdbarch_init): Don't register deleted functions with gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* alpha-tdep.c (alpha_dummy_id): Delete.
+	(alpha_unwind_pc): Delete.
+	(alpha_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* aarch64-tdep.c (aarch64_dummy_id): Delete.
+	(aarch64_unwind_pc): Delete.
+	(aarch64_unwind_sp): Delete.
+	(aarch64_gdbarch_init): Don't register deleted functions with
+	gdbarch.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbtypes.c (type_align): Don't consider static members when
+	computing structure alignment.
+
+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arc-tdep.c (arc_type_align): Provide alignment for basic types,
+	return 0 for other types.
+	* arch-utils.c (default_type_align): Always return 0.
+	* gdbarch.h: Regenerate.
+	* gdbarch.sh (type_align): Extend comment.
+	* gdbtypes.c (type_align): Add additional comments, always call
+	gdbarch_type_align before applying the default rules.
+	* i386-tdep.c (i386_type_align): Return 0 as the default rule,
+	generic code will then apply a suitable default.
+	* nios2-tdep.c (nios2_type_align): Provide alignment for basic
+	types, return 0 for other types.
+
+2019-02-27  Joel Brobecker  <brobecker@adacore.com>
+
+	* NEWS: Create a new section for the next release branch.
+	Rename the section of the current branch, now that it has
+	been cut.
+
+2019-02-27  Joel Brobecker  <brobecker@adacore.com>
+
+	GDB 8.3 branch created (143420fb0d5ae54323ba9953f0818c194635228d):
+	* version.in: Bump version to 8.3.50.DATE-git.
+
+2019-02-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aix-thread.c (ptid_cmp): Remove unused variable.
+	(get_signaled_thread): Likewise.
+	(store_regs_user_thread): Likewise.
+	(store_regs_kernel_thread): Likewise.
+	(fetch_regs_kernel_thread): Remove shadowed variable.
+
+2019-02-26  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* features/riscv/32bit-cpu.xml: Add register numbers.
+	* features/riscv/32bit-fpu.c: Regenerate.
+	* features/riscv/32bit-fpu.xml: Add register numbers.
+	* features/riscv/64bit-cpu.xml: Add register numbers.
+	* features/riscv/64bit-fpu.c: Regenerate.
+	* features/riscv/64bit-fpu.xml: Add register numbers.
+
+2019-02-26  Kevin Buettner  <kevinb@redhat.com>
+
+	* NEWS: Mention two argument form of gdb.Value constructor.
+	* python/py-value.c (convert_buffer_and_type_to_value): New
+	function.
+	(valpy_new): Parse arguments via gdb_PyArg_ParseTupleAndKeywords.
+	Add support for handling an optional second argument.  Call
+	convert_buffer_and_type_to_value as appropriate.
+	* python/python-internal.h (Py_buffer_deleter): New struct.
+	(Py_buffer_up): New typedef.
+
+2019-02-25  John Baldwin  <jhb@FreeBSD.org>
+
+	* dwarf2read.c (dwarf2_get_dwz_file): Reset dwz_bfd to nullptr
+	instead of releasing ownership.
+
+2019-02-25  Jordan Rupprecht  <rupprecht@google.com>
+
+	* dwarf2read.c (open_and_init_dwp_file): Call
+	elf_numsections instead of bfd_count_sections to initialize
+	dwp_file->num_sections.
+
+2019-02-25  Tom Tromey  <tromey@adacore.com>
+
+	* solib-darwin.c (darwin_get_dyld_bfd): Don't release dyld_bfd.
+
+2019-02-23  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* gcore.in: Add '--readnever' option when invoking GDB.
+
+2019-02-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* MAINTAINERS: Update my email address.
+
+2019-02-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* build-id.c (build_id_to_debug_bfd_1): New function.
+	(build_id_to_debug_bfd): Look for separate debug file in
+	sysroot.
+
+2019-02-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbarch.sh: Update the copyright year range that is placed into
+	generated files.
+
+2019-02-22  Keith Seitz  <keiths@redhat.com>
+
+	PR symtab/23853
+	* linespec.c (create_sals_line_offset): Search for the default
+	symtab's filename instead of its fullname.
+
+2019-02-21  Alan Hayward  <alan.hayward@arm.com>
+
+	* NEWS: Update style defaults.
+
+2019-02-21  Alan Hayward  <alan.hayward@arm.com>
+
+	* main.c (captured_main_1): Disable styling in batch mode.
+
+2019-02-20  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (symtab_symbol_info): Fix typos.
+
+2019-02-20  Tom Tromey  <tromey@adacore.com>
+
+	* findcmd.c (_initialize_mem_search): Use upper case for
+	metasyntactic variables.
+
+2019-02-20  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aarch64_add_reggroups): New function.
+	(aarch64_gdbarch_init): Call aarch64_add_reggroups.
+
+2019-02-19  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* top.h (source_file_name): Change to std::string.
+	* top.c (source_file_name): Likewise.
+	(command_line_input): Adjust.
+	* cli/cli-script.c (script_from_file): Adjust.
+
+2019-02-19  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c
+	(ravenscar_thread_target::update_thread_list): Don't call
+	ada_build_task_list.
+	* ada-lang.h (ada_build_task_list): Don't declare.
+	* ada-tasks.c (struct ada_tasks_inferior_data)
+	<task_list_valid_p>: Now bool.
+	(read_known_tasks, ada_task_list_changed)
+	(ada_tasks_invalidate_inferior_data): Update.
+	(read_known_tasks_array): Return bool.
+	(read_known_tasks_list): Likewise.
+	(read_known_tasks): Return void.
+	(ada_build_task_list): Now static.
+
+2019-02-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbtypes.c (type_align): Allow alignment of TYPE_CODE_METHODPTR
+	and TYPE_CODE_MEMBERPTR to be overridden by the gdbarch.
+
+2019-02-18  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* ada-task.c (_initialize_tasks): Use 'with_cleanup' register
+	variant for ada_tasks_pspace_data_handle and
+	ada_tasks_inferior_data_handle.
+	(ada_tasks_pspace_data_cleanup): New function.
+	(ada_tasks_inferior_data_cleanup): New function.
+
+2019-02-17  Tom Tromey  <tom@tromey.com>
+
+	* macrotab.h (macro_source_fullname): Return a std::string.
+	* macrotab.c (macro_include, check_for_redefinition)
+	(macro_undef, macro_lookup_definition, foreach_macro)
+	(foreach_macro_in_scope): Update.
+	(macro_source_fullname): Return a std::string.
+	* macrocmd.c (show_pp_source_pos): Update.
+
+2019-02-17  Tom Tromey  <tom@tromey.com>
+
+	* macrocmd.c (show_pp_source_pos): Style the file names.
+
+2019-02-17  Tom Tromey  <tom@tromey.com>
+
+	PR tui/24197:
+	* tui/tui-source.c (tui_set_source_content_nil): Rewrite.
+
+2019-02-17  Tom Tromey  <tom@tromey.com>
+
+	* ada-lang.c (user_select_syms): Use filtered printing.
+	* utils.c (wrap_style): New global.
+	(desired_style): Remove.
+	(emit_style_escape): Add stream parameter.
+	(set_output_style, reset_terminal_style, prompt_for_continue):
+	Update.
+	(flush_wrap_buffer): Only flush gdb_stdout.
+	(wrap_here): Set wrap_style.
+	(fputs_maybe_filtered): Clear the wrap buffer on exception.  Don't
+	treat escape sequences as a character.  Change when wrap buffer is
+	flushed.
+	(fputs_styled): Do not set the output style when the default is
+	requested.
+	* ui-style.h (struct ui_file_style) <is_default>: New method.
+	* source.c (print_source_lines_base): Emit escape sequences in one
+	piece.
+
+2019-02-17  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdbtypes.c (type_align): Handle TYPE_CODE_RANGE the same as
+	integers and enumeration types.
+
+2019-02-17  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-lang.c (standard_lookup): Use ada_lookup_encoded_symbol
+	instead of lookup_symbol_in_language
+	(do_exact_match): New function.
+	(ada_get_symbol_name_matcher): Return do_exact_match when
+	doing a verbatim match.
+
+2019-02-15  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target::resume)
+	(ravenscar_thread_target::wait): Special case wildcard requests.
+
+2019-02-15  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (base_ptid): Remove.
+	(struct ravenscar_thread_target) <close>: New method.
+	<m_base_ptid>: New member.
+	<update_inferior_ptid, active_task, task_is_currently_active,
+	runtime_initialized>: Declare methods.
+	<ravenscar_thread_target>: Add constructor.
+	(ravenscar_thread_target::task_is_currently_active)
+	(ravenscar_thread_target::update_inferior_ptid)
+	(ravenscar_runtime_initialized): Rename.  Now methods.
+	(ravenscar_thread_target::resume, ravenscar_thread_target::wait)
+	(ravenscar_thread_target::update_thread_list): Update.
+	(ravenscar_thread_target::active_task): Now method.
+	(ravenscar_thread_target::store_registers)
+	(ravenscar_thread_target::prepare_to_store)
+	(ravenscar_thread_target::prepare_to_store)
+	(ravenscar_thread_target::mourn_inferior): Update.
+	(ravenscar_inferior_created): Use "new" to create target.
+	(ravenscar_thread_target::get_ada_task_ptid): Update.
+	(_initialize_ravenscar): Don't initialize base_ptid.
+	(ravenscar_ops): Remove global.
+
+2019-02-15  Tom Tromey  <tromey@adacore.com>
+
+	* target.h (push_target): Declare new overload.
+	* target.c (push_target): New overload, taking an rvalue reference.
+	* remote.c (remote_target::open_1): Use push_target overload.
+	* corelow.c (core_target_open): Use push_target overload.
+
+2019-02-15  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (is_ravenscar_task)
+	(ravenscar_task_is_currently_active): Return bool.
+	(ravenscar_update_inferior_ptid, get_running_thread_msymbol)
+	(_initialize_ravenscar): Remove "(void)".
+	(has_ravenscar_runtime, ravenscar_runtime_initialized): Likewise.
+	Return bool.
+
+2019-02-15  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_runtime_initializer)
+	(has_ravenscar_runtime, get_running_thread_id)
+	(ravenscar_thread_target::resume): Fix indentation.
+
+2019-02-15  Tom Tromey  <tromey@adacore.com>
+
+	* sparc-ravenscar-thread.c (struct sparc_ravenscar_ops): Derive
+	from ravenscar_arch_ops.
+	(sparc_ravenscar_ops::fetch_registers)
+	(sparc_ravenscar_ops::store_registers): Now methods.
+	(sparc_ravenscar_prepare_to_store): Remove.
+	(sparc_ravenscar_ops): Redefine.
+	* ravenscar-thread.h (struct ravenscar_arch_ops): Add virtual
+	methods and destructor.  Remove members.
+	* ravenscar-thread.c (ravenscar_thread_target::fetch_registers)
+	(ravenscar_thread_target::store_registers)
+	(ravenscar_thread_target::prepare_to_store): Update.
+	* ppc-ravenscar-thread.c (ppc_ravenscar_generic_prepare_to_store):
+	Remove.
+	(struct ppc_ravenscar_powerpc_ops): Derive from
+	ravenscar_arch_ops.
+	(ppc_ravenscar_powerpc_ops::fetch_registers)
+	(ppc_ravenscar_powerpc_ops::store_registers): Now methods.
+	(ppc_ravenscar_powerpc_ops): Redefine.
+	(struct ppc_ravenscar_e500_ops): Derive from ravenscar_arch_ops.
+	(ppc_ravenscar_e500_ops::fetch_registers)
+	(ppc_ravenscar_e500_ops::store_registers): Now methods.
+	(ppc_ravenscar_e500_ops): Redefine.
+	* aarch64-ravenscar-thread.c
+	(aarch64_ravenscar_generic_prepare_to_store): Remove.
+	(struct aarch64_ravenscar_ops): Derive from ravenscar_arch_ops.
+	(aarch64_ravenscar_fetch_registers)
+	(aarch64_ravenscar_store_registers): Now methods.
+	(aarch64_ravenscar_ops): Redefine.
+
+2019-02-15  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target::stopped_by_sw_breakpoint)
+	(ravenscar_thread_target::stopped_by_hw_breakpoint)
+	(ravenscar_thread_target::stopped_by_watchpoint)
+	(ravenscar_thread_target::stopped_data_address)
+	(ravenscar_thread_target::core_of_thread): Use scoped_restore.
+
+2019-02-15  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c: Fix some typos.
+
+2019-02-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	    Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_exception_sal): Change addr_string to a
+	std::string.
+	(create_ada_exception_catchpoint): Update.
+
+2019-02-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+	    Tom Tromey  <tromey@adacore.com>
+
+	* breakpoint.c (~bp_location): Rename from bp_location_dtor.
+	(bp_location_ops): Remove.
+	(base_breakpoint_allocate_location): Update.
+	(free_bp_location): Update.
+	* ada-lang.c (class ada_catchpoint_location)
+	<ada_catchpoint_location>: Remove ops parameter.
+	(ada_catchpoint_location_dtor): Remove.
+	(ada_catchpoint_location_ops): Remove.
+	(allocate_location_exception): Update.
+	* breakpoint.h (struct bp_location_ops): Remove.
+	(class bp_location) <bp_location>: Remove bp_location_ops
+	parameter.
+	<~bp_location>: Add destructor.
+	<ops>: Remove.
+
+2019-02-14  Thomas Schwinge  <thomas@codesourcery.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* remote.c (remote_target::remote_parse_stop_reply): Avoid using
+	'PATH_MAX'.
+
+2019-02-14  David Michael  <fedora.dm0@gmail.com>
+	    Samuel Thibault  <samuel.thibault@gnu.org>
+	    Thomas Schwinge  <thomas@codesourcery.com>
+
+	* gnu-nat.c (S_proc_getmsgport_reply, S_proc_task2proc_reply)
+	(S_proc_pid2proc_reply): Adjust to Hurd "proc" interface changes.
+
+2019-02-14  Thomas Schwinge  <thomas@codesourcery.com>
+
+	* gnu-nat.c (gnu_write_inferior, parse_int_arg, _parse_bool_arg)
+	(check_empty): Use "const char *".
+
+	* gnu-nat.c (gnu_nat_target::detach): Instead of
+	'detach_inferior (pid)' call
+	'detach_inferior (find_inferior_pid (pid))'.
+
+	* configure.nat [gdb_host == i386gnu] (NATDEPFILES): Add
+	'nat/fork-inferior.o'.
+	* gnu-nat.c: #include "nat/fork-inferior.h".
+
+	* gnu-nat.c (gnu_nat_target::detach): Instead of
+	'inf_child_maybe_unpush_target (ops)' call 'maybe_unpush_target'.
+	* gnu-nat.h: #include "inf-child.h".
+	* i386-gnu-nat.c (gnu_fetch_registers): Rename/move to
+	'i386_gnu_nat_target::fetch_registers'.
+	(gnu_store_registers): Rename/move to
+	'i386_gnu_nat_target::store_registers'.
+
+	* config/i386/nm-i386gnu.h: Don't "#include" any files.
+	* gnu-nat.h (mach_thread_info): New function.
+	* gnu-nat.c (thread_takeover_sc_cmd): Use it.
+
+	* config/i386/nm-i386gnu.h (gnu_target_pid_to_str): Remove.
+
+2019-02-14  Frederic Konrad  <konrad@adacore.com>
+
+	* riscv-rdep.c (riscv_type_alignment): Handle TYPE_CODE_RANGE.
+
+2019-02-14  Joel Brobecker  <brobecker@adacore.com>
+
+	* windows-nat.c (windows_add_thread): Add new parameter
+	"main_thread_p" with default value set to false.  Update
+	function documentation as well as all callers.
+	(windows_delete_thread): Likewise.
+	(fake_create_process): Update call to windows_add_thread.
+	(get_windows_debug_event) <CREATE_THREAD_DEBUG_EVENT>
+	<CREATE_PROCESS_DEBUG_EVENT>: Likewise.
+	<EXIT_THREAD_DEBUG_EVENT, EXIT_PROCESS_DEBUG_EVENT>: Update
+	call to windows_delete_thread.
+
+2019-02-13  Simon Marchi  <simon.marchi@ericsson.com>
+
+	* MAINTAINERS: Add Andrew Burgess as global maintainer.
+
+2019-02-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* symfile.c (find_separate_debug_file): Use canonical path of
+	sysroot with child_path instead of gdb_sysroot if it is valid.
+
+2019-02-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* symfile.c (find_separate_debug_file): Use child_path to
+	determine if an object file is under a sysroot.
+
+2019-02-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add
+	unittests/child-path-selftests.c.
+	* common/pathstuff.c (child_path): New function.
+	* common/pathstuff.h (child_path): New prototype.
+	* unittests/child-path-selftests.c: New file.
+
+2019-02-12  John Baldwin  <jhb@FreeBSD.org>
+
+	* symfile.c (find_separate_debug_file): Look for separate debug
+	files in debug directories under the sysroot.
+
+2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* symtab.h (struct minimal_symbol data_p): New const method.
+	(struct minimal_symbol text_p): Likewise.
+	* symtab.c (output_source_filename): Use file name style
+	to print file name.
+	(print_symbol_info): Likewise.
+	(print_msymbol_info): Use address style to print addresses.
+	Use function name style to print executable text symbols.
+	(expand_symtab_containing_pc): Use data_p.
+	(find_pc_sect_compunit_symtab): Likewise.
+
+2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* breakpoint.c (describe_other_breakpoints): Use address style
+	to print addresses.
+	(say_where): Likewise.
+
+2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* ada-typeprint.c (print_func_type): Print function name
+	style to print function name.
+	* c-typeprint.c (c_print_type_1): Likewise.
+
+2019-02-11  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-linux-tdep.c (aarch64_linux_get_syscall_number): Check
+	for execve.
+
+2019-02-10  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* c-exp.y (direct_abs_decl): Use emplace_back to record the
+	type_stack.
+
+2019-02-10  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-varobj.c (ada_value_is_changeable_p): Add handling of
+	TYPE_CODE_REF types.
+
+2019-02-08  Jim Wilson  <jimw@sifive.com>
+
+	* riscv-linux-tdep.c (riscv_linux_fregmap): New.
+	(riscv_linux_fregset): New.
+	(riscv_linux_iterate_over_regset_sections): Call cb for .reg2 section.
+
+2019-02-07  Tom Tromey  <tom@tromey.com>
+
+	* thread.c (thread_cancel_execution_command): Update.
+	* thread-fsm.h (struct thread_fsm): Add constructor, destructor,
+	methods.
+	(struct thread_fsm_ops): Remove.
+	(thread_fsm_ctor, thread_fsm_delete, thread_fsm_clean_up)
+	(thread_fsm_should_stop, thread_fsm_return_value)
+	(thread_fsm_set_finished, thread_fsm_finished_p)
+	(thread_fsm_async_reply_reason, thread_fsm_should_notify_stop):
+	Don't declare.
+	* mi/mi-interp.c (mi_on_normal_stop_1): Update.
+	* infrun.c (clear_proceed_status_thread)
+	(clean_up_just_stopped_threads_fsms, fetch_inferior_event)
+	(print_stop_event): Update.
+	* infcmd.c (struct step_command_fsm): Inherit from thread_fsm.
+	Add constructor.
+	(step_command_fsm_ops): Remove.
+	(new_step_command_fsm): Remove.
+	(step_1): Update.
+	(step_command_fsm::should_stop): Rename from
+	step_command_fsm_should_stop.
+	(step_command_fsm::clean_up): Rename from
+	step_command_fsm_clean_up.
+	(step_command_fsm::do_async_reply_reason): Rename from
+	step_command_fsm_async_reply_reason.
+	(struct until_next_fsm): Inherit from thread_fsm.  Add
+	constructor.
+	(until_next_fsm_ops): Remove.
+	(new_until_next_fsm): Remove.
+	(until_next_fsm::should_stop): Rename from
+	until_next_fsm_should_stop.
+	(until_next_fsm::clean_up): Rename from until_next_fsm_clean_up.
+	(until_next_fsm::do_async_reply_reason): Rename from
+	until_next_fsm_async_reply_reason.
+	(struct finish_command_fsm): Inherit from thread_fsm.  Add
+	constructor.  Change type of breakpoint.
+	(finish_command_fsm_ops): Remove.
+	(new_finish_command_fsm): Remove.
+	(finish_command_fsm::should_stop): Rename from
+	finish_command_fsm_should_stop.
+	(finish_command_fsm::clean_up): Rename from
+	finish_command_fsm_clean_up.
+	(finish_command_fsm::return_value): Rename from
+	finish_command_fsm_return_value.
+	(finish_command_fsm::do_async_reply_reason): Rename from
+	finish_command_fsm_async_reply_reason.
+	(finish_command): Update.
+	* infcall.c (struct call_thread_fsm): Inherit from thread_fsm.
+	Add constructor.
+	(call_thread_fsm_ops): Remove.
+	(call_thread_fsm::call_thread_fsm): Rename from
+	new_call_thread_fsm.
+	(call_thread_fsm::should_stop): Rename from
+	call_thread_fsm_should_stop.
+	(call_thread_fsm::should_notify_stop): Rename from
+	call_thread_fsm_should_notify_stop.
+	(run_inferior_call, call_function_by_hand_dummy): Update.
+	* cli/cli-interp.c (should_print_stop_to_console): Update.
+	* breakpoint.c (struct until_break_fsm): Inherit from thread_fsm.
+	Add constructor.  Change type of location_breakpoint,
+	caller_breakpoint.
+	(until_break_fsm_ops): Remove.
+	(new_until_break_fsm): Remove.
+	(until_break_fsm::should_stop): Rename from
+	until_break_fsm_should_stop.
+	(until_break_fsm::clean_up): Rename from
+	until_break_fsm_clean_up.
+	(until_break_fsm::do_async_reply_reason): Rename from
+	until_break_fsm_async_reply_reason.
+	(until_break_command): Update.
+	* thread-fsm.c: Remove.
+	* Makefile.in (COMMON_SFILES): Remove thread-fsm.c.
+
+2019-02-07  Tom Tromey  <tom@tromey.com>
+
+	* yy-remap.h: Add include guard.
+	* xtensa-tdep.h: Add include guard.
+	* xcoffread.h: Rename include guard.
+	* varobj-iter.h: Add include guard.
+	* tui/tui.h: Rename include guard.
+	* tui/tui-winsource.h: Rename include guard.
+	* tui/tui-wingeneral.h: Rename include guard.
+	* tui/tui-windata.h: Rename include guard.
+	* tui/tui-win.h: Rename include guard.
+	* tui/tui-stack.h: Rename include guard.
+	* tui/tui-source.h: Rename include guard.
+	* tui/tui-regs.h: Rename include guard.
+	* tui/tui-out.h: Rename include guard.
+	* tui/tui-layout.h: Rename include guard.
+	* tui/tui-io.h: Rename include guard.
+	* tui/tui-hooks.h: Rename include guard.
+	* tui/tui-file.h: Rename include guard.
+	* tui/tui-disasm.h: Rename include guard.
+	* tui/tui-data.h: Rename include guard.
+	* tui/tui-command.h: Rename include guard.
+	* tic6x-tdep.h: Add include guard.
+	* target/waitstatus.h: Rename include guard.
+	* target/wait.h: Rename include guard.
+	* target/target.h: Rename include guard.
+	* target/resume.h: Rename include guard.
+	* target-float.h: Rename include guard.
+	* stabsread.h: Add include guard.
+	* rs6000-tdep.h: Add include guard.
+	* riscv-fbsd-tdep.h: Add include guard.
+	* regformats/regdef.h: Rename include guard.
+	* record.h: Rename include guard.
+	* python/python.h: Rename include guard.
+	* python/python-internal.h: Rename include guard.
+	* python/py-stopevent.h: Rename include guard.
+	* python/py-ref.h: Rename include guard.
+	* python/py-record.h: Rename include guard.
+	* python/py-record-full.h: Rename include guard.
+	* python/py-record-btrace.h: Rename include guard.
+	* python/py-instruction.h: Rename include guard.
+	* python/py-events.h: Rename include guard.
+	* python/py-event.h: Rename include guard.
+	* procfs.h: Add include guard.
+	* proc-utils.h: Add include guard.
+	* p-lang.h: Add include guard.
+	* or1k-tdep.h: Rename include guard.
+	* observable.h: Rename include guard.
+	* nto-tdep.h: Rename include guard.
+	* nat/x86-linux.h: Rename include guard.
+	* nat/x86-linux-dregs.h: Rename include guard.
+	* nat/x86-gcc-cpuid.h: Add include guard.
+	* nat/x86-dregs.h: Rename include guard.
+	* nat/x86-cpuid.h: Rename include guard.
+	* nat/ppc-linux.h: Rename include guard.
+	* nat/mips-linux-watch.h: Rename include guard.
+	* nat/linux-waitpid.h: Rename include guard.
+	* nat/linux-ptrace.h: Rename include guard.
+	* nat/linux-procfs.h: Rename include guard.
+	* nat/linux-osdata.h: Rename include guard.
+	* nat/linux-nat.h: Rename include guard.
+	* nat/linux-namespaces.h: Rename include guard.
+	* nat/linux-btrace.h: Rename include guard.
+	* nat/glibc_thread_db.h: Rename include guard.
+	* nat/gdb_thread_db.h: Rename include guard.
+	* nat/gdb_ptrace.h: Rename include guard.
+	* nat/fork-inferior.h: Rename include guard.
+	* nat/amd64-linux-siginfo.h: Rename include guard.
+	* nat/aarch64-sve-linux-sigcontext.h: Rename include guard.
+	* nat/aarch64-sve-linux-ptrace.h: Rename include guard.
+	* nat/aarch64-linux.h: Rename include guard.
+	* nat/aarch64-linux-hw-point.h: Rename include guard.
+	* mn10300-tdep.h: Add include guard.
+	* mips-linux-tdep.h: Add include guard.
+	* mi/mi-parse.h: Rename include guard.
+	* mi/mi-out.h: Rename include guard.
+	* mi/mi-main.h: Rename include guard.
+	* mi/mi-interp.h: Rename include guard.
+	* mi/mi-getopt.h: Rename include guard.
+	* mi/mi-console.h: Rename include guard.
+	* mi/mi-common.h: Rename include guard.
+	* mi/mi-cmds.h: Rename include guard.
+	* mi/mi-cmd-break.h: Rename include guard.
+	* m2-lang.h: Add include guard.
+	* location.h: Rename include guard.
+	* linux-record.h: Rename include guard.
+	* linux-nat.h: Add include guard.
+	* linux-fork.h: Add include guard.
+	* i386-darwin-tdep.h: Rename include guard.
+	* hppa-linux-offsets.h: Add include guard.
+	* guile/guile.h: Rename include guard.
+	* guile/guile-internal.h: Rename include guard.
+	* gnu-nat.h: Rename include guard.
+	* gdb-stabs.h: Rename include guard.
+	* frv-tdep.h: Add include guard.
+	* f-lang.h: Add include guard.
+	* event-loop.h: Add include guard.
+	* darwin-nat.h: Rename include guard.
+	* cp-abi.h: Rename include guard.
+	* config/sparc/nm-sol2.h: Rename include guard.
+	* config/nm-nto.h: Rename include guard.
+	* config/nm-linux.h: Add include guard.
+	* config/i386/nm-i386gnu.h: Rename include guard.
+	* config/djgpp/nl_types.h: Rename include guard.
+	* config/djgpp/langinfo.h: Rename include guard.
+	* compile/gcc-cp-plugin.h: Add include guard.
+	* compile/gcc-c-plugin.h: Add include guard.
+	* compile/compile.h: Rename include guard.
+	* compile/compile-object-run.h: Rename include guard.
+	* compile/compile-object-load.h: Rename include guard.
+	* compile/compile-internal.h: Rename include guard.
+	* compile/compile-cplus.h: Rename include guard.
+	* compile/compile-c.h: Rename include guard.
+	* common/xml-utils.h: Rename include guard.
+	* common/x86-xstate.h: Rename include guard.
+	* common/version.h: Rename include guard.
+	* common/vec.h: Rename include guard.
+	* common/tdesc.h: Rename include guard.
+	* common/selftest.h: Rename include guard.
+	* common/scoped_restore.h: Rename include guard.
+	* common/scoped_mmap.h: Rename include guard.
+	* common/scoped_fd.h: Rename include guard.
+	* common/safe-iterator.h: Rename include guard.
+	* common/run-time-clock.h: Rename include guard.
+	* common/refcounted-object.h: Rename include guard.
+	* common/queue.h: Rename include guard.
+	* common/ptid.h: Rename include guard.
+	* common/print-utils.h: Rename include guard.
+	* common/preprocessor.h: Rename include guard.
+	* common/pathstuff.h: Rename include guard.
+	* common/observable.h: Rename include guard.
+	* common/netstuff.h: Rename include guard.
+	* common/job-control.h: Rename include guard.
+	* common/host-defs.h: Rename include guard.
+	* common/gdb_wait.h: Rename include guard.
+	* common/gdb_vecs.h: Rename include guard.
+	* common/gdb_unlinker.h: Rename include guard.
+	* common/gdb_unique_ptr.h: Rename include guard.
+	* common/gdb_tilde_expand.h: Rename include guard.
+	* common/gdb_sys_time.h: Rename include guard.
+	* common/gdb_string_view.h: Rename include guard.
+	* common/gdb_splay_tree.h: Rename include guard.
+	* common/gdb_setjmp.h: Rename include guard.
+	* common/gdb_ref_ptr.h: Rename include guard.
+	* common/gdb_optional.h: Rename include guard.
+	* common/gdb_locale.h: Rename include guard.
+	* common/gdb_assert.h: Rename include guard.
+	* common/filtered-iterator.h: Rename include guard.
+	* common/filestuff.h: Rename include guard.
+	* common/fileio.h: Rename include guard.
+	* common/environ.h: Rename include guard.
+	* common/common-utils.h: Rename include guard.
+	* common/common-types.h: Rename include guard.
+	* common/common-regcache.h: Rename include guard.
+	* common/common-inferior.h: Rename include guard.
+	* common/common-gdbthread.h: Rename include guard.
+	* common/common-exceptions.h: Rename include guard.
+	* common/common-defs.h: Rename include guard.
+	* common/common-debug.h: Rename include guard.
+	* common/cleanups.h: Rename include guard.
+	* common/buffer.h: Rename include guard.
+	* common/btrace-common.h: Rename include guard.
+	* common/break-common.h: Rename include guard.
+	* cli/cli-utils.h: Rename include guard.
+	* cli/cli-style.h: Rename include guard.
+	* cli/cli-setshow.h: Rename include guard.
+	* cli/cli-script.h: Rename include guard.
+	* cli/cli-interp.h: Rename include guard.
+	* cli/cli-decode.h: Rename include guard.
+	* cli/cli-cmds.h: Rename include guard.
+	* charset-list.h: Add include guard.
+	* buildsym-legacy.h: Rename include guard.
+	* bfin-tdep.h: Add include guard.
+	* ax.h: Rename include guard.
+	* arm-linux-tdep.h: Add include guard.
+	* arm-fbsd-tdep.h: Add include guard.
+	* arch/xtensa.h: Rename include guard.
+	* arch/tic6x.h: Add include guard.
+	* arch/i386.h: Add include guard.
+	* arch/arm.h: Rename include guard.
+	* arch/arm-linux.h: Rename include guard.
+	* arch/arm-get-next-pcs.h: Rename include guard.
+	* arch/amd64.h: Add include guard.
+	* arch/aarch64-insn.h: Rename include guard.
+	* arch-utils.h: Rename include guard.
+	* annotate.h: Add include guard.
+	* amd64-darwin-tdep.h: Rename include guard.
+	* aarch64-linux-tdep.h: Add include guard.
+	* aarch64-fbsd-tdep.h: Add include guard.
+	* aarch32-linux-nat.h: Add include guard.
+
+2019-02-06  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* macrotab.c (macro_define_internal): New function that
+	factorizes macro_define_object_internal and macro_define_function
+	code.
+	(macro_define_object_internal): Use macro_define_internal.
+	(macro_define_function): Likewise.
+
+2019-02-06  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* macrocmd.c (extract_identifier): Return
+	a gdb::unique_xmalloc_ptr<char> instead of a char *, and update
+	callers.
+
+2019-02-06  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.c (fbsd_fetch_cmdline): Join arguments with spaces.
+
+2019-02-05  Tom Tromey  <tom@tromey.com>
+
+	* target.c (target_stack::unpush): Move assertion earlier.
+
+2019-01-30  Tom Tromey  <tom@tromey.com>
+
+	PR python/23615:
+	* python/python.c (execute_gdb_command): Use gdbpy_allow_threads.
+	(gdbpy_parse_and_eval): Likewise.
+	* python/python-internal.h (gdbpy_allow_threads): New class.
+
+2019-01-28  John Baldwin  <jhb@FreeBSD.org>
+
+	* aarch64-fbsd-tdep.c (aarch64_fbsd_gregmap)
+	(aarch64_fbsd_fpregmap): Move earlier.
+	(AARCH64_MCONTEXT_REG_SIZE, AARCH64_MCONTEXT_FPREG_SIZE): Delete.
+	(aarch64_fbsd_sigframe_init): Use trad_frame_set_reg_regmap
+	instead of individual calls to trad_frame_set_reg_addr.
+	* arm-fbsd-tdep.c (arm_fbsd_gregmap, arm_fbsd_vfpregmap): Move
+	earlier.
+	(ARM_MCONTEXT_REG_SIZE, ARM_MCONTEXT_VFP_REG_SIZE): Delete.
+	(arm_fbsd_sigframe_init): Use trad_frame_set_reg_regmap
+	instead of individual calls to trad_frame_set_reg_addr.
+
+2019-01-28  Alan Hayward  <alan.hayward@arm.com>
+
+	* CONTRIBUTE: Replace contribution list with wiki link.
+
+2019-01-25  Tom Tromey  <tom@tromey.com>
+
+	* Makefile.in (GDB_CFLAGS): Don't add -I for common.
+
+2019-01-25  Tom Tromey  <tom@tromey.com>
+
+	* xtensa-linux-nat.c: Fix common/ includes.
+	* xml-support.h: Fix common/ includes.
+	* xml-support.c: Fix common/ includes.
+	* x86-linux-nat.c: Fix common/ includes.
+	* windows-nat.c: Fix common/ includes.
+	* varobj.h: Fix common/ includes.
+	* varobj.c: Fix common/ includes.
+	* value.c: Fix common/ includes.
+	* valops.c: Fix common/ includes.
+	* utils.c: Fix common/ includes.
+	* unittests/xml-utils-selftests.c: Fix common/ includes.
+	* unittests/utils-selftests.c: Fix common/ includes.
+	* unittests/unpack-selftests.c: Fix common/ includes.
+	* unittests/tracepoint-selftests.c: Fix common/ includes.
+	* unittests/style-selftests.c: Fix common/ includes.
+	* unittests/string_view-selftests.c: Fix common/ includes.
+	* unittests/scoped_restore-selftests.c: Fix common/ includes.
+	* unittests/scoped_mmap-selftests.c: Fix common/ includes.
+	* unittests/scoped_fd-selftests.c: Fix common/ includes.
+	* unittests/rsp-low-selftests.c: Fix common/ includes.
+	* unittests/parse-connection-spec-selftests.c: Fix common/
+	includes.
+	* unittests/optional-selftests.c: Fix common/ includes.
+	* unittests/offset-type-selftests.c: Fix common/ includes.
+	* unittests/observable-selftests.c: Fix common/ includes.
+	* unittests/mkdir-recursive-selftests.c: Fix common/ includes.
+	* unittests/memrange-selftests.c: Fix common/ includes.
+	* unittests/memory-map-selftests.c: Fix common/ includes.
+	* unittests/lookup_name_info-selftests.c: Fix common/ includes.
+	* unittests/function-view-selftests.c: Fix common/ includes.
+	* unittests/environ-selftests.c: Fix common/ includes.
+	* unittests/copy_bitwise-selftests.c: Fix common/ includes.
+	* unittests/common-utils-selftests.c: Fix common/ includes.
+	* unittests/cli-utils-selftests.c: Fix common/ includes.
+	* unittests/array-view-selftests.c: Fix common/ includes.
+	* ui-file.c: Fix common/ includes.
+	* tui/tui-io.c: Fix common/ includes.
+	* tracepoint.h: Fix common/ includes.
+	* tracepoint.c: Fix common/ includes.
+	* tracefile-tfile.c: Fix common/ includes.
+	* top.h: Fix common/ includes.
+	* top.c: Fix common/ includes.
+	* thread.c: Fix common/ includes.
+	* target/waitstatus.h: Fix common/ includes.
+	* target/waitstatus.c: Fix common/ includes.
+	* target.h: Fix common/ includes.
+	* target.c: Fix common/ includes.
+	* target-memory.c: Fix common/ includes.
+	* target-descriptions.c: Fix common/ includes.
+	* symtab.h: Fix common/ includes.
+	* symfile.c: Fix common/ includes.
+	* stap-probe.c: Fix common/ includes.
+	* spu-linux-nat.c: Fix common/ includes.
+	* sparc-nat.c: Fix common/ includes.
+	* source.c: Fix common/ includes.
+	* solib.c: Fix common/ includes.
+	* solib-target.c: Fix common/ includes.
+	* ser-unix.c: Fix common/ includes.
+	* ser-tcp.c: Fix common/ includes.
+	* ser-pipe.c: Fix common/ includes.
+	* ser-base.c: Fix common/ includes.
+	* selftest-arch.c: Fix common/ includes.
+	* s12z-tdep.c: Fix common/ includes.
+	* rust-exp.y: Fix common/ includes.
+	* rs6000-aix-tdep.c: Fix common/ includes.
+	* riscv-tdep.c: Fix common/ includes.
+	* remote.c: Fix common/ includes.
+	* remote-notif.h: Fix common/ includes.
+	* remote-fileio.h: Fix common/ includes.
+	* remote-fileio.c: Fix common/ includes.
+	* regcache.h: Fix common/ includes.
+	* regcache.c: Fix common/ includes.
+	* record-btrace.c: Fix common/ includes.
+	* python/python.c: Fix common/ includes.
+	* python/py-type.c: Fix common/ includes.
+	* python/py-inferior.c: Fix common/ includes.
+	* progspace.h: Fix common/ includes.
+	* producer.c: Fix common/ includes.
+	* procfs.c: Fix common/ includes.
+	* proc-api.c: Fix common/ includes.
+	* printcmd.c: Fix common/ includes.
+	* ppc-linux-nat.c: Fix common/ includes.
+	* parser-defs.h: Fix common/ includes.
+	* osdata.c: Fix common/ includes.
+	* obsd-nat.c: Fix common/ includes.
+	* nat/x86-linux.c: Fix common/ includes.
+	* nat/x86-linux-dregs.c: Fix common/ includes.
+	* nat/x86-dregs.h: Fix common/ includes.
+	* nat/x86-dregs.c: Fix common/ includes.
+	* nat/ppc-linux.c: Fix common/ includes.
+	* nat/mips-linux-watch.h: Fix common/ includes.
+	* nat/mips-linux-watch.c: Fix common/ includes.
+	* nat/linux-waitpid.c: Fix common/ includes.
+	* nat/linux-ptrace.h: Fix common/ includes.
+	* nat/linux-ptrace.c: Fix common/ includes.
+	* nat/linux-procfs.c: Fix common/ includes.
+	* nat/linux-personality.c: Fix common/ includes.
+	* nat/linux-osdata.c: Fix common/ includes.
+	* nat/linux-namespaces.c: Fix common/ includes.
+	* nat/linux-btrace.h: Fix common/ includes.
+	* nat/linux-btrace.c: Fix common/ includes.
+	* nat/fork-inferior.c: Fix common/ includes.
+	* nat/amd64-linux-siginfo.c: Fix common/ includes.
+	* nat/aarch64-sve-linux-ptrace.c: Fix common/ includes.
+	* nat/aarch64-linux.c: Fix common/ includes.
+	* nat/aarch64-linux-hw-point.h: Fix common/ includes.
+	* nat/aarch64-linux-hw-point.c: Fix common/ includes.
+	* namespace.h: Fix common/ includes.
+	* mips-linux-tdep.c: Fix common/ includes.
+	* minsyms.c: Fix common/ includes.
+	* mi/mi-parse.h: Fix common/ includes.
+	* mi/mi-main.c: Fix common/ includes.
+	* mi/mi-cmd-env.c: Fix common/ includes.
+	* memrange.h: Fix common/ includes.
+	* memattr.c: Fix common/ includes.
+	* maint.h: Fix common/ includes.
+	* maint.c: Fix common/ includes.
+	* main.c: Fix common/ includes.
+	* machoread.c: Fix common/ includes.
+	* location.c: Fix common/ includes.
+	* linux-thread-db.c: Fix common/ includes.
+	* linux-nat.c: Fix common/ includes.
+	* linux-fork.c: Fix common/ includes.
+	* inline-frame.c: Fix common/ includes.
+	* infrun.c: Fix common/ includes.
+	* inflow.c: Fix common/ includes.
+	* inferior.h: Fix common/ includes.
+	* inferior.c: Fix common/ includes.
+	* infcmd.c: Fix common/ includes.
+	* inf-ptrace.c: Fix common/ includes.
+	* inf-child.c: Fix common/ includes.
+	* ia64-linux-nat.c: Fix common/ includes.
+	* i387-tdep.c: Fix common/ includes.
+	* i386-tdep.c: Fix common/ includes.
+	* i386-linux-tdep.c: Fix common/ includes.
+	* i386-linux-nat.c: Fix common/ includes.
+	* i386-go32-tdep.c: Fix common/ includes.
+	* i386-fbsd-tdep.c: Fix common/ includes.
+	* i386-fbsd-nat.c: Fix common/ includes.
+	* guile/scm-type.c: Fix common/ includes.
+	* guile/guile.c: Fix common/ includes.
+	* go32-nat.c: Fix common/ includes.
+	* gnu-nat.c: Fix common/ includes.
+	* gdbthread.h: Fix common/ includes.
+	* gdbarch-selftests.c: Fix common/ includes.
+	* gdb_usleep.c: Fix common/ includes.
+	* gdb_select.h: Fix common/ includes.
+	* gdb_bfd.c: Fix common/ includes.
+	* gcore.c: Fix common/ includes.
+	* fork-child.c: Fix common/ includes.
+	* findvar.c: Fix common/ includes.
+	* fbsd-nat.c: Fix common/ includes.
+	* event-top.c: Fix common/ includes.
+	* event-loop.c: Fix common/ includes.
+	* dwarf2read.c: Fix common/ includes.
+	* dwarf2loc.c: Fix common/ includes.
+	* dwarf2-frame.c: Fix common/ includes.
+	* dwarf-index-cache.c: Fix common/ includes.
+	* dtrace-probe.c: Fix common/ includes.
+	* disasm-selftests.c: Fix common/ includes.
+	* defs.h: Fix common/ includes.
+	* csky-tdep.c: Fix common/ includes.
+	* cp-valprint.c: Fix common/ includes.
+	* cp-support.h: Fix common/ includes.
+	* cp-support.c: Fix common/ includes.
+	* corelow.c: Fix common/ includes.
+	* completer.h: Fix common/ includes.
+	* completer.c: Fix common/ includes.
+	* compile/compile.c: Fix common/ includes.
+	* compile/compile-loc2c.c: Fix common/ includes.
+	* compile/compile-cplus-types.c: Fix common/ includes.
+	* compile/compile-cplus-symbols.c: Fix common/ includes.
+	* command.h: Fix common/ includes.
+	* cli/cli-dump.c: Fix common/ includes.
+	* cli/cli-cmds.c: Fix common/ includes.
+	* charset.c: Fix common/ includes.
+	* build-id.c: Fix common/ includes.
+	* btrace.h: Fix common/ includes.
+	* btrace.c: Fix common/ includes.
+	* breakpoint.h: Fix common/ includes.
+	* breakpoint.c: Fix common/ includes.
+	* ax.h: 
+	(enum agent_op): Fix common/ includes.
+	* ax-general.c (struct aop_map): Fix common/ includes.
+	* ax-gdb.c: Fix common/ includes.
+	* auxv.c: Fix common/ includes.
+	* auto-load.c: Fix common/ includes.
+	* arm-tdep.c: Fix common/ includes.
+	* arch/riscv.c: Fix common/ includes.
+	* arch/ppc-linux-common.c: Fix common/ includes.
+	* arch/i386.c: Fix common/ includes.
+	* arch/arm.c: Fix common/ includes.
+	* arch/arm-linux.c: Fix common/ includes.
+	* arch/arm-get-next-pcs.c: Fix common/ includes.
+	* arch/amd64.c: Fix common/ includes.
+	* arch/aarch64.c: Fix common/ includes.
+	* arch/aarch64-insn.c: Fix common/ includes.
+	* arch-utils.c: Fix common/ includes.
+	* amd64-windows-tdep.c: Fix common/ includes.
+	* amd64-tdep.c: Fix common/ includes.
+	* amd64-sol2-tdep.c: Fix common/ includes.
+	* amd64-obsd-tdep.c: Fix common/ includes.
+	* amd64-nbsd-tdep.c: Fix common/ includes.
+	* amd64-linux-tdep.c: Fix common/ includes.
+	* amd64-linux-nat.c: Fix common/ includes.
+	* amd64-fbsd-tdep.c: Fix common/ includes.
+	* amd64-fbsd-nat.c: Fix common/ includes.
+	* amd64-dicos-tdep.c: Fix common/ includes.
+	* amd64-darwin-tdep.c: Fix common/ includes.
+	* agent.c: Fix common/ includes.
+	* ada-lang.h: Fix common/ includes.
+	* ada-lang.c: Fix common/ includes.
+	* aarch64-tdep.c: Fix common/ includes.
+
+2019-01-25  Tom Tromey  <tom@tromey.com>
+
+	* common/create-version.sh: Use common/version.h.
+
+2019-01-24  Pedro Alves  <palves@redhat.com>
+
+	* infrun.c (signal_stop, signal_print, signal_program)
+	(signal_catch, signal_pass): Now arrays instead of pointers.
+	(update_signals_program_target, do_target_resume)
+	(signal_catch_update, handle_command, _initialize_infrun): Adjust.
+	* linux-nat.c (linux_nat_target::pass_signals)
+	(linux_nat_target::create_inferior, linux_nat_target::attach):
+	Adjust.
+	* linux-nat.h (linux_nat_target::pass_signals): Adjust.
+	* nto-procfs.c (nto_procfs_target::pass_signals): Adjust.
+	* procfs.c (procfs_target::pass_signals): Adjust.
+	* record-full.c (record_full_target::resume): Adjust.
+	* remote.c (remote_target::pass_signals)
+	(remote_target::program_signals): Adjust.
+	* target-debug.h (target_debug_print_signals): Now takes a
+	gdb::array_view as parameter.  Adjust.
+	* target.h (target_ops) <pass_signals, program_signals>: Replace
+	pointer and length parameters with gdb::array_view.
+	(target_pass_signals, target_program_signals): Likewise.
+	* target-delegates.c: Regenerate.
+
+2019-01-24  Pedro Alves  <palves@redhat.com>
+
+	* common/forward-scope-exit.h
+	(forward_scope_exit::forward_scope_exit): Pass arguments to
+	m_bind_function directly, instead of creating a std::bind and
+	copying that.
+
+2019-01-24  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aapcs_is_vfp_call_or_return_candidate_1): Check
+	for static members.
+	(pass_in_v_vfp_candidate): Likewise.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* regcache.c (class regcache_invalidator): Remove.
+	(regcache::raw_write): Use make_scope_exit.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+
+	* ui-out.h (class ui_out_emit_type): Update comment.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+
+	* infrun.c (fetch_inferior_event): Update comment.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* infrun.c (reinstall_readline_callback_handler_cleanup): Remove
+	parameter.
+	(fetch_inferior_event): Use SCOPE_EXIT.
+
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* infrun.c (disable_thread_events): Delete.
+	(stop_all_threads): Use SCOPE_EXIT.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* symfile.c: Include forward-scope-exit.h.
+	(clear_symtab_users_cleanup): Replace forward declaration with
+	a FORWARD_SCOPE_EXIT.
+	(syms_from_objfile_1): Use the forward_scope_exit and
+	gdb::optional instead of cleanup_function.
+	(reread_symbols): Use the forward_scope_exit instead of
+	cleanup_function.
+	(clear_symtab_users_cleanup): Remove function.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* linux-nat.c: Include scope-exit.h.
+	(cleanup_target_stop): Remove.
+	(linux_nat_target::static_tracepoint_markers_by_strid): Use
+	SCOPE_EXIT.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* infcall.c (cleanup_delete_std_terminate_breakpoint): Remove.
+	(call_function_by_hand_dummy): Use SCOPE_EXIT.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* infrun.c (fetch_inferior_event): Use scope_exit.
+	* utils.h (make_bpstat_clear_actions_cleanup): Don't declare.
+	* top.c (execute_command): Use scope_exit.
+	* breakpoint.c (bpstat_do_actions): Use scope_exit.
+	* utils.c (do_bpstat_clear_actions_cleanup)
+	(make_bpstat_clear_actions_cleanup): Remove.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* infrun.c: Include "common/scope-exit.h"
+	(delete_just_stopped_threads_infrun_breakpoints_cleanup): Remove.
+	(wait_for_inferior): Use SCOPE_EXIT.
+	(fetch_inferior_event): Use scope_exit.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* breakpoint.c (create_breakpoint): Remove cleanup.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Pedro Alves  <palves@redhat.com>
+
+2019-01-23  Pedro Alves  <palves@redhat.com>
+
+	* gdbarch-selftests.c (struct on_exit): Use SCOPE_EXIT.
+
+2019-01-23  Pedro Alves  <palves@redhat.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbthread.h: Include "common/forward-scope-exit.h".
+	(scoped_finish_thread_state): Redefine custom class in terms of
+	forward_scope_exit.
+
+2019-01-23  Pedro Alves  <palves@redhat.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* common/forward-scope-exit.h: New file.
+
+2019-01-23  Pedro Alves  <palves@redhat.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* common/scope-exit.h: New file.
+
+2019-01-23  Pedro Alves  <palves@redhat.com>
+
+	* common/preprocessor.h (ESC): Rename to ...
+	(ESC_PARENS): ... this.
+	* common/valid-expr.h (CHECK_VALID_EXPR_1, CHECK_VALID_EXPR_2)
+	(CHECK_VALID_EXPR_3, CHECK_VALID_EXPR_4): Adjust.
+
+2019-01-23  Tom Tromey  <tom@tromey.com>
+
+	* language.h (class scoped_switch_to_sym_language_if_auto):
+	Initialize m_lang in both cases.
+
+2019-01-23  Alan Hayward  <alan.hayward@arm.com>
+
+	* nat/aarch64-linux.c (aarch64_linux_new_thread): Replace XNEW
+	with XCNEW.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* corelow.c: Do not include sys/file.h.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h: Include gdb_curses.h.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* source-cache.h (class source_cache) <get_source_lines,
+	get_plain_source_lines, extract_lines>: Rename "lines" parameter.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* remote-fileio.h (struct remote_target): Declare.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* python/py-arch.c: Do not include py-ref.h.
+	* python/py-bpevent.c: Do not include py-ref.h.
+	* python/py-cmd.c: Do not include py-ref.h.
+	* python/py-continueevent.c: Do not include py-ref.h.
+	* python/py-event.h: Do not include py-ref.h.
+	* python/py-evtregistry.c: Do not include py-ref.h.
+	* python/py-finishbreakpoint.c: Do not include py-ref.h.
+	* python/py-frame.c: Do not include py-ref.h.
+	* python/py-framefilter.c: Do not include py-ref.h.
+	* python/py-function.c: Do not include py-ref.h.
+	* python/py-infevents.c: Do not include py-ref.h.
+	* python/py-linetable.c: Do not include py-ref.h.
+	* python/py-objfile.c: Do not include py-ref.h.
+	* python/py-param.c: Do not include py-ref.h.
+	* python/py-prettyprint.c: Do not include py-ref.h.
+	* python/py-progspace.c: Do not include py-ref.h.
+	* python/py-symbol.c: Do not include py-ref.h.
+	* python/py-symtab.c: Do not include py-ref.h.
+	* python/py-type.c: Do not include py-ref.h.
+	* python/py-unwind.c: Do not include py-ref.h.
+	* python/py-utils.c: Do not include py-ref.h.
+	* python/py-value.c: Do not include py-ref.h.
+	* python/py-varobj.c: Do not include py-ref.h.
+	* python/py-xmethods.c: Do not include py-ref.h.
+	* python/python.c: Do not include py-ref.h.
+	* varobj.c: Do not include py-ref.h.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (struct objfile_per_bfd_storage): Use "struct"
+	keyword for bcache.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile-cplus-types.c: Remove a comment by #include.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* compile/gcc-c-plugin.h: Include compile-internal.h.
+
+2019-01-22  Tom Tromey  <tom@tromey.com>
+
+	* stabsread.c (EXTERN): Do not define.
+	(symnum, next_symbol_text_func, processing_gcc_compilation)
+	(within_function, global_sym_chain, global_stabs)
+	(previous_stab_code, this_object_header_files)
+	(n_this_object_header_files)
+	(n_allocated_this_object_header_files): Define.
+	* stabsread.h (EXTERN): Never define.  Use "extern".
+
+2019-01-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* event-top.c (handle_line_of_input): use unique_xmalloc_ptr for
+	history_value.
+
+2019-01-21  Tom Tromey  <tom@tromey.com>
+
+	* ui-out.c: Fix includes.
+	* tui/tui-source.c: Fix includes.
+	* target.c: Fix includes.
+	* remote.c: Fix includes.
+	* regcache.c: Fix includes.
+	* python/py-block.c: Fix includes.
+	* printcmd.c: Fix includes.
+	* or1k-tdep.c: Fix includes.
+	* mi/mi-main.c: Fix includes.
+	* m32r-tdep.c: Fix includes.
+	* csky-tdep.c: Fix includes.
+	* compile/compile-cplus-types.c: Fix includes.
+	* cli/cli-interp.c: Fix includes.
+
+2019-01-21  Alan Hayward  <alan.hayward@arm.com>
+
+	* aarch64-tdep.c (aapcs_is_vfp_call_or_return_candidate_1): Check
+	for padding.
+
+2019-01-16  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (struct minimal_symbol_iterator): Rename.  Move
+	earlier.
+	(struct objfile) <msymbols_range>: Move from top level.
+	<msymbols>: New method.
+	(class objfile_msymbols): Remove.
+	* symtab.c (default_collect_symbol_completion_matches_break_on):
+	Update.
+	* symmisc.c (dump_msymbols): Update.
+	* stabsread.c (scan_file_globals): Update.
+	* objc-lang.c (info_selectors_command, info_classes_command)
+	(find_methods): Update.
+	* minsyms.c (find_solib_trampoline_target): Update.
+	* hppa-tdep.c (hppa_lookup_stub_minimal_symbol): Update.
+	* coffread.c (coff_symfile_read): Update.
+	* ada-lang.c (ada_lookup_simple_minsym)
+	(ada_collect_symbol_completion_matches): Update.
+
+2019-01-16  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (class objfile_msymbols) <iterator>: Change argument
+	type.  Remove no-argument constructor.
+	<iterator::operator++>: Simplify.
+	<begin>: Update.
+	<end>: Use minimal_symbol_count.
+
+2019-01-16  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (struct objfile) <psymtabs>: New method.
+	(class objfile_psymtabs): Remove.
+	* psymtab.h (class psymtab_storage) <partial_symtab_range>: New
+	typedef.
+	<range>: New method.
+	(require_partial_symbols): Change return type.
+	* psymtab.c (require_partial_symbols)
+	(psym_expand_symtabs_matching): Update.
+	* mdebugread.c (parse_partial_symbols): Update.
+	* dbxread.c (dbx_end_psymtab): Update.
+
+2019-01-15  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (lookup_objfile_from_block)
+	(lookup_symbol_in_objfile_symtabs)
+	(basic_lookup_transparent_type_1, find_pc_sect_compunit_symtab)
+	(find_line_symtab, info_sources_command)
+	(default_collect_symbol_completion_matches_break_on)
+	(make_source_files_completion_list): Update.
+	* symmisc.c (print_objfile_statistics, dump_objfile)
+	(maintenance_print_symbols, maintenance_info_symtabs)
+	(maintenance_check_symtabs, maintenance_info_line_tables):
+	Update.
+	* source.c (select_source_symtab)
+	(forget_cached_source_info_for_objfile): Update.
+	* objfiles.h (class objfile_compunits): Remove.
+	(struct objfile) <compunits_range>: New typedef.
+	(compunits): New method.
+	* objfiles.c (objfile_relocate1): Update.
+	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Update.
+	* maint.c (count_symtabs_and_blocks): Update.
+	* linespec.c (iterate_over_all_matching_symtabs): Update.
+	* cp-support.c (add_symbol_overload_list_qualified): Update.
+	* coffread.c (coff_symtab_read): Update.
+	* ada-lang.c (add_nonlocal_symbols)
+	(ada_collect_symbol_completion_matches)
+	(ada_add_global_exceptions): Update.
+
+2019-01-15  Tom Tromey  <tom@tromey.com>
+
+	* progspace.h (program_space) <objfiles_safe_range>: New
+	typedef.
+	<objfiles_safe>: New method.
+	* objfiles.h (class all_objfiles_safe): Remove.
+	* objfiles.c (free_all_objfiles, objfile_purge_solibs): Update.
+	* jit.c (jit_inferior_exit_hook): Update.
+
+2019-01-17  Tom Tromey  <tom@tromey.com>
+
+	* progspace.h (program_space) <objfiles_range>: New typedef.
+	<objfiles>: New method.
+	<objfiles_head>: Rename from objfiles.
+	(object_files): Update.
+	* guile/scm-progspace.c (gdbscm_progspace_objfiles): Update.
+	* guile/scm-pretty-print.c
+	(ppscm_find_pretty_printer_from_objfiles): Update.
+	* guile/scm-objfile.c (gdbscm_objfiles): Update.
+	* python/py-xmethods.c (gdbpy_get_matching_xmethod_workers):
+	Update.
+	* python/py-progspace.c (pspy_get_objfiles): Update.
+	* python/py-prettyprint.c (find_pretty_printer_from_objfiles):
+	Update.
+	* python/py-objfile.c (objfpy_lookup_objfile_by_name)
+	(objfpy_lookup_objfile_by_build_id): Update.
+	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Update.
+	* windows-tdep.c (windows_iterate_over_objfiles_in_search_order):
+	Update.
+	* symtab.c (iterate_over_symtabs, matching_obj_sections)
+	(expand_symtab_containing_pc, lookup_objfile_from_block)
+	(lookup_static_symbol, basic_lookup_transparent_type)
+	(find_pc_sect_compunit_symtab, find_symbol_at_address)
+	(find_line_symtab, info_sources_command)
+	(default_collect_symbol_completion_matches_break_on)
+	(make_source_files_completion_list, find_main_name): Update.
+	* symmisc.c (print_symbol_bcache_statistics)
+	(print_objfile_statistics, maintenance_print_symbols)
+	(maintenance_print_msymbols, maintenance_print_objfiles)
+	(maintenance_info_symtabs, maintenance_check_symtabs)
+	(maintenance_expand_symtabs, maintenance_info_line_tables):
+	Update.
+	* symfile.c (remove_symbol_file_command, overlay_invalidate_all)
+	(find_pc_overlay, find_pc_mapped_section, list_overlays_command)
+	(map_overlay_command, unmap_overlay_command)
+	(simple_overlay_update, expand_symtabs_matching)
+	(map_symbol_filenames): Update.
+	* symfile-debug.c (set_debug_symfile): Update.
+	* spu-tdep.c (spu_overlay_update, spu_objfile_from_frame):
+	Update.
+	* source.c (select_source_symtab, forget_cached_source_info):
+	Update.
+	* solib.c (solib_read_symbols): Update.
+	* solib-spu.c (append_ocl_sos): Update.
+	* psymtab.c (maintenance_print_psymbols)
+	(maintenance_info_psymtabs, maintenance_check_psymtabs): Update.
+	* probe.c (parse_probes_in_pspace, find_probe_by_pc): Update.
+	* printcmd.c (info_symbol_command): Update.
+	* ppc-linux-tdep.c (ppc_linux_spe_context_inferior_created):
+	Update.
+	* objfiles.h (class all_objfiles): Remove.
+	* objfiles.c (have_partial_symbols, have_full_symbols)
+	(have_minimal_symbols, qsort_cmp, update_section_map)
+	(shared_objfile_contains_address_p)
+	(default_iterate_over_objfiles_in_search_order): Update.
+	* objc-lang.c (info_selectors_command, info_classes_command)
+	(find_methods): Update.
+	* minsyms.c (find_solib_trampoline_target): Update.
+	* maint.c (maintenance_info_sections)
+	(maintenance_translate_address, count_symtabs_and_blocks):
+	Update.
+	* main.c (captured_main_1): Update.
+	* linux-thread-db.c (try_thread_db_load_from_pdir)
+	(has_libpthread): Update.
+	* linespec.c (iterate_over_all_matching_symtabs)
+	(search_minsyms_for_name): Update.
+	* jit.c (jit_find_objf_with_entry_addr): Update.
+	* hppa-tdep.c (find_unwind_entry)
+	(hppa_lookup_stub_minimal_symbol): Update.
+	* gcore.c (gcore_create_callback, objfile_find_memory_regions):
+	Update.
+	* elfread.c (elf_gnu_ifunc_resolve_by_cache)
+	(elf_gnu_ifunc_resolve_by_got): Update.
+	* dwarf2-frame.c (dwarf2_frame_find_fde): Update.
+	* dwarf-index-write.c (save_gdb_index_command): Update.
+	* cp-support.c (add_symbol_overload_list_qualified): Update.
+	* breakpoint.c (create_overlay_event_breakpoint)
+	(create_longjmp_master_breakpoint)
+	(create_std_terminate_master_breakpoint)
+	(create_exception_master_breakpoint): Update.
+	* blockframe.c (find_pc_partial_function): Update.
+	* ada-lang.c (ada_lookup_simple_minsym, add_nonlocal_symbols)
+	(ada_collect_symbol_completion_matches)
+	(ada_add_global_exceptions): Update.
+
+2019-01-17  Tom Tromey  <tom@tromey.com>
+
+	* solib-target.c (lm_info_target_p): Remove typedef.  Don't
+	declare VEC.
+	(solib_target_parse_libraries): Change return type.
+	(library_list_start_segment, library_list_start_section)
+	(library_list_end_library, library_list_start_library); Update.
+	(solib_target_free_library_list): Remove.
+	(solib_target_parse_libraries): Remove cleanup.  Change return
+	type.
+	(solib_target_current_sos): Update.
+
+2019-01-17  Tom Tromey  <tromey@bapiya>
+
+	* valprint.c: Replace "the the" with "the".
+	* symtab.c: Replace "the the" with "the".
+	* solib.c: Replace "the the" with "the".
+	* solib-dsbt.c: Replace "the the" with "the".
+	* linespec.c: Replace "the the" with "the".
+	* dwarf2loc.h: Replace "the the" with "the".
+	* amd64-windows-tdep.c: Replace "the the" with "the".
+	* aarch64-tdep.c: Replace "the the" with "the".
+
+2019-01-16  Keith Seitz  <keiths@redhat.com>
+
+	PR gdb/23773
+	* dwarf2read.c (dwarf2_cu) <ancestor>: New field.
+	<builder>: Rename to ..
+	<m_builder>: ... this and make private.
+	(dwarf2_cu::get_builder): New method.  Change all users of
+	`builder' to use this method.
+	(dwarf2_start_symtab): Move to ...
+	(dwarf2_cu::start_symtab): ... here.  Update all callers
+	(setup_type_unit_groups): Move to ...
+	(dwarf2_cu::setup_type_unit_groups): ... here.  Update all
+	callers.
+	(dwarf2_cu::reset_builder): New method.
+	(process_full_compunit, process_full_type_unit): Use
+	dwarf2_cu::reset_builder.
+	(follow_die_offset): Record the ancestor CU if it is different
+	from the followed DIE's CU.
+	(follow_die_sig_1): Likewise.
+
+2019-01-15  Tom Tromey  <tom@tromey.com>
+
+	* remote.c (class remote_state) <buf>: Now a char_vector.
+	<buf_size>: Remove.
+	(remote_target::getpkt): Change type of buf.  Remove sizeof_buf
+	parameter.
+	(remote_target::getpkt_or_notif_sane_1)
+	(remote_target::getpkt_sane)
+	(remote_target::getpkt_or_notif_sane): Likewise.
+	(class remote_target) <putpkt>: New overload.
+	(remote_target::read_frame): Change type of "buf_p".  Remove
+	sizeof_p parameter.
+	(packet_ok): New overload.
+	(packet_check_result): New overload.
+	Update all uses.
+
+2019-01-14  Tom Tromey  <tom@tromey.com>
+
+	* remote-notif.c (handle_notification, remote_notif_ack)
+	(remote_notif_parse): Make "buf" const.
+	* remote-notif.h (struct notif_client) <parse, ack>: Make "buf"
+	const.
+	(remote_notif_parse, remote_notif_ack, handle_notification):
+	Likewise.
+	* remote.c (remote_notif_stop_parse): Make "buf" const.
+	(remote_target::remote_parse_stop_reply): Make "buf" const.
+	(remote_notif_stop_ack): Make "buf" const.
+
+2019-01-14  Tom Tromey  <tom@tromey.com>
+
+	* remote.c (remote_console_output): Make parameter const.
+
+2019-01-14  Tom Tromey  <tom@tromey.com>
+
+	* target-debug.h (target_debug_print_signals): Constify.
+	* nto-procfs.c (nto_procfs_target::pass_signals): Update.
+	* procfs.c (procfs_target::pass_signals): Update.
+	* linux-nat.c (linux_nat_target::pass_signals): Update.
+	* linux-nat.h (class linux_nat_target) <pass_signals>: Update.
+	* target-delegates.c: Rebuild.
+	* remote.c (remote_target::program_signals): Update.
+	(remote_target::pass_signals): Update.
+	* target.c (target_pass_signals): Constify argument.
+	(target_program_signals): Likewise.
+	* target.h (struct target_ops) <pass_signals, program_signals>:
+	Constify argument.
+	(target_pass_signals, target_program_signals): Constify argument.
+
+2019-01-14  Tom Tromey  <tom@tromey.com>
+
+	PR tui/28819:
+	* tui/tui-io.c (gdb_wgetch): Print \r when needed.
+
+2019-01-14  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
+
+	* ppc-tdep.h (struct gdbarch_tdep) <ppc_v0_alias_regnum>: New
+	field.
+	* rs6000-tdep.c: Include reggroups.h.
+	(IS_V_ALIAS_PSEUDOREG): Define.
+	(rs6000_register_name): Return names for the "vX" aliases.
+	(rs6000_pseudo_register_type): Return type for the "vX" aliases.
+	(rs6000_pseudo_register_reggroup_p): Restore.  Handle "vX"
+	aliases.  Call default_register_reggroup_p for all other
+	pseudo-registers.
+	(v_alias_pseudo_register_read, v_alias_pseudo_register_write):
+	New functions.
+	(rs6000_pseudo_register_read, rs6000_pseudo_register_write):
+	Handle "vX" aliases.
+	(v_alias_pseudo_register_collect): New function.
+	(rs6000_ax_pseudo_register_collect): Handle "vX" aliases.
+	(rs6000_gdbarch_init): Initialize "vX" aliases as
+	pseudo-registers.  Restore registration of
+	rs6000_pseudo_register_reggroup_p with
+	set_tdesc_pseudo_register_reggroup_p.
+
+2019-01-13  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* xtensa-linux-tdep.c (xtensa_linux_init_abi): Update
+	tdep->num_pseudo_regs. Add calls to set_gdbarch_num_regs and
+	set_gdbarch_num_pseudo_regs.
+
+2019-01-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-style.h (class cli_style_option): <add_setshow_commands>
+	Remove arg prefixname, add do_set and do_show.
+	Add member functions set_list and show_list.
+	* cli/cli-style.c (class cli_style_option): Update accordingly.
+	(style_set_list): Move to file scope.
+	(style_show_list): Likewise.
+	(set_style): Call help_list.
+	(show_style): Call cmd_show_list.
+	(_initialize_cli_style): New macro STYLE_ADD_SETSHOW_COMMANDS.
+	Update to use the new macro.
+
+2019-10-12  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-lang.c (_initialize_ada_language): Expand the help text
+	for the "catch exception" command.
+
+2019-01-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* symtab.c (matching_obj_sections): Initialize obj,
+	declare it closer to its usage.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* thread-iter.h (inf_threads_iterator): Use next_iterator.
+	(basic_inf_threads_range): Remove.
+	(inf_threads_range, inf_non_exited_threads_range)
+	(safe_inf_threads_range): Use next_adapter.
+
+2019-01-10  Keith Seitz  <keiths@redhat.com>
+
+	PR gdb/23712
+	PR symtab/23010
+	* dwarf2read.c (dw2_add_symbol_to_list): Remove.
+	(fixup_go_packaging, new_symbol): Use add_symbol_to_list.
+
+2019-01-10  Keith Seitz  <keiths@redhat.com>
+
+	PR gdb/23712
+	PR symtab/23010
+	* dictionary.c (pending_to_vector): Remove.
+	(dict_create_hashed_1, dict_create_linear_1, dict_add_pending_1):
+	Remove _1 suffix, replacing functions of the same name.  Update
+	all callers.
+	(dict_create_hashed, dict_create_hashed_expandable)
+	(dict_create_linear, dict_create_linear_expandable, dict_free)
+	(dict_add_symbol, dict_add_pending, dict_size, dict_empty):
+	Make functions static.
+
+2019-01-10  Keith Seitz  <keiths@redhat.com>
+
+	PR gdb/23712
+	PR symtab/23010
+	* dictionary.h (struct dictionary): Replace declaration with
+	multidictionary.
+	(dict_create_hashed, dict_create_hashed_expandable)
+	(dict_create_linear, dict_create_linear_expandable)
+	(dict_free, dict_add_symbol, dict_add_pending, dict_empty)
+	(dict_iterator_first, dict_iterator_next, dict_iter_match_first)
+	(dict_iter_match_next, dict_size): Rename to "mdict_" versions
+	taking multidictionary argument.
+	[ALL_DICT_SYMBOLS]: Update for multidictionary.
+	* block.h (struct block) <dict>: Change to multidictionary
+	and rename `multidict'.
+	* block.c, buildsym.c, jit.c, mdebugread.c, objfiles.c,
+	symmisc.c: Update all dictionary references to multidictionary.
+
+2019-01-10  Keith Seitz  <keiths@redhat.com>
+
+	PR gdb/23712
+	PR symtab/23010
+	* dictionary.c: Include unordered_map.
+	(pending_to_vector): New function.
+	(dict_create_hashed_1, dict_create_linear_1, dict_add_pending_1):
+	Rewrite the non-"_1" functions to take vector instead
+	of linked list.
+	(dict_create_hashed, dict_create_linear, dict_add_pending): Use the
+	"new" _1 versions of the same name.
+	(multidictionary): Define.
+	(std::hash<enum language): New definition.
+	(collate_pending_symbols_by_language, mdict_create_hashed)
+	(mdict_create_hashed_expandable, mdict_create_linear)
+	(mdict_create_linear_expandable, mdict_free)
+	(find_language_dictionary, create_new_language_dictionary)
+	(mdict_add_symbol, mdict_add_pending, mdict_iterator_first)
+	(mdict_iterator_next, mdict_iter_match_first, mdict_iter_match_next)
+	(mdict_size, mdict_empty): New functions.
+	* dictionary.h (mdict_iterator): Define.
+
+2019-01-10  Pedro Alves  <palves@redhat.com>
+
+	* breakpoint.c (read_uploaded_action)
+	(create_tracepoint_from_upload): Adjust to use
+	gdb::unique_xmalloc_ptr.
+	* ctf.c (ctf_write_uploaded_tp):
+	(SET_ARRAY_FIELD): Use emplace_back.
+	(SET_STRING_FIELD): Adjust to use gdb::unique_xmalloc_ptr.
+	* tracefile-tfile.c (tfile_write_uploaded_tp):
+	* tracepoint.c (parse_tracepoint_definition): Adjust to use
+	gdb::unique_xmalloc_ptr.
+	* tracepoint.h (struct uploaded_tp) <cond, actions, step_actions,
+	at_string, cond_string, cmd_strings>: Replace char pointers
+	with gdb::unique_xmalloc_ptr.
+
+2019-01-10  Pedro Alves  <palves@redhat.com>
+
+	* solib-target.c (library_list_start_library): Don't xstrdup name.
+
+2019-01-10  Pedro Alves  <palves@redhat.com>
+
+	* mdebugread.c (parse_partial_symbols): Use
+	gdb::unique_xmalloc_ptr to manage heap-allocated 'stabsstring'.
+
+2019-01-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-fork.c (scoped_switch_fork_info)
+	<~scoped_switch_fork_info>: Fix incorrect variable name.
+
+2019-01-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-fork.c (scoped_switch_fork_info)
+	<scoped_switch_fork_info>: Make explicit.
+	<~scoped_switch_fork_info>: Wrap core in TRY/CATCH.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.h (objfile::reset_psymtabs): Update.
+	* objfiles.c (objfile::objfile): Update.
+	* psymtab.h (psymtab_storage::obstack): Update.
+	(psymtab_storage::m_obstack): Use gdb::optional.
+	(class psymtab_storage): Update comment.  Remove objfile
+	parameter.
+	* psymtab.c (psymtab_storage::psymtab_storage): Update.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.h (psymtab_storage::allocate_psymtab): New method.
+	<free_psymtabs>: Now private.
+	* psymtab.c (psymtab_storage::allocate_psymtab): Implement.
+	(allocate_psymtab): Use new method.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_end_psymtab): Use allocate_dependencies.
+	* psymtab.h (psymtab_storage::allocate_dependencies): New method.
+	* mdebugread.c (parse_partial_symbols): Use
+	allocate_dependencies.
+	* dwarf2read.c (dwarf2_create_include_psymtab): Use
+	allocate_dependencies.
+	(process_psymtab_comp_unit_reader)
+	(build_type_psymtab_dependencies): Likewise.
+	* dbxread.c (dbx_end_psymtab): Use allocate_dependencies.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.c (add_psymbol_to_bcache): Pass psymtab obstack to
+	PSYMBOL_SET_LANGUAGE.
+	(allocate_psymtab): Allocate psymtab on the psymtab obstack.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.h (psymtab_storage::obstack): New method.
+	<m_obstack>: Rename from obstack; now private.
+	* psymtab.c (psymtab_storage): Update.
+	* dwarf2read.c (create_addrmap_from_index)
+	(create_addrmap_from_aranges, dwarf2_build_psymtabs_hard):
+	Update.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (reread_symbols): Call objfile->reset_psymtabs.
+	* objfiles.h (objfile::reset_psymtabs): New method.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* symmisc.c (print_symbol_bcache_statistics): Update.
+	(print_objfile_statistics): Update.
+	* symfile.c (reread_symbols): Update.
+	* psymtab.h (class psymtab_storage): New.
+	* psymtab.c (psymtab_storage): New constructor.
+	(~psymtab_storage): New destructor.
+	(require_partial_symbols): Update.
+	(ALL_OBJFILE_PSYMTABS_REQUIRED): Rewrite.
+	(find_pc_sect_psymtab, find_pc_sect_psymbol)
+	(match_partial_symbol, lookup_partial_symbol, dump_psymtab)
+	(psym_dump, recursively_search_psymtabs, psym_has_symbols)
+	(psym_find_compunit_symtab_by_address, sort_pst_symbols)
+	(start_psymtab_common, end_psymtab_common)
+	(add_psymbol_to_bcache, add_psymbol_to_list, init_psymbol_list)
+	(allocate_psymtab): Update.
+	(psymtab_storage::discard_psymtab): Rename from discard_psymtab.
+	Update.
+	(dump_psymtab_addrmap, maintenance_print_psymbols)
+	(maintenance_check_psymtabs): Update.
+	(class objfile_psymtabs): Move to objfiles.h.
+	* psympriv.h (discard_psymtab): Now inline.
+	(psymtab_discarder::psymtab_discarder): Update.
+	(psymtab_discarder::~psymtab_discarder): Update.
+	(ALL_OBJFILE_PSYMTABS): Rewrite.
+	* objfiles.h (struct objfile) <psymtabs, psymtabs_addrmap,
+	free_psymtabs, psymbol_cache, global_psymbols, static_psymbols>:
+	Remove fields.
+	<partial_symtabs>: New field.
+	(class objfile_psymtabs): Move from psymtab.h.  Update.
+	* objfiles.c (objfile::objfile): Initialize partial_symtabs, not
+	psymbol_cache.
+	(objfile::~objfile): Don't destroy psymbol_cache.
+	* mdebugread.c (parse_partial_symbols): Update.
+	* dwarf2read.c (create_addrmap_from_index)
+	(create_addrmap_from_aranges, dw2_find_pc_sect_compunit_symtab)
+	(process_psymtab_comp_unit_reader, dwarf2_build_psymtabs_hard)
+	(add_partial_subprogram, dwarf2_ranges_read): Update.
+	* dwarf-index-write.c (write_address_map)
+	(write_one_signatured_type, recursively_write_psymbols)
+	(class debug_names, class debug_names, write_psymtabs_to_index):
+	Update.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* symtab.h (SYMBOL_SET_NAMES): Update.
+	(symbol_set_names): Update.
+	(MSYMBOL_SET_NAMES): Update.
+	* symtab.c (symbol_set_names): Change argument to be an
+	objfile_per_bfd_storage.
+	* psymtab.c (add_psymbol_to_bcache): Update.
+	* psympriv.h (PSYMBOL_SET_NAMES): Take per_bfd argument.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (create_demangled_names_hash): Change argument to be an
+	objfile_per_bfd_storage.
+	(symbol_set_names): Update.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_initial_scan): Unconditionally call
+	init_psymbol_list.
+	* psymtab.c (init_psymbol_list): Do nothing if already called.
+	* psympriv.h (init_psymbol_list): Add comment.
+	* dwarf2read.c (dwarf2_build_psymtabs): Unconditionally call
+	init_psymbol_list.
+	* dbxread.c (dbx_symfile_read): Unconditionally call
+	init_psymbol_list.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (scan_xcoff_symtab): Update.
+	* psymtab.c (add_psymbol_to_list): Replace "list" parameter with
+	"where".
+	* mdebugread.c (parse_partial_symbols)
+	(handle_psymbol_enumerators): Update.
+	* dwarf2read.c (add_partial_symbol, load_partial_dies): Update.
+	* dbxread.c (read_dbx_symtab): Update.
+	* psympriv.h (psymbol_placement): New enum.
+	(add_psymbol_to_list): Update.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_start_psymtab): Remove global_psymbols and
+	static_psymbols parameters.
+	(scan_xcoff_symtab): Update.
+	* psymtab.c (start_psymtab_common): Remove global_psymbols and
+	static_psymbols parameters.
+	* psympriv.h (start_psymtab_common): Update.
+	* mdebugread.c (parse_partial_symbols): Update.
+	* dwarf2read.c (create_partial_symtab): Update.
+	* dbxread.c (read_dbx_symtab): Update.
+	(start_psymtab): Remove global_psymbols and static_psymbols
+	parameters.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_end_psymtab): Remove some initializations.
+	* psymtab.c (allocate_psymtab): Add comment.
+	* psympriv.h (allocate_psymtab): Add comment.
+	* dwarf2read.c (dwarf2_create_include_psymtab): Remove some
+	initializations.
+	* dbxread.c (dbx_end_psymtab): Remove some initializations.
+
+2019-01-10  Tom Tromey  <tom@tromey.com>
+
+	* symfile.h (mdebug_build_psymtabs, elfmdebug_build_psymtabs):
+	Don't declare.
+	* mipsread.c: Include mdebugread.h.
+	* mdebugread.h (mdebug_build_psymtabs, elfmdebug_build_psymtabs):
+	Declare.
+	* elfread.c: Include mdebugread.h.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* dbxread.c (dbx_end_psymtab): Use objfile_psymtabs.
+	* mdebugread.c (parse_partial_symbols): Use objfile_psymtabs.
+	* psymtab.c (ALL_OBJFILE_PSYMTABS_REQUIRED): Remove.
+	(psym_map_symtabs_matching_filename, find_pc_sect_psymtab)
+	(psym_lookup_symbol, psym_find_last_source_symtab)
+	(psym_forget_cached_source_info, psym_print_stats)
+	(psym_expand_symtabs_for_function, psym_expand_all_symtabs)
+	(psym_expand_symtabs_with_fullname, psym_map_symbol_filenames)
+	(psym_map_matching_symbols, psym_expand_symtabs_matching)
+	(psym_find_compunit_symtab_by_address)
+	(maintenance_print_psymbols, maintenance_info_psymtabs)
+	(maintenance_check_psymtabs): Use ranged for.
+	* psymtab.h (class objfile_psymtabs): New.
+	(require_partial_symbols): Return objfile_psymtabs.
+	* psympriv.h (ALL_OBJFILE_PSYMTABS): Remove.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (overlay_invalidate_all, find_pc_overlay)
+	(find_pc_mapped_section, list_overlays_command)
+	(map_overlay_command, unmap_overlay_command)
+	(simple_overlay_update): Use all_objfiles.
+	* spu-tdep.c (spu_overlay_update): Use all_objfiles.
+	* printcmd.c (info_symbol_command): Use all_objfiles.
+	* objfiles.h (ALL_OBJSECTIONS): Remove.
+	* maint.c (maintenance_translate_address): Use all_objfiles.
+	* gcore.c (gcore_create_callback): Use all_objfiles.
+	(objfile_find_memory_regions): Likewise.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (find_line_symtab, info_sources_command)
+	(make_source_files_completion_list): Use objfile_compunits.
+	* source.c (select_source_symtab): Use objfile_compunits.
+	* objfiles.h (struct objfile): Update comment.
+	(ALL_OBJFILES): Remove.
+	(ALL_FILETABS): Remove.
+	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Use
+	objfile_compunits.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* symmisc.c (print_objfile_statistics, dump_objfile)
+	(maintenance_print_symbols): Use compunit_filetabs.
+	* source.c (forget_cached_source_info_for_objfile): Use
+	compunit_filetabs.
+	* objfiles.h (ALL_OBJFILE_FILETABS): Remove.
+	(ALL_FILETABS): Use compunit_filetabs.
+	* objfiles.c (objfile_relocate1): Use compunit_filetabs.
+	* coffread.c (coff_symtab_read): Use compunit_filetabs.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* symtab.h (ALL_COMPUNIT_FILETABS): Remove.
+	(compunit_filetabs): New.
+	* symtab.c (iterate_over_some_symtabs, find_pc_sect_line): Use
+	compunit_filetabs.
+	(info_sources_command, make_source_files_completion_list): Remove
+	declaration.
+	* symmisc.c (print_objfile_statistics, dump_objfile)
+	(maintenance_print_symbols): Remove declaration.
+	(maintenance_info_symtabs): Use compunit_filetabs.
+	(maintenance_info_line_tables): Likewise.
+	* source.c (select_source_symtab): Change local variable name.
+	(forget_cached_source_info_for_objfile): Remove declaration.
+	* objfiles.h (ALL_OBJFILE_FILETABS): Use compunit_filetabs.
+	* objfiles.c (objfile_relocate1): Remove declaration.
+	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Remove
+	declaration.
+	* maint.c (count_symtabs_and_blocks): Use compunit_filetabs.
+	* coffread.c (coff_symtab_read): Remove declaration.
+	* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Use
+	compunit_filetabs.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (lookup_objfile_from_block)
+	(find_pc_sect_compunit_symtab, search_symbols)
+	(default_collect_symbol_completion_matches_break_on): Use
+	objfile_compunits.
+	* objfiles.h (ALL_COMPUNITS): Remove.
+	* maint.c (count_symtabs_and_blocks): Use objfile_compunits.
+	* cp-support.c (add_symbol_overload_list_qualified): Use
+	objfile_compunits.
+	* ada-lang.c (ada_collect_symbol_completion_matches)
+	(ada_add_global_exceptions): Use objfile_compunits.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* source.c (select_source_symtab)
+	(forget_cached_source_info_for_objfile): Remove declaration.
+	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Remove
+	declaration.
+	* maint.c (count_symtabs_and_blocks): Remove declaration.
+	* cp-support.c (add_symbol_overload_list_qualified): Remove
+	declaration.
+	* coffread.c (coff_symtab_read): Remove declaration.
+	* symtab.c (lookup_symbol_in_objfile_symtabs)
+	(basic_lookup_transparent_type_1): Use objfile_compunits.
+	(lookup_objfile_from_block, find_pc_sect_compunit_symtab)
+	(info_sources_command, search_symbols)
+	(default_collect_symbol_completion_matches_break_on)
+	(make_source_files_completion_list): Remove declaration.
+	* ada-lang.c (add_nonlocal_symbols): Use objfile_compunits.
+	(ada_collect_symbol_completion_matches)
+	(ada_add_global_exceptions): Remove declaration.
+	* linespec.c (iterate_over_all_matching_symtabs): Use
+	objfile_compunits.
+	* objfiles.h (ALL_OBJFILE_COMPUNITS): Remove.
+	(class objfile_compunits): New.
+	(ALL_COMPUNITS): Use objfile_compunits.
+	* symmisc.c (print_objfile_statistics, maintenance_info_symtabs)
+	(maintenance_check_symtabs, maintenance_info_line_tables): Use
+	objfile_compunits.
+	* objfiles.c (objfile_relocate1): Use objfile_compunits.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (search_symbols)
+	(default_collect_symbol_completion_matches_break_on): Use
+	objfile_msymbols.
+	* ada-lang.c (ada_lookup_simple_minsym)
+	(ada_collect_symbol_completion_matches): Use objfile_msymbols.
+	* minsyms.c (find_solib_trampoline_target): Use objfile_msymbols.
+	* hppa-tdep.c (hppa_lookup_stub_minimal_symbol): Use
+	objfile_msymbols.
+	* coffread.c (coff_symfile_read): Use objfile_msymbols.
+	* symmisc.c (dump_msymbols): Use objfile_msymbols.
+	* objc-lang.c (find_methods): Use objfile_msymbols.
+	(info_selectors_command, info_classes_command): Likewise.
+	* stabsread.c (scan_file_globals): Use objfile_msymbols.
+	* objfiles.h (class objfile_msymbols): New.
+	(ALL_OBJFILE_MSYMBOLS): Remove.
+	(ALL_MSYMBOLS): Remove.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* common/next-iterator.h (next_adapter): Add Iterator template
+	parameter.
+	* objfiles.h (ALL_OBJFILES_SAFE): Remove.
+	(class all_objfiles_safe): New.
+	* jit.c (jit_inferior_exit_hook): Use all_objfiles_safe.
+	* objfiles.c (put_objfile_before): Update comment.
+	(add_separate_debug_objfile): Likewise.
+	(free_all_objfiles): Use all_objfiles_safe.
+	(objfile_purge_solibs): Likewise.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (iterate_over_symtabs, matching_obj_sections)
+	(expand_symtab_containing_pc, lookup_static_symbol)
+	(basic_lookup_transparent_type, find_pc_sect_compunit_symtab)
+	(find_symbol_at_address, find_line_symtab, find_main_name): Use
+	all_objfiles.
+	* probe.c (find_probe_by_pc, collect_probes): Use all_objfiles.
+	* breakpoint.c (create_overlay_event_breakpoint)
+	(create_longjmp_master_breakpoint)
+	(create_std_terminate_master_breakpoint)
+	(create_exception_master_breakpoint): Use all_objfiles.
+	* linux-thread-db.c (try_thread_db_load_from_pdir)
+	(has_libpthread): Use all_objfiles.
+	* ada-lang.c (add_nonlocal_symbols): Use all_objfiles.
+	* linespec.c (iterate_over_all_matching_symtabs)
+	(search_minsyms_for_name): Use all_objfiles.
+	* maint.c (maintenance_info_sections): Use all_objfiles.
+	* main.c (captured_main_1): Use all_objfiles.
+	* spu-tdep.c (spu_objfile_from_frame): Use all_objfiles.
+	* guile/scm-objfile.c (gdbscm_objfiles): Use all_objfiles.
+	* guile/scm-pretty-print.c
+	(ppscm_find_pretty_printer_from_objfiles): Use all_objfiles.
+	* solib-spu.c (append_ocl_sos): Use all_objfiles.
+	* symmisc.c (maintenance_print_symbols): Use all_objfiles.
+	(maintenance_print_msymbols): Use all_objfiles.
+	* source.c (select_source_symtab): Use all_objfiles.
+	* jit.c (jit_find_objf_with_entry_addr): Use all_objfiles.
+	* symfile.c (remove_symbol_file_command)
+	(expand_symtabs_matching, map_symbol_filenames): Use
+	all_objfiles.
+	* ppc-linux-tdep.c (ppc_linux_spe_context_inferior_created): Use
+	all_objfiles.
+	* dwarf2-frame.c (dwarf2_frame_find_fde): Use all_objfiles.
+	* objc-lang.c (find_methods): Use all_objfiles.
+	* objfiles.c (have_partial_symbols, have_full_symbols)
+	(have_minimal_symbols, qsort_cmp)
+	(default_iterate_over_objfiles_in_search_order): Use
+	all_objfiles.
+	* hppa-tdep.c (find_unwind_entry): Use all_objfiles.
+	* psymtab.c (maintenance_print_psymbols): Use all_objfiles.
+	(maintenance_check_psymtabs): Use all_objfiles.
+	(ALL_PSYMTABS): Remove.
+	* compile/compile-object-run.c (do_module_cleanup): Use
+	all_objfiles.
+	* blockframe.c (find_pc_partial_function): Use all_objfiles.
+	* cp-support.c (add_symbol_overload_list_qualified): Use
+	all_objfiles.
+	* windows-tdep.c (windows_iterate_over_objfiles_in_search_order):
+	Use all_objfiles.
+	* dwarf-index-write.c (save_gdb_index_command): Use all_objfiles.
+	* python/py-xmethods.c (gdbpy_get_matching_xmethod_workers): Use
+	all_objfiles.
+	* python/py-objfile.c (objfpy_lookup_objfile_by_name)
+	(objfpy_lookup_objfile_by_build_id): Use all_objfiles.
+	* python/py-prettyprint.c (find_pretty_printer_from_objfiles):
+	Uses all_objfiles.
+	* solib.c (solib_read_symbols): Use all_objfiles
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* probe.c (parse_probes_in_pspace): Use all_objfiles.
+	* guile/scm-progspace.c (gdbscm_progspace_objfiles): Use
+	all_objfiles.
+	* objfiles.h (ALL_PSPACE_OBJFILES): Remove.
+	* symmisc.c (print_symbol_bcache_statistics)
+	(print_objfile_statistics, maintenance_print_objfiles)
+	(maintenance_info_symtabs, maintenance_check_symtabs)
+	(maintenance_expand_symtabs, maintenance_info_line_tables): Use
+	all_objfiles.
+	* source.c (forget_cached_source_info): Use all_objfiles.
+	* symfile-debug.c (set_debug_symfile): Use all_objfiles.
+	* elfread.c (elf_gnu_ifunc_resolve_by_cache)
+	(elf_gnu_ifunc_resolve_by_got): Use all_objfiles.
+	* objfiles.c (update_section_map): Use all_objfiles.
+	(shared_objfile_contains_address_p): Likewise.
+	* psymtab.c (maintenance_info_psymtabs): Use all_objfiles.
+	* python/py-progspace.c (pspy_get_objfiles): Use all_objfiles.
+
+2019-01-09  Tom Tromey  <tom@tromey.com>
+
+	* common/next-iterator.h: New file.
+	* objfiles.h (class all_objfiles): New.
+	(struct objfile_iterator): New.
+
+2019-01-09  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Move the description of the changed "frame", "select-frame",
+	 and "info frame" commands to the Changed commands section.
+
+2019-01-09  Simon Marchi  <simon.marchi@ericsson.com>
+
+	* gdbtypes.c (check_stub_method_group): Remove handling of old
+	mangling schemes.
+	* linespec.c (find_methods): Likewise.
+	* stabsread.c (read_member_functions): Likewise.
+	* valops.c (search_struct_method): Likewise.
+	(value_struct_elt_for_reference): Likewise.
+	* NEWS: Mention this change.
+
+2019-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cli/cli-cmds.c (list_command): Pass a source_lines_range to
+	print_source_lines.
+	* source.c (print_source_lines_base): Update line number check.
+	(print_source_lines): New function.
+	(source_lines_range::source_lines_range): New function.
+	* source.h (class source_lines_range): New class.
+	(print_source_lines): New declaration.
+
+2019-01-09  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* linespec.c (linespec_state_destructor): Free self->canonical_names.
+
+2019-01-08  Tom Tromey  <tom@tromey.com>
+	    Simon Marchi  <simon.marchi@ericsson.com>
+
+	PR gdb/24060
+	* ada-exp.y (DOLLAR_VARIABLE): Rename from SPECIAL_VARIABLE.
+	* ada-lex.l (DOLLAR_VARIABLE): Likewise.
+	* c-exp.y (DOLLAR_VARIABLE): Rename from VARIABLE.
+	* f-exp.y (DOLLAR_VARIABLE): Likewise.
+	* m2-exp.y (DOLLAR_VARIABLE): Rename from INTERNAL_VAR.
+	* p-exp.y (DOLLAR_VARIABLE): Rename from VARIABLE.
+
+2019-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* source.c (select_source_symtab): Move header comment to
+	declaration in source.h.
+	(forget_cached_source_info_for_objfile): Likewise.
+	(forget_cached_source_info): Likewise.
+	(identify_source_line): Likewise.
+	* source.h (identify_source_line): Move declaration from symtab.h
+	and add comment from source.c
+	(print_source_lines): Likewise.
+	(forget_cached_source_info_for_objfile): Likewise.
+	(forget_cached_source_info): Likewise.
+	(select_source_symtab): Likewise.
+	(enum print_source_lines_flag): Move definition from symtab.h.
+	* symtab.h (identify_source_line): Move declaration to source.h.
+	(print_source_lines): Likewise.
+	(forget_cached_source_info_for_objfile): Likewise.
+	(forget_cached_source_info): Likewise.
+	(select_source_symtab): Likewise.
+	(enum print_source_lines_flag): Move definition to source.h.
+	* tui/tui-hooks.c: Add 'source.h' include.
+
+2019-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* source.c (print_source_lines_base): Handle requests to print
+	reverse line number sequences, and guard against empty lines
+	string.
+
+2019-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* source.c (print_source_lines_base): Fix skip of '\r' if next
+	character is '\n'.
+
+2019-01-06  Tom Tromey  <tom@tromey.com>
+
+	* c-exp.y (struct c_parse_state) <macro_original_text,
+	expansion_obstack>: New member.
+	(macro_original_text, expansion_obstack): Remove globals.
+	(scan_macro_expansion, scanning_macro_expansion)
+	(finished_macro_expansion): Update.
+	(scan_macro_cleanup): Remove.
+	(yylex, c_parse): Update.
+
+2019-01-06  Tom Tromey  <tom@tromey.com>
+
+	* c-exp.y (struct c_parse_state) <strings>: New member.
+	(operator_stoken): Update.
+
+2019-01-06  Tom Tromey  <tom@tromey.com>
+
+	* parser-defs.h (type_ptr): Remove typedef.  Don't declare VEC.
+	(union type_stack_elt) <typelist_val>: Now a pointer to
+	std::vector.
+	(type_stack_cleanup): Don't declare.
+	(push_typelist): Update.
+	* parse.c (pop_typelist): Return a std::vector.
+	(push_typelist): Take a std::vector.
+	(follow_types): Update.  Do not free args.
+	(type_stack_cleanup): Remove.
+	* c-exp.y (struct c_parse_state): New.
+	(cpstate): New global.
+	(type_aggregate_p, exp, ptr_operator, parameter_typelist)
+	(nonempty_typelist): Update.
+	(func_mod): Create a new vector.
+	(c_parse): Create a c_parse_state.
+	(check_parameter_typelist): Do not delete params.
+	(function_method): Update.  Do not delete type_list.
+
+2019-01-06  Tom Tromey  <tom@tromey.com>
+
+	PR gdb/28155:
+	* python/py-finishbreakpoint.c (bpfinishpy_init): Use
+	check_typedef.
+	* infcmd.c (finish_command_fsm_should_stop): Use check_typedef.
+	(print_return_value): Likewise.
+
+2019-01-05  Tom Tromey  <tom@tromey.com>
+
+	* contrib/cleanup_check.py: Remove.
+	* contrib/gcc-with-excheck: Remove.
+	* contrib/exsummary.py: Remove.
+	* contrib/excheck.py: Remove.
+
+2019-01-05  Joel Brobecker  <brobecker@adacore.com>
+
+	* thread.c (delete_thread_1): Add gdb_assert that THR is not
+	NULL. Initialize tpprev to NULL instead of assigning it
+	to NULL on the next statement.
+	* windows-nat.c (windows_delete_thread): Remove check for
+	main_thread_id before printing thread exit notifications.
+	(get_windows_debug_event) <EXIT_THREAD_DEBUG_EVENT>:
+	Remove thread ID check against main_thread_id.
+	<CREATE_PROCESS_DEBUG_EVENT>: Remove call to
+	windows_delete_thread.
+	<EXIT_PROCESS_DEBUG_EVENT>: Add call to windows_delete_thread.
+
+2019-01-04  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile.c (_initialize_compile): Use upper case for
+	metasyntactic variables.
+	* symmisc.c (_initialize_symmisc): Use upper case for
+	metasyntactic variables.
+	* psymtab.c (_initialize_psymtab): Use upper case for
+	metasyntactic variables.
+	* demangle.c (demangle_command): Use upper case for metasyntactic
+	variables.
+	(_initialize_demangler): Likewise.
+	* ax-gdb.c (_initialize_ax_gdb): Use upper case for metasyntactic
+	variables.
+
+2019-01-03  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-source.c (tui_set_source_content): Use xstrdup.
+
+2019-01-03  Tom Tromey  <tom@tromey.com>
+
+	* python/py-symtab.c (salpy_str): Update.
+	(struct salpy_sal_object) <symtab>: Now a PyObject.
+	(salpy_dealloc): Update.
+	(del_objfile_sal): Use gdbpy_ref.
+
+2019-01-03  Tom Tromey  <tom@tromey.com>
+
+	* python/py-type.c (convert_field): Use new_reference.  Return
+	gdbpy_ref.
+	(make_fielditem): Return gdbpy_ref.
+	(typy_fields): Update.
+	(typy_getitem): Update.
+	(field_name): Return gdbpy_ref.  Use new_reference.
+	(typy_iterator_iternext): Update.
+
+2019-01-03  Tom Tromey  <tom@tromey.com>
+
+	* python/py-record.c (gdbpy_stop_recording): Use Py_RETURN_NONE.
+
+2019-01-03  Tom Tromey  <tom@tromey.com>
+
+	* python/py-value.c (valpy_dealloc): Use Py_XDECREF.
+	* python/py-type.c (typy_fields_items): Use gdbpy_ref.
+	* python/py-progspace.c (pspy_set_printers): Use gdbpy_ref.
+	(pspy_set_frame_filters, pspy_set_frame_unwinders)
+	(pspy_set_type_printers): Likewise.
+	* python/py-function.c (fnpy_init): Use gdbpy_ref.
+	* python/py-cmd.c (cmdpy_init): Use gdbpy_ref.
+	* python/py-objfile.c (objfpy_set_printers): Use gdbpy_ref.
+	(objfpy_set_frame_filters, objfpy_set_frame_unwinders)
+	(objfpy_set_type_printers): Likewise.
+
+2019-01-03  Tom Tromey  <tom@tromey.com>
+
+	* python/python.c (gdbpy_enter, ~gdbpy_enter): Update.
+	(gdbpy_print_stack): Use gdbpy_err_fetch.
+	* python/python-internal.h (class gdbpy_err_fetch): New class.
+	(class gdbpy_enter) <m_error_type, m_error_value,
+	m_error_traceback>: Remove.
+	<m_error>: New member.
+	(gdbpy_exception_to_string): Don't declare.
+	* python/py-varobj.c (py_varobj_iter_next): Use gdbpy_err_fetch.
+	* python/py-value.c (convert_value_from_python): Use
+	gdbpy_err_fetch.
+	* python/py-utils.c (gdbpy_err_fetch::to_string): Rename from
+	gdbpy_exception_to_string.
+	(gdbpy_handle_exception): Use gdbpy_err_fetch.
+	* python/py-prettyprint.c (print_stack_unless_memory_error): Use
+	gdbpy_err_fetch.
+
+2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-nat.c (delete_lwp_cleanup): Delete.
+	(struct lwp_deleter): New struct.
+	(lwp_info_up): New typedef.
+	(linux_nat_target::follow_fork): Delete cleanup, and make use of
+	lwp_info_up.
+
+2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-fork.c (class scoped_switch_fork_info): New class.
+	(inferior_call_waitpid): Update to use scoped_switch_fork_info.
+
+2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* valops.c (find_overload_match): Remove use of null_cleanup, and
+	calls to do_cleanups.
+
+2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* compile/compile-cplus-types.c
+	(compile_cplus_instance::decl_name): Handle changes to
+	cp_func_name.
+	* cp-support.c (cp_func_name): Update header comment, update
+	return type.
+	* cp-support.h (cp_func_name): Update return type in declaration.
+	* valops.c (find_overload_match): Move temp_func local to top
+	level of function and change its type.  Use temp_func to hold and
+	delete temporary string obtained from cp_func_name.
+
+2019-01-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* remote.c (remote_target::remote_check_symbols): Convert `msg` to
+	gdb::char_vector, remove cleanup, and update uses of `msg`.
+
+2019-01-03  Jim Wilson  <jimw@sifive.com>
+
+	* riscv-tdep.c (riscv_freg_feature): Drop s0 name from f8.
+
+2019-01-02  Tom Tromey  <tom@tromey.com>
+
+	* xml-tdesc.c (xml_cache): Hold a target_desc_up.
+	(tdesc_parse_xml): Remove cleanups.
+	* target-descriptions.h (make_cleanup_free_target_description):
+	Don't declare.
+	(target_desc_deleter): New struct.
+	(target_desc_up): New typedef.
+	* target-descriptions.c (target_desc_deleter::operator()): Rename
+	from free_target_description.
+	(make_cleanup_free_target_description): Remove.
+
+2019-01-02  Tom Tromey  <tom@tromey.com>
+
+	* linespec.c (struct linespec_parser): Rename from ls_parser.  Add
+	constructor, destructor.
+	(linespec_parser): Remove typedef.
+	(~linespec_parser): Rename from linespec_parser_delete.
+	(linespec_lex_to_end, linespec_complete_label)
+	(linespec_complete): Update.
+	(decode_line_full): Remove cleanups.
+	(decode_line_1): Update.
+
+2019-01-02  Tom Tromey  <tom@tromey.com>
+
+	* python/python-internal.h (inferior_to_inferior_object): Change
+	return type.
+	* python/py-exitedevent.c (create_exited_event_object): Update.
+	* python/py-inferior.c (inferior_to_inferior_object): Return
+	gdbpy_ref.
+	(python_new_inferior, python_inferior_deleted)
+	(thread_to_thread_object, delete_thread_object)
+	(build_inferior_list, gdbpy_selected_inferior): Update.
+	* python/py-infthread.c (create_thread_object): Update.  Also fail
+	if inferior_to_inferior_object fails.
+
+2019-01-02  Simon Marchi  <simon.marchi@ericsson.com>
+
+	* inferior.h (class inferior) <displaced_step_state>: New field.
+	* infrun.h (struct displaced_step_state): Move here from
+	infrun.c.  Initialize fields, add constructor.
+	<inf>: Remove field.
+	<reset>: New method.
+	* infrun.c (struct displaced_step_inferior_state): Move to
+	infrun.h.
+	(displaced_step_inferior_states): Remove.
+	(get_displaced_stepping_state): Adust.
+	(displaced_step_in_progress_any_inferior): Adjust.
+	(displaced_step_in_progress_thread): Adjust.
+	(displaced_step_in_progress): Adjust.
+	(add_displaced_stepping_state): Remove.
+	(get_displaced_step_closure_by_addr): Adjust.
+	(remove_displaced_stepping_state): Remove.
+	(infrun_inferior_exit): Call displaced_step_state.reset.
+	(use_displaced_stepping): Don't check for NULL.
+	(displaced_step_prepare_throw): Call
+	get_displaced_stepping_state.
+	(displaced_step_fixup): Don't check for NULL.
+	(prepare_for_detach): Don't check for NULL.
+
+2019-01-02  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* infcall.c (call_function_by_hand_dummy): cleanup/destroy sm
+	 in case of call that did not complete.
+
+2019-01-02  Andrey Utkin  <autkin@undo.io>
+
+	* symfile.c (find_separate_debug_file): Fix search of debug files for
+	remote debuggee.
+
+2019-01-02  Tom Tromey  <tom@tromey.com>
+
+	* python/py-inferior.c (gdbpy_initialize_inferior): Fix
+	indentation.
+	* python/py-frame.c (frapy_older): Remove cast.
+	(frapy_newer): Likewise.
+	* python/py-breakpoint.c (local_setattro): Remove cast.
+	* python/py-arch.c (archpy_name): Remove local variable.
+	* python/py-type.c (gdbpy_lookup_type): Remove cast.
+
+2019-01-02  Joel Brobecker  <brobecker@adacore.com>
+
+	* unittests/basic_string_view/element_access/char/empty.cc:
+	Fix year range in copyright header.
+
+2019-01-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arch/riscv.h (struct riscv_gdbarch_features) <hw_float_abi>:
+	Delete.
+	<operator==>: Update with for removed field.
+	<hash>: Likewise.
+	* riscv-tdep.h (struct gdbarch_tdep) <features>: Renamed to...
+	<isa_features>: ...this.
+	<abi_features>: New field.
+	(riscv_isa_flen): Update comment.
+	(riscv_abi_xlen): New declaration.
+	(riscv_abi_flen): New declaration.
+	* riscv-tdep.c (riscv_isa_xlen): Update to get answer from
+	isa_features.
+	(riscv_abi_xlen): New function.
+	(riscv_isa_flen): Update to get answer from isa_features.
+	(riscv_abi_flen): New function.
+	(riscv_has_fp_abi): Update to get answer from abi_features.
+	(riscv_call_info::riscv_call_info): Use abi xlen and flen, not isa
+	xlen and flen.
+	(riscv_call_info) <xlen, flen>: Update comment.
+	(riscv_call_arg_struct): Remove invalid assertions
+	(riscv_features_from_gdbarch_info): Update now hw_float_abi field
+	is removed.
+	(riscv_gdbarch_init): Gather isa features and abi features
+	separately, ensure both match on the gdbarch when reusing an old
+	gdbarch.  Relax an error check to allow 32-bit abi float to run on
+	a target with 64-bit float hardware.
+
+2019-01-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* source.c (search_command_helper): Stop reverse search
+	when line 1 has been searched.
+
+2019-01-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* record-full.c (record_full_base_target::close): Rewrite
+	record_full_core_buf_list free logic.
+
+2019-01-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* break-catch-syscall.c (print_one_catch_syscall): xfree
+	the last text.
+
+2019-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* top.c (print_gdb_version): Update Copyright year in version
+	message.
+
+2019-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	Update copyright year range in all GDB files.
+
+2019-01-01, 19  Joel Brobecker  <brobecker@adacore.com>
+
+	* config/djgpp/fnchange.lst: Add entry for gdb/ChangeLog-2018.
+
+For older changes see ChangeLog-2018.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+coding: utf-8
+End:
+
diff --git a/gdb/ChangeLog-2013 b/gdb/ChangeLog-2013
index 897ad2aa54..5e6818f28e 100644
--- a/gdb/ChangeLog-2013
+++ b/gdb/ChangeLog-2013
@@ -6265,9 +6265,9 @@
 
 2013-06-21  Joel Brobecker  <brobecker@adacore.com>
 
-	* gdb/gnulib/Makefile.in: Update date in copyright header.
-	* gdb/gnulib/configure.ac: Ditto.
-	* gdb/gnulib/update-gnulib.sh: Ditto.
+	* gnulib/Makefile.in: Update date in copyright header.
+	* gnulib/configure.ac: Ditto.
+	* gnulib/update-gnulib.sh: Ditto.
 
 2013-06-21  Joel Brobecker  <brobecker@adacore.com>
 
diff --git a/gdb/ChangeLog-2003 b/gdb/ChangeLog-2003
index 9a88b450c6..0bc0a6ec7e 100644
--- a/gdb/ChangeLog-2003
+++ b/gdb/ChangeLog-2003
@@ -2231,9 +2231,9 @@
 
 2003-10-17  Shrinivas Atre  <shrinivasa@KPITCummins.com>
 
-	* gdb/config/h8300/tm-h8300.h (h8300_normal_mode): Add external
+	* config/h8300/tm-h8300.h (h8300_normal_mode): Add external
 	declaration.
-	* gdb/h8300-tdep.c (BINWORD): Update BINWORD for h8300_normal_mode
+	* h8300-tdep.c (BINWORD): Update BINWORD for h8300_normal_mode
         (h8300_examine_prologue): Use h8300_normal_mode flag
         (h8300_gdbarch_init): Set architecture info for normal mode
 
@@ -7899,7 +7899,7 @@ Fri Aug  8 00:28:38 UTC 2003  Brendan Conoboy  <blc@redhat.com>
 
 2003-06-07  Adam Fedor  <fedor@gnu.org>
 
-	* gdb/objc-lang.c (FETCH_ARGUMENT): Remove macro.
+	* objc-lang.c (FETCH_ARGUMENT): Remove macro.
 	(OBJC_FETCH_POINTER_ARGUMENT): Shorthand macro for
 	using FETCH_POINTER_ARGUMENT with Objective-C method arguments.
 	(find_implementation, resolve_msgsend, resolve_msgsend_stret,
@@ -11239,7 +11239,7 @@ Fri Aug  8 00:28:38 UTC 2003  Brendan Conoboy  <blc@redhat.com>
 
 2003-04-01  Adam Fedor  <fedor@gnu.org>
 
-	* gdb/objc-lang.c (selectors_info): Replace calls to
+	* objc-lang.c (selectors_info): Replace calls to
 	SYMBOL_DEMANGLED_NAME and DEPRECATED_SYMBOL_NAME with
 	SYMBOL_NATURAL_NAME.
 	(classes_info, find_methods): Likewise.
@@ -14236,7 +14236,7 @@ Fri Aug  8 00:28:38 UTC 2003  Brendan Conoboy  <blc@redhat.com>
 
 	2002-04-02  Elena Zannoni  <ezannoni@redhat.com>
 
-		* gdb/sh-tdep.c (sh_sh2e_register_name): New.
+		* sh-tdep.c (sh_sh2e_register_name): New.
 		(sh2e_show_regs): New.
 		(sh_gdbarch_init): Handle bfd_mach_sh2e.
 		* config/sh/tm-sh.h: Added sh2e to comments.
diff --git a/gdb/ChangeLog-2009 b/gdb/ChangeLog-2009
index 4771158b51..74eca8cb63 100644
--- a/gdb/ChangeLog-2009
+++ b/gdb/ChangeLog-2009
@@ -786,7 +786,7 @@
 2009-11-17  Jan Kratochvil  <jan.kratochvil@redhat.com>
 
 	Fix wrong debug output with `set debug infrun 1'.
-	* gdb/infrun.c (handle_inferior_event <debug_infrun>): New variable
+	* infrun.c (handle_inferior_event <debug_infrun>): New variable
 	old_chain.  Temporarily switch INFERIOR_PTID.
 	* target.h (target_stopped_by_watchpoint): Extend the comment.
 	(target_stopped_data_address): New comment.
@@ -2672,10 +2672,6 @@
 	PR python/10666:
 	* python/py-function.c (fnpy_init): Use xstrdup.
 
-2009-09-21  Jie Zhang  <jie.zhang@analog.com>
-
-	* doc/gdb.texinfo: Escape "{" and "}".
-
 2009-09-21  Phil Muldoon <pmuldoon@redhat.com>
 
 	PR python/10633
@@ -3207,7 +3203,7 @@
 
 2009-09-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
 
-	* gdb/Makefile.in (check//%): Parse 'config.status --version'
+	* Makefile.in (check//%): Parse 'config.status --version'
 	output to recreate the configuration from the testsuite directory,
 	rather than running 'config.status --recheck' from a different
 	build directory.  Let configure do the recursion rather than
@@ -10853,8 +10849,8 @@
 
 	Fix completer problem for filename completion on the first try.
 
-	* gdb/completer.h (gdb_completion_word_break_characters): New function.
-	* gdb/completer.c: Include gdb_assert.h.
+	* completer.h (gdb_completion_word_break_characters): New function.
+	* completer.c: Include gdb_assert.h.
 	(complete_line_internal_reason): New enum.
 	(complete_line_internal): Change last argument type to
 	complete_line_internal_reason.
@@ -12995,7 +12991,7 @@
 
 2009-01-20  Kazu Hirata  <kazu@codesourcery.com>
 
-	* gdb/procfs.c (info_mappings_callback): Cast map->pr_size to
+	* procfs.c (info_mappings_callback): Cast map->pr_size to
 	unsigned long.
 
 2009-01-20  Daniel Jacobowitz  <dan@codesourcery.com>
diff --git a/gdb/ChangeLog-1998 b/gdb/ChangeLog-1998
index a9038f8138..5cb0303223 100644
--- a/gdb/ChangeLog-1998
+++ b/gdb/ChangeLog-1998
@@ -3710,9 +3710,9 @@ Tue Dec  8 15:09:44 1998  Edith Epstein  <eepstein@sophia.cygnus.com>
         * config/m68k/nm-linux.h: New file.
         * config/m68k/tm-linux.h: New file.
         * config/m68k/xm-linux.h: New file.
-        * gdb/m68klinux-nat.c: New file.
+        * m68klinux-nat.c: New file.
         * gdbserver/low-linux.c: Add support for m68k-linux.
-        * gdb/config/m68k/tm-m68k.h (NUM_FREGS): New macro.
+        * config/m68k/tm-m68k.h (NUM_FREGS): New macro.
 
 1998-12-07  Jason Molenda  (jsm@bugshack.cygnus.com)
 
@@ -6002,7 +6002,7 @@ Mon Apr 20 15:35:03 1998  Philippe De Muyter  <phdm@macqel.be>
 
 Mon Apr 20 15:32:21 1998   Mark Kettenis  <kettenis@phys.uva.nl>
 
-        * gdb/gdb_string.h (strdup): Declare only if not defined as a
+        * gdb_string.h (strdup): Declare only if not defined as a
         macro.
 
 Mon Apr 20 14:18:45 1998  J. Kean Johnston  <jkj@sco.com>
diff --git a/bfd/ChangeLog-2019 b/bfd/ChangeLog-2019
new file mode 100644
index 0000000000..003f013b41
--- /dev/null
+++ b/bfd/ChangeLog-2019
@@ -0,0 +1,3185 @@
+2019-12-31  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_slurp_eisd): Don't overflow when checking
+	offset.  Don't overflow when checking rec_size, and do allow
+	rec_size to the end of the buffer.  Ensure eisd->type can be
+	accessed, not just the first 32 bytes.  Don't call
+	_bfd_vms_save_counted_string with zero length remaining.  Fail
+	on empty string section name.
+	(_bfd_vms_slurp_egsd): Formatting.  Catch more reads past end
+	of record size.  Correct remaining length calculation.  Fail
+	on empty string section name.  Consolidate error paths.
+
+2019-12-30  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (alpha_vms_free_private): New function, extracted..
+	(vms_close_and_cleanup): ..from here.
+	(alpha_vms_object_p): Call alpha_vms_free_private on failure.
+
+2019-12-30  Alan Modra  <amodra@gmail.com>
+
+	* coffgen.c (coff_real_object_p): Free malloc'd memory on failure.
+
+2019-12-30  Alan Modra  <amodra@gmail.com>
+
+	* archive.c (do_slurp_bsd_armap): Use bfd_alloc rather than
+	bfd_zalloc when memory is all written after the call.
+	(do_slurp_coff_armap): Likewise.  Set bfd_error on ridiculously
+	large allocations that overflow bfd_size_type.  Use just one
+	bfd_release on error exit.
+	(_bfd_slurp_extended_name_table): Use bfd_alloc for extended_names,
+	clear last byte rather than the entire array.  Use bfd_alloc for
+	string table.  Rearrange and simplify code copying file names.
+
+2019-12-29  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_slurp_egsd): Make base_addr a bfd_vma.
+	Limit alignment power.  Correct and simplify alignment expression.
+	(evax_bfd_print_relocation_records): Avoid signed shift left.
+
+2019-12-29  Alan Modra  <amodra@gmail.com>
+
+	* vms-misc.c (_bfd_vms_save_sized_string): Add abfd param, make
+	size a size_t.  Use bfd_alloc rather than bfd_malloc.
+	(_bfd_vms_save_counted_string): Similarly.
+	* vms.h (_bfd_vms_save_sized_string): Update prototype.
+	(_bfd_vms_save_counted_string): Likewise.
+	* vms-alpha.c (_bfd_vms_slurp_ehdr): Adjust
+	_bfd_vms_save_counted_string and bfd_vms_save_sized_string calls.
+	(_bfd_vms_slurp_egsd, parse_module): Likewise.
+	(_bfd_vms_slurp_eisd): Likewise.  Check return status.
+	(alpha_vms_bfd_link_hash_table_free): New function.
+	(alpha_vms_bfd_link_hash_table_create): Arrange to call it.
+	(vms_close_and_cleanup): Free more memory.  Don't release tdata.
+
+2019-12-29  Alan Modra  <amodra@gmail.com>
+
+	* coffcode.h (coff_close_and_cleanup): Redefine to..
+	* coffgen.c (_bfd_coff_close_and_cleanup): ..this.  New function.
+	* libcoff-in.h (_bfd_coff_close_and_cleanup): Declare.
+	* libcoff.h: Regenerate.
+
+2019-12-29  Hannes Domani  <ssbssa@yahoo.de>
+	    Alan Modra  <amodra@gmail.com>
+
+	PR 15350
+	* bfd.c (bfd_update_compression_header): Write zlib header for
+	formats other than ELF too.
+
+2019-12-26  Alan Modra  <amodra@gmail.com>
+
+	* som.c (setup_sections): Don't overflow space_strings_size.  Use
+	bfd_malloc2 to catch overflow of size calculation.
+	(som_prep_for_fixups): Use bfd_zalloc2 to catch overflow of size
+	calculation.
+	(som_build_and_write_symbol_table): Similarly use bfd_zmalloc2.
+	(som_slurp_symbol_table): Similarly use bfd_zmalloc2, bfd_malloc2,
+	and bfd_zalloc2.
+	(bfd_som_attach_aux_hdr): Use size_t vars for string length.
+	(som_bfd_count_ar_symbols): Use bfd_malloc2 to catch overflow of
+	size calculation.  Use size_t vars for length and catch overflow.
+	(som_slurp_armap): Use bfd_alloc2 to catch overflow of size
+	calculation.
+	(som_bfd_ar_write_symbol_stuff): Similarly use bfd_zmalloc2 and
+	bfd_malloc2.  Perform size calculations in bfd_size_type.
+
+2019-12-26  Hannes Domani  <ssbssa@yahoo.de>
+
+	* peicode.h (pe_bfd_read_buildid): Free data.
+
+2019-12-23  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (add_symbol): Add "max" parameter.  Error on string
+	length larger than max.
+	(_bfd_vms_slurp_egsd): Ensure record is at least large enough to
+	read string length byte, error if not.  Pass size to add_symbol.
+	(_bfd_vms_slurp_etir): Don't read past end of buffer when reading
+	type and length.  Allow read of last byte in buffer.
+
+2019-12-23  Alan Modra  <amodra@gmail.com>
+
+	* wasm-module.c (wasm_read_leb128): Don't allow oversize shifts.
+	Catch value overflow.  Sign extend only on terminating byte.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	* xtensa-isa.c (xtensa_insnbuf_from_chars): Avoid signed overflow.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	* libhppa.h (hppa_field_adjust, bfd_hppa_insn2fmt): Delete forward
+	declaration.  Move ATTRIBUTE_UNUSED to definition.
+	(sign_extend, low_sign_extend, sign_unext, low_sign_unext),
+	(re_assemble_3, re_assemble_12, re_assemble_14, re_assemble_16),
+	(re_assemble_17, re_assemble_21, re_assemble_22): Likewise.  Make
+	args and return value unsigned.  Use unsigned variables.
+	(hppa_rebuild_insn): Similarly.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	* format.c (bfd_check_format_matches): Free matching_vector when
+	not returning matching target strings.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	* coff-alpha.c (alpha_ecoff_read_ar_hdr): Free ar_hdr on error return.
+
+2019-12-18  Alan Modra  <amodra@gmail.com>
+
+	* coff-rs6000.c (_bfd_xcoff_slurp_armap): Don't overflow when
+	checking symbol count against section size.  Guard against strlen
+	running off end of buffer by allocating one more byte and zeroing.
+	* coff64-rs6000.c (xcoff64_slurp_armap): Likewise.
+
+2019-12-18  Alan Modra  <amodra@gmail.com>
+
+	* elf32-ppc.c (ppc_elf_get_synthetic_symtab): Use size_t for vars.
+	* elf64-ppc.c (sym_exists_at): Use size_t for lo, hi and mid.
+
+2019-12-18  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (ELF_LOCAL_SYMBOL_HASH): Avoid signed overflow.
+	* elf32-hppa.c (final_link_relocate): Likewise.
+	* elf32-ppc.c (_bfd_elf_ppc_at_tls_transform): Likewise.
+	(_bfd_elf_ppc_at_tprel_transform, is_insn_ds_form): Likewise.
+	(is_insn_dq_form, ppc_elf_relocate_section): Likewise.
+	* elf64-ppc.c (ok_lo_toc_insn, ppc64_elf_edit_toc): Likewise.
+	(ppc64_elf_relocate_section): Likewise.
+	* elfxx-mips.c (mips_elf_perform_relocation): Likewise.
+	* netbsd.h (N_SET_FLAGS): Likewise.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* coff-tic80.c: Delete file.
+	* cpu-tic80.c: Delete file.
+	* archures.c: Remove tic80 support.
+	* coffcode.h: Likewise.
+	* coffswap.h: Likewise.
+	* targets.c: Likewise.
+	* config.bfd: Likewise.
+	* configure.ac: Likewise.
+	* Makefile.am: Likewise.
+	* Makefile.in: Regenerate.
+	* bfd-in2.h: Regenerate.
+	* configure: Regenerate.
+	* po/SRC-POTFILES.in: Regenerate.
+
+2019-12-13  Alan Modra  <amodra@gmail.com>
+
+	PR 25237
+	* elf.c: (assign_file_positions_for_load_sections): Attempt to
+	keep meaningless p_offset for PT_LOAD segments without file
+	contents within file size.
+
+2019-12-12  Alan Modra  <amodra@gmail.com>
+
+	* libbfd.c (bfd_get): Don't cast result of bfd_get_8.
+	* bfd-in2.h: Regenerate.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* elf32-rx.c (elf32_rx_relax_section): Avoid signed overflow.
+	* libaout.h (N_SET_INFO, N_SET_FLAGS): Likewise.
+	* netbsd.h (write_object_contents): Likewise.
+	* elf32-arm.c (bfd_elf32_arm_vfp11_erratum_scan): Likewise.
+	* libhppa.h (HPPA_R_CONSTANT): Don't signed extend with shifts.
+	(stm32l4xx_create_replacing_stub_vldm): Don't truncate high bits
+	with shifts.
+	* elf32-nds32.h (R_NDS32_RELAX_ENTRY_DISABLE_RELAX_FLAG): Define
+	using 1u shifted left.  Ditto for other macros.
+	* mmo.c (LOP): Make unsigned.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* libbfd.c (bfd_get_8): Return a bfd_vma.
+	(bfd_get_signed_8): Return a bfd_signed_vma.
+	* bfd-in2.h: Regenerate.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* xtensa-modules.c (Field_* functions): Don't mask using shifts.
+	(Operand_soffsetx4_decode, Operand_simm4_decode),
+	(Operand_simm8_decode, Operand_simm8x256_decode),
+	(Operand_simm12b_decode, Operand_label8_decode),
+	(Operand_label12_decode, Operand_soffset_decode),
+	(Operand_xt_wbr15_label_decode, Operand_xt_wbr18_label_decode): Don't
+	sign extend using shifts.
+	(Operand_immrx4_decode, Operand_uimm16x4_decode): Avoid UB in
+	constant.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* cpu-ia64-opc.c (ext_imms_scaled): Avoid undefined left shift
+	of negative values by using unsigned vars.
+
+2019-12-07  Alan Modra  <amodra@gmail.com>
+
+	PR 25236
+	* elflink.c (_bfd_elf_link_assign_sym_version): Assign versions
+	for ELF_COMMON_DEF_P symbols.
+	(elf_link_output_extsym, _bfd_elf_add_default_symbol): Adjust to
+	suit.
+
+2019-12-05  Sandra Loosemore  <sandra@codesourcery.com>
+
+	Only give FDE encoding warnings if --eh-frame-hdr was specified.
+
+	* elf-eh-frame.c (_bfd_elf_discard_section_eh_frame): Make
+	FDE encoding warning conditional.
+
+2019-12-05  Nick Clifton  <nickc@redhat.com>
+
+	PR 25029
+	* peXXigen.c (_bfd_XXi_swap_aouthdr_out): Ignore empty sections
+	when computing the sizes stored in the headers.
+
+2019-12-03  Alan Modra  <amodra@gmail.com>
+
+	PR 25230
+	* dwarf2.c (struct dwarf2_debug_file): Add line_table and
+	abbrev_offsets.
+	(struct abbrev_offset_entry): New.
+	(hash_abbrev, eq_abbrev, del_abbrev): New functions.
+	(read_abbrevs): Check whether we have already read abbrevs at
+	given offset, and add new offset/abbrev to hash table.
+	(decode_line_info): Keep line table at offset zero in file struct.
+	Return this for a cu reusing the same dir/file list.
+	(find_abstract_instance): Find cu for DW_FORM_GNU_ref_alt.
+	(_bfd_dwarf2_slurp_debug_info): Create offset/abbrev hash tables.
+	(_bfd_dwarf2_cleanup_debug_info): Adjust deletion of lines and
+	abbrevs.
+
+2019-12-03  Alan Modra  <amodra@gmail.com>
+
+	PR 25230
+	* dwarf2.c (struct dwarf2_debug_file): New struct.
+	(struct dwarf2_debug): Delete fields now in dwarf2_debug_file.
+	Add f, alt fields.
+	(struct comp_unit): Add file field.
+	(read_indirect_string, read_indirect_line_string): Adjust to suit.
+	(read_alt_indirect_string, read_alt_indirect_ref): Likewise.
+	(read_debug_ranges, find_abstract_instance, read_rangelist): Likewise.
+	(_bfd_dwarf2_stash_syms, place_sections): Likewise.
+	(stash_maybe_update_info_hash_tablse): Likewise.
+	(stash_verify_info_hash_table): Likewise.
+	(_bfd_dwarf2_slurp_debug_info): Likewise.
+	(_bfd_dwarf2_find_symbol_bias): Likewise.
+	(_bfd_dwarf2_find_nearest_line): Likewise.
+	(_bfd_dwarf2_cleanup_debug_info): Likewise.
+	(read_abbrevs): Add file param and adjust.  Update calls.
+	(stash_comp_unit): Likewise.
+	(decode_line_info): Delete stash param and adjust.  Update calls.
+	(comp_unit_find_nearest_line): Likewise.
+	(comp_unit_maybe_decode_line_info): Likewise.
+	(comp_unit_find_line): Likewise.
+	(parse_comp_unit): Add file and info_ptr param and adjust.  Update
+	calls.
+
+2019-12-03  Alan Modra  <amodra@gmail.com>
+
+	* dwarf2.c (read_indirect_string): Don't duplicate offset check
+	done in read_section.
+	(read_indirect_line_string): Likewise.
+	(read_alt_indirect_string): Likewise.
+	(read_alt_indirect_ref): Likewise.
+	(read_abbrevs): Likewise.  Free memory on all failure paths.
+	Use correct unsigned type for pointer difference comparison.
+
+2019-12-03  Alan Modra  <amodra@gmail.com>
+
+	* dwarf2.c (struct dwarf2_debug): Update comments.  Remove sec
+	and sec_info_ptr.
+	(_bfd_dwarf2_slurp_debug_info): Don't set sec or sec_info_ptr.
+	(stash_comp_unit): Likewise.
+	(read_alt_indirect_ref): Return NULL not FALSE.
+
+2019-12-03  Alan Modra  <amodra@gmail.com>
+
+	* dwarf2.c (_bfd_dwarf2_find_nearest_line): Correct function comment.
+
+2019-11-27  Alan Modra  <amodra@gmail.com>
+
+	PR 23652
+	* dwarf2.c (_bfd_dwarf2_stash_syms): Break out of loop on finding
+	matching section.
+	(_bfd_dwarf2_find_nearest_line): Return an int, with value 2 when
+	returning info from the symbol table.  Do the _bfd_elf_find_function
+	search also when !found.  Call _bfd_dwarf2_stash_syms regardless of
+	symbols.
+	* elf64-alpha.c (elf64_alpha_find_nearest_line): Accept dwarf2
+	result of 1 only.
+	* elfxx-mips.c (_bfd_mips_elf_find_nearest_line): Likewise.
+	* libbfd-in.h (_bfd_dwarf2_find_nearest_line): Update prototype.
+	* libbfd.h: Regenerate.
+
+2019-11-27  Alan Modra  <amodra@gmail.com>
+
+	PR 23652
+	* dwarf2.c (_bfd_dwarf2_stash_syms): New function.
+	(_bfd_dwarf2_find_nearest_line): Use it here, passing syms to
+	_bfd_elf_find_function.  Call _bfd_elf_find_function in cases
+	where _bfd_elf_find_nearest_line would do so.
+	* elf.c (_bfd_elf_find_nearest_line): Omit _bfd_elf_find_function
+	for dwarf2.
+	* elfxx-mips.c (_bfd_mips_elf_find_nearest_line): Similarly.  Tidy.
+	* elf32-arm.c (elf32_arm_maybe_function_sym): New function.
+	(elf_backend_maybe_function_sym): Define.
+	(arm_elf_find_function, elf32_arm_find_nearest_line): Delete.
+	(bfd_elf32_find_nearest_line): Don't define.
+	* elfnn-aarch64.c (elfNN_aarch64_maybe_function_sym): New function.
+	(elf_backend_maybe_function_sym): Define.
+	(aarch64_elf_find_function, elfNN_aarch64_find_nearest_line): Delete.
+	(bfd_elfNN_find_nearest_line): Don't define.
+
+2019-11-27  Alan Modra  <amodra@gmail.com>
+
+	* elf32-sh.c (sh_reloc): Use a bfd_vma insn.
+	(sh_reloc <R_SH_IND12W>): Divide calculated relocation value
+	by two before applying to insn.  Correct overflow test.
+	* coff-sh.c (sh_reloc): Likewise.
+
+2019-11-26  Nick Clifton  <nickc@redhat.com>
+
+	* elf32-sh.c (sh_elf_reloc): Use a signed_vma when checking for a
+	negative relocated value.
+	* coff-sh.c (sh_reloc): Likewise.
+
+2019-11-25  Alan Modra  <amodra@gmail.com>
+
+	* archures.c (bfd_octets_per_byte): Tail call
+	bfd_arch_mach_octets_per_byte.
+	* coff-arm.c (OCTETS_PER_BYTE): Define.
+	(coff_arm_reloc): Introduce new "octets" temp.  Use OCTETS_PER_BYTE
+	with section.  Correct "addr".  Remove ATTRIBUTE_UNUSED.
+	* coff-i386.c (coff_i386_reloc): Similarly.
+	* coff-mips.c (mips_reflo_reloc): Similarly.
+	* coff-x86_64.c (coff_amd64_reloc): Similarly.
+	* elf32-msp430.c (OCTETS_PER_BYTE): Define.
+	(rl78_sym_diff_handler): Use OCTETS_PER_BYTE, with section.
+	* elf32-nds32.c (nds32_elf_get_relocated_section_contents): Similarly.
+	* elf32-ppc.c (ppc_elf_addr16_ha_reloc): Similarly.
+	* elf32-pru.c (pru_elf32_do_ldi32_relocate): Similarly.
+	* elf32-s12z.c (opru18_reloc): Similarly.
+	* elf32-sh.c (sh_elf_reloc): Similarly.
+	* elf32-spu.c (spu_elf_rel9): Similarly.
+	* elf32-xtensa.c (bfd_elf_xtensa_reloc): Similarly.
+	* elf64-ppc.c (ppc64_elf_ha_reloc, ppc64_elf_brtaken_reloc),
+	(ppc64_elf_toc64_reloc): Similarly.
+	* bfd.c (bfd_get_section_limit): Pass section to bfd_octets_per_byte.
+	* cofflink.c (_bfd_coff_link_input_bfd),
+	(_bfd_coff_reloc_link_order): Likewise.
+	* elf.c (_bfd_elf_section_offset): Likewise.
+	* elflink.c (resolve_section, bfd_elf_perform_complex_relocation),
+	(elf_link_input_bfd, elf_reloc_link_order, elf_fixup_link_order),
+	(bfd_elf_final_link): Likewise.
+	* elf.c (_bfd_elf_make_section_from_shdr): Don't strncmp twice
+	to set SEC_ELF_OCTETS.
+	* reloc.c (bfd_perform_relocation): Tidy SEC_ELF_OCTETS special case.
+	(bfd_install_relocation): Likewise.
+	(_bfd_final_link_relocate): Don't recalculate octets.
+	* syms.c (_bfd_stab_section_find_nearest_line): Introduc new
+	"octets" temp.
+	* bfd-in2.h: Regenerate.
+
+2019-11-25  Christian Eggers  <ceggers@gmx.de>
+
+	* section.c (struct bfd_section): New flag SEC_ELF_OCTETS.
+	* archures.c (bfd_octets_per_byte): New parameter sec.
+	If section is not NULL and SEC_ELF_OCTETS is set, one octet es
+	returned [ELF targets only].
+	* bfd.c (bfd_get_section_limit): Provide section parameter to
+	bfd_octets_per_byte.
+	* bfd-in2.h: regenerate.
+	* binary.c (binary_set_section_contents): Move call to
+	bfd_octets_per_byte into section loop. Provide section parameter
+	to bfd_octets_per_byte.
+	* coff-arm.c (coff_arm_reloc): Provide section parameter
+	to bfd_octets_per_byte.
+	* coff-i386.c (coff_i386_reloc): likewise.
+	* coff-mips.c (mips_reflo_reloc): likewise.
+	* coff-x86_64.c (coff_amd64_reloc): likewise.
+	* cofflink.c (_bfd_coff_link_input_bfd): likewise.
+	(_bfd_coff_reloc_link_order): likewise.
+	* elf.c (_bfd_elf_section_offset): likewise.
+	(_bfd_elf_make_section_from_shdr): likewise.
+	Set SEC_ELF_OCTETS for sections with names .gnu.build.attributes,
+	.debug*, .zdebug* and .note.gnu*.
+	* elf32-msp430.c (rl78_sym_diff_handler): Provide section parameter
+	to bfd_octets_per_byte.
+	* elf32-nds.c (nds32_elf_get_relocated_section_contents): likewise.
+	* elf32-ppc.c (ppc_elf_addr16_ha_reloc): likewise.
+	* elf32-pru.c (pru_elf32_do_ldi32_relocate): likewise.
+	* elf32-s12z.c (opru18_reloc): likewise.
+	* elf32-sh.c (sh_elf_reloc): likewise.
+	* elf32-spu.c (spu_elf_rel9): likewise.
+	* elf32-xtensa.c (bfd_elf_xtensa_reloc): likewise
+	* elf64-ppc.c (ppc64_elf_brtaken_reloc): likewise.
+	(ppc64_elf_addr16_ha_reloc): likewise.
+	(ppc64_elf_toc64_reloc): likewise.
+	* elflink.c (bfd_elf_final_link): likewise.
+	(bfd_elf_perform_complex_relocation): likewise.
+	(elf_fixup_link_order): likewise.
+	(elf_link_input_bfd): likewise.
+	(elf_link_sort_relocs): likewise.
+	(elf_reloc_link_order): likewise.
+	(resolve_section): likewise.
+	* linker.c (_bfd_generic_reloc_link_order): likewise.
+	(bfd_generic_define_common_symbol): likewise.
+	(default_data_link_order): likewise.
+	(default_indirect_link_order): likewise.
+	* srec.c (srec_set_section_contents): likewise.
+	(srec_write_section): likewise.
+	* syms.c (_bfd_stab_section_find_nearest_line): likewise.
+	* reloc.c (_bfd_final_link_relocate): likewise.
+	(bfd_generic_get_relocated_section_contents): likewise.
+	(bfd_install_relocation): likewise.
+	For section which have SEC_ELF_OCTETS set, multiply output_base
+	and output_offset with bfd_octets_per_byte.
+	(bfd_perform_relocation): likewise.
+
+2019-11-21  Alan Modra  <amodra@gmail.com>
+
+	* elf32-arm.c (elf32_arm_size_stubs): Exclude dynamic library
+	BFDs that have not been loaded.
+
+2019-11-19  Alan Modra  <amodra@gmail.com>
+
+	PR 25197
+	* coffgen.c (coff_find_nearest_line_with_names): Check that C_FILE
+	u.syment.n_value does point at another C_FILE sym and not into
+	some auxent that happens to look like a C_FILE.  Properly check
+	for integer overflow and avoid possible pointer wrap-around.
+	Simplify pr17512 checks.
+
+2019-11-19  Alan Modra  <amodra@gmail.com>
+
+	PR 25200
+	* reloc.c (bfd_default_reloc_type_lookup): Don't BFD_FAIL.
+	* elf.c (_bfd_elf_validate_reloc): Don't segfault on NULL howto.
+
+2019-11-18  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (struct elf_backend_data <elf_backend_init_file_header>):
+	Rename from elf_backend_post_process_headers.
+	(_bfd_elf_post_process_headers): Delete.
+	(_bfd_elf_init_file_header): Declare.
+	* elf.c (_bfd_elf_compute_section_file_positions): Call new function
+	in place of prep_headers and elf_backend_post_process_headers.
+	(_bfd_elf_init_file_header): Renamed from prep_headers with
+	updated args and made global.  Delete dead code.
+	(_bfd_elf_post_process_headers): Delete.
+	* elf32-arm.c (elf32_arm_init_file_header): Rename from
+	elf32_arm_post_process_headers and call _bfd_elf_init_file_header.
+	Return status.
+	(elf_backend_init_file_header): Define.
+	(elf_backend_post_process_headers): Don't define.
+	* elf32-i386.c (elf_i386_fbsd_init_file_header): Similarly.
+	* elf32-m68hc1x.c (elf32_m68hc11_init_file_header): Similarly.
+	* elf32-metag.c (elf_metag_init_file_header): Similarly.
+	* elf32-spu.c (spu_elf_init_file_header
+	* elf32-visium.c (visium_elf_init_file_header
+	* elf64-alpha.c (elf64_alpha_fbsd_init_file_header
+	* elf64-hppa.c (elf64_hppa_init_file_header
+	* elf64-ia64-vms.c (elf64_vms_init_file_header
+	* elfnn-aarch64.c (elfNN_aarch64_init_file_header
+	* elfnn-ia64.c (elfNN_hpux_init_file_header
+	* elfxx-mips.c (_bfd_mips_init_file_header
+	* elfxx-mips.h (_bfd_mips_post_process_headers): Delete.
+	(_bfd_mips_init_file_header): Declare.
+	(elf_backend_post_process_headers): Delete.
+	(elf_backend_init_file_header): Define.
+	* elfxx-target.h (elf_backend_post_process_headers): Delete.
+	(elf_backend_init_file_header): Define and use.
+	* elf32-m68hc12.c (elf_backend_init_file_header): Define.
+	(elf_backend_post_process_headers): Don't define.
+	* elf32-m68hc1x.h (elf32_m68hc11_post_process_headers): Delete.
+	(elf32_m68hc11_init_file_header): Declare.
+	* elf32-ppc.c (elf_backend_post_process_headers): Remove
+	unnecessary undef.
+
+2019-11-18  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (struct elf_backend_data <elf_backend_modify_headers>):
+	Rename from elf_backend_modify_program_headers.
+	(_bfd_elf_modify_headers): Declare.
+	* elf.c (assign_file_positions_except_relocs): Set
+	elf_program_header_size.  Always call elf_backend_modify_headers.
+	Extract code modifying file header..
+	(_bfd_elf_modify_headers): ..to here.  New function.
+	* elf32-arm.c (elf_backend_modify_headers): Renamed from
+	elf_backend_modify_program_headers.
+	* elf32-i386.c: Similarly.
+	* elf64-x86-64.c: Similarly.
+	* elfxx-target.h: Similarly.  Default elf_backend_modify_headers
+	to _bfd_elf_modify_headers.
+	* elf-nacl.h (nacl_modify_headers): Rename from
+	nacl_modify_program_headers.
+	* elf-nacl.c (nacl_modify_headers): Rename from
+	nacl_modify_program_headers and call _bfd_elf_modify_headers.
+	* elf32-rx.c (elf32_rx_modify_headers): Similarly.
+	* elf32-spu.c (spu_elf_modify_headers): Similarly.
+	* elfnn-ia64.c (elfNN_ia64_modify_headers): Similarly.
+	* elf32-sh.c (elf_backend_modify_program_headers): Don't undef.
+
+2019-11-18  Alan Modra  <amodra@gmail.com>
+
+	PR 25196
+	* bfd.c (bfd_error_type): Add bfd_error_sorry.
+	(bfd_errmsgs): Likewise.
+	* elf.c (rewrite_elf_program_header): Don't abort on confused
+	lma/alignment.  Replace bfd_error_bad_value with bfd_error_sorry.
+	(_bfd_elf_validate_reloc): Use bfd_error_sorry.
+	(_bfd_elf_final_write_processing): Likewise.
+	* bfd-in2.h: Regenerate.
+
+2019-11-12  Jim Wilson  <jimw@sifive.com>
+
+	PR 25181
+	* elfnn-riscv.c (_bfd_riscv_relax_call): Always add max_alignment to
+	foff.  If sym_sec->output_section and sec->output_section are the same
+	and not *ABS* then set max_alignment to that section's alignment.
+
+2019-11-07  Alan Modra  <amodra@gmail.com>
+
+	* cpu-cr16c.c: Delete.
+	* elf32-cr16c.c: Delete.
+	* Makefile.am,
+	* archures.c,
+	* config.bfd,
+	* configure.ac,
+	* reloc.c,
+	* targets.c: Remove cr16c support.
+	* Makefile.in,
+	* bfd-in2.h,
+	* configure,
+	* libbfd.h,
+	* po/SRC-POTFILES.in: Regenerate.
+
+2019-11-05  Tim Rühsen  <tim.ruehsen@gmx.de>
+
+	* doc/chew.c (add_to_definition): Use correct type when
+	calculating size of array reallocation.
+	(nextword): Always initialise the word return parameter.
+	(compile): Check return value of nextword().
+
+2019-10-30  Keith Seitz  <keiths@redhat.com>
+
+	* elf-bfd.h (elf_backend_data) <elf_backend_core_find_build_id>:
+	New field.
+	(_bfd_elf32_core_find_build_id, _bfd_elf64_core_find_build_id):
+	New functions.
+	(elf_read_notes): Add declaration.
+	* elf.c (elf_read_notes): Move elf-bfd.h.
+	(_bfd_elf_core_find_build_id): New function.
+	(bfd_section_from_phdr): Scan core file PT_LOAD segments for
+	build-id if none is known.
+	(elf_parse_notes): For core files, scan for notes.
+	* elfcore.h (elf_core_file_matches_executable_p): If both
+	BFDs have identical build-ids, then they match.
+	(_bfd_elf_core_find_build_id): New function.
+	* elfxx-target.h (elf_backend_core_find_build_id): Define.
+	(elfNN_bed): Add elf_backend_core_find_build_id.
+
+2019-10-29  Andrew Eikum  <aeikum@codeweavers.com>
+
+	* libcoff-in.h (struct pe_tdata): Add dos_message field.
+	* libcoff.h: Regenerate.
+	* peXXigen.c (_bfd_XXi_only_swap_filehdr_out): Copy the
+	dos_message field rather than initialising it.
+	(_bfd_XX_bfd_copy_private_bfd_data_common): Copy the dos_message
+	field.
+	* peicode.h (pe_mkobject): Initialise the dos_message field.
+	(pe_mkobject_hook): Copy the dos_message field.
+	(pe_bfd_object_p): Copy the dos_message field.
+
+2019-10-25  Alan Modra  <amodra@gmail.com>
+
+	PR 4499
+	* elf-nacl.c (nacl_modify_segment_map): Set no_sort_lma for all
+	PT_LOAD segments.
+	* elf32-spu.c (spu_elf_modify_segment_map): Likewise on overlay
+	PT_LOAD segments.
+	* elf.c (elf_sort_segments): New function.
+	(assign_file_positions_except_relocs): Use shortcuts to elfheader
+	and elf_tdata.  Seek to e_phoff not sizeof_ehdr to write program
+	headers.  Move PT_PHDR check..
+	(assign_file_positions_for_non_load_sections): ..and code setting
+	PT_PHDR p_vaddr and p_paddr, and code setting __ehdr_start value..
+	(assign_file_positions_for_load_sections): ..to here.  Sort
+	PT_LOAD headers.  Delete header_pad code.  Use actual number of
+	headers rather than allocated in calculating size for program
+	headers.  Don't assume program headers follow ELF file header.
+	Simplify pt_load_count code.  Only set "off" for PT_LOAD or
+	PT_NOTE in cores.
+	(rewrite_elf_program_header): Set p_vaddr_offset for segments
+	that include file and program headers.
+	(copy_elf_program_header): Likewise, replacing header_size code.
+
+2019-10-21  Alan Modra  <amodra@gmail.com>
+
+	PR 452
+	* archive.c (normalize): Return file unchanged when
+	BFD_ARCHIVE_FULL_PATH.
+	(_bfd_construct_extended_name_table): Pass abfd, the output
+	bfd, to normalize.
+	(_bfd_archive_bsd44_construct_extended_name_table): Likewise.
+	* bfd.c (struct bfd): Make flags a full flagword.
+	(BFD_ARCHIVE_FULL_PATH): Define.
+	* bfd-in2.h: Regenerate.
+
+2019-10-20  John David Anglin  <danglin@gcc.gnu.org>
+
+	* elf32-hppa.c (elf32_hppa_size_dynamic_sections): Provide 8-byte
+	minimum alignment for .plt section.
+
+2019-10-19  John David Anglin  <danglin@gcc.gnu.org>
+
+	* elf32-hppa.c: Revise import stub sequences.
+	(LONG_BRANCH_STUB_SIZE): Define.
+	(LONG_BRANCH_SHARED_STUB_SIZE): Define.
+	(IMPORT_STUB_SIZE): Define.
+	(IMPORT_SHARED_STUB_SIZE): Define.
+	(EXPORT_STUB_SIZE): Define.
+	(plt_stub): Revise to not use register %r22.
+	(LDO_R1_R22): Define.
+	(LDW_R22_R21): Define.
+	(LDW_R22_R19): Define.
+	(hppa_build_one_stub): Update stub generation and use new defines.
+	(hppa_size_one_stub): Likewise.
+
+2019-10-17  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_elf_relocate_section): Report the error message
+	that user should recompile their code with `fPIC` when linking non-pic
+	code into shared library.
+
+	* elfnn-riscv.c (riscv_elf_relocate_section): Use asprintf to extend
+	the error message if needed, and then store the result into the
+	`msg_buf`.  Finally, remember to free the unused `msg_buf`.  All error
+	message for the dangerous relocation should be set before we call the
+	callback function.  If we miss the error message since linker runs out
+	of memory, we should set the default error message for the error.
+
+2019-10-16  Alan Modra  <amodra@gmail.com>
+
+	PR 13616
+	* cpu-powerpc.c (bfd_arch_ppc_nop_fill): New function, use it
+	for all ppc arch info.
+	* linker.c (default_data_link_order): Pass info->big_endian to
+	arch_info->fill function.
+
+2019-10-15  Alan Modra  <amodra@gmail.com>
+
+	* elf32-m68hc1x.c (reloc_warning): Add printf attribute.
+	(elf32_m68hc11_relocate_section): Don't use a variable for format
+	strings.  Delete some unnecessary xgettext:c-format comments.
+
+2019-10-15  Alan Modra  <amodra@gmail.com>
+
+	PR 24955
+	* elf32-arm.c (set_cmse_veneer_addr_from_implib): Use bfd_malloc
+	rather than xmalloc.
+	* elf32-m68hc1x.c (reloc_warning): New function.
+	(elf32_m68hc11_relocate_section): Use it here.  Cast bfd_vma values
+	corresponding to %lx in format strings.
+	* elf32-nds32.c (nds32_insertion_sort): Use a stack temporary.
+
+2019-10-15  Alan Modra  <amodra@gmail.com>
+
+	PR 25100
+	* elf64-ppc.c (sfpr_define): Delete dead code that triggered a warning.
+
+2019-10-15  Alan Modra  <amodra@gmail.com>
+
+	* bfd.c (bfd_check_compression_header): Check for powers of two
+	with x == (x & -x).
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* syms.c (struct indexentry): Add idx field.
+	(cmpindexentry): Final sort on idx.
+	(_bfd_stab_section_find_nearest_line): Set idx.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* dwarf2.c (struct lookup_funcinfo): Add idx field.
+	(compare_lookup_funcinfos): Perform final sort on idx.
+	(build_lookup_funcinfo_table): Set idx.
+	(compare_sequences): Perform final sort on num_lines.
+	(build_line_info_table): Set num_lines and line_info_lookup earlier.
+	(sort_line_sequences): Set num_lines for sort.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (elf_sort_symbol): Sort on type and name as well.
+	(elf_link_add_object_symbols): Style fix.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* elf.c (_bfd_elf_map_sections_to_segments): Init target_index
+	for sections about to be sorted.
+	(assign_file_positions_for_load_sections): Likewise.
+	(elf_sort_sections): Don't bother optimising both TOEND case.
+	* elflink.c (bfd_elf_final_link): Reset target_index.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (elf_get_linked_section_vma): Delete.
+	(compare_link_order): Use elf_linked_to_section and sort by lma,
+	size, and id.
+	(elf_fixup_link_order): Use size_t variables where appropriate.
+	Make use of elf_linked_to_section.  Formatting.  Properly align
+	sections.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* elf-strtab.c (strrevcmp): Comment.
+	* merge.c (strrevcmp): Likewise.
+	* elf64-ppc.c (compare_symbols): Correct final pointer comparison.
+	Comment on why comparing pointers ensures a stable sort.
+	* elflink.c (struct elf_symbol): Add void* to union.
+	(elf_sort_elf_symbol): Ensure a stable sort with pointer comparison.
+	(elf_sym_name_compare): Likewise.
+	(bfd_elf_match_symbols_in_sections): Style fix.
+	(elf_link_sort_cmp1): Comment.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	PR 24955
+	* elflink.c (elf_output_implib): Don't use xmalloc.  Don't ignore
+	return value of bfd_alloc2.
+	* peXXigen.c (_bfd_XXi_write_codeview_record): Don't use xmalloc.
+	* pef.c (bfd_pef_print_symbol): Likewise.  Don't ignore return
+	value of bfd_get_section_contents.
+	* som.c (som_write_space_strings): Don't use xmalloc.
+	(som_write_symbol_strings): Likewise.
+
+2019-10-11  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* dwarf2.c (stash_maybe_enable_info_hash_tables): Only set
+	stash->info_hash_status = STASH_INFO_HASH_ON when
+	stash_maybe_update_info_hash_tables succeeds.
+
+2019-10-09  Alan Modra  <amodra@gmail.com>
+
+	PR 25070
+	* dwarf2.c (_bfd_dwarf2_slurp_debug_info): Catch overflow of
+	total_size calculation.
+
+2019-10-08  Alan Modra  <amodra@gmail.com>
+
+	PR 25078
+	* dwarf2.c (find_abstract_instance): Delete orig_info_ptr, add
+	recur_count.  Error on recur_count reaching 100 rather than
+	info_ptr matching orig_info_ptr.  Adjust calls.
+
+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* elf32-msp430.c (elf32_msp430_merge_mspabi_attributes): Rename to..
+	(elf32_msp430_merge_msp430_attributes): Add support for merging
+	the GNU object attribute for data region.
+
+2019-10-07  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_size_dynamic_sections): Do allocate
+	space for local got non-tls relocs when PIE.
+
+2019-10-07  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (elf_fixup_link_order): Don't attempt to find
+	an elf_section for linker created bfd sections.
+
+2019-10-07  Alan Modra  <amodra@gmail.com>
+
+	* elf32-ppc.c (ppc_elf_tls_optimize): Don't process R_PPC_TLSLD
+	with non-local symbol.  Don't double count __tls_get_addr calls
+	with marker relocs.
+	* elf64-ppc.c (ppc64_elf_tls_optimize): Likewise.
+
+2019-10-07  Alan Modra  <amodra@gmail.com>
+
+	* elf32-ppc.c (nomark_tls_get_addr): Rename from has_tls_get_addr_call
+	throughout.
+	* elf64-ppc.c (nomark_tls_get_addr): Likewise.
+
+2019-10-04  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_check_relocs): Move initialisation of vars.
+	(ppc64_elf_tls_optimize): Correct is_local condition.
+	(allocate_got): Don't reserve dynamic relocations for any of the
+	tls got relocs in PIEs when the symbol is local.
+	(allocate_dynrelocs): Correct validity test for local sym using
+	tlsld_got slot.
+	(ppc64_elf_size_dynamic_sections): Don't reserve dynamic relocations
+	for any of the tls got relocs in PIEs.
+	(ppc64_elf_layout_multitoc): Likewise.
+	(ppc64_elf_relocate_section): Correct validity test for local sym
+	using tlsld_got slot.  Don't emit dynamic relocations for any of
+	the tls got relocs in PIEs when the symbol is local.
+	* elf32-ppc.c (ppc_elf_tls_optimize): Correct is_local condition.
+	(got_relocs_needed): Delete.
+	(allocate_dynrelocs): Correct validity test for local sym using
+	tlsld_got slot.  Don't reserve dynamic relocations for any of the
+	tls got relocs in PIEs when the symbol is local.
+	(ppc_elf_size_dynamic_sections): Don't reserve dynamic relocations
+	for any of the tls got relocs in PIEs.
+	(ppc_elf_relocate_section): Correct validity test for local sym
+	using tlsld_got slot.  Don't emit dynamic relocations for any of
+	the tls got relocs in PIEs when the symbol is local.
+
+2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	PR ld/22263
+	PR ld/25056
+	* elf32-arm.c (elf32_arm_tls_transition): Use bfd_link_dll instead of
+	bfd_link_pic for TLS checks.
+	(elf32_arm_final_link_relocate): Likewise.
+	(allocate_dynrelocs_for_symbol): Likewise.
+
+2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	PR ld/25062
+	* elf32-arm.c (elf32_arm_final_link_relocate): Sign extend data.
+
+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* elf-bfd.h (bfd_section_is_ctf): New inline function.
+	* elf.c (special_sections_c): Add ".ctf".
+	(assign_file_positions_for_non_load_sections): Note that
+	compressed debugging sections etc are not assigned here.  Treat
+	CTF sections like SEC_ELF_COMPRESS sections when is_linker_output:
+	sh_offset -1.
+	(assign_file_positions_except_relocs): Likewise.
+	(find_section_in_list): Note that debugging and CTF sections, as
+	well as reloc sections, are assigned later.
+	(_bfd_elf_assign_file_positions_for_non_load): CTF sections get
+	their size and contents updated.
+	(_bfd_elf_set_section_contents): Skip CTF sections: unlike
+	compressed sections, they have no uncompressed content to copy at
+	this stage.
+	* elflink.c (elf_link_swap_symbols_out): Call the examine_strtab
+	callback right before the strtab is written out.
+	(bfd_elf_final_link): Don't cache the section contents of CTF
+	sections: they are not populated yet.  Call the emit_ctf callback
+	right at the end, after all the symbols and strings are flushed
+	out.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* elf-strtab.c (_bfd_elf_strtab_len): New.
+	(_bfd_elf_strtab_str): Likewise.
+	* bfd-elf.h: Declare them.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* elf-bfd.h (bfd_elf_get_str_section): Add.
+	* elf.c (bfd_elf_get_str_section): No longer static.
+
+2019-09-26  Alan Modra  <amodra@gmail.com>
+
+	PR 24262
+	* Makefile.am (AM_CPPFLAGS): Add -DLIBDIR.
+	* plugin.c (load_plugin): Search both ${libdir}/bfd-plugins and
+	${bindir}/../lib/bfd-plugins if different.
+	* Makefile.in: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_check_relocs): Use bfd_link_executable
+	in choosing between different actions for shared library and
+	non-shared library cases.  Delete ELIMINATE_COPY_RELOCS test.
+	(dec_dynrel_count): Likewise.  Account for ifunc special case.
+	(ppc64_elf_adjust_dynamic_symbol): Copy relocs are for executables,
+	not non-pic.
+	(allocate_dynrelocs): Comment fixes.  Delete ELIMINATE_COPY_RELOCS
+	test.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (SOURCE_HFILES): Add many missing .h files.
+	* Makefile.in: Regenerate.
+	* po/SRC-POTFILES.in: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h (bfd_symbol, bfd_section_already_linked),
+	(bfd_elf_version_tree): Delete forward declarations.
+	Move other forward decls and remaining elf function decl later.
+	(bfd_section_already_linked_table_init),
+	(bfd_section_already_linked_table_free),
+	(_bfd_handle_already_linked, _bfd_nearby_section),
+	(_bfd_fix_excluded_sec_syms): Move to bfdlink.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move ecoff function declarations..
+	* ecoff-bfd.h: ..to here, new file.
+	* ecoff.c: Include ecoff-bfd.h.
+	* ecofflink.c: Likewise.
+	* elf64-alpha.c: Likewise.
+	* elfxx-mips.c: Likewise.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h (enum notice_asneeded_action): Move to bfdlink.h.
+	Move most other elf declarations..
+	* elf-bfd.h: ..to here.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move m68k function declaration..
+	* cpu-m68k.h: ..to here, new file..
+	* elf32-m68k.h: ..and here, new file.
+	* elf32-m68k.c: Include cpu-m68k.h and elf32-m68k.h.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move bfin function declaration..
+	* elf32-bfin.h: ..to here, new file.
+	* elf32-bfin.c: Include elf32-bfin.h.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move cr16 function declaration..
+	* elf32-cr16.h: ..to here, new file.
+	* elf32-cr16.c: Include elf32-cr16.h.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h (bfd_sunos_get_needed_list),
+	(bfd_sunos_record_link_assignment),
+	(bfd_sunos_size_dynamic_sections),
+	(bfd_i386linux_size_dynamic_sections),
+	(bfd_sparclinux_size_dynamic_sections): Delete obsolete decls.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move xcoff function declarations..
+	* xcofflink.h: ..to here, new file.
+	* xcofflink.c: Include xcofflink.h.
+	* coff-rs6000.c (bfd_xcoff_ar_archive_set_magic): Delete unused func.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Delete coff forward refs and move coff declaration..
+	* coff-bfd.h: ..to here.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move arm declaraions..
+	* cpu-arm.h: ..to here, new file..
+	* coff-arm.h: ..and here, new file..
+	* elf32-arm.h: ..and here, new file.
+	* cpu-arm.c: Include cpu-arm.h.
+	* coff-arm.c: Include cpu-arm.h and coff-arm.h.
+	* elf32-arm.c: Include cpu-arm.h and elf32-arm.h.
+	* pe-arm.c: Move function rename defines later.
+	* pe-arm-wince.c: Likewise and include sysdep.h and bfd.h early.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move tic6x function declaration..
+	* elf32-tic6x.h: ..to here.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move aarch64 declarations and defines..
+	* cpu-aarch64.h: ..to here, new file..
+	* elfxx-aarch64.h: ..and here.
+	* cpu-aarch64.c: Include cpu-aarch64.h.
+	* elfnn-aarch64.c: Likewise.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Delete ticoff function declarations.
+	* coff-tic54x.c (bfd_ticoff_set_section_load_page),
+	(bfd_ticoff_get_section_load_page): Make static.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move h8300 function declaration to..
+	* cpu-h8300.h: ..here, new file.
+	* cpu-h8300.c: Include cpu-h8300.h.
+	* elf32-h8300.c: Likewise.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move ia64 function declarations..
+	* elfxx-ia64.h: ..to here.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move v850 function declarations..
+	* elf32-v850.h: ..to here, new file.
+	* elf32-v850.c: Include elf32-v850.h.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move mips function declaration to..
+	* elfxx-mips.h: ..here.
+	* bfd-in2.h: Regenerate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h: Move csky function declarations to..
+	* elf32-csky.h: ..here, new file.
+	* elf32-csky.c: Include elf32-csky.h.
+	* bfd-in2.h: Regenerate.
+
+2019-09-20  Nelson Chu <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_pcgp_hi_reloc): Add new field undefined_weak.
+	(riscv_record_pcgp_hi_reloc): New parameter undefined_weak.
+	Set undefined_weak field from it.
+	(relax_func_t): New parameter undefined_weak.
+	(_bfd_riscv_relax_call): New ignored parameter undefined_weak.
+	(_bfd_riscv_relax_tls_le): Likewise.
+	(_bfd_riscv_relax_align): Likewise.
+	(_bfd_riscv_relax_delete): Likewise.
+	(_bfd_riscv_relax_lui): New parameter undefined_weak.  If true,
+	allow relaxing.  For LO12* relocs, set rs1 to x0 when undefined_weak.
+	(_bfd_riscv_relax_pc): New parameter undefined_weak.  For LO12* relocs,
+	set undefined_weak from hi_reloc.  If true, allow relaxing.  For LO12*
+	relocs, set rs1 to x0 when undefined_weak and change to non-pcrel
+	reloc.
+	(_bfd_riscv_relax_section): New local undefined_weak.  Set for
+	undef weak relocs that can be relaxed.  Pass to relax_func call.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h (bfd_section_name, bfd_section_size, bfd_section_vma),
+	(bfd_section_lma, bfd_section_alignment, bfd_section_flags),
+	(bfd_section_userdata, bfd_is_com_section, discarded_section),
+	(bfd_get_section_limit_octets, bfd_get_section_limit): Delete macros.
+	* bfd.c (bfd_get_section_limit_octets, bfd_get_section_limit),
+	(bfd_section_list_remove, bfd_section_list_append),
+	(bfd_section_list_prepend, bfd_section_list_insert_after),
+	(bfd_section_list_insert_before, bfd_section_removed_from_list):
+	New inline functions.
+	* section.c (bfd_is_und_section, bfd_is_abs_section),
+	(bfd_is_ind_section, bfd_is_const_section, bfd_section_list_remove),
+	(bfd_section_list_append, bfd_section_list_prepend),
+	(bfd_section_list_insert_after, bfd_section_list_insert_before),
+	(bfd_section_removed_from_list): Delete macros.
+	(bfd_section_name, bfd_section_size, bfd_section_vma),
+	(bfd_section_lma, bfd_section_alignment, bfd_section_flags),
+	(bfd_section_userdata, bfd_is_com_section, bfd_is_und_section),
+	(bfd_is_abs_section, bfd_is_ind_section, bfd_is_const_section),
+	(discarded_section): New inline functions.
+	* bfd-in2.h: Regenerate.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h (bfd_asymbol_section, bfd_asymbol_value, bfd_asymbol_name),
+	(bfd_asymbol_bfd, bfd_asymbol_flavour, bfd_set_asymbol_name): Delete.
+	* bfd.c (bfd_asymbol_section, bfd_asymbol_value, bfd_asymbol_name),
+	(bfd_asymbol_bfd, bfd_set_asymbol_name): New inline functions.
+	* targets.c (bfd_asymbol_flavour): Likewise.
+	* bfd-in2.h: Regenerate.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* archive.c (bfd_generic_archive_p): Use bfd_set_thin_archive.
+	* bfd-in.h (bfd_get_filename, bfd_get_cacheable, bfd_get_format),
+	(bfd_get_target, bfd_get_flavour, bfd_family_coff, bfd_big_endian),
+	(bfd_little_endian, bfd_header_big_endian, bfd_header_little_endian),
+	(bfd_get_file_flags, bfd_applicable_file_flags),
+	(bfd_applicable_section_flags, bfd_has_map, bfd_is_thin_archive),
+	(bfd_valid_reloc_types, bfd_usrdata, bfd_get_start_address),
+	(bfd_get_symcount, bfd_get_outsymbols, bfd_count_sections),
+	(bfd_get_dynamic_symcount, bfd_get_symbol_leading_char): Delete.
+	* bfd/bfd.c (bfd_get_filename, bfd_get_cacheable, bfd_get_format),
+	(bfd_get_file_flags, bfd_get_start_address, bfd_get_symcount),
+	(bfd_get_dynamic_symcount, bfd_get_outsymbols, bfd_count_sections),
+	(bfd_has_map, bfd_is_thin_archive, bfd_set_thin_archive),
+	(bfd_usrdata, bfd_set_usrdata): New inline functions.
+	* targets.c (bfd_get_target, bfd_get_flavour),
+	(bfd_applicable_file_flags, bfd_family_coff, bfd_big_endian),
+	(bfd_little_endian, bfd_header_big_endian),
+	(bfd_header_little_endian, bfd_applicable_section_flags),
+	(bfd_get_symbol_leading_char): New inline functions.
+	* bfd-in2.h: Regenerate.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_glibc_dynamic_reloc): New function.
+	(ppc64_elf_relocate_section): Warn if emitting unsupported dynamic
+	relocations.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h (bfd_get_section_name, bfd_get_section_vma),
+	(bfd_get_section_lma, bfd_get_section_alignment),
+	(bfd_get_section_size, bfd_get_section_flags),
+	(bfd_get_section_userdata): Delete.
+	(bfd_section_name, bfd_section_size, bfd_section_vma),
+	(bfd_section_lma, bfd_section_alignment): Lose bfd parameter.
+	(bfd_section_flags, bfd_section_userdata): New.
+	(bfd_is_com_section): Rename parameter.
+	* section.c (bfd_set_section_userdata, bfd_set_section_vma),
+	(bfd_set_section_alignment, bfd_set_section_flags, bfd_rename_section),
+	(bfd_set_section_size): Delete bfd parameter, rename section parameter.
+	(bfd_set_section_lma): New.
+	* bfd-in2.h: Regenerate.
+	* mach-o.c (bfd_mach_o_init_section_from_mach_o): Delete bfd param,
+	update callers.
+	* aoutx.h, * bfd.c, * coff-alpha.c, * coff-arm.c, * coff-mips.c,
+	* coff64-rs6000.c, * coffcode.h, * coffgen.c, * cofflink.c,
+	* compress.c, * ecoff.c, * elf-eh-frame.c, * elf-hppa.h,
+	* elf-ifunc.c, * elf-m10200.c, * elf-m10300.c, * elf-properties.c,
+	* elf-s390-common.c, * elf-vxworks.c, * elf.c, * elf32-arc.c,
+	* elf32-arm.c, * elf32-avr.c, * elf32-bfin.c, * elf32-cr16.c,
+	* elf32-cr16c.c, * elf32-cris.c, * elf32-crx.c, * elf32-csky.c,
+	* elf32-d10v.c, * elf32-epiphany.c, * elf32-fr30.c, * elf32-frv.c,
+	* elf32-ft32.c, * elf32-h8300.c, * elf32-hppa.c, * elf32-i386.c,
+	* elf32-ip2k.c, * elf32-iq2000.c, * elf32-lm32.c, * elf32-m32c.c,
+	* elf32-m32r.c, * elf32-m68hc1x.c, * elf32-m68k.c, * elf32-mcore.c,
+	* elf32-mep.c, * elf32-metag.c, * elf32-microblaze.c,
+	* elf32-moxie.c, * elf32-msp430.c, * elf32-mt.c, * elf32-nds32.c,
+	* elf32-nios2.c, * elf32-or1k.c, * elf32-ppc.c, * elf32-pru.c,
+	* elf32-rl78.c, * elf32-rx.c, * elf32-s390.c, * elf32-score.c,
+	* elf32-score7.c, * elf32-sh.c, * elf32-spu.c, * elf32-tic6x.c,
+	* elf32-tilepro.c, * elf32-v850.c, * elf32-vax.c, * elf32-visium.c,
+	* elf32-xstormy16.c, * elf32-xtensa.c, * elf64-alpha.c,
+	* elf64-bpf.c, * elf64-hppa.c, * elf64-ia64-vms.c, * elf64-mmix.c,
+	* elf64-ppc.c, * elf64-s390.c, * elf64-sparc.c, * elf64-x86-64.c,
+	* elflink.c, * elfnn-aarch64.c, * elfnn-ia64.c, * elfnn-riscv.c,
+	* elfxx-aarch64.c, * elfxx-mips.c, * elfxx-sparc.c,
+	* elfxx-tilegx.c, * elfxx-x86.c, * i386msdos.c, * linker.c,
+	* mach-o.c, * mmo.c, * opncls.c, * pdp11.c, * pei-x86_64.c,
+	* peicode.h, * reloc.c, * section.c, * syms.c, * vms-alpha.c,
+	* xcofflink.c: Update throughout for bfd section macro and function
+	changes.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h (bfd_asymbol_section): Rename from bfd_get_section.
+	(bfd_get_output_section): Delete.
+	(bfd_asymbol_base): Delete.
+	(bfd_asymbol_section, bfd_asymbol_value, bfd_asymbol_name),
+	(bfd_asymbol_bfd, bfd_asymbol_flavour): Tidy.
+	(bfd_set_asymbol_name): New macro.
+	* bfd-in2.h: Regenerate.
+	* aout-cris.c: Update throughout to use bfd_asymbol_section.
+	* aoutx.h: Likewise.
+	* cofflink.c: Likewise.
+	* dwarf2.c: Likewise.
+	* ecoff.c: Likewise.
+	* elf.c: Likewise.
+	* elf32-arm.c: Likewise.
+	* elf32-mips.c: Likewise.
+	* elf32-score.c: Likewise.
+	* elf32-score7.c: Likewise.
+	* elfn32-mips.c: Likewise.
+	* elfnn-aarch64.c: Likewise.
+	* elfxx-mips.c: Likewise.
+	* linker.c: Likewise.
+	* pdp11.c: Likewise.
+	* elf64-mmix.c (mmix_elf_reloc): Part expand bfd_get_output_section.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* Makefile.in: Re-generate.
+	* configure: Re-generate.
+	* doc/Makefile.in: Re-generate.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* aoutx.h (slurp_symbol_table): Don't set symcount using bfd_get
+	macros.
+	* pdp11.c (slurp_symbol_table): Likewise.
+	* som.c (som_slurp_symbol_table): Likewise.
+	* coff-ppc.c (ppc_bfd_coff_final_link): Likewise.
+	* coffcode.h (coff_slurp_symbol_table): Likewise.
+	* cofflink.c (_bfd_coff_final_link): Likewise.
+	* ecoff.c (ecoff_slurp_symbolic_header): Likewise.
+	(_bfd_ecoff_slurp_symbolic_info): Likewise.
+	(_bfd_ecoff_slurp_symbol_table): Likewise.
+	(_bfd_ecoff_bfd_final_link): Likewise.
+	* elf.c (_bfd_elf_canonicalize_symtab): Likewise.
+	* elflink.c (elf_link_output_symstrtab): Likewise.
+	(bfd_elf_final_link): Likewise.
+	* peicode.h (pe_ILF_build_a_bfd): Likewise.
+	* xcofflink.c (_bfd_xcoff_bfd_final_link): Likewise.
+	* aoutx.h (some_aout_object_p, slurp_symbol_table): Don't set
+	start_address or symcount using bfd_get macros.
+	* coffgen.c (coff_real_object_p): Likewise.
+	* pdp11.c (some_aout_object_p, slurp_symbol_table): Likewise.
+	* som.c (som_object_setup, som_slurp_symbol_table): Likewise.
+	* elfcore.h (elf_core_file_p): Don't set start_address using
+	bfd_get macro.
+	* elf.c (_bfd_elf_canonicalize_dynamic_symtab): Don't set dynsymcount
+	using bfd_get macro.
+	* bfd.c (bfd_set_file_flags): Don't set flags using bfd_get macro.
+	* linker.c (bfd_generic_link_read_symbols): Don't set outsymbols
+	or symcount using bfd_get macros.
+	(_bfd_generic_final_link, generic_add_output_symbol): Likewise.
+	* syms.c (bfd_set_symtab): Likewise.
+	* vms-alpha.c (alpha_vms_bfd_final_link): Likewise.
+	* archive.c (do_slurp_bsd_armap): Don't set has_armap using
+	bfd_has_map macro.
+	(do_slurp_coff_armap, bfd_slurp_armap): Likewise.
+	* archive64.c (_bfd_archive_64_bit_slurp_armap): Likewise.
+	* coff-rs6000.c (_bfd_xcoff_slurp_armap): Likewise.
+	* coff64-rs6000.c (xcoff64_slurp_armap): Likewise.
+	* ecoff.c (_bfd_ecoff_slurp_armap): Likewise.
+	* som.c (som_slurp_armap): Likewise.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* archures.c (bfd_get_arch): Make param const.
+	(bfd_get_mach, bfd_arch_bits_per_byte): Likewise.
+	(bfd_arch_bits_per_address, bfd_octets_per_byte): Likewise.
+	* bfd-in2.h: Regenerate.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* bfd-in.h (carsym.name): Make const.
+	* reloc.c (struct reloc_howto_struct.name): Likewise.
+	* targets.c (bfd_target.name): Likewise.!
+	* bfd.c (bfd_get_sign_extend_vma): Make variable const.
+	* som.c (som_bfd_fill_in_ar_symbols): Use an intermediary variable
+	when setting carsym.name.
+	* bfd-in2.h: Regenerate.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* mach-o.c (bfd_mach_o_fat_member_init): Likewise.  Replace
+	xstrdup and xmalloc with bfd_strdup and bfd_malloc.  Return an
+	error status.  Adjust calls.
+	* vms-lib.c (_bfd_vms_lib_get_module): Test mhd->id earlier.
+	Close bfd on failure.  Replace xstrdup/bfd_alloc use with
+	bfd_malloc.  Use bfd_set_filename.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (must_be_dyn_reloc): Return 0 for TOC16 relocs.
+	(ppc64_elf_check_relocs): Support dynamic/copy relocs for TOC16.
+	(ppc64_elf_adjust_dynamic_symbol): Don't keep dynamic reloc when
+	needs_copy even if all relocs are in rw sections.
+	(dec_dynrel_count): Handle TOC16 relocs.
+	(ppc64_elf_relocate_section): Support dynamic relocs for TOC16.
+	(ppc64_elf_finish_dynamic_symbol): Adjust to handle needs_copy
+	semantic change.
+
+2019-09-16  Phil Blundell  <pb@pbcl.net>
+
+	* version.m4: Set version to 2.33.50.
+	* Makefile.in, configure, doc/Makefile.in: Regenerated.
+
+2019-09-11  Tom Tromey  <tom@tromey.com>
+
+	* opncls.c (bfd_set_filename): New function.
+	* bfd-in2.h: Regenerate.
+
+2019-09-11  Alan Modra  <amodra@gmail.com>
+
+	* targets.c (struct bfd_target): Add _bfd_group_name.
+	(BFD_JUMP_TABLE): Likewise.
+	* coffgen.c (bfd_coff_group_name): New function.
+	* elf.c (bfd_elf_group_name): New function.
+	* linker.c (_bfd_nolink_bfd_group_name): New function.
+	* section.c (bfd_generic_group_name): New function.
+	* elf-bfd.h (bfd_elf_group_name): Declare.
+	* libbfd-in.h (_bfd_nolink_bfd_group_name): Declare.
+	* libcoff-in.h (bfd_coff_group_name): Declare.
+	* aout-target.h (MY_bfd_group_name): Define.
+	* aout-tic30.c (MY_bfd_group_name): Define.
+	* bfd.c (bfd_group_name): Define.
+	* binary.c (binary_bfd_group_name): Define.
+	* coff-alpha.c (_bfd_ecoff_bfd_group_name): Define.
+	* coff-mips.c (_bfd_ecoff_bfd_group_name): Define.
+	* coff-rs6000.c (_bfd_xcoff_bfd_group_name): Define.
+	* coffcode.h (coff_bfd_group_name): Define.
+	* elfxx-target.h (bfd_elfNN_bfd_group_name): Define.
+	* i386msdos.c (msdos_bfd_group_name): Define.
+	* ihex.c (ihex_bfd_group_name): Define.
+	* mach-o-target.c (bfd_mach_o_bfd_group_name): Define.
+	* mmo.c (mmo_bfd_group_name): Define.
+	* pef.c (bfd_pef_bfd_group_name): Define.
+	* plugin.c (bfd_plugin_bfd_group_name): Define.
+	* ppcboot.c (ppcboot_bfd_group_name): Define.
+	* som.c (som_bfd_group_name): Define.
+	* srec.c (srec_bfd_group_name): Define.
+	* tekhex.c (tekhex_bfd_group_name): Define.
+	* verilog.c (verilog_bfd_group_name): Define.
+	* vms-alpha.c (vms_bfd_group_name, alpha_vms_bfd_group_name): Define.
+	* xsym.c (bfd_sym_bfd_group_name): Define.
+	* coff64-rs6000.c (rs6000_xcoff64_vec): Init new field.
+	(rs6000_xcoff64_aix_vec): Likewise.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Regenerate.
+	* libcoff.h: Regenerate.
+
+2019-09-10  Nick Clifton  <nickc@redhat.com>
+
+	PR 24907
+	* archures.c (bfd_arch_info_type): Add max_reloc_offset_into_insn
+	field.
+	(bfd_default_arch_struct): Initialise the new field.
+	* bfd-in2.h: Regenerate.
+	* cpu-aarch64.c: Initialise the new field.
+	* cpu-alpha.c: Likewise.
+	* cpu-arc.c: Likewise.
+	* cpu-arm.c: Likewise.
+	* cpu-avr.c: Likewise.
+	* cpu-bfin.c: Likewise.
+	* cpu-bpf.c: Likewise.
+	* cpu-cr16.c: Likewise.
+	* cpu-cr16c.c: Likewise.
+	* cpu-cris.c: Likewise.
+	* cpu-crx.c: Likewise.
+	* cpu-csky.c: Likewise.
+	* cpu-d10v.c: Likewise.
+	* cpu-d30v.c: Likewise.
+	* cpu-dlx.c: Likewise.
+	* cpu-epiphany.c: Likewise.
+	* cpu-fr30.c: Likewise.
+	* cpu-frv.c: Likewise.
+	* cpu-ft32.c: Likewise.
+	* cpu-h8300.c: Likewise.
+	* cpu-hppa.c: Likewise.
+	* cpu-i386.c: Likewise.
+	* cpu-ia64.c: Likewise.
+	* cpu-iamcu.c: Likewise.
+	* cpu-ip2k.c: Likewise.
+	* cpu-iq2000.c: Likewise.
+	* cpu-k1om.c: Likewise.
+	* cpu-l1om.c: Likewise.
+	* cpu-lm32.c: Likewise.
+	* cpu-m10200.c: Likewise.
+	* cpu-m10300.c: Likewise.
+	* cpu-m32c.c: Likewise.
+	* cpu-m32r.c: Likewise.
+	* cpu-m68hc11.c: Likewise.
+	* cpu-m68hc12.c: Likewise.
+	* cpu-m68k.c: Likewise.
+	* cpu-m9s12x.c: Likewise.
+	* cpu-m9s12xg.c: Likewise.
+	* cpu-mcore.c: Likewise.
+	* cpu-mep.c: Likewise.
+	* cpu-metag.c: Likewise.
+	* cpu-microblaze.c: Likewise.
+	* cpu-mips.c: Likewise.
+	* cpu-mmix.c: Likewise.
+	* cpu-moxie.c: Likewise.
+	* cpu-msp430.c: Likewise.
+	* cpu-mt.c: Likewise.
+	* cpu-nds32.c: Likewise.
+	* cpu-nfp.c: Likewise.
+	* cpu-nios2.c: Likewise.
+	* cpu-ns32k.c: Likewise.
+	* cpu-or1k.c: Likewise.
+	* cpu-pdp11.c: Likewise.
+	* cpu-pj.c: Likewise.
+	* cpu-plugin.c: Likewise.
+	* cpu-powerpc.c: Likewise.
+	* cpu-pru.c: Likewise.
+	* cpu-riscv.c: Likewise.
+	* cpu-rl78.c: Likewise.
+	* cpu-rs6000.c: Likewise.
+	* cpu-rx.c: Likewise.
+	* cpu-s12z.c: Likewise.
+	* cpu-s390.c: Likewise.
+	* cpu-score.c: Likewise.
+	* cpu-sh.c: Likewise.
+	* cpu-sparc.c: Likewise.
+	* cpu-spu.c: Likewise.
+	* cpu-tic30.c: Likewise.
+	* cpu-tic4x.c: Likewise.
+	* cpu-tic54x.c: Likewise.
+	* cpu-tic6x.c: Likewise.
+	* cpu-tic80.c: Likewise.
+	* cpu-tilegx.c: Likewise.
+	* cpu-tilepro.c: Likewise.
+	* cpu-v850.c: Likewise.
+	* cpu-v850_rh850.c: Likewise.
+	* cpu-vax.c: Likewise.
+	* cpu-visium.c: Likewise.
+	* cpu-wasm32.c: Likewise.
+	* cpu-xc16x.c: Likewise.
+	* cpu-xgate.c: Likewise.
+	* cpu-xstormy16.c: Likewise.
+	* cpu-xtensa.c: Likewise.
+	* cpu-z80.c: Likewise.
+	* cpu-z8k.c: Likewise.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-09-06  Alan Modra  <amodra@gmail.com>
+
+	* aout-target.h (object_p): Formatting.
+	* bfd-in.h (bfd_get_filename): Don't cast to char*.
+	* corefile.c (generic_core_file_matches_executable_p): Constify
+	variables and remove cast.
+	* bfd-in2.h: Regenerate.
+
+2019-09-05  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_check_relocs): Interpret an addend in
+	GOT_PCREL and PLT_PCREL relocs as affecting the value stored
+	in the GOT/PLT entry rather than affecting the offset to that
+	GOI/PLT entry.
+	(ppc64_elf_edit_toc, ppc64_elf_relocate_section): Likewise.
+
+2019-09-05  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (xlate_pcrel_opt): Handle prefix loads and stores
+	in second instruction.
+	(ppc64_elf_relocate_section): Likewise.
+
+2019-09-05  Alan Modra  <amodra@gmail.com>
+
+	PR 24955
+	* libbfd-in.h (bfd_strdup): New inline function.
+	* archive.c (_bfd_get_elt_at_filepos): Use bfd_strdup.  Close
+	bfd on error.
+	* elfcode.h (_bfd_elf_bfd_from_remote_memory): Use bfd_strdup.
+	* opncls.c (bfd_fopen): Use bfd_strdup.  Close fd and stream
+	on error.
+	(bfd_openstreamr): Use bfd_strdup.
+	(bfd_openr_iovec, bfd_openw, bfd_create): Likewise.
+	* plugin.c (try_load_plugin): Use bfd_malloc.
+	* libbfd.h: Regenerate.
+
+2019-09-02  Alan Modra  <amodra@gmail.com>
+
+	PR 11983
+	* dwarf2.c (_bfd_dwarf2_slurp_debug_info): Free debug_filename
+	on success.  Tidy.
+	(read_alt_indirect_string): Likewise.
+	(read_alt_indirect_ref): Likewise.
+
+2019-08-31  Jim Wilson  <jimw@sifive.com>
+
+	PR 23825
+	* elfnn-riscv.c (riscv_elf_create_dynamic_sections): Add SEC_LOAD,
+	SEC_DATA, and SEC_HAS_CONTENTS to .tdata.dyn section.
+
+2019-08-30  Jim Wilson  <jimw@sifive.com>
+
+	* elfnn-riscv.c (riscv_elf_relocate_section): For unresolvable reloc
+	error, call bfd_set_error, set ret to FALSE, and goto out label.
+
+2019-08-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24951
+	* archive.c (_bfd_get_elt_at_filepos): Copy BFD_COMPRESS,
+	BFD_DECOMPRESS and BFD_COMPRESS_GABI flags for thin archive.
+
+2019-08-29  Alan Modra  <amodra@gmail.com>
+
+	PR 24697
+	* elf32-ppc.c (ppc_elf_check_relocs): Call bad_shared_reloc
+	when !bfd_link_executable for R_PPC_EMB_SDA2I16 and
+	R_PPC_EMB_SDA2REL.  Don't call bad_shared_reloc for any other
+	reloc.
+
+2019-08-29  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (xlate_pcrel_opt): Add poff parameter.  Allow offset
+	on second insn, return it in poff.
+	(ppc64_elf_relocate_section): Add offset to paddi addend for
+	PCREL_OPT.
+
+2019-08-28  Jim Wilson  <jimw@sifive.com>
+
+	* elfnn-riscv.c (_bfd_riscv_relax_lui): Add check to exclude abs
+	section when setting max_alignment.  Update comment.
+	(_bfd_riscv_relax_pc): Likewise.
+
+2019-08-29  Alan Modra  <amodra@gmail.com>
+
+	PR 24891
+	* bfd.c (struct bfd): Add no_element_cache.
+	* archive.c (_bfd_get_elt_at_filepos): Don't add element to
+	archive cache when no_element_cache.
+	(bfd_generic_archive_p): Set no_element_cache when opening first
+	element to check format.  Close first element too.
+	(do_slurp_bsd_armap): Don't zero ardata->cache here.
+	* bfd-in2.h: Regenerate.
+
+2019-08-24  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_edit_toc): Exclude undefined weak
+	symbols from GOT optimisation.
+
+2019-08-23  Stafford Horne  <shorne@gmail.com>
+
+	* elf32-or1k.c (or1k_elf_finish_dynamic_symbol): Use correct value for
+	PLT GOT entries.
+
+2019-08-23  Nick Clifton  <nickc@redhat.com>
+
+	PR 24456
+	* elf.c (bfd_section_from_shdr): Issue an informative warning
+	message and continue processing other sections after encountering
+	a reloc section for a section which already has other relocs
+	associated with it.
+
+2019-08-23  Alan Modra  <amodra@gmail.com>
+
+	PR 24933
+	* elfxx-x86.c (_bfd_x86_elf_get_synthetic_symtab): Don't exit
+	on error without freeing plts[] contents.
+
+2019-08-22  Dennis Zhang  <dennis.zhang@arm.com>
+
+	* cpu-arm.c: New entries for Cortex-M35P, Cortex-A77, Cortex-A76AE.
+
+2019-08-22  Nick Clifton  <nickc@redhat.com>
+
+	PR 24922
+	* pei-x86_64.c (pex64_xdata_print_uwd_codes): Add checks before
+	reading data from extra records.
+
+2019-08-22  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/24601
+	* elfnn-aarch64.c (aarch64_relocate): Handle weak TLS and undefined TLS.
+	Also Pass input_bfd to _bfd_aarch64_elf_resolve_relocation.
+	* elfxx-aarch64.c (_bfd_aarch64_elf_resolve_relocation): Use it.
+	* elfxx-aarch64.h (_bfd_aarch64_elf_resolve_relocation): Emit warning
+	for weak TLS.
+
+2019-08-22  Alan Modra  <amodra@gmail.com>
+
+	* elf32-arm.c (cmse_scan): Don't use ARM_GET_SYM_CMSE_SPCL,
+	instead recognize CMSE_PREFIX in symbol name.
+	(elf32_arm_gc_mark_extra_sections): Likewise.
+	(elf32_arm_filter_cmse_symbols): Don't test ARM_GET_SYM_CMSE_SPCL.
+	(elf32_arm_swap_symbol_in): Don't invoke ARM_SET_SYM_CMSE_SPCL.
+
+2019-08-20  Dennis Zhang  <dennis.zhang@arm.com>
+
+	* cpu-aarch64.c: New entries for Cortex-A34, Cortex-A65,
+	 Cortex-A77, cortex-A65AE, and Cortex-A76AE.
+
+2019-08-20  Tamar Christina  <tamar.christina@arm.com>
+
+	* elf32-arm.c (elf32_thumb2_plt_entry, elf32_arm_plt_thumb_stub,
+	elf32_arm_stub_long_branch_v4t_thumb_thumb,
+	elf32_arm_stub_long_branch_v4t_thumb_arm,
+	elf32_arm_stub_short_branch_v4t_thumb_arm,
+	elf32_arm_stub_long_branch_v4t_thumb_arm_pic,
+	elf32_arm_stub_long_branch_v4t_thumb_thumb_pic,
+	elf32_arm_stub_long_branch_v4t_thumb_tls_pic): Change nop to branch to
+	previous instruction.
+
+2019-08-19  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2.c (_bfd_dwarf2_find_symbol_bias): Create hash table
+	holding symbols.
+
+2019-08-19  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (struct ppc64_elf_obj_tdata): Rename has_gotrel
+	to has_optrel.
+	(struct _ppc64_elf_section_data): Likewise.
+	(ppc64_elf_check_relocs): Set has_optrel for more relocs.
+	(ppc64_elf_edit_toc): Do ha/lo insn checks in GOT loop rather
+	than TOC loop.  Check PLT16 insns too.
+
+2019-08-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24905
+	* elf64-x86-64.c (elf_x86_64_check_relocs): Move PIC check for
+	PC-relative relocations back to ...
+	(elf_x86_64_relocate_section): Here.
+
+2019-08-16  Martin Liska  <mliska@suse.cz>
+
+	PR ld/24912
+	* elflink.c: Report error only for not relocatable.
+	* linker.c (_bfd_generic_link_add_one_symbol): Do not handle
+	here lto_slim_object as it's handled in caller.
+
+2019-08-16  Alan Modra  <amodra@gmail.com>
+
+	* elf32-ppc.c (ppc_elf_relocate_section): Optimize unaligned relocs.
+
+2019-08-15  Jim Wilson  <jimw@sifive.com>
+
+	* elfnn-riscv.c (perform_relocation) <R_RISCV_RVC_LUI>: If
+	RISCV_CONST_HIGH_PART (value) is zero, then convert c.lui instruction
+	to c.li instruction, and use ENCODE_RVC_IMM to set value.
+
+2019-08-15  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2.c (scan_unit_for_symbols): Check for end of CU, not end
+	of section.
+
+2019-08-14  Alan Modra  <amodra@gmail.com>
+
+	PR 24623
+	* dwarf2.c (stash_comp_unit): New function, extracted from..
+	(_bfd_dwarf2_find_nearest_line): ..here.
+	(find_abstract_instance): Parse comp units and decode line info
+	as needed.
+
+2019-08-14  Alan Modra  <amodra@gmail.com>
+
+	* dwarf2.c (comp_unit_maybe_decode_line_info): Declare.
+	(comp_unit_find_nearest_line): Use it here..
+	(_bfd_dwarf2_find_symbol_bias): ..and here.
+
+2019-08-14  Alan Modra  <amodra@gmail.com>
+
+	* dwarf2.c (_bfd_dwarf2_find_nearest_line): Remove addr_size parameter.
+	* libbfd-in.h  (_bfd_dwarf2_find_nearest_line): Update prototype.
+	* coffgen.c (coff_find_nearest_line_with_names): Adjust
+	_bfd_dwarf2_find_nearest_line calls.
+	* elf.c (_bfd_elf_find_nearest_line, _bfd_elf_find_line): Likewise.
+	* elf32-arm.c (elf32_arm_find_nearest_line): Likewise.
+	* elf64-alpha.c (elf64_alpha_find_nearest_line): Likewise.
+	* elfnn-aarch64.c (elfNN_aarch64_find_nearest_line): Likewise.
+	* elfxx-mips.c (_bfd_mips_elf_find_nearest_line): Likewise.
+	* mach-o.c (bfd_mach_o_find_nearest_line): Likewise.
+	* libbfd.h: Regenerate.
+
+2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>
+
+	* elf-bfd.h (struct elf_backend_data): New members.
+	* elflink.c (_bfd_elf_link_create_dynamic_sections): Create
+	.gnu.hash section if necessary.
+	(struct collect_gnu_hash_codes): New member.
+	(elf_gnu_hash_process_symidx): New function name.
+	(elf_renumber_gnu_hash_syms): Ignore local and undefined
+	symbols. Record xlat location for every symbol which should have
+	a .MIPS.xhash entry.
+	(bfd_elf_size_dynamic_sections): Add DT_GNU_HASH dynamic tag to
+	dynamic section if necessary.
+	(GNU_HASH_SECTION_NAME): New define.
+	(bfd_elf_size_dynsym_hash_dynstr): Get .MIPS.xhash section.
+	Update the section size info.
+	* elfxx-mips.c (struct mips_elf_hash_sort_data): New members.
+	(struct mips_elf_link_hash_entry): New member.
+	(mips_elf_link_hash_newfunc): Initialize .MIPS.xhash translation
+	table location.
+	(mips_elf_sort_hash_table): Initialize the pointer to the
+	.MIPS.xhash section.
+	(mips_elf_sort_hash_table_f): Populate the .MIPS.xhash
+	translation table entry with the symbol dynindx.
+	(_bfd_mips_elf_section_from_shdr): Add SHT_MIPS_XHASH.
+	(_bfd_mips_elf_fake_sections): Initialize .MIPS.xhash section
+	info.
+	(_bfd_mips_elf_create_dynamic_sections): Create .MIPS.xhash
+	section.
+	(_bfd_mips_elf_size_dynamic_sections): Add DT_MIPS_XHASH tag to
+	dynamic section.
+	(_bfd_mips_elf_finish_synamic_sections): Add DT_MIPS_XHASH.
+	(_bfd_mips_elf_final_write_processing): Set .MIPS.xhash section
+	sh_link info.
+	(_bfd_mips_elf_get_target_dtag): Get DT_MIPS_XHASH tag.
+	(MIPS_LIBC_ABI_XHASH): New ABI version enum value.
+	(_bfd_mips_post_process_headers): Mark the ABI version as
+	MIPS_LIBC_ABI_XHASH if there exists a .MIPS.xhash section,
+	but not a .hash section.
+	(_bfd_mips_elf_record_xhash_symbol): New function. Record a
+	position in the translation table, associated with the hash
+	entry.
+	* elfxx-mips.h (literal_reloc_p): Define
+	elf_backend_record_xhash_symbol backend hook.
+	* elfxx-target.h: Initialize elf_backend_record_xhash_symbol
+	backend hook.
+
+2019-08-07  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* elf64-bpf.c (bpf_elf_relocate_section): New function.
+	(bpf_elf_insn_disp_reloc): Delete function.
+	(elf_backend_relocate_section): Define.
+
+2019-08-07  Alan Modra  <amodra@gmail.com>
+
+	PR 24644
+	* archive64.c (_bfd_archive_64_bit_slurp_armap): Properly check
+	for overflow in expressions involving nsymz.
+
+2019-08-01  Ilia Diachkov  <ilia.diachkov@optimitech.com>
+
+	* elfnn-riscv.c (_bfd_riscv_relax_lui): Set lui relax safety area to
+	two pages in relro presence.
+
+2019-08-01  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* elf32-xtensa.c (insn_num_slots, get_rsr_lend_opcode)
+	(get_wsr_lbeg_opcode): New functions.
+	(check_loop_aligned): Detect relaxed loops and adjust loop_len
+	and insn_len for the first actual instruction of the loop.
+
+2019-07-30  Alan Modra  <amodra@gmail.com>
+
+	PR 24768
+	* bfd.c (struct bfd): Add lto_slim_object flag.
+	* bfd-in2.h: Regenerate.
+
+2019-07-29  Martin Liska  <mliska@suse.cz>
+
+	PR 24768
+	* archive.c (_bfd_compute_and_write_armap): Come up with
+	report_plugin_err variable.
+	* bfd-in2.h (struct bfd): Add lto_slim_object flag.
+	* elf.c (struct lto_section): New.
+	(_bfd_elf_make_section_from_shdr): Parse content of
+	.gnu_lto_.lto section.
+	* elflink.c: Report error for a missing LTO plugin.
+	* linker.c (_bfd_generic_link_add_one_symbol): Likewise.
+
+2019-07-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24857
+	PR 24339
+	* elflink.c (elf_link_add_object_symbols): Report an informative
+	error on finding local symbols with index equal or greater than
+	symbol table sh_info.  Correct comment.  Allow such symbols in
+	dynamic objects.  Abort on NULL section for symbol.
+
+2019-07-26  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (struct output_elf_obj_tdata): Delete "linker" field.
+	(elf_linker): Don't define.
+	* elflink.c (bfd_elf_final_link): Don't set elf_linker.
+
+2019-07-25  YunQiang Su  <syq@debian.org>
+
+	PR 24832
+	* elfxx-mips.c (mips_set_isa_flags): Default to MIPS 3 for 64-bit
+	mips inputs.
+
+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* elf32-arc.c (bfd_get_32_me): Add a small description, fix
+	formating.
+	(reloc_type_to_name): Fix formating.
+	(arc_elf_object_p): Likewise.
+	(debug_arc_reloc): Likewise.
+	(arc_do_relocation): Likewise.
+
+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* elf32-arc.c (bfd_get_32_me): New function.
+	(bfd_put_32_me): Likewise.
+	(arc_elf_relax_section): Likewise.
+	(bfd_elf32_bfd_relax_section): Define.
+
+2019-07-24  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (struct elf_backend_data): Return bfd_boolean from
+	elf_backend_final_write_processing, don't pass linker arg.
+	(_bfd_elf_final_write_processing): Update prototype.
+	* elf.c (_bfd_elf_write_object_contents): Adjust call.
+	(_bfd_elf_final_write_processing): Return error on incompatible
+	OSABI and has_gnu_osabi.  Remove linker arg.
+	* elf-nacl.h (nacl_final_write_processing): Update prototype.
+	* elf-vxworks.h (elf_vxworks_final_write_processing): Likewise.
+	* elfxx-mips.h (_bfd_mips_final_write_processing): Likewise.
+	(_bfd_mips_elf_final_write_processing): Likewise.
+	* elf-hppa.h (elf_hppa_final_write_processing): Return status
+	and remove linker arg.
+	* elf-m10300.c (_bfd_mn10300_elf_final_write_processing): Likewise.
+	* elf-nacl.c (nacl_final_write_processing): Likewise.
+	* elf-vxworks.c (elf_vxworks_final_write_processing): Likewise.
+	* elf32-arc.c (arc_elf_final_write_processing): Likewise.
+	* elf32-arm.c (arm_final_write_processing): Likewise.
+	(elf32_arm_final_write_processing): Likewise.
+	(elf32_arm_nacl_final_write_processing): Likewise.
+	(elf32_arm_vxworks_final_write_processing): Likewise.
+	* elf32-avr.c (bfd_elf_avr_final_write_processing): Likewise.
+	* elf32-bfin.c (elf32_bfin_final_write_processing): Likewise.
+	* elf32-cr16.c (_bfd_cr16_elf_final_write_processing): Likewise.
+	* elf32-cris.c (cris_elf_final_write_processing): Likewise.
+	* elf32-h8300.c (elf32_h8_final_write_processing): Likewise.
+	* elf32-lm32.c (lm32_elf_final_write_processing): Likewise.
+	* elf32-m32r.c (m32r_elf_final_write_processing): Likewise.
+	* elf32-m68k.c (elf_m68k_final_write_processing): Likewise.
+	* elf32-mips.c (mips_vxworks_final_write_processing): Likewise.
+	* elf32-msp430.c (bfd_elf_msp430_final_write_processing): Likewise.
+	* elf32-nds32.c (nds32_elf_final_write_processing): Likewise.
+	* elf32-or1k.c (or1k_elf_final_write_processing): Likewise.
+	* elf32-pj.c (pj_elf_final_write_processing): Likewise.
+	* elf32-ppc.c (ppc_final_write_processing): Likewise.
+	(ppc_elf_final_write_processing): Likewise.
+	(ppc_elf_vxworks_final_write_processing): Likewise.
+	* elf32-sparc.c (sparc_final_write_processing): Likewise.
+	(elf32_sparc_final_write_processing): Likewise.
+	(elf32_sparc_vxworks_final_write_processing): Likewise.
+	* elf32-v850.c (v850_elf_final_write_processing): Likewise.
+	* elf32-xc16x.c (elf32_xc16x_final_write_processing): Likewise.
+	* elf32-xtensa.c (elf_xtensa_final_write_processing): Likewise.
+	* elf64-ia64-vms.c (elf64_vms_final_write_processing): Likewise.
+	* elfnn-ia64.c (elfNN_ia64_final_write_processing): Likewise.
+	* elfxx-mips.c (_bfd_mips_final_write_processing): Likewise.
+	(_bfd_mips_elf_final_write_processing): Likewise.
+
+2019-07-24  Alan Modra  <amodra@gmail.com>
+
+	* elf-vxworks.c (elf_vxworks_final_write_processing): Don't return
+	early.
+	* elf32-arc.c (arc_elf_final_write_processing): Likewise.
+	* elf32-xtensa.c (elf_xtensa_final_write_processing): Likewise.
+
+2019-07-24  Alan Modra  <amodra@gmail.com>
+
+	* elf32-visium.c (visium_elf_post_process_headers): Don't set
+	EI_OSABI header byte here.
+	(ELF_OSABI): Define.
+
+2019-07-23  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (enum elf_gnu_osabi): Add elf_gnu_osabi_mbind.
+	* elf.c (_bfd_elf_make_section_from_shdr): Set elf_gnu_osabi_mbind.
+	(get_program_header_size): Formatting.  Only test SH_GNU_MBIND
+	when elf_gnu_osabi_mbind is set.
+	(_bfd_elf_map_sections_to_segments): Likewise.
+	(_bfd_elf_init_private_section_data): Likewise.
+	(_bfd_elf_final_write_processing): Update comment.
+	* elf64-hppa.c (elf64_hppa_special_sections): Move .tbss entry.
+	(elf_backend_special_sections): Define without .tbss for linux.
+
+2019-07-23  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (enum elf_gnu_osabi): Rename from elf_gnu_symbols.
+	Remove none, any, all enums.
+	(struct elf_obj_tdata): Rename has_gnu_symbols field to has_gnu_osabi.
+	(_bfd_elf_final_write_processing): Declare.
+	* elf.c (_bfd_elf_write_object_contents): Unconditionally call
+	elf_backend_final_write_processing.
+	(_bfd_elf_post_process_headers): Move body of function to..
+	(_bfd_elf_final_write_processing): ..here, but set EI_OSABI byte
+	only when not already set.  Adjust for rename.
+	* elfxx-target.h (elf_backend_final_write_processing): Default to
+	_bfd_elf_final_write_processing.
+	* elf-hppa.h (elf_hppa_final_write_processing): Call
+	_bfd_elf_final_write_processing.
+	* elf-m10300.c (_bfd_mn10300_elf_final_write_processing): Likewise.
+	* elf-nacl.c (nacl_final_write_processing): Likewise.
+	* elf-vxworks.c (elf_vxworks_final_write_processing): Likewise.
+	* elf32-arc.c (arc_elf_final_write_processing): Likewise.
+	* elf32-avr.c (bfd_elf_avr_final_write_processing): Likewise.
+	* elf32-bfin.c (elf32_bfin_final_write_processing): Likewise.
+	* elf32-cr16.c (_bfd_cr16_elf_final_write_processing): Likewise.
+	* elf32-cris.c (cris_elf_final_write_processing): Likewise.
+	* elf32-h8300.c (elf32_h8_final_write_processing): Likewise.
+	* elf32-lm32.c (lm32_elf_final_write_processing): Likewise.
+	* elf32-m32r.c (m32r_elf_final_write_processing): Likewise.
+	* elf32-m68k.c (elf_m68k_final_write_processing): Likewise.
+	* elf32-msp430.c (bfd_elf_msp430_final_write_processing): Likewise.
+	* elf32-nds32.c (nds32_elf_final_write_processing): Likewise.
+	* elf32-or1k.c (or1k_elf_final_write_processing): Likewise.
+	* elf32-pj.c (pj_elf_final_write_processing): Likewise.
+	* elf32-v850.c (v850_elf_final_write_processing): Likewise.
+	* elf32-xc16x.c (elf32_xc16x_final_write_processing): Likewise.
+	* elf32-xtensa.c (elf_xtensa_final_write_processing): Likewise.
+	* elf64-ia64-vms.c (elf64_vms_final_write_processing): Likewise.
+	* elfnn-ia64.c (elfNN_ia64_final_write_processing): Likewise.
+	* elf32-arm.c (arm_final_write_processing): Split out from..
+	(elf32_arm_final_write_processing): ..here.  Call
+	_bfd_elf_final_write_processing.
+	(elf32_arm_nacl_final_write_processing): Adjust.
+	* elfxx-mips.c (_bfd_mips_final_write_processing): Split out from..
+	(_bfd_mips_elf_final_write_processing): ..here.  Call
+	_bfd_elf_final_write_processing.
+	* elfxx-mips.h (_bfd_mips_final_write_processing): Declare.
+	* elf32-mips.c (mips_vxworks_final_write_processing): Adjust.
+	* elf32-ppc.c (ppc_final_write_processing): Split out from..
+	(ppc_elf_final_write_processing): ..here.  Call
+	_bfd_elf_final_write_processing.
+	(ppc_elf_vxworks_final_write_processing): Adjust.
+	* elf32-sparc.c (sparc_final_write_processing): Split out from..
+	(elf32_sparc_final_write_processing): ..here.  Call
+	_bfd_elf_final_write_processing.
+	(elf32_sparc_vxworks_final_write_processing): Adjust.
+	* elf32-d10v.c (elf_backend_final_write_processing): Don't define.
+	* elf32-d30v.c (elf_backend_final_write_processing): Don't define.
+	* elf32-m68hc11.c (elf_backend_final_write_processing): Don't define.
+	* elf32-m68hc12.c (elf_backend_final_write_processing): Don't define.
+	* elf32-s12z.c (elf_backend_final_write_processing): Don't define.
+	* elf32-i386.c (elf_i386_check_relocs): Don't set has_gnu_symbols.
+	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
+	* elflink.c (elf_link_add_object_symbols): Likewise.
+	(elf_link_output_symstrtab): Set has_gnu_osabi for symbols here
+	instead.
+
+2019-07-23  Omar Majid  <omajid@redhat.com>
+
+	* coffcode.h (coff_set_arch_mach_hook): Handle I386_APPLE_MAGIC,
+	I386_FREEBSD_MAGIC, I386_LINUX_MAGIC, I386_NETBSD_MAGIC,
+	AMD64_APPLE_MAGIC, AMD64_FREEBSD_MAGIC, AMD64_LINUX_MAGIC,
+	AMD64_NETBSD_MAGIC.
+	* peXXigen.c: Add comment about source of .NET magic numbers.
+
+2019-07-19  Alan Modra  <amodra@gmail.com>
+
+	* reloc.c (BFD_RELOC_PPC64_TPREL34, BFD_RELOC_PPC64_DTPREL34),
+	(BFD_RELOC_PPC64_GOT_TLSGD34, BFD_RELOC_PPC64_GOT_TLSLD34),
+	(BFD_RELOC_PPC64_GOT_TPREL34, BFD_RELOC_PPC64_GOT_DTPREL34),
+	(BFD_RELOC_PPC64_TLS_PCREL): New pcrel tls relocs.
+	* elf64-ppc.c (ppc64_elf_howto_raw): Add howtos for pcrel tls relocs.
+	(ppc64_elf_reloc_type_lookup): Translate pcrel tls relocs.
+	(must_be_dyn_reloc, dec_dynrel_count): Add R_PPC64_TPREL64.
+	(ppc64_elf_check_relocs): Support pcrel tls relocs.
+	(ppc64_elf_tls_optimize, ppc64_elf_relocate_section): Likewise.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Regenerate.
+
+2019-07-18  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_relocate_section): Don't bother selecting
+	a TLS section symbol for edited relocs.  Tighten TLS symbol/reloc
+	match test.
+
+2019-07-18  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (TLS_EXPLICIT): Define as 256.
+	(ppc64_elf_check_relocs): Don't store TLS_EXPLICIT even if char
+	is more than 8 bits.
+	(ppc64_elf_tls_optimize): Likewise.  Make tls_set, tls_clear, and
+	tls_type vars unsigned int.
+	(ppc64_elf_relocate_section): Use r_type rather than TLS_EXPLICIT
+	to select r_type edit.
+
+2019-07-18  Alan Modra  <amodra@gmail.com>
+
+	* elf32-ppc.c (TLS_GDIE): Rename from TLS_TPRELGD throughout file.
+	Correct comment.
+	* elf64-ppc.c (TLS_GDIE): Likewise.
+
+2019-07-18  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_tls_optimize): Correct test for allowed
+	range of tp-relative offsets.
+
+2019-07-15  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (_bfd_elf_fix_symbol_flags): If the def for an
+	alias is no longer bfd_link_hash_defined, clear the alias.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (_bfd_elf_omit_section_dynsym_default): Don't keep
+	tls_sec.
+	(_bfd_elf_init_1_index_section): Prefer not using TLS sections.
+	(_bfd_elf_init_2_index_sections): Likewise.
+	* elf64-ppc.c (ppc64_elf_relocate_section): When emitting dynamic
+	relocations for local TLS symbols, use STN_UNDEF as the relocation
+	symbol.
+	* elf32-ppc.c (ppc_elf_relocate_section): Likewise, and don't
+	leave TLS symbol value in the addend.
+
+2019-07-08  Alan Modra  <amodra@gmail.com>
+
+	PR 24785
+	* elf32-ppc.c (_bfd_elf_ppc_set_arch): Sanity check .PPC.EMB.apuinfo
+	size before reading first word.
+
+2019-07-02  Nick Clifton  <nickc@redhat.com>
+
+	PR 24717
+	* elf.c (is_debuginfo_file): New function.
+	(assign_file_positions_for_non_load_sections): Do not warn about
+	allocated sections outside of loadable segments if they are found
+	in a debuginfo file.
+	* elf-bfd.h (is_debuginfo_file): Prototype.
+
+2019-07-02  Nick Clifton  <nickc@redhat.com>
+
+	PR 24753
+	* compress.c (bfd_get_full_section_contents): Do not complain
+	about linker created sections that are larger than the file size.
+
+2019-07-02  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* bfd/elf32-arm.c (CMSE_STUB_NAME): New define.
+	(elf32_arm_get_stub_entry): Do not try to emit long-branch stubs
+	for CMSE stubs.
+	(arm_dedicated_stub_output_section_name): Use CMSE_STUB_NAME.
+
+2019-07-02  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* elf32-arm.c (elf32_arm_gc_mark_extra_sections): Mark debug
+	sections when .text section contain secure entry functions
+	is marked.
+
+2019-07-01  Nick Clifton  <nickc@redhat.com>
+
+	PR 23839
+	* elf32-arm.c (elf32_arm_update_relocs): Do not include the
+	section VMA in the offset used to update exidx relocs.
+
+2019-06-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 24708
+	* elf.c (_bfd_elf_slurp_version_tables): Check for an excessively
+	large version reference section.
+	* compress.c (bfd_get_full_section_contents): Check for an
+	uncompressed section whose size is larger than the file size.
+
+2019-06-28  Alan Modra  <amodra@gmail.com>
+
+	* format.c (bfd_check_format_matches): Don't match plugin target
+	if another target matches.  Expand comment.
+	* targets.c (_bfd_target_vector): Move plugin_vec after all other
+	non-corefile targets, outside !SELECT_VECS.
+	* config.bfd: Don't handle targ=plugin here.
+	* configure.ac: Don't add plugin to enable_targets or handle in
+	target loop setting selvecs and other target vars.
+	* configure: Regenerate.
+
+2019-06-26  Nick Clifton  <nickc@redhat.com>
+
+	PR 24703
+	* mach-o-arm.c (bfd_mach_o_arm_canonicalize_one_reloc): Add error
+	messages for failures.
+	* mach-o.c (bfd_mach_o_canonicalize_relocs): Set an bfd error code
+	if returning an error value.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* elf-properties.c (elf_find_and_remove_property): Rename last
+	parameter. Mention it in comment.
+
+2019-06-24  Ilia Diachkov  <ilia.diachkov@optimitech.com>
+
+	* elfnn-riscv.c (_bfd_riscv_relax_lui): Delete early exit when
+	SEC_MERGE or SEC_CODE flags are set.
+	(_bfd_riscv_relax_section): New local symtype.  Set sym_sec and
+	symtype consistently.  Don't include sec_addr (sym_sec) in symval.
+	Add check for SEC_INFO_TYPE_MERGE and call _bfd_merged_section_offset.
+	Add sec_addr (sym_sec) after handling merge sections.
+
+2019-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24721
+	* elf-properties.c (elf_merge_gnu_property_list): Remove the
+	property after reporting property removal.
+
+2019-06-23  Alan Modra  <amodra@gmail.com>
+
+	PR 24704
+	* elf64-ppc.c (R_PPC64_GOT16_DS): Don't set has_gotrel.
+	(ppc64_elf_edit_toc): Don't remove R_PPC64_GOT16_DS got entries.
+	Reduce range of offsets allowed for other GOT relocs.
+
+2019-06-23  Alan Modra  <amodra@gmail.com>
+
+	PR 24689
+	* elfcode.h (elf_object_p): Warning fix.
+
+2019-06-21  Alan Modra  <amodra@gmail.com>
+
+	PR 24689
+	* elfcode.h (elf_object_p): Check type of e_shstrndx section.
+
+2019-06-19  Alan Modra  <amodra@gmail.com>
+
+	PR 24697
+	* elf32-ppc.c (ppc_elf_relocate_section): Don't read insn for
+	R_PPC_EMB_RELSDA.  Mask low bit of R_PPC_EMB_SDA21 r_offset.
+
+2019-06-19  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_inline_plt): Correct st_other test for
+	functions that require r2 valid to use local entry.
+	(ppc64_elf_size_stubs, ppc64_elf_relocate_section): Likewise.
+
+2019-06-17  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* elfnn-aarch64.c (elfNN_aarch64_allocate_local_dynrelocs): Remove.
+	(elfNN_aarch64_size_dynamic_sections): Remove loc_hash_table traversal
+	with elfNN_aarch64_allocate_local_dynrelocs.
+
+2019-06-14  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* elfnn-aarch64.c: Enable MOVW_PREL relocs for ELF32.
+
+2019-06-14  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+
+2019-06-14  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c: Fix comments involving paddi.
+
+2019-06-12  Adam Lackorzymski  <adam@os.inf.tu-dresden.de>
+
+	PR 24643
+	* elf32-arm.c (arm_elf_find_function): Fail if the symol table is
+	absent, or the bfd is not in the ELF formart.
+	* elfnn-aarch64.c (aarch64_elf_find_function): Likewise.
+
+2019-06-10  Christos Zoulas  <christos@zoulas.com>
+
+	PR 24650
+	* elf.c (elfcore_make_auxv_note_section): New function.
+	(elfcore_grok_note): Use it.
+	(elfcore_grok_freebsd_note): Likewise.
+	(elfcore_grok_openbsd_note): Likewise.
+	(elfcore_grok_netbsd_note): Likewise.  Plus add support for
+	NT_NETBSDCORE_AUXV notes.
+
+2019-06-06  Sudakshina Das  <sudi.das@arm.com>
+
+	* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties): Set
+	alignment of the new gnu property section.
+
+2019-06-06  Sudakshina Das  <sudi.das@arm.com>
+
+	* bfd-in.h: Change comment.
+	* bfd-in2.h: Regenerate.
+	* elfnn-aarch64.c (elfNN_aarch64_merge_gnu_properties): Update warning.
+	* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties):
+	Likwise.
+
+2019-05-28  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* elfxx-mips.c (mips_elf_calculate_relocation) <R_MIPS_PCHI16>:
+	Remove overflow check.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* cofflink.c (coff_link_check_archive_element): Don't assume
+	element is a coff object file after calling add_archive_element.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* elf32-microblaze.c (microblaze_elf_finish_dynamic_sections): Don't
+	attempt to set sh_entsize for excluded PLT section.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* elf64-alpha.c (elf64_alpha_relocate_section): Don't attempt
+	to emit R_ALPHA_GOTTPREL in PIEs, for which no space is
+	allocated in alpha_dynamic_entries_for_reloc.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* elf32-lm32.c (lm32_elf_finish_dynamic_sections): Don't segfault
+	on NULL output_section.
+	* elflink.c (elf_final_link_free): Don't free -1 symshndxbuf.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* elf32-m68k.c (elf_m68k_get_got_entry): Don't create a new
+	entry when MUST_FIND.  Abort when MUST_FIND not found.
+	(elf_m68k_get_bfd2got_entry): Likewise.
+	(elf_m68k_relocate_section): Remove now useless assert.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* elf64-hppa.c (elf64_hppa_finalize_dynreloc): Get the output bfd
+	from bfd_link_info, not an output section owner.
+	(elf64_hppa_finish_dynamic_symbol, elf64_hppa_finalize_opd): Likewise.
+	(elf_hppa_final_link_relocate): Likewise.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* aout-tic30.c (MY_bfd_final_link): Don't segfault on missing
+	create_object_symbols_section, obj_textsec, obj_datasec or
+	obj_bsssec.  Fix other errors in placement.
+	* config.bfd: Obsolete tic30-aout.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* dwarf2.c (save_section_vma, section_vma_same): Check for NULL
+	end of section list as well as section_count.
+	* xcofflink.c (xcoff_link_add_symbols): Fix temporarily changed
+	section list before returning error.
+
+2019-05-27  Alan Modra  <amodra@gmail.com>
+
+	* elf.c (bfd_elf_set_group_contents): Exit on zero size section.
+
+2019-05-27  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* linker.c (_bfd_generic_link_output_symbols): Heed BSF_KEEP.
+
+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* elfnn-aarch64.c (elfNN_aarch64_merge_symbol_attribute): New function.
+	(struct elf_aarch64_link_hash_table): Add variant_pcs member.
+	(elfNN_aarch64_allocate_dynrelocs): Update variant_pcs.
+	(elfNN_aarch64_size_dynamic_sections): Add DT_AARCH64_VARIANT_PCS.
+	(elf_backend_merge_symbol_attribute): Define.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* po/SRC-POTFILES.in: Regenerate.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c: Comment on powerxx _notoc stub variants.
+	(LI_R11_0, LIS_R11, ORI_R11_R11_0, SLDI_R11_R11_34): Define.
+	(PADDI_R12_PC, PLD_R12_PC, D34, HA34): Define.
+	(struct ppc_link_hash_table): Add powerxx_stubs.
+	(ppc64_elf_check_relocs): Set powerxx_stubs.
+	(build_powerxx_offset, size_powerxx_offset),
+	(num_relocs_for_powerxx_offset),
+	(emit_relocs_for_powerxx_offset): New functions.
+	(plt_stub_size): Size powerxx stubs.
+	(ppc_build_one_stub): Emit powerxx stubs.
+	(ppc_size_one_stub): Size powerxx stubs.  Omit .eh_frame for
+	powerxx stubs.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_check_relocs): Set has_gotrel for
+	R_PPC64_GOT_PCREL34.
+	(xlate_pcrel_opt): New function.
+	(ppc64_elf_edit_toc): Handle R_PPC64_GOT_PCREL34.
+	(ppc64_elf_relocate_section): Edit GOT indirect to GOT relative
+	for R_PPC64_GOT_PCREL34.  Implement R_PPC64_PCREL_OPT optimisation.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* reloc.c (BFD_RELOC_PPC64_D34, BFD_RELOC_PPC64_D34_LO),
+	(BFD_RELOC_PPC64_D34_HI30, BFD_RELOC_PPC64_D34_HA30),
+	(BFD_RELOC_PPC64_PCREL34, BFD_RELOC_PPC64_GOT_PCREL34),
+	(BFD_RELOC_PPC64_PLT_PCREL34),
+	(BFD_RELOC_PPC64_ADDR16_HIGHER34, BFD_RELOC_PPC64_ADDR16_HIGHERA34),
+	(BFD_RELOC_PPC64_ADDR16_HIGHEST34, BFD_RELOC_PPC64_ADDR16_HIGHESTA34),
+	(BFD_RELOC_PPC64_REL16_HIGHER34, BFD_RELOC_PPC64_REL16_HIGHERA34),
+	(BFD_RELOC_PPC64_REL16_HIGHEST34, BFD_RELOC_PPC64_REL16_HIGHESTA34),
+	(BFD_RELOC_PPC64_D28, BFD_RELOC_PPC64_PCREL28): New reloc enums.
+	* elf64-ppc.c (PNOP): Define.
+	(ppc64_elf_howto_raw): Add reloc howtos for new relocations.
+	(ppc64_elf_reloc_type_lookup): Translate new bfd reloc numbers.
+	(ppc64_elf_ha_reloc): Adjust addend for highera34 and highesta34
+	relocs.
+	(ppc64_elf_prefix_reloc): New function.
+	(struct ppc_link_hash_table): Add notoc_plt.
+	(is_branch_reloc): Add R_PPC64_PLTCALL_NOTOC.
+	(is_plt_seq_reloc): Add R_PPC64_PLT_PCREL34,
+	R_PPC64_PLT_PCREL34_NOTOC, and R_PPC64_PLTSEQ_NOTOC.
+	(ppc64_elf_check_relocs): Handle pcrel got and plt relocs.  Set
+	has_pltcall for section on seeing R_PPC64_PLTCALL_NOTOC.  Handle
+	possible need for dynamic relocs on non-pcrel powerxx relocs.
+	(dec_dynrel_count): Handle non-pcrel powerxx relocs.
+	(ppc64_elf_inline_plt): Handle R_PPC64_PLTCALL_NOTOC.
+	(toc_adjusting_stub_needed): Likewise.
+	(ppc64_elf_tls_optimize): Handle R_PPC64_PLTSEQ_NOTOC.
+	(ppc64_elf_relocate_section): Handle new powerxx relocs.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Regenerate.
+
+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* config.bfd (targ_cpu): Process bpf-*-none only if BFD64.
+	* configure.ac: Set target_size=64 for bpf_elf64_le_vec and
+	bpf_elf64_be_vec.
+	* configure: Regenerate.
+
+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* configure: Regenerated.
+	* Makefile.am (ALL_MACHINES): Add cpu-bpf.lo.
+	(ALL_MACHINES_CFILES): Add cpu-bpf.c.
+	(BFD64_BACKENDS): Add elf64-bpf.lo.
+	(BFD64_BACKENDS_CFILES): Add elf64-bpf.c.
+	* Makefile.in (SOURCE_HFILES): Regenerate.
+	* config.bfd (targ_cpu): Handle bpf-*-* targets.
+	* cpu-bpf.c: New file.
+	* elf64-bpf.c: Likewise.
+	* targets.c (_bfd_target_vector): Add bpf_elf64_be_vec and
+	bpf_elf64_le_vec.
+	* archures.c: Define architecture bfd_arch_bpf and machine
+	bfd_arch_bpf.
+	* reloc.c: Define BFD relocations used by the BPF target.
+	* bfd-in2.h: Regenerated.
+	* libbfd.h: Likewise.
+
+2019-05-22  Alan Modra  <amodra@gmail.com>
+
+	* elf32-arm.c (arm_allocate_glue_section_space): Clear section
+	contents.
+
+2019-05-22  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_write_etir): Don't attempt further
+	processing on "size error in section".
+
+2019-05-22  Alan Modra  <amodra@gmail.com>
+
+	* som.c (som_bfd_free_cached_info): Call
+	_bfd_generic_close_and_cleanup.
+
+2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Generate error
+	for TLS_TPREL_HI16(/LO16) relocations in shared library.
+
+2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Add NULL pointer
+	checks.  Search the RELA table for n64 relocations.
+
+2019-05-21  Matthew Fortune  <matthew.fortune@mips.com>
+	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* elfxx-mips.c (LA25_BC): New macro.
+	(mips_elf_link_hash_table)<compact_branches>: New field.
+	(STUB_JALRC): New macro.
+	(mipsr6_o32_exec_plt0_entry_compact): New array.
+	(mipsr6_n32_exec_plt0_entry_compact): Likewise.
+	(mipsr6_n64_exec_plt0_entry_compact): Likewise.
+	(mipsr6_exec_plt_entry_compact): Likewise.
+	(mips_elf_create_la25_stub): Use BC instead of J for stubs
+	when compact_branches is true.
+	(_bfd_mips_elf_finish_dynamic_symbol): Choose the compact
+	PLT for MIPSR6 with compact_branches.  Do not reorder the
+	compact branches PLT.  Switch the lazy stub for MIPSR6
+	with compact_branches to use JALRC.
+	(mips_finish_exec_plt): Choose the compact PLT0 for MIPSR6
+	when compact_branches is true.
+	(_bfd_mips_elf_compact_branches): New function.
+	* elfxx-mips.h (_bfd_mips_elf_compact_branches): New prototype.
+
+2019-05-21  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/24373
+	* elfnn-aarch64.c (_bfd_aarch64_erratum_843419_branch_to_stub):
+	Fix print formatter.
+
+2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	PR 24460
+	* elf32-arm.c (get_value_helper): Remove.
+	(elf32_arm_final_link_relocate): Fix branch future relocations.
+
+2019-05-21  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/24373
+	* bfd-in.h (enum erratum_84319_opts): New
+	(bfd_elf64_aarch64_set_options, bfd_elf32_aarch64_set_options): Change
+	int to enum erratum_84319_opts.
+	* bfd-in2.h: Regenerate.
+	* elfnn-aarch64.c (struct elf_aarch64_link_hash_table): Change
+	fix_erratum_843419 to use new enum, remove fix_erratum_843419_adr.
+	(_bfd_aarch64_add_stub_entry_after): Conditionally create erratum stub.
+	(aarch64_size_one_stub): Conditionally size erratum 843419 stubs.
+	(_bfd_aarch64_resize_stubs): Amend comment.
+	(elfNN_aarch64_size_stubs): Don't generate stubs when no workaround
+	requested.
+	(bfd_elfNN_aarch64_set_options): Use new fix_erratum_843419 enum.
+	(_bfd_aarch64_erratum_843419_branch_to_stub): Implement selection of
+	erratum workaround.
+	(clear_erratum_843419_entry): Update erratum conditional.
+
+2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
+
+	PR ld/24571
+	* bfd/elf32-avr.c (elf32_avr_relax_section): Adjust range check
+	when computing distance_short_enough.
+
+2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
+
+	PR ld/24564
+	* bfd/elf32-avr.c (avr_relative_distance_considering_wrap_around):
+	Wrap around even if distance equals avr_pc_wrap_around.
+
+2019-05-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* elf32-arm.c (elf32_arm_merge_eabi_attributes): Add case for Tag_MVE_arch.
+
+2019-05-16  Alan Modra  <amodra@gmail.com>
+
+	* elf32-arm.c (elf32_arm_write_section): Revert last change.
+
+2019-05-15  Alan Modra  <amodra@gmail.com>
+
+	* elf32-arm.c (elf32_arm_write_section): Don't leave
+	error case of STM32L4XX_ERRATUM_BRANCH_TO_VENEER with
+	unitialised section contents.
+
+2019-05-14  Jamey Hicks  <jamey.hicks@gmail.com>
+
+	PR 19921
+	* verilog.c: (VerilogDataWidth): New variable.
+	(verilog_write_record): Emit bytes in VerilogDataWidth bundles.
+
+2019-05-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 24523
+	* elf32-m68k.c (elf32_m68k_merge_private_bfd_data): Return TRUE
+	rather than FALSE if encountering a non-ELF file.
+
+2019-05-06  Alan Modra  <amodra@gmail.com>
+
+	* elf32-pj.c (pj_elf_reloc): Don't report undefined weak as an error.
+
+2019-05-06  Alan Modra  <amodra@gmail.com>
+
+	* reloc.c (BFD_RELOC_PPC64_TPREL16_HIGH, BFD_RELOC_PPC64_TPREL16_HIGHA),
+	(BFD_RELOC_PPC64_DTPREL16_HIGH, BFD_RELOC_PPC64_DTPREL16_HIGHA):
+	Sort before BFD_RELOC_PPC64_DTPREL16_HIGHESTA entry.
+	* libbfd.h: Regenerate.
+	* bfd-in2.h: Regenerate.
+
+2019-05-04  Alan Modra  <amodra@gmail.com>
+
+	PR 24511
+	* syms.c (coff_section_type): Only allow '.', '$' and numeric
+	following the standard section names.
+	(bfd_decode_symclass): Prioritize section flag tests in
+	decode_section_type before name tests in coff_section_type.
+	* plugin.c (bfd_plugin_canonicalize_symtab): Init fake_section
+	and fake_common_section using BFD_FAKE_SECTION.  Use "fake" as
+	their names and choose standard .text section flags for
+	fake_section.
+
+2019-05-02  Nick Clifton  <nickc@redhat.com>
+
+	PR 24493
+	* coffcode.h (styp_to_sec_flags): Treat .gnu.debuglink and
+	.gnu.debugaltlink sections as debugging sections.
+
+2019-04-30  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (struct ppc64_elf_obj_tdata): Add has_gotrel.
+	(struct _ppc64_elf_section_data): Likewise.
+	(ppc64_elf_check_relocs): Set above fields.
+	(ppc64_elf_edit_toc): Add a pass over GOT relocs.
+	(ppc64_elf_relocate_section): Edit GOT indirect to GOT relative
+	when possible.
+
+2019-04-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24486
+	* elflink.c (elf_link_output_extsym): Don't complain undefined
+	weak dynamic reference.
+
+2019-04-25  Sudakshina Das  <sudi.das@arm.com>
+
+	* elfnn-aarch64.c (PLT_BTI_ENTRY_SIZE): Remove.
+	(PLT_BTI_TLSDESC_ENTRY_SIZE): Remove.
+	(PLT_PAC_ENTRY_SIZE, PLT_BTI_PAC_ENTRY_SIZE): Remove.
+	(PLT_BTI_SMALL_ENTRY_SIZE, PLT_PAC_SMALL_ENTRY_SIZE): Update.
+	(elfNN_aarch64_small_plt0_pac_entry): Remove.
+	(elfNN_aarch64_small_plt0_bti_pac_entry): Remove.
+	(elfNN_aarch64_small_plt0_bti_entry): Update.
+	(elfNN_aarch64_small_plt_bti_entry): Update.
+	(elfNN_aarch64_small_plt_pac_entry): Update.
+	(elfNN_aarch64_tlsdesc_small_plt_bti_entry): Update.
+	(setup_plt_values): Setup new entries.
+	(elfNN_aarch64_finish_dynamic_sections): Remove size change.
+	(elfNN_aarch64_plt_sym_val): Likewise.
+
+2019-04-22  Jim Wilson  <jimw@sifive.com>
+
+	* elfnn-riscv.c (PRSTATUS_SIZE) [ARCH_SIZE==32]: Change from 0 to 204.
+
+2019-04-19  Alan Modra  <amodra@gmail.com>
+
+	* elf32-s12z.c (elf_backend_can_gc_sections): Don't define
+
+2019-04-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf64-x86-64.c (elf_x86_64_need_pic): Suggest -fPIE when not
+	building shared object.
+	* elfxx-x86.c (_bfd_x86_elf_size_dynamic_sections): Likewise.
+
+2019-04-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24458
+	* elfxx-x86.h (SYMBOL_DEFINED_NON_SHARED_P): Also check x86
+	linker_def.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* reloc.c (BFD_RELOC_ARM_T32_VLDR_VSTR_OFF_IMM): New internal
+	relocation.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Likewise.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* reloc.c (BFD_RELOC_ARM_THUMB_LOOP12): New.
+	* bfd-in2.h: Regenerated.
+	* libbfd.h: Regenerated.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* reloc.c (BFD_RELOC_THUMB_PCREL_BFCSEL): New relocation.
+	* bfd-in2.h: Regenerated.
+	* libbfd.h: Likewise.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* reloc.c (BFD_RELOC_ARM_THUMB_BF13): New.
+	* bfd-in2.h: Regenerated.
+	* libbfd.h: Regenerated.
+	* elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF13.
+	(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF13
+	and R_ARM_THM_BF12 together.
+	(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF13.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* reloc.c (BFD_RELOC_ARM_THUMB_BF19): New
+	* libbfd.h: Regenerated.
+	* bfd-in2.h: Regenerated.
+	* bfd-elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF18.
+	(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF19
+	and R_ARM_THM_BF18 together.
+	(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF19.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* reloc.c (BFD_RELOC_ARM_THUMB_BF17): New enum.
+	* bfd-in2.h: Regenerated.
+	* libbfd.h: Regenerated.
+	* bfd-elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF16.
+	(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF17
+	and R_ARM_THM_BF16 together.
+	(get_value_helper): New reloc helper.
+	(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF16.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* reloc.c (BFD_RELOC_THUMB_PCREL_BRANCH5): New enum.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Regenerate.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* archures.c (bfd_mach_arm_8_1M_MAIN): Define.
+	* bfd-in2.h: Regenerate.
+	* cpu-arm.c (arch_info_struct): Add entry for Armv8.1-M Mainline.
+	* elf32-arm.c (using_thumb_only): Return true for Armv8.1-M Mainline
+	and update assert.
+	(using_thumb2): Likewise.
+	(using_thumb2_bl): Update assert.
+	(arch_has_arm_nop): Likewise.
+	(bfd_arm_get_mach_from_attributes): Add case for Armv8.1-M Mainline.
+	(tag_cpu_arch_combine): Add logic for Armv8.1-M Mainline merging.
+
+2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-linker-x86.h (elf_x86_cet_report): New.
+	(elf_linker_x86_params): Add cet_report.
+	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Report
+	missing IBT and SHSTK properties if needed.
+
+2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24436
+	* elf-m10300.c (mn10300_elf_check_relocs): Remove BFD_ASSERT of
+	"h != NULL".  Don't check "h != NULL" before calling.
+	bfd_elf_gc_record_vtentry.
+	* elf32-arm.c (elf32_arm_check_relocs): Likewise.
+	* elf32-bfin.c (bfin_check_relocs): Likewise.
+	* elf32-cris.c (cris_elf_check_relocs): Likewise.
+	* elf32-csky.c (csky_elf_check_relocs): Likewise.
+	* elf32-d10v.c (elf32_d10v_check_relocs): Likewise.
+	* elf32-dlx.c (elf32_dlx_check_relocs): Likewise.
+	* elf32-fr30.c (fr30_elf_check_relocs): Likewise.
+	* elf32-frv.c (elf32_frv_check_relocs): Likewise.
+	* elf32-hppa.c (elf32_hppa_check_relocs): Likewise.
+	* elf32-i386.c (elf_i386_check_relocs): Likewise.
+	* elf32-iq2000.c (iq2000_elf_check_relocs): Likewise.
+	* elf32-m32r.c (m32r_elf_check_relocs): Likewise.
+	* elf32-m68hc1x.c (elf32_m68hc11_check_relocs): Likewise.
+	* elf32-m68k.c (elf_m68k_check_relocs): Likewise.
+	* elf32-mcore.c (mcore_elf_check_relocs): Likewise.
+	* elf32-metag.c (elf_metag_check_relocs): Likewise.
+	* elf32-or1k.c (or1k_elf_check_relocs): Likewise.
+	* elf32-ppc.c (ppc_elf_check_relocs): Likewise.
+	* elf32-s390.c (elf_s390_check_relocs): Likewise.
+	* elf32-sh.c (sh_elf_check_relocs): Likewise.
+	* elf32-v850.c (v850_elf_check_relocs): Likewise.
+	* elf32-vax.c (elf_vax_check_relocs): Likewise.
+	* elf32-xstormy16.c (xstormy16_elf_check_relocs): Likewise.
+	* elf32-xtensa.c (elf_xtensa_check_relocs): Likewise.
+	* elf64-mmix.c (mmix_elf_check_relocs): Likewise.
+	* elf64-ppc.c (ppc64_elf_check_relocs): Likewise.
+	* elf64-s390.c (elf_s390_check_relocs): Likewise.
+	* elf64-x86-64.c (elf_s390_check_relocs): Likewise.
+	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Likewise.
+	* elfxx-sparc.c (_bfd_sparc_elf_check_relocs): Likewise.
+	* elflink.c (bfd_elf_gc_record_vtinherit): Check for corrupt
+	VTENTRY entry.
+
+2019-04-11  Alan Modra  <amodra@gmail.com>
+
+	PR 24435
+	* elflink.c (elf_link_add_object_symbols): Don't read partial
+	dynamic entries from fuzzed objects.
+
+2019-04-11  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/24302
+	* elfnn-aarch64.c (elfNN_aarch64_size_dynamic_sections): Don't emit
+	DT_TLSDESC_GOT and DT_TLSDESC_PLT when DF_BIND_NOW.
+	(elfNN_aarch64_finish_dynamic_sections): Don't write PLT if DF_BIND_NOW.
+
+2019-04-10  Michael Forney  <mforney@mforney.org>
+
+	PR 24427
+	* doc/chew.c (free_words): Correctly free "push_text" strings.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config.bfd: Remove i[3-7]86-*-kaos* and i[3-7]86-*-chaos targets.
+
+2019-04-08  Alan Modra  <amodra@gmail.com>
+
+	* configure.ac (elfxx_x86): Define and use.
+	* configure: Regenerate.
+
+2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-linker-x86.h: New file.
+	* elf32-i386.c (elf_i386_convert_load_reloc): Use htab->params
+	to get x86-specific linker options.
+	* elf64-x86-64.c (elf_x86_64_convert_load_reloc): Likewise.
+	(elf_x86_64_check_relocs): Likewise.
+	(elf_x86_64_relocate_section): Likewise.
+	(elf_x86_64_link_setup_gnu_properties): Likewise.
+	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Likewise.
+	(_bfd_x86_elf_link_setup_gnu_properties): Likewise.
+	(_bfd_elf_linker_x86_set_options): New function.
+	* elfxx-x86.h: Include "elf-linker-x86.h".
+	(elf_x86_link_hash_table): Add params.
+
+2019-04-03  Alan Modra  <amodra@gmail.com>
+
+	* coff-i386.c, * coff-x86_64.c, * coffgen.c, * dwarf2.c,
+	* elf-m10200.c, * elf.c, * elf32-arm.c, * elf32-bfin.c,
+	* elf32-csky.c, * elf32-m32r.c, * elf32-microblaze.c, * elf32-pru.c,
+	* elf32-rx.c, * elf32-xgate.c, * elf64-sparc.c, * elfnn-ia64.c,
+	* elfxx-riscv.c, * elfxx-sparc.c, * linker.c, * mach-o.c,
+	* pe-x86_64.c, * pei-x86_64.c, * plugin.c: Whitespace fixes.
+
+2019-04-02  Jim Wilson  <jimw@sifive.com>
+
+	PR 24389
+	* elfnn-riscv.c (_bfd_riscv_elf_merge_private_bfd_data): Move read of
+	ELF header flags to after check for ELF object file.  Loop through
+	sections looking for code sections, if none, then skip ABI checks.
+
+2019-03-30  Andrew Waterman  <andrew@sifive.com>
+
+	* elfnn-riscv.c (_bfd_riscv_relax_call): Only check ARCH_SIZE for
+	rd == X_RA case.
+
+2019-03-29  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* elf32-xtensa.c (shrink_dynamic_reloc_sections): Add
+	info->export_dynamic to the conditional.
+
+2019-03-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24392
+	* configure.ac: Invoke AC_CHECK_SIZEOF(int).
+	* configure: Regenerate.
+	* coffgen.c (coff_get_reloc_upper_bound): Replace gcc diagnostic
+	workaround with SIZEOF_LONG vs. SIZEOF_INT check.
+	* elf.c (_bfd_elf_get_reloc_upper_bound): Likewise.
+	* elf64-sparc.c (elf64_sparc_get_reloc_upper_bound): Likewise.
+	* mach-o.c (bfd_mach_o_get_reloc_upper_bound): Likewise.
+
+2019-03-21  Jim Wilson  <jimw@sifive.com>
+
+	PR 24365
+	* elfnn-riscv.c (riscv_elf_relocate_section): For STT_SECTION check,
+	verify sym non-NULL before using.  Add identical check using h.
+
+2019-03-21  Sudakshina Das  <sudi.das@arm.com>
+
+	* elf-bfd.h (struct elf_backend_data): Add argument to
+	merge_gnu_properties.
+	* elf-properties.c (elf_merge_gnu_properties): Add argument to
+	itself and while calling bed->merge_gnu_properties.
+	(elf_merge_gnu_property_list): Update the calls for
+	elf_merge_gnu_properties.
+	* elfnn-aarch64.c (elfNN_aarch64_merge_gnu_properties): Update handling
+	of --force-bti warning and add argument.
+	* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties): Add
+	warning.
+	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Add argument.
+	* elfxx-x86.h (_bfd_x86_elf_merge_gnu_properties): Likewise in
+	declaration.
+
+2019-03-20  Sudakshina Das  <sudi.das@arm.com>
+
+	* elfxx-aarch64.c (_bfd_aarch64_elf_link_fixup_gnu_properties): Define.
+	* elfxx-aarch64.h (_bfd_aarch64_elf_link_fixup_gnu_properties): Declare.
+	(elf_backend_fixup_gnu_properties): Define for AArch64.
+
+2019-03-18  Alan Modra  <amodra@gmail.com>
+
+	PR 24355
+	* elf32-ppc.c (ppc_finish_symbols): Don't call write_glink_stub
+	for local iplt syms with ent->plt.offset == -1.  Remove ineffective
+	attempt at writing glink stubs only once.
+
+2019-03-16  Alan Modra  <amodra@gmail.com>
+
+	PR 24337
+	* elf.c (_bfd_elf_rela_local_sym): Revert last change.
+	(_bfd_elf_rel_local_sym): Likewise.
+	* elflink.c (elf_link_input_bfd): Use bfd_und_section for
+	section of symbols with unrecognized shndx.
+
+2019-03-15  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24267
+	* coffgen.c (_bfd_coff_section_already_linked): Skip discarded
+	section.
+	* cofflink.c (coff_link_add_symbols): Check for symbols defined
+	in discarded section.
+
+2019-03-15  Alan Modra  <amodra@gmail.com>
+
+	PR 24339
+	* elflink.c (elf_link_add_object_symbols): Bail out on a local
+	symbol after globals if elf_bad_symtab is not set.
+
+2019-03-15  Alan Modra  <amodra@gmail.com>
+
+	PR 24337
+	* elf.c (_bfd_elf_rela_local_sym): Don't segfault on NULL sec.
+	(_bfd_elf_rel_local_sym): Likewise.
+
+2019-03-15  Alan Modra  <amodra@gmail.com>
+
+	PR 24336
+	* elflink.c (elf_link_read_relocs_from_section): Handle fuzzed
+	object files with sh_size not a multiple of sh_entsize.
+
+2019-03-15  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24338
+	* elf64-x86-64.c (elf_x86_64_relocate_section): Check for corrupt
+	input with bad relocation.
+
+22019-03-15  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf64-x86-64.c (elf_x86_64_relocate_section): Re-indent.
+
+2019-03-14  Nick Clifton  <nickc@redhat.com>
+
+	PR 24334
+	* dwarf2.c (struct dwarf2_debug): Add sec_vma_count field.
+	(save_section_vma): Initialise field to the number of entries in
+	the sec_vma table.
+	(section_vma_same): Check that the number of entries in the
+	sec_vma table matches the number of sections in the bfd.
+
+2019-03-14  Nick Clifton  <nickc@redhat.com>
+
+	PR 24333
+	* elflink.c (_bfd_elf_add_default_symbol): Add a check for a NULL
+	section owner pointer when adding the default symbol.
+
+2019-03-14  Nick Clifton  <nickc@redhat.com>
+
+	PR 24332
+	* elflink.c (elf_link_add_object_symbols): Add new local variable
+	extversym_end.  Initialise it to point to the end of the version
+	symbol table, if present.  Check it when initialising and updating
+	the ever pointer.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+
+	* elfnn-aarch64.c (PLT_PAC_ENTRY_SIZE, PLT_PAC_SMALL_ENTRY_SIZE): New.
+	(PLT_BTI_PAC_ENTRY_SIZE, PLT_BTI_PAC_SMALL_ENTRY_SIZE): New.
+	(setup_plt_values): Account for PAC or PAC and BTI enabled PLTs.
+	(elfNN_aarch64_size_dynamic_sections): Add checks for PLT_BTI_PAC
+	and PLT_PAC_PLT.
+	(elfNN_aarch64_finish_dynamic_sections): Account for PLT_BTI_PAC.
+	(get_plt_type): Add case for DT_AARCH64_PAC_PLT.
+	(elfNN_aarch64_plt_sym_val): Add cases for PLT_BTI_PAC and PLT_PAC.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+	    Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* bfd-in.h (aarch64_plt_type, aarch64_enable_bti_type): New.
+	(aarch64_bti_pac_info): New.
+	(bfd_elf64_aarch64_set_options): Add aarch64_bti_pac_info argument.
+	(bfd_elf32_aarch64_set_options): Likewise.
+	* bfd-in2.h: Regenerate
+	* elfnn-aarch64.c (PLT_BTI_ENTRY_SIZE): New.
+	(PLT_BTI_SMALL_ENTRY_SIZE, PLT_BTI_TLSDESC_ENTRY_SIZE): New.
+	(elfNN_aarch64_small_plt0_bti_entry): New.
+	(elfNN_aarch64_small_plt_bti_entry): New.
+	(elfNN_aarch64_tlsdesc_small_plt_bti_entry): New.
+	(elf_aarch64_obj_tdata): Add no_bti_warn and plt_type fields.
+	(elf_aarch64_link_hash_table): Add plt0_entry, plt_entry and
+	tlsdesc_plt_entry_size fields.
+	(elfNN_aarch64_link_hash_table_create): Initialise the new fields.
+	(setup_plt_values): New helper function.
+	(bfd_elfNN_aarch64_set_options): Use new bp_info to set plt sizes and
+	bti enable type.
+	(elfNN_aarch64_allocate_dynrelocs): Use new size members instead of
+	fixed macros.
+	(elfNN_aarch64_size_dynamic_sections): Likewise and add checks.
+	(elfNN_aarch64_create_small_pltn_entry): Use new generic pointers
+	to plt stubs instead of fixed ones and update filling them according
+	to the need for bti.
+	(elfNN_aarch64_init_small_plt0_entry): Likewise.
+	(elfNN_aarch64_finish_dynamic_sections): Likewise.
+	(get_plt_type, elfNN_aarch64_get_synthetic_symtab): New.
+	(elfNN_aarch64_plt_sym_val): Update size accordingly.
+	(elfNN_aarch64_link_setup_gnu_properties): Set up plts if BTI GNU NOTE
+	is set.
+	(bfd_elfNN_get_synthetic_symtab): Define.
+	(elfNN_aarch64_merge_gnu_properties): Give out warning with --force-bti
+	and mising BTI NOTE SECTION.
+
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+
+	* elf-properties.c (_bfd_elf_link_setup_gnu_properties): Exclude
+	linker created inputs from merge.
+	* elfnn-aarch64.c (struct elf_aarch64_obj_tdata): Add field for
+	GNU_PROPERTY_AARCH64_FEATURE_1_AND properties.
+	(elfNN_aarch64_link_setup_gnu_properties): New.
+	(elfNN_aarch64_merge_gnu_properties): New.
+	(elf_backend_setup_gnu_properties): Define for AArch64.
+	(elf_backend_merge_gnu_properties): Likewise.
+	* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties): Define.
+	(_bfd_aarch64_elf_parse_gnu_properties): Define.
+	(_bfd_aarch64_elf_merge_gnu_properties): Define.
+	* elfxx-aarch64.h (_bfd_aarch64_elf_link_setup_gnu_properties): Declare.
+	(_bfd_aarch64_elf_parse_gnu_properties): Declare.
+	(_bfd_aarch64_elf_merge_gnu_properties): Declare.
+	(elf_backend_parse_gnu_properties): Define for AArch64.
+
+2019-03-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24322
+	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Properly
+	merge GNU_PROPERTY_X86_FEATURE_1_[IBT|SHSTK].
+
+2019-03-12  Alan Modra  <amodra@gmail.com>
+
+	* coffcode.h (buy_and_read): Delete unnecessary forward decl.  Add
+	nmemb parameter.  Use bfd_alloc2.
+	(coff_slurp_line_table): Use bfd_alloc2.  Update buy_and_read calls.
+	Delete assertion.
+	(coff_slurp_symbol_table): Use bfd_alloc2 and bfd_zalloc2.
+	(coff_slurp_reloc_table): Use bfd_alloc2.  Update buy_and_read calls.
+	* coffgen.c (coff_get_reloc_upper_bound): Ensure size calculation
+	doesn't overflow.
+	* elf.c (bfd_section_from_shdr): Use bfd_zalloc2.  Style fix.
+	(assign_section_numbers): Style fix.
+	(swap_out_syms): Use bfd_malloc2.
+	(_bfd_elf_get_reloc_upper_bound): Ensure size calculation doesn't
+	overflow.
+	(_bfd_elf_make_empty_symbol): Style fix.
+	(elfobj_grok_stapsdt_note_1): Formatting.
+	* elfcode.h (elf_object_p): Use bfd_alloc2.
+	(elf_write_relocs, elf_write_shdrs_and_ehdr): Likewise.
+	(elf_slurp_symbol_table): Use bfd_zalloc2.
+	(elf_slurp_reloc_table): Use bfd_alloc2.
+	(_bfd_elf_bfd_from_remote_memory): Use bfd_malloc2.
+	* elf64-sparc (elf64_sparc_get_reloc_upper_bound): Ensure
+	size calculation doesn't overflow.
+	(elf64_sparc_get_dynamic_reloc_upper_bound): Likewise.
+	* mach-o.c (bfd_mach_o_get_reloc_upper_bound): Likewise.
+	* pdp11.c (get_reloc_upper_bound): Copy aoutx.h version.
+
+2019-03-08  Alan Modra  <amodra@gmail.com>
+
+	PR 24311
+	* merge.c (merge_strings): Return secinfo.  Don't pad section
+	to alignment here.
+	(_bfd_merge_sections): Pad section to alignment here, if input
+	sections contributing to merged output all pad to alignment.
+	Formatting.
+
+2019-03-06  Nick Clifton  <nickc@redhat.com>
+
+	* dwarf2.c (_bfd_dwarf2_find_symbol_bias): Check for a NULL symbol
+	table pointer.
+	* coffgen.c (coff_find_nearest_line_with_names): Do not call
+	_bfd_dwarf2_find_symbol_bias if there is no symbol table available.
+
+2019-03-01  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	This reverts commit 5a12586d44fa8d5dfc74cbca4f2f36a273a16335.
+	2019-01-14  Maamoun Tarsha  <maamountk@hotmail.com>
+
+	PR 20113
+	* elf32-s390.c (allocate_dynrelocs): Update comment.
+
+2019-02-28  Tamar Christina  <tamar.christina@arm.com>
+
+	* elf-eh-frame.c (_bfd_elf_write_section_eh_frame): Correct CIE parse.
+
+2019-02-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 24273
+	* elf.c (bfd_elf_string_from_elf_section): Check for a string
+	section that is not NUL terminated.
+
+2019-02-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24276
+	* elf64-x86-64.c (elf_x86_64_check_relocs): Skip symbol defined
+	by linker when checking copy reloc on protected symbol.
+
+2019-02-24  Alan Modra  <amodra@gmail.com>
+
+	PR 24144
+	* pdp11.c (set_section_contents): Revert 2015-02-24 change.
+
+2019-02-20  Eric Tsai  <erictsai@cadence.com>
+
+	* elf32-xtensa.c (is_resolvable_asm_expansion): Scan output
+	sections between the call site and call destination and adjust
+	call distance by the largest alignment.
+
+2019-02-20  Alan Hayward  <alan.hayward@arm.com>
+
+	* elf-bfd.h (elfcore_write_aarch_pauth): Add declaration.
+	* elf.c (elfcore_grok_aarch_pauth): New function.
+	(elfcore_grok_note): Check for NT_ARM_PAC_MASK.
+	(elfcore_write_aarch_pauth): New function.
+	(elfcore_write_register_note): Check for AArch64 pauth section.
+
+2019-02-20  Alan Modra  <amodra@gmail.com>
+
+	PR 24225
+	* elf32-nios2.c (nios2_elf32_relocate_section): Check asprintf
+	return value.
+
+2019-02-20  Michael Roitzsch  <reactorcontrol@icloud.com>
+
+	* configure.ac (SHARED_LIBADD): Add -liberty -lintl for all
+	Darwin hosts, not just or1k.
+	* configure: Regenerate.
+
+2019-02-20  Alan Modra  <amodra@gmail.com>
+
+	PR 24236
+	* archive64.c (_bfd_archive_64_bit_slurp_armap): Move code adding
+	sentinel NUL to string buffer nearer to loop where it is used.
+	Don't go past sentinel when scanning strings, and don't write
+	NUL again.
+	* archive.c (do_slurp_coff_armap): Simplify string handling to
+	archive64.c style.
+
+2019-02-19  Alan Modra  <amodra@gmail.com>
+
+	PR 24235
+	* pei-x86_64.c (pex64_bfd_print_pdata_section): Correct checks
+	attempting to prevent read past end of section.
+
+2019-02-18  Alan Modra  <amodra@gmail.com>
+
+	PR 24225
+	* elf32-nios2.c (nios2_elf32_relocate_section): Use asprintf and
+	PRIx64 to generate warning messages.  Print local sym names too.
+
+2019-02-09  Vineet Gupta  <vgupta@synopsys.com>
+
+	* elf32-arc (INIT_SYM_STRING): Delete.
+	(FINI_SYM_STRING): Likewise.
+	(init_str): Likewise.
+	(fini_str): Likewise.
+
+2019-02-08  Alan Modra  <amodra@gmail.com>
+
+	* elf32-ppc.c (ppc_elf_relocate_section): Add %X to "unsupported
+	for bss-plt" warning to make it an error.
+
+2019-02-07  Eric Botcazou  <ebotcazou@adacore.com>
+
+	PR ld/18841
+	* elf32-sparc.c (elf32_sparc_reloc_type_class): Return
+	reloc_class_ifunc for ifunc symbols.
+	* elf64-sparc.c (elf64_sparc_reloc_type_class): Likewise.
+
+2019-02-07  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* elf32-visium.c (visium_elf_howto_parity_reloc): Minor tweak.
+	<R_VISIUM_PC16>: Use explicit range test to detect an overflow.
+
+2019-02-07  Nick Clifton  <nickc@redhat.com>
+
+	* config.bfd: Move the powerpc-lynxos and powerpc-windiss targets
+	into the definitely obsolete list.
+
+2019-02-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24151
+	* elf64-x86-64.c (elf_x86_64_need_pic): Check
+	SYMBOL_DEFINED_NON_SHARED_P instead of def_regular.
+	(elf_x86_64_relocate_section): Move PIC check for PC-relative
+	relocations to ...
+	(elf_x86_64_check_relocs): Here.
+	(elf_x86_64_finish_dynamic_symbol): Use SYMBOL_DEFINED_NON_SHARED_P
+	to check if a symbol is defined in a non-shared object.
+	* elfxx-x86.h (SYMBOL_DEFINED_NON_SHARED_P): New.
+
+2019-01-21  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* elf32-arm.c (elf32_arm_final_link_relocate): Use 'llabs' instead
+	of 'labs' (and fix GCC warning).
+
+2019-01-25  Nick Clifton  <nickc@redhat.com>
+
+	* po/ru.po: Updated Russian translation.
+
+2019-01-23  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2019-01-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/pt.po: Updated Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2019-01-21  Yuri Chornoivan  <yurchor@ukr.net>
+
+	PR 24108
+	* elf32-nds32.c (nds32_relocate_section): Add space between words
+	in error message.
+	* elfnn-riscv.c (riscv_version_mismatch): Fix spelling mistake in
+	error message.
+	(riscv_i_or_e_p): Likewise.
+	(riscv_merge_arch_attr_info): Likewise.
+
+2019-01-19  Nick Clifton  <nickc@redhat.com>
+
+	* version.m4: Reset to 2.32.51
+	* configure: Regenerate.
+	* po/bfd.pot: Regenerate.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-16  Kito Cheng  <kito@andestech.com>
+
+	* elf-attrs.c (vendor_obj_attr_size): Return 0 if size is 0 even
+	for OBJ_ATTR_PROC.
+
+2019-01-16  Kito Cheng  <kito@andestech.com>
+	    Nelson Chu  <nelson@andestech.com>
+
+	* elfnn-riscv.c (in_subsets): New.
+	(out_subsets): Likewise.
+	(merged_subsets): Likewise.
+	(riscv_std_ext_p): Likewise.
+	(riscv_non_std_ext_p): Likewise.
+	(riscv_std_sv_ext_p): Likewise.
+	(riscv_non_std_sv_ext_p): Likewise.
+	(riscv_version_mismatch): Likewise.
+	(riscv_i_or_e_p): Likewise.
+	(riscv_merge_std_ext): Likewise.
+	(riscv_merge_non_std_and_sv_ext): Likewise.
+	(riscv_merge_arch_attr_info): Likewise.
+	(riscv_merge_attributes): Likewise.
+	(_bfd_riscv_elf_merge_private_bfd_data): Merge attribute.
+
+	* elfnn-riscv.c (riscv_elf_obj_attrs_arg_type): New.
+	(elf_backend_obj_attrs_vendor): Define.
+	(elf_backend_obj_attrs_section_type): Likewise.
+	(elf_backend_obj_attrs_section): Likewise.
+	(elf_backend_obj_attrs_arg_type): Define as
+	riscv_elf_obj_attrs_arg_type.
+	* elfxx-riscv.c (riscv_estimate_digit): New.
+	(riscv_estimate_arch_strlen1): Likewise.
+	(riscv_estimate_arch_strlen): Likewise.
+	(riscv_arch_str1): Likewise.
+	(riscv_arch_str): Likewise.
+	* elfxx-riscv.h (riscv_arch_str): Declare.
+
+2019-01-14  John Darrington <john@darrington.wattle.id.au>
+
+	* bfd-in2.h [BFD_RELOC_S12Z_OPR]: New reloc.
+	* libbfd.h: regen.
+	* elf32-s12z.c (eld_s12z_howto_table): R_S12Z_OPR takes non zero
+	source field.  (md_apply_fix): Apply final fix
+	to BFD_RELOC_S12Z_OPR.
+	* reloc.c[BFD_RELOC_S12Z_OPR]: New reloc.
+
+2019-01-14  Maamoun Tarsha  <maamountk@hotmail.com>
+
+	PR 20113
+	* elf32-s390.c (allocate_dynrelocs): Update comment.
+
+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+
+	* warning.m4: Adjust egrep pattern for non-GNU compilers.
+	* configure: Regenerate.
+
+2019-01-08  Alan Modra  <amodra@gmail.com>
+
+	PR 23699
+	PR 24065
+	* ihex.c (ihex_write_object_contents): Properly check 32-bit
+	address range.
+
+2019-01-05  Yoshinori Sato <ysato@users.sourceforge.jp>
+
+	* bfd/archures.c: Add bfd_mach_rx_v2 and bfd_mach_rx_v3.
+	* bfd/bfd-in2.h: Regenerate.
+	* bfd/cpu-rx.c (arch_info_struct): Add RXv2 and RXv3 entry.
+	* bfd/elf32-rx.c (elf32_rx_machine): Add RXv2 and RXv3 support.
+
+2019-01-04  Lifang Xia  <lifang_xia@c-sky.com>
+
+	* config.bfd (csky-*-elf* | csky-*-linux*): Modify the csky
+	default target, little endian target is more suitable.
+
+2019-01-04  Alan Modra  <amodra@gmail.com>
+
+	PR 24061
+	PR 21786
+	* coff-rs6000.c (GET_VALUE_IN_FIELD): Add base parameter and
+	adjust all callers.
+	(EQ_VALUE_IN_FIELD): Likewise.
+	* coff64-rs6000.c (GET_VALUE_IN_FIELD): Likewise.
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/opcodes/ChangeLog-2019 b/opcodes/ChangeLog-2019
new file mode 100644
index 0000000000..5021447c18
--- /dev/null
+++ b/opcodes/ChangeLog-2019
@@ -0,0 +1,2456 @@
+2019-12-30  Alan Modra  <amodra@gmail.com>
+
+	PR 25319
+	* tic4x-dis.c (tic4x_print_cond): Correct order of xcalloc args.
+
+2019-12-29  Alan Modra  <amodra@gmail.com>
+
+	* sparc-dis.c (SEX): Don't use left and right shift to sign extend.
+	(compare_opcodes): Avoid signed shift left overflow.
+	(print_insn_sparc): Likewise.
+
+2019-12-29  Alan Modra  <amodra@gmail.com>
+
+	PR 25319
+	* tic4x-dis.c (tic4x_print_cond): Init all of condtable.
+
+2019-12-27  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (Jdqw): Define.
+	(dqw_mode): Adjust associated comment.
+	(rm_table): Use Jdqw for XBEGIN.
+	(OP_J): Handle dqw_mode.
+
+2019-12-27  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (process_i386_operand_type): Don't set Disp32 for
+	Cpu64 templates.
+	* i386-opc.tbl (mov): Fold two templates.
+	(jcxz, jecxz, jrcxz, loop, loope, loopne, loopnz, loopz): Drop
+	Disp16, Disp32, and Disp32S.
+	(xbegin): Add Disp32S.
+	* i386-tbl.h: Re-generate.
+
+2019-12-26  Alan Modra  <amodra@gmail.com>
+
+	* crx-dis.c (get_number_of_operands): Don't access operands[]
+	out of bounds.
+
+2019-12-26  Alan Modra  <amodra@gmail.com>
+
+	* v850-dis.c (disassemble): Avoid signed overflow.  Don't use
+	long vars when unsigned int will do.
+
+2019-12-24  Alan Modra  <amodra@gmail.com>
+
+	* arm-dis.c (print_insn_arm): Don't shift by 32 on unsigned int var.
+
+2019-12-23  Jan Beulich  <jbeulich@suse.com>
+
+	* ppc-dis.c (print_insn_powerpc): Rename local variable "spaces"
+	to "blanks".
+	* ppc-opc.c (D34, SI34, NSI34): Use UINT64_C().
+
+2019-12-23  Alan Modra  <amodra@gmail.com>
+
+	* score-dis.c (print_insn_score32): Avoid signed overflow.
+	(print_insn_score48): Likewise.  Don't cast to int when printing
+	hex values.
+
+2019-12-23  Alan Modra  <amodra@gmail.com>
+
+	* iq2000-ibld.c: Regenerate.
+
+2019-12-23  Alan Modra  <amodra@gmail.com>
+
+	* d30v-dis.c (extract_value): Make num param a uint64_t, constify
+	oper.  Use unsigned vars.
+	(print_insn): Make num var uint64_t.  Constify oper and remove now
+	unnecessary casts on extract_value calls.
+	(print_insn_d30v): Use unsigned vars.  Adjust printf formats.
+
+2019-12-23  Alan Modra  <amodra@gmail.com>
+
+	* wasm32-dis.c (wasm_read_leb128): Don't allow oversize shifts.
+	Catch value overflow.  Sign extend only on terminating byte.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	PR 25281
+	* sh-dis.c (print_insn_ddt): Properly check validity of MOVX_NOPY
+	and MOVY_NOPX insns.  For invalid cases include 0xf000 in the word
+	printed.  Print .word in more cases.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	* or1k-ibld.c: Regenerate.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	* hppa-dis.c (extract_16, extract_21, print_insn_hppa): Use
+	unsigned variables.
+
+2019-12-20  Alan Modra  <amodra@gmail.com>
+
+	* m68hc11-dis.c (read_memory): Delete forward decls.
+	(print_indexed_operand, print_insn): Likewise.
+	(print_indexed_operand): Formatting.  Don't rely on short being
+	exactly 16 bits, make sign extension explicit.
+	(print_insn): Likewise.  Avoid signed overflow.
+
+2019-12-19  Alan Modra  <amodra@gmail.com>
+
+	* vax-dis.c (print_insn_mode): Stop index mode recursion.
+
+2019-12-19  Dr N.W. Filardo  <nwf20@cam.ac.uk>
+
+	PR 25277
+	* microblaze-opcm.h (enum microblaze_instr): Prefix fadd, fmul and
+	fdiv with "mbi_".
+	* microblaze-opc.h (opcodes): Adjust to suit.
+
+2019-12-18  Alan Modra  <amodra@gmail.com>
+
+	* alpha-opc.c (OP): Avoid signed overflow.
+	* arm-dis.c (print_insn): Likewise.
+	* mcore-dis.c (print_insn_mcore): Likewise.
+	* pj-dis.c (get_int): Likewise.
+	* ppc-opc.c (EBD15, EBD15BI): Likewise.
+	* score7-dis.c (s7_print_insn): Likewise.
+	* tic30-dis.c (print_insn_tic30): Likewise.
+	* v850-opc.c (insert_SELID): Likewise.
+	* vax-dis.c (print_insn_vax): Likewise.
+	* arc-ext.c (create_map): Likewise.
+	(struct ExtAuxRegister): Make "address" field unsigned int.
+	(arcExtMap_auxRegName): Pass unsigned address.
+	(dump_ARC_extmap): Adjust.
+	* arc-ext.h (arcExtMap_auxRegName): Update prototype.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* visium-dis.c (print_insn_visium): Avoid signed overflow.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* aarch64-opc.c (value_fit_signed_field_p): Avoid signed overflow.
+	(value_fit_unsigned_field_p): Likewise.
+	(aarch64_wide_constant_p): Likewise.
+	(operand_general_constraint_met_p): Likewise.
+	* aarch64-opc.h (aarch64_wide_constant_p): Update prototype.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* nds32-dis.c (nds32_mask_opcode): Avoid signed overflow.
+	(print_insn_nds32): Use uint64_t for "given" and "given1".
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* tic80-dis.c: Delete file.
+	* tic80-opc.c: Delete file.
+	* disassemble.c: Remove tic80 support.
+	* disassemble.h: Likewise.
+	* Makefile.am: Likewise.
+	* configure.ac: Likewise.
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+	* po/POTFILES.in: Regenerate.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* bpf-ibld.c: Regenerate.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* aarch64-dis.c (sign_extend): Return uint64_t.  Rewrite without
+	conditional.
+	(aarch64_ext_imm): Avoid signed overflow.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* microblaze-dis.c (read_insn_microblaze): Avoid signed overflow.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* nios2-dis.c (nios2_print_insn_arg): Avoid signed overflow
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* xstormy16-ibld.c: Regenerate.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* score-dis.c (print_insn_score16): Move rpush/rpop imm field
+	value adjustment so that it doesn't affect reg field too.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* crx-dis.c (EXTRACT, SBM): Avoid signed overflow.
+	(get_number_of_operands, getargtype, getbits, getregname),
+	(getcopregname, getprocregname, gettrapstring, getcinvstring),
+	(getregliststring, get_word_at_PC, get_words_at_PC, build_mask),
+	(powerof2, match_opcode, make_instruction, print_arguments),
+	(print_arg): Delete forward declarations, moving static to..
+	(getregname, getcopregname, getregliststring): ..these definitions.
+	(build_mask): Return unsigned int mask.
+	(match_opcode): Use unsigned int vars.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* bfin-dis.c (fmtconst, fmtconst_val): Avoid signed overflow.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* nds32-dis.c (print_insn16, print_insn32): Remove forward decls.
+	(struct objdump_disasm_info): Delete.
+	(nds32_parse_audio_ext, nds32_parse_opcode): Cast result of
+	N32_IMMS to unsigned before shifting left.
+
+2019-12-16  Alan Modra  <amodra@gmail.com>
+
+	* moxie-dis.c (INST2OFFSET): Don't left shift a signed value.
+	(print_insn_moxie): Remove unnecessary cast.
+
+2019-12-12  Alan Modra  <amodra@gmail.com>
+
+	* csky-dis.c (csky_chars_to_number): Remove abort and unnecessary
+	mask.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* arc-dis.c (BITS): Don't truncate high bits with shifts.
+	* nios2-dis.c (nios2_print_insn_arg): Don't sign extend with shifts.
+	* tic54x-dis.c (print_instruction): Likewise.
+	* tilegx-opc.c (parse_insn_tilegx): Likewise.
+	* tilepro-opc.c (parse_insn_tilepro): Likewise.
+	* visium-dis.c (disassem_class0): Likewise.
+	* pdp11-dis.c (sign_extend): Likewise.
+	(SIGN_BITS): Delete.
+	* epiphany-ibld.c: Regenerate.
+	* lm32-ibld.c: Regenerate.
+	* m32c-ibld.c: Regenerate.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* ns32k-dis.c (sign_extend): Correct last patch.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* vax-dis.c (NEXTLONG): Avoid signed overflow.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* v850-dis.c (get_operand_value): Use unsigned arithmetic.  Don't
+	sign extend using shifts.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* tic6x-dis.c (tic6x_extract_32): Avoid signed overflow.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* tic4x-dis.c (tic4x_print_register): Formatting.  Don't segfault
+	on NULL registertable entry.
+	(tic4x_hash_opcode): Use unsigned arithmetic.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* s12z-opc.c (z_decode_signed_value): Avoid signed overflow.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* ns32k-dis.c (bit_extract): Use unsigned arithmetic.
+	(bit_extract_simple, sign_extend): Likewise.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* nios2-dis.c (nios2_print_insn_arg): Use 1u << 31.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* moxie-dis.c (INST2OFFSET): Don't sign extend using shifts.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* m68k-dis.c (COERCE32): Cast value first.
+	(NEXTLONG, NEXTULONG): Avoid signed overflow.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* h8300-dis.c (extract_immediate): Avoid signed overflow.
+	(bfd_h8_disassemble): Likewise.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* d30v-dis.c (print_insn): Make opind unsigned.  Don't access
+	past end of operands array.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* csky-dis.c (csky_chars_to_number): Rewrite.  Avoid signed
+	overflow when collecting bytes of a number.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* cris-dis.c (print_with_operands): Avoid signed integer
+	overflow when collecting bytes of a 32-bit integer.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* cr16-dis.c (EXTRACT, SBM): Rewrite.
+	(cr16_match_opcode): Delete duplicate bcond test.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* bfin-dis.c (HOST_LONG_WORD_SIZE, XFIELD): Delete.
+	(SIGNBIT): New.
+	(MASKBITS, SIGNEXTEND): Rewrite.
+	(fmtconst): Don't use ? expression now that SIGNEXTEND uses
+	unsigned arithmetic, instead assign result of SIGNEXTEND back
+	to x.
+	(fmtconst_val): Use 1u in shift expression.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* arc-dis.c (find_format_from_table): Use ull constant when
+	shifting by up to 32.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	PR 25270
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Return
+	false when field is zero for sve_size_tsz_bhs.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* epiphany-ibld.c: Regenerate.
+
+2019-12-10  Alan Modra  <amodra@gmail.com>
+
+	PR 24960
+	* disassemble.c (disassemble_free_target): New function.
+
+2019-12-10  Alan Modra  <amodra@gmail.com>
+
+	* cgen-dis.in (print_insn_@arch@): Replace insn_sets with private_data.
+	* disassemble.c (disassemble_init_for_target): Likewise.
+	* bpf-dis.c: Regenerate.
+	* epiphany-dis.c: Regenerate.
+	* fr30-dis.c: Regenerate.
+	* frv-dis.c: Regenerate.
+	* ip2k-dis.c: Regenerate.
+	* iq2000-dis.c: Regenerate.
+	* lm32-dis.c: Regenerate.
+	* m32c-dis.c: Regenerate.
+	* m32r-dis.c: Regenerate.
+	* mep-dis.c: Regenerate.
+	* mt-dis.c: Regenerate.
+	* or1k-dis.c: Regenerate.
+	* xc16x-dis.c: Regenerate.
+	* xstormy16-dis.c: Regenerate.
+
+2019-12-10  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (private): Delete variable.
+	(get_powerpc_dialect): Don't segfault on NULL info->private_data.
+	(powerpc_init_dialect): Don't use global private.
+
+2019-12-10  Alan Modra  <amodra@gmail.com>
+
+	* s12z-opc.c: Formatting.
+
+2019-12-08  Alan Modra  <amodra@gmail.com>
+
+	* s12z-opc.c (exg_sex_discrim): Don't leak memory on invalid
+	registers.
+
+2019-12-05  Jan Beulich  <jbeulich@suse.com>
+
+	* aarch64-tbl.h (aarch64_feature_crypto,
+	aarch64_feature_crypto_v8_2, CRYPTO, CRYPTO_V8_2, CRYP_INSN,
+	CRYPTO_V8_2_INSN): Delete.
+
+2019-12-05  Alan Modra  <amodra@gmail.com>
+
+	PR 25249
+	* microblaze-dis.c (NUM_STRBUFS, STRBUF_SIZE): Define.
+	(struct string_buf): New.
+	(strbuf): New function.
+	(get_field): Use strbuf rather than strdup of local temp.
+	(get_field_imm, get_field_imm5, get_field_imm5_mbar): Likewise.
+	(get_field_rfsl, get_field_imm15): Likewise.
+	(get_field_rd, get_field_r1, get_field_r2): Update macros.
+	(get_field_special): Likewise.  Don't strcpy spr.  Formatting.
+	(print_insn_microblaze): Formatting.  Init and pass string_buf to
+	get_field functions.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (lfs, lgs, lss): Drop No_qSuf.
+	* i386-tbl.h: Re-generate.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (mod_table): Use Ev instead of Em for movdiri.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (push, pop): Drop DefaultSize from GPR-only
+	forms.
+	(xbegin): Drop DefaultSize.
+	* i386-tbl.h: Re-generate.
+
+2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* opcodes/arm-dis.c (arm_opcodes, thumb32_opcodes):
+	Change the coproc CRC conditions to use the extension
+	feature set, second word, base on ARM_EXT2_CRC.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (syscall, sysret): Drop Cpu64 forms.
+	* i386-tbl.h: Re-generate.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (opcode_modifiers): Remove JumpDword, JumpByte,
+	JumpInterSegment, and JumpAbsolute entries.
+	* i386-opc.h (JUMP, JUMP_DWORD, JUMP_BYTE, JUMP_INTERSEGMENT,
+	JUMP_ABSOLUTE): Define.
+	(struct i386_opcode_modifier): Extend jump field to 3 bits.
+	Remove jumpdword, jumpbyte, jumpintersegment, and jumpabsolute
+	fields.
+	* i386-opc.tbl (JumpByte, JumpDword, JumpAbsolute,
+	JumpInterSegment): Define.
+	* i386-tbl.h: Re-generate.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Remove
+	OPERAND_TYPE_JUMPABSOLUTE entry.
+	(opcode_modifiers): Add JumpAbsolute entry.
+	(operand_types): Remove JumpAbsolute entry.
+	* i386-opc.h (JumpAbsolute): Move between enums.
+	(struct i386_opcode_modifier): Add jumpabsolute field.
+	(union i386_operand_type): Remove jumpabsolute field.
+	* i386-opc.tbl (call, lcall, jmp, ljmp): Move JumpAbsolute.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (opcode_modifiers): Add AnySize entry.
+	(operand_types): Remove AnySize entry.
+	* i386-opc.h (AnySize): Move between enums.
+	(struct i386_opcode_modifier): Add anysize field.
+	(OTUnused): Un-comment.
+	(union i386_operand_type): Remove anysize field.
+	* i386-opc.tbl (lea, invlpg, clflush, prefetchnta, prefetcht0,
+	prefetcht1, prefetcht2, prefetchtw, bndmk, bndcl, bndcu, bndcn,
+	bndstx, bndldx, prefetchwt1, clflushopt, clwb, cldemote): Move
+	AnySize.
+	* i386-tbl.h: Re-generate.
+
+2019-11-12  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (riscv_insn_types): Replace the INSN_CLASS_I with
+	INSN_CLASS_F and the INSN_CLASS_C with INSN_CLASS_F_AND_C if we
+	use the floating point register (FPR).
+
+2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* opcodes/arm-dis.c (mve_opcodes): Enable VMOV imm to vec with
+	cmode 1101.
+	(is_mve_encoding_conflict): Update cmode conflict checks for
+	MVE_VMVN_IMM.
+
+2019-11-12  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Remove OPERAND_TYPE_ESSEG
+	entry.
+	(operand_types): Remove EsSeg entry.
+	(main): Replace stale use of OTMax.
+	* i386-opc.h (IS_STRING_ES_OP0, IS_STRING_ES_OP1): Define.
+	(struct i386_opcode_modifier): Expand isstring field to 2 bits.
+	(EsSeg): Delete.
+	(OTUnused): Comment out.
+	(union i386_operand_type): Remove esseg field.
+	* i386-opc.tbl (IsStringEsOp0, IsStringEsOp1): Define.
+	(cmps, scmp, scas, ssca, cmpsd): Add IsStringEsOp0.
+	(ins, movs, smov, movsd): Add IsStringEsOpOp1.
+	(stos, ssto): Add IsStringEsOp0/IsStringEsOpOp1.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2019-11-12  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_instances): Add RegB entry.
+	* i386-opc.h (enum operand_instance): Add RegB.
+	* i386-opc.tbl (RegC, RegD, RegB): Define.
+	(Acc, ShiftCount, InOutPortReg): Adjust definitions.
+	(monitor, mwait, invlpga, skinit, vmload, vmrun, vmsave, clzero,
+	monitorx, mwaitx): Drop ImmExt and convert encodings
+	accordingly.
+	* i386-reg.tbl (ecx, rcx): Add Instance=RegC.
+	(edx, rdx): Add Instance=RegD.
+	(ebx, rbx): Add Instance=RegB.
+	* i386-tbl.h: Re-generate.
+
+2019-11-12  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Adjust
+	OPERAND_TYPE_INOUTPORTREG, OPERAND_TYPE_SHIFTCOUNT,
+	OPERAND_TYPE_FLOATACC, OPERAND_TYPE_ACC8, OPERAND_TYPE_ACC16,
+	OPERAND_TYPE_ACC32, and OPERAND_TYPE_ACC64 entries.
+	(operand_instances): New.
+	(operand_types): Drop InOutPortReg, ShiftCount, and Acc entries.
+	(output_operand_type): New parameter "instance". Process it.
+	(process_i386_operand_type): New local variable "instance".
+	(main): Adjust static assertions.
+	* i386-opc.h (INSTANCE_WIDTH): Define.
+	(enum operand_instance): New.
+	(Acc, InOutPortReg, ShiftCount): Replace by ClassInstance.
+	(union i386_operand_type): Replace acc, inoutportreg, and
+	shiftcount by instance.
+	* i386-opc.tbl (Acc, InOutPortReg, ShiftCount): Define.
+	* i386-reg.tbl (st, al, cl, ax, dx, eax, rax, xmm0, st(0)):
+	Add Instance=.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2019-11-11  Jan Beulich  <jbeulich@suse.com>
+
+	* aarch64-tbl.h (aarch64_opcode_table): Switch SVE2's
+	smaxp/sminp entries' "tied_operand" field to 2.
+
+2019-11-11  Jan Beulich  <jbeulich@suse.com>
+
+	* aarch64-opc.c (operand_general_constraint_met_p): Replace
+	"index" local variable by that of the already existing "num".
+
+2019-11-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25167
+	* i386-opc.tbl: Remove IgnoreSize from cmpsd and movsd.
+	* i386-tbl.h: Regenerated.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Add Class= to
+	OPERAND_TYPE_REGMASK and OPERAND_TYPE_REGBND entries. Move up
+	OPERAND_TYPE_REGBND entry.
+	(operand_classes): Add RegMask and RegBND entries.
+	(operand_types): Drop RegMask and RegBND entry.
+	* i386-opc.h (enum operand_class): Add RegMask and RegBND.
+	(RegMask, RegBND): Delete.
+	(union i386_operand_type): Remove regmask and regbnd fields.
+	* i386-opc.tbl (RegMask, RegBND): Define.
+	* i386-reg.tbl: Replace RegMask by Class=RegMask and RegBND by
+	Class=RegBND.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Add Class= to
+	OPERAND_TYPE_REGMMX, OPERAND_TYPE_REGXMM, OPERAND_TYPE_REGYMM, and
+	OPERAND_TYPE_REGZMM entries.
+	(operand_classes): Add RegMMX and RegSIMD entries.
+	(operand_types): Drop RegMMX and RegSIMD entries.
+	* i386-opc.h (enum operand_class): Add RegMMX and RegSIMD.
+	(RegMMX, RegSIMD): Delete.
+	(union i386_operand_type): Remove regmmx and regsimd fields.
+	* i386-opc.tbl (RegMMX): Define.
+	(RegXMM, RegYMM, RegZMM): Add Class=.
+	* i386-reg.tbl: Replace RegMMX by Class=RegMMX and RegSIMD by
+	Class=RegSIMD.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Add Class= to
+	OPERAND_TYPE_CONTROL, OPERAND_TYPE_TEST, and OPERAND_TYPE_DEBUG
+	entries.
+	(operand_classes): Add RegCR, RegDR, and RegTR entries.
+	(operand_types): Drop Control, Debug, and Test entries.
+	* i386-opc.h (enum operand_class): Add RegCR, RegDR, and RegTR.
+	(Control, Debug, Test): Delete.
+	(union i386_operand_type): Remove control, debug, and test
+	fields.
+	* i386-opc.tbl (Control, Debug, Test): Define.
+	* i386-reg.tbl: Replace Control by Class=RegCR, Debug by
+	Class=RegDR, and Test by Class=RegTR.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Add Class= to
+	OPERAND_TYPE_SREG entry.
+	(operand_classes): Add SReg entry.
+	(operand_types): Drop SReg entry.
+	* i386-opc.h (enum operand_class): Add SReg.
+	(SReg): Delete.
+	(union i386_operand_type): Remove sreg field.
+	* i386-opc.tbl (SReg): Define.
+	* i386-reg.tbl: Replace SReg by Class=SReg.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Add Class=. New
+	OPERAND_TYPE_ANYIMM entry.
+	(operand_classes): New.
+	(operand_types): Drop Reg entry.
+	(output_operand_type): New parameter "class". Process it.
+	(process_i386_operand_type): New local variable "class".
+	(main): Adjust static assertions.
+	* i386-opc.h (CLASS_WIDTH): Define.
+	(enum operand_class): New.
+	(Reg): Replace by Class. Adjust comment.
+	(union i386_operand_type): Replace reg by class.
+	* i386-opc.tbl (Reg8, Reg16, Reg32, Reg64, FloatReg): Add
+	Class=.
+	* i386-reg.tbl: Replace Reg by Class=Reg.
+	* i386-init.h: Re-generate.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* opcodes/aarch64-tbl.h (V8_6_INSN): New macro for v8.6 instructions.
+	(aarch64_opcode_table): Add data gathering hint mnemonic.
+	* opcodes/aarch64-dis-2.c: Account for new instruction.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* arm-dis.c (neon_opcodes): Add i8mm SIMD instructions.
+
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* aarch64-tbl.h (aarch64_feature_i8mm_sve, aarch64_feature_f32mm_sve,
+	aarch64_feature_f64mm_sve, aarch64_feature_i8mm, aarch64_feature_f32mm,
+	aarch64_feature_f64mm): New feature sets.
+	(INT8MATMUL_INSN, F64MATMUL_SVE_INSN, F64MATMUL_INSN,
+	F32MATMUL_SVE_INSN, F32MATMUL_INSN): New macros to define matrix multiply
+	instructions.
+	(I8MM_SVE, F32MM_SVE, F64MM_SVE, I8MM, F32MM, F64MM): New feature set
+	macros.
+	(QL_MMLA64, OP_SVE_SBB): New qualifiers.
+	(OP_SVE_QQQ): New qualifier.
+	(INT8MATMUL_SVE_INSNC, F64MATMUL_SVE_INSNC,
+	F32MATMUL_SVE_INSNC): New feature set for bfloat16 instructions to support
+	the movprfx constraint.
+	(aarch64_opcode_table): Support for SVE_ADDR_RI_S4x32.
+	(aarch64_opcode_table): Define new instructions smmla,
+	ummla, usmmla, usdot, sudot, fmmla, ld1rob, ld1roh, ld1row, ld1rod,
+	uzip{1/2}, trn{1/2}.
+	* aarch64-opc.c (operand_general_constraint_met_p): Handle
+	AARCH64_OPND_SVE_ADDR_RI_S4x32.
+	(aarch64_print_operand): Handle AARCH64_OPND_SVE_ADDR_RI_S4x32.
+	* aarch64-dis-2.c (aarch64_opcode_lookup_1, aarch64_find_next_opcode):
+	Account for new instructions.
+	* opcodes/aarch64-asm-2.c (aarch64_insert_operand): Support the new
+	S4x32 operand.
+	* aarch64-opc-2.c (aarch64_operands): Support the new S4x32 operand.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* arm-dis.c (select_arm_features): Update bfd_march_arm_8 with
+	Armv8.6-A.
+	(coprocessor_opcodes): Add bfloat16 vcvt{t,b}.
+	(neon_opcodes): Add bfloat SIMD instructions.
+	(print_insn_coprocessor): Add new control character %b to print
+	condition code without checking cp_num.
+	(print_insn_neon): Account for BFloat16 instructions that have no
+	special top-byte handling.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* arm-dis.c (print_insn_coprocessor,
+	print_insn_generic_coprocessor): Create wrapper functions around
+	the implementation of the print_insn_coprocessor control codes.
+	(print_insn_coprocessor_1): Original print_insn_coprocessor
+	function that now takes which array to look at as an argument.
+	(print_insn_arm): Use both print_insn_coprocessor and
+	print_insn_generic_coprocessor.
+	(print_insn_thumb32): As above.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm.c (aarch64_ins_reglane): Use AARCH64_OPND_QLF_S_2H
+	in reglane special case.
+	* aarch64-dis-2.c (aarch64_opcode_lookup_1,
+	aarch64_find_next_opcode): Account for new instructions.
+	* aarch64-dis.c (aarch64_ext_reglane): Use AARCH64_OPND_QLF_S_2H
+	in reglane special case.
+	* aarch64-opc.c (struct operand_qualifier_data): Add data for
+	new AARCH64_OPND_QLF_S_2H qualifier.
+	* aarch64-tbl.h (QL_BFDOT QL_BFDOT64, QL_BFDOT64I, QL_BFMMLA2,
+	QL_BFCVT64, QL_BFCVTN64, QL_BFCVTN2_64): New qualifiers.
+	(aarch64_feature_bfloat16, aarch64_feature_bfloat16_sve): New feature
+	sets.
+	(BFLOAT_SVE, BFLOAT): New feature set macros.
+	(BFLOAT_SVE_INSN, BFLOAT_INSN): New macros to define BFloat16
+	instructions.
+	(aarch64_opcode_table): Define new instructions bfdot,
+	bfmmla, bfcvt, bfcvtnt, bfdot, bfdot, bfcvtn, bfmlal[b/t]
+	bfcvtn2, bfcvt.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-tbl.h (ARMV8_6): New macro.
+
+2019-11-07  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (prefix_table): Add mcommit.
+	(rm_table): Add rdpru.
+	* i386-gen.c (cpu_flag_init): Adjust CPU_ZNVER2_FLAGS entry. Add
+	CPU_RDPRU_FLAGS and CPU_MCOMMIT_FLAGS entries.
+	(cpu_flags): Add CpuRDPRU and CpuMCOMMIT entries.
+	* i386-opc.h (CpuRDPRU, CpuMCOMMIT): New.
+	(union i386_cpu_flags): Add cpurdpru and cpumcommit fields.
+	* i386-opc.tbl (mcommit, rdpru): New.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2019-11-07  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_Mwait): Drop local variable "names", use
+	"names32" instead.
+	(OP_Monitor): Drop local variable "op1_names", re-purpose
+	"names" for it instead, and replace former "names" uses by
+	"names32" ones.
+
+2019-11-07  Jan Beulich  <jbeulich@suse.com>
+
+	PR/gas 25167
+	* opcodes/i386-opc.tbl (movsd, cmpsd): Drop IgnoreSize from
+	operand-less forms.
+	* opcodes/i386-tbl.h: Re-generate.
+
+2019-11-05  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_Mwaitx): Delete.
+	(prefix_table): Use OP_Mwait for mwaitx entry.
+	(OP_Mwait): Also handle mwaitx.
+
+2019-11-05  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PREFIX_0F01_REG_7_MOD_3_RM_2,
+	PREFIX_0F01_REG_7_MOD_3_RM_3): New.
+	(prefix_table): Add respective entries.
+	(rm_table): Link to those entries.
+
+2019-11-05  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (REG_0F1C_MOD_0): Rename to ...
+	(REG_0F1C_P_0_MOD_0): ... this.
+	(REG_0F1E_MOD_3): Rename to ...
+	(REG_0F1E_P_1_MOD_3): ... this.
+	(RM_0F01_REG_5): Rename to ...
+	(RM_0F01_REG_5_MOD_3): ... this.
+	(RM_0F01_REG_7): Rename to ...
+	(RM_0F01_REG_7_MOD_3): ... this.
+	(RM_0F1E_MOD_3_REG_7): Rename to ...
+	(RM_0F1E_P_1_MOD_3_REG_7): ... this.
+	(RM_0FAE_REG_6): Rename to ...
+	(RM_0FAE_REG_6_MOD_3_P_0): ... this.
+	(RM_0FAE_REG_7): Rename to ...
+	(RM_0FAE_REG_7_MOD_3): ... this.
+	(PREFIX_MOD_0_0F01_REG_5): Rename to ...
+	(PREFIX_0F01_REG_5_MOD_0): ... this.
+	(PREFIX_MOD_3_0F01_REG_5_RM_0): Rename to ...
+	(PREFIX_0F01_REG_5_MOD_3_RM_0): ... this.
+	(PREFIX_MOD_3_0F01_REG_5_RM_2): Rename to ...
+	(PREFIX_0F01_REG_5_MOD_3_RM_2): ... this.
+	(PREFIX_0FAE_REG_0): Rename to ...
+	(PREFIX_0FAE_REG_0_MOD_3): ... this.
+	(PREFIX_0FAE_REG_1): Rename to ...
+	(PREFIX_0FAE_REG_1_MOD_3): ... this.
+	(PREFIX_0FAE_REG_2): Rename to ...
+	(PREFIX_0FAE_REG_2_MOD_3): ... this.
+	(PREFIX_0FAE_REG_3): Rename to ...
+	(PREFIX_0FAE_REG_3_MOD_3): ... this.
+	(PREFIX_MOD_0_0FAE_REG_4): Rename to ...
+	(PREFIX_0FAE_REG_4_MOD_0): ... this.
+	(PREFIX_MOD_3_0FAE_REG_4): Rename to ...
+	(PREFIX_0FAE_REG_4_MOD_3): ... this.
+	(PREFIX_MOD_0_0FAE_REG_5): Rename to ...
+	(PREFIX_0FAE_REG_5_MOD_0): ... this.
+	(PREFIX_MOD_3_0FAE_REG_5): Rename to ...
+	(PREFIX_0FAE_REG_5_MOD_3): ... this.
+	(PREFIX_MOD_0_0FAE_REG_6): Rename to ...
+	(PREFIX_0FAE_REG_6_MOD_0): ... this.
+	(PREFIX_MOD_1_0FAE_REG_6): Rename to ...
+	(PREFIX_0FAE_REG_6_MOD_3): ... this.
+	(PREFIX_0FAE_REG_7): Rename to ...
+	(PREFIX_0FAE_REG_7_MOD_0): ... this.
+	(PREFIX_MOD_0_0FC3): Rename to ...
+	(PREFIX_0FC3_MOD_0): ... this.
+	(PREFIX_MOD_0_0FC7_REG_6): Rename to ...
+	(PREFIX_0FC7_REG_6_MOD_0): ... this.
+	(PREFIX_MOD_3_0FC7_REG_6): Rename to ...
+	(PREFIX_0FC7_REG_6_MOD_3): ... this.
+	(PREFIX_MOD_3_0FC7_REG_7): Rename to ...
+	(PREFIX_0FC7_REG_7_MOD_3): ... this.
+	(reg_table, prefix_table, mod_table, rm_table): Adjust
+	accordingly.
+
+2019-11-04  Nick Clifton  <nickc@redhat.com>
+
+	* v850-dis.c (get_v850_sreg_name): New function.  Returns the name
+	of a v850 system register.  Move the v850_sreg_names array into
+	this function.
+	(get_v850_reg_name): Likewise for ordinary register names.
+	(get_v850_vreg_name): Likewise for vector register names.
+	(get_v850_cc_name): Likewise for condition codes.
+	* get_v850_float_cc_name): Likewise for floating point condition
+	codes.
+	(get_v850_cacheop_name): Likewise for cache-ops.
+	(get_v850_prefop_name): Likewise for pref-ops.
+	(disassemble): Use the new accessor functions.
+
+2019-10-30  Delia Burduv   <delia.burduv@arm.com>
+
+	* aarch64-opc.c (print_immediate_offset_address): Don't print the
+	immediate for the writeback form of ldraa/ldrab if it is 0.
+	* aarch64-tbl.h: Updated the documentation for ADDR_SIMM10.
+	* aarch64-opc-2.c: Regenerated.
+
+2019-10-30  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_shorthands): Delete.
+	(operand_type_init): Expand previous shorthands.
+	(set_bitfield_from_shorthand): Rename back to ...
+	(set_bitfield_from_cpu_flag_init): ... this.  Drop processing
+	of operand_type_init[].
+	(set_bitfield): Adjust call to the above function.
+	* i386-opc.tbl (Reg8, Reg16, Reg32, Reg64, FloatAcc, FloatReg,
+	RegXMM, RegYMM, RegZMM): Define.
+	* i386-reg.tbl: Expand prior shorthands.
+
+2019-10-30  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (output_i386_opcode): Change order of fields
+	emitted to output.
+	* i386-opc.h (struct insn_template): Move operands field.
+	Convert extension_opcode field to unsigned short.
+	* i386-tbl.h: Re-generate.
+
+2019-10-30  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (process_i386_opcode_modifier): Report bogus uses
+	of W.
+	* i386-opc.h (W): Extend comment.
+	* i386-opc.tbl (mov, movabs, movq): Drop W and adjust opcodes of
+	general purpose variants not allowing for byte operands.
+	* i386-tbl.h: Re-generate.
+
+2019-10-29  Nick Clifton  <nickc@redhat.com>
+
+	* tic30-dis.c (print_branch): Correct size of operand array.
+
+2019-10-29  Nick Clifton  <nickc@redhat.com>
+
+	* d30v-dis.c (print_insn): Check that operand index is valid
+	before attempting to access the operands array.
+
+2019-10-29  Nick Clifton  <nickc@redhat.com>
+
+	* ia64-opc.c (locate_opcode_ent): Prevent a negative shift when
+	locating the bit to be tested.
+
+2019-10-29  Nick Clifton  <nickc@redhat.com>
+
+	* s12z-dis.c (opr_emit_disassembly): Check for illegal register
+	values.
+	(shift_size_table): Use a fixed size defined as S12Z_N_SIZES.
+	(print_insn_s12z):  Check for illegal size values.
+
+2019-10-28  Nick Clifton  <nickc@redhat.com>
+
+	* csky-dis.c (csky_chars_to_number): Check for a negative
+	count. Use an unsigned integer to construct the return value.
+
+2019-10-28  Nick Clifton  <nickc@redhat.com>
+
+	* tic30-dis.c (OPERAND_BUFFER_LEN): Define.  Use as length of
+	operand buffer.  Set value to 15 not 13.
+	(get_register_operand): Use OPERAND_BUFFER_LEN.
+	(get_indirect_operand): Likewise.
+	(print_two_operand): Likewise.
+	(print_three_operand): Likewise.
+	(print_oar_insn): Likewise.
+
+2019-10-28  Nick Clifton  <nickc@redhat.com>
+
+	* ns32k-dis.c (bit_extract): Add sanitiy check of parameters.
+	(bit_extract_simple): Likewise.
+	(bit_copy): Likewise.
+	(pirnt_insn_ns32k): Ensure that uninitialised elements in the
+	index_offset array are not accessed.
+
+2019-10-28  Nick Clifton  <nickc@redhat.com>
+
+	* xgate-dis.c (print_insn): Fix decoding of the XGATE_OP_DYA
+	operand.
+
+2019-10-25  Nick Clifton  <nickc@redhat.com>
+
+	* rx-dis.c (print_insn_rx): Use parenthesis to ensure correct
+	access to opcodes.op array element.
+
+2019-10-23  Nick Clifton  <nickc@redhat.com>
+
+	* rx-dis.c (get_register_name): Fix spelling typo in error
+	message.
+	(get_condition_name, get_flag_name, get_double_register_name)
+	(get_double_register_high_name, get_double_register_low_name)
+	(get_double_control_register_name, get_double_condition_name)
+	(get_opsize_name, get_size_name): Likewise.
+
+2019-10-22  Nick Clifton  <nickc@redhat.com>
+
+	* rx-dis.c (get_size_name): New function.  Provides safe
+	access to name array.
+	(get_opsize_name): Likewise.
+	(print_insn_rx): Use the accessor functions.
+
+2019-10-16  Nick Clifton  <nickc@redhat.com>
+
+	* rx-dis.c (get_register_name): New function.  Provides safe
+	access to name array.
+	(get_condition_name, get_flag_name, get_double_register_name)
+	(get_double_register_high_name, get_double_register_low_name)
+	(get_double_control_register_name, get_double_condition_name):
+	Likewise.
+	(print_insn_rx): Use the accessor functions.
+
+2019-10-09  Nick Clifton  <nickc@redhat.com>
+
+	PR 25041
+	* avr-dis.c (avr_operand): Fix construction of address for lds/sts
+	instructions.
+
+2019-10-07  Jan Beulich  <jbeulich@suse.com>
+
+	* opcodes/i386-opc.tbl (movsd): Add Dword and IgnoreSize.
+	(cmpsd): Likewise. Move EsSeg to other operand.
+	* opcodes/i386-tbl.h: Re-generate.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* m68k-dis.c: Include cpu-m68k.h
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* mips-dis.c: Include elfxx-mips.h.  Move "elf-bfd.h" and
+	"elf/mips.h" earlier.
+
+2018-09-20  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/25012
+	* i386-opc.tbl (push, pop): Re-instate distinct Cpu64 templates
+	with SReg operand.
+	* i386-tbl.h: Re-generate.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* arc-ext.c: Update throughout for bfd section macro changes.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* Makefile.in: Re-generate.
+	* configure: Re-generate.
+
+2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>
+
+	* riscv-opc.c (riscv_opcodes): Change subset field
+	to insn_class field for all instructions.
+	(riscv_insn_types): Likewise.
+
+2019-09-16  Phil Blundell  <pb@pbcl.net>
+
+	* configure: Regenerated.
+
+2019-09-10  Miod Vallat  <miod@online.fr>
+
+	PR 24982
+	* m68k-opc.c: Correct aliases for tdivsl and tdivul.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-09-03  Nick Clifton  <nickc@redhat.com>
+
+	PR 24961
+	* tic30-dis.c (get_indirect_operand): Check for bufcnt being
+	greater than zero before indexing via (bufcnt -1).
+
+2019-09-03  Nick Clifton  <nickc@redhat.com>
+
+	PR 24958
+	* mmix-dis.c (MAX_REG_NAME_LEN): Define.
+	(MAX_SPEC_REG_NAME_LEN): Define.
+	(struct mmix_dis_info): Use defined constants for array lengths.
+	(get_reg_name): New function.
+	(get_sprec_reg_name): New function.
+	(print_insn_mmix): Use new functions.
+
+2019-08-27  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* arm-dis.c (mve_opcodes): Add entry for MVE_VMOV_VEC_TO_VEC.
+	(is_mve_undefined): Add case for MVE_VMOV_VEC_TO_VEC.
+	(print_insn_mve): Add condition to check Qm==Qn of VORR instruction.
+
+2019-08-22  Kyrylo Tkachov <kyrylo.tkachov@arm.com>
+
+	* aarch64-opc.c (aarch64_sys_regs): Update encoding of tfsre0_el1,
+	tfsr_el1, tfsr_el2, tfsr_el3, tfsr_el12.
+	(aarch64_sys_reg_supported_p): Update checks for the above.
+
+2019-08-12  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* arm-dis.c (struct mopcode32 mve_opcodes): Modify the mask for
+	cases MVE_SQRSHRL and MVE_UQRSHLL.
+	(print_insn_mve): Add case for specifier 'k' to check
+	specific bit of the instruction.
+
+2019-08-07  Phillipe Antoine  <p.antoine@catenacyber.fr>
+
+	PR 24854
+	* arc-dis.c (arc_insn_length): Return 0 rather than aborting when
+	encountering an unknown machine type.
+	(print_insn_arc): Handle arc_insn_length returning 0.  In error
+	cases return -1 rather than calling abort.
+
+2019-08-07  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (fld, fstp): Drop FloatMF from extended forms.
+	(fldcw, fnstcw, fstcw, fnstsw, fstsw): Replace FloatMF by
+	IgnoreSize.
+	* i386-tbl.h: Re-generate.
+
+2019-08-05  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* arm-dis.c: Only accept signed variants of VQ(R)DMLAH and VQ(R)DMLASH
+	instructions.
+
+2019-07-30  Mel Chen <mel.chen@sifive.com>
+
+	* riscv-opc.c (riscv_opcodes): Set frsr, fssr, frcsr, fscsr, frrm,
+	fsrm, fsrmi, frflags, fsflags, fsflagsi to alias instructions.
+
+	* riscv-opc.c (riscv_opcodes): Adjust order of frsr, frcsr, fssr,
+	fscsr.
+
+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* arc-dis.c (skip_this_opcode): Check also for 0x07 major opcodes,
+	and MPY class instructions.
+	(parse_option): Add nps400 option.
+	(print_arc_disassembler_options): Add nps400 info.
+
+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* arc-ext-tbl.h (bspeek): Remove it, added to main table.
+	(bspop): Likewise.
+	(modapp): Likewise.
+	* arc-opc.c (RAD_CHK): Add.
+	* arc-tbl.h: Regenerate.
+
+2019-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* aarch64-opc.c (aarch64_sys_regs): Add gmid_el1 entry.
+	(aarch64_sys_reg_supported_p): Handle gmid_el1 encoding.
+
+2019-07-22  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* arm-dis.c (is_mve_unpredictable): Stop marking some MVE
+	instructions as UNPREDICTABLE.
+
+2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* bpf-desc.c: Regenerated.
+
+2019-07-17  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (static_assert): Define.
+	(main): Use it.
+	* i386-opc.h (Opcode_Modifier_Max): Rename to ...
+	(Opcode_Modifier_Num): ... this.
+	(Mem): Delete.
+
+2019-07-16  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_types): Move RegMem ...
+	(opcode_modifiers): ... here.
+	* i386-opc.h (RegMem): Move to opcode modifer enum.
+	(union i386_operand_type): Move regmem field ...
+	(struct i386_opcode_modifier): ... here.
+	* i386-opc.tbl (RegMem): Define.
+	(mov, movq): Move RegMem on segment, control, debug, and test
+	register flavors.
+	(pextrb): Move RegMem on register only flavors. Add IgnoreSize
+	to non-SSE2AVX flavor.
+	(extractps, pextrw, vcvtps2ph, vextractps, vpextrb, vpextrw):
+	Move RegMem on register only flavors. Drop IgnoreSize from
+	legacy encoding flavors.
+	(movss, movsd, vmovss, vmovsd): Drop RegMem from register only
+	flavors.
+	(vpinsrb, vpinsrw): Drop IgnoreSize where still present on
+	register only flavors.
+	(vmovd): Move RegMem and drop IgnoreSize on register only
+	flavor. Change opcode and operand order to store form.
+	* opcodes/i386-init.h, i386-tbl.h: Re-generate.
+
+2019-07-16  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init, operand_types): Replace SReg
+	entries.
+	* i386-opc.h (SReg2, SReg3): Replace by ...
+	(SReg): ... this.
+	(union i386_operand_type): Replace sreg fields.
+	* i386-opc.tbl (mov, ): Use SReg.
+	(push, pop): Likewies. Drop i386 and x86-64 specific segment
+	register flavors.
+	* i386-reg.tbl (cs, ds, es, fs, gs, ss, flat): Use SReg.
+	* opcodes/i386-init.h, i386-tbl.h: Re-generate.
+
+2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* bpf-desc.c: Regenerate.
+	* bpf-opc.c: Likewise.
+	* bpf-opc.h: Likewise.
+
+2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* bpf-desc.c: Regenerate.
+	* bpf-opc.c: Likewise.
+
+2019-07-10  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* arm-dis.c (print_insn_coprocessor): Rename index to
+	index_operand.
+
+2019-07-05  Kito Cheng <kito.cheng@sifive.com>
+
+	* riscv-opc.c (riscv_insn_types): Add r4 type.
+
+	* riscv-opc.c (riscv_insn_types): Add b and j type.
+
+	* opcodes/riscv-opc.c (riscv_insn_types): Remove incorrect
+	format for sb type and correct s type.
+
+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* aarch64-tbl.h (aarch64_opcode): Set C_SCAN_MOVPRFX for the
+	SVE FMOV alias of FCPY.
+
+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* aarch64-tbl.h (aarch64_opcode_table): Add C_MAX_ELEM flags
+	to SVE fcvtzs, fcvtzu, scvtf and ucvtf entries.
+
+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* aarch64-opc.c (verify_constraints): Skip GPRs when scanning the
+	registers in an instruction prefixed by MOVPRFX.
+
+2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Use new
+	sve_size_13 icode to account for variant behaviour of
+	pmull{t,b}.
+	* aarch64-dis-2.c: Regenerate.
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Use new
+	sve_size_13 icode to account for variant behaviour of
+	pmull{t,b}.
+	* aarch64-tbl.h (OP_SVE_VVV_HD_BS): Add new qualifier.
+	(OP_SVE_VVV_Q_D): Add new qualifier.
+	(OP_SVE_VVV_QHD_DBS): Remove now unused qualifier.
+	(struct aarch64_opcode): Split pmull{t,b} into those requiring
+	AES and those not.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* opcodes/i386-gen.c (operand_type_init): Remove
+	OPERAND_TYPE_VEC_IMM4 entry.
+	(operand_types): Remove Vec_Imm4.
+	* opcodes/i386-opc.h (Vec_Imm4): Delete.
+	(union i386_operand_type): Remove vec_imm4.
+	* i386-opc.tbl (vpermil2pd, vpermil2ps): Remove Vec_Imm4.
+	* opcodes/i386-init.h, i386-tbl.h: Re-generate.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (lfence, mfence, sfence, monitor, mwait, vmcall,
+	vmlaunch, vmresume, vmxoff, vmfunc, xgetbv, xsetbv, swapgs,
+	rdtscp, clgi, invlpga, skinit, stgi, vmload, vmmcall, vmrun,
+	vmsave, montmul, xsha1, xsha256, xstorerng, xcryptecb,
+	xcryptcbc, xcryptctr, xcryptcfb, xcryptofb, xstore, clac, stac,
+	monitorx, mwaitx): Drop ImmExt from operand-less forms.
+	* i386-tbl.h: Re-generate.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (and, or): Add Optimize to forms allowing two
+	register operands.
+	* i386-tbl.h: Re-generate.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (C): New.
+	(paddb, paddw, paddd, paddq, paddsb, paddsw, paddusb, paddusw,
+	pand, pcmpeqb, pcmpeqw, pcmpeqd, pmaddwd, pmulhw, pmullw,
+	por, pxor, andps, cmpeqps, cmpeqss, cmpneqps, cmpneqss,
+	cmpordps, cmpordss, cmpunordps, cmpunordss, orps, pavgb, pavgw,
+	pmaxsw, pmaxub, pminsw, pminub, pmulhuw, xorps, andpd, cmpeqpd,
+	cmpeqsd, cmpneqpd, cmpneqsd, cmpordpd, cmpordsd, cmpunordpd,
+	cmpunordsd, orpd, xorpd, pmuludq, vandpd, vandps, vcmpeq_ospd,
+	vcmpeq_osps, vcmpeq_ossd, vcmpeq_osss, vcmpeqpd, vcmpeqps,
+	vcmpeqsd, vcmpeqss, vcmpeq_uqpd, vcmpeq_uqps, vcmpeq_uqsd,
+	vcmpeq_uqss, vcmpeq_uspd, vcmpeq_usps, vcmpeq_ussd,
+	vcmpeq_usss, vcmpfalse_ospd, vcmpfalse_osps, vcmpfalse_ossd,
+	vcmpfalse_osss, vcmpfalsepd, vcmpfalseps, vcmpfalsesd,
+	vcmpfalsess, vcmpneq_oqpd, vcmpneq_oqps, vcmpneq_oqsd,
+	vcmpneq_oqss, vcmpneq_ospd, vcmpneq_osps, vcmpneq_ossd,
+	vcmpneq_osss, vcmpneqpd, vcmpneqps, vcmpneqsd, vcmpneqss,
+	vcmpneq_uspd, vcmpneq_usps, vcmpneq_ussd, vcmpneq_usss,
+	vcmpordpd, vcmpordps, vcmpordsd, vcmpord_spd, vcmpord_sps,
+	vcmpordss, vcmpord_ssd, vcmpord_sss, vcmptruepd, vcmptrueps,
+	vcmptruesd, vcmptruess, vcmptrue_uspd, vcmptrue_usps,
+	vcmptrue_ussd, vcmptrue_usss, vcmpunordpd, vcmpunordps,
+	vcmpunordsd, vcmpunord_spd, vcmpunord_sps, vcmpunordss,
+	vcmpunord_ssd, vcmpunord_sss, vorpd, vorps, vpaddsb, vpaddsw,
+	vpaddb, vpaddd, vpaddq, vpaddw, vpaddusb, vpaddusw, vpand,
+	vpavgb, vpavgw, vpcmpeqb, vpcmpeqd, vpcmpeqw, vpmaddwd,
+	vpmaxsw, vpmaxub, vpminsw, vpminub, vpmulhuw, vpmulhw, vpmullw,
+	vpmuludq, vpor, vpxor, vxorpd, vxorps): Add C to VEX-encoded
+	flavors.
+	* i386-tbl.h: Re-generate.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (and, or): Add Optimize to forms allowing two
+	register operands.
+	* i386-tbl.h: Re-generate.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis-evex-prefix.h: Use PCLMUL for vpclmulqdq.
+	* i386-opc.tbl (vpclmullqlqdq, vpclmulhqlqdq, vpclmullqhqdq,
+	vpclmulhqhqdq): Add CpuVPCLMULQDQ flavors.
+	* i386-tbl.h: Re-generate.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (vextractps, vpextrw, vpinsrw): Remove
+	Disp8MemShift from register only templates.
+	* i386-tbl.h: Re-generate.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EXdScalarS, MOD_EVEX_0F10_PREFIX_1,
+	MOD_EVEX_0F10_PREFIX_3, MOD_EVEX_0F11_PREFIX_1,
+	MOD_EVEX_0F11_PREFIX_3, EVEX_W_0F10_P_1_M_0,
+	EVEX_W_0F10_P_1_M_1, EVEX_W_0F10_P_3_M_0, EVEX_W_0F10_P_3_M_1,
+	EVEX_W_0F11_P_1_M_0, EVEX_W_0F11_P_1_M_1, EVEX_W_0F11_P_3_M_0,
+	EVEX_W_0F11_P_3_M_1): Delete.
+	(EVEX_W_0F10_P_1, EVEX_W_0F10_P_3, EVEX_W_0F11_P_1,
+	EVEX_W_0F11_P_3): New.
+	* i386-dis-evex-mod.h: Remove MOD_EVEX_0F10_PREFIX_1,
+	MOD_EVEX_0F10_PREFIX_3, MOD_EVEX_0F11_PREFIX_1, and
+	MOD_EVEX_0F11_PREFIX_3 table entries.
+	* i386-dis-evex-prefix.h: Adjust PREFIX_EVEX_0F10 and
+	PREFIX_EVEX_0F11 table entries.
+	* i386-dis-evex-w.h: Replace EVEX_W_0F10_P_1_M_{0,1},
+	EVEX_W_0F10_P_3_M_{0,1}, EVEX_W_0F11_P_1_M_{0,1}, and
+	EVEX_W_0F11_P_3_M_{0,1} table entries.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EXdVex, EXdVexS, EXqVex, EXqVexS, XMVex):
+	Delete.
+
+2019-06-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24719
+	* i386-dis-evex-len.h: Add EVEX_LEN_0F38C6_REG_1_PREFIX_2,
+	EVEX_LEN_0F38C6_REG_2_PREFIX_2, EVEX_LEN_0F38C6_REG_5_PREFIX_2,
+	EVEX_LEN_0F38C6_REG_6_PREFIX_2, EVEX_LEN_0F38C7_R_1_P_2_W_0,
+	EVEX_LEN_0F38C7_R_1_P_2_W_1, EVEX_LEN_0F38C7_R_2_P_2_W_0,
+	EVEX_LEN_0F38C7_R_2_P_2_W_1, EVEX_LEN_0F38C7_R_5_P_2_W_0,
+	EVEX_LEN_0F38C7_R_5_P_2_W_1, EVEX_LEN_0F38C7_R_6_P_2_W_0 and
+	EVEX_LEN_0F38C7_R_6_P_2_W_1.
+	* i386-dis-evex-prefix.h: Update PREFIX_EVEX_0F38C6_REG_1,
+	PREFIX_EVEX_0F38C6_REG_2, PREFIX_EVEX_0F38C6_REG_5 and
+	PREFIX_EVEX_0F38C6_REG_6 entries.
+	* i386-dis-evex-w.h: Update EVEX_W_0F38C7_R_1_P_2,
+	EVEX_W_0F38C7_R_2_P_2, EVEX_W_0F38C7_R_5_P_2 and
+	EVEX_W_0F38C7_R_6_P_2 entries.
+	* i386-dis.c: Add EVEX_LEN_0F38C6_REG_1_PREFIX_2,
+	EVEX_LEN_0F38C6_REG_2_PREFIX_2, EVEX_LEN_0F38C6_REG_5_PREFIX_2,
+	EVEX_LEN_0F38C6_REG_6_PREFIX_2, EVEX_LEN_0F38C7_R_1_P_2_W_0,
+	EVEX_LEN_0F38C7_R_1_P_2_W_1, EVEX_LEN_0F38C7_R_2_P_2_W_0,
+	EVEX_LEN_0F38C7_R_2_P_2_W_1, EVEX_LEN_0F38C7_R_5_P_2_W_0,
+	EVEX_LEN_0F38C7_R_5_P_2_W_1, EVEX_LEN_0F38C7_R_6_P_2_W_0 and
+	EVEX_LEN_0F38C7_R_6_P_2_W_1 enums.
+
+2019-06-27  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (VEX_LEN_0F2A_P_1, VEX_LEN_0F2A_P_3,
+	VEX_LEN_0F2C_P_1, VEX_LEN_0F2C_P_3, VEX_LEN_0F2D_P_1,
+	VEX_LEN_0F2D_P_3): Delete.
+	(vex_len_table): Move vcvtsi2ss, vcvtsi2sd, vcvttss2si,
+	vcvttsd2si, vcvtss2si, and vcvtsd2si leaf entries ...
+	(prefix_table): ... here.
+
+2019-06-27  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (Iq): Delete.
+	(Id): New.
+	(reg_table): Use it for lwpins, lwpval, and bextr. Use Edq for
+	TBM insns.
+	(vex_len_table): Use Edq for vcvtsi2ss, vcvtsi2sd. Use Gdq for
+	vcvttss2si, vcvttsd2si, vcvtss2si, and vcvtsd2si.
+	(OP_E_memory): Also honor needindex when deciding whether an
+	address size prefix needs printing.
+	(OP_I): Remove handling of q_mode. Add handling of d_mode.
+
+2019-06-26  Jim Wilson  <jimw@sifive.com>
+
+	PR binutils/24739
+	* riscv-dis.c (riscv_disasemble_insn): Set info->endian_code.
+	Set info->display_endian to info->endian_code.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (operand_type_init): Correct OPERAND_TYPE_DEBUG
+	entry. Drop OPERAND_TYPE_ACC entry. Add OPERAND_TYPE_ACC8 and
+	OPERAND_TYPE_ACC16 entries. Adjust OPERAND_TYPE_ACC32 and
+	OPERAND_TYPE_ACC64 entries.
+	* i386-init.h: Re-generate.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (Edqa, dqa_mode, EVEX_W_0F2A_P_1, EVEX_W_0F7B_P_1):
+	Delete.
+	(intel_operand_size, OP_E_register, OP_E_memory): Drop handling
+	of dqa_mode.
+	* i386-dis-evex-prefix.h: Move vcvtsi2ss and vcvtusi2ss leaf
+	entries here.
+	* i386-dis-evex-w.h: Drop EVEX_W_0F2A_P_1 and EVEX_W_0F7B_P_1
+	entries. Use Edq for vcvtsi2sd and vcvtusi2sd.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_I64): Forword more cases to OP_I(). Drop local
+	variables.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (prefix_table): Use Edq for cvtsi2ss and cvtsi2sd.
+	Use Gdq for cvttss2si, cvttsd2si, cvtss2si, and cvtsd2si, and
+	movnti.
+	* i386-opc.tbl (movnti): Add IgnoreSize.
+	* i386-tbl.h: Re-generate.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (and): Mark Imm8S form for optimization.
+	* i386-tbl.h: Re-generate.
+
+2019-06-21  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-dis-evex.h: Break into ...
+	* i386-dis-evex-len.h: New file.
+	* i386-dis-evex-mod.h: Likewise.
+	* i386-dis-evex-prefix.h: Likewise.
+	* i386-dis-evex-reg.h: Likewise.
+	* i386-dis-evex-w.h: Likewise.
+	* i386-dis.c: Include i386-dis-evex-reg.h, i386-dis-evex-prefix.h,
+	i386-dis-evex.h, i386-dis-evex-len.h, i386-dis-evex-w.h and
+	i386-dis-evex-mod.h.
+
+2019-06-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24700
+	* i386-dis-evex.h (evex_table): Update EVEX_W_0F3819_P_2,
+	EVEX_W_0F381A_P_2, EVEX_W_0F381B_P_2, EVEX_W_0F385A_P_2 and
+	EVEX_W_0F385B_P_2.
+	(evex_len_table): Add EVEX_LEN_0F3819_P_2_W_0,
+	EVEX_LEN_0F3819_P_2_W_1, EVEX_LEN_0F381A_P_2_W_0,
+	EVEX_LEN_0F381A_P_2_W_1, EVEX_LEN_0F381B_P_2_W_0,
+	EVEX_LEN_0F381B_P_2_W_1, EVEX_LEN_0F385A_P_2_W_0,
+	EVEX_LEN_0F385A_P_2_W_1, EVEX_LEN_0F385B_P_2_W_0 and
+	EVEX_LEN_0F385B_P_2_W_1.
+	* i386-dis.c (EVEX_LEN_0F3819_P_2_W_0): New enum.
+	(EVEX_LEN_0F3819_P_2_W_1): Likewise.
+	(EVEX_LEN_0F381A_P_2_W_0): Likewise.
+	(EVEX_LEN_0F381A_P_2_W_1): Likewise.
+	(EVEX_LEN_0F381B_P_2_W_0): Likewise.
+	(EVEX_LEN_0F381B_P_2_W_1): Likewise.
+	(EVEX_LEN_0F385A_P_2_W_0): Likewise.
+	(EVEX_LEN_0F385A_P_2_W_1): Likewise.
+	(EVEX_LEN_0F385B_P_2_W_0): Likewise.
+	(EVEX_LEN_0F385B_P_2_W_1): Likewise.
+
+2019-06-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24691
+	* i386-dis-evex.h (evex_table): Update EVEX_W_0F3A23_P_2,
+	EVEX_W_0F3A38_P_2, EVEX_W_0F3A39_P_2, EVEX_W_0F3A3A_P_2,
+	EVEX_W_0F3A3B_P_2 and EVEX_W_0F3A43_P_2.
+	(evex_len_table): Add EVEX_LEN_0F3A23_P_2_W_0,
+	EVEX_LEN_0F3A23_P_2_W_1, EVEX_LEN_0F3A38_P_2_W_0,
+	EVEX_LEN_0F3A38_P_2_W_1, EVEX_LEN_0F3A39_P_2_W_0,
+	EVEX_LEN_0F3A39_P_2_W_1, EVEX_LEN_0F3A3A_P_2_W_0,
+	EVEX_LEN_0F3A3A_P_2_W_1, EVEX_LEN_0F3A3B_P_2_W_0,
+	EVEX_LEN_0F3A3B_P_2_W_1, EVEX_LEN_0F3A43_P_2_W_0 and
+	EVEX_LEN_0F3A43_P_2_W_1.
+	* i386-dis.c (EVEX_LEN_0F3A23_P_2_W_0): New enum.
+	(EVEX_LEN_0F3A23_P_2_W_1): Likewise.
+	(EVEX_LEN_0F3A38_P_2_W_0): Likewise.
+	(EVEX_LEN_0F3A38_P_2_W_1): Likewise.
+	(EVEX_LEN_0F3A39_P_2_W_0): Likewise.
+	(EVEX_LEN_0F3A39_P_2_W_1): Likewise.
+	(EVEX_LEN_0F3A3A_P_2_W_0): Likewise.
+	(EVEX_LEN_0F3A3A_P_2_W_1): Likewise.
+	(EVEX_LEN_0F3A3B_P_2_W_0): Likewise.
+	(EVEX_LEN_0F3A3B_P_2_W_1): Likewise.
+	(EVEX_LEN_0F3A43_P_2_W_0): Likewise.
+	(EVEX_LEN_0F3A43_P_2_W_1): Likewise.
+
+2019-06-14  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po; Updated French translation.
+
+2019-06-13  Stafford Horne  <shorne@gmail.com>
+
+	* or1k-asm.c: Regenerated.
+	* or1k-desc.c: Regenerated.
+	* or1k-desc.h: Regenerated.
+	* or1k-dis.c: Regenerated.
+	* or1k-ibld.c: Regenerated.
+	* or1k-opc.c: Regenerated.
+	* or1k-opc.h: Regenerated.
+	* or1k-opinst.c: Regenerated.
+
+2019-06-12  Peter Bergner  <bergner@linux.ibm.com>
+
+	* ppc-opc.c (powerpc_opcodes) <ldmx>: Delete mnemonic.
+
+2019-06-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24633
+	* i386-dis-evex.h (evex_table): Update EVEX_W_0F3A18_P_2,
+	EVEX_W_0F3A19_P_2, EVEX_W_0F3A1A_P_2 and EVEX_W_0F3A1B_P_2.
+	(evex_len_table): EVEX_LEN_0F3A18_P_2_W_0,
+	EVEX_LEN_0F3A18_P_2_W_1, EVEX_LEN_0F3A19_P_2_W_0,
+	EVEX_LEN_0F3A19_P_2_W_1, EVEX_LEN_0F3A1A_P_2_W_0,
+	EVEX_LEN_0F3A1A_P_2_W_1, EVEX_LEN_0F3A1B_P_2_W_0,
+	EVEX_LEN_0F3A1B_P_2_W_1.
+	* i386-dis.c (EVEX_LEN_0F3A18_P_2_W_0): New enum.
+	(EVEX_LEN_0F3A18_P_2_W_1): Likewise.
+	(EVEX_LEN_0F3A19_P_2_W_0): Likewise.
+	(EVEX_LEN_0F3A19_P_2_W_1): Likewise.
+	(EVEX_LEN_0F3A1A_P_2_W_0): Likewise.
+	(EVEX_LEN_0F3A1A_P_2_W_1): Likewise.
+	(EVEX_LEN_0F3A1B_P_2_W_0): Likewise.
+	(EVEX_LEN_0F3A1B_P_2_W_1): Likewise.
+
+2019-06-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24626
+	* i386-dis.c (print_insn): Check for unused VEX.vvvv and
+	EVEX.vvvv when disassembling VEX and EVEX instructions.
+	(OP_VEX): Set vex.register_specifier to 0 after readding
+	vex.register_specifier.
+	(OP_Vex_2src_1): Likewise.
+	(OP_Vex_2src_2): Likewise.
+	(OP_LWP_E): Likewise.
+	(OP_EX_Vex): Don't check vex.register_specifier.
+	(OP_XMM_Vex): Likewise.
+
+2019-06-04  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>
+	    Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (enum): Add PREFIX_EVEX_0F3868, EVEX_W_0F3868_P_3.
+	* i386-dis-evex.h (evex_table): Add AVX512_VP2INTERSECT
+	instructions.
+	* i386-gen.c (cpu_flag_init): Add CPU_AVX512_VP2INTERSECT_FLAGS,
+	CPU_ANY_AVX512_VP2INTERSECT_FLAGS.
+	(cpu_flags): Add CpuAVX512_VP2INTERSECT.
+	* i386-opc.h (enum): Add CpuAVX512_VP2INTERSECT.
+	(i386_cpu_flags): Add cpuavx512_vp2intersect.
+	* i386-opc.tbl: Add AVX512_VP2INTERSECT insns.
+	* i386-init.h: Regenerated.
+	* i386-tbl.h: Likewise.
+
+2019-06-04  Xuepeng Guo  <xuepeng.guo@intel.com>
+	    Lili Cui  <lili.cui@intel.com>
+
+	* doc/c-i386.texi: Document enqcmd.
+	* testsuite/gas/i386/enqcmd-intel.d: New file.
+	* testsuite/gas/i386/enqcmd-inval.l: Likewise.
+	* testsuite/gas/i386/enqcmd-inval.s: Likewise.
+	* testsuite/gas/i386/enqcmd.d: Likewise.
+	* testsuite/gas/i386/enqcmd.s: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd-inval.l: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd-inval.s: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run enqcmd-intel, enqcmd-inval,
+	enqcmd, x86-64-enqcmd-intel, x86-64-enqcmd-inval,
+	and x86-64-enqcmd.
+
+2019-06-04  Alan Hayward  <alan.hayward@arm.com>
+
+	* arm-dis.c (is_mve_unpredictable): Remove spurious paranthesis.
+
+2019-06-03  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (prefix_opcd_indices): Correct size.
+
+2019-05-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24625
+	* i386-opc.tbl: Add CheckRegSize to AVX512_BF16 instructions with
+	Disp8ShiftVL.
+	* i386-tbl.h: Regenerated.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* po/POTFILES.in: Regenerate.
+
+2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (insert_d34, extract_d34, insert_nsi34, extract_nsi34),
+	(insert_pcrel, extract_pcrel, extract_pcrel0): New functions.
+	(extract_esync, extract_raq, extract_tbr, extract_sxl): Comment.
+	(powerpc_operands <D34, SI34, NSI34, PRA0, PRAQ, PCREL, PCREL0,
+	XTOP>): Define and add entries.
+	(P8LS, PMLS, P_D_MASK, P_DRAPCREL_MASK): Define.
+	(prefix_opcodes): Add pli, paddi, pla, psubi, plwz, plbz, pstw,
+	pstb, plhz, plha, psth, plfs, plfd, pstfs, pstfd, plq, plxsd,
+	plxssp, pld, plwa, pstxsd, pstxssp, pstxv, pstd, and pstq.
+
+2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (ppc_opts): Add "future" entry.
+	(PREFIX_OPCD_SEGS): Define.
+	(prefix_opcd_indices): New array.
+	(disassemble_init_powerpc): Initialize prefix_opcd_indices.
+	(lookup_prefix): New function.
+	(print_insn_powerpc): Handle 64-bit prefix instructions.
+	* ppc-opc.c (PREFIX_OP, PREFIX_FORM, SUFFIX_MASK, PREFIX_MASK),
+	(PMRR, POWERXX): Define.
+	(prefix_opcodes): New instruction table.
+	(prefix_num_opcodes): New constant.
+
+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* configure.ac (SHARED_DEPENDENCIES): Add case for bfd_bpf_arch.
+	* configure: Regenerated.
+	* Makefile.am: Add rules for the files generated from cpu/bpf.cpu
+	and cpu/bpf.opc.
+	(HFILES): Add bpf-desc.h and bpf-opc.h.
+	(TARGET_LIBOPCODES_CFILES): Add bpf-asm.c, bpf-desc.c, bpf-dis.c,
+	bpf-ibld.c and bpf-opc.c.
+	(BPF_DEPS): Define.
+	* Makefile.in: Regenerated.
+	* disassemble.c (ARCH_bpf): Define.
+	(disassembler): Add case for bfd_arch_bpf.
+	(disassemble_init_for_target): Likewise.
+	(enum epbf_isa_attr): Define.
+	* disassemble.h: extern print_insn_bpf.
+	* bpf-asm.c: Generated.
+	* bpf-opc.h: Likewise.
+	* bpf-opc.c: Likewise.
+	* bpf-ibld.c: Likewise.
+	* bpf-dis.c: Likewise.
+	* bpf-desc.h: Likewise.
+	* bpf-desc.c: Likewise.
+
+2019-05-21  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (coprocessor_opcodes): New instructions for VMRS
+	and VMSR with the new operands.
+
+2019-05-21  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (enum mve_instructions): New enum
+	for csinc, csinv, csneg, csel, cset, csetm, cinv, cinv
+	and cneg.
+	(mve_opcodes): New instructions as above.
+	(is_mve_encoding_conflict): Add cases for csinc, csinv,
+	csneg and csel.
+	(print_insn_mve): Accept new %<bitfield>c and %<bitfield>C.
+
+2019-05-21  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (emun mve_instructions): Updated for new instructions.
+	(mve_opcodes): New instructions for asrl, lsll, lsrl, sqrshrl,
+	sqrshr, sqshl, sqshll, srshr, srshrl, uqrshll, uqrshl, uqshll,
+	uqshl, urshrl and urshr.
+	(is_mve_okay_in_it): Add new instructions to TRUE list.
+	(is_mve_unpredictable): Add cases for UNPRED_R13 and UNPRED_R15.
+	(print_insn_mve): Updated to accept new %j,
+	%<bitfield>m and %<bitfield>n patterns.
+
+2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* mips-opc.c (mips_builtin_opcodes): Change source register
+	constraint for DAUI.
+
+2019-05-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): Add new instructions.
+	(enum mve_instructions): Likewise.
+	(enum mve_undefined): Add new reasons.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_undefined): Likewise.
+	(print_mve_size): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): Add new instructions.
+	(enum mve_instructions): Likewise.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_size): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): Add new instructions.
+	(enum mve_instructions): Likewise.
+	(is_mve_encoding_conflict): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_size): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): Add new instructions.
+	(enum mve_instructions): Likewise.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_size): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): Add new instructions.
+	(enum mve_instructions): Likewise.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): Add new instructions.
+	(print_insn_thumb32): Handle new instructions.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_undefined): Add new reasons.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_undefined): Likewise.
+	(print_mve_size): Likewise.
+	(print_mve_shift_n): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_rotate): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_undefined): Add new reasons.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_undefined): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_unpredictable): Add new reasons.
+	(enum mve_undefined): Likewise.
+	(is_mve_okay_in_it): Handle new isntructions.
+	(is_mve_encoding_conflict): Likewise.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_vmov_index): Likewise.
+	(print_simd_imm8): Likewise.
+	(print_mve_undefined): Likewise.
+	(print_mve_unpredictable): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_unpredictable): Add new reasons.
+	(enum mve_undefined): Likewise.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_undefined): Likewise.
+	(print_mve_unpredictable): Likewise.
+	(print_mve_rounding_mode): Likewise.
+	(print_mve_vcvt_size): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_unpredictable): Add new reasons.
+	(enum mve_undefined): Likewise.
+	(is_mve_undefined): Handle new instructions.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_undefined): Likewise.
+	(print_mve_unpredictable): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_undefined): Add new reasons.
+	(insns): Add new instructions.
+	(is_mve_encoding_conflict):
+	(print_mve_vld_str_addr): New print function.
+	(is_mve_undefined): Handle new instructions.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_undefined): Likewise.
+	(print_mve_size): Likewise.
+	(print_insn_coprocessor_1): Handle MVE VLDR, VSTR instructions.
+	(print_insn_mve):  Handle new operands.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_unpredictable): Add new reasons.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_unpredictable): Likewise.
+	(mve_opcodes): Add new instructions.
+	(print_mve_unpredictable): Handle new reasons.
+	(print_mve_register_blocks): New print function.
+	(print_mve_size): Handle new instructions.
+	(print_insn_mve): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_unpredictable): Add new reasons.
+	(enum mve_undefined): Likewise.
+	(is_mve_encoding_conflict): Handle new instructions.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(coprocessor_opcodes): Move NEON VDUP from here...
+	(neon_opcodes): ... to here.
+	(mve_opcodes): Add new instructions.
+	(print_mve_undefined):  Handle new reasons.
+	(print_mve_unpredictable): Likewise.
+	(print_mve_size): Handle new instructions.
+	(print_insn_neon): Handle vdup.
+	(print_insn_mve): Handle new operands.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): Add new instructions.
+	(enum mve_unpredictable): Add new values.
+	(mve_opcodes): Add new instructions.
+	(vec_condnames): New array with vector conditions.
+	(mve_predicatenames): New array with predicate suffixes.
+	(mve_vec_sizename): New array with vector sizes.
+	(enum vpt_pred_state): New enum with vector predication states.
+	(struct vpt_block): New struct type for vpt blocks.
+	(vpt_block_state): Global struct to keep track of state.
+	(mve_extract_pred_mask): New helper function.
+	(num_instructions_vpt_block): Likewise.
+	(mark_outside_vpt_block): Likewise.
+	(mark_inside_vpt_block): Likewise.
+	(invert_next_predicate_state): Likewise.
+	(update_next_predicate_state): Likewise.
+	(update_vpt_block_state): Likewise.
+	(is_vpt_instruction): Likewise.
+	(is_mve_encoding_conflict): Add entries for new instructions.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_unpredictable): Handle new cases.
+	(print_instruction_predicate): Likewise.
+	(print_mve_size): New function.
+	(print_vec_condition): New function.
+	(print_insn_mve): Handle vpt blocks and new print operands.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* arm-dis.c (print_insn_coprocessor_1): Disable the use of coprocessors
+	8, 14 and 15 for Armv8.1-M Mainline.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+	    Michael Collison <michael.collison@arm.com>
+
+	* arm-dis.c (enum mve_instructions): New enum.
+	(enum mve_unpredictable): Likewise.
+	(enum mve_undefined): Likewise.
+	(struct mopcode32): New struct.
+	(is_mve_okay_in_it): New function.
+	(is_mve_architecture): Likewise.
+	(arm_decode_field): Likewise.
+	(arm_decode_field_multiple): Likewise.
+	(is_mve_encoding_conflict): Likewise.
+	(is_mve_undefined): Likewise.
+	(is_mve_unpredictable): Likewise.
+	(print_mve_undefined): Likewise.
+	(print_mve_unpredictable): Likewise.
+	(print_insn_coprocessor_1): Use arm_decode_field_multiple.
+	(print_insn_mve): New function.
+	(print_insn_thumb32): Handle MVE architecture.
+	(select_arm_features): Force thumb for Armv8.1-m Mainline.
+
+2019-05-10  Nick Clifton  <nickc@redhat.com>
+
+	PR 24538
+	* ia64-opc.c (ia64_find_matching_opcode): Check for reaching the
+	end of the table prematurely.
+
+2019-05-10  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+        * mips-opc.c (mips_opcodes): Enable ADD, SUB, DADD and DSUB
+	macros for R6.
+
+2019-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (print_insn_powerpc) Don't skip optional operands
+	when -Mraw is in effect.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-dis-2.c: Regenerate.
+	* aarch64-tbl.h (OP_SVE_BBU): New variant set.
+	(OP_SVE_BBB): New variant set.
+	(OP_SVE_DDDD): New variant set.
+	(OP_SVE_HHH): New variant set.
+	(OP_SVE_HHHU): New variant set.
+	(OP_SVE_SSS): New variant set.
+	(OP_SVE_SSSU): New variant set.
+	(OP_SVE_SHH): New variant set.
+	(OP_SVE_SBBU): New variant set.
+	(OP_SVE_DSS): New variant set.
+	(OP_SVE_DHHU): New variant set.
+	(OP_SVE_VMV_HSD_BHS): New variant set.
+	(OP_SVE_VVU_HSD_BHS): New variant set.
+	(OP_SVE_VVVU_SD_BH): New variant set.
+	(OP_SVE_VVVU_BHSD): New variant set.
+	(OP_SVE_VVV_QHD_DBS): New variant set.
+	(OP_SVE_VVV_HSD_BHS): New variant set.
+	(OP_SVE_VVV_HSD_BHS2): New variant set.
+	(OP_SVE_VVV_BHS_HSD): New variant set.
+	(OP_SVE_VV_BHS_HSD): New variant set.
+	(OP_SVE_VVV_SD): New variant set.
+	(OP_SVE_VVU_BHS_HSD): New variant set.
+	(OP_SVE_VZVV_SD): New variant set.
+	(OP_SVE_VZVV_BH): New variant set.
+	(OP_SVE_VZV_SD): New variant set.
+	(aarch64_opcode_table): Add sve2 instructions.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
+	for SVE_SHLIMM_UNPRED_22.
+	(aarch64_print_operand): Add printing for SVE_SHLIMM_UNPRED_22.
+	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHLIMM_UNPRED_22
+	operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
+	sve_size_tsz_bhs iclass encode.
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
+	sve_size_tsz_bhs iclass decode.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
+	for SVE_Zm4_11_INDEX.
+	(aarch64_print_operand): Add printing for SVE_Zm4_11_INDEX.
+	(fields): Handle SVE_i2h field.
+	* aarch64-opc.h (enum aarch64_field_kind): New SVE_i2h field.
+	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_Zm4_11_INDEX operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
+	sve_shift_tsz_bhsd iclass encode.
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
+	sve_shift_tsz_bhsd iclass decode.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+	* aarch64-asm.c (aarch64_ins_sve_shrimm):
+	(aarch64_encode_variant_using_iclass): Handle
+	sve_shift_tsz_hsd iclass encode.
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
+	sve_shift_tsz_hsd iclass decode.
+	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
+	for SVE_SHRIMM_UNPRED_22.
+	(aarch64_print_operand): Add printing for SVE_SHRIMM_UNPRED_22.
+	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHRIMM_UNPRED_22
+	operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
+	sve_size_013 iclass encode.
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
+	sve_size_013 iclass decode.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
+	sve_size_bh iclass encode.
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
+	sve_size_bh iclass decode.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
+	sve_size_sd2 iclass encode.
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
+	sve_size_sd2 iclass decode.
+	* aarch64-opc.c (fields): Handle SVE_sz2 field.
+	* aarch64-opc.h (enum aarch64_field_kind): New SVE_sz2 field.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
+	for SVE_ADDR_ZX.
+	(aarch64_print_operand): Add printing for SVE_ADDR_ZX.
+	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_ADDR_ZX operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
+	for SVE_Zm3_11_INDEX.
+	(aarch64_print_operand): Add printing for SVE_Zm3_11_INDEX.
+	(fields): Handle SVE_i3l and SVE_i3h2 fields.
+	* aarch64-opc.h (enum aarch64_field_kind): New SVE_i3l and SVE_i3h2
+	fields.
+	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_Zm3_11_INDEX operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle
+	sve_size_hsd2 iclass encode.
+	* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle
+	sve_size_hsd2 iclass decode.
+	* aarch64-opc.c (fields): Handle SVE_size field.
+	* aarch64-opc.h (enum aarch64_field_kind): New SVE_size field.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+	* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking
+	for SVE_IMM_ROT3.
+	(aarch64_print_operand): Add printing for SVE_IMM_ROT3.
+	(fields): Handle SVE_rot3 field.
+	* aarch64-opc.h (enum aarch64_field_kind): New SVE_rot3 field.
+	* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_IMM_ROT3 operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-opc.c (verify_constraints): Check for movprfx for sve2
+	instructions.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* aarch64-tbl.h
+	(aarch64_feature_sve2, aarch64_feature_sve2aes,
+	aarch64_feature_sve2sha3, aarch64_feature_sve2sm4,
+	aarch64_feature_sve2bitperm): New feature sets.
+	(SVE2, SVE2_AES, SVE2_SHA3, SVE2_SM4, SVE2_BITPERM): New macros
+	for feature set addresses.
+	(SVE2_INSN, SVE2_INSNC, SVE2AES_INSN, SVE2SHA3_INSN,
+	SVE2SM4_INSN, SVE2SM4_INSNC, SVE2BITPERM_INSN): New macros.
+
+2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>
+	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* mips-dis.c (mips_calculate_combination_ases): Add ISA
+	argument and set ASE_EVA_R6 appropriately.
+	(set_default_mips_dis_options): Pass ISA to above.
+	(parse_mips_dis_option): Likewise.
+	* mips-opc.c (EVAR6): New macro.
+	(mips_builtin_opcodes): Add llwpe, scwpe.
+
+2019-05-01  Sudakshina Das  <sudi.das@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+	* aarch64-opc.c (operand_general_constraint_met_p): Add case for
+	AARCH64_OPND_TME_UIMM16.
+	(aarch64_print_operand): Likewise.
+	* aarch64-tbl.h (QL_IMM_NIL): New.
+	(TME): New.
+	(_TME_INSN): New.
+	(struct aarch64_opcode): Add tstart, tcommit, ttest and tcancel.
+
+2019-04-29  John Darrington  <john@darrington.wattle.id.au>
+
+        * s12z-opc.c (shift_discrim): Return OP_INVALID when reading fails.
+
+2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>
+	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* mips-opc.c (mips_builtin_opcodes): Add llwp, lldp, scwp, scdp.
+
+2019-04-24  John Darrington  <john@darrington.wattle.id.au>
+
+        * s12z-opc.h: Add extern "C" bracketing to help
+	users who wish to use this interface in c++ code.
+
+2019-04-24  John Darrington  <john@darrington.wattle.id.au>
+
+	* s12z-opc.c (bm_decode): Handle bit map operations with the
+	"reserved0" mode.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* arm-dis.c (coprocessor_opcodes): Document new %J and %K format
+	specifier.  Add entries for VLDR and VSTR of system registers.
+	(print_insn_coprocessor): Forbid coprocessor numbers 8, 14 and 15 in
+	coprocessor instructions on Armv8.1-M Mainline targets.  Add handling
+	of %J and %K format specifier.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* arm-dis.c (coprocessor_opcodes): Document new %C format control code.
+	Add new entries for VSCCLRM instruction.
+	(print_insn_coprocessor): Handle new %C format control code.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* arm-dis.c (enum isa): New enum.
+	(struct sopcode32): New structure.
+	(coprocessor_opcodes): change type of entries to struct sopcode32 and
+	set isa field of all current entries to ANY.
+	(print_insn_coprocessor): Change type of insn to struct sopcode32.
+	Only match an entry if its isa field allows the current mode.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* arm-dis.c (thumb_opcodes): Document %n control code.  Add entry for
+	CLRM.
+	(print_insn_thumb32): Add logic to print %n CLRM register list.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (print_insn_thumb32): Updated to accept new %P
+	and %Q patterns.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): New instruction bfcsel.
+	(print_insn_thumb32): Edit the switch case for %Z.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (print_insn_thumb32): Updated to accept new %Z pattern.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): New instruction bfl.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (print_insn_thumb32): Updated to accept new %Y pattern.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (print_insn_thumb32): Add '%<bitfield>S' to print an
+	Arm register with r13 and r15 unpredictable.
+	(thumb32_opcodes): New instructions for bfx and bflx.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (thumb32_opcodes): New instructions for bf.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (print_insn_thumb32): Updated to accept new %W pattern.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm-dis.c (print_insn_thumb32): Updated to accept new %G pattern.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* arm-dis.c (select_arm_features): Add logic for Armv8.1-M Mainline.
+
+2019-04-12  John Darrington <john@darrington.wattle.id.au>
+
+	s12z-dis.c, s12z-opc.c, s12z-opc.h: Replace "operator" with
+	"optr". ("operator" is a reserved word in c++).
+
+2019-04-11  Sudakshina Das  <sudi.das@arm.com>
+
+	* aarch64-opc.c (aarch64_print_operand): Add case for
+	AARCH64_OPND_Rt_SP.
+	(verify_constraints): Likewise.
+	* aarch64-tbl.h (QL_LDST_AT): Update to add SP qualifier.
+	(struct aarch64_opcode): Update stg, stzg, st2g, stz2g instructions
+	to accept Rt|SP as first operand.
+	(AARCH64_OPERANDS): Add new Rt_SP.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2019-04-11  Sudakshina Das  <sudi.das@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Likewise.
+	* aarch64-opc-2.c: Likewise.
+	* aarch64-tbl.h (aarch64_opcode): Add new ldgm and stgm.
+
+2019-04-09  Robert Suchanek  <robert.suchanek@mips.com>
+
+	* mips-opc.c (mips_builtin_opcodes): Add RDHWR rt rd sel.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-opc.tbl: Consolidate AVX512 BF16 entries.
+	* i386-init.h: Regenerated.
+
+2019-04-07  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (print_insn_powerpc): Use a tiny state machine
+	op_separator to control printing of spaces, comma and parens
+	rather than need_comma, need_paren and spaces vars.
+
+2019-04-07  Alan Modra  <amodra@gmail.com>
+
+	PR 24421
+	* arm-dis.c (print_insn_coprocessor): Correct bracket placement.
+	(print_insn_neon, print_insn_arm): Likewise.
+
+2019-04-05  Xuepeng Guo  <xuepeng.guo@intel.com>
+
+	* i386-dis-evex.h (evex_table): Updated to support BF16
+	instructions.
+	* i386-dis.c (enum): Add EVEX_W_0F3852_P_1, EVEX_W_0F3872_P_1
+	and EVEX_W_0F3872_P_3.
+	* i386-gen.c (cpu_flag_init): Add CPU_AVX512_BF16_FLAGS.
+	(cpu_flags): Add bitfield for CpuAVX512_BF16.
+	* i386-opc.h (enum): Add CpuAVX512_BF16.
+	(i386_cpu_flags): Add bitfield for cpuavx512_bf16.
+	* i386-opc.tbl: Add AVX512 BF16 instructions.
+	* i386-init.h: Regenerated.
+	* i386-tbl.h: Likewise.
+
+2019-04-05  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (XLBH_MASK): Subtract off BH field from BB_MASK.
+	(powerpc_opcodes): Reorder bcctr and bclr extended mnemonics
+	to favour printing of "-" branch hint when using the "y" bit.
+	Allow BH field on bc{ctr,lr,tar}{,l}{-,+}.
+
+2019-04-05  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (print_insn_powerpc): Delay printing spaces after
+	opcode until first operand is output.
+
+2019-04-04  Peter Bergner  <bergner@linux.ibm.com>
+
+	PR gas/24349
+	* ppc-opc.c (valid_bo_pre_v2): Add comments.
+	(valid_bo_post_v2): Add support for 'at' branch hints.
+	(insert_bo): Only error on branch on ctr.
+	(get_bo_hint_mask): New function.
+	(insert_boe): Add new 'branch_taken' formal argument.  Add support
+	for inserting 'at' branch hints.
+	(extract_boe): Add new 'branch_taken' formal argument.  Add support
+	for extracting 'at' branch hints.
+	(insert_bom, extract_bom, insert_bop, extract_bop): New functions.
+	(BOE): Delete operand.
+	(BOM, BOP): New operands.
+	(RM): Update value.
+	(XLYLK, XLYLK_MASK, XLYBB_MASK): Delete.
+	(powerpc_opcodes) <bc-, bcl-, bca-, bcla-, bclr-, bclrl-, bcctr-,
+	bcctrl-, bctar-, bctarl->: Replace BOE with BOM.
+	(powerpc_opcodes) <bc+, bcl+, bca+, bcla+, bclr+, bclrl+, bcctr+,
+	bcctrl+, bctar+, bctarl+>: Replace BOE with BOP.
+	<bdnztar, bdnztarl, bdztar, bdztarl, btar, btarl, bdnztar-, bdnztarl-,
+	bdnztar+, bdnztarl+, bdztar-, bdztarl-, bdztar+, bdztarl+, bgetar,
+	bnltar, bgetarl, bnltarl, bletar, bngtar, bletarl, bngtarl, bnetar,
+	bnetarl, bnstar, bnutar, bnstarl, bnutarl, bgetar-, bnltar-, bgetarl-,
+	bnltarl-, bletar-, bngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-,
+	bnstar-, bnutar-, bnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+,
+	bnltarl+, bletar+, bngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+,
+	bnstar+, bnutar+, bnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl,
+	beqtar, beqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,
+	bgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,
+	buntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,
+	bsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,
+	bdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,
+	bdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,
+	bttarl+>: New extended mnemonics.
+
+2019-03-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24390
+	* ppc-opc.c (BTF): Define.
+	(powerpc_opcodes): Use for mtfsb*.
+	* ppc-dis.c (print_insn_powerpc): Print fields with both
+	PPC_OPERAND_CR_REG and PPC_OPERAND_CR_BIT as a plain number.
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* arm-dis.c (struct arm_private_data): Remove has_mapping_symbols.
+	(mapping_symbol_for_insn): Implement new algorithm.
+	(print_insn): Remove duplicate code.
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* aarch64-dis.c (print_insn_aarch64):
+	Implement override.
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* aarch64-dis.c (print_insn_aarch64): Update the mapping symbol search
+	order.
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* aarch64-dis.c (last_stop_offset): New.
+	(print_insn_aarch64): Use stop_offset.
+
+2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24359
+	* i386-gen.c (cpu_flag_init): Add CPU_ANY_AVX512F_FLAGS to
+	CPU_ANY_AVX2_FLAGS.
+	* i386-init.h: Regenerated.
+
+2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24348
+	* i386-opc.tbl: Add Optimize to vmovdqa32, vmovdqa64, vmovdqu8,
+	vmovdqu16, vmovdqu32 and vmovdqu64.
+	* i386-tbl.h: Regenerated.
+
+2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* s390-opc.txt: Rename selhhhr to selfhr.  Remove optional operand
+	from vstrszb, vstrszh, and vstrszf.
+
+2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* s390-opc.txt: Add instruction descriptions.
+
+2019-02-08  Jim Wilson  <jimw@sifive.com>
+
+	* riscv-opc.c (riscv_opcodes) <beq>: Use Cz to compress 3 operand form.
+	<bne>: Likewise.
+
+2019-02-07  Tamar Christina  <tamar.christina@arm.com>
+
+	* arm-dis.c (arm_opcodes): Redefine hlt to armv1.
+
+2019-02-07  Tamar Christina  <tamar.christina@arm.com>
+
+	PR binutils/23212
+	* aarch64-opc.h (enum aarch64_field_kind): Add FLD_sz.
+	* aarch64-opc.c (verify_elem_sd): New.
+	(fields): Add FLD_sz entr.
+	* aarch64-tbl.h (_SIMD_INSN): New.
+	(aarch64_opcode_table): Add elem_sd verifier to fmla, fmls, fmul and
+	fmulx scalar and vector by element isns.
+
+2019-02-07  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* s390-mkopc.c (main): Accept arch13 as cpu string.
+	* s390-opc.c: Add new instruction formats and instruction opcode
+	masks.
+	* s390-opc.txt: Add new arch13 instructions.
+
+2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+
+	* aarch64-tbl.h (QL_LDST_AT): Update macro.
+	(aarch64_opcode): Change encoding for stg, stzg
+	st2g and st2zg.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Likewise.
+	* aarch64-opc-2.c: Likewise.
+	* aarch64-tbl.h (aarch64_opcode): Add new stzgm.
+
+2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+	    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
+
+	* aarch64-asm.c (aarch64_ins_addr_simple_2): Remove.
+	* aarch64-asm.h (ins_addr_simple_2): Likeiwse.
+	* aarch64-dis.c (aarch64_ext_addr_simple_2): Likewise.
+	* aarch64-dis.h (ext_addr_simple_2): Likewise.
+	* aarch64-opc.c (operand_general_constraint_met_p): Remove
+	case for ldstgv_indexed.
+	(aarch64_print_operand): Remove case for AARCH64_OPND_ADDR_SIMPLE_2.
+	* aarch64-tbl.h (struct aarch64_opcode): Remove ldgv and stgv.
+	(AARCH64_OPERANDS): Remove ADDR_SIMPLE_2.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2019-01-23  Nick Clifton  <nickc@redhat.com>
+
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+
+2019-01-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/de.po: Updated German translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2019-01-20  Chenghua Xu  <paul.hua.gm@gmail.com>
+	* mips-dis.c (mips_arch_choices): Fix typo in
+	gs464, gs464e and gs264e descriptors.
+
+2019-01-19  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/opcodes.pot: Regenerate.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-09  John Darrington <john@darrington.wattle.id.au>
+
+	* s12z-dis.c (print_insn_s12z):  Do not dereference an operand
+	if it is null.
+	-dis.c (opr_emit_disassembly): Do not omit an index if it is
+	zero.
+
+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+
+	* configure: Regenerate.
+
+2019-01-07  Alan Modra  <amodra@gmail.com>
+
+	* configure: Regenerate.
+	* po/POTFILES.in: Regenerate.
+
+2019-01-03  John Darrington <john@darrington.wattle.id.au>
+
+	* s12z-opc.c: New file.
+	* s12z-opc.h: New file.
+	* s12z-dis.c: Removed all code not directly related to display
+	of instructions.  Used the interface provided by the new files
+	instead.
+	* Makefile.am (TARGET_LIBOPCODES_CFILES) Add s12z-opc.c.
+	* Makefile.in: Regenerate.
+	* configure.ac (bfd_s12z_arch): Correct the dependencies.
+	* configure: Regenerate.
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/binutils/ChangeLog-2019 b/binutils/ChangeLog-2019
new file mode 100644
index 0000000000..2e61263271
--- /dev/null
+++ b/binutils/ChangeLog-2019
@@ -0,0 +1,1525 @@
+2019-12-30  Alan Modra  <amodra@gmail.com>
+
+	* od-macho.c: Include elfcomm.h.
+	(dump_dyld_info_rebase, dump_dyld_info_bind): Fix read_leb128 args.
+	(dump_dyld_info_export_1, dump_segment_split_info): Likewise.
+
+2019-12-23  Hans-Peter Nilsson  <hp@axis.com>
+
+	* dwarf.c (display_debug_lines_decoded): Cast printf parameter to
+	format type to correct last change.
+
+2019-12-23  Alan Modra  <amodra@gmail.com>
+
+	* dwarf.h (read_leb128): Update prototype.
+	(report_leb_status): New inline function.
+	(SKIP_ULEB, SKIP_SLEB, READ_ULEB, READ_SLEB): Define.
+	* dwarf.c: Use above macros throughout file.  Formatting.
+	(read_leb128): Reorder params.  Add status return param.
+	Don't stop reading until finding terminator or end of data.
+	Detect loss of significant bits.  Sign extend only on
+	terminating byte.
+	(read_sleb128, read_uleb128): Delete functions.
+	(SKIP_ULEB, SKIP_SLEB, READ_ULEB, READ_SLEB): Delete macros.
+	(read_and_print_leb128): Rewrite.
+	(process_extended_line_op): Return a size_t.  Use size_t vars.
+	Adjust to suit new macros.  Add proper name size to "data" when
+	processing DW_LNE_define_file.
+	(process_abbrev_section): Adjust to suit new macros.
+	(decode_location_expression, skip_attr_bytes): Likewise.
+	(get_type_signedness): Likewise.
+	(read_and_display_attr_value): Likewise.  Consolidate block code.
+	(process_debug_info): Adjust to suit new macros.
+	(display_formatted_table, display_debug_lines_raw): Likewise.
+	(display_debug_lines_decoded): Likewise.  Properly check for end
+	of DW_LNS_extended_op.
+	(display_debug_macinfo): Adjust to suit new macros.
+	(get_line_filename_and_dirname, display_debug_macro): Likewise.
+	(display_view_pair_list): Likewise.  Don't back off when hitting
+	end of data.
+	(display_loc_list): Adjust to suit new macros.
+	(display_loclists_list, display_loc_list_dwo): Likewise.
+	(display_debug_rnglists_list, read_cie): Likewise.
+	(display_debug_frames): Likewise.
+	* readelf.c: Use new ULEB macros throughout file.
+	(read_uleb128): Delete.
+	(decode_arm_unwind_bytecode): Use read_leb128.
+	(decode_tic6x_unwind_bytecode): Likewise.
+	(display_tag_value): Adjust to suit new macros.
+	(display_arc_attribute, display_arm_attribute): Likewise.
+	(display_gnu_attribute, display_power_gnu_attribute): Likewise.
+	(display_s390_gnu_attribute, display_sparc_gnu_attribute): Likewise.
+	(display_mips_gnu_attribute, display_tic6x_attribute): Likewise.
+	(display_msp430x_attribute, display_msp430_gnu_attribute): Likewise.
+	(display_riscv_attribute, process_attributes): Likewise.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (compare_section): New static var.
+	(compare_symbols): Sort by current section only.  Don't access
+	symbol name out of bounds when checking for file symbols.
+	Sort section symbols and object symbols.
+	(find_symbol_for_address): Remove bogus debugging and section
+	symbol test.
+	(disassemble_data): Move symbol sort from here..
+	(disassemble_section): ..to here.  Set compare_section.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/objcopy.exp: Remove tic80 support.
+	* testsuite/binutils-all/objdump.exp: Likewise.
+
+2019-12-11  Alan Modra  <amodra@gmail.com>
+
+	* od-xcoff.c (dump_dumpx_core): Adjust for bfd_h_get_8 change.
+
+2019-12-10  Alan Modra  <amodra@gmail.com>
+
+	PR 24960
+	* objdump.c (disassemble_data): Call disassemble_free_target.
+
+2019-12-10  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (struct objdump_disasm_info): Delete "sec".
+	(find_symbol_for_address): Use inf->section rather than aux->sec.
+	(objdump_print_addr, disassemble_bytes): Likewise.
+	(disassemble_section): Don't set aux->sec.
+
+2019-12-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (regexp_diff): Support #?REGEXP.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf.c (regname_internal_riscv): New function.
+	(init_dwarf_regnames_riscv): Use new function.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf.c (typedef dwarf_regname_lookup_ftype): New typedef.
+	(dwarf_regnames_lookup_func): New static global.
+	(init_dwarf_regnames_i386): Set dwarf_regnames_lookup_func.
+	(init_dwarf_regnames_iamcu): Likewise.
+	(init_dwarf_regnames_x86_64): Likewise.
+	(init_dwarf_regnames_aarch64): Likewise.
+	(init_dwarf_regnames_s390): Likewise.
+	(init_dwarf_regnames_riscv): Likewise.
+	(init_dwarf_regnames_by_elf_machine_code): Reset
+	dwarf_regnames_lookup_func to NULL.
+	(init_dwarf_regnames_by_bfd_arch_and_mach): Likewise.
+	(regname_internal_by_table_only): New function.
+	(regname): Make use of dwarf_regnames_lookup_func.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf.c (init_dwarf_regnames_i386): Make static.
+	(init_dwarf_regnames_iamcu): Make static.
+	(init_dwarf_regnames_x86_64): Make static.
+	(init_dwarf_regnames_aarch64): Make static.
+	(init_dwarf_regnames_s390): Make static.
+	(init_dwarf_regnames_riscv): Make static.
+	* dwarf.h (init_dwarf_regnames_i386): Delete declaration.
+	(init_dwarf_regnames_iamcu): Delete declaration.
+	(init_dwarf_regnames_x86_64): Delete declaration.
+	(init_dwarf_regnames_aarch64): Delete declaration.
+	(init_dwarf_regnames_s390): Delete declaration.
+	(init_dwarf_regnames_riscv): Delete declaration.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): New
+	function.
+	* dwarf.h (init_dwarf_regnames_by_bfd_arch_and_mach): Declare.
+	* objdump.c (dump_dwarf): Call new function instead of calling
+	specific initialization routines.  Restrucure so that eh_addr_size
+	is still calculated correctly.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf.c (init_dwarf_regnames): Renamed to...
+	(init_dwarf_regnames_by_elf_machine_code): ...this.
+	* dwarf.h (init_dwarf_regnames): Renamed to...
+	(init_dwarf_regnames_by_elf_machine_code): ...this.
+	* readelf.c (process_file_header): Update call to use new name.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf.c (frame_need_space): Compare dwarf_regnames_count against
+	0, and only warn about large numbers of registers if the number is
+	more than the dwarf_regnames_count.
+
+2019-11-25  Christian Eggers  <ceggers@gmx.de>
+
+	* objdump.c (disassemble_data): Provide section parameter to
+	bfd_octets_per_byte.
+	(dump_section): likewise
+	(dump_section_header): likewise. Show SEC_ELF_OCTETS flag if set.
+
+2019-11-21  Alan Modra  <amodra@gmail.com>
+
+	PR 273
+	* size.c (sysv_internal_sizer, sysv_internal_printer): Exclude
+	sections with no flag bits set.
+	* testsuite/binutils-all/size.exp: Allow $CODE$ as a text section.
+
+2019-11-21  Nick Clifton  <nickc@redhat.com>
+
+	* objcopy.c (merge_gnu_build_notes): Allow for the possibility
+	that the new notes might actually be larger than the original
+	notes.
+
+2019-11-21  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (is_pecoff_format): Rewrite
+	with positive logic and add more target triples.
+
+2019-11-19  Alan Modra  <amodra@gmail.com>
+
+	PR 24499
+	* objcopy.c (copy_file): Ignore --add-gnu-debuglink for archives.
+
+2019-11-19  Alan Modra  <amodra@gmail.com>
+
+	PR 24968
+	* objcopy.c (copy_object): For ELF output and non-ELF input without
+	arch, take arch from output file if not given by -B.  Don't
+	bfd_get_arch_info when we already have iarch.
+
+2019-11-19  Alan Modra  <amodra@gmail.com>
+
+	PR 25191
+	* objcopy.c (is_nondebug_keep_contents_section): Use bfd_get_flavour.
+	(copy_object): Likewise.
+	(setup_section): Likewise.  If flavour of input and output files
+	differ, restrict section flags to the intersection of input and
+	output bfd_applicable_section_flags.
+
+2019-11-19  Alan Modra  <amodra@gmail.com>
+
+	* bucomm.c (bfd_nonfatal_message): Add a space between program
+	name and file.
+
+2019-11-18  Alan Modra  <amodra@gmail.com>
+
+	PR 25198
+	* prdbg.c (tg_start_class_type): Correct scope of idbuf.
+
+2019-11-08  Alan Modra  <amodra@gmail.com>
+
+	PR 25172
+	* objdump.c (usage): Correct --stop-address description.
+
+2019-11-07  Nick Clifton  <nickc@redhat.com>
+
+	* ar.c (open_output_file): Check for filename validity before
+	prefixing with output directory.
+	Display the constructed output filename if in verbose mode.
+	(extract_file): Let open_output_file display the filename.
+
+2019-11-07  Nick Clifton  <nickc@redhat.com>
+
+	* objcopy.c (copy_object): Skip note sections that do not have
+	an output section.  Always copy note sections, even if no
+	changes are made.
+
+2019-11-06  Christian Eggers  <ceggers@gmx.de>
+
+	* readelf.c (IN_RANGE): Rename parameter OFF to NELEM. Add
+	comment.  Catch potential integer overflow and fix off by one
+	error whilst checking reloc location against section size.
+	(apply_relocations): Use IN_RANGE macro.
+
+2019-11-04  Fangrui Song  <maskray@google.com>
+
+	* objcopy.c (enum option_values): Add OPTION_KEEP_SECTION.
+	(SECTION_CONTEXT_KEEP): Define.  Adjust other SECTION_CONTEXT macros.
+	(copy_usage): Describe --keep-section.
+	(strip_usage): Likewise.
+	(copy_main): Handle SECTION_CONTEXT_KEEP.
+	(strip_main): Likewise.
+	(is_strip_section_1): Likewise.
+	* testsuite/binutils-all/objcopy.exp: Add tests.
+	* testsuite/binutils-all/keep-section-1.d: New test driver file.
+	* testsuite/binutils-all/keep-section-2.d: Likewise.
+	* doc/binutils.texi: Document the new feature.
+	* NEWS: Mention the new feature.
+
+2019-10-20  Palmer Dabbelt  <palmer@sifive.com>
+
+        * MAINTAINERS: Change palmer@sifive.com to palmer@dabbelt.com.
+
+2019-10-30  Fangrui Song  <i@maskray.me>
+	    Nick Clifton  <nickc@redhat.com>
+
+	* ar.c (emum long option numbers): Declare.  Use to provide
+	numerical values for long options.
+	(long_options): Add --output option.
+	(usage): Mention the --output option.
+	(open_output_file): New function.  Create a filepath for an output
+	file and open it.
+	(extract_file): Use open_output_file().
+	(open_output_file):
+	* testsuite/binutils-all/ar.exp: Add a test of the new feature.
+	* doc/binutils.texi: Document the new feature.
+	* NEWS: Mention the new feature.
+
+2019-10-26  Alan Modra  <amodra@gmail.com>
+
+	* objcopy.c (sort_gnu_build_notes): Correct sort of deleted
+	note2.
+
+2019-10-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfedit.c (elf_x86_feature): Report unknown x86 feature.
+
+2019-10-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfedit.c (update_gnu_property): Replace BYTE_PUT with byte_put.
+
+2019-10-25  Nick Clifton  <nickc@redhat.com>
+
+	* objcopy.c (struct merged_note_section): New structure.  Used to
+	chain together details of mergeable note sections.
+	(is_merged_note_section): Rename to is_megreable_note_section and
+	return true for note sections that use GNU_BUILD_ATTRS_SECTION_NAME
+	as a prefix.
+	(num_bytes): Delete
+	(objcoopy_internal_note): Add padded_namesz field.
+	(DEBUG_MERGE): New macro.  Set to non-zero to enable debugging of
+	the note merging code.
+	(gap_exists): Rename to overlaps_or_adjoins and return TRUE for
+	overlapping notes or adjoining notes.
+	(contained_by, is_deleted_note, is_version_note)
+	(compare_gnu_build_notes, sort_gnu_build_notes): New functions.
+	(merge_gnu_build_notes):  Rework.  Sort notes into a mergeable
+	order first.  Merge them.  Then sort them into an ascending
+	address order before writing them out.
+	(copy_object): Handle more than one mergeable note section.
+	* testsuite/binutils-all/note-2-32.d: Update for new merging
+	behaviour.
+	* testsuite/binutils-all/note-2-32.s: Likewise.
+	* testsuite/binutils-all/note-2-64.d: Likewise.
+	* testsuite/binutils-all/note-2-64.s: Likewise.
+	* testsuite/binutils-all/note-3-32.d: Likewise.
+	* testsuite/binutils-all/note-3-32.s: Likewise.
+	* testsuite/binutils-all/note-3-64.d: Likewise.
+	* testsuite/binutils-all/note-3-64.s: Likewise.
+	* testsuite/binutils-all/note-4-32.d: Likewise.
+	* testsuite/binutils-all/note-4-32.s: Likewise.
+	* testsuite/binutils-all/note-4-64.d: Likewise.
+	* testsuite/binutils-all/note-4-64.s: Likewise.
+	* testsuite/binutils-all/note-6-32.s: New test source file.
+	* testsuite/binutils-all/note-6-64.s: New test source file.
+	* testsuite/binutils-all/note-6-32.d: New test driver file.
+	* testsuite/binutils-all/note-6-64.d: New test driver file.
+	* testsuite/binutils-all/objcopy.exp: Run the new test.
+
+2019-10-25  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_program_headers): Check PT_PHDR p_offset
+	as well as p_vaddr.  Use p_filesz, not p_memsz, in vaddr test.
+
+2019-10-21  Alan Modra  <amodra@gmail.com>
+
+	PR 452
+	PR 25104
+	* ar.c (write_archive): Set BFD_ARCHIVE_FULL_PATH.
+	* doc/binutils.texi (extract from archive): Mention
+	restrictions when extracting from archives with full paths.
+	(ar P): Update to current P support.
+	(ar -X32_64): Fix spelling.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* objcopy.c (compare_section_lma): Correct comment.  Dereference
+	section pointer earlier and lose unnecessary const.  Style fixes.
+	Add final sort by id.
+
+2019-10-13  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Add a note to reset the
+	development flag back to true after making a point release.
+
+2019-10-12  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Tweak a few sections based on the
+	results of the 2.33.1 release.
+
+2019-10-11  Nick Clifton  <nickc@redhat.com>
+
+	* po/zh_TW.po: Updated Chinese (traditional) translation.
+
+2019-10-09  Alan Modra  <amodra@gmail.com>
+
+	PR 25079
+	* ar.c (decode_options): Don't try for command options if
+	write_armap or mri_mode is selected.
+
+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* readelf.c (display_msp430_gnu_attribute): New.
+	(process_arch_specific): Use msp430 specific handler for GNU
+	attributes.
+
+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (main): Fix tabdamage.
+	* readelf.c (CTF_DUMP): Likewise.
+	(options): Likewise.
+	(dump_section_as_ctf): Likewise.
+
+2019-08-03  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (dump_ctf): Use the default CTF archive member as the
+	parent even when no parent section is specified.
+	(dump_ctf_archive_member): Only import from the parent
+	if this is not the default ".ctf" member.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.am (LIBCTF): Mention the .la file.
+	(LIBCTF_NOBFD): New.
+	(readelf_DEPENDENCIES): Use it.
+	(readelf_LDADD): Likewise.
+	* Makefile.in: Regenerated.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* readelf.c (dump_ctf_symtab_name): Give default value.
+	(dump_ctf_strtab_name): Likewise.
+	(dump_section_as_ctf): Allow for the null string.
+
+2019-07-08  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (dump_ctf_archive_member): Dump the CTF header.
+	* readelf.c (dump_section_as_ctf): Likewise.
+
+2019-10-02  Niklas Gürtler  <profclonk@gmail.com>
+
+	PR 24942
+	* objcopy.c (copy_usage): Update description of
+	--set-section-alignment.
+	(copy_main): Interpret numeric argument of --set-section-alignment
+	as a byte alignment, not a power of two alignment.
+	* doc/binutils.texi: Update description of
+	--set-section-alignment.
+	* testsuite/binutils-all/set-section-alignment.d: New test.
+	* testsuite/binutils-all/objcopy.exp: Run the new test.
+
+2019-09-30  Alan Modra  <amodra@gmail.com>
+
+	PR 25046
+	* readelf.c (process_program_headers): Clear dynamic_addr and
+	dynamic_size earlier.
+
+2019-09-24  Alan Modra  <amodra@gmail.com>
+
+	PR 25031
+	* nm.c (print_format_string): New.
+	(get_print_format): Delete saved_format.  Move earlier.
+	(set_print_width): Call get_print_format.
+	(print_value): Use print_format_string.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* dlltool.c: Include coff-bfd.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	PR 25018
+	* dwarf.c (get_type_signedness): Delete ineffective pointer
+	comparison check.  Properly range check uvalue offset on
+	recursive call.
+	(read_and_display_attr_value): Range check uvalue offset before
+	calling get_type_signedness.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* ar.c (write_archive): Use bfd_set_thin_archive.
+
+2019-09-18  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/binutils-all/objdump.exp (objump -S): Update testcases.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* addr2line.c, * bucomm.c, * coffgrok.c, * dlltool.c, * nm.c,
+	* objcopy.c, * objdump.c, * od-elf32_avr.c, * od-macho.c,
+	* od-xcoff.c, * prdbg.c, * rdcoff.c, * rddbg.c, * rescoff.c,
+	* resres.c, * size.c, * srconv.c, * strings.c, * windmc.c: Update
+	throughout for bfd section macro and function changes.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* nm.c: Update bfd_get_section to bfd_asymbol_section throughout.
+	* objcopy.c: Likewise.
+	* objdump.c: Likewise.
+	* rdcoff.c: Likewise.
+	* objcopy.c (create_new_symbol): Use bfd_set_asymbol_name.
+	(filter_symbols): Likewise.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* doc/Makefile.am (MOSTLYCLEANFILES): Clean all man pages,
+	cxxfilt.man and binutils.info.
+	(MAINTAINERCLEANFILES): Remove.
+	* doc/Makefile.in: Re-generate.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* doc/Makefile.am: Remove references to binutils_TEXINFOS.
+	* doc/Makefile.in: Re-generate.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* doc/Makefile.am (install-data-loca): Remove target.
+	(DISTCLEANFILES): Remove variable.
+	* doc/Makefile.in: Re-generate.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* Makefile.in: Re-generate.
+	* configure: Re-generate.
+	* doc/Makefile.in: Re-generate.
+
+2019-09-16  Phil Blundell  <pb@pbcl.net>
+
+	* Makefile.in, configure. doc/Makefile.in: Regenerated.
+
+2019-09-11  Tom Tromey  <tom@tromey.com>
+
+	* objcopy.c (copy_archive): Update.
+	* bucomm.h (make_tempname, make_tempdir): Make argument const.
+	* bucomm.c (make_tempname, make_tempdir): Make argument const.
+
+2019-09-11  Alan Modra  <amodra@gmail.com>
+
+	PR 24907
+	* objdump.c (disassemble_bytes): Adjust code to avoid overlong
+	lines.  Correct max_reloc_offset_into_insn test.
+
+2019-09-10  Nick Clifton  <nickc@redhat.com>
+
+	PR 24907
+	* objdump.c (null_print): New function.
+	(disassemble_bytes): Delete previous_octets local and replace with
+	a test of the max_reloc_offset_into_insn field of the
+	bfd_arch_info structure.  If a reloc is a potential match for the
+	next insn, then perform a dummy disassembly in order to calculate
+	its real length.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-09-06  Alan Modra  <amodra@gmail.com>
+
+	* nm.c (print_object_filename_bsd, print_object_filename_sysv),
+	(print_object_filename_posix, print_archive_filename_bsd),
+	(print_archive_filename_sysv, print_archive_filename_posix),
+	(print_archive_member_bsd, print_archive_member_sysv),
+	(print_archive_member_posix): Constify parameter.
+	(struct output_fns <print_object_filename, print_archive_filename>),
+	(<print_archive_member>): Likewise.
+	* objcopy.c (copy_archive): Add cast for make_tempdir.
+
+2019-08-29  Alan Modra  <amodra@gmail.com>
+
+	* dwarf.c (check_uvalue): Remove unnecessary pointer checks.
+
+2019-08-28  Niklas Gürtler  <profclonk@gmail.com>
+
+	PR 24942
+	* objcopy.c (SECTION_CONTEXT_SET_ALIGNMENT): New constant.
+	(struct section_list): Add alignment field.
+	(command_line_switch): Add OPTION_SET_SECTION_ALIGNMENT.
+	(copy_options): Add --set-section-alignment.
+	(copy_usage): Describe --set-section-alignment.
+	(find_section_list): Initialise the alignment field.
+	(setup_section): Handle the alignment field.
+	(copy_main): Handle OPTION_SET_SECTION_ALIGNMENT.
+	* doc/binutils.texi: Document the new feature.
+	* NEWS: Mention the new feature.
+
+2019-08-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 24931
+	* objdump.c (source_comment): New static variable.
+	(option_values): Add OPTION_SOURCE_COMMENT.
+	(long_opions): Add --source-comment.
+	(print_line): If source comment is set, use it as a prefix to the
+	source code line.
+	(main): Handle OPTION_SOURCE_COMMENT.
+	* doc/binutils.texi: Document the new option.
+	* NEWS: Mention the new feature.
+	* testsuite/binutils-all/objdump.exp (test_objdump_S): Add tests
+	of the -S and --source-comment options.
+
+2019-08-27  Nick Clifton  <nickc@redhat.com>
+
+	PR 24510
+	* dwarf.c (MAX_CU_NESTING): New constant.
+	(level_type_signed): New static array.
+	(skip_attr_bytes): New function.
+	(get_type_signedness): New function.
+	(read_and_print_leb128): New function.
+	(display_discr_list): New function.
+	(read_and_display_attr_value): Add start parameter.
+	Use new functions when handling DW_AT_type and DW_AT_discr_list.
+	(read_and_display_attr): Add start parameter.  Pass to
+	read_and_display_attr_value.
+	(process_debug_info): Update call to read_and_display_attr.
+	(display_formatted_table): Likewise.
+	(display_debug_lines_decoded): Likewise.  Also add start
+	parameter.
+	(display_debug_lines): Likewise.
+	* testsuite/binutils-all/dwarf-attributes.S: Update discrimination
+	lists.
+	* testsuite/binutils-all/dwarf-attributes.W: Update expected
+	output.
+
+2019-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 24938
+	* debug.c (debug_write_type): Call empty_type for NULL type here..
+	(debug_write_type): ..rather than in just one case here.
+
+2019-08-23  Nick Clifton  <nickc@redhat.com>
+
+	PR 24829
+	* dwarf.c (check_uvalue): New function.  Ensures that a block's
+	size is valid.
+	(read_and_display_attr_value): Use check_value when processsing
+	DW_FORM_block<n> attributes.
+
+2019-08-22  Nick Clifton  <nickc@redhat.com>
+
+	PR 24921
+	* dwarf.c (process_cu_tu_index): Handle the case where a table
+	does not have any columns.
+
+2019-08-19  Alan Modra  <amodra@gmail.com>
+
+	PR 24898
+	* dwarf.c (display_debug_frames): Use the read_cie check and error
+	for augmentation data length.
+
+2019-08-17  Alan Modra  <amodra@gmail.com>
+
+	PR 24911
+	* dwarf.c (comp_addr_base): Dereference args.
+
+2019-08-16  Alan Modra  <amodra@gmail.com>
+
+	PR 24909
+	PR 23499
+	* readelf.c (get_symbol_version_string): Set sym_info earlier.
+
+2019-08-15  Nick Clifton  <nickc@redhat.com>
+
+	PR 24767
+	* doc/binutils.texi (nm): Document the 'n' symbol type.
+
+2019-08-15  Christophe Vidal  <support@krizalys.com>
+
+	* docs/binutils.texi: Fixed notice message disassembler options
+	section of the man page.
+
+2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>
+
+	* readelf.c (get_mips_dynamic_type): Return MIPS_XHASH dynamic type.
+	(get_mips_section_type_name): Return MI{S_XHASH name string.
+	(dynamic_section_mips_val): Initialize the .MIPS.xhash dynamic
+	info.
+	(process_symbol_table): Initialize the .MIPS.xhash section
+	pointer. Adjust the readelf output to support the new section.
+	(process_object): Set the .MIPS.xhash dynamic info to zero.
+
+2019-08-09  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/binutils-all/arm/in-order-all.d: Skip on pe, wince, coff.
+	* testsuite/binutils-all/arm/in-order.d: Likewise.
+	* testsuite/binutils-all/arm/out-of-order-all.d: Likewise.
+	* testsuite/binutils-all/arm/out-of-order.d: Likewise.
+
+2019-08-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 24887
+	* readelf.c (process_notes_at): Left justify the "Data size"
+	column heading.
+	* testsuite/binutils-all/i386/empty.d: Adjust for new output format.
+	* testsuite/binutils-all/i386/ibt.d: Likewise.
+	* testsuite/binutils-all/i386/pr21231a.d: Likewise.
+	* testsuite/binutils-all/i386/pr21231b.d: Likewise.
+	* testsuite/binutils-all/i386/shstk.d: Likewise.
+	* testsuite/binutils-all/note-2-32.d: Likewise.
+	* testsuite/binutils-all/note-2-64.d: Likewise.
+	* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/empty.d: Likewise.
+	* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/ibt.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.
+	* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/shstk.d: Likewise.
+
+2019-08-08  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/gentestdlls.c (main): Move declaration of loop
+	variable outside of the for() statement.
+
+2019-08-08  Jordan Rupprecht  <rupprecht@google.com>
+
+	* readelf.c (process_note): Mask unknown description data bytes.
+
+2019-08-08  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (get_data): Improve overflow checks.
+
+2019-08-07  Nick Clifton  <nickc@redhat.com>
+
+	PR 24777
+	* doc/binutils.texi: Ensure consistent formating of title strings
+	for man pages.  Extend the title of the size man page to be more
+	informative.
+
+2019-08-07  Omair Majid  <omajid@redhat.com>
+
+	* testsuite/binutils-all/objdump.exp
+	(test_objdump_dotnet_assemblies): Fix test to distinguish errors
+	in parsing simple pei-i386 and pei-x86-64 vs parsing the newly
+	introduced machine types.
+	* testsuite/gentestdlls.c (write_simple_dll): New function.
+	(main): Generate simple and Linux-specific variants of pei-i386
+	and pei-x86-64 files so both can be used by tests.
+
+2019-08-07  Alan Modra  <amodra@gmail.com>
+
+	PR 24876
+	* readelf.c (dump_ia64_unwind): Check that buffer is large
+	enough for "stamp" before reading.
+
+2019-08-05  Nick Clifton  <nickc@redhat.com>
+
+	PR 24874
+	* objcopy.c (merge_gnu_build_notes): Do not insist on the first
+	note being a version note.
+	Remove spurious debugging fprintf.
+
+2019-08-05  Nick Clifton  <nickc@redhat.com>
+
+	PR 24829
+	* readelf.c (apply_relocations): Catch potential integer overflow
+	whilst checking reloc location against section size.
+
+2019-08-02  Alan Modra  <amodra@gmail.com>
+
+	PR 24871
+	* readelf.c (ABSADDR): Delete.
+	(dump_ia64_unwind): Expand ABSADDR.  Check validity of info.section.
+
+2019-07-29  Martin Liska  <mliska@suse.cz>
+
+	PR 24768
+	* nm.c (filter_symbols): Set report_plugin_err if
+	error is reported.
+	(display_rel_file): Report error for a missing LTO plugin.
+
+2019-07-26  Alan Modra  <amodra@gmail.com>
+
+	PR 24798
+	* dwarf.c (process_cu_tu_index): Avoid integer overflow on 64-bit
+	systems by casting ncols and nslots expressions to size_t.  Display
+	number of columns and slots before giving up due to buffer overflow.
+	Use %u to display unsigned ints.  Perform more pointer wrap tests.
+
+2019-07-25  Tom Tromey <tromey@adacore.com>
+
+	PR 24809
+	* dwarf.c (display_debug_names): Display the contents of the
+	augmentation string, if it is printable.
+
+2019-07-25  Nick Clifton  <nickc@redhat.com>
+
+	PR 24837
+	* readelf.c (process_mips_specific): Check for buffer overflow
+	before reading reginfo information.
+
+2019-07-24  Nick Clifton  <nickc@redhat.com>
+
+	PR 13256
+	* ar.c (decode_options): Restart option scanning if no operation
+	is detected and argument remain to be scanned.
+
+2019-07-23  Nick Clifton  <nickc@redhat.com>
+
+	PR 24818
+	* objdump.c (is_relocateable): Delete.
+	(load_specific_debug_section): Test the abfd for relocations
+	directly, rather than relying upon is_relocateable.
+	(dump_dwarf): Delete initlialization of is_relocateable.
+
+2019-07-23  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (get_parisc_segment_type): Split off hpux entries..
+	(get_ia64_segment_type): ..and these..
+	(get_hpux_segment_type): ..to here.
+	(get_segment_type): Condition GNU_MBIND on osabi.  Use
+	get_hpux_segment_type.
+	(get_symbol_binding): Do not print UNIQUE for ELFOSABI_NONE.
+	(get_symbol_type): Do not print IFUNC for ELFOSABI_NONE.
+
+2019-07-23  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/objcopy.exp (elf64): Correct object
+	file used to set this variable.
+
+2019-07-23  Omar Majid  <omajid@redhat.com>
+
+	* Makefile.am (AUTOMAKE_OPTIONS): Add subdir-objects
+	(GENTESTDLLSPROG): Define.
+	(TEST_PROGS): Add GENTESTDLLSPROG.
+	* Makefile.in: Regenerate.
+	* testsuite/binutils-all/objdump.exp
+	(test_objdump_dotnet_assemblies): New proc.
+	Run the new proc.
+	* testsuite/gentestdlls.c: New source file.
+
+2019-06-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 24707
+	* objdump.c (slurp_symtab): Fail with a helpful error message if
+	the symbol table is too large.  Skip this check for MMO format
+	files.
+
+2019-06-26  Nick Clifton  <nickc@redhat.com>
+
+	PR 24703
+	* bucomm.c (bfd_nonfatal): If no bfd error code has been set then
+	indicate this in the output.
+	(bfd_nonfatal_message): Likewise.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* readelf.c (dump_ctf_indent_lines): Rename local variable
+	"spaces" to "blanks".
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* objdump.c (dump_ctf_indent_lines): Rename local variable
+	"spaces" to "blanks".
+
+2019-06-14  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.in: Regenerate.
+	* aclocal.m4: Regenerate.
+	* doc/Makefile.in: Regenerate.
+
+2019-06-12  Christos Zoulas  <christos@zoulas.com>
+
+	PR 24663
+	* readelf.c (process_netbsd_elf_note): Add support for
+	NT_NETBSD_PAX.
+	(process_note): Add support for PaX notes.
+
+2019-06-12  Christos Zoulas  <christos@zoulas.com>
+
+	PR 24665
+	* readelf.c (get_netbsd_elfcore_note_type): Add support for SH
+	core notes.
+
+2019-06-12  Christos Zoulas  <christos@zoulas.com>
+
+	PR 24664
+	* readelf.c (get_netbsd_elfcore_note_type): Add support for NetBSD
+	auxv notes.
+
+2019-06-11  Christos Zoulas  <christos@zoulas.com>
+
+	PR 24662
+	* readelf.c (get_alpha_symbol_other): New function.
+	(get_symbol_other): Use for Alpha symbols.
+	(is_32bit_pcrel_reloc): Add R_VAX_PCREL32.
+
+2019-06-11  Christos Zoulas  <christos@zoulas.com>
+
+	PR 24661
+	* readelf.c (decode_arm_unwind): Ensure that the local variable
+	'addr' is always initialised.
+
+2019-06-10  Christos Zoulas  <christos@zoulas.com>
+
+	PR 24651
+	* strings.c (print_strings): Use %u to print unsigned values in
+	decimal.
+
+2019-06-10  Christos Zoulas  <christos@zoulas.com>
+
+	PR 24649
+	* arsup.c (ar_open): Use asprintf in place of xmalloc and
+	sprintf.
+
+2019-06-03  Nick Clifton  <nickc@redhat.com>
+
+	Revert:
+	2019-05-29  Nick Clifton  <nickc@redhat.com>
+
+	* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based
+	targets.
+	(HAVE_LIBCTF): Define if libctf support is available.
+	* Makefile.am (LIBCTF): Set value to @LIBCTF@.
+	* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being
+	defined.
+	* readelf.c: Likewise.
+	* configure: Regenerate.
+	* Makefile.in: Regenerate.
+	* config.in: Regenerate.
+
+2019-05-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (make_ctfsect): Drop cts_type, cts_flags, and
+	cts_offset.
+	* readelf.c (shdr_to_ctf_sect): Likewise.
+
+2019-05-30  Nick Clifton  <nickc@redhat.com>
+
+	PR 24627
+	* readelf.c (process_version_sections): Add 0x prefix to address
+	display.  Correct indentation.
+
+2019-05-30  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (supports_gnu_unique): Add
+	s12z to targets not supporting this feature.
+
+2019-05-30  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (run_dump_test): Support
+	tcl procedures for xfail args.
+
+2019-05-29  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Add libctf to list of directories
+	that need updates in their ChangeLogs.
+
+2019-05-29  Nick Clifton  <nickc@redhat.com>
+
+	* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based
+	targets.
+	(HAVE_LIBCTF): Define if libctf support is available.
+	* Makefile.am (LIBCTF): Set value to @LIBCTF@.
+	* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being
+	defined.
+	* readelf.c: Likewise.
+	* configure: Regenerate.
+	* Makefile.in: Regenerate.
+	* config.in: Regenerate.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* MAINTAINERS: Add myself as CTF maintainer.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (ctf-api.h): New include.
+	(dump_ctf_section_info): New variable.
+	(dump_ctf_section_name): Likewise.
+	(usage): Describe new options.
+	(enum option_values): Add OPTION_CTF and OPTION_CTF_PARENT.
+	(main): Use them to add --ctf and --ctf-parent.
+	(read_section_stabs): Add new parameter, entsize_ptr.
+	(find_stabs_section): Adjust accordingly.
+	(make_ctfsect): New.
+	(dump_ctf_indent_lines): New.
+	(dump_ctf_archive_member): New.
+	(dump_ctf): New.
+	(dump_bfd): Call it.  Free resources afterwards.
+	* readelf.c (ctf-api.h): New include.
+	(CTF_DUMP): New.
+	(static bfd_boolean do_ctf): Likewise.
+	(dump_ctf_parent_name): Likewise.
+	(dump_ctf_symtab_name): Likewise.
+	(dump_ctf_strtab_name): Likewise.
+	(OPTION_CTF_DUMP): Likewise.
+	(OPTION_CTF_PARENT): Likewise.
+	(OPTION_CTF_SYMBOLS): Likewise.
+	(OPTION_CTF_STRINGS): Likewise.
+	(options): Add them.
+	(usage): Likewise.
+	(parse_args): Handle the new options, requesting CTF_DUMP.
+	(process_section_contents): Handle CTF_DUMP.
+	(shdr_to_ctf_sect): New.
+	(dump_ctf_indent_lines): New.
+	(dump_section_as_ctf): New.
+	(main): Free resources.
+	* Makefile.am (LIBCTF): New variable.
+	(objdump_DEPENDENCIES): Use it.
+	(readelf_DEPENDENCIES): Likewise.
+	(objdump_LDADD): Likewise.
+	(readelf_LDADD): Likewise.
+	* aclocal.m4: Regenerated.
+	* Makefile.in: Likewise.
+
+	* doc/binutils.texi (objdump): Document the new options.
+	(readelf): Likewise.
+	* doc/ctf.options.texi: New.
+	* doc/Makefile.in: Regenerated.
+	* NEWS: Mention the new feature.
+
+2019-05-27  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_section_groups): Continue processing groups
+	when sh_entsize exceeds group size.
+
+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* readelf.c (get_aarch64_dynamic_type): Handle DT_AARCH64_VARIANT_PCS.
+	(get_aarch64_symbol_other): New, handles STO_AARCH64_VARIANT_PCS.
+	(get_symbol_other): Call get_aarch64_symbol_other.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (disassemble_bytes): Set WIDE_OUTPUT in flags.
+
+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* MAINTAINERS: Add myself as the maintainer for BPF.
+
+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* readelf.c: Include elf/bpf.h.
+	(guess_is_rela): Hanle EM_BPF.
+	(dump_relocations): Likewise.
+	(is_32bit_abs_reloc): Likewise.
+	* testsuite/binutils-all/nm.exp: Add bpf-*-* to the list of
+	ELF targets.
+
+2019-05-21  Tamar Christina  <tamar.christina@arm.com>
+
+	* dwarf.c (dwarf_regnames_aarch64): Add SVE registers.
+	* testsuite/binutils-all/aarch64/sve-dwarf-registers.d: New test.
+	* testsuite/binutils-all/aarch64/sve-dwarf-registers.s: New test.
+
+2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	PR 14798
+	* testsuite/binutils-all/readelf.ss-mips: Update reference output.
+	* testsuite/binutils-all/readelf.ss-tmips: Likewise.
+
+2019-05-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/ca.po: Updated Catalan translation.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* NEWS: Mention Armv8.1-M Mainline and MVE.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* readelf.c (arm_attr_tag_MVE_arch): New array for Tag_MVE_arch values.
+	(arm_attr_public_tag arm_attr_public_tags): Add case for Tag_MVE_arch.
+
+2019-05-14  Jamey Hicks  <jamey.hicks@gmail.com>
+
+	PR 19921
+	* objcopy.c: Add new option --verilog-data-width.  Use it to set
+	the value of VerilogDataWidth.
+	* doc/binutils.texi: Document the new option.
+	* testsuite/binutils-all/objcopy.exp: Run tests of new option.
+	* testsuite/binutils-all/verilog-1.hex: New file.
+	* testsuite/binutils-all/verilog-2.hex: New file.
+	* testsuite/binutils-all/verilog-4.hex: New file.
+	* testsuite/binutils-all/verilog-8.hex: New file.
+	* NEWS: Mention the new feature.
+
+2019-05-10  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/objdump.exp (test_objdump_disas_limited),
+	(test_objdump_content_limited): Add text arg, use in place of .text.
+	(bintest_signed.o): Call get_standard_section_names for name of
+	text section.
+
+2019-05-08  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* objdump.c (sign_extend_address): New function.
+	(dump_bfd): Sign-extend user-specified start/stop addresses
+	for targets that need it.
+	* testsuite/binutils-all/objdump.exp: Add tests for objdump
+	with start and stop addresses in higher address ranges.
+
+2019-05-01  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* testsuite/binutils-all/objdump.exp: Correct executable
+	spelling.
+	* testsuite/binutils-all/compress.exp: Likewise.
+
+2019-05-01  Nick Clifton  <nickc@redhat.com>
+
+	PR 24507
+	* nm.c: (print_format): New variable.
+	(value_format_32bit, value_format_64bit): Delete.
+	(set_print_radix): Remove code to alter value_format strings.
+	(set_output_format): Record chosen format in print_format.
+	(get_print_format): New function - constructs a printf formatting
+	string according to the requirements of size, radix, and output
+	format.
+	(print_value): Use get_print_format.
+	* testsuite/binutils-all/nm.exp: Add tests of "nm --format=posix"
+	and "nm -t d".
+
+2019-04-30  Alan Modra  <amodra@gmail.com>
+
+	* wrstabs.c (stab_start_class_type): Add assert to work around
+	gcc9 warning.  Tidy.
+
+2019-04-24  Nick Clifton  <nickc@redhat.com>
+
+	* objcopy.c (strip_main): Do not enable note merging by default if
+	just stripping debug or dwo information.
+	* doc/binutils.texi (strip): Update documentation.
+
+2019-04-23  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Add note to update the symbolic
+	link from "docs" to "docs-2.x" on the sourceware website.
+
+2019-04-16  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/copy-2.d: Don't run for ns32k-*-*.
+	* testsuite/binutils-all/copy-3.d: Likewise.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* readelf.c (arm_attr_tag_CPU_arch): Add entry for Armv8.1-M Mainline.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* readelf.c (decode_x86_isa): Handle
+	GNU_PROPERTY_X86_ISA_1_AVX512_BF16.
+	* testsuite/binutils-all/i386/pr21231b.d: Updated.
+	* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/binutils-all/nm.exp: Count i386-moss as ELF.
+
+2019-03-26  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/binutils-all/aarch64/in-order-all.d: Update.
+	* testsuite/binutils-all/aarch64/in-order.d: Likewise.
+	* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.
+	* testsuite/binutils-all/aarch64/out-of-order.d: Likewise.
+	* testsuite/binutils-all/aarch64/out-of-order.s: Likewise.
+	* testsuite/binutils-all/arm/in-order-all.d: Likewise.
+	* testsuite/binutils-all/arm/in-order.d: Likewise.
+	* testsuite/binutils-all/arm/out-of-order-all.d: Likewise.
+	* testsuite/binutils-all/arm/out-of-order.d: Likewise.
+	* testsuite/binutils-all/arm/out-of-order.s: Likewise.
+
+2019-03-26  Nick Clifton  <nickc@redhat.com>
+
+	* MAINTAINERS: Take over Dave Brolley's maintainerships for FR30,
+	FRV and MEP.
+
+2019-03-26  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (dump_relocs_in_section): Warning fix.
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/binutils-all/arm/in-order-all.d: New test.
+	* testsuite/binutils-all/arm/in-order.d: New test.
+	* testsuite/binutils-all/arm/objdump.exp: Support .d tests.
+	* testsuite/binutils-all/arm/out-of-order-all.d: New test.
+	* testsuite/binutils-all/arm/out-of-order.T: New test.
+	* testsuite/binutils-all/arm/out-of-order.d: New test.
+	* testsuite/binutils-all/arm/out-of-order.s: New test.
+
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/binutils-all/aarch64/in-order-all.d: New test.
+	* testsuite/binutils-all/aarch64/out-of-order-all.d: New test.
+	* testsuite/binutils-all/aarch64/out-of-order.d:
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/binutils-all/aarch64/in-order.d: New test.
+	* testsuite/binutils-all/aarch64/out-of-order.d: Disassemble data as
+	well.
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* objdump.c (disassemble_bytes): Pass stop_offset.
+	* testsuite/binutils-all/aarch64/out-of-order.T: New test.
+	* testsuite/binutils-all/aarch64/out-of-order.d: New test.
+	* testsuite/binutils-all/aarch64/out-of-order.s: New test.
+
+2019-03-19  Nick Clifton  <nickc@redhat.com>
+
+	PR 24360
+	* objdump.c (load_specific_debug_section): Check that the amount
+	of memory to be allocated matches the size of the section.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+
+	* readelf.c (get_aarch64_dynamic_type): Add case for
+	DT_AARCH64_PAC_PLT.
+	(dynamic_section_aarch64_val): Likewise.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+	    Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* readelf.c (get_aarch64_dynamic_type): New.
+	(get_dynamic_type): Use above for EM_AARCH64.
+	(dynamic_section_aarch64_val): New.
+	(process_dynamic_section): Use above for EM_AARCH64.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+
+	* readelf.c (decode_aarch64_feature_1_and): New.
+	(print_gnu_property_note): Add case for AArch64 gnu notes.
+
+2019-03-12  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (load_specific_debug_section): Don't compare section
+	size against file size.
+	(dump_relocs_in_section): Don't compare reloc size against file size.
+	Print "failed to read relocs" on bfd_get_reloc_upper_bound error.
+
+2019-03-05  Nick Clifton  <nickc@redhat.com>
+
+	PR 24295
+	* doc/binutils.texi (ar cmdline): Fix spelling mistake.
+
+2019-03-05  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2019-03-05  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	PR 24287
+	* testsuite/lib/binutils-common.exp (run_dump_test): Replace a use
+	of "lmap" with a "foreach" loop.
+
+2019-03-04  Nick Clifton  <nickc@redhat.com>
+
+	PR 24281
+	* objcopy.c (copy_archive): Do not copy thin  archives.
+
+2019-02-27  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* testsuite/lib/binutils-common.exp: Allow multiple "as" lines.
+
+2019-02-25  Nick Clifton  <nickc@redhat.com>
+
+	* objdump.c (sym_ok): New function.
+	(find_symbol_for_address): Use new function.
+	(disassemble_section): Compare sections by name, not pointer.
+	(dump_dwarf): Move code to initialise byte_get pointer and iterate
+	over separate debug files from here to ...
+	(dump_bfd): ... here.  Add parameter indicating that a separate
+	debug info file is being dumped.  For main file, pull in the
+	symbol tables from all separate debug info files.
+	(display_object): Update call to dump_bfd.
+	* doc/binutils.texi: Document extened behaviour of the
+	--dwarf=follow-links option.
+	* NEWS: Mention this new feature.
+	* testsuite/binutils-all/objdump.WK2: Update expected output.
+	* testsuite/binutils-all/objdump.exp (test_follow_debuglink): Add
+	options and dump file parameters.
+	Add extra test.
+	* testsuite/binutils-all/objdump.WK3: New file.
+	* testsuite/binutils-all/readelf.exp: Change expected output for
+	readelf -wKis test.
+	* testsuite/binutils-all/readelf.wKis: New file.
+
+2019-02-22  Nick Clifton  <nickc@redhat.com>
+
+	PR 23843
+	* dwarf.h (struct separate_info): New structure for containing
+	information on separate debug info files.
+	* dwarf.c (struct dwo_info): New structure for containing dwo
+	links.
+	(first_dwo_info): Chain of dwo_info structures.
+	(first_separate_file): Chain of separate_info structures.
+	(separate_debug_file, separate_debug_filename): Delete.
+	(fetch_alt_indirect_string): Scan all separate debug info files
+	for the requested string.
+	(add_dwo_info): New function.
+	(add_dwo_name): New function.
+	(add_dwo_dir): New function.
+	(add_dwo_id: New function.
+	(free_dwo_info): New function.
+	(read_and_display_attr_value): Store DWO data using the new
+	functions.
+	(load_debug_section_with_follow): If necessary, scan the list of
+	separate debug info files for the requested section.
+	(add_separate_debug_file): New function.
+	(load_separate_debug_info): Call add_separate_debug_file to store
+	the information on the newly loaded file.
+	(load_dwo_file): Likewise.
+	(load_separate_debif_file): Rename to load_separate_debug_files.
+	Change return type to boolean.  If following links then attempt to
+	load all separate debug info files, not just the first one.
+	(free_debug_memory): Release memory in dwo_info and separate_info
+	chains.
+	* objdump.c (dump_dwarf): Iterate over all loaded debg info files.
+	* readelf.c (process_object): Likewise.
+	* doc/debug.options.texi: Update descriptions of links and
+	follow-links options.
+	* testsuite/binutils-all/objdump.WK2: Update expected output.
+	* testsuite/binutils-all/readelf.k2: Likewise.
+	* NEWS: Announce the new feature.
+
+2019-02-21  Nick Clifton  <nickc@redhat.com>
+
+	PR 24247
+	* unwind-ia64.c: Include sysdep.h.
+	(unw_decode_x1): Check current pointer against end pointer before
+	accessing memory.
+	(unw_decode_x2): Likewise.
+	(unw_decode_x3): Likewise.
+	(unw_decode_x4): Likewise.
+	(unw_decode_r2): Likewise.
+	(unw_decode_p2_p5): Likewise.
+	(unw_decode_p7_p10): Likewise.
+	(unw_decode): Likewise.
+
+2019-02-20  Nick Clifton  <nickc@redhat.com>
+
+	PR 24246
+	* readelf.c (print_stapsdt_note): Harden against corrupt notes.
+
+	PR 24244
+	* unwind-ia64.c (unw_decode_uleb128): Add end parameter, use it to
+	prevent walking off the end of the buffer.
+	(unw_decode_x1): Add end paramter, pass it to unw_decode_uleb128.
+	(unw_decode_x2): Likewise.
+	(unw_decode_x3): Likewise.
+	(unw_decode_x4): Likewise.
+	(unw_decode_r2): Pass the end parameter to unw_decode_uleb128.
+	(unw_decode_r3): Likewise.
+	(unw_decode_p7_p10): Likewise.
+	(unw_decode_b2): Likewise.
+	(unw_decode_b3_x4): Likewise.
+
+	PR 24243
+	* readelf.c (process_mips_specific): Check for an options section
+	that is too small to even contain a single option.
+
+	PR 24242
+	* readelf.c (print_ia64_vms_note): Harden against corrupt notes.
+
+2019-02-20  Alan Modra  <amodra@gmail.com>
+
+	PR 24132
+	PR 24138
+	* readelf.c (get_data): Avoid possibility of overflow when
+	checking for a read that may extend past end of file.
+	(process_program_headers): Likewise.
+
+2019-02-20  Alan Modra  <amodra@gmail.com>
+
+	PR 24233
+	* objdump.c (dump_bfd_private_header): Print warning if
+	bfd_print_private_bfd_data returns false.
+
+2019-02-12  Nick Clifton  <nickc@redhat.com>
+
+	PR 23440
+	* README-how-to-make-a-release: Use git clean to delete spurious
+	files from the local source repository.
+
+2019-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* size.c (berkeley_format): Delete.
+	(enum output_format): New enum.
+	(selected_output_format): New variable.
+	(usage): Update to mention GNU format.
+	(main): Update to extract options, and select format as needed.
+	Handle GNU format where needed.
+	(berkeley_sum): Renamed to...
+	(berkeley_or_gnu_sum): ...this, and updated to handle both formats.
+	(berkeley_format): Renamed to...
+	(berkeley_or_gnu_format): ...this, and updated to handle both
+	formats.
+	(print_sizes): Handle GNU format.
+	* doc/binutils.texi (size): Document new GNU format.
+	* testsuite/binutils-all/size.exp: Add test of extended
+	functionality.
+	* NEWS: Mention new functionality.
+
+2019-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* doc/binutils.texi (size): Update example output for Berkeley
+	format output.
+
+2019-02-07  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Add a note about updating the
+	obsolete targets in the bfd/config.bfd file.
+
+2019-02-04  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Add more notes on making a release.
+
+2019-01-25  Nick Clifton  <nickc@redhat.com>
+
+	PR 24131
+	* readelf.c (process_notes_at): Prevent an illegal memory access
+	when the note's namesize is zero.
+	(decode_tic6x_unwind_bytecode): Add code to handle the case where
+	no registers are specified in a frame pop instruction.
+
+2019-01-25  Nick Clifton  <nickc@redhat.com>
+
+	* po/bg.po: Updated Bulgarian translation.
+
+2019-01-23  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+	* po/pt.po: Updated Portuguese translation.
+
+2019-01-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/uk.po: Updated Ukranian translation.
+
+2019-01-19  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* binutils/po/binutils.pot.
+
+	* README-how-to-make-a-release: Update description on how to make
+	a branch.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-17  Nick Clifton  <nickc@redhat.com>
+
+	* objdump.c (disassemble_section): When disassembling from a
+	symbol only stop at the next symbol if the original symbol was not
+	a function symbol.  Otherwise continue disassembling until a new
+	function is reached.
+	* testsuite/binutils-all/objdump.exp: Add tests of extended
+	functionality.
+	* testsuite/binutils-all/disasm.s: New test source file.
+
+2019-01-16  Kito Cheng  <kito@andestech.com>
+	    Nelson Chu  <nelson@andestech.com>
+
+	* readelf.c (get_riscv_section_type_name): New function.
+	(get_section_type_name): Add handler for RISC-V.
+	(riscv_attr_tag_t): Declare.
+	(riscv_attr_tag): New.
+	(display_riscv_attribute): New function.
+	(process_attributes): Add handler for RISC-V.
+	* testsuite/binutils-all/strip-3.d: Remove .riscv.attribute
+	section.
+
+2019-01-10  Nick Clifton  <nickc@redhat.com>
+
+	PR 23963
+	* objdump.c (sanitize_string): New function.  Removes control
+	characters from symbol names.
+	(dump_section_header): Use new function.
+	(objdump_print_symname): Likewise.
+	(objdump_print_addr_with_sym): Likewise.
+	(show_line): Likewise.
+	(disassemble_bytes): Likewise.
+	(disassemble_section): Likewise.
+	(load_specific_debug_section): Likewise.
+	(read_section_stabs): Likewise.
+	(print_section_stabs): Likewise.
+	(dump_section): Likewise.
+	(dump_reloc_set): Likewise.
+	(dump_relocs_in_section): Likewise.
+	(dump_bfd): Likewise.
+	(display_any_bfd): Likewise.
+
+2019-01-09  Nick Clifton  <nickc@redhat.com>
+
+	PR 24049
+	* readelf.c (process_archive): Use arch.file_name in error
+	messages until the qualified name is available.
+
+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+
+	* configure: Regenerate.
+
+2019-01-09  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/cxxfilt.exp: Pass --no-strip-underscores
+	unconditionally to tests needing the option rather than via a
+	list of targets.
+
+2019-01-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 24044
+	* cxxfilt.c (hp_symbol_characters): Delete.
+	(main): Remove depcreated demangling styles.
+	* stabs.c (parse_stab_argtypes): Remove support for old gnu v2
+	demangling opnames.
+	* testsuite/binutils-all/cxxfilt.exp: Use the
+	--no-strip-underscore option for targets that do prefix their
+	symbols with underscores.
+	Update tests to eliminate those that use gnu v2 encoding.
+
+2019-01-08  Tamar Christina  <tamar.christina@arm.com>
+
+	PR 24065
+	* testsuite/binutils-all/copy-6.d: New test.
+	* testsuite/binutils-all/objcopy.exp: Use it.
+
+2019-01-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (run_dump_test): Don't prepend
+	$srcdir/$subdir to source file name if it starts with "./".
+
+2019-01-05  Yoshinori Sato <ysato@users.sourceforge.jp>
+
+	* readelf.c (get_machine_flags): Add RXv3 output.
+
+2019-01-04  Nick Clifton  <nickc@redhat.com>
+
+	PR 24005
+	* objdump.c (load_specific_debug_section): Check for integer
+	overflow before attempting to allocate contents.
+
+2019-01-04  Nick Clifton  <nickc@redhat.com>
+
+	PR 24001
+	* objcopy.c (copy_object): Free dhandle after writing out the
+	debug information.
+	* objdump.c (dump_bfd): Free dhandle after printing out the debug
+	information.
+
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/elfcpp/ChangeLog-2019 b/elfcpp/ChangeLog-2019
new file mode 100644
index 0000000000..3f7e39e6e3
--- /dev/null
+++ b/elfcpp/ChangeLog-2019
@@ -0,0 +1,69 @@
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-08-02  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.h (R_PPC64_TPREL34, R_PPC64_DTPREL34),
+	(R_PPC64_GOT_TLSGD34, R_PPC64_GOT_TLSLD34),
+	(R_PPC64_GOT_TPREL34, R_PPC64_GOT_DTPREL34): Define.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.h (R_PPC64_PCREL_OPT, R_PPC64_D34, R_PPC64_D34_LO),
+	(R_PPC64_D34_HI30, R_PPC64_D34_HA30, R_PPC64_PCREL34),
+	(R_PPC64_GOT_PCREL34, R_PPC64_PLT_PCREL34, R_PPC64_PLT_PCREL34_NOTOC),
+	(R_PPC64_ADDR16_HIGHER34, R_PPC64_ADDR16_HIGHERA34),
+	(R_PPC64_ADDR16_HIGHEST34, R_PPC64_ADDR16_HIGHESTA34),
+	(R_PPC64_REL16_HIGHER34, R_PPC64_REL16_HIGHERA34),
+	(R_PPC64_REL16_HIGHEST34, R_PPC64_REL16_HIGHESTA34),
+	(R_PPC64_D28, R_PPC64_PCREL28): Define.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC): Define.
+
+2019-06-28  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.h (R_PPC64_REL16_HIGH, R_PPC64_REL16_HIGHA),
+	(R_PPC64_REL16_HIGHER, R_PPC64_REL16_HIGHERA),
+	(R_PPC64_REL16_HIGHEST, R_PPC64_REL16_HIGHESTA): Define.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* arm.h (Tag_MVE_arch): Define new enum value.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm.h (R_ARM_THM_BF12): New relocation code.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm.h (R_ARM_THM_BF18): New relocation code.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* arm.h (R_ARM_THM_BF16): New relocation code.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/gas/ChangeLog-2019 b/gas/ChangeLog-2019
new file mode 100644
index 0000000000..dc028c9f05
--- /dev/null
+++ b/gas/ChangeLog-2019
@@ -0,0 +1,4884 @@
+2019-12-27  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (output_branch, output_jump,
+	output_interseg_jump): Also emit skipped prefix warning in Intel
+	syntax mode. Name instruction in the warning text.
+	* testsuite/gas/i386/mpx-inval-1.l,
+	testsuite/gas/i386/notrackbad.l,
+	testsuite/gas/i386/x86-64-notrackbad.l: Adjust expectations.
+
+2019-12-27  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (output_branch): Handle BND prefix the same
+	way as other prefixes. Emit it last before REX.
+	(output_jump): Emit BND before REX.
+	(output_interseg_jump): Don't emit REX.
+	* testsuite/gas/i386/x86-64-branch-2.s,
+	testsuite/gas/i386/x86-64-branch-3.s,
+	testsuite/gas/i386/x86-64-mpx-branch-1.s,
+	testsuite/gas/i386/x86-64-mpx-branch-2.s: Add REX.W cases.
+	* testsuite/gas/i386/x86-64-mpx-branch-2.d: Match output against
+	x86-64-mpx-branch-1.d.
+	* testsuite/gas/i386/x86-64-branch-2.d,
+	testsuite/gas/i386/x86-64-branch-3.d,
+	testsuite/gas/i386/x86-64-mpx-branch-1.d: Adjust expectations.
+
+2019-12-27  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (flip_code16): New.
+	(output_branch, output_jump): Use it.
+	(i386_displacement): Restrict template set to just direct
+	branches when handling a respective operand. Don't set Disp16
+	when in Intel64 mode and there's a respective template.
+	* testsuite/gas/i386/i386.exp: Convert x86-64-branch-3 from list
+	to dump test. Drop its XFail again.
+	* testsuite/gas/i386/x86-64-branch-3.d: New.
+	* testsuite/gas/i386/x86-64-branch-3.l: Delete.
+	* testsuite/gas/i386/x86-64-branch-3.s: Add XBEGIN case.
+
+2019-12-27  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (i386_addressing_mode): Declare.
+	(match_template): Don't transform displacement width flags for
+	non-indirect branches. Re-write transformation logic.
+	(i386_displacement): Also check BaseIndex when deciding whether
+	an operand belongs to a direct branch. Restrict which DispNN get
+	set.
+	(i386_finalize_displacement): Set Disp8 for JumpByte templates.
+	* config/tc-i386-intel.c (i386_intel_operand): Don't set Disp32
+	for 64-bit addressing.
+	* testsuite/gas/i386/i386.exp: XFail x86-64-branch-3.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* doc/as.texi: Remove mention of tic80.
+
+2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25274
+	* config/tc-i386.c (optimize_encoding): Also check R12-R15
+	registers for "test $imm7, %r64/%r32/%r16 -> test $imm7, %r8"
+	optimization.
+	* testsuite/gas/i386/x86-64-optimize-3.s: Add tests for test
+	with r12.
+	* testsuite/gas/i386/x86-64-optimize-3.d: Updated.
+	* testsuite/gas/i386/x86-64-optimize-3b.d: Likewise.
+
+2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/align-branch-1.s: New file.
+	* testsuite/gas/i386/align-branch-1a.d: Likewise.
+	* testsuite/gas/i386/align-branch-1b.d: Likewise.
+	* testsuite/gas/i386/align-branch-1c.d: Likewise.
+	* testsuite/gas/i386/align-branch-1d.d: Likewise.
+	* testsuite/gas/i386/align-branch-1e.d: Likewise.
+	* testsuite/gas/i386/align-branch-1f.d: Likewise.
+	* testsuite/gas/i386/align-branch-1g.d: Likewise.
+	* testsuite/gas/i386/align-branch-1h.d: Likewise.
+	* testsuite/gas/i386/align-branch-2.s: Likewise.
+	* testsuite/gas/i386/align-branch-2a.d: Likewise.
+	* testsuite/gas/i386/align-branch-2b.d: Likewise.
+	* testsuite/gas/i386/align-branch-2c.d: Likewise.
+	* testsuite/gas/i386/align-branch-3.d: Likewise.
+	* testsuite/gas/i386/align-branch-3.s: Likewise.
+	* testsuite/gas/i386/align-branch-4.s: Likewise.
+	* testsuite/gas/i386/align-branch-4a.d: Likewise.
+	* testsuite/gas/i386/align-branch-4b.d: Likewise.
+	* testsuite/gas/i386/align-branch-5.d: Likewise.
+	* testsuite/gas/i386/align-branch-5.s: Likewise.
+	* testsuite/gas/i386/align-branch-6.d: Likewise.
+	* testsuite/gas/i386/align-branch-6.s: Likewise.
+	* testsuite/gas/i386/align-branch-7.d: Likewise.
+	* testsuite/gas/i386/align-branch-7.s: Likewise.
+	* testsuite/gas/i386/align-branch-8.d: Likewise.
+	* testsuite/gas/i386/align-branch-8.s: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1.s: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1a.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1b.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1c.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1d.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1e.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1f.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1g.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1h.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-2.s: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-2a.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-2b.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-2c.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-3.s: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-4.s: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-4a.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-4b.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-6.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-7.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-7.s: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-8.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-8.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (OPTION_MBRANCHES_WITH_32B_BOUNDARIES): New.
+	(md_longopts): Add -mbranches-within-32B-boundaries.
+	(md_parse_option): Handle -mbranches-within-32B-boundaries.
+	(md_show_usage): Add -mbranches-within-32B-boundaries.
+
+2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (_i386_insn): Add has_gotpc_tls_reloc.
+	(tls_get_addr): New.
+	(last_insn): New.
+	(align_branch_power): New.
+	(align_branch_kind): New.
+	(align_branch_bit): New.
+	(align_branch): New.
+	(MAX_FUSED_JCC_PADDING_SIZE): New.
+	(align_branch_prefix_size): New.
+	(BRANCH_PADDING): New.
+	(BRANCH_PREFIX): New.
+	(FUSED_JCC_PADDING): New.
+	(i386_generate_nops): Support BRANCH_PADDING and FUSED_JCC_PADDING.
+	(md_begin): Abort if align_branch_prefix_size <
+	MAX_FUSED_JCC_PADDING_SIZE.
+	(md_assemble): Set last_insn.
+	(maybe_fused_with_jcc_p): New.
+	(add_fused_jcc_padding_frag_p): New.
+	(add_branch_prefix_frag_p): New.
+	(add_branch_padding_frag_p): New.
+	(output_insn): Generate a BRANCH_PADDING, FUSED_JCC_PADDING or
+	BRANCH_PREFIX frag and terminate each frag to align branches.
+	(output_disp): Set i.has_gotpc_tls_reloc to TRUE for GOTPC and
+	relaxable TLS relocations.
+	(output_imm): Likewise.
+	(i386_next_non_empty_frag): New.
+	(i386_next_jcc_frag): New.
+	(i386_classify_machine_dependent_frag): New.
+	(i386_branch_padding_size): New.
+	(i386_generic_table_relax_frag): New.
+	(md_estimate_size_before_relax): Handle COND_JUMP_PADDING,
+	FUSED_JCC_PADDING and COND_JUMP_PREFIX frags.
+	(md_convert_frag): Handle BRANCH_PADDING, BRANCH_PREFIX and
+	FUSED_JCC_PADDING frags.
+	(OPTION_MALIGN_BRANCH_BOUNDARY): New.
+	(OPTION_MALIGN_BRANCH_PREFIX_SIZE): New.
+	(OPTION_MALIGN_BRANCH): New.
+	(md_longopts): Add -malign-branch-boundary=,
+	-malign-branch-prefix-size= and -malign-branch=.
+	(md_parse_option): Handle -malign-branch-boundary=,
+	-malign-branch-prefix-size= and -malign-branch=.
+	(md_show_usage): Display -malign-branch-boundary=,
+	-malign-branch-prefix-size= and -malign-branch=.
+	(i386_target_format): Set tls_get_addr.
+	(i386_cons_align): New.
+	* config/tc-i386.h (i386_cons_align): New.
+	(md_cons_align): New.
+	(i386_generic_table_relax_frag): New.
+	(md_generic_table_relax_frag): New.
+	(i386_tc_frag_data): Add u, padding_address, length,
+	max_prefix_length, prefix_length, default_prefix, cmp_size,
+	classified and branch_type.
+	(TC_FRAG_INIT): Initialize u, padding_address, length,
+	max_prefix_length, prefix_length, default_prefix, cmp_size,
+	classified and branch_type.
+	* doc/c-i386.texi: Document -malign-branch-boundary=,
+	-malign-branch= and -malign-branch-prefix-size=.
+
+2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* write.c (md_generic_table_relax_frag): New.  Defined to
+	relax_frag if not defined.
+	(relax_segment): Call md_generic_table_relax_frag instead of
+	relax_frag.
+
+2019-12-12  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-aarch64.c (get_aarch64_insn): Avoid signed overflow.
+	* config/tc-metag.c (parse_dalu): Likewise.
+	* config/tc-tic4x.c (md_pcrel_from): Likewise.
+	* config/tc-tic6x.c (tic6x_output_unwinding): Likewise.
+	* config/tc-csky.c (parse_fexp): Use an unsigned char temp buffer.
+	Don't use register keyword.  Avoid signed overflow and remove now
+	unneccesary char masks.  Formatting.
+	* config/tc-ia64.c (operand_match): Don't use shifts to sign extend.
+	* config/tc-mep.c (mep_apply_fix): Likewise.
+	* config/tc-pru.c (md_apply_fix): Likewise.
+	* config/tc-riscv.c (load_const): Likewise.
+	* config/tc-nios2.c (md_apply_fix): Likewise.  Don't potentially
+	truncate fixup before right shift.  Tidy BFD_RELOC_NIOS2_HIADJ16
+	calculation.
+
+2019-12-12  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-evax.c (crc32, encode_32, encode_16, decode_16):
+	Remove unnecessary prototypes.
+	(number_of_codings): Delete, use ARRAY_SIZE instead throughout.
+	(codings, decodings): Make arrays of unsigned char.
+	(crc32): Use unsigned variables.  Delete unnecessary mask.
+	(encode_32, encode_16): Return unsigned char*, and make static
+	buffer an unsigned char array.
+	(decode_16): Make arg an unsigned char*.  Remove useless casts.
+	(shorten_identifier): Use unsigned char crc_chars.
+	(is_truncated_identifier): Make ptr an unsigned char*.
+
+2019-12-11  Wilco Dijkstra  <wdijkstr@arm.com>
+
+	* config/tc-arm.c (warn_on_restrict_it): Add new variable.
+	(it_fsm_post_encode): Check warn_on_restrict_it.
+	(arm_option_table): Add -mwarn-restrict-it/-mno-warn-restrict-it.
+	* testsuite/gas/arm/armv8-2-fp16-scalar-bad.d: Add -mwarn-restrict-it.
+	* testsuite/gas/arm/armv8-2-fp16-scalar-bad-ext.d: Likewise.
+	* testsuite/gas/arm/armv8-a-bad.d: Likewise.
+	* testsuite/gas/arm/armv8-a-it-bad.d: Likewise.
+	* testsuite/gas/arm/armv8-r-bad.d: Likewise.
+	* testsuite/gas/arm/armv8-r-it-bad.d: Likewise.
+	* testsuite/gas/arm/sp-pc-validations-bad-t-v8a.d: Likewise.
+	* testsuite/gas/arm/udf.d: Likewise.
+
+2018-12-11  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (md_assemble): Extend SSE check conditional.
+	* testsuite/gas/i386/sse-check.s: Add SSE4a and SHA tests.
+	Extend GFNI tests.
+	* testsuite/gas/i386/sse-check.d: Adjust expectations.
+	* testsuite/gas/i386/sse-check-error.l,
+	testsuite/gas/i386/x86-64-sse-check-error.l: Likewise.
+	* testsuite/gas/i386/sse-check-warn.e: Likewise.
+
+2019-12-10  Vladimir Murzin  <vladimir.murzin@arm.com>
+
+	* config/tc-arm.c (s_arm_arch): Set selected_ctx_ext_table.
+	* testsuite/gas/arm/mve-arch-ext.s: New.
+	* testsuite/gas/arm/mve-arch-ext.d: New.
+
+2019-12-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386-intel.c (O_oword_ptr): Move.
+	(O_xmmword_ptr): Alias to O_oword_ptr.
+	(O_fword_ptr, O_tbyte_ptr, O_ymmword_ptr, O_zmmword_ptr): Adjust
+	expansion.
+	(i386_intel_simplify, i386_intel_operand): Fold O_oword_ptr and
+	O_xmmword_ptr cases, leaving comments.
+
+2019-12-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386-intel.c (O_mmword_ptr): Define.
+	(i386_types): Add mmword entry.
+	(i386_intel_simplify, i386_intel_operand): Add comment.
+	* testsuite/gas/i386/intel-expr.s: Also test mmword and zmmword.
+	* testsuite/gas/i386/intelok.s: Also test "mmword ptr".
+	* testsuite/gas/i386/intel-expr.d, testsuite/gas/i386/intelok.d,
+	testsuite/gas/i386/intelok.e: Adjust expectations.
+
+2019-12-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386-intel.c (i386_intel_operand): Set "byte"
+	attribute suffix instead of suffix for floating point insns when
+	handling O_near_ptr / O_far_ptr.
+	* testsuite/gas/i386/intelbad.s: Add FPU tests.
+	* testsuite/gas/i386/intelbad.l: Adjust expectations.
+
+2019-12-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386-intel.c (i386_intel_operand): Set "byte"
+	attribute suffix instead of suffix uniformly for insns not
+	possibly accepting "tbyte ptr" explicitly.
+
+2019-12-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386-intel.c (i386_intel_operand): Don't set suffix
+	for floating point insns when handling O_fword_ptr.
+
+2019-12-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386-intel.c (i386_intel_operand): Don't special
+	case LDS et al when handling O_word_ptr.
+
+2019-12-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/aarch64/bfloat16.d: Match 32-bit and 64-bit output.
+	* testsuite/gas/aarch64/dgh.d: Likewise.
+	* testsuite/gas/aarch64/f32mm.d: Likewise.
+	* testsuite/gas/aarch64/f64mm.d: Likewise.
+	* testsuite/gas/aarch64/i8mm.d: Likewise.
+	* testsuite/gas/aarch64/pac_ab_key.d: Likewise.
+	* testsuite/gas/aarch64/pac_negate_ra_state.d: Likewise.
+	* testsuite/gas/aarch64/reloc-prel_g0.d: Likewise.
+	* testsuite/gas/aarch64/reloc-prel_g0_nc.d: Likewise.
+	* testsuite/gas/aarch64/reloc-prel_g1.d: Likewise.
+	* testsuite/gas/aarch64/sve-bfloat-movprfx.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx-mm.d: Likewise.
+	* testsuite/gas/aarch64/sve2.d: Likewise.
+
+2019-12-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* dw2gencfi.c (cfi_pseudo_table): Add cfi_negate_ra_state.
+	* testsuite/gas/aarch64/pac_negate_ra_state.s: New file.
+	* testsuite/gas/aarch64/pac_negate_ra_state.d: Likewise.
+
+2019-12-05  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-aarch64.c (aarch64_features): Drop redundant AES and
+	SHA2 flags from "crypto" entry.
+
+2019-12-05  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-aarch64.c (aarch64_features): Make SHA2 a prereq of
+	SHA3.
+	* testsuite/gas/aarch64/crypto.s
+	* testsuite/gas/aarch64/crypto-directive.d: Refer to crypto.d
+	for actual output.
+	* testsuite/gas/aarch64/illegal-crypto-nofp.l: Relax
+	expectations.
+	* testsuite/gas/aarch64/crypto-directive2.d,
+	testsuite/gas/aarch64/crypto-directive3.d: New.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386-intel.c (i386_intel_operand): Handle LFS et al
+	as well as LGDT at al when processing O_tbyte_ptr.
+	* testsuite/gas/i386/intelbad.s: Add LDS et al cases.
+	* testsuite/gas/i386/x86-64-intel64.s,
+	* testsuite/gas/i386/x86-64-opcode.s:  Add LFS et al cases.
+	* testsuite/gas/i386/ilp32/x86-64-intel64.d: Add -mintel64
+	command line option and fold expectations with parent dir test.
+	* testsuite/gas/i386/x86-64-intel64.d: Add -mintel64 command
+	line option and adjust expectations.
+	* testsuite/gas/i386/intelbad.l,
+	testsuite/gas/i386/x86-64-opcode.d: Adjust expectations.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386-intel.c (i386_intel_operand): Also handle DWORD
+	with 64-bit mode branches.
+	* testsuite/gas/i386/x86-64-jump.s: Extend Intel syntax branch
+	operand coverage.
+	* testsuite/gas/i386/x86-64-jump.d: Adjust expectations.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (output_insn): Don't consider Cpu* settings
+	when setting GNU_PROPERTY_X86_FEATURE_2_MMX.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/movdir.s: Add Intel syntax case with
+	operand size specifier.
+	* testsuite/gas/i386/x86-64-movdir.s: Add Intel syntax cases
+	with operand size specifier and wit 32-bit operands.
+	* testsuite/gas/i386/movdir-intel.d,
+	testsuite/gas/i386/movdir.d,
+	testsuite/gas/i386/x86-64-movdir-intel.d,
+	testsuite/gas/i386/x86-64-movdir.d: Adjust expectations.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Arrange for insns with a
+	single non-GPR register operand to not have its suffix guessed
+	from GPR operands. Extend DefaultSize handling to cover PUSH/POP
+	of segment registers.
+	* testsuite/gas/i386/general.s: Add PUSH/POP sreg to .code16gcc
+	set of insns.
+	* testsuite/gas/i386/general.l: Adjust expectations.
+
+2019-12-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Exclude SYSRET alongside
+	FLDENV et al.
+	* testsuite/gas/i386/general.s: Expand .code16gcc set of insns.
+	* testsuite/gas/i386/general.l: Adjust expectations.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* as.c (flag_dwarf_cie_version): Change initial value to -1, and
+	update comment.
+	* config/tc-riscv.c (riscv_after_parse_args): Set
+	flag_dwarf_cie_version if it has not already been set.
+	* dwarf2dbg.c (dwarf2_init): Initialise flag_dwarf_cie_version if
+	needed.
+	* testsuite/gas/riscv/default-cie-version.d: New file.
+	* testsuite/gas/riscv/default-cie-version.s: New file.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dw2gencfi.c (output_cie): Error on return column overflow.
+	* testsuite/gas/riscv/cie-rtn-col-1.d: New file.
+	* testsuite/gas/riscv/cie-rtn-col-3.d: New file.
+	* testsuite/gas/riscv/cie-rtn-col.s: New file.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* config/tc-riscv.c (tc_riscv_regname_to_dw2regnum): Lookup CSR
+	names too.
+	* testsuite/gas/riscv/csr-dw-regnums.d: New file.
+	* testsuite/gas/riscv/csr-dw-regnums.s: New file.
+
+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* config/tc-riscv.c (struct regname): Delete.
+	(hash_reg_names): Handle value as 'void *'.
+
+2019-11-25  Andrew Pinski  <apinski@marvell.com>
+
+	* config/tc-aarch64.c (md_begin): Use correct
+	hash table for uppercase version of hint.
+	* testsuite/gas/aarch64/system-2.s: Extend psb case to uppercase.
+	* testsuite/gas/aarch64/system-2.d: Update.
+
+2019-11-25  Christian Eggers  <ceggers@gmx.de>
+
+	* as.h: Define SEC_OCTETS as SEC_ELF_OCTETS if OBJ_ELF.
+	* dwarf2dbg.c: (dwarf2_finish): Set section flag SEC_OCTETS for
+	.debug_line, .debug_info, .debug_abbrev, .debug_aranges, .debug_str
+	and .debug_ranges sections.
+	* write.c (maybe_generate_build_notes): Set section flag
+	SEC_OCTETS for .gnu.build.attributes section.
+	* frags.c (frag_now_fix): Don't divide by OCTETS_PER_BYTE if
+	SEC_OCTETS is set.
+	* symbols.c (resolve_symbol_value): Likewise.
+
+2019-11-25  Christian Eggers  <ceggers@gmx.de>
+
+	* dwarf2dbg.c (out_set_addr): Revert 2019-03-13 change.
+	(out_debug_line, out_debug_aranges, out_debug_info): Likewise.
+	* symbols.h (symbol_set_value_now_octets, symbol_octets_p): Remove.
+	* symbols.c (struct symbol_flags): Remove member sy_octets.
+	(symbol_temp_new_now_octets): Don't set symbol_flags::sy_octets.
+	(resolve_symbol_value): Revert: Return octets instead of bytes if
+	sy_octets is set.
+	(symbol_set_value_now_octets): Remove.
+	(symbol_octets_p): Remove.
+
+2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* config/tc-arm.c (arm_ext_crc): New.
+	(crc_ext_armv8): Remove.
+	(insns): Rename crc_ext_armv8 to arm_ext_crc.
+	(arm_cpus): Replace CRC_EXT_ARMV8 with ARM_EXT2_CRC.
+	(armv8a_ext_table, armv8r_ext_table,
+	arm_option_extension_value_table): Redefine the crc
+	extension in terms of ARM_EXT2_CRC.
+	* gas/testsuite/gas/arm/crc-ext.s: New.
+	* gas/testsuite/gas/arm/crc-ext.d: New.
+
+2019-11-20  Alan Modra  <amodra@gmail.com>
+
+	PR 24944
+	* atof-generic.c (atof_generic): Increase decimal guard digits.
+	* testsuite/gas/i386/fp.s: Add more tests.
+	* testsuite/gas/i386/fp.d: Update.
+
+2019-11-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* as.c (parse_args): Parse --gdwarf-cie-version option.
+	(flag_dwarf_cie_version): New variable.
+	* as.h (flag_dwarf_cie_version): Declare.
+	* dw2gencfi.c (output_cie): Switch from DW_CIE_VERSION to
+	flag_dwarf_cie_version.
+	* doc/as.texi (Overview): Document --gdwarf-cie-version.
+	* NEWS: Likewise.
+	* testsuite/gas/cfi/cfi.exp: Add new tests.
+	* testsuite/gas/cfi/cie-version-0.d: New file.
+	* testsuite/gas/cfi/cie-version-1.d: New file.
+	* testsuite/gas/cfi/cie-version-2.d: New file.
+	* testsuite/gas/cfi/cie-version-3.d: New file.
+	* testsuite/gas/cfi/cie-version-4.d: New file.
+	* testsuite/gas/cfi/cie-version.s: New file.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (operand_size_match, md_assemble,
+	parse_insn, match_template, process_suffix, output_jump,
+	output_insn, i386_displacement): Adjust jump* field use/
+	handling.
+	* config/tc-i386-intel.c (i386_intel_operand): Likewise.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (struct _i386_insn): Add jumpabsolute field.
+	(operand_type_match): Drop jumpabsolute use.
+	(type_names): Remove OPERAND_TYPE_JUMPABSOLUTE entry.
+	(process_suffix, i386_displacement): Adjust jumpabsolute uses.
+	(match_template, i386_att_operand): Adjust jumpabsolute
+	handling.	
+	* config/tc-i386-intel.c (i386_intel_operand): Likewise.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (operand_size_match): Adjust anysize use.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/intel-cmps32.d,
+	testsuite/gas/i386/intel-cmps64.d: Correct regexp closing
+	parentheses placement.
+
+2019-11-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/intel-cmps.s,
+	testsuite/gas/i386/intel-movs.s: Extend.
+	* testsuite/gas/i386/intel-cmps32.d,
+	testsuite/gas/i386/intel-cmps64.d,
+	testsuite/gas/i386/intel-movs32.d,
+	testsuite/gas/i386/intel-movs64.d: Adjust expectations.
+	* testsuite/gas/i386/intel-cmps16.d,
+	testsuite/gas/i386/intel-movs16.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2019-11-12  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/gas/riscv/insn.d: Add the f extension to -march option.
+
+2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* config/tc-arm.c (do_vfp_nsyn_push): Move in order to enable it for
+	both fpu_vfp_ext_v1xd and mve_ext and add call to the aliased vstm
+	instruction for mve_ext.
+	(do_vfp_nsyn_pop): Move in order to enable it for both
+	fpu_vfp_ext_v1xd and mve_ext and add call to the aliased vldm
+	instruction for mve_ext.
+	(do_neon_ldm_stm): Add fpu_vfp_ext_v1 and mve_ext checks.
+	(insns): Enable vldm, vldmia, vldmdb, vstm, vstmia, vstmdb, vpop,
+	vpush, and fldd, fstd, flds, fsts for arm_ext_v6t2 instead
+	of fpu_vfp_ext_v1xd.
+	* testsuite/gas/arm/v8_1m-mve.s: New.
+	* testsuite/gas/arm/v8_1m-mve.d: New.
+
+2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* gas/config/tc-arm.c (do_neon_mvn): Allow mve_ext cmode=0xd.
+	* testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.s: New test.
+	* testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.d: Likewise.
+
+2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* config/tc-arm.c (s_arm_fpu): Clear selected_cpu fpu bits.
+	(fpu_any): Remove OBJ_ELF guards.
+	* testsuite/gas/arm/fpu-rst.s: New.
+	* testsuite/gas/arm/fpu-rst.d: New.
+	* testsuite/gas/arm/fpu-rst.l: New.
+
+2019-11-12  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (type_names): Remove OPERAND_TYPE_ESSEG
+	entry.
+	(md_assemble): Adjust isstring field use. Add assertion.
+	(check_string): Mostly re-write.
+	(i386_index_check): Adjust isstring field use and related code.
+
+2019-11-12  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_immext): Remove SSE3, SVME, and
+	MWAITX special case logic.
+	(process_suffix): Replace immext field uses by instance ones.
+	* testsuite/gas/i386/arch-13.s,
+	testsuite/gas/i386/x86-64-arch-3.s: Add CLZERO with operand
+	cases.
+	* testsuite/gas/i386/svme.s: Add 16-bit operand cases.
+	* testsuite/gas/i386/x86-64-specific-reg.s: Drop FIXME comments.
+	* testsuite/gas/i386/arch-13.d,
+	testsuite/gas/i386/mwaitx-reg.l, testsuite/gas/i386/svme.d,
+	testsuite/gas/i386/x86-64-arch-3.d,
+	testsuite/gas/i386/x86-64-mwaitx-reg.l,
+	testsuite/gas/i386/x86-64-specific-reg.l: Adjust expectations.
+
+2019-11-12  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (operand_type_set, operand_type_and,
+	operand_type_and_not, operand_type_or, operand_type_xor): Handle
+	"instance" field specially.
+	(operand_size_match, md_assemble, match_template, process_suffix,
+	check_byte_reg, check_long_reg, check_qword_reg, check_word_reg,
+	process_operands, build_modrm_byte): Use "instance" instead of
+	"acc" / "inoutportreg" / "shiftcount" fields.
+	(optimize_imm): Adjust comment.
+
+2019-11-11  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/illegal-sve2.s: Add smaxp/sminp cases
+	with mismatched 1st and 3rd operands.
+	* testsuite/gas/aarch64/illegal-sve2.l: Adjust expectations.
+
+2019-11-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25167
+	* config/tc-i386.c (match_template): Don't check instruction
+	suffix set from operand.
+	* testsuite/gas/i386/code16.d: New file.
+	* testsuite/gas/i386/code16.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run code16.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (optimize_encoding, build_modrm_byte,
+	check_VecOperations, parse_real_register): Use "class" instead
+	of "regmask" and "regbnd" fields.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (match_mem_size, operand_size_match,
+	operand_type_register_match, pi, check_VecOperands, match_template,
+	check_byte_reg, check_long_reg, check_qword_reg, process_operands,
+	build_modrm_byte, parse_real_register): Use "class" instead of
+	"regsimd" / "regmmx" fields.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (pi, check_byte_reg, build_modrm_byte,
+	parse_real_register): Use "class" instead of "control"/"debug"/
+	"test" fields.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (pi, check_byte_reg, process_operands,
+	build_modrm_byte, i386_att_operand, parse_real_register): Use
+	"class" instead of "sreg" field.
+	* config/tc-i386-intel.c (i386_intel_simplify_register,
+	i386_intel_operand): Likewise.
+
+2019-11-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (operand_type_set, operand_type_and,
+	operand_type_and_not, operand_type_or, operand_type_xor): Handle
+	"class" field specially.
+	(anyimm): New.
+	(operand_type_check, operand_size_match,
+	operand_type_register_match, pi, md_assemble, is_short_form,
+	process_suffix, check_byte_reg, check_long_reg, check_qword_reg,
+	check_word_reg, process_operands, build_modrm_byte): Use "class"
+	instead of "reg" field.
+	(optimize_imm): Likewise. Reduce redundancy. Adjust calculation
+	of "allowed".
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* testsuite/gas/aarch64/dgh.s: New test.
+	* testsuite/gas/aarch64/dgh.d: New test.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* config/tc-arm.c (arm_ext_i8mm): New feature set.
+	(do_vusdot): New.
+	(do_vsudot): New.
+	(do_vsmmla): New.
+	(do_vummla): New.
+	(insns): Add vsmmla, vummla, vusmmla, vusdot, vsudot mnemonics.
+	(armv86a_ext_table): Add i8mm extension.
+	(arm_extensions): Move bf16 extension to context sensitive table.
+	(armv82a_ext_table, armv84a_ext_table, armv85a_ext_table):
+	Move bf16 extension to context sensitive table.
+	(armv86a_ext_table): Add i8mm extension.
+	* doc/c-arm.texi: Document i8mm extension.
+	* testsuite/gas/arm/i8mm.s: New test.
+	* testsuite/gas/arm/i8mm.d: New test.
+	* testsuite/gas/arm/bfloat17-cmdline-bad-3.d: Update test.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* config/tc-aarch64.c: Add new arch fetures to suppport the mm extension.
+	(parse_operands): Add new operand.
+	* testsuite/gas/aarch64/i8mm.s: New test.
+	* testsuite/gas/aarch64/i8mm.d: New test.
+	* testsuite/gas/aarch64/f32mm.s: New test.
+	* testsuite/gas/aarch64/f32mm.d: New test.
+	* testsuite/gas/aarch64/f64mm.s: New test.
+	* testsuite/gas/aarch64/f64mm.d: New test.
+	* testsuite/gas/aarch64/sve-movprfx-mm.s: New test.
+	* testsuite/gas/aarch64/sve-movprfx-mm.d: New test.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* config/tc-aarch64.c (md_atof): Add encoding for the bfloat16 format.
+	* testsuite/gas/aarch64/bfloat16-directive-le.d: New test.
+	* testsuite/gas/aarch64/bfloat16-directive-be.d: New test.
+	* testsuite/gas/aarch64/bfloat16-directive.s: New test.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* config/tc-arm.c (md_atof): Add encoding for bfloat16
+	* testsuite/gas/arm/bfloat16-directive-le.d: New test.
+	* testsuite/gas/arm/bfloat16-directive-be.d: New test.
+	* testsuite/gas/arm/bfloat16-directive.s: New test.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* as.h (atof_ieee_detail): Add prototype for atof_ieee_detail function.
+	(atof_ieee): Move some code into the atof_ieee_detail function.
+	(atof_ieee_detail): Add function that provides a higher level of
+	control over generating IEEE-like numbers.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-arm.c (arm_archs): Add armv8.6-a option.
+	(cpu_arch_ver): Add TAG_CPU_ARCH_V8 tag for Armv8.6-a.
+	* doc/c-arm.texi (-march): New armv8.6-a arch.
+	* config/tc-arm.c (arm_ext_bf16): New feature set.
+	(enum neon_el_type): Add NT_bfloat value.
+	(B_MNEM_vfmat, B_MNEM_vfmab): New bfloat16 encoder
+	helpers.
+	(BAD_BF16): New message.
+	(parse_neon_type): Add bf16 type specifier.
+	(enum neon_type_mask): Add N_BF16 type.
+	(type_chk_of_el_type): Account for NT_bfloat.
+	(el_type_of_type_chk): Account for N_BF16.
+	(neon_three_args): Split out from neon_three_same.
+	(neon_three_same): Part split out into neon_three_args.
+	(CVT_FLAVOUR_VAR): Add bf16_f32 cvt flavour.
+	(do_neon_cvt_1): Account for vcvt.bf16.f32.
+	(do_bfloat_vmla): New.
+	(do_mve_vfma): New function to deal with the mnemonic clash between the BF16
+	vfmat and the MVE vfma in a VPT block with a 't'rue condition.
+	(do_neon_cvttb_1): Account for vcvt{t,b}.bf16.f32.
+	(do_vdot): New
+	(do_vmmla): New
+	(insns): Add vdot and vmmla mnemonics.
+	(arm_extensions): Add "bf16" extension.
+	* doc/c-arm.texi: Document "bf16" extension.
+	* testsuite/gas/arm/attr-march-armv8_6-a.d: New test.
+	* testsuite/gas/arm/bfloat16-bad.d: New test.
+	* testsuite/gas/arm/bfloat16-bad.l: New test.
+	* testsuite/gas/arm/bfloat16-bad.s: New test.
+	* testsuite/gas/arm/bfloat16-cmdline-bad-2.d: New test.
+	* testsuite/gas/arm/bfloat16-cmdline-bad-3.d: New test.
+	* testsuite/gas/arm/bfloat16-cmdline-bad.d: New test.
+	* testsuite/gas/arm/bfloat16-neon.s: New test.
+	* testsuite/gas/arm/bfloat16-non-neon.s: New test.
+	* testsuite/gas/arm/bfloat16-thumb-bad.d: New test.
+	* testsuite/gas/arm/bfloat16-thumb-bad.l: New test.
+	* testsuite/gas/arm/bfloat16-thumb.d: New test.
+	* testsuite/gas/arm/bfloat16-vfp.d: New test.
+	* testsuite/gas/arm/bfloat16.d: New test.
+	* testsuite/gas/arm/bfloat16.s: New test.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (vectype_to_qualifier): Special case the
+	S_2H operand qualifier.
+	* doc/c-aarch64.texi: Document bf16 extension.
+	* testsuite/gas/aarch64/bfloat16.d: New test.
+	* testsuite/gas/aarch64/bfloat16.s: New test.
+	* testsuite/gas/aarch64/illegal-bfloat16.d: New test.
+	* testsuite/gas/aarch64/illegal-bfloat16.l: New test.
+	* testsuite/gas/aarch64/illegal-bfloat16.s: New test.
+	* testsuite/gas/aarch64/sve-bfloat-movprfx.s: New test.
+	* testsuite/gas/aarch64/sve-bfloat-movprfx.d: New test.
+
+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>
+2019-11-07  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (armv8.6-a): New arch.
+	* doc/c-aarch64.texi (armv8.6-a): Document new arch.
+
+2019-11-07  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (cpu_arch): Add .rdpru and .mcommit entries.
+	* doc/c-i386.texi: Mention rdpru and mcommit.
+	* testsuite/gas/i386/arch-13.s,
+	testsuite/gas/i386/x86-64-arch-3.s: Add mcommit and rdpru cases.
+	* testsuite/gas/i386/arch-13.d,
+	testsuite/gas/i386/x86-64-arch-3.d: Extend -march=. Adjust
+	expectations.
+	* testsuite/gas/i386/arch-13-znver1.d: Extend -march=. Redirect
+	expectations to arch-13.d.
+	* testsuite/gas/i386/arch-13-znver2.d: Redirect expectations to
+	arch-13.d.
+	testsuite/gas/i386/x86-64-arch-3-znver1.d: Extend -march=.
+
+2019-11-07  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-arch-3.s: Add monitorx/mwaitx cases
+	with canonical operand sizes.
+	* testsuite/gas/i386/x86-64-sse3.s: Add monitor/mwait cases with
+	canonical operand sizes.
+	* testsuite/gas/i386/x86-64-arch-3-znver1.d,
+	testsuite/gas/i386/x86-64-arch-3-znver2.d: Redirect expectations
+	to x86-64-arch-3.d.
+	* testsuite/gas/i386/ilp32/x86-64-sse-noavx.d: Redirect
+	expectations to parent dir's x86-64-sse-noavx.d.
+	* testsuite/gas/i386/ilp32/x86-64-sse3.d: Redirect expectations
+	to to parent dir's x86-64-sse3.d.
+	* testsuite/gas/i386/x86-64-arch-3.d,
+	testsuite/gas/i386/x86-64-mwaitx-bdver4.d,
+	testsuite/gas/i386/x86-64-sse-noavx.d,
+	testsuite/gas/i386/x86-64-sse3.d,
+	testsuite/gas/i386/x86-64-suffix.d: Adjust expectations.
+
+2019-11-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_operands): Handle ShortForm insns
+	later, splitting out their segment register sub-form.
+
+2019-10-31  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/general.s: Add .code16gcc fldenv tests.
+	* testsuite/gas/i386/general.l: Updated.
+
+2019-10-31  Mihail Ionescu  <mihail.ionescu@arm.com>
+
+	* config/tc-arm.c (selected_ctx_ext_table) New static variable.
+	(arm_parse_arch): Set context sensitive extension table based on the
+	chosen base architecture.
+	(s_arm_arch_extension): Change to lookup extensions in the new context
+	sensitive tables.
+	* gas/testsuite/gas/arm/mve-ext.s: New.
+	* gas/testsuite/gas/arm/mve-ext.d: New.
+	* gas/testsuite/gas/arm/mvefp-ext.s: New.
+	* gas/testsuite/gas/arm/mvefp-ext.d: New.
+
+2019-10-30  Delia Burduv  <Delia.Burduv@arm.com>
+
+	* config/tc-aarch64.c (parse_address_main): Accept the omission of
+	the immediate argument for ldraa and ldrab as a shorthand for the
+	immediate being 0.
+	* testsuite/gas/aarch64/ldraa-ldrab-no-offset.d: New test.
+	* testsuite/gas/aarch64/ldraa-ldrab-no-offset.s: New test.
+	* testsuite/gas/aarch64/illegal-ldraa.s: Modified to accept the
+	writeback form with no offset.
+	* testsuite/gas/aarch64/illegal-ldraa.s: Removed missing offset
+	error.
+
+2019-10-30  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/noreg16.d, testsuite/gas/i386/noreg16.s,
+	testsuite/gas/i386/noreg32.d, testsuite/gas/i386/noreg32.s,
+	testsuite/gas/i386/noreg64.d, testsuite/gas/i386/noreg64.s: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2019-10-30  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (optimize_encoding): Adjust opcodes compared
+	against. Adjust replacement opcode and clear .w.
+
+2019-10-29  Alan Modra  <amodra@gmail.com>
+
+	PR 25125
+	* dw2gencfi.c (output_cfi_insn): Don't allow DW_CFA_advance_loc4
+	to be placed in a different frag to the rs_cfa.
+
+2019-10-26  John David Anglin  <danglin@gcc.gnu.org>
+
+	PR gas/25121
+	* config/tc-hppa.c (tc_gen_reloc): Cast some enums to int.
+	(md_assemble): Likewise.
+
+2019-10-26  Alan Modra  <amodra@gmail.com>
+
+	PR 25125
+	* dw2gencfi.c (output_cfi_insn): Don't output DW_CFA_advance_loc+0.
+	* ehopt.c (eh_frame_estimate_size_before_relax): Return -1 for
+	an advance_loc of zero.
+	(eh_frame_relax_frag): Translate fr_subtype of 7 to size -1.
+	(eh_frame_convert_frag): Handle fr_subtype of 7.  Abort on
+	unexpected fr_subtype.
+
+2019-10-25  Alan Modra  <amodra@gmail.com>
+
+	PR gas/25125
+	PR gas/12049
+	* write.c (relax_frag): Correct calculation of delta for
+	positive branches where "stretch" would make the branch
+	negative.  Return zero immediately in that case.  Correct
+	TC_PCREL_ADJUST comment.
+
+2019-10-16  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-xtensa.c (xg_order_trampoline_chain_entry): Don't
+	call S_GET_VALUE multiple times for a symbol.  Rearrange code
+	so it is obvious what is the primary sort key.
+	(xg_order_trampoline_chain): Similarly.
+
+2019-10-15  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-nds32.c (nds32_set_section_relocs): Use relocs and n
+	parameters rather than equivalent sec->orelocation and
+	sec->reloc_count.  Don't sort for n <= 1.  Tidy.
+
+2019-10-09  Nick Clifton  <nickc@redhat.com>
+
+	PR 25041
+	* testsuite/gas/avr/pr25041.s: New test.
+	* testsuite/gas/avr/pr25041.d: New test driver.
+
+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* config/tc-msp430.c (md_parse_option): Set lower_data_region_only
+	to FALSE if the data region is set to "upper", "either" or "none".
+	(msp430_object_attribute): New.
+	(md_pseudo_table): Handle .mspabi_attribute and .gnu_attribute.
+	(msp430_md_end): Replace hard-coded attribute values with enums.
+	Handle data region object attribute.
+	* doc/as.texi: Document MSP430 Data Region object attribute.
+	* doc/c-msp430.texi: Document the .mspabi_attribute directive.
+	* testsuite/gas/msp430/attr-430-small-bad.d: New test.
+	* testsuite/gas/msp430/attr-430-small-bad.l: New test.
+	* testsuite/gas/msp430/attr-430-small-good.d: New test.
+	* testsuite/gas/msp430/attr-430-small.s: New test.
+	* testsuite/gas/msp430/attr-430x-large-any-bad.d: New test.
+	* testsuite/gas/msp430/attr-430x-large-any-bad.l: New test.
+	* testsuite/gas/msp430/attr-430x-large-any-good.d: New test.
+	* testsuite/gas/msp430/attr-430x-large-any.s: New test.
+	* testsuite/gas/msp430/attr-430x-large-lower-bad.d: New test.
+	* testsuite/gas/msp430/attr-430x-large-lower-bad.l: New test.
+	* testsuite/gas/msp430/attr-430x-large-lower-good.d: New test.
+	* testsuite/gas/msp430/attr-430x-large-lower.s: New test.
+	* testsuite/gas/msp430/msp430.exp: Run new tests.
+
+2019-10-07  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (check_string): Make reported operand number
+	depend on Intel syntax.
+	* testsuite/gas/i386/intel-cmps.s,
+	testsuite/gas/i386/intel-cmps32.d,
+	testsuite/gas/i386/intel-cmps64.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+	* testsuite/gas/i386/intel-movs.s: Extend.
+	* testsuite/gas/i386/intel-movs32.d,
+	testsuite/gas/i386/intel-movs64.d: Adjust expectations.
+	* testsuite/gas/i386/string-bad.l: Tighten expectations.
+
+2019-09-24  Tamar Christina  <tamar.christina@arm.com>
+
+	PR gas/24991
+	* config/tc-arm.c (out_of_range_p): New.
+	(md_apply_fix): Use it in BFD_RELOC_THUMB_PCREL_BRANCH9,
+	BFD_RELOC_THUMB_PCREL_BRANCH12, BFD_RELOC_THUMB_PCREL_BRANCH20,
+	BFD_RELOC_THUMB_PCREL_BRANCH23, BFD_RELOC_THUMB_PCREL_BRANCH25
+	* testsuite/gas/arm/pr24991.d: New test.
+	* testsuite/gas/arm/pr24991.l: New test.
+	* testsuite/gas/arm/pr24991.s: New test.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-ecoff.c: Include ecoff-bfd.h.
+	* config/obj-elf.c: Likewise.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-arm.c: Include cpu-arm.h.
+
+2019-09-21  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-i386.c (md_parse_option): Fix warning on vexwig assignment.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-tic6x.c (tc_gen_reloc): Correct common symbol check.
+
+2018-09-20  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/25012
+	* config/tc-i386.c (process_operands): Adjust handling of
+	PUSH/POP of segment registers.
+	* testsuite/gas/i386/x86-64-opcode.s: Add PUSHq/POPq case with
+	%fs/%gs operands. Add PUSHF/POPF case without suffix.
+	* testsuite/gas/i386/x86-64-opcode.d: Adjust expectations.
+
+2019-09-19  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* NEWS: Add SVE2 and TME entries.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* as.c, * as.h, * dw2gencfi.c, * dwarf2dbg.c, * ecoff.c,
+	* read.c, * stabs.c, * subsegs.c, * subsegs.h, * write.c,
+	* config/obj-coff-seh.c, * config/obj-coff.c, * config/obj-ecoff.c,
+	* config/obj-elf.c, * config/obj-macho.c, * config/obj-som.c,
+	* config/tc-aarch64.c, * config/tc-alpha.c, * config/tc-arc.c,
+	* config/tc-arm.c, * config/tc-avr.c, * config/tc-bfin.c,
+	* config/tc-bpf.c, * config/tc-d10v.c, * config/tc-d30v.c,
+	* config/tc-epiphany.c, * config/tc-fr30.c, * config/tc-frv.c,
+	* config/tc-h8300.c, * config/tc-hppa.c, * config/tc-i386.c,
+	* config/tc-ia64.c, * config/tc-ip2k.c, * config/tc-iq2000.c,
+	* config/tc-lm32.c, * config/tc-m32c.c, * config/tc-m32r.c,
+	* config/tc-m68hc11.c, * config/tc-mep.c, * config/tc-microblaze.c,
+	* config/tc-mips.c, * config/tc-mmix.c, * config/tc-mn10200.c,
+	* config/tc-mn10300.c, * config/tc-msp430.c, * config/tc-mt.c,
+	* config/tc-nds32.c, * config/tc-or1k.c, * config/tc-ppc.c,
+	* config/tc-pru.c, * config/tc-rl78.c, * config/tc-rx.c,
+	* config/tc-s12z.c, * config/tc-s390.c, * config/tc-score.c,
+	* config/tc-score7.c, * config/tc-sh.c, * config/tc-sparc.c,
+	* config/tc-spu.c, * config/tc-tic4x.c, * config/tc-tic54x.c,
+	* config/tc-tic6x.c, * config/tc-tilegx.c, * config/tc-tilepro.c,
+	* config/tc-v850.c, * config/tc-visium.c, * config/tc-wasm32.c,
+	* config/tc-xc16x.c, * config/tc-xgate.c, * config/tc-xstormy16.c,
+	* config/tc-xtensa.c, * config/tc-z8k.c: Update throughout for
+	bfd section macro and function changes.
+	* write.c (compress_debug): Use bfd_rename_section.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* symbols.c (S_IS_LOCAL): Update bfd_get_section to
+	bfd_asymbol_section.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* Makefile.in: Re-generate.
+	* configure: Re-generate.
+	* doc/Makefile.in: Re-generate.
+
+2019-09-17  Maxim Blinov  <maxim.blinov@embecosm.com>
+
+	* config/tc-riscv.c (riscv_multi_subset_supports): Handle
+	insn_class enum rather than subset char string.
+	(riscv_ip): Update call to riscv_multi_subset_supports.
+
+2019-09-16  Phil Blundell  <pb@pbcl.net>
+
+	* Makefile.in, configure, doc/Makefile.in: Regenerated.
+
+2019-09-10  Nick Clifton  <nickc@redhat.com>
+
+	PR 24907
+	* testsuite/gas/arm/pr24907.s: New test.
+	* testsuite/gas/arm/pr24907.d: Expected disassembly.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-09-05  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (ppc_elf_suffix): Display the relocation
+	operator on GOT reloc warnings/errors.
+
+2019-08-27  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* config/tc-arm.c (parse_neon_mov): Add check to accept vector
+	register to both the arguments in VMOV instruction.
+	* testsuite/gas/arm/mve-vmov-1.d: Modify.
+	* testsuite/gas/arm/mve-vmov-1.s: Likewise.
+	* testsuite/gas/arm/mve-vorr.d: Likewise.
+
+2019-08-23  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2019-08-22  Dennis Zhang  <dennis.zhang@arm.com>
+
+	* config/tc-arm.c: New entries for Cortex-M35P, Cortex-A77,
+	and Cortex-A76AE.
+	* doc/c-arm.texi: Document new processors.
+	* testsuite/gas/arm/cpu-cortex-a76ae.d: New test.
+	* testsuite/gas/arm/cpu-cortex-a77.d: New test.
+	* testsuite/gas/arm/cpu-cortex-m35p.d: New test.
+
+2019-08-22  Bosco García  <jbgg.gnu@gmail.com>
+	    Nick Clifton  <nickc@redhat.com>
+
+	* atof-generic.c (atof_generic): Do not ignore leading zeros if
+	they appear after a decimal point.
+	* testsuite/gas/all/float.s: Extend test to include a number with
+	a leading decimal point followed by several zeroes.
+	* testsuite/gas/i386/fp.s: Likewise.
+	* testsuite/gas/i386/fp.d: Update expected output.
+
+2019-08-22  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* config/tc-aarch64.c: Add float16 directive and add "Hh" to
+	acceptable float characters.
+	* doc/c-aarch64.texi: Documentation for float16 directive.
+	* testsuite/gas/aarch64/float16-be.d: New test.
+	* testsuite/gas/aarch64/float16-le.d: New test.
+	* testsuite/gas/aarch64/float16.s: New test.
+	* NEWS: Add NEWS entry.
+
+2019-08-22  Kyrylo Tkachov <kyrylo.tkachov@arm.com>
+
+	* testsuite/gas/aarch64/sysreg-4.d: Update expected disassembly for
+	tfsre0_el1, tfsr_el1, tfsr_el2, tfsr_el3, tfsr_el12 system registers.
+
+2019-08-20  Dennis Zhang  <dennis.zhang@arm.com>
+
+	* NEWS: Mention the Arm and AArch64 new processors.
+	* config/tc-aarch64.c: New entries for Cortex-A34, Cortex-A65,
+	Cortex-A77, cortex-A65AE, and Cortex-A76AE.
+	* doc/c-aarch64.texi: Document new CPUs.
+	* testsuite/gas/aarch64/cpu-cortex-a34.d: New test.
+	* testsuite/gas/aarch64/cpu-cortex-a65.d: New test.
+	* testsuite/gas/aarch64/cpu-cortex-a65ae.d: New test.
+	* testsuite/gas/aarch64/cpu-cortex-a76ae.d: New test.
+	* testsuite/gas/aarch64/cpu-cortex-a77.d: New test.
+	* testsuite/gas/aarch64/nop-asm.s: New test.
+
+2019-08-19  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* config/tc-mips.c (fix_bad_misaligned_address): New function.
+	(fix_validate_branch): Call fix_bad_misaligned address_to
+	calculate the target address.
+	(md_apply_fix): Likewise.
+	(md_convert_frag): Update misaligned address calculation to
+	disregard ISA mode bit.
+
+2019-08-19  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* config/tc-mips.c (mips_move_labels): Retain ISA mode bit
+	when moving labels in text segments.
+	(mips_align): Indicate text mode when aligning labels in
+	text segments.
+	* gas/testsuite/gas/mips/insn-isa-mode.d: New test.
+	* gas/testsuite/gas/mips/insn-isa-mode.s: New test source.
+	* gas/testsuite/gas/mips/mips.exp: Run the new test.
+
+2019-08-19  Barnaby Wilks  <Barnaby.Wilks@arm.com>
+
+	* config/tc-arm.c (md_atof): Add precision check.  Formatting.
+
+2019-08-15  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2019-08-12  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): Add the entry OP_I48_I64.
+	(po_imm1_or_imm2_or_fail): Marco to check the immediate is either of
+        48 or 64.
+	(parse_operands): Add case OP_I48_I64.
+	(do_mve_scalar_shift1): Add function to encode the MVE shift
+        instructions with 4 arguments.
+	* testsuite/gas/arm/mve-shift-bad.l: Modify.
+	* testsuite/gas/arm/mve-shift-bad.s: Likewise.
+	* testsuite/gas/arm/mve-shift.d: Likewise.
+	* testsuite/gas/arm/mve-shift.s: Likewise.
+
+2019-08-12  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* config/tc-arm.c (enum fp_16bit_format): Add enum to represent the 2 float16 encodings.
+	(md_atof): Set precision for float16 type.
+	(arm_is_largest_exponent_ok): Check for whether to encode with the IEEE or alternative
+	format.
+	(set_fp16_format): Parse a float16_format directive.
+	(arm_parse_fp16_opt): Parse the fp16-format command line option.
+	(aeabi_set_public_attributes): For ELF encode the FP16 format EABI attribute.
+	* config/tc-arm.h (TC_LARGEST_EXPONENT_IS_NORMAL): Macro that expands to
+	arm_is_largest_exponent_ok.
+	(arm_is_largest_exponent_ok): Add prototype for arm_is_largest_exponent_ok function.
+	* doc/c-arm.texi: Add documentation for .float16, .float16_format and -mfp16-format=
+	* testsuite/gas/arm/float16-bad.d: New test.
+	* testsuite/gas/arm/float16-bad.l: New test.
+	* testsuite/gas/arm/float16-bad.s: New test.
+	* testsuite/gas/arm/float16-be.d: New test.
+	* testsuite/gas/arm/float16-format-bad.d: New test.
+	* testsuite/gas/arm/float16-format-bad.l: New test.
+	* testsuite/gas/arm/float16-format-bad.s: New test.
+	* testsuite/gas/arm/float16-format-opt-bad.d: New test.
+	* testsuite/gas/arm/float16-format-opt-bad.l: New test.
+	* testsuite/gas/arm/float16-le.d: New test.
+	* testsuite/gas/arm/float16.s: New test.
+	* testsuite/gas/arm/float16-eabi-alternative-format.d: New test.
+	* testsuite/gas/arm/float16-eabi-ieee-format.d: New test.
+	* testsuite/gas/arm/float16-eabi-no-format.d: New test.
+	* testsuite/gas/arm/float16-eabi.s: New test.
+
+2019-08-12  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* config/atof-ieee.c (H_PRECISION): Macro for precision of float16
+	type.
+	(atof_ieee): Set precision and exponent bits for encoding float16
+	types.
+	(gen_to_words): NaN and Infinity encoding for float16.
+	(ieee_md_atof): Set precision for encoding float16 type.
+
+2019-08-12  Alan Modra  <amodra@gmail.com>
+
+	PR 24851
+	* config/tc-epiphany.c (md_estimate_size_before_relax): Clear
+	extra opcode bytes when changing from a 2-byte to a 4-byte insn.
+
+2019-08-09  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/ilp32/x86-64-simd-intel.d,
+	testsuite/gas/i386/ilp32/x86-64-simd-suffix.d,
+	testsuite/gas/i386/ilp32/x86-64-simd.d: Redirect to parent dir
+	output expectations.
+	* testsuite/gas/i386/x86-64-simd-intel.d,
+	testsuite/gas/i386/x86-64-simd-suffix.d,
+	testsuite/gas/i386/x86-64-simd.d: Don't hard-code hex addresses
+	and symbol-relative offsets.
+
+2019-08-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 24887
+	* testsuite/gas/i386/property-1.d: Adjust for new output format
+	from readelf.
+	* testsuite/gas/i386/property-2.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-1.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
+
+2019-08-08  Yoshinori Sato  <ysato@users.sourceforge.jp>
+
+	* testsuite/gas/h8300/h8300.exp: Fix movfpe and movtpe tests.
+	* testsuite/gas/h8300/misc.s: Likewise.
+	* testsuite/gas/h8300/misch.s: Likewise.
+	* testsuite/gas/h8300/miscs.s: Likewise.
+
+2019-08-05  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* config/tc-arm.c (do_mve_vqdmlah): Use N_S_32 macro.
+	(do_neon_qrdmlah): Use N_S_32 macro.
+	* testsuite/gas/arm/mve-vqdmlah-bad.d: New test.
+	* testsuite/gas/arm/mve-vqdmlah-bad.l: New test.
+	* testsuite/gas/arm/mve-vqdmlah-bad.s: New test.
+	* testsuite/gas/arm/mve-vqdmlah.d: Remove unsigned instruction tests.
+	* testsuite/gas/arm/mve-vqdmlah.s: Remove unsigned instruction tests.
+	* testsuite/gas/arm/mve-vqdmlash-bad.d: New test.
+	* testsuite/gas/arm/mve-vqdmlash-bad.l: New test.
+	* testsuite/gas/arm/mve-vqdmlash-bad.s: New test.
+	* testsuite/gas/arm/mve-vqdmlash.d: Remove unsigned instruction tests.
+	* testsuite/gas/arm/mve-vqdmlash.s: Remove unsigned instruction tests.
+
+2019-07-30  Mel Chen <mel.chen@sifive.com>
+
+	* testsuite/gas/riscv/alias-csr.s: Add testcase for CSR-access
+	alias instructions.
+	* testsuite/gas/riscv/no-aliases-csr.d: Run testcase alias-csr.s with
+	-Mno-aliases.
+
+	* testsuite/gas/riscv/alias-csr.d: Run testcase alias-csr.s.
+	* testsuite/gas/riscv/priv-reg.d: Update.
+
+2019-07-24  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* testsuite/gas/arc/nps400-6.d: Update test.
+
+2019-07-24  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c (obj_elf_section, obj_elf_type): Set has_gnu_osabi.
+	* testsuite/gas/elf/section12a.d: Update xfails.
+	* testsuite/gas/elf/section12b.d: Likewise.
+
+2019-07-24  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/section12a.d: xfail visium and cloudabi.
+	* testsuite/gas/elf/section12b.d: Likewise.
+	* testsuite/gas/elf/section13.d: Likewise.
+
+2019-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* testsuite/gas/aarch64/sysreg-4.s: Test gmid_el1 read.
+	* testsuite/gas/aarch64/sysreg-4.d: Update expected output.
+	* testsuite/gas/aarch64/illegal-sysreg-4.l: Likewise.
+
+2019-07-23  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c (obj_elf_change_section): Don't emit a fatal
+	error for non-SHF_ALLOC SHF_GNU_MBIND here.
+	(obj_elf_parse_section_letters): Return SHF_GNU_MBIND in new
+	gnu_attr param.
+	(obj_elf_section): Adjust obj_elf_parse_section_letters call.
+	Formatting.  Set SHF_GNU_MBIND and elf_osabi from gnu_attr.
+	Emit normal error for non-SHF_ALLOC SHF_GNU_MBIND and wrong osabi.
+	(obj_elf_type): Set elf_osabi for ifunc.
+	* testsuite/gas/elf/section12a.d: xfail msp430 and hpux.
+	* testsuite/gas/elf/section12b.d: Likewise.
+	* testsuite/gas/elf/section13.d: Likewise.
+	* testsuite/gas/elf/section13.l: Adjust expected error.
+
+2019-07-23  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/section12a.d: Don't skip for rx.
+
+2019-07-22  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* config/tc-arm.c (do_mve_vqdmladh): Remove check for UNPREDICTABLE.
+	* testsuite/gas/arm/mve-vqdmladh-bad.l: Remove tests.
+	* testsuite/gas/arm/mve-vqdmladh-bad.s: Remove tests.
+	* testsuite/gas/arm/mve-vqdmladh.d: New tests.
+	* testsuite/gas/arm/mve-vqdmladh.s: New tests.
+	* testsuite/gas/arm/mve-vqdmlsdh-bad.l: Remove tests.
+	* testsuite/gas/arm/mve-vqdmlsdh-bad.s: Remove tests.
+	* testsuite/gas/arm/mve-vqdmlsdh.d: New tests.
+	* testsuite/gas/arm/mve-vqdmlsdh.s: New tests.
+
+2019-07-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/noextreg.d: Pass -O0 to assembler.
+
+2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* testsuite/gas/bpf/alu.d: Use %r6 instead of %ctx.
+	* testsuite/gas/bpf/lddw-be.d: Likewise.
+	* testsuite/gas/bpf/lddw.d: Likewise.
+	* testsuite/gas/bpf/alu-be.d: Likewise.
+	* testsuite/gas/bpf/alu32.d: Likewise.
+
+2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* config/tc-bpf.c (pe_lcomm_internal): Adapted from tc-i386.c.
+	(pe_lcomm): Likewise.
+	(md_pseudo_table): Use pe_lcomm to implement .lcomm.
+
+2019-07-19  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* doc/c-aarch64.texi: Remame the +bitperm extension to +sve2-bitperm.
+	* config/tc-aarch64.c (aarch64_features): Likewise.
+	* testsuite/gas/aarch64/illegal-sve2-aes.d: Update accordingly.
+	* testsuite/gas/aarch64/illegal-sve2-sha3.d: Likewise.
+	* testsuite/gas/aarch64/illegal-sve2-sm4.d: Likewise.
+	* testsuite/gas/aarch64/illegal-sve2.d: Likewise.
+	* testsuite/gas/aarch64/sve2.d: Likewise.
+
+2019-07-19  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (ppc_elf_suffix): Map "tls@pcrel", "got@tlsgd@pcrel",
+	"got@tlsld@pcrel", "got@tprel@pcrel", and "got@dtprel@pcrel".
+	(fixup_size, md_assemble): Handle pcrel tls relocs.
+	(ppc_force_relocation, ppc_fix_adjustable): Likewise.
+	(md_apply_fix, tc_gen_reloc): Likewise.
+
+2019-07-17  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* config/tc-bpf.c: Make .lcomm to get a third argument with the
+	alignment.
+
+2019-07-17  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* config/tc-bpf.c (md_pseudo_table): .half, .word and .dword.
+
+	* testsuite/gas/bpf/data.s: New file.
+	* testsuite/gas/bpf/data.d: Likewise.
+	* testsuite/gas/bpf/data-be.d: Likewise.
+	* testsuite/gas/bpf/bpf.exp: Run data and data-be.
+	* doc/c-bpf.texi (BPF Directives): New section.
+
+2019-07-17  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (check_hle, md_assemble, check_VecOperands,
+	match_template, check_string, build_modrm_byte): Replace
+	operand_type_check(..., anymem) by Operand_Mem ones.
+	(process_operands): Also copy i.flags[] when copying other
+	operand properties.
+
+2019-07-16  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (match_template): Adjust regmem reference.
+	Adjust comment and update regmem when swapping operands.
+	(build_modrm_byte): Drop clearing of regmem and stale part of
+	comment. Correct comment. Adjust regmem reference.
+
+2019-07-16  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (type_names): Replace SReg entries.
+	(pi, check_byte_reg, build_modrm_byte, i386_att_operand,
+	parse_real_register): Switch to using sreg field.
+	(process_operands): Likewise. Extend handling of PUSH/POP of
+	segment registers. Drop dead setting of REX_B.
+	* config/tc-i386-intel.c (i386_intel_simplify_register,
+	i386_intel_operand): Switch to using sreg field.
+	* testsuite/gas/i386/x86-64-opcode.s: Add PUSH/POP of %fs/%gs.
+	* testsuite/gas/i386/x86-64-opcode.d: Adjust expectations.
+	* testsuite/gas/i386/ilp32/x86-64-opcode.d: Use parent dir
+	expectations.
+
+2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* testsuite/gas/bpf/mem.s: ldabs instructions do not take a `src'
+	register as an argument.
+	* testsuite/gas/bpf/mem.d: Updated accordingly.
+	* testsuite/gas/bpf/mem-be.d: Likewise.
+	* doc/c-bpf.texi (BPF Opcodes): Update to reflect the correct
+	explicit arguments to ldabs and ldind instructions.
+
+2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* testsuite/gas/bpf/mem.s: Do not use explicit arguments for
+	ldabs and ldind instructions.
+	* testsuite/gas/bpf/mem.d: Updated accordingly.
+	* testsuite/gas/bpf/mem-be.d: Likewise.
+
+2019-07-09  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c (elf_frob_symbol): Remove mips hacks.
+	* config/tc-mips.h (tc_frob_symbol): Define.
+	(mips_frob_symbol): Declare.
+	* config/tc-mips.c (s_mips_globl): Don't set BSF_OBJECT for irix.
+	(mips_frob_symbol): Fudge symbols for irix here.
+	* testsuite/gas/elf/type-2.e: Allow random target symbols.
+
+2019-07-05  Kito Cheng <kito.cheng@sifive.com>
+
+	* doc/c-riscv.texi (Instruction Formats): Add r4 type.
+	* testsuite/gas/riscv/insn.d: Add testcase for r4 type.
+	* testsuite/gas/riscv/insn.s: Ditto.
+
+	* doc/c-riscv.texi (Instruction Formats): Add b and j type.
+	* testsuite/gas/riscv/insn.d: Add test case for b and j type.
+	* testsuite/gas/riscv/insn.s: Ditto.
+
+	* testsuite/gas/riscv/insn.s: Correct instruction type for load
+	and store.
+
+	* testsuite/gas/riscv/insn.d: Using regular expression to match
+	address.
+
+	* doc/c-riscv.texi (Instruction Formats): Fix encoding table for SB
+	type and fix typo.
+
+2019-07-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (md_parse_option): Don't blindly accept all
+	-Q options.
+	(md_show_usage): Correctly name the ignored -Q option flavors.
+
+2019-07-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/obj-elf.c (obj_elf_type): Check for conflicts between
+	old and new types.
+	* config/tc-hppa.h (md_elf_symbol_type_change): New.
+	* doc/as.texi: Mention warning behavior for the ELF flavor of
+	.type.
+	* testsuite/gas/elf/type-2.e, testsuite/gas/elf/type-2.l,
+	testsuite/gas/elf/type-2.s: New.
+	* testsuite/gas/elf/elf.exp: Run new test.
+
+2019-07-03  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/gas/aarch64/codealign.d: Update to work with a
+	toolchain configured to generate build notes.
+	* testsuite/gas/aarch64/codealign_1.d: Likewise.
+	* testsuite/gas/aarch64/dwarf.d: Likewise.
+	* testsuite/gas/aarch64/mapmisc.d: Likewise.
+	* testsuite/gas/aarch64/mapping.d: Likewise.
+	* testsuite/gas/aarch64/mapping2.d: Likewise.
+	* testsuite/gas/aarch64/mapping3.d: Likewise.
+	* testsuite/gas/aarch64/mapping4.d: Likewise.
+	* testsuite/gas/aarch64/mapping_5.d: Likewise.
+	* testsuite/gas/aarch64/mapping_6.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_1.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_10.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_11.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_12.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_13.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_14.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_15.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_16.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_17.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_18.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_19.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_2.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_20.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_21.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_22.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_23.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_24.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_25.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_26.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_27.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_3.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_4.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_5.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_6.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_7.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_8.d: Likewise.
+	* testsuite/gas/aarch64/sve-movprfx_9.d: Likewise.
+	* testsuite/gas/aarch64/symbol-variant_pcs-1.d: Likewise.
+	* testsuite/gas/aarch64/symbol-variant_pcs-2.d: Likewise.
+	* testsuite/gas/aarch64/symbol-variant_pcs-3.d: Likewise.
+	* testsuite/gas/all/assign.d: Likewise.
+	* testsuite/gas/all/none.d: Likewise.
+	* testsuite/gas/all/weakref1.d: Likewise.
+	* testsuite/gas/arm/got_prel.d: Likewise.
+	* testsuite/gas/arm/local_function.d: Likewise.
+	* testsuite/gas/arm/mapdir.d: Likewise.
+	* testsuite/gas/arm/mapmisc.d: Likewise.
+	* testsuite/gas/arm/mapping2.d: Likewise.
+	* testsuite/gas/arm/mapping3.d: Likewise.
+	* testsuite/gas/arm/mapping4.d: Likewise.
+	* testsuite/gas/arm/mapsecs.d: Likewise.
+	* testsuite/gas/arm/mapshort-eabi.d: Likewise.
+	* testsuite/gas/arm/thumbrel.d: Likewise.
+	* testsuite/gas/arm/unwind.d: Likewise.
+	* testsuite/gas/cfi/cfi-label.d: Likewise.
+	* testsuite/gas/elf/elf.exp: Likewise.
+	* testsuite/gas/i386/bss.d: Likewise.
+	* testsuite/gas/i386/ifunc-3.d: Likewise.
+	* testsuite/gas/i386/ilp32/mixed-mode-reloc64.d: Likewise.
+	* testsuite/gas/i386/ilp32/quad.d: Likewise.
+	* testsuite/gas/i386/ilp32/reloc64.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-size-1.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-size-3.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-size-5.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-unwind.d: Likewise.
+	* testsuite/gas/i386/mixed-mode-reloc32.d: Likewise.
+	* testsuite/gas/i386/mixed-mode-reloc64.d: Likewise.
+	* testsuite/gas/i386/nop-6.d: Likewise.
+	* testsuite/gas/i386/property-1.d: Likewise.
+	* testsuite/gas/i386/property-2.d: Likewise.
+	* testsuite/gas/i386/relax.d: Likewise.
+	* testsuite/gas/i386/reloc64.d: Likewise.
+	* testsuite/gas/i386/size-1.d: Likewise.
+	* testsuite/gas/i386/size-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-nop-6.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-1.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
+	* testsuite/gas/i386/x86-64-size-1.d: Likewise.
+	* testsuite/gas/i386/x86-64-size-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-size-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-unwind.d: Likewise.
+	* testsuite/gas/macros/irp.d: Likewise.
+	* testsuite/gas/macros/repeat.d: Likewise.
+	* testsuite/gas/macros/rept.d: Likewise.
+	* testsuite/gas/macros/test2.d: Likewise.
+	* testsuite/gas/macros/test3.d: Likewise.
+	* testsuite/gas/macros/vararg.d: Likewise.
+	* testsuite/gas/ppc/astest2.d: Likewise.
+	* testsuite/gas/ppc/astest2_64.d: Likewise.
+	* testsuite/gas/ppc/astest64.d: Likewise.
+	* testsuite/gas/ppc/power4.d: Likewise.
+	* testsuite/gas/ppc/test1elf64.d: Likewise.
+
+2019-07-02  Barnaby Wilks  <barnaby.wilks@arm.com>
+
+	* config/tc-aarch64.c (parse_operands): Add error check.
+	* testsuite/gas/aarch64/diagnostic.l: New test.
+	* testsuite/gas/aarch64/diagnostic.s: New test.
+	* testsuite/gas/aarch64/illegal.l: New tests.
+	* testsuite/gas/aarch64/illegal.s: New tests.
+
+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* testsuite/gas/aarch64/sve-movprfx_27.s,
+	* testsuite/gas/aarch64/sve-movprfx_27.d: New test.
+
+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* testsuite/gas/aarch64/sve-movprfx_26.s: Also test FCVTZS, FCVTZU,
+	SCVTF, UCVTF, LSR and ASR.
+	* testsuite/gas/aarch64/sve-movprfx_26.d: Update accordingly.
+	* testsuite/gas/aarch64/sve-movprfx_26.l: Likewise.
+
+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* testsuite/gas/aarch64/sve-movprfx_25.s: Allow CPY Z1.D.P1/M,X1
+	to be prefixed by MOVPRFX.
+	* testsuite/gas/aarch64/sve-movprfx_25.d: Update accordingly.
+	* testsuite/gas/aarch64/sve-movprfx_25.l: Likewise.
+
+2019-07-01  Nick Clifton  <nickc@redhat.com>
+
+	PR 24748
+	* write.c (create_note_reloc): Add desc2_offset parameter.  Change
+	name of offset parameter to note_offset.  Only use desc2_offset
+	when placing addend into REL reloc's address space.
+	(maybe_generate_build_notes): Update parameters passed to
+	create_note_reloc.
+
+2019-07-01  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* testsuite/gas/aarch64/illegal-sve2-aes.d: Update tests.
+	* testsuite/gas/aarch64/illegal-sve2.l: Update tests.
+	* doc/c-aarch64.texi: Add special note of pmull{t,b}
+	instructions under the sve2-aes architecture extension.
+	* testsuite/gas/aarch64/illegal-sve2.s: Add small size
+	pmull{t,b} instructions.
+	* testsuite/gas/aarch64/sve2.d: Add small size pmull{t,b}
+	disassembly.
+	* testsuite/gas/aarch64/sve2.s: Add small size pmull{t,b}
+	instructions.
+
+2019-07-01  Nick Clifton  <nickc@redhat.com>
+
+	PR 24738
+	* doc/c-i386.texi (i386-Directives): Add a description of the
+	Value directive.
+
+2019-07-01  Nick Clifton  <nickc@redhat.com>
+
+	PR 24737
+	* doc/as.texi (Align): Add missing word to description of
+	pseudo-op.
+	(P2align): Likewise.
+
+2019-06-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 24735
+	* doc/as.texi (Zero): Fix spelling typo.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (vec_imm4): Delete.
+	(VEX_check_operands): Replace Vec_Imm4 check by CpuXOP with five
+	operands one.  Clear Imm<N> by different means.
+	(build_modrm_byte): Adjust comment.  Remove dead code.  Add and
+	adjust assertions.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (output_insn): Adjust recognition of xFENCE
+	insns. Move PadLock special case of prefix emission to 3-byte
+	long base opcode handling.
+	(i386_index_check): Check for CpuPadLock instead of ImmExt.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (optimize_encoding): Handle AND / OR with
+	both operands being the same register.
+	* doc/c-i386.texi: Update -O2 documentation.
+	* testsuite/gas/i386/optimize-2.s,
+	testsuite/gas/i386/x86-64-optimize-3.s: Add cases of AND / OR
+	with both operands being the same register.
+	* testsuite/gas/i386/optimize-2.d,
+	testsuite/gas/i386/x86-64-optimize-3.d: Adjust expectations.
+	* testsuite/gas/i386/optimize-2b.d,
+	testsuite/gas/i386/x86-64-optimize-3b.d: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (commutative): New.
+	(build_vex_prefix): Handle commutative case.
+	(optimize_encoding): Set commutative flag when appropriate.
+	* doc/c-i386.texi: Update -O2 documentation.
+	* testsuite/gas/i386/ilp32/x86-64-sse2avx.d: Re-use parent dir
+	output.
+	* testsuite/gas/i386/x86-64-sse2avx.s: Add tests with high
+	numbered source operands.
+	* testsuite/gas/i386/x86-64-optimize-2.d,
+	testsuite/gas/i386/x86-64-optimize-2b.d,
+	testsuite/gas/i386/x86-64-optimize-3.d,
+	testsuite/gas/i386/x86-64-optimize-5.d,
+	testsuite/gas/i386/x86-64-optimize-6.d,
+	testsuite/gas/i386/x86-64-sse2avx.d: Adjust expectations.
+	* testsuite/gas/i386/x86-64-avx-swap-2.d,
+	testsuite/gas/i386/x86-64-avx-swap-2.s: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (is_evex_encoding): Don't check for SAE.
+	(check_VecOperands): Simplify static rounding / SAE checking.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (optimize_encoding): Make j unsigned.  Handle
+	vpand{d,q}, vpandn{d,q}, vpor{d,q}, and vpxor{d,q}.  Also check/
+	clear broadcast.  Eliminate a loop.
+	* doc/c-i386.texi: Update -O1 documentation.
+	* testsuite/gas/i386/optimize-1.s,
+	testsuite/gas/i386/optimize-2.s,
+	testsuite/gas/i386/optimize-3.s,
+	testsuite/gas/i386/optimize-5.s,
+	testsuite/gas/i386/x86-64-optimize-2.s,
+	testsuite/gas/i386/x86-64-optimize-3.s,
+	testsuite/gas/i386/x86-64-optimize-4.s,
+	testsuite/gas/i386/x86-64-optimize-6.s: Add vpand{d,q},
+	vpandn{d,q}, vpor{d,q}, and vpxor{d,q} cases.
+	testsuite/gas/i386/optimize-1.d,
+	testsuite/gas/i386/optimize-1a.d,
+	testsuite/gas/i386/optimize-2.d,
+	testsuite/gas/i386/optimize-3.d,
+	testsuite/gas/i386/optimize-4.d,
+	testsuite/gas/i386/optimize-5.d,
+	testsuite/gas/i386/x86-64-optimize-2.d,
+	testsuite/gas/i386/x86-64-optimize-2a.d,
+	testsuite/gas/i386/x86-64-optimize-2b.d,
+	testsuite/gas/i386/x86-64-optimize-3.d,
+	testsuite/gas/i386/x86-64-optimize-4.d,
+	testsuite/gas/i386/x86-64-optimize-5.d,
+	testsuite/gas/i386/x86-64-optimize-6.d: Adjust expectations.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/avx512f_vpclmulqdq.s,
+	testsuite/gas/i386/avx512vl_vpclmulqdq.s,
+	testsuite/gas/i386/vpclmulqdq.s,
+	testsuite/gas/i386/x86-64-avx512f_vpclmulqdq.s,
+	testsuite/gas/i386/x86-64-avx512vl_vpclmulqdq.s: Add pseudo ops.
+	* testsuite/gas/i386/x86-64-vpclmulqdq.s: Likewise. Don't use
+	high 16 [xy]mm registers.
+	* testsuite/gas/i386/avx512f_vpclmulqdq.d,
+	testsuite/gas/i386/avx512f_vpclmulqdq-intel.d,
+	testsuite/gas/i386/avx512vl_vpclmulqdq.d,
+	testsuite/gas/i386/avx512vl_vpclmulqdq-intel.d,
+	testsuite/gas/i386/vpclmulqdq.d,
+	testsuite/gas/i386/vpclmulqdq-intel.d,
+	testsuite/gas/i386/x86-64-avx512f_vpclmulqdq.d,
+	testsuite/gas/i386/x86-64-avx512f_vpclmulqdq-intel.d,
+	testsuite/gas/i386/x86-64-avx512vl_vpclmulqdq.d,
+	testsuite/gas/i386/x86-64-avx512vl_vpclmulqdq-intel.d,
+	testsuite/gas/i386/x86-64-vpclmulqdq.d,
+	testsuite/gas/i386/x86-64-vpclmulqdq-intel.d: Adjust
+	expectations.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* tc-i386.c (output_disp, output_imm): Use encoding_length.
+
+2019-07-01  Jan Beulich  <jbeulich@suse.com>
+
+	* tc-i386.c (encoding_length): New.
+	(output_insn): Use it.
+	* testsuite/gas/i386/oversized16.l,
+	testsuite/gas/i386/oversized16.s,
+	testsuite/gas/i386/oversized64.l,
+	testsuite/gas/i386/oversized64.s: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2019-06-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24719
+	* testsuite/gas/i386/disassem.s: Add test for vgatherpf0dps
+	with invalid vector length.
+	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
+	* testsuite/gas/i386/disassem.d: Updated.
+	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
+
+2019-06-27  Barnaby Wilk  s<barnaby.wilks@arm.com>
+
+	* config/tc-arm.c (do_smc): Add range check for immediate operand.
+	(do_t_smc): Add range check for immediate operand. Remove
+	obsolete immediate encoding.
+	(md_apply_fix): Fix range check. Remove obsolete immediate encoding.
+	* testsuite/gas/arm/arch6zk.d: Fix test.
+	* testsuite/gas/arm/arch6zk.s: Fix test.
+	* testsuite/gas/arm/smc-bad.d: New test.
+	* testsuite/gas/arm/smc-bad.l: New test.
+	* testsuite/gas/arm/smc-bad.s: New test.
+	* testsuite/gas/arm/thumb32.d: Fix test.
+	* testsuite/gas/arm/thumb32.s: Fix test.
+
+2019-06-27  Jan Beulich  <jbeulich@suse.com>
+
+	config/tc-i386.c (md_assemble): Check for protected mode
+	incapable processor before encoding VEX and alike insns.
+	* testsuite/gas/i386/inval-16.s: For 80186 architecture.
+	* testsuite/gas/i386/inval-16.l: Adjust expectations.
+	* testsuite/gas/i386/avx-16bit.d,
+	testsuite/gas/i386/avx-16bit.s,
+	testsuite/gas/i386/avx512f-16bit.d,
+	testsuite/gas/i386/avx512f-16bit.s,
+	testsuite/gas/i386/bmi-16bit.d,
+	testsuite/gas/i386/bmi-16bit.s,
+	testsuite/gas/i386/bmi2-16bit.d,
+	testsuite/gas/i386/bmi2-16bit.s,
+	testsuite/gas/i386/lwp-16bit.d,
+	testsuite/gas/i386/lwp-16bit.s: New
+	testsuite/gas/i386/i386.exp: Run new tests.
+
+2019-06-26  Jim Wilson  <jimw@sifive.com>
+
+	* testsuite/gas/xstormy16/allinsn.sh: Change first line to
+	#!/bin/bash and make it executable.
+	* testsuite/gas/xstormy16/gcc.sh: Likewise.
+
+2019-06-26  Lili Cui  <lili.cui@intel.com>
+
+	* doc/c-i386.texi: Document x/y/z instruction sufffixes in AT&T
+	syntax and xmmword/ymmword/zmmword/fword/tbyte/oword ptr in
+	Intel syntax.
+
+2019-06-25  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* config/tc-mips.c (macro) <M_LI>: Re-order MTHC1 with
+	respect to MTC1 and use $0 for either part where possible.
+	* testsuite/gas/mips/li-d.s: Add test cases for non-zero
+	words in double precision constants.
+	* testsuite/gas/mips/li-d.d: Update reference output.
+	* testsuite/gas/mips/micromips@isa-override-1.d: Likewise.
+	* testsuite/gas/mips/mips32r2@isa-override-1.d: Likewise.
+	* testsuite/gas/mips/mips64r2@isa-override-1.d: Likewise.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* tc-i386.c (acc32, acc64): Delete.
+	(pi): Make first parameter pinter-to-const.
+	(type_names): Remove Acc. Add acc8, acc16, acc32, and acc64.
+	(pt): Use operand_type_equal().
+	(match_template): Replace use of acc32.
+	(process_suffix): Replace use of acc64.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* doc/c-i386.texi: Mark -mavxscalar= and -mvexwig as dangrous to
+	use.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* tc-i386.c (process_suffix): Use is_any_vex_encoding().
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/sse2-16bit.d,
+	testsuite/gas/i386/sse2-16bit.s: New.
+	testsuite/gas/i386/i386.exp: Run new test.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (optimize_encoding): Also handle ANDQ with
+	immediatie fitting in 7 bits.
+	* testsuite/gas/i386/x86-64-optimize-1.s: Add ANDQ cases with
+	7- and 8-bit immediates.
+	* testsuite/gas/i386/x86-64-optimize-1.d: Adjust expectations.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/xmmword.s: Add cvtps2pi and cvttps2pi
+	tests.
+	* testsuite/gas/i386/xmmword.l: Adjust expectations.
+
+2019-06-25  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (ppc_handle_align): Add parentheses.
+
+2019-06-25  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.h (ppc_nop_select): Declare.
+	(NOP_OPCODE): Define.
+	* config/tc-ppc.c (ppc_elf_end, ppc_xcoff_end): Zero ppc_cpu.
+	(ppc_nop_encoding_for_rs_align_code): New enum.
+	(ppc_nop_select): New function.
+	(ppc_handle_align): Don't use ppc_cpu here.  Get nop type from frag.
+	* testsuite/gas/ppc/groupnop.d,
+	* testsuite/gas/ppc/groupnop.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2019-06-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24700
+	* testsuite/gas/i386/disassem.s: Add test for vbroadcasti32x8
+	with invalid vector length.
+	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
+	* testsuite/gas/i386/disassem.d: Updated.
+	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
+
+2019-06-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24691
+	* testsuite/gas/i386/disassem.s: Add test for vshuff32x4 with
+	invalid vector length.
+	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
+	* testsuite/gas/i386/disassem.d: Updated.
+	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
+
+2019-06-14  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+	* doc/Makefile.in: Regenerate.
+
+2019-06-12  Peter Bergner  <bergner@linux.ibm.com>
+
+	* testsuite/gas/ppc/power9.d: Delete ldmx tests.
+	* testsuite/gas/ppc/power9.s: Likewise.
+
+2019-06-06  Lili Cui  <lili.cui@intel.com>
+
+	* config/tc-i386.c (cpu_arch): Add .enqcmd.
+	(cpu_noarch): Add noenqcmd.
+	* doc/c-i386.texi: Document noenqcmd.
+
+2019-06-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24633
+	* testsuite/gas/i386/disassem.s: Add tests for invalid vector
+	lengths for EVEX vextractfXX and vinsertfXX.
+	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
+	* testsuite/gas/i386/disassem.d: Updated.
+	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
+
+2019-06-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24626
+	* testsuite/gas/i386/disassem.s: Add tests for reserved VEX.vvvv
+	and EVEX.vvvv.
+	* testsuite/gas/i386/x86-64-disassem.s: Likewise.
+	* testsuite/gas/i386/disassem.d: Updated.
+	* testsuite/gas/i386/x86-64-disassem.d: Likewise.
+
+2019-06-04  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>
+	    Lili Cui  <lili.cui@intel.com>
+
+	* config/tc-i386.c (cpu_arch): Add .avx512_vp2intersect.
+	(cpu_noarch): Likewise.
+	* doc/c-i386.texi: Document avx512_vp2intersect.
+	* testsuite/gas/i386/i386.exp: Run vp2intersect tests.
+	* testsuite/gas/i386/vp2intersect-intel.d: New test.
+	* testsuite/gas/i386/vp2intersect.d: Likewise.
+	* testsuite/gas/i386/vp2intersect.s: Likewise.
+	* testsuite/gas/i386/vp2intersect-inval-bcast.l: Likewise.
+	* testsuite/gas/i386/vp2intersect-inval-bcast.s: Likewise.
+	* testsuite/gas/i386/x86-64-vp2intersect-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-vp2intersect.d: Likewise.
+	* testsuite/gas/i386/x86-64-vp2intersect.s: Likewise.
+	* testsuite/gas/i386/x86-64-vp2intersect-inval-bcast.l: Likewise.
+	* testsuite/gas/i386/x86-64-vp2intersect-inval-bcast.s: Likewise.
+
+2019-06-04  Xuepeng Guo  <xuepeng.guo@intel.com>
+	    Lili Cui  <lili.cui@intel.com>
+
+	* doc/c-i386.texi: Document enqcmd.
+	* testsuite/gas/i386/enqcmd-intel.d: New file.
+	* testsuite/gas/i386/enqcmd-inval.l: Likewise.
+	* testsuite/gas/i386/enqcmd-inval.s: Likewise.
+	* testsuite/gas/i386/enqcmd.d: Likewise.
+	* testsuite/gas/i386/enqcmd.s: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd-inval.l: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd-inval.s: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run enqcmd-intel, enqcmd-inval,
+	enqcmd, x86-64-enqcmd-intel, x86-64-enqcmd-inval,
+	and x86-64-enqcmd.
+
+2019-05-30  Jim Wilson  <jimw@sifive.com>
+
+	* config/tc-riscv.c (riscv_ip) <'u'>: Move O_constant check inside if
+	statement.  Delete O_symbol and O_constant check after if statement.
+	* testsuite/gas/riscv/auipc-parsing.s: Test lui with missing %hi.
+	* testsuite/gas/riscv/auipc-parsing.l: Update.
+
+2019-05-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24625
+	* testsuite/gas/i386/inval-avx512f.s: Add tests for AVX512_BF16
+	instructions with invalid broadcast.
+	* testsuite/gas/i386/x86-64-inval-avx512f.s: Likewise.
+	* testsuite/gas/i386/inval-avx512f.l: Updated.
+	* testsuite/gas/i386/x86-64-inval-avx512f.l: Likewise.
+
+2019-05-27  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (is_ppc64_target): New function.
+	(md_show_usage): Split up usage message.  Don't show -a64 when
+	unsupported.
+	testsuite/gas/ppc/ppc.exp (supports_ppc64): New.
+	(prefix-reloc): Only run for ppc64.
+
+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* config/tc-aarch64.c (aarch64_elf_copy_symbol_attributes): Define.
+	* config/tc-aarch64.h (aarch64_elf_copy_symbol_attributes): Declare.
+	(OBJ_COPY_SYMBOL_ATTRIBUTES): Define.
+	* testsuite/gas/aarch64/symbol-variant_pcs-3.d: New test.
+	* testsuite/gas/aarch64/symbol-variant_pcs-3.s: New test.
+
+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* config/tc-aarch64.c (s_variant_pcs): New function.
+	* doc/c-aarch64.texi: Document .variant_pcs.
+	* testsuite/gas/aarch64/symbol-variant_pcs-1.d: New test.
+	* testsuite/gas/aarch64/symbol-variant_pcs-1.s: New test.
+	* testsuite/gas/aarch64/symbol-variant_pcs-2.d: New test.
+	* testsuite/gas/aarch64/symbol-variant_pcs-2.s: New test.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* po/POTFILES.in: Regenerate.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (ppc_elf_suffix): Support @pcrel, @got@pcrel,
+	@plt@pcrel, @higher34, @highera34, @highest34, and @highesta34.
+	(fixup_size): Handle new powerxx relocs.
+	(md_assemble): Warn for @pcrel on non-prefix insns.
+	Accept @l, @h and @ha on prefix insns, and infer reloc without
+	any @ suffix.  Translate powerxx relocs to suit DQ and DS field
+	instructions.  Include operand tests as well as opcode test to
+	translate BFD_RELOC_HI16_S to BFD_RELOC_PPC_16DX_HA.
+	(ppc_fix_adjustable): Return false for pcrel GOT and PLT relocs.
+	(md_apply_fix): Handle new powerxx relocs.
+	* config/tc-ppc.h (TC_FORCE_RELOCATION_SUB_LOCAL): Accept
+	BFD_RELOC_PPC64_ADDR16_HIGHER34, BFD_RELOC_PPC64_ADDR16_HIGHERA34,
+	BFD_RELOC_PPC64_ADDR16_HIGHEST34, BFD_RELOC_PPC64_ADDR16_HIGHESTA34,
+	BFD_RELOC_PPC64_D34, and BFD_RELOC_PPC64_D28.
+	* testsuite/gas/ppc/prefix-reloc.d,
+	* testsuite/gas/ppc/prefix-reloc.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (ppc_insert_operand): Only sign extend fields that
+	are 32-bits or smaller.
+	* messages.c (as_internal_value_out_of_range): Do not truncate
+	variables and use BFD_VMA_FMT to print them.
+	* testsuite/gas/ppc/prefix-pcrel.s,
+	* testsuite/gas/ppc/prefix-pcrel.d: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2019-05-24  Peter Bergner  <bergner@linux.ibm.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (ppc_setup_opcodes): Handle prefix_opcodes.
+	(struct insn_label_list): New.
+	(insn_labels, free_insn_labels): New variables.
+	(ppc_record_label, ppc_clear_labels, ppc_start_line_hook): New funcs.
+	(ppc_frob_label, ppc_new_dot_label): Move functions earlier in file
+	and call ppc_record_label.
+	(md_assemble): Handle 64-bit prefix instructions.  Align labels
+	that are on the same line as a prefix instruction.
+	* config/tc-ppc.h (tc_frob_label, ppc_frob_label): Move to
+	later in the file.
+	(md_start_line_hook): Define.
+	(ppc_start_line_hook): Declare.
+	* testsuite/gas/ppc/prefix-align.d,
+	* testsuite/gas/ppc/prefix-align.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run new test.
+
+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* configure.ac: Handle bpf-*-* targets.
+	* configure.tgt (generic_target): Likewise.
+	* configure: Regenerate.
+	* Makefile.am (TARGET_CPU_CFILES): Add tc-bpf.c.
+	(TARGET_CPU_HFILES): Add tc-bpf.h.
+	* Makefile.in: Regenerated.
+	* config/tc-bpf.c: New file.
+	* config/tc-bpf.h: Likewise.
+	* doc/Makefile.am (CPU_DOCS): Add c-bpf.texi.
+	* doc/Makefile.in: Regenerated.
+	* doc/all.texi: set BPF.
+	* doc/as.texi: Add eBPF contents.
+	* doc/c-bpf.texi: New file.
+	* testsuite/gas/bpf/alu.d: New file.
+	* testsuite/gas/bpf/mem-be.d: Likewise.
+	* testsuite/gas/bpf/mem.s: Likewise.
+	* testsuite/gas/bpf/mem.d: Likewise.
+	* testsuite/gas/bpf/lddw-be.d: Likewise.
+	* testsuite/gas/bpf/lddw.s: Likewise.
+	* testsuite/gas/bpf/lddw.d: Likewise.
+	* testsuite/gas/bpf/jump-be.d: Likewise.
+	* testsuite/gas/bpf/jump.s: Likewise.
+	* testsuite/gas/bpf/jump.d: Likewise.
+	* testsuite/gas/bpf/exit-be.d: Likewise.
+	* testsuite/gas/bpf/exit.s: Likewise.
+	* testsuite/gas/bpf/exit.d: Likewise.
+	* testsuite/gas/bpf/call-be.d: Likewise.
+	* testsuite/gas/bpf/call.s: Likewise.
+	* testsuite/gas/bpf/call.d: Likewise.
+	* testsuite/gas/bpf/bpf.exp: Likewise.
+	* testsuite/gas/bpf/atomic-be.d: Likewise.
+	* testsuite/gas/bpf/atomic.s: Likewise.
+	* testsuite/gas/bpf/atomic.d: Likewise.
+	* testsuite/gas/bpf/alu-be.d: Likewise.
+	* testsuite/gas/bpf/alu32-be.d: Likewise.
+	* testsuite/gas/bpf/alu32.s: Likewise.
+	* testsuite/gas/bpf/alu32.d: Likewise.
+	* testsuite/gas/bpf/alu.s: Likewise.
+	* testsuite/gas/all/gas.exp: Introduce a nop_type for eBPF.
+	* testsuite/gas/all/org-1.s: Support nop_type 6.
+	* testsuite/gas/all/org-1.l: Updated to reflect changes in
+	org-1.s.
+
+2019-05-22  John Darrington <john@darrington.wattle.id.au>
+
+	* config/tc-s12z.c (s12z_strtol): New function. (md_show_usage): Update.
+	(md_parse_option): new case OPTION_DOLLAR_HEX. (s12z_init_after_args):
+	(<global>): Use s12z_strtol instead of strtol.
+	* doc/c-s12z.texi (S12Z Options): Document new option -mdollar-hex.
+	* testsuite/gas/s12z/dollar-hex.d: New file.
+	* testsuite/gas/s12z/dollar-hex.s: New file.
+	* testsuite/gas/s12z/s12z.exp: Add them.
+
+2019-05-21  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (parse_operands): Update case OP_RVC to
+	parse p0 and P0.
+	(do_vmrs): Add checks for valid operands with respect to
+	cpu and fpu options.
+	(do_vmsr): Likewise.
+	(reg_names): New reg_names for FPSCR_nzcvqc, VPR, FPCXT_NS
+	and FPCXT_S.
+	* testsuite/gas/arm/armv8_1-m-spec-reg.d: New.
+	* testsuite/gas/arm/armv8_1-m-spec-reg.s: New.
+	* testsuite/gas/arm/armv8_1-m-spec-reg-bad1.d: New.
+	* testsuite/gas/arm/armv8_1-m-spec-reg-bad2.d: New.
+	* testsuite/gas/arm/armv8_1-m-spec-reg-bad3.d: New.
+	* testsuite/gas/arm/armv8_1-m-spec-reg-bad1.l: New.
+	* testsuite/gas/arm/armv8_1-m-spec-reg-bad2.l: New.
+	* testsuite/gas/arm/armv8_1-m-spec-reg-bad3.l: New.
+	* testsuite/gas/arm/vfp1xD.d: Updated to allow new valid values.
+	* testsuite/gas/arm/vfp1xD_t2.d: Likewise.
+
+2019-05-21  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (TOGGLE_BIT): New.
+	(T16_32_TAB): New entries for cinc, cinv, cneg, csinc,
+	csinv, csneg, cset, csetm and csel.
+	(operand_parse_code): New OP_RR_ZR.
+	(parse_operand): Handle case for OP_RR_ZR.
+	(do_t_cond): New.
+	(insns): New instructions for cinc, cinv, cneg, csinc,
+	csinv, csneg, cset, csetm, csel.
+	* testsuite/gas/arm/armv8_1-m-cond-bad.d: New test.
+	* testsuite/gas/arm/armv8_1-m-cond-bad.l: New test.
+	* testsuite/gas/arm/armv8_1-m-cond-bad.s: New test.
+	* testsuite/gas/arm/armv8_1-m-cond.d: New test.
+	* testsuite/gas/arm/armv8_1-m-cond.s: New test.
+
+2019-05-21  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (operand_parse_code): New entries for
+	OP_RRnpcsp_I32 (register or integer operands).
+	(do_mve_scalar_shift): New.
+	(insns): New instructions for asrl, lsll, lsrl, sqrshrl, sqrshr, sqshl
+	sqshll, srshr, srshrl, uqrshll, uqrshl, uqshll, uqshl, urshrl and urshr.
+	* testsuite/gas/arm/mve-shift.d: New.
+	* testsuite/gas/arm/mve-shift.s: New.
+	* testsuite/gas/arm/mve-shift-bad.d: New.
+	* testsuite/gas/arm/mve-shift-bad.s: New.
+	* testsuite/gas/arm/mve-shift-bad.l: New.
+
+2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* testsuite/gas/mips/r6-branch-constraints.s: Rename to ...
+	* testsuite/gas/mips/r6-reg-constraints.s: this and add test
+	case for DAUI.
+	* testsuite/gas/mips/r6-branch-constraints.l: Rename to ...
+	* testsuite/gas/mips/r6-reg-constraints.l: this and add test
+	for DAUI.
+	* testsuite/gas/mips/mips.exp: Rename test from
+	r6-branch-constraints to r6-reg-constraints.
+
+2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	PR 24559
+	* config/tc-arm.c (move_or_literal_pool): Set size_req to 0 for MOVW
+	replacement.
+	* testsuite/gas/arm/load-pseudo.s: New test input.
+	* testsuite/gas/arm/m0-load-pseudo.d: New test.
+	* testsuite/gas/arm/m23-load-pseudo.d: New test.
+	* testsuite/gas/arm/m33-load-pseudo.d: New test.
+
+2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* testsuite/gas/arm/armv8_1-m-bf.d: Allow different branch target naming
+	conventions.
+	* testsuite/gas/arm/armv8_1-m-bfl.d: Likewise.
+	* testsuite/gas/arm/armv8_1-m-bfcsel.d: Likewise.
+	* testsuite/gas/arm/armv8_1-m-loloop.d: Likewise.
+	* testsuite/gas/arm/armv8_1-m-bf-rel.d: Skip for vxworks.
+	* testsuite/gas/arm/armv8_1-m-bf-rela.d: New test.
+	* testsuite/gas/arm/armv8_1-m-bfl-rel.d: Skip for vxworks.
+	* testsuite/gas/arm/armv8_1-m-bfl-rela.d: New test.
+
+2019-05-21  John Darrington <john@darrington.wattle.id.au>
+
+	* expr.c (literal_prefix_dollar_hex): New variable.
+	(operand)[case '$']: Use the new variable instead of the old macro.
+	Also, move this instance of "case '$'" next to the other one, and
+	enable it only in the complementary proprocessor case.
+	* expr.h (literal_prefix_dollar_hex): Declare it.
+	* config/tc-epiphany.c (md_begin): Assign literal_prefix_dollar_hex.
+	* config/tc-ip2k.c:      ditto
+	* config/tc-mt.c:        ditto
+	* config/tc-epiphany.h (LITERAL_PREFIXDOLLAR_HEX): Remove macro definition.
+	* config/tc-ip2k.h:      ditto
+	* config/tc-mt.h:        ditto
+
+2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	PR 14798
+	* config/tc-mips.c (s_mips_globl): Only treat symbols that are
+	not explicitly labelled as BSF_OBJECTs for IRIX targets.
+	* testsuite/gas/mips/pr14798.s: New test source.
+	* testsuite/gas/mips/pr14798-irix.d: New test.
+	* testsuite/gas/mips/pr14798.d: Likewise.
+	* testsuite/gas/mips/mips.exp: Run the new tests.
+
+2019-05-17  John Darrington  <john@darrington.wattle.id.au>
+
+	* doc/c-arm.texi (ARM Options): Remove "(r)" and "(tm)"
+	* doc/c-bfin.texi (Blackfin Syntax): Remove "(r)"
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (check_simd_pred_availability): Refactor.
+	(do_neon_dyadic_i_su): Refactor use of check_simd_pred_availability.
+	(do_neon_dyadic_i64_su): Likewise.
+	(do_neon_shl): Likewise.
+	(do_neon_qshl): Likewise.
+	(do_neon_rshl): Likewise.
+	(do_neon_logic): Likewise.
+	(do_neon_dyadic_if_su): Likewise.
+	(do_neon_addsub_if_i): Likewise.
+	(do_neon_mac_maybe_scalar): Likewise.
+	(do_neon_fmac): Likewise.
+	(do_neon_mul): Likewise.
+	(do_neon_qdmulh): Likewise.
+	(do_neon_qrdmlah): Likewise.
+	(do_neon_abs_neg): Likewise.
+	(do_neon_sli): Likewise.
+	(do_neon_sri): Likewise.
+	(do_neon_qshlu_imm): Likewise.
+	(do_neon_cvt_1): Likewise.
+	(do_neon_cvttb_1): Likewise.
+	(do_neon_mvn): Likewise.
+	(do_neon_rev): Likewise.
+	(do_neon_dup): Likewise.
+	(do_neon_mov): Likewise.
+	(do_neon_rshift_round_imm): Likewise.
+	(do_neon_sat_abs_neg): Likewise.
+	(do_neon_cls): Likewise.
+	(do_neon_clz): Likewise.
+	(do_vmaxnm): Likewise.
+	(do_vrint_1): Likewise.
+	(do_vcmla): Likewise.
+	(do_vcadd): Likewise.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* NEWS: Mention Armv8.1-M Mainline and MVE.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* testsuite/gas/arm/mve-tailpredloop.d: New test.
+	* testsuite/gas/arm/mve-tailpredloop.s: New test.
+	* testsuite/gas/arm/mve-vabav.d: New test.
+	* testsuite/gas/arm/mve-vabav.s: New test.
+	* testsuite/gas/arm/mve-vabd.d: New test.
+	* testsuite/gas/arm/mve-vabd.s: New test.
+	* testsuite/gas/arm/mve-vabsneg.d: New test.
+	* testsuite/gas/arm/mve-vabsneg.s: New test.
+	* testsuite/gas/arm/mve-vadc.d: New test.
+	* testsuite/gas/arm/mve-vadc.s: New test.
+	* testsuite/gas/arm/mve-vaddlv.d: New test.
+	* testsuite/gas/arm/mve-vaddlv.s: New test.
+	* testsuite/gas/arm/mve-vaddsub.d: New test.
+	* testsuite/gas/arm/mve-vaddsub.s: New test.
+	* testsuite/gas/arm/mve-vaddv.d: New test.
+	* testsuite/gas/arm/mve-vaddv.s: New test.
+	* testsuite/gas/arm/mve-vand.d: New test.
+	* testsuite/gas/arm/mve-vand.s: New test.
+	* testsuite/gas/arm/mve-vbic.d: New test.
+	* testsuite/gas/arm/mve-vbic.s: New test.
+	* testsuite/gas/arm/mve-vbrsr.d: New test.
+	* testsuite/gas/arm/mve-vbrsr.s: New test.
+	* testsuite/gas/arm/mve-vcadd.d: New test.
+	* testsuite/gas/arm/mve-vcadd.s: New test.
+	* testsuite/gas/arm/mve-vcls.d: New test.
+	* testsuite/gas/arm/mve-vcls.s: New test.
+	* testsuite/gas/arm/mve-vclz.d: New test.
+	* testsuite/gas/arm/mve-vclz.s: New test.
+	* testsuite/gas/arm/mve-vcmla.d: New test.
+	* testsuite/gas/arm/mve-vcmla.s: New test.
+	* testsuite/gas/arm/mve-vcmp.d: New test.
+	* testsuite/gas/arm/mve-vcmp.s: New test.
+	* testsuite/gas/arm/mve-vcmul.d: New test.
+	* testsuite/gas/arm/mve-vcmul.s: New test.
+	* testsuite/gas/arm/mve-vcvt-1.d: New test.
+	* testsuite/gas/arm/mve-vcvt-1.s: New test.
+	* testsuite/gas/arm/mve-vcvt-2.d: New test.
+	* testsuite/gas/arm/mve-vcvt-2.s: New test.
+	* testsuite/gas/arm/mve-vcvt-3.d: New test.
+	* testsuite/gas/arm/mve-vcvt-3.s: New test.
+	* testsuite/gas/arm/mve-vcvt-4.d: New test.
+	* testsuite/gas/arm/mve-vcvt-4.s: New test.
+	* testsuite/gas/arm/mve-vddup.d: New test.
+	* testsuite/gas/arm/mve-vddup.s: New test.
+	* testsuite/gas/arm/mve-vdup.d: New test.
+	* testsuite/gas/arm/mve-vdup.s: New test.
+	* testsuite/gas/arm/mve-veor.d: New test.
+	* testsuite/gas/arm/mve-veor.s: New test.
+	* testsuite/gas/arm/mve-vfma-vfms.d: New test.
+	* testsuite/gas/arm/mve-vfma-vfms.s: New test.
+	* testsuite/gas/arm/mve-vfmas.d: New test.
+	* testsuite/gas/arm/mve-vfmas.s: New test.
+	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd.d: New test.
+	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd.s: New test.
+	* testsuite/gas/arm/mve-vhcadd.d: New test.
+	* testsuite/gas/arm/mve-vhcadd.s: New test.
+	* testsuite/gas/arm/mve-vmax-vmin.d: New test.
+	* testsuite/gas/arm/mve-vmax-vmin.s: New test.
+	* testsuite/gas/arm/mve-vmaxa-vmina.d: New test.
+	* testsuite/gas/arm/mve-vmaxa-vmina.s: New test.
+	* testsuite/gas/arm/mve-vmaxnm-vminnm.d: New test.
+	* testsuite/gas/arm/mve-vmaxnm-vminnm.s: New test.
+	* testsuite/gas/arm/mve-vmaxnma-vminnma.s: New test.
+	* testsuite/gas/arm/mve-vmaxnmv-vminnmv.d: New test.
+	* testsuite/gas/arm/mve-vmaxnmv-vminnmv.s: New test.
+	* testsuite/gas/arm/mve-vmaxv-vminv.d: New test.
+	* testsuite/gas/arm/mve-vmaxv-vminv.s: New test.
+	* testsuite/gas/arm/mve-vmla.d: New test.
+	* testsuite/gas/arm/mve-vmla.s: New test.
+	* testsuite/gas/arm/mve-vmladav.d: New test.
+	* testsuite/gas/arm/mve-vmladav.s: New test.
+	* testsuite/gas/arm/mve-vmlaldav.d: New test.
+	* testsuite/gas/arm/mve-vmlaldav.s: New test.
+	* testsuite/gas/arm/mve-vmlalv.d: New test.
+	* testsuite/gas/arm/mve-vmlalv.s: New test.
+	* testsuite/gas/arm/mve-vmlas.d: New test.
+	* testsuite/gas/arm/mve-vmlas.s: New test.
+	* testsuite/gas/arm/mve-vmlav.d: New test.
+	* testsuite/gas/arm/mve-vmlav.s: New test.
+	* testsuite/gas/arm/mve-vmlsdav.d: New test.
+	* testsuite/gas/arm/mve-vmlsdav.s: New test.
+	* testsuite/gas/arm/mve-vmlsldav.d: New test.
+	* testsuite/gas/arm/mve-vmlsldav.s: New test.
+	* testsuite/gas/arm/mve-vmov-1.d: New test.
+	* testsuite/gas/arm/mve-vmov-1.s: New test.
+	* testsuite/gas/arm/mve-vmov-2.d: New test.
+	* testsuite/gas/arm/mve-vmov-2.s: New test.
+	* testsuite/gas/arm/mve-vmul.d: New test.
+	* testsuite/gas/arm/mve-vmul.s: New test.
+	* testsuite/gas/arm/mve-vmulh.d: New test.
+	* testsuite/gas/arm/mve-vmulh.s: New test.
+	* testsuite/gas/arm/mve-vmullbt.d: New test.
+	* testsuite/gas/arm/mve-vmullbt.s: New test.
+	* testsuite/gas/arm/mve-vmvn.d: New test.
+	* testsuite/gas/arm/mve-vmvn.s: New test.
+	* testsuite/gas/arm/mve-vorn.d: New test.
+	* testsuite/gas/arm/mve-vorn.s: New test.
+	* testsuite/gas/arm/mve-vorr.d: New test.
+	* testsuite/gas/arm/mve-vorr.s: New test.
+	* testsuite/gas/arm/mve-vpnot.d: New test.
+	* testsuite/gas/arm/mve-vpnot.s: New test.
+	* testsuite/gas/arm/mve-vpsel.d: New test.
+	* testsuite/gas/arm/mve-vpsel.s: New test.
+	* testsuite/gas/arm/mve-vpt.d: New test.
+	* testsuite/gas/arm/mve-vpt.s: New test.
+	* testsuite/gas/arm/mve-vqabsneg.s: New test.
+	* testsuite/gas/arm/mve-vqaddsub.d: New test.
+	* testsuite/gas/arm/mve-vqaddsub.s: New test.
+	* testsuite/gas/arm/mve-vqdmladh.d: New test.
+	* testsuite/gas/arm/mve-vqdmladh.s: New test.
+	* testsuite/gas/arm/mve-vqdmlah.d: New test.
+	* testsuite/gas/arm/mve-vqdmlah.s: New test.
+	* testsuite/gas/arm/mve-vqdmlash.d: New test.
+	* testsuite/gas/arm/mve-vqdmlash.s: New test.
+	* testsuite/gas/arm/mve-vqdmlsdh.d: New test.
+	* testsuite/gas/arm/mve-vqdmlsdh.s: New test.
+	* testsuite/gas/arm/mve-vqdmulh.d: New test.
+	* testsuite/gas/arm/mve-vqdmulh.s: New test.
+	* testsuite/gas/arm/mve-vqdmull.d: New test.
+	* testsuite/gas/arm/mve-vqdmull.s: New test.
+	* testsuite/gas/arm/mve-vqmovn.d: New test.
+	* testsuite/gas/arm/mve-vqmovn.s: New test.
+	* testsuite/gas/arm/mve-vqrshl.d: New test.
+	* testsuite/gas/arm/mve-vqrshl.s: New test.
+	* testsuite/gas/arm/mve-vqrshrn.d: New test.
+	* testsuite/gas/arm/mve-vqrshrn.s: New test.
+	* testsuite/gas/arm/mve-vqshl.d: New test.
+	* testsuite/gas/arm/mve-vqshl.s: New test.
+	* testsuite/gas/arm/mve-vrev.d: New test.
+	* testsuite/gas/arm/mve-vrev.s: New test.
+	* testsuite/gas/arm/mve-vrint.d: New test.
+	* testsuite/gas/arm/mve-vrint.s: New test.
+	* testsuite/gas/arm/mve-vrmlaldavh.d: New test.
+	* testsuite/gas/arm/mve-vrmlaldavh.s: New test.
+	* testsuite/gas/arm/mve-vrshl.d: New test.
+	* testsuite/gas/arm/mve-vrshl.s: New test.
+	* testsuite/gas/arm/mve-vsbc.d: New test.
+	* testsuite/gas/arm/mve-vsbc.s: New test.
+	* testsuite/gas/arm/mve-vshl.d: New test.
+	* testsuite/gas/arm/mve-vshl.s: New test.
+	* testsuite/gas/arm/mve-vshlc.d: New test.
+	* testsuite/gas/arm/mve-vshlc.s: New test.
+	* testsuite/gas/arm/mve-vshll.d: New test.
+	* testsuite/gas/arm/mve-vshll.s: New test.
+	* testsuite/gas/arm/mve-vshr.d: New test.
+	* testsuite/gas/arm/mve-vshr.s: New test.
+	* testsuite/gas/arm/mve-vshrn.d: New test.
+	* testsuite/gas/arm/mve-vshrn.s: New test.
+	* testsuite/gas/arm/mve-vsli.d: New test.
+	* testsuite/gas/arm/mve-vsli.s: New test.
+	* testsuite/gas/arm/mve-vsri.d: New test.
+	* testsuite/gas/arm/mve-vsri.s: New test.
+	* testsuite/gas/arm/mve-vstld.d: New test.
+	* testsuite/gas/arm/mve-vstld.s: New test.
+	* testsuite/gas/arm/mve-vstrldr-1.d: New test.
+	* testsuite/gas/arm/mve-vstrldr-1.s: New test.
+	* testsuite/gas/arm/mve-vstrldr-2.d: New test.
+	* testsuite/gas/arm/mve-vstrldr-2.s: New test.
+	* testsuite/gas/arm/mve-vstrldr-3.d: New test.
+	* testsuite/gas/arm/mve-vstrldr-3.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (T16_32_TAB): Add new instructions.
+	(do_t_loloop): Changed to handle tail predication variants.
+	(md_apply_fix): Likewise.
+	(insns): Add entries for MVE mnemonics.
+	* testsuite/gas/arm/mve-tailpredloop-bad.d: New test.
+	* testsuite/gas/arm/mve-tailpredloop-bad.l: New test.
+	* testsuite/gas/arm/mve-tailpredloop-bad.s: New test.
+	* testsuite/gas/arm/mve-tailpredloop.d: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_mve_vshll): New encoding function.
+	(do_mve_vshlc): Likewise.
+	(insns): Add entries for MVE mnemonics.
+	* testsuite/gas/arm/mve-vshlc-bad.d: New test.
+	* testsuite/gas/arm/mve-vshlc-bad.l: New test.
+	* testsuite/gas/arm/mve-vshlc-bad.s: New test.
+	* testsuite/gas/arm/mve-vshll-bad.d: New test.
+	* testsuite/gas/arm/mve-vshll-bad.l: New test.
+	* testsuite/gas/arm/mve-vshll-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): Add new operand.
+	(parse_operands): Handle new operand.
+	(do_neon_shl_imm): Accept MVE variants.
+	(do_neon_shl): Likewise.
+	(do_neon_qshl_imm): Likewise.
+	(do_neon_qshl): Likewise.
+	(do_neon_qshlu_imm): Likewise.
+	(insns): Likewise.
+	* testsuite/gas/arm/mve-vqshl-bad.d: New test.
+	* testsuite/gas/arm/mve-vqshl-bad.l: New test.
+	* testsuite/gas/arm/mve-vqshl-bad.s: New test.
+	* testsuite/gas/arm/mve-vshl-bad.d: New test.
+	* testsuite/gas/arm/mve-vshl-bad.l: New test.
+	* testsuite/gas/arm/mve-vshl-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_neon_sli): Accept MVE variants.
+	(do_neon_sri): Likewise.
+	(do_neon_rev): Likewise.
+	(do_neon_rshift_round_imm): Likewise.
+	(insns): Likewise.
+	* testsuite/gas/arm/mve-vrev-bad.d: New test.
+	* testsuite/gas/arm/mve-vrev-bad.l: New test.
+	* testsuite/gas/arm/mve-vrev-bad.s: New test.
+	* testsuite/gas/arm/mve-vshr-bad.d: New test.
+	* testsuite/gas/arm/mve-vshr-bad.l: New test.
+	* testsuite/gas/arm/mve-vshr-bad.s: New test.
+	* testsuite/gas/arm/mve-vsli-bad.d: New test.
+	* testsuite/gas/arm/mve-vsli-bad.l: New test.
+	* testsuite/gas/arm/mve-vsli-bad.s: New test.
+	* testsuite/gas/arm/mve-vsri-bad.d: New test.
+	* testsuite/gas/arm/mve-vsri-bad.l: New test.
+	* testsuite/gas/arm/mve-vsri-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_vrint_1): Accept MVE variants.
+	(insns): Change entries to accept MVE variants.
+	* testsuite/gas/arm/mve-vrint-bad.d: New test.
+	* testsuite/gas/arm/mve-vrint-bad.l: New test.
+	* testsuite/gas/arm/mve-vrint-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (M_MNEM_vshrnt, M_MNEM_vshrnb, M_MNEM_vrshrnt,
+	 M_MNEM_vqshrnt, M_MNEM_vqshrnb, M_MNEM_vqshrunt, M_MNEM_vqshrunb,
+	 M_MNEM_vrshrnb, M_MNEM_vqrshrnt, M_MNEM_vqrshrnb, M_MNEM_vqrshrunt,
+	 M_MNEM_vqrshrunb): New instruction encodings.
+	(do_mve_vshrn): New encoding function.
+	(insns): Add entries for MVE mnemonics.
+	* testsuite/gas/arm/mve-vqrshrn-bad.d: New test.
+	* testsuite/gas/arm/mve-vqrshrn-bad.l: New test.
+	* testsuite/gas/arm/mve-vqrshrn-bad.s: New test.
+	* testsuite/gas/arm/mve-vshrn-bad.d: New test.
+	* testsuite/gas/arm/mve-vshrn-bad.l: New test.
+	* testsuite/gas/arm/mve-vshrn-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (M_MNEM_vqmovnt, M_MNEM_vqmovnb,
+	 M_MNEM_vqmovunt, M_MNEM_vqmovunb): New instruction encodings.
+	(do_mve_vqmovn): New encoding function.
+	(do_neon_rshl): Change to accepte MVE variants.
+	(insns): Change entries and add new for MVE mnemonics.
+	* testsuite/gas/arm/mve-vqmovn-bad.d: New test.
+	* testsuite/gas/arm/mve-vqmovn-bad.l: New test.
+	* testsuite/gas/arm/mve-vqmovn-bad.s: New test.
+	* testsuite/gas/arm/mve-vqrshl-bad.d: New test.
+	* testsuite/gas/arm/mve-vqrshl-bad.l: New test.
+	* testsuite/gas/arm/mve-vqrshl-bad.s: New test.
+	* testsuite/gas/arm/mve-vrshl-bad.d: New test.
+	* testsuite/gas/arm/mve-vrshl-bad.l: New test.
+	* testsuite/gas/arm/mve-vrshl-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): Add new operand.
+	(parse_operands): Handle new operand.
+	(do_mve_vqdmull): New encoding function.
+	(insns): Add entry for MVE mnemonics.
+	* testsuite/gas/arm/mve-vqdmull-bad.d: New test.
+	* testsuite/gas/arm/mve-vqdmull-bad.l: New test.
+	* testsuite/gas/arm/mve-vqdmull-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): Add new operand.
+	(parse_operands): Handle new operand.
+	(mve_encode_qqr): Handle new instructions.
+	(do_neon_qdmulh): Add support for MVE variants.
+	(do_neon_qrdmlah): Likewise.
+	(do_mve_vqdmlah): New encoding function.
+	(insns): Change entries and add new entries for MVE mnemonics.
+	* testsuite/gas/arm/mve-vqdmulh-bad.d: New test.
+	* testsuite/gas/arm/mve-vqdmulh-bad.l: New test.
+	* testsuite/gas/arm/mve-vqdmulh-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_mve_vqdmladh): New encoding function.
+	(insns): Add entries for MVE mnemonics.
+	* testsuite/gas/arm/mve-vqdmladh-bad.d: New test.
+	* testsuite/gas/arm/mve-vqdmladh-bad.l: New test.
+	* testsuite/gas/arm/mve-vqdmladh-bad.s: New test.
+	* testsuite/gas/arm/mve-vqdmlsdh-bad.d: New test.
+	* testsuite/gas/arm/mve-vqdmlsdh-bad.l: New test.
+	* testsuite/gas/arm/mve-vqdmlsdh-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_mve_vpsel): New encoding function.
+	(do_mve_vpnot): Likewise.
+	(insns): Add entries for MVE mnemonics.
+	* testsuite/gas/arm/mve-vpnot-bad.d: New test.
+	* testsuite/gas/arm/mve-vpnot-bad.l: New test.
+	* testsuite/gas/arm/mve-vpnot-bad.s: New test.
+	* testsuite/gas/arm/mve-vpsel-bad.d: New test.
+	* testsuite/gas/arm/mve-vpsel-bad.l: New test.
+	* testsuite/gas/arm/mve-vpsel-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_neon_mvn): Change to accept MVE variants.
+	(do_neon_sat_abs_neg): Likewise.
+	(insns): Likewise.
+	* testsuite/gas/arm/mve-vmvn-bad.d: New test.
+	* testsuite/gas/arm/mve-vmvn-bad.l: New test.
+	* testsuite/gas/arm/mve-vmvn-bad.s: New test.
+	* testsuite/gas/arm/mve-vqabsneg-bad.d: New test.
+	* testsuite/gas/arm/mve-vqabsneg-bad.l: New test.
+	* testsuite/gas/arm/mve-vqabsneg-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_mve_vmlas): New encoding function.
+	(do_mve_vmulh): Likewise.
+	(insns): Add entries for MVE mnemonics.
+	* testsuite/gas/arm/mve-vmlas-bad.d: New test.
+	* testsuite/gas/arm/mve-vmlas-bad.l: New test.
+	* testsuite/gas/arm/mve-vmlas-bad.s: New test.
+	* testsuite/gas/arm/mve-vmulh-bad.d: New test.
+	* testsuite/gas/arm/mve-vmulh-bad.l: New test.
+	* testsuite/gas/arm/mve-vmulh-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): New operand.
+	(parse_operands): Handle new operand.
+	(mve_encode_qqr): Handle new instructions.
+	(do_neon_dyadic_i64_su): Accept MVE variants.
+	(neon_dyadic_misc): Likewise.
+	(do_neon_mac_maybe_scalar): Likewise.
+	(do_neon_mul): Likewise.
+	(insns): Change to accept MVE variants.
+	* testsuite/gas/arm/mve-vmla-bad.d: New test.
+	* testsuite/gas/arm/mve-vmla-bad.l: New test.
+	* testsuite/gas/arm/mve-vmla-bad.s: New test.
+	* testsuite/gas/arm/mve-vmul-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vmul-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vmul-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vmul-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vmul-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vmul-bad-2.s: New test.
+	* testsuite/gas/arm/mve-vqaddsub-bad.d: New test.
+	* testsuite/gas/arm/mve-vqaddsub-bad.l: New test.
+	* testsuite/gas/arm/mve-vqaddsub-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (M_MNEM_vmlaldav, M_MNEM_vmlaldava,
+	 M_MNEM_vmlaldavx, M_MNEM_vmlaldavax, M_MNEM_vmlsldav,
+	 M_MNEM_vmlsldava, M_MNEM_vmlsldavx, M_MNEM_vmlsldavax,
+	 M_MNEM_vrmlaldavhx, M_MNEM_vrmlaldavhax, M_MNEM_vrmlsldavh,
+	 M_MNEM_vrmlsldavha, M_MNEM_vrmlsldavhx, M_MNEM_vrmlsldavhax): New
+	instruction encodings.
+	(NEON_SHAPE_DEF): New shape
+	(mve_encode_rrqq): New encoding helper function.
+	(do_mve_vmlaldav): New encoding function.
+	(do_mve_vrmlaldavh): New encoding function.
+	(insns): Add entries for MVE mnemonics.
+	* testsuite/gas/arm/mve-vmlaldav-bad.d: New test.
+	* testsuite/gas/arm/mve-vmlaldav-bad.l: New test.
+	* testsuite/gas/arm/mve-vmlaldav-bad.s: New test.
+	* testsuite/gas/arm/mve-vmlalv-bad.d: New test.
+	* testsuite/gas/arm/mve-vmlalv-bad.l: New test.
+	* testsuite/gas/arm/mve-vmlalv-bad.s: New test.
+	* testsuite/gas/arm/mve-vmlsldav-bad.d: New test.
+	* testsuite/gas/arm/mve-vmlsldav-bad.l: New test.
+	* testsuite/gas/arm/mve-vmlsldav-bad.s: New test.
+	* testsuite/gas/arm/mve-vrmlaldavh-bad.d: New test.
+	* testsuite/gas/arm/mve-vrmlaldavh-bad.l: New test.
+	* testsuite/gas/arm/mve-vrmlaldavh-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (M_MNEM_vmaxv, M_MNEM_vmaxav, M_MNEM_vminv,
+	 M_MNEM_vminav): New instruction encodings.
+	(do_mve_vmaxv): New encoding function.
+	(insns): Add entries for new MVE mnemonics.
+	* testsuite/gas/arm/mve-vmaxv-vminv-bad.d: New test.
+	* testsuite/gas/arm/mve-vmaxv-vminv-bad.l: New test.
+	* testsuite/gas/arm/mve-vmaxv-vminv-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_mve_vmaxnmv): New encoding function.
+	(insns): Add entries for new mnemonics.
+	* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.d: New test.
+	* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.l: New test.
+	* testsuite/gas/arm/mve-vmaxnmv-vminnmv-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_mve_vmaxa_vmina): New encoding function.
+	(do_mve_vmaxnma_vminnma): Likewise.
+	(do_neon_dyadic_if_su): Change to support MVE variants.
+	(do_vmaxnm): Likewise.
+	(insns): Change to accept MVE variants and add new.
+	* testsuite/gas/arm/mve-vmax-vmin-bad.d: New test.
+	* testsuite/gas/arm/mve-vmax-vmin-bad.l: New test.
+	* testsuite/gas/arm/mve-vmax-vmin-bad.s: New test.
+	* testsuite/gas/arm/mve-vmaxa-vmina-bad.d: New test.
+	* testsuite/gas/arm/mve-vmaxa-vmina-bad.l: New test.
+	* testsuite/gas/arm/mve-vmaxa-vmina-bad.s: New test.
+	* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.d: New test.
+	* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.l: New test.
+	* testsuite/gas/arm/mve-vmaxnm-vminnm-bad.s: New test.
+	* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.d: New test.
+	* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.l: New test.
+	* testsuite/gas/arm/mve-vmaxnma-vminnma-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): New operand.
+	(parse_operands): Handle new operand.
+	(mve_encode_qqr): Change to support new instructions.
+	(enum vfp_or_neon_is_neon_bits): Moved.
+	(vfp_or_neon_is_neon): Moved.
+	(check_simd_pred_availability): Moved.
+	(do_neon_dyadic_i_su): Changed to support MVE variants.
+	(neon_dyadic_misc): Changed mve_encode_qqr call.
+	(do_mve_vbrsr): Likewise.
+	(do_mve_vhcadd): New encoding function.
+	(insns): Change existing to accept MVE variants and add new.
+	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd-bad.d: New test.
+	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd-bad.l: New test.
+	* testsuite/gas/arm/mve-vhadd-vhsub-vrhadd-bad.s: New test.
+	* testsuite/gas/arm/mve-vhcadd-bad.d: New test.
+	* testsuite/gas/arm/mve-vhcadd-bad.l: New test.
+	* testsuite/gas/arm/mve-vhcadd-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_neon_fmac): Change to support MVE variants.
+	(insns): Change to accept MVE variants.
+	* testsuite/gas/arm/mve-vfma-vfms-bad.d: New test.
+	* testsuite/gas/arm/mve-vfma-vfms-bad.l: New test.
+	* testsuite/gas/arm/mve-vfma-vfms-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (M_MNEM_vddup, M_MNEM_vdwdup, M_MNEM_vidup,
+	 M_MNEM_viwdup): New instruction encodings.
+	(NEON_SHAPE_DEF): New shapes.
+	(do_mve_viddup): New encoding function.
+	(do_neon_dup): Change to support new MVE variants.
+	(insns): Change existing to accept MVE variants and add new.
+	* testsuite/gas/arm/mve-vddup-bad.d: New test.
+	* testsuite/gas/arm/mve-vddup-bad.l: New test.
+	* testsuite/gas/arm/mve-vddup-bad.s: New test.
+	* testsuite/gas/arm/mve-vdup-bad.d: New test.
+	* testsuite/gas/arm/mve-vdup-bad.l: New test.
+	* testsuite/gas/arm/mve-vdup-bad.s: New test.
+	* testsuite/gas/arm/mve-vidup-bad.d: New test.
+	* testsuite/gas/arm/mve-vidup-bad.l: New test.
+	* testsuite/gas/arm/mve-vidup-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_mve_vfmas): New encoding function.
+	(do_neon_cls): Change to support MVE variants.
+	(do_neon_clz): Change to support MVE variants.
+	(insns): Change to support MVE variants and add new.
+	* testsuite/gas/arm/mve-vcls-bad.d: New test.
+	* testsuite/gas/arm/mve-vcls-bad.l: New test.
+	* testsuite/gas/arm/mve-vcls-bad.s: New test.
+	* testsuite/gas/arm/mve-vclz-bad.d: New test.
+	* testsuite/gas/arm/mve-vclz-bad.l: New test.
+	* testsuite/gas/arm/mve-vclz-bad.s: New test.
+	* testsuite/gas/arm/mve-vfmas-bad.d: New test.
+	* testsuite/gas/arm/mve-vfmas-bad.l: New test.
+	* testsuite/gas/arm/mve-vfmas-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): New operands.
+	(parse_operands): Handle new operands.
+	(do_mve_vcmul): New encoding function.
+	(do_vcmla): Change to support MVE variants.
+	(do_vcadd): Change to support MVE variants.
+	(insns): Change existing to support MVE variants and add new.
+	* testsuite/gas/arm/mve-vcadd-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vcadd-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vcadd-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vcadd-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vcadd-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vcadd-bad-2.s: New test.
+	* testsuite/gas/arm/mve-vcmla-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vcmla-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vcmla-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vcmla-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vcmla-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vcmla-bad-2.s: New test.
+	* testsuite/gas/arm/mve-vcmul-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vcmul-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vcmul-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vcmul-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vcmul-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vcmul-bad-2.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): New operands.
+	(parse_operands): Handle new operands.
+	(enum vfp_or_neon_is_neon_bits): Moved
+	(vfp_or_neon_is_neon): Moved
+	(check_simd_pred_availability): Moved.
+	(do_neon_logic): Change to accept MVE variants.
+	(insns): Changed to accept MVE variants.
+	* testsuite/gas/arm/mve-vand-bad.d: New test.
+	* testsuite/gas/arm/mve-vand-bad.l: New test.
+	* testsuite/gas/arm/mve-vand-bad.s: New test.
+	* testsuite/gas/arm/mve-vbic-bad.d: New test.
+	* testsuite/gas/arm/mve-vbic-bad.l: New test.
+	* testsuite/gas/arm/mve-vbic-bad.s: New test.
+	* testsuite/gas/arm/mve-veor-bad.d: New test.
+	* testsuite/gas/arm/mve-veor-bad.l: New test.
+	* testsuite/gas/arm/mve-veor-bad.s: New test.
+	* testsuite/gas/arm/mve-vorn-bad.d: New test.
+	* testsuite/gas/arm/mve-vorn-bad.l: New test.
+	* testsuite/gas/arm/mve-vorn-bad.s: New test.
+	* testsuite/gas/arm/mve-vorr-bad.d: New test.
+	* testsuite/gas/arm/mve-vorr-bad.l: New test.
+	* testsuite/gas/arm/mve-vorr-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (M_MNEM_vaddlv, M_MNEM_vaddlva, M_MNEM_vaddv,
+	 M_MNEM_vaddva): New instruction encodings.
+	(mve_encode_rq): New encoding helper function.
+	(do_mve_vaddlv): New encoding function.
+	(do_mve_vaddv): New encoding function.
+	* testsuite/gas/arm/mve-vaddlv-bad.d: New test.
+	* testsuite/gas/arm/mve-vaddlv-bad.l: New test.
+	* testsuite/gas/arm/mve-vaddlv-bad.s: New test.
+	* testsuite/gas/arm/mve-vaddv-bad.d: New test.
+	* testsuite/gas/arm/mve-vaddv-bad.l: New test.
+	* testsuite/gas/arm/mve-vaddv-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (M_MNEM_vadc, M_MNEM_vadci, M_MNEM_vbrsr):
+	New instruction encodings.
+	(do_mve_vadc): New encoding instruction.
+	(do_mve_vbrsr): Likewise.
+	(do_mve_vsbc): Likewise.
+	* testsuite/gas/arm/mve-vadc-bad.d: New test.
+	* testsuite/gas/arm/mve-vadc-bad.l: New test.
+	* testsuite/gas/arm/mve-vadc-bad.s: New test.
+	* testsuite/gas/arm/mve-vbrsr-bad.d: New test.
+	* testsuite/gas/arm/mve-vbrsr-bad.l: New test.
+	* testsuite/gas/arm/mve-vbrsr-bad.s: New test.
+	* testsuite/gas/arm/mve-vsbc-bad.d: New test.
+	* testsuite/gas/arm/mve-vsbc-bad.l: New test.
+	* testsuite/gas/arm/mve-vsbc-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (MVE_BAD_QREG): New error message.
+	(enum operand_parse_code): Define new operand.
+	(parse_operands): Handle new operand.
+	(do_mve_vpt): Change for VPT blocks.
+	(NEON_SHAPE_DEF): New shape.
+	(neon_logbits): Moved.
+	(LOW4): Moved
+	(HI1): Moved
+	(mve_get_vcmp_vpt_cond): New function to translate vpt conditions.
+	(do_mve_vcmp): New encoding function.
+	(do_vfp_nsyn_cmp): Changed to support MVE variants.
+	(insns): Change to support MVE variants of vcmp and add vpt.
+	* testsuite/gas/arm/mve-vcmp-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vcmp-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vcmp-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vcmp-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vcmp-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vcmp-bad-2.s: New test.
+	* testsuite/gas/arm/mve-vpt-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vpt-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vpt-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vpt-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vpt-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vpt-bad-2.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (struct arm_it): Expand isscalar field to be able to
+	distinguish between types of scalar.
+	(parse_typed_reg_or_scalar): Change to accept MVE scalar variants.
+	(parse_scalar): Likewise.
+	(parse_neon_mov): Accept MVE variant.
+	(po_scalar_or_goto): Make use reg_type.
+	(parse_operands): Change uses of po_scalar_or_goto.
+	(do_vfp_sp_monadic): Change to accept MVE variants.
+	(do_vfp_reg_from_sp): Likewise.
+	(do_vfp_sp_from_reg): Likewise.
+	(do_vfp_dp_rd_rm): Likewise.
+	(do_vfp_dp_rd_rn_rm): Likewise.
+	(do_vfp_dp_rm_rd_rn): Likewise.
+	(M_MNEM_vmovlt, M_MNEM_vmovlb, M_MNEM_vmovnt, M_MNEM_vmovnb): New
+	instruction encodings.
+	(NEON_SHAPE_DEF): New shape.
+	(do_mve_mov): New encoding fuction.
+	(do_mve_movn): Likewise.
+	(do_mve_movl): Likewise.
+	(do_neon_mov): Change to accept MVE variants.
+	(mcCE): New MACRO.
+	(insns): Accept new MVE variants and instructions.
+	* testsuite/gas/arm/mve-vmov-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vmov-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vmov-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vmov-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vmov-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vmov-bad-2.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum operand_parse_code): Add new operand.
+	(parse_operands): Handle new operand.
+	(do_neon_cvt_1): Handle MVE variants.
+	(do_neon_cvttb_1): Likewise.
+	(insns): Accept MVE variants.
+	* testsuite/gas/arm/mve-vcvt-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-2.s: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-3.d: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-3.l: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-3.s: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-4.d: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-4.l: New test.
+	* testsuite/gas/arm/mve-vcvt-bad-4.s: New test.
+	* testsuite/gas/arm/mve-vcvt-bad.d: New test.
+	* testsuite/gas/arm/mve-vcvt-bad.l: New test.
+	* testsuite/gas/arm/mve-vcvt-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (struct arm_it): Make immisreg field larger to hold
+	type of register.
+	(enum shift_kind): Add SHIFT_UXTW shift kind.
+	(enum parse_shift_mode): Add SHIFT_UXTW_IMMEDIATE shift mode.
+	(parse_shift): Handle new shift type.
+	(parse_address_main): Accept new addressing modes.
+	(M_MNEM_vstrb, M_MNEM_vstrh, M_MNEM_vstrw, M_MNEM_vstrd,
+	 M_MNEM_vldrb, M_MNEM_vldrh, M_MNEM_vldrw, M_MNEM_vldrd): New
+	instruction encodings.
+	(do_mve_vstr_vldr_QI): New encoding functions.
+	(do_mve_vstr_vldr_RQ): Likewise.
+	(do_mve_vstr_vldr_RI): Likewise.
+	(do_mve_vstr_vldr): Likewise.
+	* testsuite/gas/arm/mve-vldr-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vldr-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vldr-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vldr-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vldr-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vldr-bad-2.s: New test.
+	* testsuite/gas/arm/mve-vldr-bad-3.d: New test.
+	* testsuite/gas/arm/mve-vldr-bad-3.l: New test.
+	* testsuite/gas/arm/mve-vldr-bad-3.s: New test.
+	* testsuite/gas/arm/mve-vstr-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vstr-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vstr-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vstr-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vstr-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vstr-bad-2.s: New test.
+	* testsuite/gas/arm/mve-vstr-bad-3.d: New test.
+	* testsuite/gas/arm/mve-vstr-bad-3.l: New test.
+	* testsuite/gas/arm/mve-vstr-bad-3.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum it_instruction_type): Add MVE_UNPREDICABLE_INSN.
+	(BAD_EL_TYPE): New error message.
+	(parse_neon_el_struct_list): Adapt to be able to accept MVE variant.
+	(parse_address_main): Likewise.
+	(group_reloc_type): Add GROUP_MVE.
+	(enum operand_parse_code): Add new operands.
+	(parse_operands): Handle new operands.
+	(M_MNEM_vst20, M_MNEM_vst21, M_MNEM_vst40, M_MNEM_vst41, M_MNEM_vst42,
+	 M_MNEM_vst43, M_MNEM_vld20, M_MNEM_vld21, M_MNEM_vld40, M_MNEM_vld41,
+	 M_MNEM_vld42, M_MNEM_vld43): New encodings.
+	(do_mve_vst_vld): New encoding function.
+	(do_neon_ld_st_interleave): Use BAD_EL_TYPE.
+	(it_fsm_pre_encode): Handle new it_instruction_type
+	(handle_pred_state): Likewise.
+	* testsuite/gas/arm/mve-vstld-bad.d: New test.
+	* testsuite/gas/arm/mve-vstld-bad.l: New test.
+	* testsuite/gas/arm/mve-vstld-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (BAD_MVE_AUTO): New error message.
+	(BAD_MVE_SRCDEST): Likewise.
+	(mark_feature_used): Diagnose MVE only instructions when in
+	auto-detection mode or -march=all.
+	(enum operand_parse_code): Define new operand.
+	(parse_operands): Handle new operand.
+	(M_MNEM_vmullt, M_MNEM_vmullb): New encodings.
+	(mve_encode_qqq): New encoding helper function.
+	(do_mve_vmull): New encoding function.
+	(insns): Handle new instructions.
+	* testsuite/gas/arm/mve-vmullbt-bad.d: New test.
+	* testsuite/gas/arm/mve-vmullbt-bad.l: New test.
+	* testsuite/gas/arm/mve-vmullbt-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (struct asm_opcode): Make avalue a full int.
+	(BAD_ODD, BAD_EVEN, BAD_SIMD_TYPE): New errors.
+	(enum operand_parse_code): Handle new operands.
+	(parse_operands): Likewise.
+	(M_MNEM_vabav, M_MNEM_vmladav, M_MNEM_vmladava, M_MNEM_vmladavx,
+	 M_MNEM_vmladavax, M_MNEM_vmlsdav, M_MNEM_vmlsdava, M_MNEM_vmlsdavx,
+	 M_MNEM_vmlsdavax): Define new encodings.
+	(NEON_SHAPE_DEF): Add new shape.
+	(neon_check_type): Use BAD_SIMD_TYPE.
+	(mve_encode_rqq): New encoding helper function.
+	(do_mve_vabav, do_mve_vmladav): New encoding functions.
+	(mCEF): New MACRO.
+	* testsuite/gas/arm/mve-vabav-bad.d: New test.
+	* testsuite/gas/arm/mve-vabav-bad.l: New test.
+	* testsuite/gas/arm/mve-vabav-bad.s: New test.
+	* testsuite/gas/arm/mve-vmladav-bad.d: New test.
+	* testsuite/gas/arm/mve-vmladav-bad.l: New test.
+	* testsuite/gas/arm/mve-vmladav-bad.s: New test.
+	* testsuite/gas/arm/mve-vmlav-bad.d: New test.
+	* testsuite/gas/arm/mve-vmlav-bad.l: New test.
+	* testsuite/gas/arm/mve-vmlav-bad.s: New test.
+	* testsuite/gas/arm/mve-vmlsdav-bad.d: New test.
+	* testsuite/gas/arm/mve-vmlsdav-bad.l: New test.
+	* testsuite/gas/arm/mve-vmlsdav-bad.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_neon_abs_neg): Make it accept MVE variant.
+	(insns): Change vabs and vneg entries to accept MVE variants.
+	* testsuite/gas/arm/mve-vabsneg-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vabsneg-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vabsneg-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vabsneg-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vabsneg-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vabsneg-bad-2.s: New test.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (enum it_instruction_type): Rename to...
+	(enum pred_instruction_type): ... this. Include VPT types.
+	(it_insn_type): Rename to ...
+	(pred_insn_type): .. this.
+	(arm_it): Change comment.
+	(enum arm_reg_type): Add new value.
+	(reg_expected_msgs): New entry.
+	(asm_opcode): Add mayBeVecPred member.
+	(BAD_SYNTAX, BAD_NOT_VPT, BAD_OUT_VPT, BAD_VPT_COND, MVE_NOT_IT,
+	 MVE_NOT_VPT, MVE_BAD_PC, MVE_BAD_SP): New diagnostic MACROS.
+	(arm_vcond_hsh): New table for vector condition codes.
+	(now_it): Rename to ...
+	(now_pred): ... this.
+	(now_it_compatible): Rename to ...
+	(now_pred_compatible): ... this.
+	(in_it_block): Rename to ...
+	(in_pred_block): ... this.
+	(handle_it_state): Rename to ...
+	(handle_pred_state): ... this. And change it to accept VPT blocks.
+	(set_it_insn_type): Rename to ...
+	(set_pred_insn_type): ... this.
+	(set_it_insn_type_nonvoid): Rename to ...
+	(set_pred_insn_type_nonvoid): ... this.
+	(set_it_insn_type_last): Rename to ...
+	(set_pred_insn_type_last): ... this.
+	(record_feature_use): Moved.
+	(mark_feature_used): Likewise.
+	(parse_typed_reg_or_scalar): Add new case for REG_TYPE_MQ.
+	(emit_insn): Use renamed functions and variables.
+	(enum operand_parse_code): Add new operands.
+	(parse_operands): Handle new operands.
+	(do_scalar_fp16_v82_encode): Change predication detection.
+	(do_it): Use renamed functions and variables.
+	(do_t_add_sub): Likewise.
+	(do_t_arit3): Likewise.
+	(do_t_arit3c): Likewise.
+	(do_t_blx): Likewise.
+	(do_t_branch): Likewise.
+	(do_t_bkpt_hlt1): Likewise.
+	(do_t_branch23): Likewise.
+	(do_t_bx): Likewise.
+	(do_t_bxj): Likewise.
+	(do_t_cond): Likewise.
+	(do_t_csdb): Likewise.
+	(do_t_cps): Likewise.
+	(do_t_cpsi): Likewise.
+	(do_t_cbz): Likewise.
+	(do_t_it): Likewise.
+	(do_mve_vpt): New function to handle VPT blocks.
+	(encode_thumb2_multi): Use renamed functions and variables.
+	(do_t_ldst): Use renamed functions and variables.
+	(do_t_mov_cmp): Likewise.
+	(do_t_mvn_tst): Likewise.
+	(do_t_mul): Likewise.
+	(do_t_nop): Likewise.
+	(do_t_neg): Likewise.
+	(do_t_rsb): Likewise.
+	(do_t_setend): Likewise.
+	(do_t_shift): Likewise.
+	(do_t_smc): Likewise.
+	(do_t_tb): Likewise.
+	(do_t_udf): Likewise.
+	(do_t_loloop): Likewise.
+	(do_neon_cvt_1): Likewise.
+	(do_vfp_nsyn_cvt_fpv8): Likewise.
+	(do_vsel): Likewise.
+	(do_vmaxnm): Likewise.
+	(do_vrint_1): Likewise.
+	(do_crypto_2op_1): Likewise.
+	(do_crypto_3op_1): Likewise.
+	(do_crc32_1): Likewise.
+	(it_fsm_pre_encode): Likewise.
+	(it_fsm_post_encode): Likewise.
+	(force_automatic_it_block_close): Likewise.
+	(check_it_blocks_finished): Likewise.
+	(check_pred_blocks_finished): Likewise.
+	(arm_cleanup): Likewise.
+	(now_it_add_mask): Rename to ...
+	(now_pred_add_mask): ... this. And use new variables and functions.
+	(NEON_ENC_TAB): Add entries for vabdl, vaddl and vsubl.
+	(N_I_MVE, N_F_MVE, N_SU_MVE): New MACROs.
+	(neon_check_type): Generalize error message.
+	(mve_encode_qqr): New MVE generic encoding function.
+	(neon_dyadic_misc): Change to accept MVE variants.
+	(do_neon_dyadic_if_su): Likewise.
+	(do_neon_addsub_if_i): Likewise.
+	(do_neon_dyadic_long): Likewise.
+	(vfp_or_neon_is_neon): Add extra checks.
+	(check_simd_pred_availability): Helper function to check SIMD
+	instruction availability with respect to predication.
+	(enum opcode_tag): New suffix value.
+	(opcode_lookup): Change to handle VPT blocks.
+	(new_automatic_it_block): Rename to ...
+	(close_automatic_it_block): ...this.
+	(TxCE, TxC3, TxC3w, TUE, TUEc, TUF, CE, C3, ToC, ToU,
+	 toC, toU, CL, cCE, cCL, C3E, xCM_, UE, UF, NUF, nUF,
+	 NCE_tag, NCE, NCEF, nCE_tag, nCE, nCEF): Add default value for new
+	field.
+	(mCEF, mnCEF, mnCE, MNUF, mnUF, mToC, MNCE, MNCEF): New MACROs.
+	(insns): Redefine vadd, vsub, cabd, vabdl, vaddl, vsubl to accept MVE
+	variants. Add entries for vscclrm, and vpst.
+	(md_begin): Add arm_vcond_hsh initialization.
+	* config/tc-arm.h (enum it_state): Rename to...
+	(enum pred_state): ...this.
+	(struct current_it): Rename to...
+	(struct current_pred): ...this.
+	(enum pred_type): New enum.
+	(struct arm_segment_info_type): Use current_pred.
+	* testsuite/gas/arm/armv8_3-a-fp-bad.l: Update error message.
+	* testsuite/gas/arm/armv8_3-a-simd-bad.l: Update error message.
+	* testsuite/gas/arm/dotprod-illegal.l: Update error message.
+	* testsuite/gas/arm/mve-vaddsubabd-bad-1.d: New test.
+	* testsuite/gas/arm/mve-vaddsubabd-bad-1.l: New test.
+	* testsuite/gas/arm/mve-vaddsubabd-bad-1.s: New test.
+	* testsuite/gas/arm/mve-vaddsubabd-bad-2.d: New test.
+	* testsuite/gas/arm/mve-vaddsubabd-bad-2.l: New test.
+	* testsuite/gas/arm/mve-vaddsubabd-bad-2.s: New test.
+	* testsuite/gas/arm/mve-vpst-bad.d: New test.
+	* testsuite/gas/arm/mve-vpst-bad.l: New test.
+	* testsuite/gas/arm/mve-vpst-bad.s: New test.
+	* testsuite/gas/arm/neon-ldst-es-bad.l: Updated error message.
+
+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (mve_ext, mve_fp_ext): New features.
+	(armv8_1m_main_ext_table): Add new extensions.
+	(aeabi_set_public_attributes): Translate new features to new build attributes.
+	(arm_convert_symbolic_attribute): Add Tag_MVE_arch.
+	* doc/c-arm.texi: Document new extensions and new build attribute.
+
+2019-05-15  John Darrington <john@darrington.wattle.id.au>
+
+	* config/tc-s12z.c (register_prefix): New variable.  (md_show_usage,
+	md_parse_option):  parse the new option.
+	(lex_reg_name): Scan the prefix if one is set.
+	* doc/c-s12z.texi (S12Z-Opts): Document the new option.
+	* testsuite/gas/s12z/reg-prefix.d: New file.
+	* testsuite/gas/s12z/reg-prefix.s: New file.
+	* testsuite/gas/s12z/s12z.exp: Add them.
+
+2019-05-14  John Darrington <john@darrington.wattle.id.au>
+
+	* doc/as.texi (Machine Dependencies): Fix misaligned menu entry.
+
+2019-05-15  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-csky.c (md_convert_frag): Initialise trailing
+	padding for COND_JUMP_PIC.
+
+2019-05-15  Alan Modra  <amodra@gmail.com>
+
+	* dwarf2dbg.c: Whitespace fixes.
+	(get_filenum): Don't strdup "file".  Adjust error message.
+	(dwarf2_directive_filename): Use an unsigned type for "num".
+	Catch truncation of file number and overflow of get_filenum
+	XRESIZEVEC multiplication.  Delete dead code.
+
+2019-05-15  Alan Modra  <amodra@gmail.com>
+
+	PR 24538
+	* config/tc-tic54x.c (tic54x_start_line_hook): Do skip end of line
+	chars in setting endp.
+
+2019-05-14  Nick Clifton  <nickc@redhat.com>
+
+	PR 24538
+	* config/tc-i386-intel.c (i386_intel_simplify_register): Reject
+	illegal register numbers.
+
+2019-05-10  Nick Clifton  <nickc@redhat.com>
+
+	PR 24538
+	* macro.c (get_any_string): Increase size of buffer used to hold
+	decimal value of expression result.
+	* dw2gencfi.c (get_debugseg_name): Handle an empty name.
+	* dwarf2dbg.c (get_filenum): Catch integer wraparound when
+	extending allocate file array.
+	(dwarf2_directive_filename): Add extra checks of the computed file
+	number.
+	* config/tc-arm.c (arm_tc_equal_in_insn): Insert copy of name into
+	warning hash table.
+	(s_arm_eabi_attribute): Check for obj_elf_vendor_attribute
+	returning -1.
+	* config/tc-i386.c (i386_output_nops): Catch an attempt to
+	generate nops of negative lengths.
+	* as.h (MAX_LITTLENUMS): Move definition to here from...
+	* config/atof-ieee.c: ...here.
+	* config/tc-aarch64.c: ...here.
+	* config/tc-arc.c: ...here.
+	* config/tc-arm.c: ...here.
+	* config/tc-epiphany.c: ...here.
+	* config/tc-i386.c: ...here.
+	* config/tc-ia64.c: ...here.  (And correct the value).
+	* config/tc-m32c.c: ...here.
+	* config/tc-m32r.c: ...here.
+	* config/tc-metag.c: ...here.
+	* config/tc-microblaze.c: ...here.
+	* config/tc-nds32.c: ...here.
+	* config/tc-or1k.c: ...here.
+	* config/tc-score.c: ...here.
+	* config/tc-score7.c: ...here.
+	* config/tc-tic4x.c: ...here.
+	* config/tc-tilegx.c: ...here.
+	* config/tc-tilepro.c: ...here.
+	* config/tc-visium.c: ...here.
+	* config/tc-sh.c (md_assemble): Add check for an instruction with
+	no opcodes.
+	* config/tc-mips.c (mips_lookup_insn): Add check for very short
+	instruction name.
+	* config/tc-tic54x.c: Use unsigned chars to access is_end_of_line
+	array.
+	(tic54x_start_line_hook): Check for an empty line.
+	(next_line_shows_parallel): Do not walk off the end of the string.
+	(tic54x_macro_start): Check for too much macro nesting.
+	(tic54x_start_label): Add label_start parameter.  Use this
+	parameter to check the first character of the label.
+
+	* config/tc-tic54x.h (TC_START_LABEL_WITHOUT_COLON): Pass
+	line_start variable to tic54x_start_label.
+
+2019-05-10  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* config/tc-mips.c (macro) <M_ADD_I, M_SUB_I, M_DADD_I, M_DSUB_I>:
+	Add expansions for MIPS r6.
+	* testsuite/gas/mips/add.s: Enable tests for R6.
+	* testsuite/gas/mips/daddi.s: Annotate to test DADD for R6.
+	* testsuite/gas/mips/mipsr6@add.d: Likewise.
+	* gas/testsuite/gas/mips/mipsr6@dadd.d: New test.
+	* gas/testsuite/gas/mips/mips.exp: Run the new test.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* testsuite/gas/aarch64/sve2.d: Remove file format restriction.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* testsuite/gas/aarch64/illegal-sve2-aes.d: New test.
+	* testsuite/gas/aarch64/illegal-sve2-bitperm.d: New test.
+	* testsuite/gas/aarch64/illegal-sve2-sha3.d: Test new instructions.
+	* testsuite/gas/aarch64/illegal-sve2-sm4.d: Test new instructions.
+	* testsuite/gas/aarch64/illegal-sve2-sve1ext.d: Test new instructions.
+	* testsuite/gas/aarch64/illegal-sve2-sve1ext.l: Test new instructions.
+	* testsuite/gas/aarch64/illegal-sve2.d: Test new instructions.
+	* testsuite/gas/aarch64/illegal-sve2.l: Test new instructions.
+	* testsuite/gas/aarch64/illegal-sve2.s: Test new instructions.
+	* testsuite/gas/aarch64/sve1-extended-sve2.s: New test.
+	* testsuite/gas/aarch64/sve2.d: Test new instructions.
+	* testsuite/gas/aarch64/sve2.s: Test new instructions.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (parse_operands): Handle new SVE_SHLIMM_UNPRED_22
+	operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (parse_operands): Handle new SVE_Zm4_11_INDEX
+	operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (parse_operands): Handle new SVE_SHRIMM_UNPRED_22
+	operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (REG_ZR): Macro specifying zero register.
+	(parse_address_main): Account for new addressing mode [Zn.S, Xm].
+	(parse_operands): Handle new SVE_ADDR_ZX operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (parse_operands): Handle new SVE_Zm3_11_INDEX
+	operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (parse_operands): Handle new SVE_IMM_ROT3 operand.
+
+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c: Add command line architecture feature flags
+	"sve2", "sve2-sm4", "sve2-aes", "sve2-sha3", "bitperm".
+	* doc/c-aarch64.texi: Document new architecture feature flags.
+
+2019-05-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/dwarf2-1.s,
+	* testsuite/gas/elf/dwarf2-2.s,
+	* testsuite/gas/elf/dwarf2-5.s,
+	* testsuite/gas/elf/dwarf2-7.s,
+	* testsuite/gas/elf/dwarf2-8.s,
+	* testsuite/gas/elf/dwarf2-9.s,
+	* testsuite/gas/elf/dwarf2-10.s,
+	* testsuite/gas/elf/dwarf2-11.s,
+	* testsuite/gas/elf/dwarf2-12.s,
+	* testsuite/gas/elf/dwarf2-13.s,
+	* testsuite/gas/elf/dwarf2-14.s,
+	* testsuite/gas/elf/dwarf2-15.s,
+	* testsuite/gas/elf/dwarf2-16.s,
+	* testsuite/gas/elf/dwarf2-17.s,
+	* testsuite/gas/elf/dwarf2-18.s,
+	* testsuite/gas/elf/dwarf2-19.s: Double size of align and simulated
+	instructions.
+	* testsuite/gas/elf/dwarf2-1.d,
+	* testsuite/gas/elf/dwarf2-2.d,
+	* testsuite/gas/elf/dwarf2-5.d,
+	* testsuite/gas/elf/dwarf2-7.d,
+	* testsuite/gas/elf/dwarf2-8.d,
+	* testsuite/gas/elf/dwarf2-9.d,
+	* testsuite/gas/elf/dwarf2-10.d,
+	* testsuite/gas/elf/dwarf2-11.d,
+	* testsuite/gas/elf/dwarf2-12.d,
+	* testsuite/gas/elf/dwarf2-13.d,
+	* testsuite/gas/elf/dwarf2-14.d,
+	* testsuite/gas/elf/dwarf2-15.d,
+	* testsuite/gas/elf/dwarf2-16.d,
+	* testsuite/gas/elf/dwarf2-17.d,
+	* testsuite/gas/elf/dwarf2-18.d,
+	* testsuite/gas/elf/dwarf2-19.d: Use xfail rather than notarget.
+	Remove avr, pru, tile, xtensa from xfails.  Update expected output.
+	* testsuite/gas/elf/elf.exp: Sort targets.
+	(dump_opts): Pass {as -mno-relax} for riscv, {as -mno-link-relax}
+	for avr and pru, and {as --no-link-relax} for xtensa to dwarf tests.
+	* testsuite/gas/elf/section2.e-miwmmxt: Delete unused file.
+
+2019-05-08  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-xtensa.c (opt_linkrelax): New variable.
+	(md_parse_option): Set it here.
+	(md_begin): Copy opt_linkrelax to linkrelax.
+
+2019-05-07  Alexandre Oliva <aoliva@redhat.com>
+
+	* testsuite/gas/elf/dwarf2-18.d: Xfail mep-*.
+	* testsuite/gas/elf/dwarf2-19.d: Likewise.
+
+2019-05-07  Alan Modra  <amodra@gmail.com>
+
+	* symbols.c (use_complex_relocs_for): Formatting.  Factor out
+	X_add_symbol tests.
+
+2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>
+	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* config/tc-mips.c (mips_set_ase): Handle ASE_EVA_R6.
+	(macro) <M_LLWPE_AB, M_SCWPE_AB>: New cases.
+	(mips_after_parse_args): Translate EVA to EVA_R6.
+	* testsuite/gas/mips/ase-errors-1.s: Add new instructions.
+	* testsuite/gas/mips/eva.s: Likewise.
+	* testsuite/gas/mips/ase-errors-1.l: Check errors for
+	 new instructions.
+	* testsuite/gas/mips/mipsr6@eva.d: Check new test cases.
+
+2019-05-06  Alan Modra  <amodra@gmail.com>
+
+	* symbols.c (symbol_relc_make_sym): Do not access sym->sy_value
+	directly.
+
+2019-05-06  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (ppc_fix_adjustable): Exclude all GOT and PLT
+	relocs, and VLE sdarel relocs.
+	* testsuite/gas/ppc/power4.d: Adjust.
+
+2019-05-05  Alexandre Oliva <aoliva@redhat.com>
+
+	* dwarf2dbg.c (set_or_check_view): Skip heads when assigning
+	views of prior locs.
+	(dwarf2_gen_line_info_1): Skip heads.
+	(size_inc_line_addr, emit_inc_line_addr): Drop
+	DW_LNS_advance_pc for zero addr delta.
+	(dwarf2_finish): Assign views for heads of segments.
+	* testsuite/gas/elf/dwarf2-19.d: New.
+	* testsuite/gas/elf/dwarf2-19.s: New.
+	* testsuite/gas/elf/elf.exp: Test it.
+
+2019-05-04  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-m32c.c (insn_size): Delete static var.
+	(md_begin): Don't set it.
+	(m32c_md_end): Delete.
+	(md_assemble): Add insn_size auto var.
+	* config/tc-m32c.h (md_end): Don't define.
+	(m32c_md_end): Delete.
+	(NOP_OPCODE, HANDLE_ALIGN, MAX_MEM_FOR_RS_ALIGN_CODE): Define.
+	* testsuite/gas/all/align.d: Remove m32c from notarget list.
+	* testsuite/gas/all/incbin.d: Likewise.
+	* testsuite/gas/elf/dwarf2-11.d: Likewise.
+	* testsuite/gas/macros/semi.d: Likewise.
+	* testsuite/gas/all/gas.exp (do_comment): Similarly.
+
+2019-05-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24485
+	* config/tc-i386.c (process_suffix): Issue a warning to IRET
+	without a suffix for .code16gcc.
+	* testsuite/gas/i386/jump16.s: Add tests for iretX.
+	* testsuite/gas/i386/jump16.d: Updated.
+	* testsuite/gas/i386/jump16.e: New file.
+
+2019-05-01  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-aarch64.c (parse_operands): Add case for
+	AARCH64_OPND_TME_UIMM16.
+	(aarch64_features): Add "tme".
+	* doc/c-aarch64.texi: Document the same.
+	* testsuite/gas/aarch64/tme-invalid.d: New test.
+	* testsuite/gas/aarch64/tme-invalid.l: New test.
+	* testsuite/gas/aarch64/tme-invalid.s: New test.
+	* testsuite/gas/aarch64/tme.d: New test.
+	* testsuite/gas/aarch64/tme.s: New test.
+
+2019-04-29  John Darrington <john@darrington.wattle.id.au>
+
+	* testsuite/gas/s12z/truncated.d: New file.
+	* testsuite/gas/s12z/truncated.s: New file.
+	* testsuite/gas/s12z/s12z.exp: Add new test.
+
+2019-04-26  Andrew Bennett  <andrew.bennett@imgtec.com>
+	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* config/tc-mips.c (macro) <M_LLWP_AB, M_LLDP_AB, M_SCWP_AB,
+	M_SCDP_AB>: New cases and expansions for paired instructions.
+	* testsuite/gas/mips/llpscp-32.s: New test source.
+	* testsuite/gas/mips/llpscp-64.s: Likewise.
+	* testsuite/gas/mips/llpscp-32.d: New test.
+	* testsuite/gas/mips/llpscp-64.d: Likewise.
+	* testsuite/gas/mips/mips.exp: Run the new tests.
+	* testsuite/gas/mips/r6.s: Add new instructions to test source.
+	* testsuite/gas/mips/r6-64.s: Likewise.
+	* testsuite/gas/mips/r6-64-n32.d: Check new instructions.
+	* testsuite/gas/mips/r6-64-n64.d: Likewise.
+	* testsuite/gas/mips/r6-n32.d: Likewise.
+	* testsuite/gas/mips/r6-n64.d: Likwwise.
+	* testsuite/gas/mips/r6.d: Likewise.
+
+2019-04-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24485
+	* config/tc-i386.c (process_suffix): Don't add DATA_PREFIX_OPCODE
+	to IRET for .code16gcc.
+	* testsuite/gas/i386/jump16.s: Add IRET tests.
+	* testsuite/gas/i386/jump16.d: Updated.
+
+2019-04-25  Alexandre Oliva  <aoliva@redhat.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	PR gas/24444
+	* frags.c (frag_gtoffset_p): New.
+	* frags.h (frag_gtoffset_p): Declare it.
+	* expr.c (resolve_expression): Use it.
+
+2019-04-24  Alan Modra  <amodra@gmail.com>
+
+	PR 24444
+	* symbols.c (resolve_symbol_value): When handling symbols
+	marked as sy_flags.resolved, return correct value for the
+	case of expression symbols left as an O_symbol expression.
+	Merge O_symbol code handling undefined and common symbols with
+	code handling special cases of expression symbols.  Use
+	seg_left to test for undefined and common symbols.  Don't
+	leave an O_symbol expression when X_add_symbol resolves to
+	the absolute_section.  Init final_val later.
+	* testsuite/gas/mmix/basep-7.d: Adjust expected output.
+
+2019-04-24  John Darrington <john@darrington.wattle.id.au>
+
+	* testsuite/gas/s12z/bit-manip-invalid.s: Extend test for BSET
+	and BCLR instructions with an invalid mode.
+	* testsuite/gas/s12z/bit-manip-invalid.d: ditto.
+
+2019-04-19  Nick Clifton  <nickc@redhat.com>
+
+	PR 24464
+	* config/tc-rx.h (md_relax_frag): Pass the max_iterations variable
+	to the relaxation function.
+	* config/tc-rx.c (rx_relax_frag): Add new parameter - the maximum
+	number of iterations.  Make sure that our internal iteration limit
+	does not exceed this external iteration limit.
+
+2019-04-18  Matthew Fortune  <matthew.fortune@mips.com>
+
+	* config/tc-mips.c (match_non_zero_reg_operand): Update
+	warning message.
+	* testsuite/gas/mips/r6-branch-constraints.l: Likewise.
+
+2019-04-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* config/tc-msp430.c (msp430_make_init_symbols): Define
+	__crt0_run_{preinit,init,fini}_array symbols if
+	.{preinit,init,fini}_array sections exist.
+	* testsuite/gas/msp430/fini-array.d: New test.
+	* testsuite/gas/msp430/init-array.d: New test.
+	* testsuite/gas/msp430/preinit-array.d: New test.
+	* testsuite/gas/msp430/fini-array.s: New test source.
+	* testsuite/gas/msp430/init-array.s: New test source.
+	* testsuite/gas/msp430/preinit-array.s: New test source.
+	* testsuite/gas/msp430/msp430.exp: Add new tests to driver.
+
+2019-04-17  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* config/tc-msp430.c (msp430_make_init_symbols): Define __crt0_init_bss
+	symbol when .lower.bss or .either.bss sections exist.
+	Define __crt0_movedata when .lower.data or .either.data sections exist.
+	* testsuite/gas/msp430/either-data-bss-sym.d: New test.
+	* testsuite/gas/msp430/low-data-bss-sym.d: New test.
+	* testsuite/gas/msp430/either-data-bss-sym.s: New test source.
+	* testsuite/gas/msp430/low-data-bss-sym.s: New test source.
+	* testsuite/gas/msp430/msp430.exp: Run new tests.
+	Enable large code model when running -mdata-region={upper,either}
+	tests.
+
+2019-04-17  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* config/tc-msp430.c (options): New OPTION_UNKNOWN_INTR_NOPS,
+	OPTION_NO_UNKNOWN_INTR_NOPS and do_unknown_interrupt_nops.
+	(md_parse_option): Handle OPTION_UNKNOWN_INTR_NOPS and
+	OPTION_NO_UNKNOWN_INTR_NOPS by setting do_unknown_interrupt_nops
+	accordingly.
+	(md_show_usage): Likewise.
+	(md_shortopts): Add "mu" for OPTION_UNKNOWN_INTR_NOPS and
+	"mU" for OPTION_NO_UNKNOWN_INTR_NOPS.
+	(md_longopts): Likewise.
+	(warn_eint_nop): Update comment.
+	(warn_unsure_interrupt): Don't warn if prev_insn_is_nop or
+	prev_insn_is_dint or we are assembling for 430 ISA.
+	(msp430_operands): Only call warn_unsure_interrupt if
+	do_unknown_interrupt_nops == TRUE.
+	* testsuite/gas/msp430/nop-unknown-intr.s: New test source file.
+	* testsuite/gas/msp430/nop-unknown-intr-430.d: New test.
+	* testsuite/gas/msp430/nop-unknown-intr-430x.d: New test.
+	* testsuite/gas/msp430/nop-unknown-intr-430x-ignore.d: New test.
+	* testsuite/gas/msp430/nop-unknown-intr-430.l: Warning output for new
+	test.
+	* testsuite/gas/msp430/nop-unknown-intr-430x.l: Likewise.
+	* testsuite/gas/msp430/msp430.exp: Add new tests to driver.
+
+2019-04-16  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/all/weakref1.d: xfail nds32.
+
+2019-04-16  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/all/gas.exp: Remove ns32k xfails.
+	* testsuite/gas/all/weakref1u.d: Don't run for ns32k-*-*.
+
+2019-04-16  Alan Modra  <amodra@gmail.com>
+
+	* write.h: Don't include bit_fix.h.
+	(struct fix): Rearrange some fields.  Delete fx_im_disp and
+	fx_bit_fixP.  Use bitfields for fx_size and fx_pcrel_adjust.
+	* write.c (fix_new_internal): Don't init fx_im_disp and fx_bit_fixP.
+	(fixup_segment): Don't exclude overflow checks on fx_bit_fixP.
+	(print_fixup): Don't print im_disp.
+	* config/tc-cris.c (md_apply_fix): Remove tests of fx_bit_fixP
+	and fx_im_disp.
+	* config/tc-dlx.c (md_apply_fix): Remove wrong debug code.  Set
+	fx_no_overflow when fx_bit_fixP.
+	* config/tc-dlx.h: Include bit_fix.h.
+	(TC_FIX_TYPE, tc_fix_data, TC_INIT_FIX_DATA): Define.
+	* config/tc-ns32k.c (fix_new_ns32k, fix_new_ns32k_exp): Set
+	fx_no_overflow when bit_fixP.
+	* config/tc-ns32k.h (TC_FIX_TYPE): Add fx_bit_fixP and fx_im_disp.
+	(fix_im_disp, fix_bit_fixP): Adjust to suit.
+	(TC_INIT_FIX_DATA, TC_FIX_DATA_PRINT): Likewise.
+
+2019-04-16  Alan Modra  <amodra@gmail.com>
+
+	* write.h (struct fix <fx_where>): Make unsigned.
+	(fix_new, fix_at_start, fix_new_exp): Adjust prototypes.
+	* write.c (fix_new, fix_new_exp, fix_at_start): Make "where" and
+	"size" parameters unsigned long.
+	(fix_new_internal): Likewise.  Adjust error format string to suit.
+	* config/tc-mips.c (md_convert_frag): Remove cast of fx_where.
+	* config/tc-sparc.c (md_apply_fix): Likewise.
+	* config/tc-score.c (s3_convert_frag): Adjust for unsigned fx_where.
+	* config/tc-score7.c (s7_convert_frag): Likewise.
+
+2019-04-16  Alan Modra  <amodra@gmail.com>
+
+	* frags.h (struct frag <fr_fix>): Use unsigned type.
+	* frags.c (frag_new): Assert that current size exceeds
+	old_frags_var_max_size.
+	* ehopt.c (get_cie_info): Adjust for unsigned fr_fix.
+	* listing.c (calc_hex): Likewise.
+	* write.c (cvt_frag_to_fill, write_relocs): Likewise.
+	* config/tc-arc.c (md_convert_frag): Likewise.
+	* config/tc-avr.c (avr_patch_gccisr_frag): Likewise.
+	* config/tc-mips.c (md_convert_frag): Likewise.
+	* config/tc-rl78.c (md_convert_frag): Likewise.
+	* config/tc-rx.c (md_convert_frag): Likewise.
+	* config/tc-sparc.c (md_apply_fix): Likewise.
+	* config/tc-xtensa.c (next_instrs_are_b_retw): Likewise.
+	(unrelaxed_frag_min_insn_count, unrelaxed_frag_has_b_j): Likewise.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* config/tc-arm.c (parse_sys_vldr_vstr): New function.
+	(OP_VLDR): New enum operand_parse_code enumerator.
+	(parse_operands): Add logic for OP_VLDR.
+	(do_t_vldr_vstr_sysreg): New function.
+	(do_vldr_vstr): Likewise.
+	(insns): Guard VLDR and VSTR by arm_ext_v4t for Thumb mode.
+	(md_apply_fix): Add bound check for VLDR and VSTR co-processor offset.
+	Add masking logic for BFD_RELOC_ARM_T32_VLDR_VSTR_OFF_IMM relocation.
+	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.s: Add examples of bad
+	uses of VLDR and VSTR.
+	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.l: Add error messages for
+	above bad uses.
+	* testsuite/gas/arm/archv8m_1m-cmse-main.s: Add examples of VLDR and
+	VSTR valid uses.
+	* testsuite/gas/arm/archv8m_1m-cmse-main.d: Add disassembly for the
+	above examples.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* config/tc-arm.c (arm_typed_reg_parse): Fix typo in comment.
+	(enum reg_list_els): New REGLIST_VFP_S_VPR and REGLIST_VFP_D_VPR
+	enumerators.
+	(parse_vfp_reg_list): Add new partial_match parameter.  Set
+	*partial_match to TRUE if at least one element in the register list has
+	matched.  Add support for REGLIST_VFP_S_VPR and REGLIST_VFP_D_VPR
+	register lists which expect VPR as last element in the list.
+	(s_arm_unwind_save_vfp_armv6): Adapt call to parse_vfp_reg_list to new
+	prototype.
+	(s_arm_unwind_save_vfp): Likewise.
+	(enum operand_parse_code): New OP_VRSDVLST enumerator.
+	(parse_operands): Adapt call to parse_vfp_reg_list to new prototype.
+	Handle new OP_VRSDVLST case.
+	(do_t_vscclrm): New function.
+	(insns): New entry for VSCCLRM instruction.
+	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.s: Add invalid VSCCLRM
+	instructions.
+	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.l: Add error expectations
+	for above instructions.
+	* testsuite/gas/arm/archv8m_1m-cmse-main.s: Add tests for VSCCLRM
+	instruction.
+	* testsuite/gas/arm/archv8m_1m-cmse-main.d: Add expected disassembly
+	for above instructions.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* config/tc-arm.c (enum reg_list_els): Define earlier and add
+	REGLIST_RN and REGLIST_CLRM enumerators.
+	(parse_reg_list): Add etype parameter to distinguish between regular
+	core register list and CLRM register list.  Add logic to
+	recognize CLRM register list.
+	(parse_vfp_reg_list): Assert type is not for core register list.
+	(s_arm_unwind_save_core): Update call to parse_reg_list to new
+	prototype.
+	(enum operand_parse_code): Declare OP_CLRMLST enumerator.
+	(parse_operands): Update call to parse_reg_list to new prototype.  Add
+	logic for OP_CLRMLST.
+	(encode_thumb2_ldmstm): Rename into ...
+	(encode_thumb2_multi): This.  Add do_io parameter.  Add logic to
+	encode CLRM and guard LDM/STM only code by do_io.
+	(do_t_ldmstm): Adapt to use encode_thumb2_multi.
+	(do_t_push_pop): Likewise.
+	(do_t_clrm): New function.
+	(insns): Define CLRM.
+	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.d: New file.
+	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.l: Likewise.
+	* testsuite/gas/arm/archv8m_1m-cmse-main-bad.s: Likewise.
+	* testsuite/gas/arm/archv8m_1m-cmse-main.d: Likewise.
+	* testsuite/gas/arm/archv8m_1m-cmse-main.s: Likewise.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	    Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (operand_parse_code): Add OP_LR and OP_oLR
+	for the LR operand and optional LR operand.
+	(parse_operands): Add switch cases for OP_LR and OP_oLR for
+	both type checking and value checking.
+	(encode_thumb32_addr_mode): New entries for DLS, WLS and LE.
+	(v8_1_loop_reloc): New helper function for handling labels
+	for the low overhead loop instructions.
+	(do_t_loloop): New function to encode DLS, WLS and LE.
+	(insns): New entries for WLS, DLS and LE.
+	(md_pcrel_from_section): New switch case
+	for BFD_RELOC_ARM_THUMB_LOOP12.
+	(md_appdy_fix): Likewise.
+	(tc_gen_reloc): Likewise.
+	* testsuite/gas/arm/armv8_1-m-tloop.s: New.
+	* testsuite/gas/arm/armv8_1-m-tloop.d: New.
+	* testsuite/gas/arm/armv8_1-m-tloop-bad.s: New.
+	* testsuite/gas/arm/armv8_1-m-tloop-bad.d: New.
+	* testsuite/gas/arm/armv8_1-m-tloop-bad.l: New.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	    Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (T16_32_TAB): New entriy for bfcsel.
+	(do_t_v8_1_branch): New switch case for bfcsel.
+	(toU): Define.
+	(insns): New instruction for bfcsel.
+	(md_pcrel_from_section): New switch case
+	for BFD_RELOC_THUMB_PCREL_BFCSEL.
+	(md_appdy_fix): Likewise
+	(tc_gen_reloc): Likewise.
+	* testsuite/gas/arm/armv8_1-m-bfcsel.d: New.
+	* testsuite/gas/arm/armv8_1-m-bfcsel.s: New.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (md_pcrel_from_section): New switch case for
+	BFD_RELOC_ARM_THUMB_BF13.
+	(md_appdy_fix): Likewise.
+	(tc_gen_reloc): Likewise.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	    Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (T16_32_TAB): New entrie for bfl.
+	(do_t_v8_1_branch): New switch case for bfl.
+	(insns): New instruction for bfl.
+	* testsuite/gas/arm/armv8_1-m-bfl.d: New.
+	* testsuite/gas/arm/armv8_1-m-bfl.s: New.
+	* testsuite/gas/arm/armv8_1-m-bfl-bad.s: New.
+	* testsuite/gas/arm/armv8_1-m-bfl-bad.d: New.
+	* testsuite/gas/arm/armv8_1-m-bfl-bad.l: New.
+	* testsuite/gas/arm/armv8_1-m-bfl-rel.d: New.
+	* testsuite/gas/arm/armv8_1-m-bfl-rel.s: New.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (md_pcrel_from_section): New switch case for
+	BFD_RELOC_ARM_THUMB_BF19.
+	(md_appdy_fix): Likewise.
+	(tc_gen_reloc): Likewise.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (T16_32_TAB): New entries for bfx and bflx.
+	(do_t_v8_1_branch): New switch cases for bfx and bflx.
+	(insns): New instruction for bfx and bflx.
+	* testsuite/gas/arm/armv8_1-m-bf-exchange.d: New.
+	* testsuite/gas/arm/armv8_1-m-bf-exchange.s: New.
+	* testsuite/gas/arm/armv8_1-m-bf-exchange-bad.s: New
+	* testsuite/gas/arm/armv8_1-m-bf-exchange-bad.l: New
+	* testsuite/gas/arm/armv8_1-m-bf-exchange-bad.d: New
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+	    Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (T16_32_TAB): New entries for bf.
+	(do_t_branch_future): New.
+	(insns): New instruction for bf.
+	* testsuite/gas/arm/armv8_1-m-bf.d: New.
+	* testsuite/gas/arm/armv8_1-m-bf.s: New.
+	* testsuite/gas/arm/armv8_1-m-bf-bad.s: New.
+	* testsuite/gas/arm/armv8_1-m-bf-bad.l: New.
+	* testsuite/gas/arm/armv8_1-m-bf-bad.d: New.
+	* testsuite/gas/arm/armv8_1-m-bf-rel.d: New.
+	* testsuite/gas/arm/armv8_1-m-bf-rel.s: New.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (md_pcrel_from_section): New switch case for
+	BFD_RELOC_ARM_THUMB_BF17.
+	(md_appdy_fix): Likewise.
+	(tc_gen_reloc): Likewise.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (ARM_IT_MAX_RELOCS): New macro.
+	(arm_it): Member reloc renamed relocs and updated to an array.
+	Rest: Replace all occurrences of reloc to relocs[0].
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-arm.c (md_pcrel_from_section): New switch case
+	for BFD_RELOC_THUMB_PCREL_BRANCH5.
+	(v8_1_branch_value_check): New function to check branch
+	offsets.
+	(md_appdy_fix): New switch case for
+	BFD_RELOC_THUMB_PCREL_BRANCH5.
+	(tc_gen_reloc): Likewise.
+
+2019-04-15  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (do_neon_movhf): Remove fp-armv8 check.
+	(armv8_1m_main_ext_table): New extension table.
+	(arm_archs): Use the new extension table.
+	* doc/c-arm.texi: Add missing arch and document new extensions.
+	* testsuite/gas/arm/armv8.1-m.main-fp.d: New.
+	* testsuite/gas/arm/armv8.1-m.main-fp-dp.d: New.
+	* testsuite/gas/arm/armv8.1-m.main-hp.d: New.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* config/tc-arm.c (cpu_arch_ver): Add entry for Armv8.1-M Mainline
+	Tag_CPU_arch build attribute value.  Reindent.
+	(get_aeabi_cpu_arch_from_fset): Update assert.
+	(aeabi_set_public_attributes): Update assert for Tag_DIV_use logic.
+	* testsuite/gas/arm/attr-march-armv8_1-m.main.d: New test.
+
+2019-04-09  Matthew Fortune  <matthew.fortune@mips.com>
+
+	* config/tc-mips.c (mips_cpu_info_table): Add i6500.  Update
+	default ASEs for i6400.
+	* doc/c-mips.texi (-march): Document i6500.
+	* testsuite/gas/mips/elf_mach_i6400.d: New test.
+	* testsuite/gas/mips/elf_mach_i6500.d: New test.
+	* testsuite/gas/mips/mips.exp: Run the new tests.
+
+2019-04-09  Matthew Fortune  <matthew.fortune@mips.com>
+
+	* config/tc-mips.c (mips_set_options) <init_ase>: New field.
+	(file_mips_opts, mips_opts) <init_ase>: Initialize new field.
+	(file_mips_check_options): Propagate initial ASE settings.
+	(mips_after_parse_args, parse_code_option): Track the initial
+	ASE settings for a CPU.
+	(s_mipsset): Restore the initial ASE settings when reverting
+	to the default arch.
+	* testsuite/gas/mips/elf_mach_p6600.d: New test.
+	* testsuite/gas/mips/mips.exp: Run the new test.
+
+2019-04-12  John Darrington <john@darrington.wattle.id.au>
+
+	config/tc-s12z.h: Remove definition of macro TC_M68K
+
+2019-04-01  John Darrington <john@darrington.wattle.id.au>
+
+	config/tc-s12z.c: Use bfd_boolean where appropriate.
+
+2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* testsuite/gas/xtensa/loop-relax-2.d: New test definition.
+	* testsuite/gas/xtensa/loop-relax.d: New test definition.
+	* testsuite/gas/xtensa/loop-relax.s: New test source.
+	* testsuite/gas/xtensa/text-section-literals-1a.d: New test
+	definition.
+	* testsuite/gas/xtensa/text-section-literals-2.d: New test
+	definition.
+	* testsuite/gas/xtensa/text-section-literals-2.s: New test
+	source.
+	* testsuite/gas/xtensa/text-section-literals-2a.d: New test
+	definition.
+	* testsuite/gas/xtensa/text-section-literals-3.d: New test
+	definition.
+	* testsuite/gas/xtensa/text-section-literals-3.s: New test
+	source.
+	* testsuite/gas/xtensa/text-section-literals-4.d: New test
+	definition.
+	* testsuite/gas/xtensa/text-section-literals-4.s: New test
+	source.
+	* testsuite/gas/xtensa/text-section-literals-4a.d: New test
+	definition.
+
+2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* testsuite/gas/xtensa/all.exp: Remove all expect-based
+	tests and all explicit run_dump_test / run_list_test
+	invocations. Add run_dump_tests for all .d files in the
+	test subdirectory.
+	* testsuite/gas/xtensa/entry_align.d: New test definition.
+	* testsuite/gas/xtensa/entry_align.l: New test output.
+	* testsuite/gas/xtensa/entry_misalign.d: New test definition.
+	* testsuite/gas/xtensa/entry_misalign2.d: New test definition.
+	* testsuite/gas/xtensa/j_too_far.d: New test definition.
+	* testsuite/gas/xtensa/j_too_far.l: New test output.
+	* testsuite/gas/xtensa/loop_align.d: New test definition.
+	* testsuite/gas/xtensa/loop_misalign.d: New test definition.
+	* testsuite/gas/xtensa/trampoline-2.d: New test definition.
+	* testsuite/gas/xtensa/trampoline-2.l: Remove empty output.
+	* testsuite/gas/xtensa/xtensa-err.exp: Use positive logic.
+
+2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* config/tc-xtensa.c (xtensa_literal_pseudo): Drop code that has
+	no effect.
+	(get_literal_pool_location): Only search for the literal pool
+	when auto litpools is used, otherwise take one recorded in the
+	tc_segment_info_data.
+	(xtensa_assign_litpool_addresses): New function.
+	(xtensa_move_literals): Don't duplicate 'literal pool location
+	required...' error message. Call xtensa_assign_litpool_addresses.
+
+2019-04-11  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* config/tc-xtensa.c (xtensa_is_init_fini): Add declaration.
+	(xtensa_mark_literal_pool_location): Don't add fill frag to literal
+	section that records literal pool location.
+	(md_begin): Call xtensa_mark_literal_pool_location when text
+	section literals or auto litpools are used.
+	(xtensa_elf_section_change_hook): Call
+	xtensa_mark_literal_pool_location when text section literals or
+	auto litpools are used, there's no literal pool location defined
+	for the current section and it's not .init or .fini.
+	* testsuite/gas/xtensa/auto-litpools-first1.d: Fix up addresses.
+	* testsuite/gas/xtensa/auto-litpools-first2.d: Likewise.
+	* testsuite/gas/xtensa/auto-litpools.d: Likewise.
+
+2019-04-11  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-aarch64.c (process_omitted_operand): Add case for
+	AARCH64_OPND_Rt_SP.
+	(parse_operands): Likewise.
+	* testsuite/gas/aarch64/armv8_5-a-memtag.d: Update tests.
+	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
+
+2019-04-11  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/gas/aarch64/armv8_5-a-memtag.d: New tests for ldgm and stgm.
+	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
+
+2019-04-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* config/tc-i386.c (need_plt32_p) [TE_SOLARIS]: Return FALSE.
+	* testsuite/gas/i386/solaris/solaris.exp: New driver.
+	* testsuite/gas/i386/solaris/reloc64.d,
+	testsuite/gas/i386/solaris/x86-64-jump.d,
+	testsuite/gas/i386/solaris/x86-64-mpx-branch-1.d,
+	testsuite/gas/i386/solaris/x86-64-mpx-branch-2.d,
+	testsuite/gas/i386/solaris/x86-64-nop-3.d,
+	testsuite/gas/i386/solaris/x86-64-nop-4.d,
+	testsuite/gas/i386/solaris/x86-64-nop-5.d,
+	testsuite/gas/i386/solaris/x86-64-relax-2.d,
+	testsuite/gas/i386/solaris/x86-64-relax-3.d: New tests.
+	* testsuite/gas/i386/reloc64.d,
+	testsuite/gas/i386/x86-64-jump.d,
+	testsuite/gas/i386/x86-64-mpx-branch-1.d,
+	testsuite/gas/i386/x86-64-mpx-branch-2.d,
+	testsuite/gas/i386/x86-64-nop-3.d,
+	testsuite/gas/i386/x86-64-nop-4.d,
+	testsuite/gas/i386/x86-64-nop-5.d,
+	testsuite/gas/i386/x86-64-relax-2.d,
+	testsuite/gas/i386/x86-64-relax-3.d: Skip on *-*-solaris*.
+
+2019-04-10  Alan Modra  <amodra@gmail.com>
+
+	* config/te-cloudabi.h: New file.
+	* config/tc-aarch64.c (aarch64_after_parse_args): Use TE_CLOUDABI
+	rather than TARGET_OS to select cloudabi.
+	* config/tc-i386.h (ELF_TARGET_FORMAT64): Define for TE_CLOUDABI.
+	* configure.tgt (*-*-cloudabi*): Set em=cloudabi.
+
+2019-04-09  Robert Suchanek  <robert.suchanek@mips.com>
+
+	* testsuite/gas/mips/mips.exp: Run hwr-names test.
+	* testsuite/gas/mips/hwr-names.s: Add test cases for RDHWR with
+	the SEL field.
+	* testsuite/gas/mips/mipsr6@hwr-names.d: New file.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (output_insn): Support
+	GNU_PROPERTY_X86_ISA_1_AVX512_BF16.
+	* testsuite/gas/i386/property-2.s: Add AVX512_BF16 test.
+	* testsuite/gas/i386/property-2.d: Updated.
+	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* configure.tgt: Remove i386-*-kaos* and i386-*-chaos targets.
+	* testsuite/gas/i386/i386.exp: Remove *-*-caos* and "*-*-kaos*
+	check.
+
+2019-04-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/i386.exp: Run -mx86-used-note=yes tests.
+	* testsuite/gas/i386/property-2.d: New file.
+	* testsuite/gas/i386/property-2.s: Likewise.
+	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
+
+2019-04-05  Xuepeng Guo  <xuepeng.guo@intel.com>
+
+	* config/tc-i386.c (cpu_arch): Add .avx512_bf16.
+	(cpu_noarch): Add noavx512_bf16.
+	* doc/c-i386.texi: Document avx512_bf16.
+	* testsuite/gas/i386/avx512_bf16.d: New file.
+	* testsuite/gas/i386/avx512_bf16.s: Likewise.
+	* testsuite/gas/i386/avx512_bf16_vl-inval.l: Likewise.
+	* testsuite/gas/i386/avx512_bf16_vl-inval.s: Likewise.
+	* testsuite/gas/i386/avx512_bf16_vl.d: Likewise.
+	* testsuite/gas/i386/avx512_bf16_vl.s: Likewise.
+	* testsuite/gas/i386/x86-64-avx512_bf16.d: Likewise.
+	* testsuite/gas/i386/x86-64-avx512_bf16.s: Likewise.
+	* testsuite/gas/i386/x86-64-avx512_bf16_vl-inval.l: Likesie.
+	* testsuite/gas/i386/x86-64-avx512_bf16_vl-inval.s: Likewise.
+	* testsuite/gas/i386/x86-64-avx512_bf16_vl.d: Likewise.
+	* testsuite/gas/i386/x86-64-avx512_bf16_vl.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Add BF16 related tests.
+
+2019-04-05  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/bc.s,
+	* testsuite/gas/ppc/bcat.d,
+	* testsuite/gas/ppc/bcaterr.d,
+	* testsuite/gas/ppc/bcaterr.l,
+	* testsuite/gas/ppc/bcy.d,
+	* testsuite/gas/ppc/bcyerr.d,
+	* testsuite/gas/ppc/bcyerr.l: New tests.
+	* testsuite/gas/ppc/ppc.exp: Run them.
+
+2019-04-05  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/476.d: Remove trailing spaces.
+	* testsuite/gas/ppc/a2.d: Likewise.
+	* testsuite/gas/ppc/booke.d: Likewise.
+	* testsuite/gas/ppc/booke_xcoff.d: Likewise.
+	* testsuite/gas/ppc/e500.d: Likewise.
+	* testsuite/gas/ppc/e500mc.d: Likewise.
+	* testsuite/gas/ppc/e6500.d: Likewise.
+	* testsuite/gas/ppc/htm.d: Likewise.
+	* testsuite/gas/ppc/power6.d: Likewise.
+	* testsuite/gas/ppc/power8.d: Likewise.
+	* testsuite/gas/ppc/power9.d: Likewise.
+	* testsuite/gas/ppc/vle.d: Likewise.
+
+2019-04-04  Peter Bergner  <bergner@linux.ibm.com>
+
+	PR gas/24349
+	* testsuite/gas/ppc/power8.s: (bdnztar, bdnztarl, bdztar, bdztarl,
+	btar, btarl, bdnztar-, bdnztarl-, bdnztar+, bdnztarl+, bdztar-,
+	bdztarl-, bdztar+, bdztarl+, bgetar, bnltar, bgetarl, bnltarl,
+	bletar, bngtar, bletarl, bngtarl, bnetar, bnetarl, bnstar, bnutar,
+	bnstarl, bnutarl, bgetar-, bnltar-, bgetarl-, bnltarl-, bletar-,
+	bngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-, bnstar-, bnutar-,
+	bnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+, bnltarl+, bletar+,
+	bngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+, bnstar+, bnutar+,
+	bnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl, beqtar,
+	beqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,
+	bgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,
+	buntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,
+	bsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,
+	bdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,
+	bdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,
+	bttarl+): Add tests of extended mnemonics.
+	* testsuite/gas/ppc/power8.d: Likewise.  Update previous bctar tests
+	to expect new extended mnemonics.
+	* testsuite/gas/ppc/a2.s: <bc, bc-, bc+, bcl, bcl-, bcl+>: Update test
+	to not use illegal BO value.  Use a more convenient BI value.
+	* testsuite/gas/ppc/a2.d: Update tests for new expect output.
+
+2019-04-03  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* config/tc-xtensa.c (convert_frag_immed): Drop
+	convert_frag_immed_finish_loop invocation.
+	(convert_frag_immed_finish_loop): Drop declaration and
+	definition.
+	* config/xtensa-relax.c (widen_spec_list): Replace loop
+	widening that uses addi/addmi with widening that uses l32r
+	and const16.
+
+2019-04-01  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* config/tc-arm.c (arm_ext_table): New struct type.
+	(arm_arch_option_table): Add new 'arm_ext_table' field.
+	(ARM_EXT,ARM_ADD,ARM_REMOVE, ALL_FP): New macros.
+	(armv5te_ext_table, armv7ve_ext_table, armv7a_ext_table,
+	armv7r_ext_table, armv7em_ext_table, armv8a_ext_table,
+	armv81a_ext_table, armv82a_ext_table, armv84a_ext_table,
+	armv85a_ext_table, armv8m_main_ext_table,
+	armv8r_ext_table): New architecture extension tables.
+	(ARM_ARCH_OPT): Add new default field.
+	(ARM_ARCH_OPT2): New macro.
+	(arm_archs): Extend some architectures with the new architecture
+	extension tables mentioned above.
+	(arm_extensions): Add DEPRECATED comment with instructions to
+	use new table.
+	(arm_parse_extension): Change to use new extension tables.
+	(arm_parse_cpu): Don't change existing behavior.
+	(arm_parse_arch): Change to use new extension tables.
+	* doc/c-arm.texi: Document new architecture extensions.
+	* testsuite/gas/arm/attr-mfpu-neon-fp16.d: Change test to use new
+	extension option rather than -mfpu and change expected behaviour to
+	sane outputs.
+	* testsuite/gas/arm/armv8-2-fp16-scalar-bad-ext.d: New.
+	* testsuite/gas/arm/armv8-2-fp16-scalar-ext.d: New.
+	* testsuite/gas/arm/armv8-2-fp16-scalar-thumb-ext.d: New.
+	* testsuite/gas/arm/armv8-2-fp16-simd-ext.d: New.
+	* testsuite/gas/arm/armv8-2-fp16-simd-thumb-ext.d: New.
+	* testsuite/gas/arm/armv8-2-fp16-simd-warning-ext.d: New.
+	* testsuite/gas/arm/armv8-2-fp16-simd-warning-thumb-ext.d: New.
+	* testsuite/gas/arm/armv8_2+rdma-ext.d: New.
+	* testsuite/gas/arm/armv8_2-a-fp16-thumb2-ext.d: New.
+	* testsuite/gas/arm/armv8_2-a-fp16_ext.d: New.
+	* testsuite/gas/arm/armv8_3-a-fp-bad-ext.d: New.
+	* testsuite/gas/arm/armv8_3-a-fp-ext.d: New.
+	* testsuite/gas/arm/armv8_3-a-fp16-ext.d: New.
+	* testsuite/gas/arm/armv8_3-a-simd-bad-ext.d: New.
+	* testsuite/gas/arm/armv8_4-a-fp16-ext.d: New.
+	* testsuite/gas/arm/armv8m.main+fp.d: New.
+	* testsuite/gas/arm/armv8m.main+fp.dp.d: New.
+	* testsuite/gas/arm/attr-ext-fpv5-d16.d: New.
+	* testsuite/gas/arm/attr-ext-fpv5.d: New.
+	* testsuite/gas/arm/attr-ext-idiv.d: New.
+	* testsuite/gas/arm/attr-ext-mp.d: New.
+	* testsuite/gas/arm/attr-ext-neon-fp16.d: New.
+	* testsuite/gas/arm/attr-ext-neon-vfpv3.d: New.
+	* testsuite/gas/arm/attr-ext-neon-vfpv4.d: New.
+	* testsuite/gas/arm/attr-ext-sec.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv3-d16-fp16.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv3-d16.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv3-fp16.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv3.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv3xd-fp.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv3xd.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv4-d16.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv4-sp-d16.d: New.
+	* testsuite/gas/arm/attr-ext-vfpv4.d: New.
+	* testsuite/gas/arm/dotprod-mandatory-ext.d: New.
+	* testsuite/gas/arm/fpv5-d16.s: New.
+	* testsuite/gas/arm/fpv5-sp-d16.s: New.
+
+2019-03-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24390
+	* testsuite/gas/ppc/476.d: Update mtfsb*.
+	* testsuite/gas/ppc/a2.d: Likewise.
+
+2019-03-21  Alan Modra  <amodra@gmail.com>
+
+	* emul.h (struct emulation): Delete strip_underscore.
+	* emul-target.h (emul_strip_underscore): Don't define.
+	(emul_struct_name): Update initialization.
+
+2019-03-21  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-d10v.c (md_apply_fix): Apply BFD_RELOC_8.
+	* config/tc-pdp11.c (md_apply_fix): Likewise.
+	* config/tc-d30v.c (md_apply_fix): Don't emit errors for BFD_RELOC_8,
+	BFD_RELOC_16, and BFD_RELOC_64.
+	* testsuite/gas/all/gas.exp: Move target exclusions for forward
+	test, but not cr16, to..
+	* testsuite/gas/all/forward.d: ..here, with explanation.  Remove
+	d10v, d30v, and pdp11 xfails.
+
+2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (optimize_encoding): Don't check AVX for
+	EVEX vector load/store optimization.  Check both operands for
+	ZMM register.  Update EVEX vector load/store opcode check.
+	Choose EVEX Disp8 over VEX Disp32.
+	* testsuite/gas/i386/optimize-1.d: Updated.
+	* testsuite/gas/i386/optimize-1a.d: Likewise.
+	* testsuite/gas/i386/optimize-2.d: Likewise.
+	* testsuite/gas/i386/optimize-4.d: Likewise.
+	* testsuite/gas/i386/optimize-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-2.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-2a.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-2b.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-6.d: Likewise.
+	* testsuite/gas/i386/optimize-1.s: Add ZMM register load
+	test.
+	* testsuite/gas/i386/x86-64-optimize-2.s: Likewise.
+
+2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24352
+	* config/tc-i386.c (optimize_encoding): Check only
+	cpu_arch_flags.bitfield.cpuavx512vl.
+	* testsuite/gas/i386/i386.exp: Run x86-64-optimize-2b.
+	* testsuite/gas/i386/x86-64-optimize-2.d: Revert the last
+	change.
+	* testsuite/gas/i386/x86-64-optimize-2b.d: New file.
+	* testsuite/gas/i386/x86-64-optimize-2b.s: Likewise.
+
+2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24359
+	* testsuite/gas/i386/i386.exp: Change optimize-6a, optimize-7,
+	x86-64-optimize-7a and x86-64-optimize-8 tests to run_list_test.
+	Remove optimize-6c and x86-64-optimize-7c tests.
+	* testsuite/gas/i386/noavx-3.l: Updated.
+	* testsuite/gas/i386/noavx-4.d: Likewise.
+	* testsuite/gas/i386/noavx-5.d: Likewise.
+	* testsuite/gas/i386/noavx-3.s: Add AVX512F tests.
+	* testsuite/gas/i386/noavx-4.s: Remove AVX512F tests.
+	* testsuite/gas/i386/nosse-5.s: Likewise.
+	* testsuite/gas/i386/optimize-6a.d: Removed.
+	* testsuite/gas/i386/optimize-6c.d: Likewise.
+	* testsuite/gas/i386/optimize-7.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-7a.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-7c.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-8.d: Likewise.
+	* testsuite/gas/i386/optimize-6a.l: New file.
+	* testsuite/gas/i386/optimize-6a.s: Likewise.
+	* testsuite/gas/i386/optimize-7.l: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-7a.l: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-7a.s: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-8.l: Likewise.
+
+2019-03-18  Alan Modra  <amodra@gmail.com>
+
+	* config/m68k-parse.y (yylex): Use temp_ilp and restore_ilp.
+	* as.c (macro_expr): Likewise.
+	* macro.c (buffer_and_nest): Likewise.
+	* read.c (temp_ilp): Remove FIXME.
+
+2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/att-regs.d: Pass -O0 to assembler.
+	* testsuite/gas/i386/avx512bw-intel.d: Likewise.
+	* testsuite/gas/i386/avx512bw.d: Likewise.
+	* testsuite/gas/i386/avx512f-intel.d: Likewise.
+	* testsuite/gas/i386/avx512f.d: Likewise.
+	* testsuite/gas/i386/disp32.d: Likewise.
+	* testsuite/gas/i386/intel-regs.d: Likewise.
+	* testsuite/gas/i386/pseudos.d: Likewise.
+	* testsuite/gas/i386/x86-64-disp32.d: Likewise.
+	* testsuite/gas/i386/x86-64-pseudos.d: Likewise.
+
+2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24348
+	* config/tc-i386.c (optimize_encoding): Encode 128-bit and
+	256-bit EVEX vector register load/store instructions as VEX
+	vector register load/store instructions for -O1.
+	* doc/c-i386.texi: Update -O1 documentation.
+	* testsuite/gas/i386/i386.exp: Run PR gas/24348 tests.
+	* testsuite/gas/i386/optimize-1.s: Add tests for EVEX vector
+	load/store instructions.
+	* testsuite/gas/i386/optimize-2.s: Likewise.
+	* testsuite/gas/i386/optimize-3.s: Likewise.
+	* testsuite/gas/i386/optimize-5.s: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-2.s: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-3.s: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-4.s: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-5.s: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-6.s: Likewise.
+	* testsuite/gas/i386/optimize-1.d: Updated.
+	* testsuite/gas/i386/optimize-2.d: Likewise.
+	* testsuite/gas/i386/optimize-3.d: Likewise.
+	* testsuite/gas/i386/optimize-4.d: Likewise.
+	* testsuite/gas/i386/optimize-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-2.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-4.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-6.d: Likewise.
+	* testsuite/gas/i386/optimize-7.d: New file.
+	* testsuite/gas/i386/optimize-7.s: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-8.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-8.s: Likewise.
+
+2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (optimize_encoding): Encode 256-bit/512-bit
+	VEX/EVEX vector register clearing instructions with 128-bit VEX
+	vector register clearing instructions at -O1.
+	* doc/c-i386.texi: Update -O1 and -O2 documentation.
+	* testsuite/gas/i386/i386.exp: Run optimize-1a and
+	x86-64-optimize-2a.
+	* testsuite/gas/i386/optimize-1a.d: New file.
+	* testsuite/gas/i386/x86-64-optimize-2a.d: Likewise.
+
+2019-03-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24353
+	* config/tc-i386.c: Include <limits.h> if it exists and try
+	including <sys/param.h> if we have it.
+	(INT_MAX): Define if not defined.
+	(md_parse_option): Set optimize to INT_MAX for -Os.
+	* testsuite/gas/i386/optimize-2.s: Add a test.
+	* testsuite/gas/i386/x86-64-optimize-3.s: Likewise.
+	* testsuite/gas/i386/optimize-2.d: Updated.
+	* testsuite/gas/i386/x86-64-optimize-3.d: Likewise.
+
+2019-03-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24352
+	* config/tc-i386.c (optimize_encoding): Encode 512-bit EVEX
+	with 128-bit VEX encoding only when AVX is enabled and with
+	128-bit EVEX encoding only when AVX512VL is enabled.
+	* testsuite/gas/i386/i386.exp: Run PR gas/24352 tests.
+	* testsuite/gas/i386/optimize-6.s: New file.
+	* testsuite/gas/i386/optimize-6a.d: Likewise.
+	* testsuite/gas/i386/optimize-6b.d: Likewise.
+	* testsuite/gas/i386/optimize-6c.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-7.s: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-7a.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-7b.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-7c.d: Likewise.
+	* testsuite/gas/i386/x86-64-optimize-2.d: Updated.
+
+2019-03-15  Li Hao  <li.hao296@zte.com.cn>
+
+	PR 24308
+	* config/tc-i386.c (parse_insn): Check mnemp before using it to
+	determine if a suffix can be trimmed.
+
+2019-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* dwarf2dbg.c (out_set_addr): Align relocation within .debug_line.
+
+2019-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* dwarf2dbg.c (out_debug_line): Pad size of .debug_line section.
+
+2019-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* dwarf2dbg.c (out_debug_str): Use octets for .debug_string pointers.
+
+2019-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* dwarf2dbg.c (out_debug_line): Use octets for .debug_line prologue.
+
+2019-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* dwarf2dbg.c (out_debug_line): Use octets for dwarf2 headers.
+	(out_debug_aranges, out_debug_info): Likewise.
+
+2019-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* symbols.h (symbol_temp_new_now_octets): Declare.
+	(symbol_set_value_now_octets, symbol_octets_p): Declare.
+	* symbols.c (struct symbol_flags): New member sy_octets.
+	(symbol_temp_new_now_octets): New function.
+	(resolve_symbol_value): Return octets instead of bytes if
+	sy_octets is set.
+	(symbol_set_value_now_octets): New function.
+	(symbol_octets_p): New function.
+
+2019-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* dwarf2dbg.c (dwarf2_emit_insn): Fix calculation of line info offset.
+
+2019-03-12  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* testsuite/gas/s390/zarch-arch13.s: Adjust testcase to optable changes.
+	* testsuite/gas/s390/zarch-arch13.d: Likewise.
+
+2019-02-27  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* testsuite/gas/aarch64/dotproduct.d: Use multiple "as" lines.
+	* testsuite/gas/aarch64/dotproduct_armv8_4.d: Remove.
+	* testsuite/gas/aarch64/dotproduct_armv8_4.s: Remove.
+	* testsuite/gas/aarch64/illegal-dotproduct.d: Use multiple "as"
+	lines.
+	* testsuite/gas/aarch64/ldst-rcpc-armv8_2.d: Remove.
+	* testsuite/gas/aarch64/ldst-rcpc.d: Use multiple "as" lines.
+
+2019-02-24  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (parse_tls_arg): Wrap in #ifdef OBJ_ELF.
+
+2019-02-24  Alan Modra  <amodra@gmail.com>
+
+	PR 24144
+	* config/obj-aout.c (obj_aout_frob_file_before_fix): Write to end
+	of section to ensure file contents cover aligned section size.
+
+2019-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* config/tc-arm.c (arm_cpus): Add neoverse-n1.
+	* doc/c-arm.texi (-mcpu): Document neoverse-n1 value.
+
+2019-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* config/tc-aarch64.c (aarch64_cpus): Add neoverse-e1.
+	* doc/c-aarch64.texi (-mcpu): Document neoverse-e1 value.
+
+2019-02-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* config/tc-aarch64.c (aarch64_cpus): Add neoverse-n1.
+	* doc/c-aarch64.texi (-mcpu): Document neoverse-n1 value.
+
+2019-02-19  Paul Hua  <paul.hua.gm@gmail.com>
+
+	* NEWS: Mention -m[no-]fix-loongson3-llsc.
+	* configure.ac: Add --enable-mips-fix-loongson3-llsc.
+	Define DEFAULT_MIPS_FIX_LOONGSON3_LLSC.
+	* config.in: Regenerated.
+	* configure: Likewise.
+	* config/tc-mips.c (sync_insn, mips_fix_loongson3_llsc):
+	New variables.
+	(options): New OPTION_FIX_LOONGSON3_LLSC,
+	OPTION_NO_FIX_LOONGSON3_LLSC.
+	(md_longopts): Add -m[no-]fix-loongson3-llsc.
+	(md_begin): Initialize sync insn.
+	(fix_loongson3_llsc): New.
+	(append_insn): Call fix_loongson3_llsc.
+	(md_parse_option): Handle OPTION_FIX_LOONGSON3_LLSC,
+	OPTION_NO_FIX_LOONGSON3_LLSC.
+	(md_show_usage): Display -m[no-]fix-loongson3-llsc.
+	* doc/c-mips.texi: Document -m[no-]fix-loongson3-llsc,
+	--enable-mips-fix-loongson3-llsc=[yes|no].
+
+2019-02-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/24165
+	* frags.c (frag_var_init): Pass max_chars to TC_FRAG_INIT as
+	max_bytes.
+	* config/tc-aarch64.h (TC_FRAG_INIT): Add and pass max_bytes to
+	aarch64_init_frag.
+	* /config/tc-arm.h (TC_FRAG_INIT): And and pass max_bytes to
+	arm_init_frag.
+	* config/tc-avr.h (TC_FRAG_INIT): And and ignore max_bytes.
+	* config/tc-ia64.h (TC_FRAG_INIT): Likewise.
+	* config/tc-mmix.h (TC_FRAG_INIT): Likewise.
+	* config/tc-nds32.h (TC_FRAG_INIT): Likewise.
+	* config/tc-ns32k.h (TC_FRAG_INIT): Likewise.
+	* config/tc-rl78.h (TC_FRAG_INIT): Likewise.
+	* config/tc-rx.h (TC_FRAG_INIT): Likewise.
+	* config/tc-score.h (TC_FRAG_INIT): Likewise.
+	* config/tc-tic54x.h (TC_FRAG_INIT): Likewise.
+	* config/tc-tic6x.h (TC_FRAG_INIT): Likewise.
+	* config/tc-xtensa.h (TC_FRAG_INIT): Likewise.
+	* config/tc-i386.h (MAX_MEM_FOR_RS_ALIGN_CODE): Set to
+	(alignment ? ((1 << alignment) - 1) : 1)
+	(i386_tc_frag_data): Add max_bytes.
+	(TC_FRAG_INIT): Add and track max_bytes.
+	(HANDLE_ALIGN): Replace MAX_MEM_FOR_RS_ALIGN_CODE with
+	fragP->tc_frag_data.max_bytes.
+	* doc/internals.texi: Update TC_FRAG_TYPE with max_bytes.
+
+2019-02-08  Jim Wilson  <jimw@sifive.com>
+
+	* config/tc-riscv.c (validate_riscv_insn) <'C'>: Add 'z' support.
+	(riscv_ip) <'C'>: Add 'z' support.
+
+2019-02-07  Tamar Christina  <tamar.christina@arm.com>
+
+	* config/tc-arm.c (insns): Redefine THUMB_VARIANT and ARM_VARIANT for
+	hlt to armv1.
+	* testsuite/gas/arm/armv8a-automatic-hlt.d: Update TAGs
+	* testsuite/gas/arm/hlt.d: New test.
+	* testsuite/gas/arm/hlt.s: New test.
+
+2019-02-07  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/gas/aarch64/undefined_advsimd_armv8_3.d: New test.
+	* testsuite/gas/aarch64/undefined_advsimd_armv8_3.s: New test.
+
+2019-02-07  Tamar Christina  <tamar.christina@arm.com>
+
+	PR binutils/23212
+	* testsuite/gas/aarch64/undefined_by_elem_sz_l.s: New test.
+	* testsuite/gas/aarch64/undefined_by_elem_sz_l.d: New test.
+
+2019-02-07  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* config/tc-visium.c (md_assemble) <mode_cad>: Align instruction on
+	64-bit boundaries for the GR6.
+	* testsuite/gas/visium/allinsn_gr6.s: Tweak.
+	* testsuite/gas/visium/allinsn_gr6.d: Likewise.
+	* testsuite/gas/visium/bra-1.d: New test.
+	* testsuite/gas/visium/bra-1.s: Likewise.
+	* testsuite/gas/visium/visium.exp: Run bra-1 test.
+
+2019-01-31  John Darrington <john@darrington.wattle.id.au>
+
+	* config/tc-s12z.c (lex_imm): Add new argument exp_o.
+	(emit_reloc): New function.
+	(md_apply_fix): [BFD_RELOC_S12Z_OPR] Recognise that it
+	can be either 2 bytes or 3 bytes long.
+	* testsuite/gas/s12z/mov-imm-reloc.d: New file.
+	* testsuite/gas/s12z/mov-imm-reloc.s: New file.
+	* testsuite/gas/s12z/s12z.exp: Add them.
+
+2019-01-31  John Darrington <john@darrington.wattle.id.au>
+
+	* config/tc-s12z.c (md_apply_fix): Fix incorrect limits.
+	* testsuite/gas/s12z/pc-rel-bad.d: New file.
+	* testsuite/gas/s12z/pc-rel-bad.l: New file.
+	* testsuite/gas/s12z/pc-rel-bad.s: New file.
+	* testsuite/gas/s12z/pc-rel-good.d: New file.
+	* testsuite/gas/s12z/pc-rel-good.s: New file.
+	* testsuite/gas/s12z/s12z.exp: Add them.
+
+2019-01-31  John Darrington <john@darrington.wattle.id.au>
+
+	* config/tc-s12z.c (tfr): Emit warning if operands are the same.
+	* testsuite/gas/s12z/exg.d: New test case.
+	* testsuite/gas/s12z/exg.l: New file.
+
+2019-01-31  John Darrington <john@darrington.wattle.id.au>
+
+	* config/tc-s12z.c (lex_opr): Add a parameter to indicate whether
+	immediate mode operands should be permitted.
+	* testsuite/s12z/imm-dest.d: New file.
+	* testsuite/s12z/imm-dest.l: New file.
+	* testsuite/s12z/imm-dest.s: New file.
+	* testsuite/s12z/s12z.exp: Add them.
+
+2019-01-31  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* config/tc-s390.c (s390_parse_cpu): New entry for arch13.
+	* doc/c-s390.texi: Document arch13 march option.
+	* testsuite/gas/s390/s390.exp: Run the arch13 related tests.
+	* testsuite/gas/s390/zarch-arch13.d: New test.
+	* testsuite/gas/s390/zarch-arch13.s: New test.
+	* testsuite/gas/s390/zarch-z13.d: Expect the renamed mnemonics
+	also for z13.
+
+2019-01-31  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-alpha.c (md_apply_fix): Correct range checks for
+	BFD_RELOC_ALPHA_NOP, BFD_RELOC_ALPHA_LDA, BFD_RELOC_ALPHA_BSR.
+	* config/tc-arm.c (md_apply_fix): Use llabs rather than abs.
+	* config/tc-csky.c (get_macro_reg_vals): Pass s to csky_show_error.
+
+2019-01-28  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* config/tc-xtensa.c (md_apply_fix): Mark fixups for constant
+	symbols as done in md_apply_fix.
+	* testsuite/gas/all/forward.d: Don't XFAIL for xtensa.
+
+2019-01-28  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+	* po/ru.po: Updated Russian translation.
+
+2019-01-28  Alan Modra  <amodra@gmail.com>
+
+	* configure.ac (ac_checking): Set from bfd/development.sh
+	development variable.
+	* configure: Regenerate.
+
+2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-aarch64.c (warn_unpredictable_ldst): Exempt
+	stg, st2g, stzg and stz2g from Xt == Xn with writeback warning.
+	* testsuite/gas/aarch64/armv8_5-a-memtag.d: Change tests for
+	stg, stzg, st2g and stz2g.
+	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
+
+2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/gas/aarch64/armv8_5-a-memtag.d: New tests for stzgm.
+	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
+
+2019-01-25  Sudakshina Das  <sudi.das@arm.com>
+	    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
+
+	* config/tc-aarch64.c (parse_address_main): Remove support for
+	[base]! address expression.
+	(parse_operands): Remove support for AARCH64_OPND_ADDR_SIMPLE_2.
+	(warn_unpredictable_ldst): Remove support for ldstgv_indexed.
+	* testsuite/gas/aarch64/armv8_5-a-memtag.d: Remove tests for ldgv
+	and stgv.
+	* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.l: Likewise.
+	* testsuite/gas/aarch64/illegal-memtag.s: Likewise.
+
+2019-01-25  Wu Heng  <wu.heng@zte.com.cn>
+
+	PR gas/23940
+	* macro.c (getstring): Check array bound before accessing.
+
+2019-01-25  Alan Modra  <amodra@gmail.com>
+
+	PR 20902
+	PR 24125
+	* read.c (stringer): Delete assertion.
+
+2019-01-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/uk.po: Updated Ukranian translation.
+
+2019-01-19  Nick Clifton  <nickc@redhat.com>
+
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* po/gas.pot: Regenerate.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-17  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/gas/arm/archv6t2-1-pe.d: New test.
+	* testsuite/gas/arm/archv6t2-1.d: Skip pe.
+	* testsuite/gas/arm/csdb.d: Skip pe.
+	* testsuite/gas/arm/sb-thumb1-pe.d: New test.
+	* testsuite/gas/arm/sb-thumb1.d: Skip pe.
+	* testsuite/gas/arm/sb-thumb2-pe.d: New test.
+	* testsuite/gas/arm/sb-thumb2.d: Skip pe.
+	* testsuite/gas/arm/udf.d: Skip pe.
+
+2019-01-16  Kito Cheng  <kito@andestech.com>
+
+	* testsuite/gas/riscv/attribute-empty.d: New.
+
+2019-01-16  Kito Cheng  <kito@andestech.com>
+	    Nelson Chu  <nelson@andestech.com>
+
+	* config/tc-riscv.c (DEFAULT_RISCV_ATTR): Define to 0 if not defined.
+	(riscv_set_options): Add `arch_attr` field.
+	(riscv_opts): Set default value for arch_attr.
+	(riscv_write_out_arch_attr): New.
+	(riscv_set_public_attributes): Likewise.
+	(riscv_md_end): Likewise.
+	(riscv_convert_symbolic_attribute): Likewise.
+	(s_riscv_attribute): Likewise.
+	(explicit_arch_attr): Likewise.
+	(riscv_pseudo_table): Add .attribute to the table.
+	(options): Add OPTION_ARCH_ATTR and OPTION_NO_ARCH_ATTR
+	enumeration constants.
+	(md_longopts): Add `march-attr' and `mno-arch-attr' options.
+	(md_parse_option): Handle the new options.
+	(md_show_usage): Document the `march-attr' option.
+	* config/tc-riscv.h (md_end): Define as riscv_md_end
+	(riscv_md_end): Declare.
+	(CONVERT_SYMBOLIC_ATTRIBUTE): Define as
+	riscv_convert_symbolic_attribute.
+	(riscv_convert_symbolic_attribute): Declare.
+	(start_assemble): Declare.
+	* testsuite/gas/elf/elf.exp: Adjust test case for section2.e.
+	* testsuite/gas/elf/section2.e-riscv: New.
+	* testsuite/gas/riscv/attribute-01.d: New test
+	* testsuite/gas/riscv/attribute-02.d: Likewise.
+	* testsuite/gas/riscv/attribute-03.d: Likewise.
+	* testsuite/gas/riscv/attribute-04.d: Likewise.
+	* testsuite/gas/riscv/attribute-04.s: Likewise.
+	* testsuite/gas/riscv/attribute-05.d: Likewise.
+	* testsuite/gas/riscv/attribute-05.s: Likewise.
+	* testsuite/gas/riscv/attribute-06.d: Likewise.
+	* testsuite/gas/riscv/attribute-06.s: Likewise.
+	* testsuite/gas/riscv/attribute-07.d: Likewise.
+	* testsuite/gas/riscv/attribute-07.s: Likewise.
+	* testsuite/gas/riscv/attribute-08.d: Likewise.
+	* testsuite/gas/riscv/attribute-08.s: Likewise.
+	* testsuite/gas/riscv/attribute-unknown.d: Likewise.
+	* testsuite/gas/riscv/attribute-unknown.s: Likewise.
+	* testsuite/gas/riscv/empty.l: Likewise.
+	* doc/c-riscv.texi (.attribute): Add documentation.
+	* configure.ac (--enable-default-riscv-attribute): New options.
+	* configure: Re-generate.
+	* config.in: Re-generate.
+
+2019-01-16  John Darrington <john@darrington.wattle.id.au>
+
+	* config/tc-s12z.c (lex_reg_name): Compare the length of the strings
+	before the contents.
+	* testsuite/gas/s12z/labels.d: New file.
+	* testsuite/gas/s12z/labels.s: New file.
+	* testsuite/gas/s12z/s12z.exp: Add them.
+	* config/tc-s12z.c (tfr): Change as_bad to as_warn.
+	Also fix message typo and semantics.
+	* config/tc-s12z.c (emit_opr): Emit BFD_RELOC_S12Z_OPR instead of
+	BFD_RELOC_24.
+	* testsuite/gas/s12z/opr-indirect-expr.d: Expect R_S12Z_OPR instead
+	of R_S12Z_EXT24.
+
+2019-01-14  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* config/tc-arm.c (arm_ext_v6k_v6t2): Define.
+	(insns) [ARM_VARIANT]: Modified.
+	(insns) [THUMB_VARIANT]: To implement few ARMv6K instructions
+	in ARMv6T2 as well.
+	* testsuite/gas/arm/archv6t2-1.d: New test.
+	* testsuite/gas/arm/archv6t2-1.s: Likewise.
+	* testsuite/gas/arm/archv6t2-2.d: Likewise.
+
+2019-01-11  Alan Modra  <amodra@gmail.com>
+
+	PR 23963
+	* testsuite/gas/m68hc11/lbranch-dwarf2.d: Adjust for PR23963 change.
+	* testsuite/gas/m68hc11/opers12-dwarf2.d: Likewise.
+
+2019-01-10  Nick Clifton  <nickc@redhat.com>
+
+	PR 23963
+	* testsuite/gas/mips/mips16-branch-absolute-1.d: Adjust for the
+	fact that control characters are now displayed as escape
+	sequences.
+	* testsuite/gas/mips/mips16-e.d: Likewise.
+	* testsuite/gas/mips/mips16-pcrel-0.d: Likewise.
+	* testsuite/gas/mips/mips16-pcrel-1.d: Likewise.
+	* testsuite/gas/mips/mips16-pcrel-delay-0.d: Likewise.
+	* testsuite/gas/mips/mips16-pcrel-delay-1.d: Likewise.
+	* testsuite/gas/mips/mips16-pcrel-n32-0.d: Likewise.
+	* testsuite/gas/mips/mips16-pcrel-n32-1.d: Likewise.
+	* testsuite/gas/mips/mips16-pcrel-n64-sym32-0.d: Likewise.
+	* testsuite/gas/mips/mips16-pcrel-n64-sym32-1.d: Likewise.
+	* testsuite/gas/mips/mips16e2@mips16-pcrel-0.d: Likewise.
+	* testsuite/gas/mips/mips16e2@mips16-pcrel-1.d: Likewise.
+	* testsuite/gas/mips/mips16e2@mips16-pcrel-delay-0.d: Likewise.
+	* testsuite/gas/mips/mips16e2@mips16-pcrel-delay-1.d: Likewise.
+	* testsuite/gas/mips/mips16e2@mips16-pcrel-n32-0.d: Likewise.
+	* testsuite/gas/mips/mips16e2@mips16-pcrel-n32-1.d: Likewise.
+	* testsuite/gas/mips/mips16e2@mips16-pcrel-n64-sym32-0.d:
+	Likewise.
+	* testsuite/gas/mips/mips16e2@mips16-pcrel-n64-sym32-1.d:
+	Likewise.
+	* testsuite/gas/mips/mipsel16-e.d: Likewise.
+	* testsuite/gas/mips/mipsr6@msa.d: Likewise.
+	* testsuite/gas/mips/mipsr6@relax-swap3.d: Likewise.
+	* testsuite/gas/mips/r6-64-n32.d: Likewise.
+	* testsuite/gas/mips/r6-64-n64.d: Likewise.
+	* testsuite/gas/mips/r6-n32.d: Likewise.
+	* testsuite/gas/mips/r6-n64.d: Likewise.
+	* testsuite/gas/mips/r6.d: Likewise.
+	* testsuite/gas/mips/tmips16-e.d: Likewise.
+	* testsuite/gas/mips/tmipsel16-e.d: Likewise.
+	* testsuite/gas/mn10300/relax.d: Likewise.
+
+2019-01-09  John Darrington <john@darrington.wattle.id.au>
+
+	* testsuite/gas/s12z/jsr.s: New case.
+	* testsuite/gas/s12z/jsr.d: New case.
+
+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+
+	* configure: Regenerate.
+
+2019-01-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* config/tc-aarch64.c (aarch64_cpus): Add ares.
+	* doc/c-aarch64.texi (-mcpu): Document ares value.
+
+2019-01-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/rx/rx.exp: Create generated test source in
+	current directory.
+	* testsuite/gas/rx/Xtod.d, * testsuite/gas/rx/abs.d,
+	* testsuite/gas/rx/adc.d, * testsuite/gas/rx/add.d,
+	* testsuite/gas/rx/and.d, * testsuite/gas/rx/bclr.d,
+	* testsuite/gas/rx/bcnd.d, * testsuite/gas/rx/bfmov.d,
+	* testsuite/gas/rx/bmcnd.d, * testsuite/gas/rx/bnot.d,
+	* testsuite/gas/rx/bra.d, * testsuite/gas/rx/brk.d,
+	* testsuite/gas/rx/bset.d, * testsuite/gas/rx/bsr.d,
+	* testsuite/gas/rx/btst.d, * testsuite/gas/rx/clrpsw.d,
+	* testsuite/gas/rx/cmp.d, * testsuite/gas/rx/dabs.d,
+	* testsuite/gas/rx/dadd.d, * testsuite/gas/rx/dbt.d,
+	* testsuite/gas/rx/dcmp.d, * testsuite/gas/rx/ddiv.d,
+	* testsuite/gas/rx/div.d, * testsuite/gas/rx/divu.d,
+	* testsuite/gas/rx/dmov.d, * testsuite/gas/rx/dmul.d,
+	* testsuite/gas/rx/dneg.d, * testsuite/gas/rx/dpopm.d,
+	* testsuite/gas/rx/dpushm.d, * testsuite/gas/rx/dround.d,
+	* testsuite/gas/rx/dsqrt.d, * testsuite/gas/rx/dsub.d,
+	* testsuite/gas/rx/dtoX.d, * testsuite/gas/rx/emaca.d,
+	* testsuite/gas/rx/emsba.d, * testsuite/gas/rx/emul.d,
+	* testsuite/gas/rx/emula.d, * testsuite/gas/rx/emulu.d,
+	* testsuite/gas/rx/fadd.d, * testsuite/gas/rx/fcmp.d,
+	* testsuite/gas/rx/fdiv.d, * testsuite/gas/rx/fmul.d,
+	* testsuite/gas/rx/fsqrt.d, * testsuite/gas/rx/fsub.d,
+	* testsuite/gas/rx/ftoi.d, * testsuite/gas/rx/ftou.d,
+	* testsuite/gas/rx/gprel.d, * testsuite/gas/rx/int.d,
+	* testsuite/gas/rx/itof.d, * testsuite/gas/rx/jmp.d,
+	* testsuite/gas/rx/jsr.d, * testsuite/gas/rx/machi.d,
+	* testsuite/gas/rx/maclh.d, * testsuite/gas/rx/maclo.d,
+	* testsuite/gas/rx/max.d, * testsuite/gas/rx/min.d,
+	* testsuite/gas/rx/mov.d, * testsuite/gas/rx/movco.d,
+	* testsuite/gas/rx/movli.d, * testsuite/gas/rx/movu.d,
+	* testsuite/gas/rx/msbhi.d, * testsuite/gas/rx/msblh.d,
+	* testsuite/gas/rx/msblo.d, * testsuite/gas/rx/mul.d,
+	* testsuite/gas/rx/mulhi.d, * testsuite/gas/rx/mullh.d,
+	* testsuite/gas/rx/mullo.d, * testsuite/gas/rx/mvfacgu.d,
+	* testsuite/gas/rx/mvfachi.d, * testsuite/gas/rx/mvfaclo.d,
+	* testsuite/gas/rx/mvfacmi.d, * testsuite/gas/rx/mvfc.d,
+	* testsuite/gas/rx/mvfcp.d, * testsuite/gas/rx/mvfdc.d,
+	* testsuite/gas/rx/mvfdr.d, * testsuite/gas/rx/mvtacgu.d,
+	* testsuite/gas/rx/mvtachi.d, * testsuite/gas/rx/mvtaclo.d,
+	* testsuite/gas/rx/mvtc.d, * testsuite/gas/rx/mvtcp.d,
+	* testsuite/gas/rx/mvtdc.d, * testsuite/gas/rx/neg.d,
+	* testsuite/gas/rx/nop.d, * testsuite/gas/rx/not.d,
+	* testsuite/gas/rx/opecp.d, * testsuite/gas/rx/or.d,
+	* testsuite/gas/rx/pop.d, * testsuite/gas/rx/popc.d,
+	* testsuite/gas/rx/popm.d, * testsuite/gas/rx/push.d,
+	* testsuite/gas/rx/pushc.d, * testsuite/gas/rx/pushm.d,
+	* testsuite/gas/rx/r-bcc.d, * testsuite/gas/rx/r-bra.d,
+	* testsuite/gas/rx/racl.d, * testsuite/gas/rx/racw.d,
+	* testsuite/gas/rx/rdacl.d, * testsuite/gas/rx/rdacw.d,
+	* testsuite/gas/rx/revl.d, * testsuite/gas/rx/revw.d,
+	* testsuite/gas/rx/rmpa.d, * testsuite/gas/rx/rolc.d,
+	* testsuite/gas/rx/rorc.d, * testsuite/gas/rx/rotl.d,
+	* testsuite/gas/rx/rotr.d, * testsuite/gas/rx/round.d,
+	* testsuite/gas/rx/rstr.d, * testsuite/gas/rx/rte.d,
+	* testsuite/gas/rx/rtfi.d, * testsuite/gas/rx/rts.d,
+	* testsuite/gas/rx/rtsd.d, * testsuite/gas/rx/sat.d,
+	* testsuite/gas/rx/satr.d, * testsuite/gas/rx/save.d,
+	* testsuite/gas/rx/sbb.d, * testsuite/gas/rx/sccnd.d,
+	* testsuite/gas/rx/scmpu.d, * testsuite/gas/rx/setpsw.d,
+	* testsuite/gas/rx/shar.d, * testsuite/gas/rx/shll.d,
+	* testsuite/gas/rx/shlr.d, * testsuite/gas/rx/smovb.d,
+	* testsuite/gas/rx/smovf.d, * testsuite/gas/rx/smovu.d,
+	* testsuite/gas/rx/sstr.d, * testsuite/gas/rx/stnz.d,
+	* testsuite/gas/rx/stz.d, * testsuite/gas/rx/sub.d,
+	* testsuite/gas/rx/suntil.d, * testsuite/gas/rx/swhile.d,
+	* testsuite/gas/rx/tst.d, * testsuite/gas/rx/utof.d,
+	* testsuite/gas/rx/wait.d, * testsuite/gas/rx/xchg.d,
+	* testsuite/gas/rx/xor.d: Add #source line.
+
+2019-01-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* config/tc-arm.c (arm_cpus): Add ares.
+	* doc/c-arm.texi (-mcpu): Document ares value.
+
+2019-01-05  Yoshinori Sato  <ysato@users.sourceforge.jp>
+
+	* config/rx-defs.h (rx_cpu_types): Add type RXV3 and RXV3FPU.
+	(rx_bfield): Add prototype.
+	(rx_post): Likewise.
+	* config/rx-parse.y: Add v3 instructions and Double FPU registers.
+	(DSIZE): Define.
+	(POST): Define.
+	(rx_check_v3): New. check v3 type.
+	(rx_check_dfpu): New. check have double support.
+	(double_condition_table): New. dcmp<cond> contiditon.
+	(check_condition): Multiple condition support.
+	(rx_lex): RXv3 instructions support.
+	Add parse dcmp<cond> instruction and Double FPU registers.
+	(immediate): Disable optimize in dmov #imm case.
+	(displacement): Add double displacement in dmov instraction.
+	* config/tc-rx.c (rx_use_conventional_section_names):
+	Invert default value in rx-*-linux target.
+	(cpu_type): Add additional ELF flags.
+	(cpu_type_list): Add RXv3.
+	(md_parse_option): Refer elf_flags from cpu_type_list.
+	(md_show_usage): Add rxv3 and rxv3-dfpu.
+	(rx_bytesT): Add post byte.
+	(rx_bfield): New. generate bfmov / bfmovz "imm" field.
+	(rx_post): New. Set instruction post byte.
+	(md_assemble): Add post byte.
+	doc/c-rx.texi: Add cpu types.
+	* testsuite/gas/rx/Xtod.d: New.
+	* testsuite/gas/rx/Xtod.sm: New.
+	* testsuite/gas/rx/bfmov.d: New.
+	* testsuite/gas/rx/bfmov.sm: New.
+	* testsuite/gas/rx/dabs.d: New.
+	* testsuite/gas/rx/dabs.sm: New.
+	* testsuite/gas/rx/dadd.d: New.
+	* testsuite/gas/rx/dadd.sm: New.
+	* testsuite/gas/rx/dcmp.d: New.
+	* testsuite/gas/rx/dcmp.sm: New.
+	* testsuite/gas/rx/ddiv.d: New.
+	* testsuite/gas/rx/ddiv.sm: New.
+	* testsuite/gas/rx/dmov.d: New.
+	* testsuite/gas/rx/dmov.sm: New.
+	* testsuite/gas/rx/dmul.d: New.
+	* testsuite/gas/rx/dmul.sm: New.
+	* testsuite/gas/rx/dneg.d: New.
+	* testsuite/gas/rx/dneg.sm: New.
+	* testsuite/gas/rx/dpopm.d: New.
+	* testsuite/gas/rx/dpopm.sm: New.
+	* testsuite/gas/rx/dpushm.d: New.
+	* testsuite/gas/rx/dpushm.sm: New.
+	* testsuite/gas/rx/dround.d: New.
+	* testsuite/gas/rx/dround.sm: New.
+	* testsuite/gas/rx/dsqrt.d: New.
+	* testsuite/gas/rx/dsqrt.sm: New.
+	* testsuite/gas/rx/dsub.d: New.
+	* testsuite/gas/rx/dsub.sm: New.
+	* testsuite/gas/rx/dtoX.d: New.
+	* testsuite/gas/rx/dtoX.sm: New.
+	* testsuite/gas/rx/macros.inc: Add double FPU registers.
+	* testsuite/gas/rx/mvfdc.d: New.
+	* testsuite/gas/rx/mvfdc.sm: New.
+	* testsuite/gas/rx/mvfdr.d: New.
+	* testsuite/gas/rx/mvfdr.sm: New.
+	* testsuite/gas/rx/mvtdc.d: New.
+	* testsuite/gas/rx/mvtdc.sm: New.
+	* testsuite/gas/rx/rstr.d: New.
+	* testsuite/gas/rx/rstr.sm: New.
+	* testsuite/gas/rx/rx.exp: Use rxv3-dfpu option.
+	* testsuite/gas/rx/save.d: New.
+	* testsuite/gas/rx/save.sm: New.
+	* testsuite/gas/rx/xor.d: New.
+	* testsuite/gas/rx/xor.sm: Add pattern.
+
+2019-01-04  Wu Heng  <wu.heng@zte.com.cn>
+
+	PR 24010
+	* macro.c (get_any_string): Check for end of input whilst scanning
+	for separators.
+
+2019-01-04  Wu Heng  <wu.heng@zte.com.cn>
+
+	PR 24009
+	* read.c (stringer): Fix handling of missing '>' character at end
+	of <...> sequence.
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/ld/ChangeLog-2019 b/ld/ChangeLog-2019
new file mode 100644
index 0000000000..f29913e9cf
--- /dev/null
+++ b/ld/ChangeLog-2019
@@ -0,0 +1,2904 @@
+2019-12-26  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (lang_output_section_find_by_flags): Don't use &p->field
+	when p might be NULL.
+	* ldelf.c (output_rel_find, ldelf_place_orphan): Likewise.
+	(insert_os_after, lang_insert_orphan, lookup_name): Likewise.
+	(strip_excluded_output_sections, lang_clear_os_map): Likewise.
+	(lang_check, lang_for_each_input_file): Likewise.
+	(lang_reset_memory_regions, find_replacements_insert_point): Likewise.
+	(find_rescan_insertion, lang_propagate_lma_regions): Likewise.
+	(lang_record_phdrs): Likewise.
+	* emultempl/alphaelf.em (alpha_after_open): Likewise.
+	* emultempl/mmo.em (mmo_place_orphan): Likewise.
+	* emultempl/pe.em (gld_${EMULATION_NAME}_place_orphan): Likewise.
+	* emultempl/pep.em (gld_${EMULATION_NAME}_place_orphan): Likewise.
+	* emultempl/ppc32elf.em (ppc_after_check_relocs): Likewise.
+	* emultempl/spuelf.em (spu_before_allocation): Likewise.
+	(embedded_spu_file): Likewise.
+
+2019-12-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/ld-lib.exp (uses_genelf): Remove moxie.
+
+2019-12-18  Anthony Green  <green@moxielogic.com>
+
+	* emulparams/elf32moxie.sh (TEMPLATE_NAME): Switch to elf template
+	to enable --build-id.
+	* configure.tgt: Don't define targ_extra_ofiles for moxie-*-*.
+
+2019-12-18  Alan Modra  <amodra@gmail.com>
+
+	* pe-dll.c (pe_get32, pe_as32): Avoid signed overflow.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-avr/lds-mega.d: Adjust symbols to suit objdump change.
+	* testsuite/ld-avr/lds-tiny.d: Likewise.
+	* testsuite/ld-x86-64/load2.d: Likewise.
+	* testsuite/ld-mips-elf/compact-eh1.s: Give function symbols
+	function type.
+	* testsuite/ld-mips-elf/compact-eh1a.s: Likewise.
+	* testsuite/ld-mips-elf/compact-eh1b.s: Likewise.
+	* testsuite/ld-mips-elf/compact-eh2.s: Likewise.
+	* testsuite/ld-mips-elf/compact-eh3.s: Likewise.
+	* testsuite/ld-mips-elf/compact-eh3a.s: Likewise.
+	* testsuite/ld-mips-elf/eh-frame5.s: Likewise.
+	* testsuite/ld-mips-elf/ehdr_start-new.s: Likewise.
+	* testsuite/ld-mips-elf/ehdr_start-o32.s: Likewise.
+	* testsuite/ld-mips-elf/emit-relocs-1a.s: Likewise.
+	* testsuite/ld-mips-elf/jaloverflow-2.s: Likewise.
+	* testsuite/ld-mips-elf/jaloverflow.s: Likewise.
+	* testsuite/ld-mips-elf/mips16-call-global-1.s: Likewise.
+	* testsuite/ld-mips-elf/mips16-intermix-1.s: Likewise.
+	* testsuite/ld-mips-elf/mips16-pic-1b.s: Likewise.
+	* testsuite/ld-mips-elf/mips16-pic-4c.s: Likewise.
+	* testsuite/ld-mips-elf/no-shared-1-n64.s: Likewise.
+	* testsuite/ld-mips-elf/no-shared-1-o32.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-1b-micromips.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-1b.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-2a.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-3b.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-4b.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-5a.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-n32c.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-n64c.s: Likewise.
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-o32c.s: Likewise.
+	* testsuite/ld-mips-elf/pie.s: Likewise.
+	* testsuite/ld-mips-elf/relax-jalr.s: Likewise.
+	* testsuite/ld-mips-elf/reloc-1a.s: Likewise.
+	* testsuite/ld-mips-elf/reloc-2a.s: Likewise.
+	* testsuite/ld-mips-elf/reloc-4.s: Likewise.
+	* testsuite/ld-mips-elf/reloc-5.s: Likewise.
+	* testsuite/ld-mips-elf/reloc-6b.s: Likewise.
+	* testsuite/ld-mips-elf/textrel-1.s: Likewise.
+	* testsuite/ld-mips-elf/undefweak-overflow.s: Likewise.
+	* testsuite/ld-mips-elf/undefweak-overflow.d: Adjust.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/pr21233-l.sd: Accept OBJECT for type and
+	PRC for section of symbols.
+	* testsuite/ld-elf/pr23591.d: Likewise.
+	* testsuite/ld-elf/provide-hidden-s.nd: Likewise.
+	* testsuite/ld-mips-elf/start.s: Make symbols function type.
+	* testsuite/ld-mips-elf/hash2.d: Adjust.  Don't xfail irix.
+
+2019-12-17  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/tic80coff.sh: Delete file.
+	* scripttempl/tic80coff.sc: Delete file.
+	* configure.tgt: Remove tic80 support.
+	* Makefile.am: Likewise.
+	* Makefile.in: Regenerate.
+	* po/BLD-POTFILES.in: Regenerate.
+
+2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-i386/align-branch-1.d: New file.
+	* testsuite/ld-i386/align-branch-1.s: Likewise.
+	* testsuite/ld-x86-64/align-branch-1.d: Likewise.
+	* testsuite/ld-x86-64/align-branch-1.3: Likewise.
+	* testsuite/ld-i386/i386.exp: Run the new test.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+
+2019-12-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/eh4.d: Match optional padding DW_CFA_nop in FDEs.
+	* testsuite/ld-elf/eh5.d: Likewise, and extra CIEs emitted on
+	embedded targets.
+
+2019-12-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-mips-elf/eh-frame1-n32.d: Pass --eh-frame-hdr to ld.
+	* testsuite/ld-mips-elf/eh-frame1-n64.d: Likewise.
+	* testsuite/ld-mips-elf/eh-frame2-n32.d: Likewise.
+	* testsuite/ld-mips-elf/eh-frame2-n64.d: Likewise.
+
+2019-12-05  Alan Modra  <amodra@gmail.com>
+
+	PR 25244
+	* ldlang.c (lang_print_memory_usage): Correct last patch.
+
+2019-12-05  Alan Modra  <amodra@gmail.com>
+
+	PR 25243
+	* emulparams/armelf.sh (OTHER_READONLY_SECTIONS): Move definition
+	of __exidx_start and __exidx_end into ARM.exidx.
+	* emulparams/armelf_linux_eabi.sh (OTHER_READONLY_SECTIONS): Likewise.
+	* emulparams/armsymbian.sh (OTHER_READONLY_SECTIONS): Similarly.
+	* emulparams/elf32_tic6x_le.sh (OTHER_READONLY_SECTIONS): Similarly.
+	* emulparams/armelf_fuchsia.sh: Source armelf_linux_eabi.sh,
+	just redefining TEXT_START_ADDR.
+	* emulparams/armelf_linux_fdpiceabi.sh: Source armelf_linux_eabi.sh,
+	adding to OTHER_READONLY_SECTIONS.
+
+2019-12-05  Alan Modra  <amodra@gmail.com>
+
+	PR 25244
+	* ldlang.c (lang_print_memory_usage): Don't print percent used
+	when length is zero.
+
+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* testsuite/ld-elf/eh5.d: Accept version 3 DWARF CIE.
+
+2019-11-26  Martin Liska  <mliska@suse.cz>
+
+	* scripttempl/arclinux.sc: Add .text.sorted.* which is sorted
+	by default.
+	* scripttempl/elf.sc: Likewise.
+	* scripttempl/elf64bpf.sc: Likewise.
+	* scripttempl/nds32elf.sc: Likewise.
+	* testsuite/ld-arm/arm-no-rel-plt.ld: Expect .text.sorted.*
+	in the default linker script.
+	* testsuite/ld-arm/fdpic-main.ld: Likewise.
+	* testsuite/ld-arm/fdpic-shared.ld: Likewise.
+
+2019-11-25  Alan Modra  <amodra@gmail.com>
+
+	* ldexp.c (fold_name): Pass section to bfd_octets_per_byte.
+	* ldlang.c (init_opb): Don't call bfd_arch_mach_octets_per_byte
+	unnecessarily.
+
+2019-11-25  Christian Eggers  <ceggers@gmx.de>
+
+	* ldexp.c (fold_name): Provide section parameter to
+	bfd_octets_per_byte.
+	* ldlang (init_opb): New argument s. Set opb_shift to 0 if
+	SEC_ELF_OCTETS for the current section is set.
+	(print_input_section): Pass current section to init_opb.
+	(print_data_statement,print_reloc_statement,
+	print_padding_statement): Likewise.
+	(lang_check_section_addresses): Call init_opb for each
+	section.
+	(lang_size_sections_1,lang_size_sections_1,
+	lang_do_assignments_1): Likewise.
+	(lang_process): Pass NULL to init_opb.
+
+2019-11-22  Nick Clifton  <nickc@redhat.com>
+
+	* ld.texi (Output Section Discarding): Add note indicating that
+	/DISCARD/ed sections ignore ELF section grouping.
+
+2019-11-22  Nick Clifton  <nickc@redhat.com>
+
+	* ldlang.h (LANG_FOR_EACH_INPUT_STATEMENT): Use cast instead of
+	extra check.
+
+2019-11-21  Nick Clifton  <nickc@redhat.com>
+
+	* ldlang.h (LANG_FOR_EACH_INPUT_STATEMENT): Check for an empty
+	file chain before examining the first input statement.
+
+2019-11-21  Alan Modra  <amodra@gmail.com>
+
+	PR 46
+	* scripttempl/pe.sc: Comment on ld -Ur fail.  Wrap .gcc_exc comment.
+	* scripttempl/pep.sc: Likewise.
+	* scripttempl/i386beos.sc: Wrap .gcc_exc comment.
+	* scripttempl/mcorepe.sc: Likewise.
+	* testsuite/ld-cdtest/cdtest.exp (test2): xfail for pe.
+
+2019-11-12  Jim Wilson  <jimw@sifive.com>
+
+	PR 25181
+	* testsuite/ld-riscv-elf/call-relax-0.s: New file.
+	* testsuite/ld-riscv-elf/call-relax-1.s: New file.
+	* testsuite/ld-riscv-elf/call-relax-2.s: New file.
+	* testsuite/ld-riscv-elf/call-relax-3.s: New file.
+	* testsuite/ld-riscv-elf/call-relax.d: New test.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Run call-relax test.
+
+2019-11-08  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/aarch64elf.sh: Revert 2019-11-05 change.
+	* emulparams/aarch64elf32.sh: Likewise.
+	* emulparams/arcelf.sh: Likewise.
+	* emulparams/armelf.sh: Likewise.
+	* emulparams/armelf_fbsd.sh: Likewise.
+	* emulparams/armelf_nbsd.sh: Likewise.
+	* emulparams/armelf_vxworks.sh: Likewise.
+	* emulparams/armsymbian.sh: Likewise.
+	* emulparams/elf32bfin.sh: Likewise.
+	* emulparams/elf32microblaze.sh: Likewise.
+	* emulparams/score3_elf.sh: Likewise.
+	* emulparams/shelf.sh: Likewise.
+	* emulparams/shelf_nbsd.sh: Likewise.
+	* emulparams/shelf_uclinux.sh: Likewise.
+
+2019-11-07  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/elf32cr16c.sh: Delete.
+	* scripttempl/elf32cr16c.sc: Delete.
+	* Makefile.am,
+	* configure.tgt: Remove cr16c support.
+	* NEWS: Mention removal of cr16c.
+	* Makefile.in,
+	* po/BLD-POTFILES.in: Regenerate.
+
+2019-11-07  Alan Modra  <amodra@gmail.com>
+
+	* configure.tgt: Order targets by cpu.
+
+2019-11-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-aarch64/aarch64-elf.exp: Run tests requiring pie
+	or shared library support only when check_shared_lib_support.
+	* testsuite/ld-aarch64/bti-pac-plt-1.d: Likewise.
+	* testsuite/ld-aarch64/bti-pac-plt-2.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-1.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-2.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-3.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-4.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-6.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-7.d: Likewise.
+	* testsuite/ld-aarch64/bti-warn.d: Likewise.
+	* testsuite/ld-aarch64/dt_textrel.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-258-dyn-bad.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-259-dyn-bad.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-264-bad.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-266-bad.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-268-bad.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-269-bad.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-515-be.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-515.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-516-be.d: Likewise.
+	* testsuite/ld-aarch64/emit-relocs-516.d: Likewise.
+	* testsuite/ld-aarch64/farcall-b-plt.d: Likewise.
+	* testsuite/ld-aarch64/farcall-bl-plt.d: Likewise.
+	* testsuite/ld-aarch64/gc-plt-relocs.d: Likewise.
+	* testsuite/ld-aarch64/gc-relocs-257-dyn.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-1-local.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-1.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-12.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-13.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-14a.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-14b.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-14c.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-14d.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-14e.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-14f.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-15.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-16.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-18a.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-18b.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-19a.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-19b.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-2-local.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-2.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-20.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-21.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-3a.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-3b.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-5b-local.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-5b.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-6b.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-7b.d: Likewise.
+	* testsuite/ld-aarch64/ifunc-7c.d: Likewise.
+	* testsuite/ld-aarch64/pac-plt-1.d: Likewise.
+	* testsuite/ld-aarch64/pac-plt-2.d: Likewise.
+	* testsuite/ld-aarch64/pcrel_pic_defined.d: Likewise.
+	* testsuite/ld-aarch64/pcrel_pic_undefined.d: Likewise.
+	* testsuite/ld-aarch64/pie-bind-locally.d: Likewise.
+	* testsuite/ld-aarch64/plt_mapping_symbol.d: Likewise.
+	* testsuite/ld-aarch64/pr20402.d: Likewise.
+	* testsuite/ld-aarch64/pr22764.d: Likewise.
+	* testsuite/ld-aarch64/property-bti-pac1.d: Likewise.
+	* testsuite/ld-aarch64/protected-data.d: Likewise.
+	* testsuite/ld-aarch64/rela-abs-relative-be.d: Likewise.
+	* testsuite/ld-aarch64/rela-abs-relative-opt.d: Likewise.
+	* testsuite/ld-aarch64/rela-abs-relative.d: Likewise.
+	* testsuite/ld-aarch64/relasz.d: Likewise.
+	* testsuite/ld-aarch64/relocs-1027-symbolic-func.d: Likewise.
+	* testsuite/ld-aarch64/tls-desc-ie-ilp32.d: Likewise.
+	* testsuite/ld-aarch64/tls-desc-ie.d: Likewise.
+	* testsuite/ld-aarch64/tls-large-desc-be.d: Likewise.
+	* testsuite/ld-aarch64/tls-large-desc.d: Likewise.
+	* testsuite/ld-aarch64/tls-large-ie-be.d: Likewise.
+	* testsuite/ld-aarch64/tls-large-ie.d: Likewise.
+	* testsuite/ld-aarch64/tls-relax-gdesc-le-now.d: Likewise.
+	* testsuite/ld-aarch64/tls-small-ld.d: Likewise.
+	* testsuite/ld-aarch64/tls-tiny-desc.d: Likewise.
+	* testsuite/ld-aarch64/tls-tiny-gd.d: Likewise.
+	* testsuite/ld-aarch64/tls-tiny-ie.d: Likewise.
+	* testsuite/ld-aarch64/tls-tiny-ld.d: Likewise.
+	* testsuite/ld-aarch64/tlsle-symbol-offset.d: Likewise.
+	* testsuite/ld-aarch64/tlsle.d: Likewise.
+	* testsuite/ld-aarch64/variant_pcs-now.d: Likewise.
+	* testsuite/ld-aarch64/variant_pcs-shared.d: Likewise.
+	* testsuite/ld-arm/arm-elf.exp: Likewise.  Remove --hash-style=sysv
+	from static tests.  Consolidate armelftests_common_* vars into one.
+	* testsuite/ld-arm/gc-hidden-1.d: Require check_shared_lib_support.
+	* testsuite/ld-arm/movw-shared-1.d: Likewise.
+	* testsuite/ld-arm/movw-shared-2.d: Likewise.
+	* testsuite/ld-arm/movw-shared-3.d: Likewise.
+	* testsuite/ld-arm/movw-shared-4.d: Likewise.
+	* testsuite/ld-arm/pie-bind-locally.d: Likewise.
+	* testsuite/ld-arm/protected-data.d: Likewise.
+	* testsuite/ld-arm/rel32-reject-pie.d: Likewise.
+	* testsuite/ld-arm/rel32-reject.d: Likewise.
+	* testsuite/ld-arm/thumb2-bl-undefweak.d: Likewise.
+	* testsuite/ld-arm/thumb2-bl-undefweak1.d: Likewise.
+
+2019-11-06  Christian Eggers  <ceggers@gmx.de>
+
+	* ldlang.c (print_input_section): Shift printed size by opb_shift.
+
+2019-11-05  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/aarch64elf.sh (GENERATE_SHLIB_SCRIPT),
+	(GENERATE_PIE_SCRIPT): Don't set.
+	* emulparams/aarch64elf32.sh (GENERATE_SHLIB_SCRIPT),
+	(GENERATE_PIE_SCRIPT): Don't set.
+	* emulparams/arcelf.sh (GENERATE_SHLIB_SCRIPT): Don't set.
+	* emulparams/armelf.sh (GENERATE_SHLIB_SCRIPT),
+	(GENERATE_PIE_SCRIPT): Don't set.
+	* emulparams/armelf_fbsd.sh (GENERATE_SHLIB_SCRIPT): Set.
+	* emulparams/armelf_nbsd.sh (GENERATE_SHLIB_SCRIPT),
+	(GENERATE_PIE_SCRIPT): Set.
+	* emulparams/armelf_vxworks.sh (GENERATE_SHLIB_SCRIPT): Set.
+	* emulparams/armsymbian.sh (GENERATE_SHLIB_SCRIPT): Set.
+	* emulparams/elf32bfin.sh (GENERATE_SHLIB_SCRIPT): Don't set.
+	* emulparams/elf32microblaze.sh (GENERATE_SHLIB_SCRIPT): Don't set.
+	* emulparams/score3_elf.sh (GENERATE_SHLIB_SCRIPT): Don't set.
+	* emulparams/shelf.sh (GENERATE_SHLIB_SCRIPT): Don't set.
+	* emulparams/shelf_nbsd.sh (GENERATE_SHLIB_SCRIPT),
+	(GENERATE_PIE_SCRIPT): Set.
+	* emulparams/shelf_uclinux.sh (GENERATE_SHLIB_SCRIPT): Set.
+
+2019-11-05  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/elf32bfinfd.sh: Unset EMBEDDED rather assigning as empty.
+	* emulparams/elf32frvfd.sh: Likewise.
+	* emulparams/elf32lm32fd.sh: Likewise.
+	* emulparams/i386lynx.sh: Likewise.
+
+2019-10-22  Alan Modra  <amodra@gmail.com>
+
+	PR 22269
+	* testsuite/ld-elf/pr22269-1.rd: Look for GOT section NONE and
+	RELATIVE relocs.
+	* testsuite/ld-elf/shared.exp (pr22269-1): Give test a better
+	name.  Use -z nocombreloc.
+
+2019-10-19  Alan Modra  <amodra@gmail.com>
+
+	PR ld/25110
+	* testsuite/ld-gc/gc.exp: Adjust LDFLAGS for pr19161 dump test on
+	hppa*-*-linux*.
+
+2019-10-17  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/lib-nopic-01b.d: Update the error message.
+
+	* testsuite/ld-riscv-elf/lib-nopic-01a.s: Create the shared library
+	lib-nopic-01a.so, it will be linked with lib-nopic-01b.s.
+	* testsuite/ld-riscv-elf/lib-nopic-01b.s: Add new test for the
+	unresolved relocation.  Link the non-pic code into a shared library
+	may cause the error.
+	* testsuite/ld-riscv-elf/lib-nopic-01b.d: Likewise.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Run the new test only when
+	the shared library is supported.
+
+2019-10-16  Alan Modra  <amodra@gmail.com>
+
+	PR 13616
+	* emulparams/elf64lppc.sh (NOP): Don't define.
+	* emulparams/elf64ppc.sh (NOP): Don't define.
+	* ldwrite.c (build_link_order): Use link_info.big_endian.  Move
+	code determining endian to use for data_statement to..
+	* ldemul.c (after_open_default): ..here.  Set link_info.big_endian.
+
+2019-10-16  Alan Modra  <amodra@gmail.com>
+
+	* genscripts.sh: Correct comments.  Remove outdated comment block
+	saying "Generate 5 or 6 script files..".  Remove description of
+	ld options from comment emitted to script files, and order options
+	as per comment block in genscripts.sh saying which scripts are
+	generated.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* ldctor.h (struct set_element): Make next field a union, adding
+	idx field.
+	* ldctor.c (ctor_cmp): Dereference pointer and lose unnecessary
+	const.  Replace final sort on pointer value with final sort on idx.
+	(ldctor_add_set_entry): Adjust next field access.
+	(ldctor_build_sets): Likewise.  Set u.idx field for sort.
+
+2019-10-14  Alan Modra  <amodra@gmail.com>
+
+	* pe-dll.c (reloc_data_type): Add idx field.
+	(reloc_sort): Perform final sort by idx.
+	(generate_reloc): Set idx.
+
+2019-10-13  Nick Clifton  <nickc@redhat.com>
+
+	* NEWS: Delete superflous "Changes in 2.33" comment.
+
+2019-10-09  Alan Modra  <amodra@gmail.com>
+
+	PR 25081
+	* ldlang.c (lang_size_sections_1): Set lma from section vma
+	rather than dot.
+
+2019-10-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/localgot.s,
+	* testsuite/ld-powerpc/localgot.d: New test.
+	* testsuite/ld-powerpc/powerpc.exp: Run it.
+
+2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* testsuite/ld-msp430-elf/attr-gnu-main.s: New test.
+	* testsuite/ld-msp430-elf/attr-gnu-obj.s: New test.
+	* testsuite/ld-msp430-elf/attr-gnu-region-lower-upper.d: New test.
+	* testsuite/ld-msp430-elf/attr-gnu-region-lower.d: New test.
+	* testsuite/ld-msp430-elf/attr-gnu-region-upper.d: New test.
+	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new tests.
+
+2019-10-07  Alan Modra  <amodra@gmail.com>
+
+	* ldmisc.c (vfinfo): Save and restore bfd_error around bfd
+	function calls that might set it.
+	* testsuite/ld-elf/indirect.exp: Don't expect "nonrepresentable
+	section" message.
+
+2019-10-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsexe.r: Adjust for added TLSMARK symbol.
+	* testsuite/ld-powerpc/tlsexe32.r: Likewise.
+	* testsuite/ld-powerpc/tlsso.r: Likewise.
+	* testsuite/ld-powerpc/tlsso32.r: Likewise.
+	* testsuite/ld-powerpc/tls32no.d,
+	* testsuite/ld-powerpc/tls32no.g: New test files.
+	* testsuite/ld-powerpc/tlsexe32no.d,
+	* testsuite/ld-powerpc/tlsexe32no.g,
+	* testsuite/ld-powerpc/tlsexe32no.r: New test files.
+	* testsuite/ld-powerpc/tlsexeno.d,
+	* testsuite/ld-powerpc/tlsexeno.g,
+	* testsuite/ld-powerpc/tlsexeno.r: New test files.
+	* testsuite/ld-powerpc/tlsexetocno.d,
+	* testsuite/ld-powerpc/tlsexetocno.g: New test files.
+	* testsuite/ld-powerpc/tlsno.d,
+	* testsuite/ld-powerpc/tlsno.g: New test files.
+	* testsuite/ld-powerpc/tlstocno.d,
+	* testsuite/ld-powerpc/tlstocno.g: New test files.
+	* testsuite/ld-powerpc/powerpc.exp: Run new tests.
+
+2019-10-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-arm/tls-gdesc-neg.d: Relax target match.
+
+2019-10-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsso.d: Adjust to suit tlsld_got usage change.
+	* testsuite/ld-powerpc/tlsso.g: Likewise.
+	* testsuite/ld-powerpc/tlsso.r: Likewise.
+	* testsuite/ld-powerpc/tlsso32.d: Likewise.
+	* testsuite/ld-powerpc/tlsso32.g: Likewise.
+	* testsuite/ld-powerpc/tlsso32.r: Likewise.
+
+2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	PR ld/25062
+	* testsuite/ld-arm/arm-elf.exp: Update.
+	* testsuite/ld-arm/tls-gdesc-neg.d: New test.
+	* testsuite/ld-arm/tls-gdesc-neg.s: New test.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac (TESTCTFLIB): Set to the .so or .a, like TESTBFDLIB.
+	* Makefile.am (TESTCTFLIB): Use it.
+	(LIBCTF): Use the .la file.
+	(check-DEJAGNU): Use it.
+	* Makefile.in: Regenerated.
+	* configure: Likewise.
+
+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ldlang.h: (struct lang_input_statement_struct): Add the_ctf.
+	(struct elf_sym_strtab): Add forward.
+	(struct elf_strtab_hash): Likewise.
+	(ldlang_ctf_apply_strsym): Declare.
+	(ldlang_write_ctf_late): Likewise.
+	* ldemul.h (ldemul_emit_ctf_early): New.
+	(ldemul_examine_strtab_for_ctf): Likewise.
+	(ld_emulation_xfer_type) <emit_ctf_early>: Likewise.
+	(ld_emulation_xfer_type) <examine_strtab_for_ctf>: Likewise.
+	* ldemul.c (ldemul_emit_ctf_early): New.
+	(ldemul_examine_strtab_for_ctf): Likewise.
+	* ldlang.c: Include ctf-api.h.
+	(CTF_COMPRESSION_THRESHOLD): New.
+	(ctf_output): New. Initialized in...
+	(ldlang_open_ctf): ... this new function.  Open all the CTF
+	sections in the input files: mark them non-loaded and empty
+	so as not to copy their contents to the output, but linker-created
+	so the section gets created in the target.
+	(ldlang_merge_ctf): New, merge types via ctf_link_add_ctf and
+	ctf_link.
+	(ldlang_ctf_apply_strsym): New, an examine_strtab callback: wrap
+	ldemul_examine_strtab_for_ctf.
+	(lang_write_ctf): New, write out the CTF section.
+	(ldlang_write_ctf_late): New, late call via bfd's emit_ctf hook.
+	(lang_process): Call ldlang_open_ctf, ldlang_merge_ctf, and
+	lang_write_ctf.
+	* ldmain.c (link_callbacks): Add ldlang_ctf_apply_strsym,
+	ldlang_write_ctf_late.
+	* emultempl/aix.em: Add ctf-api.h.
+	* emultempl/armcoff.em: Likewise.
+	* emultempl/beos.em: Likewise.
+	* emultempl/elf.em: Likewise.
+	* emultempl/generic.em: Likewise.
+	* emultempl/linux.em: Likewise.
+	* emultempl/msp430.em: Likewise.
+	* emultempl/pe.em: Likewise.
+	* emultempl/pep.em: Likewise.
+	* emultempl/ticoff.em: Likewise.
+	* emultempl/vanilla.em: Likewise.
+	* ldcref.c: Likewise.
+	* ldctor.c: Likewise.
+	* ldelf.c: Likewise.
+	* ldelfgen.c: Likewise.
+	* ldemul.c: Likewise.
+	* ldexp.c: Likewise.
+	* ldfile.c: Likewise.
+	* ldgram.c: Likewise.
+	* ldlex.l: Likewise.
+	* ldmain.c: Likewise.
+	* ldmisc.c: Likewise.
+	* ldver.c: Likewise.
+	* ldwrite.c: Likewise.
+	* lexsup.c: Likewise.
+	* mri.c: Likewise.
+	* pe-dll.c: Likewise.
+	* plugin.c: Likewise.
+
+	* ldelfgen.c (ldelf_emit_ctf_early): New.
+	(ldelf_examine_strtab_for_ctf): tell libctf about the symtab and
+	strtab.
+	(struct ctf_strsym_iter_cb_arg): New, state to do so.
+	(ldelf_ctf_strtab_iter_cb): New: tell libctf about
+	each string in the strtab in turn.
+	(ldelf_ctf_symbols_iter_cb): New, tell libctf
+	about each symbol in the symtab in turn.
+	* ldelfgen.h (struct elf_sym_strtab): Add forward.
+	(struct elf_strtab_hash): Likewise.
+	(struct ctf_file): Likewise.
+	(ldelf_emit_ctf_early): Declare.
+	(ldelf_examine_strtab_for_ctf): Likewise.
+	* emultempl/elf-generic.em (LDEMUL_EMIT_CTF_EARLY): Set it.
+	(LDEMUL_EXAMINE_STRTAB_FOR_CTF): Likewise.
+	* emultempl/aix.em (ld_${EMULATION_NAME}_emulation): Add
+	emit_ctf_early and examine_strtab_for_ctf, NULL by default.
+	* emultempl/armcoff.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/beos.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/elf.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/generic.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/linux.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/msp430.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/pe.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/pep.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/ticoff.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/vanilla.em (ld_vanilla_emulation): Likewise.
+
+	* Makefile.am: Pull in libctf (and zlib, a transitive requirement
+	for compressed CTF section emission).  Pass it on to DejaGNU.
+	* configure.ac: Add AM_ZLIB.
+	* aclocal.m4: Added zlib.m4.
+	* Makefile.in: Regenerated.
+	* testsuite/ld-bootstrap/bootstrap.exp: Use it when relinking ld.
+
+2019-10-02  Alan Modra  <amodra@gmail.com>
+
+	* ld.texi (-Bsymbolic, -Bsymbolic-functions): Don't mention PIEs.
+	* ld.h (symbolic_enum, dynamic_list_enum),
+	(args_type <symbolic, dynamic_list>): Move to..
+	* lexsup.c (parse_args): ..here, using auto vars opt_symbolic
+	and opt_dynamic_list rather than command_line fields.  Only
+	act on -Bsymbolic and -Bsymbolic-functions for shared library
+	output.  Free dynamic_list.
+
+2019-09-26  Alan Modra  <amodra@gmail.com>
+
+	PR 24262
+	* ld.texi (-plugin): Revert 2019-03-15 change.
+
+2019-09-25  Alan Modra  <amodra@gmail.com>
+
+	* ld.texi (SORT_BY_ALIGNMENT): Reword slightly.
+	(SORT_BY_INIT_PRIORITY): Elucidate.
+	* ldlang.c: Include limits.h.
+	(get_init_priority): Comment.  Change param to a section,
+	return an int.  Sanity check priority digits.  Support sorting
+	more sections with trailing digits.  Return -1 on error.
+	(compare_section): Adjust.
+
+2019-09-25  Nick Clifton  <nickc@redhat.com>
+
+	* emultempl/avrelf.em (_before_allocation): Silence build warning
+	using clang.
+
+2019-09-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-plugin/pr24406-1.c (main): Correct buffer size
+	to read.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* deffilep.y: Include bfdlink.h.
+	* ldelf.c: Likewise.
+	* ldelfgen.c: Likewise.
+	* ldver.c: Likewise.
+	* mri.c: Likewise.
+	* emultempl/irix.em: Don't include ld.h, ldmain.h, libiberty.h.
+	Comment.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/m68kelf.em: Include elf32-m68k.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/bfin.em: Include elf32-bfin.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/cr16elf.em: Include elf32-cr16.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/aix.em: Include xcofflink.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/armelf.em: Include elf32-arm.h.
+	* emultempl/pe.em: Move func defines later and include coff-arm.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/aarch64elf.em: Include elfxx-aarch64.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/ia64elf.em: Include elfxx-ia64.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/v850elf.em: Include elf32-v850.h.
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/cskyelf.em: Include elf32-csky.h.
+
+2019-09-22  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-srec/sr3.cc (FOO_MSG_LEN): Set to 4.
+
+2019-09-20  Nelson Chu <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/weakref32.s: Add relaxable undef weak code.
+	* testsuite/ld-riscv-elf/weakref64.s: Likewise.
+	* testsuite/ld-riscv-elf/weakref32.d: Updated.
+	* testsuite/ld-riscv-elf/weakref64.d: Updated.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/xtensaelf.em (xtensa_get_section_deps): Comment.
+	Use bfd_section_userdata.
+	(xtensa_set_section_deps): Use bfd_set_section_userdata.
+	* ldlang.c (lang_output_section_get): Use bfd_section_userdata.
+	(sort_def_symbol): Likewise, and bfd_set_section_userdata.
+	(init_os): Use bfd_set_section_userdata.
+	(print_all_symbols): Use bfd_section_userdata.
+	* ldlang.h (get_userdata): Delete.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* ldelf.c (ldelf_after_open, ldelf_place_orphan
+	* ldlang.c (walk_wild_file, lang_process): Use bfd_usrdata.
+	(load_symbols, ldlang_add_file): Use bfd_set_usrdata.
+	* ldmain.c (add_archive_element): Use bfd_usrdata.
+	* ldlang.h (bfd_input_just_syms): New inline function.
+	* emultempl/aarch64elf.em (build_section_lists): Use it.
+	* emultempl/mmo.em (mmo_place_orphan): Likewise.
+	* emultempl/pe.em (gld_${EMULATION_NAME}_place_orphan): Likewise.
+	* emultempl/pep.em (gld_${EMULATION_NAME}_place_orphan): Likewise.
+	* emultempl/ppc64elf.em (build_section_lists): Likewise.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* ldcref.c, * ldctor.c, * ldelf.c, * ldlang.c, * pe-dll.c,
+	* emultempl/aarch64elf.em, * emultempl/aix.em,
+	* emultempl/armcoff.em, * emultempl/armelf.em,
+	* emultempl/cr16elf.em, * emultempl/cskyelf.em,
+	* emultempl/m68hc1xelf.em, * emultempl/m68kelf.em,
+	* emultempl/mipself.em, * emultempl/mmix-elfnmmo.em,
+	* emultempl/mmo.em, * emultempl/msp430.em,
+	* emultempl/nios2elf.em, * emultempl/pe.em, * emultempl/pep.em,
+	* emultempl/ppc64elf.em, * emultempl/xtensaelf.em: Update
+	throughout for bfd section macro and function changes.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* ldcref.c (check_reloc_refs): Update bfd_get_section to
+	bfd_asymbol_section.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* Makefile.in: Re-generate.
+	* configure: Re-generate.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (stricpy, strcut, name_compare): Constify params.
+	(get_first_input_target): Make return and "target" const.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/pe.em (after_open): Use bfd_set_filename.
+	* emultempl/pep.em (after_open): Use bfd_set_filename.
+
+2019-09-16  Alan Modra  <amodra@gmail.com>
+
+	PR 25002
+	* ldelf.c: Include safe-ctype.h.
+
+2019-09-16  Phil Blundell  <pb@pbcl.net>
+
+	* Makefile.in, configure: Regenerated.
+
+2019-09-13  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (new_afile): Remove add_to_list parameter.
+	(lang_add_input_file): Update new_afile calls.
+	(lookup_name): Splice input_statement added by new_afile into
+	statement_list after current input_file_chain entry.
+	(lang_process): Update comment.
+
+2019-09-12  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (print_input_statement): Do not exclude linker created
+	BFDs.
+
+2019-09-12  Alan Modra  <amodra@gmail.com>
+
+	PR 24981
+	* ldlang.c (lang_process): Remove assertion.  Comment.
+
+2019-09-11  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/elf32.em: Remove "misnamed" comment.  Rename to..
+	* emultempl/elf.em: ..this.
+	* configure.ac (elf_list_options): Adjust TEMPLATE_NAME grep.
+	* emulparams/aarch64cloudabi.sh (TEMPLATE_NAME): Set to elf.
+	* emulparams/aarch64elf.sh: Likewise.
+	* emulparams/aarch64elf32.sh: Likewise.
+	* emulparams/aarch64fbsd.sh: Likewise.
+	* emulparams/aarch64linux.sh: Likewise.
+	* emulparams/aarch64linux32.sh: Likewise.
+	* emulparams/arcelf.sh: Likewise.
+	* emulparams/arcelf_prof.sh: Likewise.
+	* emulparams/arclinux.sh: Likewise.
+	* emulparams/arclinux_prof.sh: Likewise.
+	* emulparams/arcv2elf.sh: Likewise.
+	* emulparams/arcv2elfx.sh: Likewise.
+	* emulparams/armelf.sh: Likewise.
+	* emulparams/armelf_fuchsia.sh: Likewise.
+	* emulparams/armelf_linux.sh: Likewise.
+	* emulparams/armelf_phoenix.sh: Likewise.
+	* emulparams/armnto.sh: Likewise.
+	* emulparams/avr1.sh: Likewise.
+	* emulparams/avr2.sh: Likewise.
+	* emulparams/avr25.sh: Likewise.
+	* emulparams/avr3.sh: Likewise.
+	* emulparams/avr31.sh: Likewise.
+	* emulparams/avr35.sh: Likewise.
+	* emulparams/avr4.sh: Likewise.
+	* emulparams/avr5.sh: Likewise.
+	* emulparams/avr51.sh: Likewise.
+	* emulparams/avr6.sh: Likewise.
+	* emulparams/avrtiny.sh: Likewise.
+	* emulparams/avrxmega1.sh: Likewise.
+	* emulparams/avrxmega2.sh: Likewise.
+	* emulparams/avrxmega3.sh: Likewise.
+	* emulparams/avrxmega4.sh: Likewise.
+	* emulparams/avrxmega5.sh: Likewise.
+	* emulparams/avrxmega6.sh: Likewise.
+	* emulparams/avrxmega7.sh: Likewise.
+	* emulparams/criself.sh: Likewise.
+	* emulparams/crislinux.sh: Likewise.
+	* emulparams/cskyelf.sh: Likewise.
+	* emulparams/d10velf.sh: Likewise.
+	* emulparams/elf32_sparc.sh: Likewise.
+	* emulparams/elf32_spu.sh: Likewise.
+	* emulparams/elf32_tic6x_le.sh: Likewise.
+	* emulparams/elf32_x86_64.sh: Likewise.
+	* emulparams/elf32am33lin.sh: Likewise.
+	* emulparams/elf32bfin.sh: Likewise.
+	* emulparams/elf32bfinfd.sh: Likewise.
+	* emulparams/elf32bmip.sh: Likewise.
+	* emulparams/elf32bmipn32-defs.sh: Likewise.
+	* emulparams/elf32cr16.sh: Likewise.
+	* emulparams/elf32cr16c.sh: Likewise.
+	* emulparams/elf32crx.sh: Likewise.
+	* emulparams/elf32epiphany.sh: Likewise.
+	* emulparams/elf32epiphany_4x4.sh: Likewise.
+	* emulparams/elf32frvfd.sh: Likewise.
+	* emulparams/elf32ip2k.sh: Likewise.
+	* emulparams/elf32lm32.sh: Likewise.
+	* emulparams/elf32lm32fd.sh: Likewise.
+	* emulparams/elf32lriscv-defs.sh: Likewise.
+	* emulparams/elf32m32c.sh: Likewise.
+	* emulparams/elf32mb_linux.sh: Likewise.
+	* emulparams/elf32mbel_linux.sh: Likewise.
+	* emulparams/elf32mcore.sh: Likewise.
+	* emulparams/elf32mep.sh: Likewise.
+	* emulparams/elf32metag.sh: Likewise.
+	* emulparams/elf32microblaze.sh: Likewise.
+	* emulparams/elf32mipswindiss.sh: Likewise.
+	* emulparams/elf32or1k.sh: Likewise.
+	* emulparams/elf32ppccommon.sh: Likewise.
+	* emulparams/elf32rl78.sh: Likewise.
+	* emulparams/elf32rx.sh: Likewise.
+	* emulparams/elf32tilegx.sh: Likewise.
+	* emulparams/elf32tilepro.sh: Likewise.
+	* emulparams/elf32vax.sh: Likewise.
+	* emulparams/elf32visium.sh: Likewise.
+	* emulparams/elf32xc16x.sh: Likewise.
+	* emulparams/elf32xc16xl.sh: Likewise.
+	* emulparams/elf32xc16xs.sh: Likewise.
+	* emulparams/elf32xstormy16.sh: Likewise.
+	* emulparams/elf32xtensa.sh: Likewise.
+	* emulparams/elf64_aix.sh: Likewise.
+	* emulparams/elf64_ia64.sh: Likewise.
+	* emulparams/elf64_s390.sh: Likewise.
+	* emulparams/elf64_sparc.sh: Likewise.
+	* emulparams/elf64alpha.sh: Likewise.
+	* emulparams/elf64bpf.sh: Likewise.
+	* emulparams/elf64hppa.sh: Likewise.
+	* emulparams/elf64mmix.sh: Likewise.
+	* emulparams/elf64rdos.sh: Likewise.
+	* emulparams/elf64tilegx.sh: Likewise.
+	* emulparams/elf_i386.sh: Likewise.
+	* emulparams/elf_i386_be.sh: Likewise.
+	* emulparams/elf_i386_ldso.sh: Likewise.
+	* emulparams/elf_i386_vxworks.sh: Likewise.
+	* emulparams/elf_iamcu.sh: Likewise.
+	* emulparams/elf_k1om.sh: Likewise.
+	* emulparams/elf_l1om.sh: Likewise.
+	* emulparams/elf_s390.sh: Likewise.
+	* emulparams/elf_x86_64.sh: Likewise.
+	* emulparams/h8300elf.sh: Likewise.
+	* emulparams/h8300elf_linux.sh: Likewise.
+	* emulparams/hppa64linux.sh: Likewise.
+	* emulparams/hppaelf.sh: Likewise.
+	* emulparams/hppalinux.sh: Likewise.
+	* emulparams/i386lynx.sh: Likewise.
+	* emulparams/i386moss.sh: Likewise.
+	* emulparams/i386nto.sh: Likewise.
+	* emulparams/m32relf.sh: Likewise.
+	* emulparams/m32relf_linux.sh: Likewise.
+	* emulparams/m68hc11elf.sh: Likewise.
+	* emulparams/m68hc11elfb.sh: Likewise.
+	* emulparams/m68hc12elf.sh: Likewise.
+	* emulparams/m68hc12elfb.sh: Likewise.
+	* emulparams/m68kelf.sh: Likewise.
+	* emulparams/mn10300.sh: Likewise.
+	* emulparams/nds32elf.sh: Likewise.
+	* emulparams/nds32elf16m.sh: Likewise.
+	* emulparams/nds32elf_linux.sh: Likewise.
+	* emulparams/nios2elf.sh: Likewise.
+	* emulparams/nios2linux.sh: Likewise.
+	* emulparams/pruelf.sh: Likewise.
+	* emulparams/score3_elf.sh: Likewise.
+	* emulparams/shelf.sh: Likewise.
+	* emulparams/shelf_nto.sh: Likewise.
+	* emulparams/shelf_vxworks.sh: Likewise.
+	* emulparams/shlelf_linux.sh: Likewise.
+	* emulparams/shlelf_nto.sh: Likewise.
+	* emulparams/v850.sh: Likewise.
+	* emulparams/v850_rh850.sh: Likewise.
+	* ldelf.c: Update comment.
+	* ldelf.h: Likewise.
+	* emultempl/aarch64elf.em: Likewise.
+	* emultempl/alphaelf.em: Likewise.
+	* emultempl/arclinux.em: Likewise.
+	* emultempl/armelf.em: Likewise.
+	* emultempl/avrelf.em: Likewise.
+	* emultempl/bfin.em: Likewise.
+	* emultempl/cr16elf.em: Likewise.
+	* emultempl/crxelf.em: Likewise.
+	* emultempl/cskyelf.em: Likewise.
+	* emultempl/elf-generic.em: Likewise.
+	* emultempl/elf-x86.em: Likewise.
+	* emultempl/epiphanyelf_4x4.em: Likewise.
+	* emultempl/hppaelf.em: Likewise.
+	* emultempl/ia64elf.em: Likewise.
+	* emultempl/m68hc1xelf.em: Likewise.
+	* emultempl/m68kelf.em: Likewise.
+	* emultempl/metagelf.em: Likewise.
+	* emultempl/mmix-elfnmmo.em: Likewise.
+	* emultempl/mmixelf.em: Likewise.
+	* emultempl/mmo.em: Likewise.
+	* emultempl/needrelax.em: Likewise.
+	* emultempl/nios2elf.em: Likewise.
+	* emultempl/ppc32elf.em: Likewise.
+	* emultempl/ppc64elf.em: Likewise.
+	* emultempl/pruelf.em: Likewise.
+	* emultempl/rxelf.em: Likewise.
+	* emultempl/scoreelf.em: Likewise.
+	* emultempl/spuelf.em: Likewise.
+	* emultempl/tic6xdsbt.em: Likewise.
+	* emultempl/v850elf.em: Likewise.
+	* emultempl/vms.em: Likewise.
+	* emultempl/vxworks.em: Likewise.
+	* emultempl/xtensaelf.em: Likewise.
+	* scripttempl/arclinux.sc: Likewise.
+	* scripttempl/armbpabi.sc: Likewise.
+	* scripttempl/elf.sc: Likewise.
+	* scripttempl/elf64bpf.sc: Likewise.
+	* scripttempl/elf64hppa.sc: Likewise.
+	* scripttempl/elf_chaos.sc: Likewise.
+	* scripttempl/elfarc.sc: Likewise.
+	* scripttempl/elfarcv2.sc: Likewise.
+	* scripttempl/elfd10v.sc: Likewise.
+	* scripttempl/elfm68hc11.sc: Likewise.
+	* scripttempl/elfm68hc12.sc: Likewise.
+	* scripttempl/elfm9s12z.sc: Likewise.
+	* scripttempl/elfxgate.sc: Likewise.
+	* scripttempl/elfxtensa.sc: Likewise.
+	* scripttempl/epiphany_4x4.sc: Likewise.
+	* scripttempl/iq2000.sc: Likewise.
+	* scripttempl/mep.sc: Likewise.
+	* scripttempl/nds32elf.sc: Likewise.
+	* scripttempl/v850.sc: Likewise.
+	* scripttempl/v850_rh850.sc: Likewise.
+	* scripttempl/xstormy16.sc: Likewise.
+	* testsuite/ld-arm/arm-dyn.ld: Likewise.
+	* testsuite/ld-arm/arm-lib.ld: Likewise.
+	* testsuite/ld-arm/arm-no-rel-plt.ld: Likewise.
+	* testsuite/ld-arm/fdpic-main.ld: Likewise.
+	* testsuite/ld-arm/fdpic-shared.ld: Likewise.
+	* testsuite/ld-elf/elf.exp: Likewise.
+	* testsuite/ld-elf/orphan-region.d: Likewise.
+	* testsuite/ld-elf/orphan.d: Likewise.
+	* testsuite/ld-elf/pr349.d: Likewise.
+	* testsuite/ld-elf/warn2.d: Likewise.
+	* testsuite/ld-elfvsb/elf-offset.ld: Likewise.
+	* testsuite/ld-mips-elf/mips-dyn.ld: Likewise.
+	* testsuite/ld-mips-elf/mips-lib.ld: Likewise.
+	* testsuite/ld-scripts/dynamic-sections.t: Likewise.
+	* testsuite/ld-shared/elf-offset.ld: Likewise.
+	* configure: Regenerate.
+
+2019-09-11  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (ALL_EMUL_EXTRA_OFILES): Add ldelf and ldelfgen.
+	(CFILES, HFILES, EXTRA_ld_new_SOURCES): Likewise.
+	* configure.tgt: Formatting.
+	(targ_extra_ofiles): Init to ldelf.o ldelfgen.o, reset to just
+	ldelfgen.o for generic ELF targets, and empty for non-ELF.
+	* emultempl/aarch64elf.em (gldaarch64_layout_sections_again): Use
+	ldelf_map_segments.
+	(gld${EMULATION_NAME}_after_allocation): Likewise.
+	(real_func, aarch64_for_each_input_file_wrapper),
+	(aarch64_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	* emultempl/alphaelf.em (alpha_after_parse): Use ldelf_map_segments.
+	* emultempl/armelf.em (gldarm_layout_sections_again): Likewise.
+	(gld${EMULATION_NAME}_after_allocation): Likewise.
+	(real_func, arm_for_each_input_file_wrapper),
+	(arm_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	* emultempl/cr16elf.em (cr16elf_after_parse): Use ldelf_map_segments.
+	* emultempl/crxelf.em (crxelf_after_parse): Likewise.  Delete
+	declaration.
+	* emultempl/cskyelf.em (gldcsky_layout_sections_again): Use
+	ldelf_map_segments.
+	(gld${EMULATION_NAME}_after_allocation): Likewise.
+	(real_func, csky_for_each_input_file_wrapper),
+	(csky_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	* emultempl/genelf.em: Include ldelfgen.h.
+	(gld${EMULATION_NAME}_before_allocation): Use ldelf_map_segments.
+	* emultempl/hppaelf.em (hppaelf_after_parse): Likewise.
+	(hppaelf_layout_sections_again): Likewise.
+	(gld${EMULATION_NAME}_after_allocation): Likewise.
+	(real_func, hppa_for_each_input_file_wrapper),
+	(hppa_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	* emultempl/ia64elf.em (ia64elf_after_parse): Use ldelf_map_segments.
+	* emultempl/m68hc1xelf.em (real_func),
+	(m68hc11_for_each_input_file_wrapper),
+	(m68hc11_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	* emultempl/metagelf.em (metagelf_layout_sections_again): Use
+	ldelf_map_segments.
+	(gld${EMULATION_NAME}_after_allocation): Likewise.
+	(real_func, metag_for_each_input_file_wrapper),
+	(metag_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	* emultempl/mipself.em (real_func),
+	(mips_for_each_input_file_wrapper),
+	(mips_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	* emultempl/mmo.em: Don't include elf-bfd.h, do include ldelfgen.h.
+	(gld${EMULATION_NAME}_after_allocation): Use ldelf_map_segments.
+	* emultempl/nds32elf.em (nds32_elf_after_parse): Use ldelf_after_parse.
+	(nds32_elf_after_allocation): Comment fix.
+	* emultempl/nios2elf.em (nios2elf_layout_sections_again): Use
+	ldelf_map_segments.
+	(gld${EMULATION_NAME}_after_allocation): Likewise.
+	(real_func, nios2_for_each_input_file_wrapper),
+	(nios2_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	* emultempl/ppc32elf.em (gld${EMULATION_NAME}_load_symbols): Delete
+	declaration.
+	(ppc_recognized_file): Call ldelf_load_symbols.
+	* emultempl/ppc64elf.em (ppc_layout_sections_again): Likewise.
+	(gld${EMULATION_NAME}_after_allocation): Likewise.
+	(real_func, ppc_for_each_input_file_wrapper),
+	(ppc_lang_for_each_input_file): Delete.
+	(lang_for_each_input_file): Don't define.
+	(gld${EMULATION_NAME}_load_symbols): Don't declare.
+	(ppc64_recognized_file): Call ldelf_load_symbols.
+	* emultempl/riscvelf.em (gld${EMULATION_NAME}_after_allocation):
+	Use ldelf_map_segments.
+	* emultempl/spuelf.em (spu_place_special_section): Use
+	ldelf_place_orphan.
+	* emultempl/tic6xdsbt.em (gld${EMULATION_NAME}_after_allocation):
+	Use ldelf_map_segments.
+	* emultempl/vms.em: Include ldelfgen.h.
+	(gld${EMULATION_NAME}_after_allocation): Use ldelf_map_segments.
+	* emultempl/elf32.em: Remove unnecessary headers, include ldelf.h
+	and ldelfgen.h.  Move much of file content to..
+	* ldelf.c: ..here.  New file.
+	* ldelf.h: New file.
+	* emultempl/elf-generic.em: Move gld${EMULATION_NAME}_map_segments..
+	* ldelfgen.c: ..to here.
+	* ldelfgen.h: New file.
+	* ldlang.c (lang_for_each_input_file): Adjust to only call func
+	on real files.
+	(lang_for_each_file): Likewise.
+	* po/SRC-POTFILES.in: Regenerate.
+	* Makefile.in: Regenerate.
+
+2019-09-11  Alan Modra  <amodra@gmail.com>
+
+	* ldmisc.c: Don't #include elf-bfd.h or coff-bfd.h.
+	(vfinfo): Use bfd_group_name.
+
+2019-09-11  Alan Modra  <amodra@gmail.com>
+
+	* plugin.c (asymbol_from_plugin_symbol): Move code handling
+	ELF common symbols to block handling ELF visibility.  Simplify
+	visibility setting.
+
+2019-09-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/24887
+	* testsuite/ld-i386/property-1.r: Adjust for new output format
+	from readelf.
+	* testsuite/ld-i386/property-1a.r: Likewise.
+	* testsuite/ld-i386/property-2.r: Likewise.
+	* testsuite/ld-i386/property-2a.r: Likewise.
+	* testsuite/ld-i386/property-3.r: Likewise.
+	* testsuite/ld-i386/property-3a.r: Likewise.
+	* testsuite/ld-i386/property-4.r: Likewise.
+	* testsuite/ld-i386/property-4a.r: Likewise.
+	* testsuite/ld-i386/property-5.r: Likewise.
+	* testsuite/ld-i386/property-5a.r: Likewise.
+	* testsuite/ld-i386/property-6.r: Likewise.
+	* testsuite/ld-i386/property-7.r: Likewise.
+	* testsuite/ld-i386/property-7a.r: Likewise.
+	* testsuite/ld-i386/property-1.r: Likewise.
+	* testsuite/ld-i386/property-1a.r: Likewise.
+	* testsuite/ld-i386/property-2.r: Likewise.
+	* testsuite/ld-i386/property-2a.r: Likewise.
+	* testsuite/ld-i386/property-3.r: Likewise.
+	* testsuite/ld-i386/property-3a.r: Likewise.
+	* testsuite/ld-i386/property-4.r: Likewise.
+	* testsuite/ld-i386/property-4a.r: Likewise.
+	* testsuite/ld-i386/property-5.r: Likewise.
+	* testsuite/ld-i386/property-5a.r: Likewise.
+	* testsuite/ld-i386/property-6.r: Likewise.
+	* testsuite/ld-i386/property-7.r: Likewise.
+	* testsuite/ld-i386/property-7a.r: Likewise.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-09-06  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/beos.em (sort_by_file_name): Use appropriate
+	intermediary variables.
+	(sort_by_section_name): Likewise.
+
+2019-09-06  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/elf32.em (gld${EMULATION_NAME}_search_needed): Constify
+	variable.
+	* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Likewise.
+	* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.
+
+2019-09-05  Eric Botcazou  <ebotcazou@adacore.com>
+
+	PR ld/24574
+	* pe-dll.c (pe_find_data_imports): Replace again the original name of
+	the undefined symbol with the __imp_ prefixed one after it is resolved.
+
+2019-09-05  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/pcrelopt.s,
+	* testsuite/ld-powerpc/pcrelopt.d: Test offset and prefix in
+	second instruction.
+
+2019-08-29  Alan Modra  <amodra@gmail.com>
+
+	PR ld/24406
+	* plugin.c (get_symbols): Test link_info.wrap_hash before calling
+	unwrap_hash_lookup.
+
+2019-08-22  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/24601
+	* testsuite/ld-aarch64/aarch64-elf.exp (undef-tls, weak-tls): New.
+	* testsuite/ld-aarch64/undef-tls.d: New test.
+	* testsuite/ld-aarch64/undef-tls.s: New test.
+	* testsuite/ld-aarch64/weak-tls.d: New test.
+	* testsuite/ld-aarch64/weak-tls.s: New test.
+
+2019-08-20  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/ld-arm/cortex-a8-fix-b-plt.d: Update Testcase.
+	* testsuite/ld-arm/cortex-a8-fix-b-rel-arm.d: Likewise.
+	* testsuite/ld-arm/cortex-a8-fix-bcc-plt.d: Likewise.
+	* testsuite/ld-arm/farcall-cond-thumb-arm.d: Likewise.
+	* testsuite/ld-arm/farcall-mixed-app.d: Likewise.
+	* testsuite/ld-arm/farcall-mixed-app2.d: Likewise.
+	* testsuite/ld-arm/farcall-mixed-lib-v4t.d: Likewise.
+	* testsuite/ld-arm/farcall-thumb-arm-pic-veneer.d: Likewise.
+	* testsuite/ld-arm/farcall-thumb-arm-short.d: Likewise.
+	* testsuite/ld-arm/farcall-thumb-arm.d: Likewise.
+	* testsuite/ld-arm/farcall-thumb-thumb-pic-veneer.d: Likewise.
+	* testsuite/ld-arm/farcall-thumb-thumb.d: Likewise.
+	* testsuite/ld-arm/fix-arm1176-on.d: Likewise.
+	* testsuite/ld-arm/ifunc-10.dd: Likewise.
+	* testsuite/ld-arm/ifunc-2.dd: Likewise.
+	* testsuite/ld-arm/ifunc-4.dd: Likewise.
+	* testsuite/ld-arm/ifunc-6.dd: Likewise.
+	* testsuite/ld-arm/ifunc-8.dd: Likewise.
+	* testsuite/ld-arm/jump-reloc-veneers-long.d: Likewise.
+	* testsuite/ld-arm/mixed-app.d: Likewise.
+	* testsuite/ld-arm/thumb2-b-interwork.d: Likewise.
+	* testsuite/ld-arm/tls-longplt.d: Likewise.
+	* testsuite/ld-arm/tls-thumb1.d: Likewise.
+
+2019-08-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24905
+	* testsuite/ld-x86-64/pr24905-x32.d: New file.
+	* testsuite/ld-x86-64/pr24905.d: Likewise.
+	* testsuite/ld-x86-64/pr24905.s: Likewise.
+	* testsuite/ld-x86-64/pr24905.t: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Run pr24905 and pr24905-x32.
+
+2019-08-16  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* emulparams/armelf.sh (OTHER_SECTIONS): Add support for noinit
+	section.
+
+2019-08-16  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/ppc32elf.em (ppc_before_allocation): Force running
+	prelim_size_sections before deciding whether branch trampolines
+	might be needed.
+
+2019-08-15  Jim Wilson  <jimw@sifive.com>
+
+	* testsuite/ld-riscv-elf/c-lui-2.d: New.
+	* testsuite/ld-riscv-elf/c-lui-2.ld: New.
+	* testsuite/ld-riscv-elf/c-lui-2.s: New.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Run the c-lui-2 test.
+
+2019-08-10  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.h (enum statement_enum): Sort.
+	(union lang_statement_union): Sort.
+
+2019-08-10  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.h (lang_common_statement_type): Delete.
+	(lang_object_symbols_statement_type): Delete.
+	(union lang_statement_union): Remove common_statement and
+	object_symbols_statement.
+
+2019-08-10  Alan Modra  <amodra@gmail.com>
+
+	* ldexp.c (exp_intop, exp_bigintop, exp_relop, exp_binop, exp_trinop),
+	(exp_unop, exp_nameop, exp_assop, exp_assert): Remove casts of
+	stat_alloc return value.
+	* ldlang.c (new_statement, new_afile, sort_def_symbol),
+	(lang_memory_region_lookup, lang_memory_region_alias),
+	(ldlang_add_undef, ldlang_add_require_defined, insert_pad),
+	(lang_add_gc_name, lang_new_phdr): Likewise.
+	* lexsup.c (set_segment_start): Likewise.
+
+2019-08-10  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.h (lang_input_statement_type): Make next
+	and next_real_file a lang_input_statement_type pointer.
+	(lang_statement_append): Delete prototype.
+	(LANG_FOR_EACH_INPUT_STATEMENT): Update for lang_input_statement_type
+	change.
+	* ldmain.c (add_archive_element): Likewise.
+	* ldlang.c: Likewise throughout.
+	(lang_statement_append): Make static.  Make element and field
+	void pointers.  Remove casts in calls.
+	(lang_check): Use a lang_input_statement_type pointer for "file".
+	(find_rescan_insertion): Similarly for "iter" and return value.
+	(lang_process): Similarly for "insert", "iter" and "temp".
+	* emultempl/spuelf.em (embedded_spu_file): Likewise.
+	* emultempl/aix.em (gld${EMULATION_NAME}_before_allocation): Expand
+	lang_statment_append call.
+
+2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>
+
+	* emulparams/elf32bmip.sh: Add .MIPS.xhash section.
+	* emulparams/elf32bmipn32-defs.sh: Add .MIPS.xhash section.
+	* emulparams/elf64bmip-defs.sh: Add .MIPS.xhash section.
+	* emultempl/mipself.em: Remove mips_after_parse function.
+	* testsuite/ld-elf/hash.d: Update comment.
+	* testsuite/ld-mips-elf/hash1.d: New test.
+	* testsuite/ld-mips-elf/hash1.s: Ditto.
+	* testsuite/ld-mips-elf/hash1a.d: Remove.
+	* testsuite/ld-mips-elf/hash1b.d: Ditto.
+	* testsuite/ld-mips-elf/hash1c.d: Ditto
+	* testsuite/ld-mips-elf/hash2.d: New test.
+	* testsuite/ld-mips-elf/mips-elf.exp: New tests.
+	* testsuite/ld-mips-elf/start.s: New test.
+
+2019-08-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 24887
+	* testsuite/ld-aarch64/bti-plt-2.d: Adjust for new output format
+	from readelf.
+	* testsuite/ld-aarch64/bti-plt-4.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-6.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-7.d: Likewise.
+	* testsuite/ld-aarch64/bti-warn.d: Likewise.
+	* testsuite/ld-aarch64/property-bti-pac1.d: Likewise.
+	* testsuite/ld-aarch64/property-bti-pac2.d: Likewise.
+	* testsuite/ld-aarch64/property-bti-pac3.d: Likewise.
+	* testsuite/ld-elf/x86-feature-1a.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1b.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1c.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1d.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1e.rd: Likewise.
+	* testsuite/ld-i386/ibt-plt-2d.d: Likewise.
+	* testsuite/ld-i386/ibt-plt-3d.d: Likewise.
+	* testsuite/ld-i386/pr23372a.d: Likewise.
+	* testsuite/ld-i386/pr23372c.d: Likewise.
+	* testsuite/ld-i386/pr23486a.d: Likewise.
+	* testsuite/ld-i386/pr23486b.d: Likewise.
+	* testsuite/ld-i386/pr23486c.d: Likewise.
+	* testsuite/ld-i386/pr23486d.d: Likewise.
+	* testsuite/ld-i386/pr24322a.d: Likewise.
+	* testsuite/ld-i386/pr24322b.d: Likewise.
+	* testsuite/ld-i386/property-x86-3.d: Likewise.
+	* testsuite/ld-i386/property-x86-4a.d: Likewise.
+	* testsuite/ld-i386/property-x86-5.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet1.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet2a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet5a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet5b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt1a.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt1b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt2.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt3a.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt3b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt4.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt5.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk1a.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk1b.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk2.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk3a.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk3b.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk4.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk5.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-2d-x32.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-2d.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-3d-x32.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-3d.d: Likewise.
+	* testsuite/ld-x86-64/pr23372a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23372a.d: Likewise.
+	* testsuite/ld-x86-64/pr23372c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23372c.d: Likewise.
+	* testsuite/ld-x86-64/pr23486a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23486a.d: Likewise.
+	* testsuite/ld-x86-64/pr23486b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23486b.d: Likewise.
+	* testsuite/ld-x86-64/pr23486c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23486c.d: Likewise.
+	* testsuite/ld-x86-64/pr23486d-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23486d.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a.d: Likewise.
+	* testsuite/ld-x86-64/pr24322b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24322b.d: Likewise.
+	* testsuite/ld-x86-64/pr24458a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458a.d: Likewise.
+	* testsuite/ld-x86-64/pr24458b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458b.d: Likewise.
+	* testsuite/ld-x86-64/pr24458c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458c.d: Likewise.
+	* testsuite/ld-x86-64/property-1.r: Likewise.
+	* testsuite/ld-x86-64/property-1a.r: Likewise.
+	* testsuite/ld-x86-64/property-2.r: Likewise.
+	* testsuite/ld-x86-64/property-2a.r: Likewise.
+	* testsuite/ld-x86-64/property-3.r: Likewise.
+	* testsuite/ld-x86-64/property-3a.r: Likewise.
+	* testsuite/ld-x86-64/property-4.r: Likewise.
+	* testsuite/ld-x86-64/property-4a.r: Likewise.
+	* testsuite/ld-x86-64/property-5.r: Likewise.
+	* testsuite/ld-x86-64/property-5a.r: Likewise.
+	* testsuite/ld-x86-64/property-6.r: Likewise.
+	* testsuite/ld-x86-64/property-7.r: Likewise.
+	* testsuite/ld-x86-64/property-7a.r: Likewise.
+	* testsuite/ld-x86-64/property-x86-3-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-3.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-4a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-4a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-5.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet1-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet1.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt2-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt4-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt4.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt5.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk2-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk4-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk4.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk5.d: Likewise.
+
+2019-08-07  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* scripttempl/elf64bpf.sc: Adapted from elf.sc.
+	* emulparams/elf64bpf.sh (SCRIPT_NAME): Use elf64bpf.
+	(EMBEDDED): Define.
+	* testsuite/ld-bpf/call-1.d: Do not expect a warning regarding an
+	undefined entry symbol.
+	* testsuite/ld-bpf/jump-1.d: Likewise.
+	* testsuite/ld-undefined/undefined.exp: Do not pass '-e entry' to
+	ld in BPF targets, and do not expect line number information.
+	* testsuite/ld-srec/srec.exp (run_srec_test): xfail s-record tests
+	in BPF targets.
+
+2019-08-06  Alan Modra  <amodra@gmail.com>
+
+	PR 24873
+	* ldlang.c (find_replacements_insert_point): Return "before" flag.
+	(find_next_input_statement): New function.
+	(lang_process): When placing recompiled LTO objects before a
+	claimed archive, place them immediately before in the statement
+	list.
+
+2019-08-06  Alan Modra  <amodra@gmail.com>
+
+	PR 24873
+	* ldlang.c (plugin_undefs): New static var.
+	(open_input_bfds <lang_group_statement_enum>): Loop on
+	plugin_undefs and hitting plugin_insert point.
+	(lang_process <lto_plugin_active>): Set plugin_undefs.
+
+2019-08-02  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsie.s: Correct medium model ELF sequence.
+
+2019-08-01  Alan Modra  <amodra@gmail.com>
+
+	PR 24806
+	* ldlang.c (process_insert_statements): Add start of list
+	parameter.  Use rather than lang_os_list.head.  Process insert
+	statements inside group statements with a recursive call.
+	(lang_process): Adjust process_insert_statements call.
+	* lexsup.c (parse_args): Warn when adding missing --end-group.
+
+2019-08-01  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.h (lang_os_list): Rename from lang_output_section_statement.
+	* ldlang.c: Likewise throughout file.
+	* emultempl/alphaelf.em: Likewise.
+	* emultempl/elf32.em: Likewise.
+	* emultempl/mmo.em: Likewise.
+	* emultempl/pe.em: Likewise.
+	* emultempl/pep.em: Likewise.
+	* emultempl/ppc32elf.em: Likewise.
+	* emultempl/spuelf.em: Likewise.
+
+2019-07-26  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-plugin/lto-3r.d: Accept D for powerpc64 descriptors.
+	* testsuite/ld-plugin/lto-5r.d: Likewise.
+
+2019-07-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-plugin/lto-3r.d: Restored.  Check foo instead
+	of __gnu_lto_v.*.
+	* testsuite/ld-plugin/lto-5r.d: Likewise.
+	* testsuite/ld-plugin/lto.exp: Run lto-3r and lto-5r tests.
+
+2019-07-24  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* ld-arc/relax-local-pic.d: New test.
+	* ld-arc/relax-local-pic.s: New file.
+
+2019-07-22  Martin Liska  <mliska@suse.cz>
+
+	* testsuite/ld-plugin/lto-3r.d: Remove.
+	* testsuite/ld-plugin/lto-5r.d: Remove.
+	* testsuite/ld-plugin/lto.exp: Do not run lto-3r and lto-5r
+	tests.
+
+2019-07-23  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/elf32.em (gld${EMULATION_NAME}_place_orphan): Condition
+	SHF_GNU_MBIND on osabi.  Set output elf_gnu_osabi_mbind.
+
+2019-07-23  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/size-1.d,
+	* testsuite/ld-elf/size-1.s,
+	* testsuite/ld-elf/size-1.t: New test.
+	* testsuite/ld-elf/size-2.d,
+	* testsuite/ld-elf/size-2.s,
+	* testsuite/ld-elf/size-2.t: New test.
+	* testsuite/ld-scripts/size-1.d,
+	* testsuite/ld-scripts/size-1.s,
+	* testsuite/ld-scripts/size-1.t,
+	* testsuite/ld-scripts/size-2.s,
+	* testsuite/ld-scripts/size-2.d,
+	* testsuite/ld-scripts/size-2.t,
+	* testsuite/ld-scripts/size.exp: Delete.
+
+2019-07-22  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* ld/testsuite/ld-arm/cmse_main_sec_debug.d: Modify regexps to
+	allow for output from a arm-none-linux-gnueabihf target.
+
+2019-07-20  Alan Modra  <amodra@gmail.com>
+
+	PR 24827
+	* ldlex.l (comment): Check for 0 return from YY_INPUT, not EOF.
+
+2019-07-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsgd.d,
+	* testsuite/ld-powerpc/tlsgd.s,
+	* testsuite/ld-powerpc/tlsie.d,
+	* testsuite/ld-powerpc/tlsie.s,
+	* testsuite/ld-powerpc/tlsld.d,
+	* testsuite/ld-powerpc/tlsld.s: New tests.
+	* testsuite/ld-powerpc/powerpc.exp: Run them.
+
+2019-07-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsldopt.d: Rename from tlsld.d.
+	* testsuite/ld-powerpc/tlsldopt.s: Rename from tlsld.s.
+	* testsuite/ld-powerpc/tlsldopt32.d: Rename from tlsld32.d.
+	* testsuite/ld-powerpc/tlsldopt32.s: Rename from tlsld32.s.
+	* testsuite/ld-powerpc/powerpc.exp: Update.
+
+2019-07-19  Alan Modra  <amodra@gmail.com>
+
+	PR 24819
+	* testsuite/ld-elf/pr24819.d: xfail for genelf targets.
+
+2019-07-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24819
+	* emultempl/elf32.em (elf_orphan_compatible): Return FALSE for
+	member of output section group when doing a relocatable link.
+	* testsuite/ld-elf/pr24819.d: New file.
+	* testsuite/ld-elf/pr24819.s: Likewise.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsso.r: Update.
+	* testsuite/ld-powerpc/tlsso32.g: Update.
+	* testsuite/ld-powerpc/tlsso32.r: Update.
+	* testsuite/ld-powerpc/tlstocso.r: Update.
+	* testsuite/ld-cris/tls-dso-dtpoffd2.d: Update.
+	* testsuite/ld-cris/tls-dso-dtpoffd4.d: Update.
+	* testsuite/ld-cris/tls-dso-tpoffgotcomm1.d: Update.
+	* testsuite/ld-cris/tls-gd-1.d: Update.
+	* testsuite/ld-cris/tls-gd-1h.d: Update.
+	* testsuite/ld-cris/tls-gd-2.d: Update.
+	* testsuite/ld-cris/tls-gd-2h.d: Update.
+	* testsuite/ld-cris/tls-ie-10.d: Update.
+	* testsuite/ld-cris/tls-ie-11.d: Update.
+	* testsuite/ld-cris/tls-ie-8.d: Update.
+	* testsuite/ld-cris/tls-ie-9.d: Update.
+	* testsuite/ld-cris/tls-js1.d: Update.
+	* testsuite/ld-cris/tls-ld-4.d: Update.
+	* testsuite/ld-cris/tls-ld-5.d: Update.
+	* testsuite/ld-cris/tls-ld-6.d: Update.
+	* testsuite/ld-cris/tls-ld-7.d: Update.
+	* testsuite/ld-cris/tls-ldgd-14.d: Update.
+	* testsuite/ld-cris/tls-ldgd-15.d: Update.
+	* testsuite/ld-cris/tls-ldgdx-14.d: Update.
+	* testsuite/ld-cris/tls-ldgdx-15.d: Update.
+	* testsuite/ld-cris/tls-local-54.d: Update.
+	* testsuite/ld-cris/tls-local-60.d: Update.
+	* testsuite/ld-cris/tls-local-61.d: Update.
+	* testsuite/ld-cris/tls-local-63.d: Update.
+	* testsuite/ld-cris/tls-local-64.d: Update.
+	* testsuite/ld-cris/tls-ok-30.d: Update.
+	* testsuite/ld-cris/tls-ok-32.d: Update.
+	* testsuite/ld-cris/tls-ok-34.d: Update.
+	* testsuite/ld-mips-elf/tls-multi-got-1.got: Update.
+	* testsuite/ld-mips-elf/tls-multi-got-1.r: Update.
+	* testsuite/ld-mips-elf/tlsdyn-pie-o32.d: Update.
+	* testsuite/ld-mips-elf/tlsdyn-pie-o32.got: Update.
+	* testsuite/ld-mips-elf/tlslib-o32-hidden.got: Update.
+	* testsuite/ld-mips-elf/tlslib-o32-ver.got: Update.
+	* testsuite/ld-mips-elf/tlslib-o32.got: Update.
+	* testsuite/ld-s390/tlspic.rd: Update.
+	* testsuite/ld-s390/tlspic_64.rd: Update.
+	* testsuite/ld-sparc/tlssunnopic32.rd: Update.
+	* testsuite/ld-sparc/tlssunnopic64.rd: Update.
+	* testsuite/ld-sparc/tlssunpic32.rd: Update.
+	* testsuite/ld-sparc/tlssunpic64.rd: Update.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	PR 24786
+	* ldlang.h (enum section_type): Add first_overlay_section.
+	* ldlang.c (lang_add_section): Adjust switch statement.
+	(map_input_to_output_sections): Likewise.
+	(lang_size_sections_1): Always set last_os for first overlay section.
+	(lang_leave_overlay): Set sectype to first_overlay_section.
+
+2019-07-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/callstub-1.d: Pass -melf64ppc to ld.
+	* testsuite/ld-powerpc/callstub-2.d: Likewise.
+
+2019-07-04  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/ld-elf/group9.s: Correct argument of .type.
+
+2019-07-02  Nick Clifton  <nickc@redhat.com>
+
+	PR 24753
+	* emultempl/aarch64elf.em (_aarch64_add_stub_section): Include the
+	LINKER_CREATED section flag when creating the stub section.
+
+2019-07-02  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* testsuite/ld-arm/arm-elf.exp: Add tests.
+	* testsuite/ld-arm/cmse_main.s: New test.
+	* testsuite/ld-arm/cmse_main_sec_debug.d: Likewise.
+	* testsuite/ld-arm/cmse_sec_debug.s: Likewise.
+
+2019-07-01  Nick Clifton  <nickc@redhat.com>
+
+	PR 23839
+	* testsuite/ld-arm/unwind-4.d: Adjust for corrected calculation of
+	exidx relocs.
+
+2019-06-28  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/callstub-1.d,
+	* testsuite/ld-powerpc/callstub-1.s: New test.
+	* testsuite/ld-powerpc/callstub-2.d,
+	* testsuite/ld-powerpc/callstub-2.s: New test.
+	* testsuite/ld-powerpc/powerpc.exp: Run them.
+
+2019-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* plugin.c (get_lto_kind, get_lto_resolution,
+	get_lto_visibility): Rename "index" to "idx".
+
+2019-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24721
+	* testsuite/ld-x86-64/x86-64.exp: Run PR ld/24721 tests.
+	* testsuite/ld-x86-64/pr24721-x32.d: New file.
+	* testsuite/ld-x86-64/pr24721.d: Likewise.
+	* testsuite/ld-x86-64/pr24721.map: Likewise.
+	* testsuite/ld-x86-64/pr24721a.s: Likewise.
+	* testsuite/ld-x86-64/pr24721b.s: Likewise.
+
+2019-06-23  Alan Modra  <amodra@gmail.com>
+
+	PR 24704
+	* testsuite/ld-powerpc/elfv2exe.d: Update.
+	* testsuite/ld-powerpc/elfv2so.d: Update.
+
+2019-06-14  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add emit-relocs-22 and -23.
+	* testsuite/ld-aarch64/emit-relocs-22.d: New test.
+	* testsuite/ld-aarch64/emit-relocs-22.s: New test.
+	* testsuite/ld-aarch64/emit-relocs-23.d: New test.
+	* testsuite/ld-aarch64/emit-relocs-23.s: New test.
+
+2019-06-14  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+
+2019-06-14  Alan Modra  <amodra@gmail.com>
+
+	PR 24662
+	* testsuite/ld-alpha/tlsbin.rd: Update.
+	* testsuite/ld-alpha/tlsbinr.rd: Update.
+	* testsuite/ld-alpha/tlspic.rd: Update.
+
+2019-06-07  Maciej W. Rozycki  <macro@wdc.com>
+
+	* ld.texi (Options): Also document `-rpath' option restrictions
+	in the description of the option itself.
+
+2019-06-06  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add new tests.
+	* testsuite/ld-aarch64/property-bti-pac4-a.d: New test.
+	* testsuite/ld-aarch64/property-bti-pac4-b.d: New test.
+	* testsuite/ld-aarch64/property-bti-pac4.s: New test.
+
+2019-06-06  Sudakshina Das  <sudi.das@arm.com>
+
+	* NEWS: Update options names.
+	* emultempl/aarch64elf.em (OPTION_FORCE_BTI, OPTION_PAC_PLT): Remove.
+	(PARSE_AND_LIST_LONGOPTS): Remove force-bti and pac-plt.
+	(PARSE_AND_LIST_OPTIONS): Update to -z.
+	(PARSE_AND_LIST_ARGS_CASE_Z_AARCH64): New.
+	(PARSE_AND_LIST_ARGS_CASE_Z): Add PARSE_AND_LIST_ARGS_CASE_Z_AARCH64.
+	(PARSE_AND_LIST_ARGS_CASES): Move cases for these options.
+	* testsuite/ld-aarch64/bti-pac-plt-1.d: Update option.
+	* testsuite/ld-aarch64/bti-pac-plt-2.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-1.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-2.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-3.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-4.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-6.d: Likewise.
+	* testsuite/ld-aarch64/bti-plt-7.d: Likewise.
+	* testsuite/ld-aarch64/bti-warn.d: Likewise.
+	* testsuite/ld-aarch64/pac-plt-1.d: Likewise.
+	* testsuite/ld-aarch64/pac-plt-2.d: Likewise.
+
+2019-05-30  Nick Clifton  <nickc@redhat.com>
+
+	PR 24627
+	* testsuite/ld-elf/ver_def.vd: Update expected output.
+
+2019-05-30  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* emulparams/m9s12zelf.sh (TEMPLATE_NAME): Set to generic.
+	(EXTRA_EM_FILE): Define to genelf.
+	* testsuite/lib/ld-lib.exp (uses_genelf): Add s12z.
+
+2019-05-30  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/ld-lib.exp (run_ld_link_tests): Support procedure
+	calls in optional "xfail" args.
+	(run_ld_link_exec_tests): Likewise.
+	(is_generic): New.
+	(uses_genelf): Rename from is_generic_elf.  Delete bogus semicolons.
+	* testsuite/ld-scripts/align.exp: Rename is_generic_elf call.
+	* testsuite/ld-elf/elf.exp: Use is_generic and uses_genelf.  Delete
+	xfail_implib var.
+	* testsuite/ld-elf/sec64k.exp: Use is_generic.
+	* testsuite/ld-elf/shared.exp: Likewise.
+	* testsuite/ld-discard/extern.d: Use is_generic in xfail.
+	* testsuite/ld-discard/start.d: Likewise.
+	* testsuite/ld-discard/static.d: Likewise.
+	* testsuite/ld-elf/attributes.d: Likewise.
+	* testsuite/ld-elf/group1.d: Likewise.
+	* testsuite/ld-elf/group3b.d: Likewise.
+	* testsuite/ld-elf/group8a.d: Likewise.
+	* testsuite/ld-elf/group8b.d: Likewise.
+	* testsuite/ld-elf/group9a.d: Likewise.
+	* testsuite/ld-elf/group9b.d: Likewise.
+	* testsuite/ld-elf/linkonce2.d: Likewise.
+	* testsuite/ld-elf/merge2.d: Likewise.
+	* testsuite/ld-elf/merge3.d: Likewise.
+	* testsuite/ld-elf/pr12851.d: Likewise.
+	* testsuite/ld-elf/pr12975.d: Likewise.
+	* testsuite/ld-elf/pr13177.d: Likewise.
+	* testsuite/ld-elf/pr13195.d: Likewise.
+	* testsuite/ld-elf/pr17550c.d: Likewise.
+	* testsuite/ld-elf/pr17550d.d: Likewise.
+	* testsuite/ld-elf/pr17615.d: Likewise.
+	* testsuite/ld-elf/pr21562a.d: Likewise.
+	* testsuite/ld-elf/pr21562b.d: Likewise.
+	* testsuite/ld-elf/pr21562c.d: Likewise.
+	* testsuite/ld-elf/pr21562d.d: Likewise.
+	* testsuite/ld-elf/pr21562i.d: Likewise.
+	* testsuite/ld-elf/pr21562j.d: Likewise.
+	* testsuite/ld-elf/pr21562k.d: Likewise.
+	* testsuite/ld-elf/pr21562l.d: Likewise.
+	* testsuite/ld-elf/pr21562m.d: Likewise.
+	* testsuite/ld-elf/pr21562n.d: Likewise.
+	* testsuite/ld-elf/pr22677.d: Likewise.
+	* testsuite/ld-elf/pr22836-1a.d: Likewise.
+	* testsuite/ld-elf/pr22836-1b.d: Likewise.
+	* testsuite/ld-elf/warn3.d: Likewise.
+	* testsuite/ld-elf/warn1.d: Likewise and xfail sparc solaris
+	targets rather than notarget.
+	* testsuite/ld-elf/compressed1d.d: Use uses_genelf in xfail.
+	* testsuite/ld-elf/orphan-10.d: Likewise.
+	* testsuite/ld-elf/orphan-9.d: Likewise.
+	* testsuite/ld-elf/orphan-region.d: Likewise.
+	* testsuite/ld-elf/orphan.d: Likewise.
+	* testsuite/ld-elf/orphan3.d: Likewise.
+	* testsuite/ld-elf/pr20528a.d: Likewise.
+	* testsuite/ld-elf/pr20528b.d: Likewise.
+	* testsuite/ld-elf/pr23658-1a.d: Likewise.
+	* testsuite/ld-elf/pr23658-1b.d: Likewise.
+	* testsuite/ld-elf/pr349.d: Likewise.
+	* testsuite/ld-elf/warn2.d: Likewise and xfail sparc solaris
+	targets rather than notarget.
+	* testsuite/ld-elf/merge.d: Correct ms1-*-* to mt-*-*.
+
+2019-05-28  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* testsuite/ld-mips-elf/undefweak-overflow.s: Remove test case
+	for pcrel_hi/pcrel_lo.
+	* testsuite/ld-mips-elf/undefweak-overflow.d: Update to match.
+	* testsuite/ld-mips-elf/reloc-pcrel-r6.s: New test source.
+	* testsuite/ld-mips-elf/reloc-pcrel-r6.d: New test linker script.
+	* testsuite/ld-mips-elf/reloc-pcrel-r6.ld: New test.
+	* testsuite/ld-mips-elf/mips-elf.exp: Run the new test.
+
+2019-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Check that
+	the output is coff before accessing coff tdata.
+	* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.
+
+2019-05-28  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* testsuite/ld-aarch64/variant_pcs-now.d: Use --hash-style=sysv.
+	* testsuite/ld-aarch64/variant_pcs-shared.d: Likewise.
+
+2019-05-27  Alan Modra  <amodra@gmail.com>
+
+	PR 24596
+	* emultempl/genelf.em (gld${EMULATION_NAME}_after_open): Set
+	BFS_KEEP on group signature symbol.
+
+2019-04-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add new tests.
+	* testsuite/ld-aarch64/variant_pcs-1.s: New asm for tests.
+	* testsuite/ld-aarch64/variant_pcs-2.s: New asm for tests.
+	* testsuite/ld-aarch64/variant_pcs-now.d: New test.
+	* testsuite/ld-aarch64/variant_pcs-r.d: New test.
+	* testsuite/ld-aarch64/variant_pcs-shared.d: New test.
+	* testsuite/ld-aarch64/variant_pcs.ld: New linker script for tests.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* po/BLD-POTFILES.in: Regenerate.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/notoc2.d,
+	* testsuite/ld-powerpc/notoc2.s: New test.
+	* testsuite/ld-powerpc/powerpc.exp: Run it.
+
+2019-05-24  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/pcrelopt.s,
+	* testsuite/ld-powerpc/pcrelopt.d,
+	* testsuite/ld-powerpc/pcrelopt.sec: New test.
+	* testsuite/ld-powerpc/powerpc.exp: Run it.
+
+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* Makefile.am (ALL_64_EMULATION_SOURCES): Add eelf64bpf.c.
+	* Makefile.in (prefix): Regenerate.
+	* configure.tgt (targ_extra_ofiles): Add case for bpf-*-* targets.
+	* emulparams/elf64bpf.sh: New file.
+	* testsuite/lib/ld-lib.exp (check_gc_sections_available): Add
+	bpf-*-* to the list of targets not supporting gc-sections.
+	* testsuite/ld-bpf/bar.s: New file.
+	* testsuite/ld-bpf/jump-1.d: Likewise.
+	* testsuite/ld-bpf/foo.s: Likewise.
+	* testsuite/ld-bpf/call-1.d: Likewise.
+	* testsuite/ld-bpf/bpf.exp: Likewise.
+	* testsuite/ld-bpf/baz.s: Likewise.
+
+2019-05-23  Alan Modra  <amodra@gmail.com>
+
+	PR 24576
+	* ldfile.c (enum script_open_style): New.
+	(struct script_name_list): New.
+	(ldfile_open_command_file_1): Take a script_open_style param
+	rather than booleans.  Adjust callers.  Only fail when -T or
+	default -T script is invoked twice.
+	(ldfile_try_open_bfd): Revert last change.
+
+2019-05-22  Julius Werner  <jwerner@chromium.org>
+	    Nick Clifton  <nickc@redhat.com>
+
+	PR 24576
+	* ld/ldfile.c: (ldfile_open_command_file_1): Add new parameter -
+	is_script.  If true check that the file has not already been
+	parsed as a linker script.
+	(ldfile_open_script_file): New function.
+	(ldfile_try_open_bfd): Use the new function in place of
+	ldfile_open_command_line.
+	* ldmain.c (main): Likewise.
+	* lexsup.c (parse_args): Use the new function for opening linker
+	scripts with the -T option.
+	* ldfile.h (ldfile_open_script_file): Add prototype.
+
+2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* testsuite/ld-mips-elf/pic-reloc-5.s: Add tests for
+	%tprel_hi and %tprel_lo relocations.
+	* testsuite/ld-mips-elf/pic-reloc-6.s: Likewise.
+	* testsuite/ld-mips-elf/pic-reloc-5.d: Update accordingly.
+	* testsuite/ld-mips-elf/pic-reloc-6.d: Likewise.
+	* testsuite/ld-mips-elf/pic-reloc-tls.ld: New test linker
+	script file.
+
+2019-05-21  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* testsuite/ld-mips-elf/pic-reloc-5.d: New test.
+	* testsuite/ld-mips-elf/pic-reloc-6.d: New test.
+	* testsuite/ld-mips-elf/pic-reloc-7.d: New test.
+	* testsuite/ld-mips-elf/pic-reloc-5.s: New test source.
+	* testsuite/ld-mips-elf/pic-reloc-6.s: New test source.
+	* testsuite/ld-mips-elf/pic-reloc-7.s: New test source.
+	* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.
+
+2019-05-21  Matthew Fortune  <matthew.fortune@mips.com>
+	    Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* emultempl/mipself.em (compact_branches): New static variable.
+	(mips_create_output_section_statements): Call
+	_bfd_mips_elf_compact_branches.
+	(PARSE_AND_LIST_PROLOGUE): Add OPTION_COMPACT_BRANCHES and
+	OPTION_NO_COMPACT_BRANCHES.
+	(PARSE_AND_LIST_LONGOPTS): Add compact-branches,
+	no-compact-branches.
+	(PARSE_AND_LIST_OPTIONS): Add --compact-branches,
+	--no-compact-branches.
+	(PARSE_AND_LIST_ARGS_CASES): Handle the above.
+	* ld.texinfo: Document --compact-branches, --no-compact-branches.
+	* testsuite/ld-mips-elf/pic-and-nonpic-1-r6.dd: New test.
+	* testsuite/ld-mips-elf/pic-and-nonpic-1-r6.nd: New test.
+	* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.dd: New test.
+	* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.gd: New test.
+	* testsuite/ld-mips-elf/pic-and-nonpic-1a-r6.s: New test source.
+	* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.s: New test source.
+	* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.
+
+2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	* testsuite/ld-arm/arm-elf.exp: Add tests
+	* testsuite/ld-arm/bfs-0.s: New test.
+	* testsuite/ld-arm/bfs-1.s: New test.
+	* testsuite/ld-arm/branch-futures.d: New test.
+
+2019-05-21  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/24373
+	* emultempl/aarch64elf.em (PARSE_AND_LIST_LONGOPTS): Add optional args
+	to flags.
+	* NEWS: Add changes to flag.
+	(PARSE_AND_LIST_OPTIONS): Update help descriptions.
+	(PARSE_AND_LIST_ARGS_CASES): Add new options to parser.
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add new run_dump_tests.
+	* testsuite/ld-aarch64/erratum843419-adr.d: New test.
+	* testsuite/ld-aarch64/erratum843419-adrp.d: New test.
+	* testsuite/ld-aarch64/erratum843419-far-adr.d: New test.
+	* testsuite/ld-aarch64/erratum843419-far-full.d: New test.
+	* testsuite/ld-aarch64/erratum843419-far.s: New test.
+	* testsuite/ld-aarch64/erratum843419-full.d: New test.
+	* testsuite/ld-aarch64/erratum843419-near.s: New test.
+	* testsuite/ld-aarch64/erratum843419-no-args.d: New test.
+
+2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
+
+	PR ld/24571
+	* ld/testsuite/ld-avr/relax-insn-at-range-boundary.d: New test.
+	* ld/testsuite/ld-avr/relax-insn-at-range-boundary.s: New test.
+
+2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
+
+	PR ld/24564
+	* testsuite/ld-avr/wraparound-range-boundary.d: New test.
+	* testsuite/ld-avr/wraparound-range-boundary.s: New test.
+
+2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	PR 14798
+	* testsuite/ld-mips-elf/reloc-6a.s: Specify .text section for
+	global code symbols.
+	* testsuite/ld-mips-elf/reloc-6b.s: Likewise.
+
+2019-05-17  Alan Modra  <amodra@gmail.com>
+
+	PR 24567
+	* plugin.c (plugin_notice): Do not let a common symbol override
+	a non-common definition in IR.
+
+2019-05-09  Dimitar Dimitrov  <dimitar@dinux.eu>
+
+	* scripttempl/pru.sc (__init_array_begin, __init_array_begin):
+	Rename.
+
+2019-05-08  Pekka Seppänen  <pexu@sourceware.mail.kapsi.fi>
+
+	PR 24536
+	* ldbuildid.c (generate_build_id): Cast return value from
+	GetProcAddress in order to avoid a compile time warning.
+
+2019-05-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-undefined/weak-undef.exp: Don't xfail pj.
+
+2019-05-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/fill.d: Don't xfail m32c
+	* testsuite/ld-scripts/fill16.d: Likewise.
+
+2019-05-04  Alan Modra  <amodra@gmail.com>
+
+	PR 24511
+	* testsuite/ld-elf/pr14156a.d: Allow for .init/.fini being a
+	data section on hppa64.
+	* testsuite/ld-elf/pr14156b.d: Likewise.
+	* testsuite/ld-scripts/pr18963.t: Map standard sections to set
+	output section flags.
+	* testsuite/ld-scripts/sane1.t: Likewise.
+	* testsuite/ld-elf/init-fini-arrays.s: Reference __init_array_start
+	and __fini_array_start.  Define __start et al.
+	* testsuite/ld-elf/pr24511.d: New test.
+
+2019-04-30  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/elfv2exe.d: Update.
+	* testsuite/ld-powerpc/elfv2so.d: Update.
+	* testsuite/ld-powerpc/tocopt.d: Update.
+	* testsuite/ld-powerpc/tocopt.s: Update.
+	* testsuite/ld-powerpc/tocopt5.d: Update.
+	* testsuite/ld-powerpc/tocopt5.s: Update.
+	* testsuite/ld-powerpc/tocopt7.d: Update.
+	* testsuite/ld-powerpc/tocopt7.s: Update.
+	* testsuite/ld-powerpc/tocopt8.d: Update.
+	* testsuite/ld-powerpc/tocopt8.s: Update.
+
+2019-04-30  Alan Modra  <amodra@gmail.com>
+
+	* ld.texi (How GNU properties are merged): Avoid pod2man error.
+	Correct example.
+
+2019-04-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24486
+	* testsuite/ld-plugin/lto.exp: Run PR ld/24486 tests.
+	* testsuite/ld-plugin/pr24486a.c: New file.
+	* testsuite/ld-plugin/pr24486b.c: Likewise.
+	* testsuite/ld-plugin/pr24486c.c: Likewise.
+
+2019-04-26  Nick Clifton  <nickc@redhat.com>
+
+	* po/ru.po: Updated Russian translation.
+
+2019-04-26  Christopher Yeleighton  <giecrilj@stegny.2a.pl>
+
+	* ld.texi: Properly hyphenate the word "specific".
+
+2019-04-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24406
+	* ld.texi: Remove LTO warning from --wrap.
+	* plugin.c (get_symbols): Update resolution for wrapper and
+	wrapped symbols.
+	* testsuite/ld-plugin/lto.exp: Run ld/24406 tests.
+	* testsuite/ld-plugin/pr24406-1.c: New file.
+	* testsuite/ld-plugin/pr24406-2a.c: Likewise.
+	* testsuite/ld-plugin/pr24406-2b.c: Likewise.
+
+2019-04-25  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/ld-aarch64/bti-pac-plt-1.d: Update.
+	* testsuite/ld-aarch64/bti-pac-plt-2.d: Update.
+	* testsuite/ld-aarch64/bti-plt-1.d: Update.
+	* testsuite/ld-aarch64/bti-plt-3.d: Update.
+	* testsuite/ld-aarch64/bti-plt-5.d: Update.
+	* testsuite/ld-aarch64/pac-plt-1.d: Update.
+	* testsuite/ld-aarch64/pac-plt-2.d: Update.
+
+2019-04-24  Sandra Loosemore  <sandra@codesourcery.com>
+
+	* testsuite/config/default.exp: Use [check_compiler_available]
+	instead of [which $CC].
+	* testsuite/ld-auto-import/auto-import.exp: Likewise.
+	* testsuite/ld-cygwin/exe-export.exp: Likewise.
+	* testsuite/ld-elf/audit.exp: Likewise.
+	* testsuite/ld-elf/compress.exp: Likewise.
+	* testsuite/ld-elf/dwarf.exp: Likewise.
+	* testsuite/ld-elf/elf.exp: Likewise.
+	* testsuite/ld-elf/indirect.exp: Likewise.
+	* testsuite/ld-elf/linux-x86.exp: Likewise.
+	* testsuite/ld-elf/shared.exp: Likewise.
+	* testsuite/ld-elf/tls.exp: Likewise.
+	* testsuite/ld-elf/wrap.exp: Likewise.
+	* testsuite/ld-elfcomm/elfcomm.exp: Likewise.
+	* testsuite/ld-elfvers/vers.exp: Likewise.
+	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
+	* testsuite/ld-elfweak/elfweak.exp: Likewise.
+	* testsuite/ld-gc/gc.exp: Likewise.
+	* testsuite/ld-i386/i386.exp: Likewise.
+	* testsuite/ld-i386/no-plt.exp: Likewise.
+	* testsuite/ld-i386/tls.exp: Likewise.
+	* testsuite/ld-ifunc/ifunc.exp: Likewise.
+	* testsuite/ld-mn10300/mn10300.exp: Likewise.
+	* testsuite/ld-pe/pe-compile.exp: Likewise.
+	* testsuite/ld-pe/pe-run.exp: Likewise.
+	* testsuite/ld-pe/pe-run2.exp: Likewise.
+	* testsuite/ld-pie/pie.exp: Likewise.
+	* testsuite/ld-plugin/lto.exp: Likewise.
+	* testsuite/ld-plugin/plugin.exp: Likewise.
+	* testsuite/ld-scripts/crossref.exp: Likewise.
+	* testsuite/ld-sh/sh.exp: Likewise.
+	* testsuite/ld-shared/shared.exp: Likewise.
+	* testsuite/ld-size/size.exp: Likewise.
+	* testsuite/ld-srec/srec.exp: Likewise.
+	* testsuite/ld-undefined/undefined.exp: Likewise.
+	* testsuite/ld-unique/unique.exp: Likewise.
+	* testsuite/ld-x86-64/mpx.exp: Likewise.
+	* testsuite/ld-x86-64/no-plt.exp: Likewise.
+	* testsuite/ld-x86-64/tls.exp: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/lib/ld-lib.exp (run_ld_link_exec_tests): Call
+	check_compiler_available before trying to use the compiler.
+	(run_cc_link_tests): Likewise.
+	(check_compiler_available): New.  Use it instead of [which $CC].
+
+2019-04-23  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (GENDEPDIR): New var, used..
+	(GENSCRIPTS): ..here.
+	* Makefile.in: Regenerate.
+	* genscripts.sh: Test for $DEPDIR set before every use.
+
+2019-04-22  Matthew Fortune  <matthew.fortune@mips.com>
+
+	* testsuite/ld-mips-elf/mips-elf-flags.exp: Fix expected ASEs
+	for M5100.
+
+2019-04-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-gc/skip-map-discarded.s: Add section attributes.
+	* testsuite/lib/ld-lib.exp (check_gc_sections_available): Add
+	s12z to list of targets not supporting --gc-sections.
+
+2019-04-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-i386/i386.exp: Run pr18801a and pr18801b instead
+	of pr18801.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-i386/pr18801.d: Removed.
+	* testsuite/ld-x86-64/pr18801.d: Likewise.
+	* testsuite/ld-i386/pr18801a.d: New file.
+	* testsuite/ld-i386/pr18801b.d: Likewise.
+	* testsuite/ld-x86-64/pr18801a.d: Likewise.
+	* testsuite/ld-x86-64/pr18801b.d: Likewise.
+	* testsuite/ld-x86-64/pie2.d: Suggest -fPIE instead of -fPIC.
+	* testsuite/ld-x86-64/pie2.d: Likewise.
+	* testsuite/ld-x86-64/pr19719.d: Likewise.
+	* testsuite/ld-x86-64/pr19807-2a.d: Likewise.
+	* testsuite/ld-x86-64/pr19969.d: Likewise.
+	* testsuite/ld-x86-64/pr21997-1a.err: Likewise.
+	* testsuite/ld-x86-64/pr21997-1b.err: Likewise.
+	* testsuite/ld-x86-64/pr22001-1a.err: Likewise.
+	* testsuite/ld-x86-64/pr22001-1b.err: Likewise.
+	* testsuite/ld-x86-64/pr22791-1.err: Likewise.
+
+2019-04-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24458
+	* testsuite/ld-x86-64/x86-64.exp: Run PR ld/24458 tests.
+	* testsuite/ld-x86-64/pr24458.s: New file.
+	* testsuite/ld-x86-64/pr24458a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458a.d: Likewise.
+	* testsuite/ld-x86-64/pr24458b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458b.d: Likewise.
+	* testsuite/ld-x86-64/pr24458c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458c.d: Likewise.
+
+2019-04-17  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* config/tc-msp430.c (msp430_make_init_symbols): Define __crt0_init_bss
+	symbol when .lower.bss or .either.bss sections exist.
+	Define __crt0_movedata when .lower.data or .either.data sections exist.
+	* testsuite/gas/msp430/either-data-bss-sym.d: New test.
+	* testsuite/gas/msp430/low-data-bss-sym.d: New test.
+	* testsuite/gas/msp430/either-data-bss-sym.s: New test source.
+	* testsuite/gas/msp430/low-data-bss-sym.s: New test source.
+	* testsuite/gas/msp430/msp430.exp: Run new tests.
+	Enable large code model when running -mdata-region={upper,either}
+	tests.
+
+2019-04-16  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/pr20302.d: Don't run for ns32k-*-*.
+	* testsuite/ld-scripts/section-match-1.d: Likewise.
+	* testsuite/ld-undefined/require-defined.exp: Likewise.
+
+2019-04-15  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* testsuite/ld-gc/gc.exp: Skip print-map-discarded test for non-ELF
+	targets.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/ld-arm/bfcsel.s: New.
+	* testsuite/ld-arm/bfcsel.d: New.
+	* testsuite/ld-arm/arm-elf.exp: Add above test.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/ld-arm/bfl.s: New.
+	* testsuite/ld-arm/bfl.d: New.
+	* testsuite/ld-arm/arm-elf.exp: Add above test.
+
+2019-04-15  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/ld-arm/bf.s: New.
+	* testsuite/ld-arm/bf.d: New.
+	* testsuite/ld-arm/arm-elf.exp: Add above test.
+
+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>
+
+	* testsuite/ld-arm/attr-merge-13.attr: New test.
+	* testsuite/ld-arm/attr-merge-13a.s: New test.
+	* testsuite/ld-arm/attr-merge-13b.s: New test.
+
+2019-04-13  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (GENSCRIPTS): Pass LIB_PATH as a parameter.  Add
+	DEPDIR parameter.
+	(ELF_DEPS, ELF_GEN_DEPS, ELF_X86_DEPS): Delete.
+	(ALL_EMULATION_SOURCES, ALL_64_EMULATION_SOURCES): Depend on
+	$GEN_DEPENDS.
+	(e*.c): Delete all dependencies, instead include dependencies
+	from $DEPDIR/*.Pc.
+	* Makefile.in: Regenerate.
+	* configure.ac (source_sh): Define and use function.
+	* configure: Regenerate.
+	* emulparams/aarch64cloudabib.sh, * emulparams/aarch64elf32b.sh,
+	* emulparams/aarch64elfb.sh, * emulparams/aarch64fbsdb.sh,
+	* emulparams/aarch64linux32b.sh, * emulparams/aarch64linuxb.sh,
+	* emulparams/arcelf.sh, * emulparams/arcelf_prof.sh,
+	* emulparams/arclinux.sh, * emulparams/arclinux_nps.sh,
+	* emulparams/arclinux_prof.sh, * emulparams/arcv2elf.sh,
+	* emulparams/arcv2elfx.sh, * emulparams/armelf_fbsd.sh,
+	* emulparams/armelf_linux_eabi.sh,
+	* emulparams/armelf_linux_fdpiceabi.sh,
+	* emulparams/armelf_nacl.sh, * emulparams/armelf_nbsd.sh,
+	* emulparams/armelf_vxworks.sh, * emulparams/armelfb.sh,
+	* emulparams/armelfb_fbsd.sh, * emulparams/armelfb_fuchsia.sh,
+	* emulparams/armelfb_linux.sh, * emulparams/armelfb_linux_eabi.sh,
+	* emulparams/armelfb_linux_fdpiceabi.sh,
+	* emulparams/armelfb_nacl.sh, * emulparams/armelfb_nbsd.sh,
+	* emulparams/armsymbian.sh, * emulparams/cskyelf_linux.sh,
+	* emulparams/elf32_sparc_sol2.sh,
+	* emulparams/elf32_sparc_vxworks.sh, * emulparams/elf32_tic6x_be.sh,
+	* emulparams/elf32_tic6x_elf_be.sh,
+	* emulparams/elf32_tic6x_elf_le.sh,
+	* emulparams/elf32_tic6x_linux_be.sh,
+	* emulparams/elf32_tic6x_linux_le.sh,
+	* emulparams/elf32_x86_64.sh, * emulparams/elf32_x86_64_nacl.sh,
+	* emulparams/elf32b4300.sh, * emulparams/elf32bfinfd.sh,
+	* emulparams/elf32bmipn32.sh, * emulparams/elf32bsmip.sh,
+	* emulparams/elf32btsmip.sh, * emulparams/elf32btsmip_fbsd.sh,
+	* emulparams/elf32btsmipn32.sh, * emulparams/elf32btsmipn32_fbsd.sh,
+	* emulparams/elf32ebmip.sh, * emulparams/elf32ebmipvxworks.sh,
+	* emulparams/elf32elmip.sh, * emulparams/elf32elmipvxworks.sh,
+	* emulparams/elf32frvfd.sh, * emulparams/elf32l4300.sh,
+	* emulparams/elf32lm32fd.sh, * emulparams/elf32lmip.sh,
+	* emulparams/elf32lppc.sh, * emulparams/elf32lppclinux.sh,
+	* emulparams/elf32lppcnto.sh, * emulparams/elf32lppcsim.sh,
+	* emulparams/elf32lr5900.sh, * emulparams/elf32lr5900n32.sh,
+	* emulparams/elf32lriscv.sh, * emulparams/elf32lriscv_ilp32.sh,
+	* emulparams/elf32lriscv_ilp32f.sh, * emulparams/elf32lsmip.sh,
+	* emulparams/elf32ltsmip.sh, * emulparams/elf32ltsmip_fbsd.sh,
+	* emulparams/elf32ltsmipn32.sh, * emulparams/elf32ltsmipn32_fbsd.sh,
+	* emulparams/elf32microblazeel.sh, * emulparams/elf32or1k_linux.sh,
+	* emulparams/elf32ppc.sh, * emulparams/elf32ppc_fbsd.sh,
+	* emulparams/elf32ppccommon.sh, * emulparams/elf32ppclinux.sh,
+	* emulparams/elf32ppcnto.sh, * emulparams/elf32ppcsim.sh,
+	* emulparams/elf32ppcvxworks.sh, * emulparams/elf32ppcwindiss.sh,
+	* emulparams/elf32tilegx_be.sh, * emulparams/elf64_ia64_fbsd.sh,
+	* emulparams/elf64_sparc_fbsd.sh, * emulparams/elf64_sparc_sol2.sh,
+	* emulparams/elf64alpha_fbsd.sh, * emulparams/elf64alpha_nbsd.sh,
+	* emulparams/elf64bmip-defs.sh, * emulparams/elf64bmip.sh,
+	* emulparams/elf64btsmip.sh, * emulparams/elf64btsmip_fbsd.sh,
+	* emulparams/elf64lppc.sh, * emulparams/elf64lriscv-defs.sh,
+	* emulparams/elf64lriscv.sh, * emulparams/elf64lriscv_lp64.sh,
+	* emulparams/elf64lriscv_lp64f.sh, * emulparams/elf64ltsmip.sh,
+	* emulparams/elf64ltsmip_fbsd.sh, * emulparams/elf64ppc.sh,
+	* emulparams/elf64ppc_fbsd.sh, * emulparams/elf64rdos.sh,
+	* emulparams/elf64tilegx_be.sh, * emulparams/elf_i386.sh,
+	* emulparams/elf_i386_be.sh, * emulparams/elf_i386_fbsd.sh,
+	* emulparams/elf_i386_ldso.sh, * emulparams/elf_i386_nacl.sh,
+	* emulparams/elf_i386_sol2.sh, * emulparams/elf_i386_vxworks.sh,
+	* emulparams/elf_iamcu.sh, * emulparams/elf_k1om.sh,
+	* emulparams/elf_k1om_fbsd.sh, * emulparams/elf_l1om.sh,
+	* emulparams/elf_l1om_fbsd.sh, * emulparams/elf_x86_64.sh,
+	* emulparams/elf_x86_64_cloudabi.sh,
+	* emulparams/elf_x86_64_fbsd.sh, * emulparams/elf_x86_64_nacl.sh,
+	* emulparams/elf_x86_64_sol2.sh, * emulparams/h8300helf.sh,
+	* emulparams/h8300helf_linux.sh, * emulparams/h8300hnelf.sh,
+	* emulparams/h8300self.sh, * emulparams/h8300self_linux.sh,
+	* emulparams/h8300snelf.sh, * emulparams/h8300sxelf.sh,
+	* emulparams/h8300sxelf_linux.sh, * emulparams/h8300sxnelf.sh,
+	* emulparams/hppanbsd.sh, * emulparams/hppaobsd.sh,
+	* emulparams/m32rlelf.sh, * emulparams/m32rlelf_linux.sh,
+	* emulparams/m68kelfnbsd.sh, * emulparams/mn10300.sh,
+	* emulparams/msp430X.sh, * emulparams/nds32belf.sh,
+	* emulparams/nds32belf16m.sh, * emulparams/nds32belf_linux.sh,
+	* emulparams/pjlelf.sh, * emulparams/ppclynx.sh,
+	* emulparams/score7_elf.sh, * emulparams/shelf_fd.sh,
+	* emulparams/shelf_linux.sh, * emulparams/shelf_nbsd.sh,
+	* emulparams/shelf_uclinux.sh, * emulparams/shelf_vxworks.sh,
+	* emulparams/shl.sh, * emulparams/shlelf.sh,
+	* emulparams/shlelf_fd.sh, * emulparams/shlelf_nbsd.sh,
+	* emulparams/shlelf_vxworks.sh: Use source_sh.
+	* genscripts.sh: Adjust for changed parameters.  Emit dependencies
+	for e*.c to .deps/*.Pc.
+	(source_sh): New function, use it throughout to source scripts.
+	* genscrba.sh (source_em): Use source_sh.
+
+2019-04-13  Alan Modra  <amodra@gmail.com>
+
+	* configure.ac (TDIRS): Build up tdirs in this variable and
+	AC_SUBST, also using AM_SUBST_NOTMAKE.
+	* configure: Regenerate.
+	* Makefile.am (DISTCLEANFILES): Remove tdirs.
+	* Makefile.in: Regenerate.
+
+2019-04-12  Nick Clifton  <nickc@redhat.com>
+
+	PR 24450
+	* ld.texi (Output Section Attributes): Add ALIGN_WITH_INPUT to
+	example of section attributes.
+
+2019-04-11  Faraz Shahbazker  <fshahbazker@wavecomp.com>
+
+	* NEWS: Mention new option --no-print-map-discarded.
+	* ld.h (ld_config_type) <print_map_discarded>: New field.
+	* ldlang.c (lang_map): Conditionally output discarded sections
+	in map files based on configuration option.
+	* ldlex.h (option_values) <OPTION_PRINT_MAP_DISCARDED,
+	OPTION_NO_PRINT_MAP_DISCARDED>: New.
+	* ldmain.c (main): Enabled print_map_discarded by default.
+	* lexsup.c (ld_options): Add new command-line options.
+	(parse_args) <OPTION_NO_PRINT_MAP_DISCARDED,
+	OPTION_PRINT_MAP_DISCARDED>: New cases.
+	* ld.texi: Document new options.
+	* testsuite/ld-gc/gc.exp: Add new test.
+	* testsuite/ld-gc/skip-map-discarded.s: New file.
+	* testsuite/ld-gc/skip-map-discarded.d: New file.
+	* testsuite/ld-gc/skip-map-discarded.map: New file.
+
+2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* ld.texi: Document -z cet-report=[none|warning|error].
+	* emulparams/cet.sh: Add -z cet-report=[none|warning|error].
+	* testsuite/ld-i386/i386.exp: Run -z cet-report=[warning|error]
+	tests.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-i386/property-x86-cet1.d: New file.
+	* testsuite/ld-i386/property-x86-cet2a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet2b.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet3a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet3b.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet4a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet4b.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet5a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet5b.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet6.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet.s: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet1-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet1.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet3a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet3b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet4a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet4a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet4b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet4b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet6-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet6.d: Likewise.
+
+2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/config/default.exp (STATIC_PIE_LDFLAGS): New.  Set
+	to "-static-pie" if target compiler supports it.
+	* testsuite/ld-elf/elf.exp: Run -static-pie tests if
+	$STATIC_PIE_LDFLAGS isn't empty.
+	* testsuite/ld-ifunc/ifunc.exp: Likewise.
+
+2019-04-11  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/24302
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add new test.
+	* testsuite/ld-aarch64/tls-relax-gdesc-le-now.d: New test.
+
+2019-04-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* scripttempl/elf.sc (CREATE_PIC): New.  Set for CREATE_SHLIB or
+	CREATE_PIE.
+	(__rel_iplt_start): Don't define for CREATE_PIC.
+	(__rel_iplt_end): Likewise.
+	(__rela_iplt_start): Likewise.
+	(__rela_iplt_end): Likewise.
+
+2019-04-10  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/shared.exp: Don't xfail PR ld/20995 for
+	powerpc-nto.
+
+2019-04-10  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/cskyelf.em (csk_elf_before_parse): New function,
+	setting use_branch_stub false for linux.
+	(csky_elf_create_output_section_statements): Do emit this
+	function and all others in the file for linux, plus the branch
+	option control.  Disable branch stubs when non-ELF.
+
+2019-04-10  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (eskyelf.c, eskyelf_linux.c): Depend on cskyelf.em.
+	(ecskyelf_linux.c): Depend on cskyelf.sh.
+	(eelf32microblazeel.c): Depend on elf32microblaze.sh.
+	* Makefile.in: Regenerate.
+	* emulparams/cskyelf.sh: Comment regarding cskelf_linux.sh.
+	(PAGE_SIZE): Don't define.
+	* emulparams/cskyelf_linux.sh: Source sckyelf.sh, leaving just
+	the differing variable defs/undefs.
+	* emulparams/elf32mcore.sh (PAGE_SIZE): Don't define.
+	* emulparams/elf32microblaze.sh: Comment re. elf32microblazeel.sh.
+	(OUTPUT_FORMAT): Use BIG_OUTPUT_FORMAT.
+	(PAGE_SIZE): Don't define.
+	* emulparams/elf32microblazeel.sh: Source elf32microblaze.sh,
+	leaving just the differing OUTPUT_FORMAT.
+
+2019-04-10  Alan Modra  <amodra@gmail.com>
+
+	* po/BLD-POTFILES.in: Regenerate.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/shared.exp: XFAIL PR ld/20995 tests for
+	lynxos and nto targets.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* Makefile.am (ALL_EMULATION_SOURCES): Remove eelf_i386_chaos.c.
+	(eelf_i386_chaos.c): Removed.
+	* Makefile.in: Regenerated.
+	* configure.tgt: Remove i[3-7]86-*-kaos*.
+	* emulparams/elf_i386_chaos.sh: Removed.
+
+2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* emulparams/elf_i386_be.sh (EXTRA_EM_FILE): New.
+	* emulparams/i386moss.sh (EXTRA_EM_FILE): Likewise.
+
+2019-04-08  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/elf64rdos.sh (EXTRA_EM_FILE): Define.
+	* emulparams/i386lynx.sh (EXTRA_EM_FILE): Define.
+	* emulparams/i386nto.sh (EXTRA_EM_FILE): Define.
+
+2019-04-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* Makefile.am (ELF_X86_DEPS): Add $(srcdir)/emultempl/elf-x86.em.
+	(eelf_i386_sol2.c): Also depend on
+	$(srcdir)/emultempl/solaris2-x86.em.
+	(eelf_x86_64_sol2.c): Likewise.
+	* Makefile.in: Regenerated.
+	* emulparams/call_nop.sh: Set x86-specific linker options via
+	params.
+	* emulparams/cet.sh: Likewise.
+	* emulparams/reloc_overflow.sh: Likewise.
+	* emulparams/elf32_x86_64.sh (EXTRA_EM_FILE): New.  Set to
+	"elf-x86".
+	* emulparams/elf_i386.sh: Likewise.
+	* emulparams/elf_i386_be.sh: Likewise.
+	* emulparams/elf_i386_chaos.sh: Likewise.
+	* emulparams/elf_i386_ldso.sh: Likewise.
+	* emulparams/elf_i386_vxworks.sh: Likewise.
+	* emulparams/elf_iamcu.sh: Likewise.
+	* emulparams/elf_k1om.sh: Likewise.
+	* emulparams/elf_l1om.sh: Likewise.
+	* emulparams/elf_x86_64.sh: Likewise.
+	* emulparams/elf_i386_sol2.sh (EXTRA_EM_FILE): Changed to
+	"solaris2-x86".
+	* emulparams/elf_x86_64_sol2.sh: Likewise.
+	* emultempl/elf-x86.em: New file.
+	* emultempl/solaris2-x86.em: Likewise.
+	* emultempl/elf32.em (gld${EMULATION_NAME}_before_parse): Don't
+	set link_info.call_nop_byte.
+
+2019-04-05  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsexe32.d: Remove trailing spaces.
+	* testsuite/ld-powerpc/tlsopt5.d: Likewise.
+	* testsuite/ld-powerpc/tlsopt5_32.d: Likewise.
+
+2019-04-03  Alan Modra  <amodra@gmail.com>
+
+	PR 24411
+	ldlex.l (SYMBOLNAMECHAR1): Don't match '/'.
+	(<EXPRESSION>"/DISCARD/"): New.
+
+2019-04-03  Alan Modra  <amodra@gmail.com>
+
+	* ldlex.l: Formatting.
+	(CMDFILENAMECHAR, CMDFILENAMECHAR1): Delete.
+	(FILENAMECHAR1, SYMBOLNAMECHAR1, FILENAMECHAR, WILDCHAR),
+	(NOCFILENAMECHAR): Remove duplicate chars.  Reorder.
+	(SYMBOLCHARN): Likewise.  Rename to SYMBOLNAMECHAR.
+	(<INPUTLIST>"$SYSROOT"..): Delete rule.
+
+2019-03-29  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* testsuite/ld-xtensa/relax-undef-weak-pie-export-dynamic.d: New
+	test definition.
+	* testsuite/ld-xtensa/xtensa.exp
+	(relax-undef-weak-pie-export-dynamic): Add new test.
+
+2019-03-26  Martin Liska  <mliska@suse.cz>
+
+	* plugin.c (get_symbols): Add lto_kind_str, lto_resolution_str,
+	lto_visibility_str and use then to inform about plugin-symbols.
+	* testsuite/ld-plugin/plugin-12.d: Adjust expected pattern.
+
+2019-03-25  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/ld-arm/jump-reloc-veneers-cond-long.d: Update disassembly.
+	* testsuite/ld-arm/jump-reloc-veneers-long.d: Update disassembly.
+
+2019-03-21  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add new test.
+	* testsuite/ld-aarch64/bti-plt-1.s: Add .ifdef for PAC note section.
+	* testsuite/ld-aarch64/bti-plt-6.d: Update warning.
+	* testsuite/ld-aarch64/bti-plt-7.d: Likewise.
+	* testsuite/ld-aarch64/bti-warn.d: New test.
+
+2019-03-21  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/fini2.s: Reduce alignment.
+	* testsuite/ld-elf/fini3.s: Likewise.
+	* testsuite/ld-elf/finin.s: Likewise.
+	* testsuite/ld-elf/init2.s: Likewise.
+	* testsuite/ld-elf/init3.s: Likewise.
+	* testsuite/ld-elf/initn.s: Likewise.
+	* testsuite/ld-elf/pr14156a.d: Don't xfail m68hc1*-* or xgate-*.
+	* testsuite/ld-elf/pr14156b.d: Don't xfail xgate-*.
+
+2019-03-21  Alan Modra  <amodra@gmail.com>
+
+	* scripttempl/alpha.sc, * scripttempl/armbpabi.sc,
+	* scripttempl/crisaout.sc, * scripttempl/elf32cr16.sc,
+	* scripttempl/elf32crx.sc, * scripttempl/elf32xc16x.sc,
+	* scripttempl/elf32xc16xl.sc, * scripttempl/elf32xc16xs.sc,
+	* scripttempl/elf64hppa.sc, * scripttempl/elf_chaos.sc,
+	* scripttempl/elfarc.sc, * scripttempl/elfarcv2.sc,
+	* scripttempl/elfd30v.sc, * scripttempl/elfm68hc11.sc,
+	* scripttempl/elfm68hc12.sc, * scripttempl/elfm9s12z.sc,
+	* scripttempl/elfmicroblaze.sc, * scripttempl/elfxgate.sc,
+	* scripttempl/elfxtensa.sc, * scripttempl/epiphany_4x4.sc,
+	* scripttempl/ft32.sc, * scripttempl/i386beos.sc,
+	* scripttempl/iq2000.sc, * scripttempl/mcorepe.sc,
+	* scripttempl/mep.sc, * scripttempl/mips.sc, * scripttempl/moxie.sc,
+	* scripttempl/pe.sc, * scripttempl/pep.sc, * scripttempl/ppcpe.sc,
+	* scripttempl/tic4xcoff.sc, * scripttempl/tic80coff.sc,
+	* scripttempl/v850.sc, * scripttempl/v850_rh850.sc,
+	* scripttempl/visium.sc, * scripttempl/xstormy16.sc: Add KEEP and
+	SORT_NONE to .init and .fini wildcards.
+	* scripttempl/elf32xc16x.sc,
+	* scripttempl/elf32xc16xl.sc,
+	* scripttempl/elf32xc16xs.sc: Add .fini wildcard.
+	* scripttempl/elf_chaos.sc: Add .init output section.
+	* scripttempl/elfd30v.sc: Remove duplicate .init.
+	* scripttempl/elfm68hc11.sc, * scripttempl/elfm68hc12.sc,
+	* scripttempl/elfm9s12z.sc, * scripttempl/elfxgate.sc: Remove
+	duplicate .init, and add .fini wildcard.
+	* scripttempl/ppcpe.sc (INIT, FINI): Delete.
+	* ldlang.c (update_wild_statements): Special case .init and
+	.fini in the wildcard, not the output section.
+
+2019-03-21  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/elf32lm32fd.sh (DYNAMIC_LINK): Undef.
+
+2019-03-21  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (lang_size_sections_1): Set SEC_KEEP on
+	create_object_symbols_section.
+	* testsuite/ld-elf/pr22319.d: Don't xfail dlx.
+
+2019-03-18  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/merge.d: Remove csky from xfails, add moxie.
+	* testsuite/ld-elf/pr21884.d: Remove csky from xfails.
+	* testsuite/ld-elf/shared.exp: Add csky to list not xfailing pr22374.
+	* testsuite/ld-unique/pr21529.d: Remove csky from xfails
+
+2019-03-15  Nick Clifton  <nickc@redhat.com>
+
+	PR 24262
+	* ld.texi (-plugin): Correct the path used to locate linker
+	plugins.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+
+	* NEWS: Document --pac-plt.
+	* emultempl/aarch64elf.em (OPTION_PAC_PLT): New.
+	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS): Add pac-plt.
+	(PARSE_AND_LIST_ARGS_CASES): Handle OPTION_PAC_PLT.
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add the following tests.
+	* testsuite/ld-aarch64/bti-pac-plt-1.d: New test.
+	* testsuite/ld-aarch64/bti-pac-plt-2.d: New test.
+	* testsuite/ld-aarch64/pac-plt-1.d: New test.
+	* testsuite/ld-aarch64/pac-plt-2.d: New test.
+	* testsuite/ld-aarch64/bti-plt-1.s: Add .ifndef directive.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+	    Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* NEWS: Document --force-bti.
+	* emultempl/aarch64elf.em (plt_type, bti_type, OPTION_FORCE_BTI): New.
+	(PARSE_AND_LIST_SHORTOPTS, PARSE_AND_LIST_OPTIONS): Add force-bti.
+	(PARSE_AND_LIST_ARGS_CASES): Handle OPTION_FORCE_BTI.
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add all the tests below.
+	* testsuite/ld-aarch64/bti-plt-1.d: New test.
+	* testsuite/ld-aarch64/bti-plt-1.s: New test.
+	* testsuite/ld-aarch64/bti-plt-2.d: New test.
+	* testsuite/ld-aarch64/bti-plt-3.d: New test.
+	* testsuite/ld-aarch64/bti-plt-4.d: New test.
+	* testsuite/ld-aarch64/bti-plt-5.d: New test.
+	* testsuite/ld-aarch64/bti-plt-6.d: New test.
+	* testsuite/ld-aarch64/bti-plt-7.d: New test.
+	* testsuite/ld-aarch64/bti-plt-so.s: New test.
+	* testsuite/ld-aarch64/bti-plt.ld: New test.
+
+2019-03-13  Sudakshina Das  <sudi.das@arm.com>
+
+	* NEWS: Document GNU_PROPERTY_AARCH64_FEATURE_1_BTI and
+	GNU_PROPERTY_AARCH64_FEATURE_1_PAC.
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add run commands for new tests.
+	* testsuite/ld-aarch64/property-bti-pac1.d: New test.
+	* testsuite/ld-aarch64/property-bti-pac1.s: New test.
+	* testsuite/ld-aarch64/property-bti-pac2.d: New test.
+	* testsuite/ld-aarch64/property-bti-pac2.s: New test.
+	* testsuite/ld-aarch64/property-bti-pac3.d: New test.
+
+2019-03-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24322
+	* testsuite/ld-i386/i386.exp: Run PR ld/24322 tests.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-i386/pr24322a.d: New file.
+	* testsuite/ld-i386/pr24322b.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a.d: Likewise.
+	* testsuite/ld-x86-64/pr24322b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24322b.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a.s: Likewise.
+	* testsuite/ld-x86-64/pr24322b.s: Likewise.
+	* testsuite/ld-x86-64/pr24322c.s: Likewise.
+
+2019-03-06  Nick Bowler  <nbowler@draconx.ca>
+
+	PR 24289
+	* ldexp.c (fold_name): Allow lookups of the LENGTH and ORIGIN
+	attributes during the first phase.
+
+2019-03-01  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	This reverts commit 5a12586d44fa8d5dfc74cbca4f2f36a273a16335.
+	2019-01-14  Maamoun Tarsha  <maamountk@hotmail.com>
+
+	PR 20113
+	* emulparams/elf64_s390.sh (SEPARATE_GOTPLT): Define.
+	* emulparams/elf_s390.sh (SEPARATE_GOTPLT): Define.
+	* testsuite/ld-s390/gotreloc_31-1.dd: Update expected output.
+	* testsuite/ld-s390/tlsbin.dd: Likewise.
+	* testsuite/ld-s390/tlsbin.rd: Likewise.
+	* testsuite/ld-s390/tlsbin.sd: Likewise.
+	* testsuite/ld-s390/tlsbin_64.dd: Likewise.
+	* testsuite/ld-s390/tlsbin_64.rd: Likewise.
+	* testsuite/ld-s390/tlsbin_64.sd: Likewise.
+	* testsuite/ld-s390/tlspic.dd: Likewise.
+	* testsuite/ld-s390/tlspic.rd: Likewise.
+	* testsuite/ld-s390/tlspic.sd: Likewise.
+	* testsuite/ld-s390/tlspic_64.dd: Likewise.
+	* testsuite/ld-s390/tlspic_64.rd: Likewise.
+	* testsuite/ld-s390/tlspic_64.sd: Likewise.
+	* testsuite/ld-s390/s390.exp: Skip s390 tests for tpf targets.
+
+2019-02-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24276
+	* testsuite/ld-i386/i386.exp: Run PR ld/24276 test.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-i386/pr24276.dso: New file.
+	* testsuite/ld-i386/pr24276.warn: Likewise.
+	* testsuite/ld-x86-64/pr24276.dso: Likewise.
+	* testsuite/ld-x86-64/pr24276.warn: Likewise.
+
+2019-02-20  Eric Tsai  <erictsai@cadence.com>
+
+	* testsuite/ld-xtensa/call_overflow.d: New test definition.
+	* testsuite/ld-xtensa/call_overflow1.s: New test source.
+	* testsuite/ld-xtensa/call_overflow2.s: New test source.
+	* testsuite/ld-xtensa/call_overflow3.s: New test source.
+	* testsuite/ld-xtensa/xtensa.exp: Add call_overflow test.
+
+2019-02-14  Thomas Schwinge  <thomas@codesourcery.com>
+
+	* testsuite/ld-elf/elf.exp: Remove Hurd XFAILs.
+
+2019-02-12  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2019-02-09  Vineet Gupta  <vgupta@synopsys.com>
+
+	* emultempl/arclinux.em: Delete special INIT/FINI handling.
+
+2019-02-07  Nick Clifton  <nickc@redhat.com>
+
+	PR 24175
+	* ld.texi (Options): Add missing word to the description of the
+	--start-group option.
+
+2019-02-06  Alan Modra  <amodra@gmail.com>
+
+	PR ld/24008
+	* testsuite/ld-scripts/pr24008.d: Pass with extra target
+	defined symbols.
+
+2019-02-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24151
+	* testsuite/ld-x86-64/pr24151a-x32.d: New file.
+	* testsuite/ld-x86-64/pr24151a.d: Likewise.
+	* testsuite/ld-x86-64/pr24151a.s: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Run pr24151a and pr24151a-x32.
+
+2019-01-31  Alan Modra  <amodra@gmail.com>
+
+	* NEWS: Mention -t change.
+	* ld.texi (--trace/-t): Expand documentation a little.
+
+2019-01-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24008
+	* testsuite/ld-scripts/defined.exp: Run pr24008.
+	* testsuite/ld-scripts/pr24008.d: New file.
+	* testsuite/ld-scripts/pr24008.map: Likewise.
+	* testsuite/ld-scripts/pr24008.s: Likewise.
+	* testsuite/ld-scripts/pr24008.t: Likewise.
+
+2019-01-29  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* testsuite/ld-ifunc/ifunc.exp: Skip pr23169 on SPARC.
+
+2019-01-28  Alan Modra  <amodra@gmail.com>
+
+	PR 24008
+	* ldexp.h (lang_phase_type): Add lang_fixed_phase_enum.
+	* ldexp.c (fold_name): Move expld.assign_name check later to
+	avoid an extra lookup.
+	(exp_fold_tree_1): When lang_fixed_phase_enum, don't change symbol
+	values, and don't clear expld.assign_name.
+	* ldlang.c (lang_map): Set expld.phase to lang_fixed_phase_enum.
+	(print_assignment): Resolve entire assignment expression.
+	Don't access symbol u.def unless symbol is defined.
+
+2019-01-25  Nick Clifton  <nickc@redhat.com>
+
+	* po/bg.po: Updated Bulgarian translation.
+
+2019-01-23  Sebastian Huber  <sebastian.huber@embedded-brains.de>
+
+	* ld.texi (--wrap): Add warning that LTO may make this feature
+	ineffective.
+
+2019-01-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/uk.po: Updated Ukranian translation.
+	* po/pr_BR.po: Updated Brazilian Portuguese translation.
+
+2019-01-21  Nick Clifton  <nickc@redhat.com>
+
+	PR 24108
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01.d: Update
+	expected error message.
+
+2019-01-19  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/ld.pot: Regenerate.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-16  Kito Cheng  <kito@andestech.com>
+
+	* testsuite/ld-elf/orphan-region.d: XFAIL for RISC-V, because add new
+	section.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Add new tests.
+	* testsuite/ld-riscv-elf/attr-merge-arch-01.d: New test.
+	* testsuite/ld-riscv-elf/attr-merge-arch-01a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-01b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-02a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-02b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-03a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-03b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-stack-align-a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-stack-align-b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-stack-align-failed-a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-stack-align-failed-b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-stack-align-failed.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-stack-align.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-01.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-01a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-01b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-02a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-02b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-03a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-03b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-04.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-04a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-04b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-05.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-05a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-05b.s: Likewise.
+
+2019-01-14  Maamoun Tarsha  <maamountk@hotmail.com>
+
+	PR 20113
+	* emulparams/elf64_s390.sh (SEPARATE_GOTPLT): Define.
+	* emulparams/elf_s390.sh (SEPARATE_GOTPLT): Define.
+	* testsuite/ld-s390/gotreloc_31-1.dd: Update expected output.
+	* testsuite/ld-s390/tlsbin.dd: Likewise.
+	* testsuite/ld-s390/tlsbin.rd: Likewise.
+	* testsuite/ld-s390/tlsbin.sd: Likewise.
+	* testsuite/ld-s390/tlsbin_64.dd: Likewise.
+	* testsuite/ld-s390/tlsbin_64.rd: Likewise.
+	* testsuite/ld-s390/tlsbin_64.sd: Likewise.
+	* testsuite/ld-s390/tlspic.dd: Likewise.
+	* testsuite/ld-s390/tlspic.rd: Likewise.
+	* testsuite/ld-s390/tlspic.sd: Likewise.
+	* testsuite/ld-s390/tlspic_64.dd: Likewise.
+	* testsuite/ld-s390/tlspic_64.rd: Likewise.
+	* testsuite/ld-s390/tlspic_64.sd: Likewise.
+	* testsuite/ld-s390/s390.exp: Skip s390 tests for tpf targets.
+
+2019-01-14  Sebastian Huber  <sebastian.huber@embedded-brains.de>
+
+	* ld.texi (--wrap): Add example to emphasise that only undefined
+	references are replaced by the linker.
+
+2019-01-09  Nick Clifton  <nickc@redhat.com>
+
+	* po/es.po: Updated Spanish translation.
+
+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+
+	* configure: Regenerate.
+
+2019-01-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/sec64k.exp: Use . rather than $objdir in
+	generated source file names.
+	* testsuite/ld-m68k/m68k-got.exp: Likewise.
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/gold/ChangeLog-2019 b/gold/ChangeLog-2019
new file mode 100644
index 0000000000..3dc2ce81b7
--- /dev/null
+++ b/gold/ChangeLog-2019
@@ -0,0 +1,288 @@
+2019-11-26  Martin Liska  <mliska@suse.cz>
+
+	* layout.cc (Layout::special_ordering_of_input_section):
+	Add ".text.sorted".
+	* output.cc: Special case ".text.sorted".
+	* testsuite/section_sorting_name.cc: Cover also .text.sorted
+	subsections.
+	* testsuite/section_sorting_name.sh: Likewise.
+
+2019-11-19  Alan Modra  <amodra@gmail.com>
+
+	PR 24853
+	* symtab.h (set_has_gnu_output, has_gnu_output_): New.
+	* symtab.cc (Symbol_table::Symbol_table): Init has_gnu_output_.
+	(Symbol_table::finalize): Set ELFOSABI_GNU when has_gnu_output_.
+	(Symbol_table::set_dynsym_indexes, Symbol_table::sized_finalize):
+	Call set_has_gnu_output for STT_GNU_IFUNC and STB_GNU_UNIQUE globals.
+	* object.cc (Sized_relobj_file::do_finalize_local_symbols): Call
+	set_has_gnu_output when STT_GNU_IFUNC locals will be output.
+
+2019-11-11  Miguel Saldivar  <saldivarcher@gmail.com>
+
+	PR 24996
+	* expression.cc (Trinary_expression::arg2_value): Use correct integer
+	expression when calling "eval_maybe_dot" method.
+	(Trinary_expression::arg3_value): Likewise.
+
+2019-09-28  Alan Modra  <amodra@gmail.com>
+
+	PR 16794
+	* i386.cc (Target_i386::Relocate::relocate <R_386_GOTOFF>): Don't
+	ignore addend, apply using pcrel32.
+	* x86_64.cc (Target_x86_64::Relocate::relocate <R_X86_64_GOTOFF64>):
+	Similarly use pcrel64.
+
+2019-09-24  Nick Clifton  <nickc@redhat.com>
+
+	* descriptors.cc: Include <string>
+
+2019-09-23  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/plugin_new_section_layout.c (new_input_hook): Correct
+	return status enum values.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	PR 24768
+	* layout.cc (Layout::Layout): Init lto_slim_object_.
+	* object.cc (Sized_relobj_file::do_layout): Wrap overlong line.
+	Don't use C cast.  Validate section size.  Don't copy contents.
+
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::Scan::check_non_pic): Move REL24
+	to 32-bit supported.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* testsuite/Makefile.in: Re-generate.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-08-16  Martin Liska  <mliska@suse.cz>
+
+	PR ld/24912
+	* object.cc (big_endian>::do_layout): Do not report error,
+	but only set a flag.
+	(big_endian>::do_add_symbols): Report error only for when
+	relocatable.
+
+2019-08-02  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::Scan::get_reference_flags): Set
+	flags for new relocations, and some missing older relocs.
+	(Target_powerpc::Scan::local): Handle new pcrel tls relocs.
+	Call set_has_static_tls for tprel relocs.
+	(Target_powerpc::Scan::global): Likewise.
+	(Target_powerpc::Relocate::relocate): Handle new pcrel tls relocs.
+
+2019-08-02  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Powerpc_relocate_functions::rela, rela_ua): Perform
+	signed right shift for signed overflow check.
+
+2019-07-29  Martin Liska  <mliska@suse.cz>
+
+	PR 24768
+	* layout.h (class Layout): Add is_lto_slim_object and
+	set_lto_slim_object.
+	* object.cc (struct lto_section): Add lto_slim_object_.
+	(big_endian>::do_layout): Parse content of
+	.gnu_lto_.lto section.
+	(big_endian>::do_add_symbols): Report error for a missing
+	LTO plugin.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (xlate_pcrel_opt): New function.
+	(Target_powerpc::Relocate::relocate): Optimise PCREL34 and
+	GOT_PCREL34 sequences marked with PCREL_OPT.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Powerpc_relobj::make_got_relative): New function.
+	(relative_value_is_known): New functions.
+	(Target_powerpc::Relocate::relocate): Edit code using
+	GOT16_HA, GOT16_LO_DS, and GOT_PCREL34 relocs.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc): Add powerxx_stubs_ and accessor
+	functions.
+	(Target_powerpc::maybe_skip_tls_get_addr_call): Handle PLT_PCREL34
+	and PLT_PCREL34_NOTOC relocs.
+	(Powerpc_relocate_functions): Add addr34, addr34_hi, addr34_ha,
+	addr28, addr16_higher34, addr16_highera34, addr16_highest34,
+	addr16_highest34a functions.
+	(li_11_0, ori_11_11_0, sldi_11_11_34): Define.
+	(paddi_12_pc, pld_12_pc, pnop): Define.
+	(d34, ha34): New inline functions.
+	(Stub_table::add_plt_call_entry): Handle powerxx_stubs.
+	(Stub_table::add_eh_frame): Likewise.
+	(build_powerxx_offset): New function.
+	(Stub_table::plt_call_size): Handle powerxx_stubs.
+	(Stub_table::branch_stub_size): Likewise.
+	(Stub_table::do_write): Likewise.
+	(Target_powerpc::Scan::get_reference_flags): Handle new relocs.
+	(Target_powerpc::Scan::reloc_needs_plt_for_ifunc: Likewise.
+	(Target_powerpc::Scan::local, global, relocate): Likewise.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* ehframe.cc (Fde::operator==): Delete.
+	(Cie::remove_fde): Delete.
+	(Eh_frame::remove_ehframe_for_plt): Delete fde_data and fde_length
+	parameters.  Remove all post-map plt FDEs.
+	* ehframe.h (Fde:post_map): Make const, add variant to compare plt.
+	(Fde::operator==): Delete.
+	(Cie::remove_fde): Implement here.
+	(Cie::last_fde): New accessor.
+	(Eh_frame::remove_ehframe_for_plt): Update prototype.
+	* layout.cc (Layout::remove_eh_frame_for_plt): Delete fde_data and
+	fde_length parameters.
+	* layout.h (Layout::remove_eh_frame_for_plt): Update prototype.
+	* powerpc.cc (Stub_table::tls_get_addr_opt_bctrl_): Delete.
+	(Stub_table::plt_fde_len_, plt_fde_, init_plt_fde): Delete.
+	(Stub_table::add_plt_call_entry): Don't set tls_get_addr_opt_bctrl_.
+	(eh_advance): New function.
+	(stub_sort): New function.
+	(Stub_table::add_eh_frame): Emit eh_frame for notoc plt calls and
+	branches as well as __tls_get_addr_opt plt call stub.
+	(Stub_table::remove_eh_frame): Update to suit.
+
+2019-07-13  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::maybe_skip_tls_get_addr_call): Handle
+	notoc calls.
+	(is_branch_reloc): Template on size.  Return true for REL24_NOTOC.
+	Update all callers.
+	(max_branch_delta): Likewise.
+	(Target_powerpc::Branch_info::make_stub): Add a stub for notoc
+	calls to functions needing a valid toc pointer.
+	(Target_powerpc::do_relax): Layout stubs again if any need resize.
+	(add_12_11_12, addi_12_11, addis_12_11, ldx_12_11_12, ori_12_12_0),
+	(oris_12_12_0, sldi_12_12_32): Define.
+	(Stub_table::Plt_stub_ent): Add notoc_ and iter_ fields.
+	(Stub_table::Branch_stub_key, Branch_stub_key_hash): Rename from
+	Branch_stub_ent and Branch_stub_ent hash.  Remove save_res_ from key.
+	(Stub_table::Branch_stub_ent): New struct.
+	(class Stub_table): Add need_resize and resizing vars.
+	(Stub_table::need_resize, branch_size): New accessors.
+	(Stub_table::set_resizing): New function.
+	(Stub_table::add_plt_call_entry): Handle notoc calls and resizing
+	on seeing such or a tocsave stubs after a normal stub using the
+	same sym.
+	(Stub_table::add_long_branch_entry): Similarly.
+	(Stub_table::find_long_branch_entry): Return a Branch_stub_ent*.
+	(Stub_table::define_stub_syms): Adjust
+	(Stub_table::build_tls_opt_head, build_tls_opt_tail): New functions.
+	(build_notoc_offset): New function.
+	(Stub_table::plt_call_size): Move out of line.  Handle notoc calls.
+	(Stub_table::branch_stub_size): Similarly.
+	(Stub_table::do_write): Separate loop for ELFv2 stubs, handling
+	notoc calls.  Simplify ELFv1 loop.  Output notoc branch stubs.
+	Use build_tls_opt_head and build_tls_opt_tail.
+	(Target_powerpc::Scan::get_reference_flags): Handle REL24_NOTOC.
+	(Target_powerpc::Scan::reloc_needs_plt_for_ifunc): Likewise,
+	and PLTSEQ_NOTOC and PLTCALL_NOTOC.
+	(Target_powerpc::Scan::local, global, relocate): Likewise.
+
+2019-06-28  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::Relocate::relocate): Don't look
+	at next/previous reloc when relnum is -1.
+
+2019-06-28  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Stub_table::plt_error): New function.
+	(Stub_table::do_write): Use it.
+	(Output_data_glink::do_write): Don't segfault emitting linkage
+	table error.
+
+2019-06-28  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::Scan::get_reference_flags): Handle
+	REL16_HIGH* relocs.
+	(Target_powerpc::Scan::local): Likewise.
+	(Target_powerpc::Scan::global): Likewise.
+	(Target_powerpc::Relocate::relocate): Likewise.
+
+2019-06-10  Martin Liska  <mliska@suse.cz>
+
+	* errors.h: Include string.
+
+2019-05-10  Joshua Oreman  <oremanj@hudson-trading.com>
+
+	PR gold/21066
+	* gc.h (gc_process_relocs): Track relocations in .eh_frame sections
+	when ICF is enabled, even though the .eh_frame sections themselves
+	are not foldable.
+	* icf.cc (get_section_contents): Change arguments to permit operation
+	on just part of a section. Include extra identity regions in the
+	referring section's contents recursively.
+	(match_sections): Lock object here instead of in get_section_contents
+	so that get_section_contents can operate recursively.
+	(Icf::add_ehframe_links): New method.
+	(Icf::find_identical_sections): Pass .eh_frame sections to
+	add_ehframe_links(). Increase default iteration count from 2 to 3
+	because handling exception info typically requires one extra iteration.
+	* icf.h (Icf::extra_identity_list_): New data member with accessor.
+	(is_section_foldable_candidate): Include .gcc_except_table sections.
+	* options.h: Update documentation for new default ICF iteration count.
+	* testsuite/Makefile.am (icf_test_pr21066): New test case.
+	* testsuite/Makefile.in: Regenerate.
+	* testsuite/icf_test_pr21066.cc: New source file.
+	* testsuite/icf_test_pr21066.sh: New test script.
+
+2019-02-19  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>
+
+     PR gold/23870
+     * aarch64.cc (Target_aarch64::Scan::global): Check if a symbol with
+     R_AARCH64_MOVW_.ABS_* relocations requires a PLT entry.
+     * testsuite/Makefile.am: Add aarch64_pr23870 test case.
+     * testsuite/Makefile.in: Regenerate.
+     * testsuite/aarch64_pr23870_bar.c: New file.
+     * testsuite/aarch64_pr23870_foo.c: New file.
+     * testsuite/aarch64_pr23870_main.S: New file.
+
+2019-02-12  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2019-01-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/uk.po: Updated Ukranian translation.
+
+2019-01-19  Nick Clifton  <nickc@redhat.com>
+
+	* po/gold.pot: Regenerate.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+
+	* configure: Regenerate.
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/gprof/ChangeLog-2019 b/gprof/ChangeLog-2019
new file mode 100644
index 0000000000..f638de2eba
--- /dev/null
+++ b/gprof/ChangeLog-2019
@@ -0,0 +1,94 @@
+2019-11-15  Nick Clifton  <nickc@redhat.com>
+
+	PR 2587
+	* Makefile.am: Revert change from 2019-11-13.
+	* Makefile.in: Regenerate.
+
+2019-11-14  Nick Clifton  <nickc@redhat.com>
+
+	PR 2587
+	* Makefile.am (SUFFIXES): Add .c.
+	* Makefile.in: Regenerate.
+
+2019-11-13  Nick Clifton  <nickc@redhat.com>
+
+	PR 2587
+	* Makefile.am: Fix rule to build .c files from .m files.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* corefile.c, * symtab.c: Update throughout for bfd section
+	macro and function changes.
+
+2019-09-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* Makefile.in: Re-generate.
+	* configure: Re-generate.
+
+2019-09-16  Phil Blundell  <pb@pbcl.net>
+
+	* Makefile.in, configure: Regenerated.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-05-20  Nick Clifton  <nickc@redhat.com>
+
+	PR 24569
+	* gprof.c (usage): Restore alphabetical sorting to short options
+	list.  Add -r, -R and -t short options to the list.
+	(main): Add comment about -g and -G possibly being deprecated.
+	* gprof.texi: Update usage example in line with changes above.
+
+2019-05-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/de.po: Updated German translation.
+
+2019-05-08  Alan Modra  <amodra@gmail.com>
+
+	PR 24520
+	* corefile.c (core_init): Set BFD_DECOMPRESS.
+
+2019-04-01  Alan Modra  <amodra@gmail.com>
+
+	PR 24402
+	* symtab.c (symtab_finalize): Init prev_addr to one less than
+	first symbol address, not one more.  Correct test for symbols
+	with leading underscores.
+
+2019-01-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/tr.po: Updated Turkish translation.
+
+2019-01-19  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/gprof.pot: Regenerate.
+
+2018-06-24  Nick Clifton  <nickc@redhat.com>
+
+	2.32 branch created.
+
+2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>
+
+	* configure: Regenerate.
+
+2019-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2018
+
+Copyright (C) 2019 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
