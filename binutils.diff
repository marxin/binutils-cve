diff --git a/include/gdb/ChangeLog b/include/gdb/ChangeLog
index 89e09d3edde..27efbaf877f 100644
--- a/include/gdb/ChangeLog
+++ b/include/gdb/ChangeLog
@@ -1,3 +1,7 @@
+2021-01-07  Mike Frysinger  <vapier@gentoo.org>
+
+	* remote-sim.h (sim_memory_map): Define.
+
 2016-07-15  John Baldwin  <jhb@FreeBSD.org>
 
 	* signals.def: Add GDB_SIGNAL_LIBRT.
@@ -340,7 +344,7 @@ Wed Jul 17 19:36:38 2002  J"orn Rennecke <joern.rennecke@superh.com>
 	* signals.h: New file, from gdb/defs.h.
 
 
-Copyright (C) 2002-2020 Free Software Foundation, Inc.
+Copyright (C) 2002-2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/include/ChangeLog b/include/ChangeLog
index 5997c26899c..14c508f84ec 100644
--- a/include/ChangeLog
+++ b/include/ChangeLog
@@ -1,485 +1,57 @@
-2020-11-15  Mark Wielaard  <mark@klomp.org>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
-	Backport from the mainline:
-	2020-09-23  Mark Wielaard  <mark@klomp.org>
+	This is the 2.36 release.
 
-	Sync with GCC
-	* dwarf2.def: Add DWARF5 Unit type header encoding macros
-	DW_UT_FIRST, DW_UT and DW_UT_END.
-	* dwarf2.h (enum dwarf_unit_type): Removed and define using
-	DW_UT_FIRST, DW_UT and DW_UT_END macros.
-	(get_DW_UT_name): New function declaration.
+2021-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
 
-2020-07-22  H.J. Lu  <hongjiu.lu@intel.com>
+	* opcode/aarch64.h (AARCH64_FEATURE_CSRE): Delete.
+	(aarch64_opnd): Delete AARCH64_OPND_CSRE_CSR.
 
-	PR ld/26262
-	PR ld/26267
-	* bfdlink.h (bfd_link_info): Add lto_all_symbols_read.
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+	* 2.36 release branch crated.
 
-	Binutils 2.35 branch created.
+2021-01-07  Philipp Tomsich  <prt@gnu.org>
 
-2020-06-30  Nelson Chu  <nelson.chu@sifive.com>
+	* opcode/riscv-opc.h: Added MATCH_PAUSE, MASK_PAUSE and DECLARE_INSN
+	for pause hint instruction.
+	* opcode/riscv.h (enum riscv_insn_class): Added INSN_CLASS_ZIHINTPAUSE.
 
-	* opcode/riscv-opc.h: Support the unprivileged CSR.  The versions
-	of the unprivileged CSR should be PRIV_SPEC_CLASS_NONE for now.
-	* opcode/riscv.h (enum riscv_csr_class): Add CSR_CLASS_DEBUG.
+2021-01-07  Claire Xenia Wolf  <claire@symbioticeda.com>
+	    Jim Wilson  <jimw@sifive.com>
+	    Andrew Waterman  <andrew@sifive.com>
+	    Maxim Blinov  <maxim.blinov@embecosm.com>
+	    Kito Cheng  <kito.cheng@sifive.com>
+	    Nelson Chu  <nelson.chu@sifive.com>
 
-2020-06-30  Nelson Chu  <nelson.chu@sifive.com>
+	* opcode/riscv-opc.h: Added MASK/MATCH/DECLARE_INSN for ZBA/ZBB/ZBC.
+	* opcode/riscv.h (riscv_insn_class): Added INSN_CLASS_ZB*.
+	(enum riscv_isa_spec_class): Added ISA_SPEC_CLASS_DRAFT for the
+	frozen extensions.
 
-	* opcode/riscv-opc.h: Cleanup and remove the unused macros.
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
 
-2020-06-29  Alan Modra  <amodra@gmail.com>
+	* ctf-api.h (CTF_MN_RECURSE): New.
+	(ctf_member_next): Add flags argument.
 
-	* coff/internal.h: Use C style comments.
-	* coff/pe.h: Likewise.
-	* elf/ppc64.h: Likewise.
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
 
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+	* ctf-api.h (ECTF_INCOMPLETE): New.
+	(ECTF_NERR): Adjust.
 
-	* ctf-api.h (ctf_arc_bufopen): New.
+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>
 
-2020-06-26  Pat Bernardi  <bernardi@adacore.com>
+	* coff/internal.h: Correct comment spelling.
+	* coff/sym.h: Likewise.
+	* opcode/aarch64.h: Likewise.
 
-	* elf/m68k.h: Add enum for GNU object attribute with floating point
-	tag name and values.
-
-2020-06-25  Nick Clifton  <nickc@redhat.com>
-
-	* libiberty.h (bsearch_r): Remove use of the register keyword from
-	the prototype.
-
-2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	Sync with GCC
-	2020-06-23  Nick Alcock  <nick.alcock@oracle.com>
-
-	* libiberty.h (bsearch_r): New.
-
-	2020-04-17  Martin Liska  <mliska@suse.cz>
-		    Jonathan Yong <10walls@gmail.com>
-
-	PR gcov-profile/94570
-	* filenames.h (defined): Do not define HAVE_DOS_BASED_FILE_SYSTEM
-	for CYGWIN.
-
-2020-06-22  Alex Coplan  <alex.coplan@arm.com>
-
-	* opcode/aarch64.h (AARCH64_FEATURE_SHA2): Normalize.
-	(AARCH64_FEATURE_AES): Likewise.
-	(AARCH64_FEATURE_V8_4): Likewise.
-	(AARCH64_FEATURE_SM4): Likewise.
-	(AARCH64_FEATURE_SHA3): Likewise.
-	(AARCH64_FEATURE_V8): Likewise.
-	(AARCH64_FEATURE_V8_2): Likewise.
-	(AARCH64_FEATURE_V8_3): Likewise.
-	(AARCH64_FEATURE_FP): Likewise.
-	(AARCH64_FEATURE_SIMD): Likewise.
-	(AARCH64_FEATURE_CRC): Likewise.
-	(AARCH64_FEATURE_LSE): Likewise.
-	(AARCH64_FEATURE_PAN): Likewise.
-	(AARCH64_FEATURE_LOR): Likewise.
-	(AARCH64_FEATURE_RDMA): Likewise.
-	(AARCH64_FEATURE_V8_1): Likewise.
-	(AARCH64_FEATURE_F16): Likewise.
-	(AARCH64_FEATURE_RAS): Likewise.
-	(AARCH64_FEATURE_PROFILE): Likewise.
-	(AARCH64_FEATURE_SVE): Likewise.
-	(AARCH64_FEATURE_RCPC): Likewise.
-	(AARCH64_FEATURE_COMPNUM): Likewise.
-	(AARCH64_FEATURE_DOTPROD): Likewise.
-	(AARCH64_FEATURE_F16_FML): Likewise.
-	(AARCH64_FEATURE_V8_5): Likewise.
-	(AARCH64_FEATURE_V8_6): Likewise.
-	(AARCH64_FEATURE_BFLOAT16): Likewise.
-	(AARCH64_FEATURE_FLAGMANIP): Likewise.
-	(AARCH64_FEATURE_FRINTTS): Likewise.
-	(AARCH64_FEATURE_SB): Likewise.
-	(AARCH64_FEATURE_PREDRES): Likewise.
-	(AARCH64_FEATURE_CVADP): Likewise.
-	(AARCH64_FEATURE_RNG): Likewise.
-	(AARCH64_FEATURE_BTI): Likewise.
-	(AARCH64_FEATURE_SCXTNUM): Likewise.
-	(AARCH64_FEATURE_ID_PFR2): Likewise.
-	(AARCH64_FEATURE_SSBS): Likewise.
-	(AARCH64_FEATURE_MEMTAG): Likewise.
-	(AARCH64_FEATURE_TME): Likewise.
-	(AARCH64_FEATURE_I8MM): Likewise.
-	(AARCH64_FEATURE_F32MM): Likewise.
-	(AARCH64_FEATURE_F64MM): Likewise.
-	(AARCH64_FEATURE_SVE2): Likewise.
-	(AARCH64_FEATURE_SVE2_AES): Likewise.
-	(AARCH64_FEATURE_SVE2_BITPERM): Likewise.
-	(AARCH64_FEATURE_SVE2_SM4): Likewise.
-	(AARCH64_FEATURE_SVE2_SHA3): Likewise.
-
-2020-06-22  Saagar Jha  <saagar@saagarjha.com>
-
-	* mach-o/loader.h: Add declarations of two new Mach-O load
-	commands.
-
-2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
-
-	* opcode/riscv.h (riscv_get_priv_spec_class): Move the function
-	forward declarations to bfd/elfxx-riscv.h.
-	(riscv_get_priv_spec_name): Likewise.
-
-2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* elf/xtensa.h (xtensa_abi_choice): New declaration.
-
-2020-06-12  Roland McGrath  <mcgrathr@google.com>
-
-	* bfdlink.h (struct bfd_link_info): New field start_stop_visibility.
-
-2020-06-12  Nelson Chu  <nelson.chu@sifive.com>
-
-	* opcode/riscv-opc.h: Update the defined versions of CSR from
-	PRIV_SPEC_CLASS_1P9 to PRIV_SPEC_CLASS_1P9P1.  Also, drop the
-	MISA DECLARE_CSR_ALIAS since it's aborted version is v1.9.
-	* opcode/riscv.h (enum riscv_priv_spec_class): Remove
-	PRIV_SPEC_CLASS_1P9.
-
-2020-06-11  Alex Coplan  <alex.coplan@arm.com>
-
-	* opcode/aarch64.h (aarch64_sys_reg): Add required features to struct
-	describing system registers.
-
-2020-06-11  Alan Modra  <amodra@gmail.com>
-
-	* elf/mips.h (Elf32_RegInfo): Use fixed width integer types.
-	(Elf64_Internal_RegInfo, Elf_Internal_Options): Likewise.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* elf/ppc64.h (elf_ppc64_reloc_type): Rename
-	R_PPC64_GOT_TLSGD34 to R_PPC64_GOT_TLSGD_PCREL34,
-	R_PPC64_GOT_TLSLD34 to R_PPC64_GOT_TLSLD_PCREL34,
-	R_PPC64_GOT_TPREL34 to R_PPC64_GOT_TPREL_PCREL34, and
-	R_PPC64_GOT_DTPREL34 to R_PPC64_GOT_DTPREL_PCREL34.
-
-2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* opcode/cgen.h: Get an `endian' argument in both
-	cgen_get_insn_value and cgen_put_insn_value.
-
-2020-06-04  Jose E. Marchesi  <jemarch@gnu.org>
-
-	* opcode/cgen.h (enum cgen_cpu_open_arg): New value
-	CGEN_CPU_OPEN_INSN_ENDIAN.
-
-2020-06-03  Nelson Chu  <nelson.chu@sifive.com>
-
-	* opcode/riscv.h: Remove #include "bfd.h".  And change the return
-	types of riscv_get_isa_spec_class and riscv_get_priv_spec_class
-	from bfd_boolean to int.
-
-2020-05-28  Alan Modra  <amodra@gmail.com>
-
-	PR 26044
-	* opcode/tilepro.h (TILEPRO_NUM_PIPELINE_ENCODINGS): Move to
-	tilepro_pipeline enum.
-
-2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/22909
-	* bfdlink.h (textrel_check_method): New enum.
-	(bfd_link_textrel_check): New.
-	(bfd_link_info): Replace warn_shared_textrel and error_textrel
-	with textrel_check.
-
-2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf/common.h: Update comments for ET_EXEC and ET_DYN.
-
-2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* opcode/riscv.h: Include "bfd.h" to support bfd_boolean.
-	(enum riscv_isa_spec_class): New enum class.  All supported ISA spec
-	belong to one of the class
-	(struct riscv_ext_version): New structure holds version information
-	for the specific ISA.
-	* opcode/riscv-opc.h (DECLARE_CSR): There are two version information,
-	define_version and abort_version.  The define_version means which
-	privilege spec is started to define the CSR, and the abort_version
-	means which privilege spec is started to abort the CSR.  If the CSR is
-	valid for the newest spec, then the abort_version should be
-	PRIV_SPEC_CLASS_DRAFT.
-	(DECLARE_CSR_ALIAS): Same as DECLARE_CSR, but only for the obselete CSR.
-	* opcode/riscv.h (enum riscv_priv_spec_class): New enum class.  Define
-	the current supported privilege spec versions.
-	(struct riscv_csr_extra): Add new fields to store more information
-	about the CSR.  We use these information to find the suitable CSR
-	address when user choosing a specific privilege spec.
-
-2020-05-19  Alexander Fedotov  <alfedotov@gmail.com>
-
-	PR 25992
-	* opcode/arm.h (ARM_EXT2_V8R): Define. Modified ARM_AEXT2_V8R.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* opcode/ppc.h (PPC_OPERAND_ACC): Define.  Renumber following
-	PPC_OPERAND defines.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* elf/ppc64.h: Update comment.
-	* opcode/ppc.h (PPC_OPCODE_POWER10): Rename from PPC_OPCODE_POWERXX.
-
-2020-04-30  Alex Coplan  <alex.coplan@arm.com>
-
-	* opcode/aarch64.h (enum aarch64_opnd): Add
-	AARCH64_OPND_UNDEFINED.
-
-2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>
-
-	* elf/common.h (NT_ARC_V2): New macro definitions.
-
-2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
-
-	PR ld/25861
-	* elf/xtensa.h (elf_xtensa_reloc_type): New entries for
-	R_XTENSA_PDIFF{8,16,32} and R_XTENSA_NDIFF{8,16,32}.
-
-2020-04-21  Alan Modra  <amodra@gmail.com>
-
-	* elf/sh.h (STO_SH5_ISA32, SHF_SH5_ISA32, SHF_SH5_ISA32_MIXED),
-	(SHT_SH5_CR_SORTED, STT_DATALABEL): Delete.
-
-2020-04-10  Fangrui Song <maskray@google.com>
-
-	PR binutils/24613
-	* bfdlink.h (enum report_method): Delete RM_GENERATE_WARNING and
-	RM_GENERATE_ERROR. Add RM_DIAGNOSE.
-	(struct bfd_link_info): Add warn_unresolved_syms.
-
-2020-04-14  Stephen Casner  <casner@acm.org>
-
-	PR ld/25677
-	* aout/aout64.h (N_DATADDR): Add IMAGIC case.
-
-2020-04-02  Jan W. Jagersma  <jwjagersma@gmail.com>
-
-	* coff/go32exe.h: Remove file.
-	* coff/internal.h (struct internal_filehdr): Remove field
-	go32stub.  Remove flag F_GO32STUB.
-
-2020-04-01  Martin Liska  <mliska@suse.cz>
-	    Maciej W. Rozycki <macro@linux-mips.org>
-
-	PR lto/94249
-	* plugin-api.h: Fix a typo.
-
-2020-03-30  Nelson Chu  <nelson.chu@sifive.com>
-
-	* opcode/riscv-opc.h: Update CSR to 1.11.
-
-2020-03-26  John Baldwin  <jhb@FreeBSD.org>
-
-	* elf/common.h (AT_FREEBSD_BSDFLAGS): Define.
-
-2020-03-24  Martin Liska  <mliska@suse.cz>
-
-	PR lto/94249
-	* plugin-api.h: Add more robust endianess detection.
-
-2020-03-21  Martin Liska  <mliska@suse.cz>
-
-	* plugin-api.h (enum ld_plugin_symbol_type): Remove
-	comma after last value of an enum.
-	* lto-symtab.h (enum gcc_plugin_symbol_type): Likewise.
-
-2020-03-19  Martin Liska  <mliska@suse.cz>
-
-	* lto-symtab.h (enum gcc_plugin_symbol_type): New.
-	(enum gcc_plugin_symbol_section_kind): Likewise.
-
-2020-03-19  Martin Liska  <mliska@suse.cz>
-
-	* plugin-api.h (struct ld_plugin_symbol): Split
-	int def into 4 char fields.
-	(enum ld_plugin_symbol_type): New.
-	(enum ld_plugin_symbol_section_kind): New.
-	(enum ld_plugin_tag): Add LDPT_ADD_SYMBOLS_V2.
-
-2020-03-13  Kamil Rytarowski  <n54@gmx.com>
-
-	* elf/common.h (NT_NETBSDCORE_LWPSTATUS): New define.
-
-2020-03-13  Kamil Rytarowski  <n54@gmx.com>
-
-	* elf/common.h (NT_NETBSDCORE_AUXV): New define.
-
-2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>
-
-	* bfdlink.h (bfd_link_info): Add non_contiguous_regions and
-	non_contiguous_regions_warnings fields.
-
-2020-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* bfdlink.h (struct bfd_link_order): Add unit (bytes/octets) to
-	offset and size members.
-	* elf/internal.h (struct elf_internal_phdr): Likewise for
-	p_align member.
-	(struct elf_segment_map): Likewise for p_paddr and p_size
-	members
-
-2020-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* elf/internal.h (struct elf_internal_phdr): Add unit (octets)
-	to several member field comments.
-	(Elf_Internal_Shdr): likewise.
-
-2020-03-10  Alan Modra  <amodra@gmail.com>
-
-	* som/aout.h (SOM_AUX_ID_MANDATORY, SOM_SPACE_IS_LOADABLE),
-	(SOM_SYMBOL_HIDDEN, SOM_SYMBOL_HAS_LONG_RETURN): Use 1u << 31.
-	* som/lst.h (LST_SYMBOL_HIDDEN): Likewise.
-
-2020-03-03  Luis Machado  <luis.machado@linaro.org>
-
-	* elf/common.h (AT_L1I_CACHESIZE, AT_L1I_CACHEGEOMETRY)
-	(AT_L1D_CACHESIZE, AT_L1D_CACHEGEOMETRY, AT_L2_CACHESIZE)
-	(AT_L2_CACHEGEOMETRY, AT_L3_CACHESIZE, AT_L3_CACHEGEOMETRY)
-	(AT_MINSIGSTKSZ): New defines, imported from glibc.
-
-2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	Import from gcc mainline:
-	2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* hashtab.h (htab_remove_elt): Make a parameter const.
-	(htab_remove_elt_with_hash): Likewise.
-
-2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* opcode/riscv-opc.h: Extend DECLARE_CSR and DECLARE_CSR_ALIAS to
-	record riscv_csr_class.
-
-2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>
-	    Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* opcode/arm.h (ARM_EXT2_CDE): New extension macro.
-	(ARM_EXT2_CDE0): New extension macro.
-	(ARM_EXT2_CDE1): New extension macro.
-	(ARM_EXT2_CDE2): New extension macro.
-	(ARM_EXT2_CDE3): New extension macro.
-	(ARM_EXT2_CDE4): New extension macro.
-	(ARM_EXT2_CDE5): New extension macro.
-	(ARM_EXT2_CDE6): New extension macro.
-	(ARM_EXT2_CDE7): New extension macro.
-
-2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25469
-	* coff/internal.h (R_IMM16BE): Define.
-	* elf/z80.h (EF_Z80_MACH_Z80N): Define.
-	(R_Z80_16_BE): New reloc.
-
-2020-02-04  Alan Modra  <amodra@gmail.com>
-
-	* opcode/d30v.h (struct pd_reg): Make value field unsigned.
-
-2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* coff/internal.h (PE_IMAGE_DEBUG_TYPE_VC_FEATURE)
-	(PE_IMAGE_DEBUG_TYPE_POGO, PE_IMAGE_DEBUG_TYPE_ILTCG)
-	(PE_IMAGE_DEBUG_TYPE_MPX, PE_IMAGE_DEBUG_TYPE_REPRO): Add.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.34 branch created.
-
-2020-01-17  Nick Clifton  <nickc@redhat.com>
-
-	* Import from gcc mainline:
-	2019-06-10  Martin Liska  <mliska@suse.cz>
-
-	* ansidecl.h (ATTRIBUTE_WARN_UNUSED_RESULT): New macro.
-	* libiberty.h (xmalloc): Use it.
-	(xrealloc): Likewise.
-	(xcalloc): Likewise.
-	(xstrdup): Likewise.
-	(xstrndup): Likewise.
-	(xmemdup): Likewise.
-
-	2019-06-10  Martin Liska  <mliska@suse.cz>
-
-	* ansidecl.h:
-	(ATTRIBUTE_RESULT_SIZE_1): Define new macro.
-	(ATTRIBUTE_RESULT_SIZE_2): Likewise.
-	(ATTRIBUTE_RESULT_SIZE_1_2): Likewise.
-	* libiberty.h (xmalloc): Add RESULT_SIZE attribute.
-	(xrealloc): Likewise.
-	(xcalloc): Likewise.
-
-	2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>
-
-	* demangle.h (struct demangle_component): Add member
-	d_counting.
-
-	2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
-
-	* demangle.h (rust_demangle_callback): Add.
-
-	2019-07-18  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
-
-	* demangle.h (rust_is_mangled): Move to libiberty/rust-demangle.h.
-	(rust_demangle_sym): Move to libiberty/rust-demangle.h.
-
-2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	PR 25376
-	* opcodes/arm.h (FPU_MVE, FPU_MVE_FPU): Move these features to...
-	(ARM_EXT2_MVE, ARM_EXT2_MVE_FP): ... the CORE_HIGH space.
-	(ARM_ANY): Redefine to not include any MVE bits.
-	(ARM_FEATURE_ALL): Removed.
-
-2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* opcode/msp430.h (enum msp430_expp_e): New.
-	(struct msp430_operand_s): Add expp member to struct.
-
-2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
-
-	* elf/arc-cpu.def: Update ARC cpu list.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* opcode/tic4x.h (EXTR): Delete.
-	(EXTRU, EXTRS, INSERTU, INSERTS): Rewrite without zero/sign
-	extension using shifts.  Do trim INSERTU value to specified bitfield.
-
-2020-01-10  Alan Modra  <amodra@gmail.com>
-
-	* opcode/spu.h: Formatting.
-	(UNSIGNED_EXTRACT): Use 1u.
-	(SIGNED_EXTRACT): Don't sign extend with shifts.
-	(DECODE_INSN_I9a, DECODE_INSN_I9b): Avoid left shift of signed value.
-	Keep result signed.
-	(DECODE_INSN_U9a, DECODE_INSN_U9b): Delete.
-
-2020-01-07  Shahab Vahedi  <shahab@synopsys.com>
-
-	* opcode/arc.h (insn_class_t): Add 'LLOCK' and 'SCOND'.
-
-2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	* coff/internal.h: Add defintions of Z80 reloc names.
-
-2020-01-02  Christian Biesinger  <cbiesinger@google.com>
-
-	* opcode/s12z.h: Undef REG_Y.
-
-2020-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/libctf/ChangeLog b/libctf/ChangeLog
index bf604421bb2..3df935a6d6a 100644
--- a/libctf/ChangeLog
+++ b/libctf/ChangeLog
@@ -1,1042 +1,229 @@
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
-	Binutils 2.35 branch created.
+	This is the 2.36 release.
 
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+2021-01-19  Nick Alcock  <nick.alcock@oracle.com>
 
-	* aclocal.m4: Add config/gettext-sister.m4: Shuffle into
-	alphabetical order.
-	* configure.ac: Add ZW_GNU_GETTEXT_SISTER_DIR.
-	* config.h.in: Regenerated.
-	* Makefile.in: Likewise.
-	* configure: Likewise.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-create.c: Include <unistd.h>.
-	* ctf-open-bfd.c: Likewise.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	PR libctf/25120
-	* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.
-	* swap.h (bswap_16): Do not assume that presence of <byteswap.h>
-	means this is declared.
-	(bswap_32): Likewise.
-	(bswap_64): Likewise.
-	(bswap_identity_64): Remove, unused.
-	* configure: Regenerated.
-	* config.h.in: Likewise.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	PR libctf/25120
-	* ctf-impl.h (_libctf_printflike_): Add non-GNU-C fallback.
-	(_libctf_unlikely_): Likewise.
-	(_libctf_unused): Likewise.
-	(_libctf_malloc_): Likewise.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	PR libctf/25120
-	* ctf-archive.c (search_nametbl): No longer global: declare...
-	(ctf_arc_open_by_name_internal): ... here. Use bsearch_r.
-	(search_modent_by_name): Take and use ARG for the nametbl.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_new_archive_internal): Declare.
-	(ctf_arc_bufopen): Remove.
-	(ctf_archive_internal) <ctfi_free_symsect>: New.
-	* ctf-archive.c (ctf_arc_close): Use it.
-	(ctf_arc_bufopen): Fuse into...
-	(ctf_new_archive_internal): ... this, moved across from...
-	* ctf-open-bfd.c: ... here.
-	(ctf_bfdopen_ctfsect): Use ctf_arc_bufopen.
-	* libctf.ver: Add it.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+	* ctf-create.c (membadd): Transform ""-named members into
+	NULL-named ones.
+	* testsuite/libctf-regression/type-add-unnamed-struct*: New test.
 
-	* ctf-create.c (ctf_add_forward): Intern in the right namespace.
-	(ctf_dtd_delete): Remove correspondingly.
-	(ctf_rollback): Likewise.
+2021-01-19  Nick Alcock  <nick.alcock@oracle.com>
 
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+	* ctf-lookup.c (ctf_lookup_by_name_internal): Do not return the
+	base type if looking up a nonexistent pointer type.
+	* testsuite/libctf-regression/pptrtab*: Test it.
 
-	* ctf-create.c (ctf_add_type_internal): Hand back existing types
-	unchanged.
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+	* 2.36 release branch crated.
 
-	* ctf-create.c (ctf_add_forward): Don't add forwards to
-	types that already exist.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open.c (init_types): Only intern root-visible types.
-	* ctf-create.c (ctf_dtd_insert): Likewise.
-	(ctf_dtd_delete): Only remove root-visible types.
-	(ctf_rollback): Likewise.
-	(ctf_add_generic): Adjust.
-	(ctf_add_struct_sized): Adjust comment.
-	(ctf_add_union_sized): Likewise.
-	(ctf_add_enum): Likewise.
-	* ctf-impl.h (ctf_dtd_insert): Adjust prototype.
-
-2020-03-11  John Baldwin  <jhb@FreeBSD.org>
-
-	* swap.h (bswap_identity_64): Make static.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.34 branch created.
-
-2020-01-05  Joel Brobecker  <brobecker@adacore.com>
-
-	PR binutils/25155:
-	* configure.ac: Add AC_CHECK_DECLS([asprintf]).
-	* configure, config.h.in: Regenerate.
-
-2020-01-01  Alan Modra  <amodra@gmail.com>
-
-	Update year range in copyright notice of all files.
+2021-01-09  Alan Modra  <amodra@gmail.com>
 
-2019-10-16  Simon Marchi  <simon.marchi@polymtl.ca>
+	* configure: Regenerate.
 
-	* swap.h (bswap_16, bswap_32, bswap_64): Make static.
+2021-01-07  Samuel Thibault  <samuel.thibault@gnu.org>
 
-2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
+	* configure: Regenerate.
 
-	* ctf-open.c (ctf_bufopen_internal): Fix tabdamage.
-	* ctf-types.c (ctf_type_lname): Likewise.
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
 
-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+	* testsuite/libctf-lookup/struct-iteration.c (main):
+	ctf_member_count returns an int.
 
-	* ctf-open.c (ctf_import): Do not leak a ctf_file_t ref on every
-	ctf_import after the first for a given file.
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
 
-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+	* Makefile.am (BASEDIR): New.
+	(BFDDIR): Likewise.
+	(check-DEJAGNU): Add development.exp to prerequisites.
+	(development.exp): New.
+	(CONFIG_STATUS_DEPENDENCIES): New.
+	(EXTRA_DEJAGNU_SITE_CONFIG): Likewise.
+	(DISTCLEANFILES): Likewise.
+	* Makefile.in: Regenerated.
+	* testsuite/lib/ctf-lib.exp (check_ctf_available): Return boolean.
+	* testsuite/libctf-lookup/lookup.exp: Call check_ctf_available.
+	* testsuite/libctf-regression/regression.exp: Likewise.
 
-	* ctf-impl.h (ctf_str_append_noerr): Declare.
-	* ctf-util.c (ctf_str_append_noerr): Define in terms of
-	ctf_str_append.
-	* ctf-dump.c (str_append): New, call it.
-	(ctf_dump_format_type): Use str_append, not ctf_str_append.
-	(ctf_dump_label): Likewise.
-	(ctf_dump_objts): Likewise.
-	(ctf_dump_funcs): Likewise.
-	(ctf_dump_var): Likewise.
-	(ctf_dump_member): Likewise.
-	(ctf_dump_type): Likewise.
-	(ctf_dump): Likewise.
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
 
-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+	* ctf-types.c (ctf_type_aname): Print forwards to unions and enums
+	properly.
 
-	* ctf-impl.h (ctf_alloc): Remove.
-	(ctf_free): Likewise.
-	(ctf_strdup): Likewise.
-	* ctf-subr.c (ctf_alloc): Remove.
-	(ctf_free): Likewise.
-	* ctf-util.c (ctf_strdup): Remove.
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
 
-	* ctf-create.c (ctf_serialize): Use malloc, not ctf_alloc; free, not
-	ctf_free; strdup, not ctf_strdup.
-	(ctf_dtd_delete): Likewise.
-	(ctf_dvd_delete): Likewise.
-	(ctf_add_generic): Likewise.
-	(ctf_add_function): Likewise.
-	(ctf_add_enumerator): Likewise.
-	(ctf_add_member_offset): Likewise.
-	(ctf_add_variable): Likewise.
-	(membadd): Likewise.
-	(ctf_compress_write): Likewise.
-	(ctf_write_mem): Likewise.
-	* ctf-decl.c (ctf_decl_push): Likewise.
-	(ctf_decl_fini): Likewise.
-	(ctf_decl_sprintf): Likewise.  Check for OOM.
-	* ctf-dump.c (ctf_dump_append): Use malloc, not ctf_alloc; free, not
-	ctf_free; strdup, not ctf_strdup.
-	(ctf_dump_free): Likewise.
-	(ctf_dump): Likewise.
-	* ctf-open.c (upgrade_types_v1): Likewise.
-	(init_types): Likewise.
-	(ctf_file_close): Likewise.
-	(ctf_bufopen_internal): Likewise.  Check for OOM.
-	(ctf_parent_name_set): Likewise: report the OOM to the caller.
-	(ctf_cuname_set): Likewise.
+	* ctf-impl.h (ctf_dict_t) <ctf_pptrtab>: New.
+	<ctf_pptrtab_len>: New.
+	<ctf_pptrtab_typemax>: New.
+	* ctf-create.c (ctf_serialize): Update accordingly.
+	(ctf_add_reftype): Note that we don't need to update pptrtab here,
+	despite updating ptrtab.
+	* ctf-open.c (ctf_dict_close): Destroy the pptrtab.
 	(ctf_import): Likewise.
-	* ctf-string.c (ctf_str_purge_atom_refs): Use malloc, not ctf_alloc;
-	free, not ctf_free; strdup, not ctf_strdup.
-	(ctf_str_free_atom): Likewise.
-	(ctf_str_create_atoms): Likewise.
-	(ctf_str_add_ref_internal): Likewise.
-	(ctf_str_remove_ref): Likewise.
-	(ctf_str_write_strtab): Likewise.
-
-2019-08-09  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-types.c (ctf_type_encoding): Fix the dynamic case to
-	work right for non-int/fps.
-
-2019-08-08  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-types.c (ctf_type_name): Don't strlen a potentially-
-	null pointer.
-
-2019-08-07  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_file_t) <ctf_add_processing>: New.
-	* ctf-open.c (ctf_file_close): Free it.
-	* ctf-create.c (ctf_serialize): Adjust.
-	(membcmp): When reporting a conflict due to an error, report the
-	error.
-	(ctf_add_type): Turn into a ctf_add_processing wrapper.  Rename to...
-	(ctf_add_type_internal): ... this.  Hand back types we are already
-	in the middle of adding immediately.  Hand back structs/unions with
-	the same number of members immediately.  Do not walk the dynamic
-	list.  Call ctf_add_type_internal, not ctf_add_type.  Handle
-	forwards promoted to other types and the inverse case identically.
-	Add structs to the mapping as soon as we intern them, before they
-	gain any members.
-
-2019-08-09  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_names_t): New.
-	(ctf_lookup_t) <ctf_hash>: Now a ctf_names_t, not a ctf_hash_t.
-	(ctf_file_t) <ctf_structs>: Likewise.
-	<ctf_unions>: Likewise.
-	<ctf_enums>: Likewise.
-	<ctf_names>: Likewise.
-	<ctf_lookups>: Improve comment.
-	<ctf_ptrtab_len>: New.
-	<ctf_prov_strtab>: New.
-	<ctf_str_prov_offset>: New.
-	<ctf_dtbyname>: Remove, redundant to the names hashes.
-	<ctf_dtnextid>: Remove, redundant to ctf_typemax.
-	(ctf_dtdef_t) <dtd_name>: Remove.
-	<dtd_data>: Note that the ctt_name is now populated.
-	(ctf_str_atom_t) <csa_offset>: This is now the strtab
-	offset for internal strings too.
-	<csa_external_offset>: New, the external strtab offset.
-	(CTF_INDEX_TO_TYPEPTR): Handle the LCTF_RDWR case.
-	(ctf_name_table): New declaration.
-	(ctf_lookup_by_rawname): Likewise.
-	(ctf_lookup_by_rawhash): Likewise.
-	(ctf_set_ctl_hashes): Likewise.
-	(ctf_serialize): Likewise.
-	(ctf_dtd_insert): Adjust.
-	(ctf_simple_open_internal): Likewise.
-	(ctf_bufopen_internal): Likewise.
-	(ctf_list_empty_p): Likewise.
-	(ctf_str_remove_ref): Likewise.
-	(ctf_str_add): Returns uint32_t now.
-	(ctf_str_add_ref): Likewise.
-	(ctf_str_add_external): Now returns a boolean (int).
-	* ctf-string.c (ctf_strraw_explicit): Check the ctf_prov_strtab
-	for strings in the appropriate range.
-	(ctf_str_create_atoms): Create the ctf_prov_strtab.  Detect OOM
-	when adding the null string to the new strtab.
-	(ctf_str_free_atoms): Destroy the ctf_prov_strtab.
-	(ctf_str_add_ref_internal): Add make_provisional argument.  If
-	make_provisional, populate the offset and fill in the
-	ctf_prov_strtab accordingly.
-	(ctf_str_add): Return the offset, not the string.
-	(ctf_str_add_ref): Likewise.
-	(ctf_str_add_external): Return a success integer.
-	(ctf_str_remove_ref): New, remove a single ref.
-	(ctf_str_count_strtab): Do not count the initial null string's
-	length or the existence or length of any unreferenced internal
-	atoms.
-	(ctf_str_populate_sorttab): Skip atoms with no refs.
-	(ctf_str_write_strtab): Populate the nullstr earlier.  Add one
-	to the cts_len for the null string, since it is no longer done
-	in ctf_str_count_strtab.  Adjust for csa_external_offset rename.
-	Populate the csa_offset for both internal and external cases.
-	Flush the ctf_prov_strtab afterwards, and reset the
-	ctf_str_prov_offset.
-	* ctf-create.c (ctf_grow_ptrtab): New.
-	(ctf_create): Call it.	Initialize new fields rather than old
-	ones.  Tell ctf_bufopen_internal that this is a writable dictionary.
-	Set the ctl hashes and data model.
-	(ctf_update): Rename to...
-	(ctf_serialize): ... this.  Leave a compatibility function behind.
-	Tell ctf_simple_open_internal that this is a writable dictionary.
-	Pass the new fields along from the old dictionary.  Drop
-	ctf_dtnextid and ctf_dtbyname.	Use ctf_strraw, not dtd_name.
-	Do not zero out the DTD's ctt_name.
-	(ctf_prefixed_name): Rename to...
-	(ctf_name_table): ... this.  No longer return a prefixed name: return
-	the applicable name table instead.
-	(ctf_dtd_insert): Use it, and use the right name table.	 Pass in the
-	kind we're adding.  Migrate away from dtd_name.
-	(ctf_dtd_delete): Adjust similarly.  Remove the ref to the
-	deleted ctt_name.
-	(ctf_dtd_lookup_type_by_name): Remove.
-	(ctf_dynamic_type): Always return NULL on read-only dictionaries.
-	No longer check ctf_dtnextid: check ctf_typemax instead.
-	(ctf_snapshot): No longer use ctf_dtnextid: use ctf_typemax instead.
-	(ctf_rollback): Likewise.  No longer fail with ECTF_OVERROLLBACK. Use
-	ctf_name_table and the right name table, and migrate away from
-	dtd_name as in ctf_dtd_delete.
-	(ctf_add_generic): Pass in the kind explicitly and pass it to
-	ctf_dtd_insert. Use ctf_typemax, not ctf_dtnextid.  Migrate away
-	from dtd_name to using ctf_str_add_ref to populate the ctt_name.
-	Grow the ptrtab if needed.
-	(ctf_add_encoded): Pass in the kind.
-	(ctf_add_slice): Likewise.
-	(ctf_add_array): Likewise.
-	(ctf_add_function): Likewise.
-	(ctf_add_typedef): Likewise.
-	(ctf_add_reftype): Likewise. Initialize the ctf_ptrtab, checking
-	ctt_name rather than dtd_name.
-	(ctf_add_struct_sized): Pass in the kind.  Use
-	ctf_lookup_by_rawname, not ctf_hash_lookup_type /
-	ctf_dtd_lookup_type_by_name.
-	(ctf_add_union_sized): Likewise.
-	(ctf_add_enum): Likewise.
-	(ctf_add_enum_encoded): Likewise.
-	(ctf_add_forward): Likewise.
-	(ctf_add_type): Likewise.
-	(ctf_compress_write): Call ctf_serialize: adjust for ctf_size not
-	being initialized until after the call.
-	(ctf_write_mem): Likewise.
-	(ctf_write): Likewise.
-	* ctf-archive.c (arc_write_one_ctf): Likewise.
-	* ctf-lookup.c (ctf_lookup_by_name): Use ctf_lookuup_by_rawhash, not
-	ctf_hash_lookup_type.
-	(ctf_lookup_by_id): No longer check the readonly types if the
-	dictionary is writable.
-	* ctf-open.c (init_types): Assert that this dictionary is not
-	writable.  Adjust to use the new name hashes, ctf_name_table,
-	and ctf_ptrtab_len.  GNU style fix for the final ptrtab scan.
-	(ctf_bufopen_internal): New 'writable' parameter.  Flip on LCTF_RDWR
-	if set.	 Drop out early when dictionary is writable.  Split the
-	ctf_lookups initialization into...
-	(ctf_set_cth_hashes): ... this new function.
-	(ctf_simple_open_internal): Adjust.  New 'writable' parameter.
-	(ctf_simple_open): Adjust accordingly.
-	(ctf_bufopen): Likewise.
-	(ctf_file_close): Destroy the appropriate name hashes.	No longer
-	destroy ctf_dtbyname, which is gone.
-	(ctf_getdatasect): Remove spurious "extern".
-	* ctf-types.c (ctf_lookup_by_rawname): New, look up types in the
-	specified name table, given a kind.
-	(ctf_lookup_by_rawhash): Likewise, given a ctf_names_t *.
-	(ctf_member_iter): Add support for iterating over the
-	dynamic type list.
-	(ctf_enum_iter): Likewise.
-	(ctf_variable_iter): Likewise.
-	(ctf_type_rvisit): Likewise.
-	(ctf_member_info): Add support for types in the dynamic type list.
-	(ctf_enum_name): Likewise.
-	(ctf_enum_value): Likewise.
-	(ctf_func_type_info): Likewise.
-	(ctf_func_type_args): Likewise.
-	* ctf-link.c (ctf_accumulate_archive_names): No longer call
-	ctf_update.
-	(ctf_link_write): Likewise.
-	(ctf_link_intern_extern_string): Adjust for new
-	ctf_str_add_external return value.
-	(ctf_link_add_strtab): Likewise.
-	* ctf-util.c (ctf_list_empty_p): New.
-
-2019-08-05  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-types.c (ctf_type_resolve): Return ECTF_NONREPRESENTABLE on
-	type zero.
-	* ctf-create.c (ctf_add_type): Detect and skip nonrepresentable
-	members and types.
-	(ctf_add_variable): Likewise for variables pointing to them.
-	* ctf-link.c (ctf_link_one_type): Do not warn for nonrepresentable
-	type link failure, but do warn for others.
-	* ctf-dump.c (ctf_dump_format_type): Likewise.  Do not assume all
-	errors to be ENOMEM.
-	(ctf_dump_member): Likewise.
-	(ctf_dump_type): Likewise.
-	(ctf_dump_header_strfield): Do not assume all errors to be ENOMEM.
-	(ctf_dump_header_sectfield): Do not assume all errors to be ENOMEM.
-	(ctf_dump_header): Likewise.
-	(ctf_dump_label): likewise.
-	(ctf_dump_objts): likewise.
-	(ctf_dump_funcs): likewise.
-	(ctf_dump_var): likewise.
-	(ctf_dump_str): Likewise.
-
-2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
-
-	* configure.ac (AC_DISABLE_SHARED): New, like opcodes/.
-	(LT_INIT): Likewise.
-	(AM_INSTALL_LIBBFD): Likewise.
-	(dlopen): Note why this is necessary in a comment.
-	(SHARED_LIBADD): Initialize for possibly-PIC libiberty: derived from
-	opcodes/.
-	(SHARED_LDFLAGS): Likewise.
-	(BFD_LIBADD): Likewise, for libbfd.
-	(BFD_DEPENDENCIES): Likewise.
-	(VERSION_FLAGS): Initialize, using a version script if ld supports
-	one, or libtool -export-symbols-regex otherwise.
-	(AC_CONFIG_MACRO_DIR): Add ../BFD.
-	* Makefile.am (ACLOCAL_AMFLAGS): Likewise.
-	(INCDIR): New.
-	(AM_CPPFLAGS): Use $(srcdir), not $(top_srcdir).
-	(noinst_LIBRARIES): Replace with...
-	[INSTALL_LIBBFD] (lib_LTLIBRARIES): This, or...
-	[!INSTALL_LIBBFD] (noinst_LTLIBRARIES): ... this, mentioning new
-	libctf-nobfd.la as well.
-	[INSTALL_LIBCTF] (include_HEADERS): Add the CTF headers.
-	[!INSTALL_LIBCTF] (include_HEADERS): New, empty.
-	(libctf_a_SOURCES): Rename to...
-	(libctf_nobfd_la_SOURCES): ... this, all of libctf other than
-	ctf-open-bfd.c.
-	(libctf_la_SOURCES): Now derived from libctf_nobfd_la_SOURCES,
-	with ctf-open-bfd.c added.
-	(libctf_nobfd_la_LIBADD): New, using @SHARED_LIBADD@.
-	(libctf_la_LIBADD): New, using @BFD_LIBADD@ as well.
-	(libctf_la_DEPENDENCIES): New, using @BFD_DEPENDENCIES@.
-	* Makefile.am [INSTALL_LIBCTF]: Use it.
-	* aclocal.m4: Add ../bfd/acinclude.m4, ../config/acx.m4, and the
-	libtool macros.
-	* libctf.ver: New, everything is version LIBCTF_1.0 currently (even
-	the unstable components).
+	(ctf_import_unref): Likewise.
+	* ctf-lookup.c (grow_pptrtab): New.
+	(refresh_pptrtab): New, update a pptrtab.
+	(ctf_lookup_by_name): Turn into a wrapper around (and rename to)...
+	(ctf_lookup_by_name_internal): ... this: construct the pptrtab, and
+	use it in addition to the parent's ptrtab when parent dicts are
+	searched.
+	* testsuite/libctf-regression/regression.exp: New testsuite for
+	regression tests.
+	* testsuite/libctf-regression/pptrtab*: New test.
+	* testsuite/libctf-writable/writable.exp: New testsuite for tests of
+	writable CTF dicts.
+	* testsuite/libctf-writable/pptrtab*: New test.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_archive_iter): Remove outdated comment.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (struct ctf_next) <u.ctn_next>: Move to...
+	<ctn_next>: ... here.
+	* ctf-util.c (ctf_next_destroy): Unconditionally destroy it.
+	* ctf-lookup.c (ctf_symbol_next): Adjust accordingly.
+	* ctf-types.c (ctf_member_iter): Reimplement in terms of...
+	(ctf_member_next): ... this.  Support recursive unnamed member
+	iteration (off by default).
+	(ctf_member_info): Look up members in unnamed sub-structs.
+	* ctf-dedup.c (ctf_dedup_rhash_type): Adjust ctf_member_next call.
+	(ctf_dedup_emit_struct_members): Likewise.
+	* testsuite/libctf-lookup/struct-iteration-ctf.c: Test empty unnamed
+	members, and a normal member after the end.
+	* testsuite/libctf-lookup/struct-iteration.c: Verify that
+	ctf_member_count is consistent with the number of successful returns
+	from a non-recursive ctf_member_next.
+	* testsuite/libctf-lookup/struct-iteration-*: New, test iteration
+	over struct members.
+	* testsuite/libctf-lookup/struct-lookup.c: New test.
+	* testsuite/libctf-lookup/struct-lookup.lk: New test.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c (ctf_link_warn_outdated_inputs): New.
+	(ctf_link_write): Call it.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/libctf-lookup/enum-symbol.lk: New symbol-lookup test.
+	* testsuite/libctf-lookup/enum-symbol-ctf.c: New CTF input.
+	* testsuite/libctf-lookup/enum-symbol.c: New lookup test.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.am (EXPECT): New.
+	(RUNTEST): Likewise.
+	(RUNTESTFLAGS): Likewise.
+	(CC_FOR_TARGET): Likewise.
+	(check-DEJAGNU): Likewise.
+	(AUTOMAKE_OPTIONS): Add dejagnu.
 	* Makefile.in: Regenerated.
-	* config.h.in: Likewise.
-	* configure: Likewise.
-
-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
-
-	* configure.ac (INSTALL_LIBCTF): New, controlled by
-	--enable-install-libctf.
-	[INSTALL_LIBCTF] (lib_LIBRARIES): Add libctf.a.
-	* Makefile.in: Regenerated.
-	* configure: Regenerated.
-
-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-archive.c (ctf_arc_close): Call ctfi_bfd_close if set.
-	* ctf-open-bfd.c (ctf_bfdclose): Fix comment.
-
-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open-bfd.c (ctf_fdopen): Call bfd_set_cacheable.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (includes): Include <sys/param.h> here.
-
-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open.c (flip_lbls): Eschew for-loop initial declarations.
-	(flip_objts): Likewise.
-	(flip_vars): Likewise.
-	(flip_types): Likewise.
-
-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-hash.c (ctf_hashtab_insert): Pass in the key and value
-	freeing functions: if set, free the key and value if the slot
-	already exists.  Always reassign the key.
-	(ctf_dynhash_insert): Adjust call appropriately.
-	(ctf_hash_insert_type): Likewise.
-
-2019-08-03  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-create.c (ctf_add_type): Look up and use the forwarded-to
-	type kind.  Allow forwards to unify with pre-existing structs/
-	unions/enums.
-
-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_file_t) <ctf_link_cu_mappping>: New.
-	<ctf_link_memb_name_changer>: Likewise.
-	<ctf_link_memb_name_changer_arg>: Likewise.
-	* ctf-create.c (ctf_update): Update accordingly.
-	* ctf-open.c (ctf_file_close): Likewise.
-	* ctf-link.c (ctf_create_per_cu): Apply the cu mapping.
-	(ctf_link_add_cu_mapping): New.
-	(ctf_link_set_memb_name_changer): Likewise.
-	(ctf_change_parent_name): New.
-	(ctf_name_list_accum_cb_arg_t) <dynames>: New, storage for names
-	allocated by the caller's ctf_link_memb_name_changer.
-	<ndynames>: Likewise.
-	(ctf_accumulate_archive_names): Call the ctf_link_memb_name_changer.
-	(ctf_link_write): Likewise (for _CTF_SECTION only): also call
-	ctf_change_parent_name.  Free any resulting names.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-link.c (ctf_create_per_cu): New, refactored out of...
-	(ctf_link_one_type): ... here, with parent-name setting added.
-	(check_variable): New.
-	(ctf_link_one_variable): Likewise.
-	(ctf_link_one_input_archive_member): Call it.
-	* ctf-error.c (_ctf_errlist): Updated with new errors.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_file_t): New field ctf_link_type_mapping.
-	(struct ctf_link_type_mapping_key): New.
-	(ctf_hash_type_mapping_key): Likewise.
-	(ctf_hash_eq_type_mapping_key): Likewise.
-	(ctf_add_type_mapping): Likewise.
-	(ctf_type_mapping): Likewise.
-	(ctf_dynhash_empty): Likewise.
-	* ctf-open.c (ctf_file_close): Update accordingly.
-	* ctf-create.c (ctf_update): Likewise.
-	(ctf_add_type): Populate the mapping.
-	* ctf-hash.c (ctf_hash_type_mapping_key): Hash a type mapping key.
-	(ctf_hash_eq_type_mapping_key): Check the key for equality.
-	(ctf_dynhash_insert): Fix comment typo.
-	(ctf_dynhash_empty): New.
-	* ctf-link.c (ctf_add_type_mapping): New.
-	(ctf_type_mapping): Likewise.
-	(empty_link_type_mapping): New.
-	(ctf_link_one_input_archive): Call it.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-link.c: New file, linking of the string and type sections.
-	* Makefile.am (libctf_a_SOURCES): Add it.
+	* testsuite/config/default.exp: New.
+	* testsuite/lib/ctf-lib.exp: Likewise.
+	* testsuite/libctf-lookup/enum.lk: New test.
+	* testsuite/libctf-lookup/enum-ctf.c: New CTF input.
+	* testsuite/libctf-lookup/enum.c: New lookup test.
+	* testsuite/libctf-lookup/ambiguous-struct*.c: New test.
+	* testsuite/libctf-lookup/lookup.exp: New.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac (BFD_LIBADD): Remove.
+	(BFD_DEPENDENCIES): Likewise. Remove associated cases.
+	(SHARED_LIBADD): Rename to...
+	(CTF_LIBADD): ... this.  Stick in a suitable libiberty even when
+	linking statically.
+	* Makefile.am (libctf_nobfd_la_LIBADD): Adjust accordingly.
+	libctf uses libintl.
+	(libctf_la_LIBADD): Reference libbfd.la directly, not via
+	BFD_LIBADD.
+	(libctf_la_DEPENDENCIES): Remove.
 	* Makefile.in: Regenerate.
-
-	* ctf-impl.h (ctf_file_t): New fields ctf_link_inputs,
-	ctf_link_outputs.
-	* ctf-create.c (ctf_update): Update accordingly.
-	* ctf-open.c (ctf_file_close): Likewise.
-	* ctf-error.c (_ctf_errlist): Updated with new errors.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-dump.c (ctf_dump_funcs): Check the right error value.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-dump.c (ctf_dump): Use ctf_type_iter_all to dump types, not
-	ctf_type_iter.
-	(ctf_dump_type): Pass down the flag from ctf_type_iter_all.
-	(ctf_dump_format_type): Add non-root-type { } notation.
-	Add root flag to prototype.
-	(ctf_dump_label): Adjust accordingly.
-	(ctf_dump_objts): Likewise.
-	(ctf_dump_var): Likewise.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-create.c (ctf_compress_write): Fix double-free.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-archive.c (ctf_arc_write): Split off, and reimplement in terms
-	of...
-	(ctf_arc_write_fd): ... this new function.
-	* ctf-create.c (ctf_write_mem): New.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_str_atom_t) <csa_offset>: New field.
-	(ctf_file_t) <ctf_syn_ext_strtab>: Likewise.
-	(ctf_str_add_ref): Name the last arg.
-	(ctf_str_add_external) New.
-	(ctf_str_add_strraw_explicit): Likewise.
-	(ctf_simple_open_internal): Likewise.
-	(ctf_bufopen_internal): Likewise.
-
-	* ctf-string.c (ctf_strraw_explicit): Split from...
-	(ctf_strraw): ... here, with new support for ctf_syn_ext_strtab.
-	(ctf_str_add_ref_internal): Return the atom, not the
-	string.
-	(ctf_str_add): Adjust accordingly.
-	(ctf_str_add_ref): Likewise.  Move up in the file.
-	(ctf_str_add_external): New: update the csa_offset.
-	(ctf_str_count_strtab): Only account for strings with no csa_offset
-	in the internal strtab length.
-	(ctf_str_write_strtab): If the csa_offset is set, update the
-	string's refs without writing the string out, and update the
-	ctf_syn_ext_strtab.  Make OOM handling less ugly.
-	* ctf-create.c (struct ctf_sort_var_arg_cb): New.
-	(ctf_update): Handle failure to populate the strtab.  Pass in the
-	new ctf_sort_var arg.  Adjust for ctf_syn_ext_strtab addition.
-	Call ctf_simple_open_internal, not ctf_simple_open.
-	(ctf_sort_var): Call ctf_strraw_explicit rather than looking up
-	strings by hand.
-	* ctf-hash.c (ctf_hash_insert_type): Likewise (but using
-	ctf_strraw).  Adjust to diagnose ECTF_STRTAB nonetheless.
-	* ctf-open.c (init_types): No longer filter out ECTF_STRTAB.
-	(ctf_file_close): Destroy the ctf_syn_ext_strtab.
-	(ctf_simple_open): Rename to, and reimplement as a wrapper around...
-	(ctf_simple_open_internal): ... this new function, which calls
-	ctf_bufopen_internal.
-	(ctf_bufopen): Rename to, and reimplement as a wrapper around...
-	(ctf_bufopen_internal): ... this new function, which sets
-	ctf_syn_ext_strtab.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf_types.c (ctf_type_iter_all): New.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open.c (init_symtab): Check for overflow against the right
-	section.
-	(upgrade_header): Set cth_objtidxoff, cth_funcidxoff to zero-length.
-	(upgrade_types_v1): Note that these sections are not checked.
-	(flip_header): Endian-swap the header fields.
-	(flip_ctf): Endian-swap the sections.
-	(flip_objts): Update comment.
-	(ctf_bufopen): Check header offsets and alignment for validity.
-
-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open-bfd.c: Add <assert.h>.
-	(ctf_bfdopen_ctfsect): Open string and symbol tables using
-	techniques borrowed from bfd_elf_sym_name.
-	(ctf_new_archive_internal): Improve comment.
-	* ctf-archive.c (ctf_arc_close): Do not free the ctfi_strsect.
-	* ctf-open.c (ctf_bufopen): Allow opening with a string section but
-	no symbol section, but not vice versa.
-
-2019-07-08  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_file_t): New field ctf_openflags.
-	* ctf-open.c (ctf_bufopen): Set it.  No longer dump header offsets.
-	* ctf-dump.c (dump_header): New function, dump the CTF header.
-	(ctf_dump): Call it.
-	(ctf_dump_header_strfield): New function.
-	(ctf_dump_header_sectfield): Likewise.
-
-2019-07-06  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_file_t): New fields ctf_header, ctf_dynbase,
-	ctf_cuname, ctf_dyncuname: ctf_base and ctf_buf are no longer const.
-	* ctf-open.c (ctf_set_base): Preserve the gap between ctf_buf and
-	ctf_base: do not assume that it is always sizeof (ctf_header_t).
-	Print out ctf_cuname: only print out ctf_parname if set.
-	(ctf_free_base): Removed, ctf_base is no longer freed: free
-	ctf_dynbase instead.
-	(ctf_set_version): Fix spacing.
-	(upgrade_header): New, in-place header upgrading.
-	(upgrade_types): Rename to...
-	(upgrade_types_v1): ... this.  Free ctf_dynbase, not ctf_base.  No
-	longer track old and new headers separately.  No longer allow for
-	header sizes explicitly: squeeze the headers out on upgrade (they
-	are preserved in fp->ctf_header).  Set ctf_dynbase, ctf_base and
-	ctf_buf explicitly.  Use ctf_free, not ctf_free_base.
-	(upgrade_types): New, also handle ctf_parmax updating.
-	(flip_header): Flip ctf_cuname.
-	(flip_types): Flip BUF explicitly rather than deriving BUF from
-	BASE.
-	(ctf_bufopen): Store the header in fp->ctf_header.  Correct minimum
-	required alignment of objtoff and funcoff.  No longer store it in
-	the ctf_buf unless that buf is derived unmodified from the input.
-	Set ctf_dynbase where ctf_base is dynamically allocated. Drop locals
-	that duplicate fields in ctf_file: move allocation of ctf_file
-	further up instead.  Call upgrade_header as needed.  Move
-	version-specific ctf_parmax initialization into upgrade_types.  More
-	concise error handling.
-	(ctf_file_close): No longer test for null pointers before freeing.
-	Free ctf_dyncuname, ctf_dynbase, and ctf_header.  Do not call
-	ctf_free_base.
-	(ctf_cuname): New.
-	(ctf_cuname_set): New.
-	* ctf-create.c (ctf_update): Populate ctf_cuname.
-	(ctf_gzwrite): Write out the header explicitly.  Remove obsolescent
-	comment.
-	(ctf_write): Likewise.
-	(ctf_compress_write): Get the header from ctf_header, not ctf_base.
-	Fix the compression length: fp->ctf_size never counted the CTF
-	header.  Simplify the compress call accordingly.
-
-2019-07-11  Hans-Peter Nilsson  <hp@bitrange.com>
-
-	* ctf-endian.h: Don't assume htole64 and le64toh are always
-	present if HAVE_ENDIAN_H; also check if htole64 is defined.
-	[!WORDS_BIGENDIAN] (htole64, le64toh): Define as identity,
-	not bswap_identity_64.
-
-2019-09-18  Alan Modra  <amodra@gmail.com>
-
-	* ctf-open-bfd.c: Update throughout for bfd section macro changes.
-
-2019-09-09  Phil Blundell  <pb@pbcl.net>
-
-	binutils 2.33 branch created.
-
-2019-07-18  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-types.c (ctf_type_aname_raw): New.
-	(ctf_func_type_info): Likewise.
-	(ctf_func_type_args): Likewise.
-	* ctf-error.c (_ctf_errlist): Fix description.
-	* ctf-lookup.c: Fix file description.
-
-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-create.c (ctf_create): Fix off-by-one error.
-
-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h: (struct ctf_strs_writable): New, non-const version of
-	struct ctf_strs.
-	(struct ctf_dtdef): Note that dtd_data.ctt_name is unpopulated.
-	(struct ctf_str_atom): New, disambiguated single string.
-	(struct ctf_str_atom_ref): New, points to some other location that
-	references this string's offset.
-	(struct ctf_file): New members ctf_str_atoms and ctf_str_num_refs.
-	Remove member ctf_dtvstrlen: we no longer track the total strlen
-	as we add strings.
-	(ctf_str_create_atoms): Declare new function in ctf-string.c.
-	(ctf_str_free_atoms): Likewise.
-	(ctf_str_add): Likewise.
-	(ctf_str_add_ref): Likewise.
-	(ctf_str_rollback): Likewise.
-	(ctf_str_purge_refs): Likewise.
-	(ctf_str_write_strtab): Likewise.
-	(ctf_realloc): Declare new function in ctf-util.c.
-
-	* ctf-open.c (ctf_bufopen): Create the atoms table.
-	(ctf_file_close): Destroy it.
-	* ctf-create.c (ctf_update): Copy-and-free it on update.  No longer
-	special-case the position of the parname string.  Construct the
-	strtab by calling ctf_str_add_ref and ctf_str_write_strtab after the
-	rest of each buffer element is constructed, not via open-coding:
-	realloc the CTF buffer and append the strtab to it.  No longer
-	maintain ctf_dtvstrlen.  Sort the variable entry table later, after
-	strtab construction.
-	(ctf_copy_membnames): Remove: integrated into ctf_copy_{s,l,e}members.
-	(ctf_copy_smembers): Drop the string offset: call ctf_str_add_ref
-	after buffer element construction instead.
-	(ctf_copy_lmembers): Likewise.
-	(ctf_copy_emembers): Likewise.
-	(ctf_create): No longer maintain the ctf_dtvstrlen.
-	(ctf_dtd_delete): Likewise.
-	(ctf_dvd_delete): Likewise.
-	(ctf_add_generic): Likewise.
-	(ctf_add_enumerator): Likewise.
-	(ctf_add_member_offset): Likewise.
-	(ctf_add_variable): Likewise.
-	(membadd): Likewise.
-	* ctf-util.c (ctf_realloc): New, wrapper around realloc that aborts
-	if there are active ctf_str_num_refs.
-	(ctf_strraw): Move to ctf-string.c.
-	(ctf_strptr): Likewise.
-	* ctf-string.c: New file, strtab manipulation.
-
-	* Makefile.am (libctf_a_SOURCES): Add it.
-	* Makefile.in: Regenerate.
-
-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (ctf_hash_iter_f): New.
-	(ctf_dynhash_iter): New declaration.
-	(ctf_dynhash_iter_remove): New declaration.
-	* ctf-hash.c (ctf_dynhash_iter): Define.
-	(ctf_dynhash_iter_remove): Likewise.
-	(ctf_hashtab_traverse): New.
-	(ctf_hashtab_traverse_remove): Likewise.
-	(struct ctf_traverse_cb_arg): Likewise.
-	(struct ctf_traverse_remove_cb_arg): Likewise.
-
-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-hash.c (ctf_dynhash_remove): Call with a mocked-up element.
-
-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-dump.c (ctf_dump_format_type): Prefix hex strings with 0x.
-	(ctf_dump_funcs): Likewise.
-
-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open-bfd.c: Add swap.h and ctf-endian.h.
-	(ctf_fdopen): Check for endian-swapped raw CTF magic, and
-	little-endian CTF archive magic.  Do not check the CTF version:
-	ctf_simple_open does that in endian-safe ways.  Do not dereference
-	null pointers on open failure.
-
-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open.c (get_vbytes_common): Return the new slice size.
-	(ctf_bufopen): Flip the endianness of the CTF-section header copy.
-	Remember to copy in the CTF data when opening an uncompressed
-	foreign-endian CTF file.  Prune useless variable manipulation.
-
-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open.c (ctf_types): Fail when unidentified type kinds are
-	seen.
-
-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open.c (ctf_bufopen): Dump header offsets into the debugging
-	output.
-
-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-subr.c (_PAGESIZE): Remove.
-	(ctf_data_alloc): Likewise.
-	(ctf_data_free): Likewise.
-	(ctf_data_protect): Likewise.
-	* ctf-impl.h: Remove declarations.
-	* ctf-create.c (ctf_update): No longer call ctf_data_protect: use
-	ctf_free, not ctf_data_free.
-	(ctf_compress_write): Use ctf_data_alloc, not ctf_alloc.  Free
-	the buffer again on compression error.
-	* ctf-open.c (ctf_set_base): No longer track the size: call
-	ctf_free, not ctf_data_free.
-	(upgrade_types): Likewise.  Call ctf_alloc, not ctf_data_alloc.
-	(ctf_bufopen): Likewise.  No longer call ctf_data_protect.
-
-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-create.c (ctf_dtd_insert): Pass on error returns from
-	ctf_dynhash_insert.
-	(ctf_dvd_insert): Likewise.
-	(ctf_add_generic): Likewise.
-	(ctf_add_variable): Likewise.
-	* ctf-impl.h: Adjust declarations.
-
-2019-06-14  Alan Modra  <amodra@gmail.com>
-
-	* configure: Regenerate.
-
-2019-06-06  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-decls.h: Include <libiberty.h>.
-	* ctf-lookup.c (ctf_lookup_by_name): Call xstrndup(), not strndup().
-
-2019-06-06  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-dump.c (ctf_dump_format_type): Cast size_t's used in printf()s.
-	(ctf_dump_objts): Likewise.
-	(ctf_dump_funcs): Likewise.
-	(ctf_dump_member): Likewise.
-	(ctf_dump_str): Likewise.
-
-2019-06-06  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-archive.c (arc_mmap_header): Mark fd as potentially unused.
-	* ctf-subr.c (ctf_data_protect): Mark both args as potentially unused.
-
-2019-06-05  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-archive.c (ctf_arc_write): Eschew %zi format specifier.
-	(ctf_arc_open_by_offset): Likewise.
-	* ctf-create.c (ctf_add_type): Likewise.
-
-2019-06-04  Tom Tromey  <tromey@adacore.com>
-
-	* ctf-create.c (ctf_add_encoded, ctf_add_slice)
-	(ctf_add_member_offset): Use CHAR_BIT, not NBBY.
-
-2019-06-04  Nick Alcock  <nick.alcock@oracle.com>
-
-	* configure.ac: Check for O_CLOEXEC.
-	* ctf-decls.h (O_CLOEXEC): Define (to 0), if need be.
-	* config.h.in: Regenerate.
 	* configure: Likewise.
 
-2019-06-04  Nick Alcock  <nick.alcock@oracle.com>
-
-	* qsort_r.c: Rename to...
-	* ctf-qsort_r.c: ... this.
-	(_quicksort): Define to ctf_qsort_r.
-	* ctf-decls.h (qsort_r): Remove.
-	(ctf_qsort_r): Add.
-	(struct ctf_qsort_arg): New, transport the real ARG and COMPAR.
-	(ctf_qsort_compar_thunk): Rearrange the arguments to COMPAR.
-	* Makefile.am (libctf_a_LIBADD): Remove.
-	(libctf_a_SOURCES): New, add ctf-qsort_r.c.
-	* ctf-archive.c (ctf_arc_write): Call ctf_qsort_r, not qsort_r.
-	* ctf-create.c (ctf_update): Likewise.
-	* configure.ac: Check for BSD versus GNU qsort_r signature.
-	* Makefile.in: Regenerate.
-	* config.h.in: Likewise.
-	* configure: Likewise.
-
-2019-06-03  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-dump.c (ctf_dump_funcs): Free in the right place.
-
-2019-05-29  Nick Alcock  <nick.alcock@oracle.com>
-
-	* Makefile.am (ZLIB): New.
-	(ZLIBINC): Likewise.
-	(AM_CFLAGS): Use them.
-	(libctf_a_LIBADD): New, for LIBOBJS.
-	* configure.ac: Check for zlib, endian.h, and qsort_r.
-	* ctf-endian.h: New, providing htole64 and le64toh.
-	* swap.h: Code style fixes.
-	(bswap_identity_64): New.
-	* qsort_r.c: New, from gnulib (with one added #include).
-	* ctf-decls.h: New, providing a conditional qsort_r declaration,
-	and unconditional definitions of MIN and MAX.
-	* ctf-impl.h: Use it.  Do not use <sys/errno.h>.
-	(ctf_set_errno): Now returns unsigned long.
-	* ctf-util.c (ctf_set_errno): Adjust here too.
-	* ctf-archive.c: Use ctf-endian.h.
-	(ctf_arc_open_by_offset): Use memset, not bzero.  Drop cts_type,
-	cts_flags and cts_offset.
-	(ctf_arc_write): Drop debugging dependent on the size of off_t.
-	* ctf-create.c: Provide a definition of roundup if not defined.
-	(ctf_create): Drop cts_type, cts_flags and cts_offset.
-	(ctf_add_reftype): Do not check if type IDs are below zero.
-	(ctf_add_slice): Likewise.
-	(ctf_add_typedef): Likewise.
-	(ctf_add_member_offset): Cast error-returning ssize_t's to size_t
-	when known error-free.  Drop CTF_ERR usage for functions returning
-	int.
-	(ctf_add_member_encoded): Drop CTF_ERR usage for functions returning
-	int.
-	(ctf_add_variable): Likewise.
-	(enumcmp): Likewise.
-	(enumadd): Likewise.
-	(membcmp): Likewise.
-	(ctf_add_type): Likewise.  Cast error-returning ssize_t's to size_t
-	when known error-free.
-	* ctf-dump.c (ctf_is_slice): Drop CTF_ERR usage for functions
-	returning int: use CTF_ERR for functions returning ctf_type_id.
-	(ctf_dump_label): Likewise.
-	(ctf_dump_objts): Likewise.
-	* ctf-labels.c (ctf_label_topmost): Likewise.
-	(ctf_label_iter): Likewise.
-	(ctf_label_info): Likewise.
-	* ctf-lookup.c (ctf_func_args): Likewise.
-	* ctf-open.c (upgrade_types): Cast to size_t where appropriate.
-	(ctf_bufopen): Likewise.  Use zlib types as needed.
-	* ctf-types.c (ctf_member_iter): Drop CTF_ERR usage for functions
-	returning int.
-	(ctf_enum_iter): Likewise.
-	(ctf_type_size): Likewise.
-	(ctf_type_align): Likewise.  Cast to size_t where appropriate.
-	(ctf_type_kind_unsliced): Likewise.
-	(ctf_type_kind): Likewise.
-	(ctf_type_encoding): Likewise.
-	(ctf_member_info): Likewise.
-	(ctf_array_info): Likewise.
-	(ctf_enum_value): Likewise.
-	(ctf_type_rvisit): Likewise.
-	* ctf-open-bfd.c (ctf_bfdopen): Drop cts_type, cts_flags and
-	cts_offset.
-	(ctf_simple_open): Likewise.
-	(ctf_bfdopen_ctfsect): Likewise.  Set cts_size properly.
-	* Makefile.in: Regenerate.
-	* aclocal.m4: Likewise.
-	* config.h: Likewise.
-	* configure: Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* configure.in: Check for bfd_section_from_elf_index.
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-decl.c (ctf_decl_push): Exclude slices from the decl stack.
+	* ctf-types.c (ctf_type_aname): No longer deal with slices here.
+	* ctf-dump.c (ctf_dump_membstate_t) <cdm_toplevel_indent>: Constify.
+	(CTF_FT_REFS): New.
+	(CTF_FT_BITFIELD): Likewise.
+	(CTF_FT_ID): Likewise.
+	(ctf_dump_member): Do not do indentation here. Migrate the
+	type-printing parts of this into...
+	(ctf_dump_format_type): ... here, to be shared by all type printers.
+	Get the errno value for non-representable types right.  Do not print
+	bitfield info for non-bitfields.  Improve the format and indentation
+	of other type output.  Shuffle spacing around to make all indentation
+	either 'width of column' or 4 chars.
+	(ctf_dump_label): Pass CTF_FT_REFS to ctf_dump_format_type.
+	(ctf_dump_objts): Likewise.  Spacing shuffle.
+	(ctf_dump_var): Likewise.
+	(type_hex_digits): Migrate down in the file, to above its new user.
+	(ctf_dump_type): Indent here instead.  Pass CTF_FT_REFS to
+	ctf_dump_format_type. Don't trim off excess linefeeds now we no
+	longer generate them.  Dump enumerated types.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_resolve): Improve comment.
+	(ctf_type_size): Yield ECTF_INCOMPLETE when applied to forwards.
+	Emit errors into the right dict.
+	(ctf_type_align): Likewise.
+	* ctf-create.c (ctf_add_member_offset): Yield ECTF_INCOMPLETE
+	when adding a member without explicit offset when this member, or
+	the previous member, is incomplete.
+	* ctf-dump.c (ctf_dump_format_type): Do not try to print the size of
+	forwards.
+	(ctf_dump_member): Do not try to print their alignment.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_objts): Dump by calling ctf_dump_format_type.
+	(ctf_dump_format_type): Don't emit the size for function objects.
+	Dump the element type of arrays like we dump the pointed-to type of
+	pointers, etc.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_format_type): Add 0x to hex type IDs.
+	(ctf_dump_header): Add 0x to the hex magic number.
+	(ctf_dump_str): Add 0x to the hex string offsets.
+	(ctf_dump_membstate_t) <cdm_toplevel_indent>: New.
+	(ctf_dump_type): Adjust.  Free it when we're done.
+	(type_hex_digits): New.
+	(ctf_dump_member): Align output depending on the width of the type
+	ID being generated.  Use printf padding, not a loop, to generate
+	indentation.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-decl.c (ctf_decl_push): Don't print array decls backwards.
+
+2021-01-04  Nicolas Boulenguez  <nicolas@debian.org>
+
+	PR 27117
+	* configure.ac: Make AC_CONFIG_MACRO_DIR consistent with
+	ACLOCAL_AMFLAGS -I dirs.
 	* configure: Regenerate.
-	* config.h.in [HAVE_BFD_ELF]: Likewise.
-	* libctf/ctf_open_bfd (ctf_bfdopen_ctfsect): Use it.
-	abfd is potentially unused now.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* Makefile.am: New.
-	* Makefile.in: Regenerated.
-	* config.h.in: Likewise.
-	* aclocal.m4: Likewise.
-	* configure: Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-dump.c: New.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-labels.c: New.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h (_libctf_version): New declaration.
-	* ctf-subr.c (_libctf_version): Define it.
-	(ctf_version): New.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
 
-	* ctf-create.c (enumcmp): New.
-	(enumadd): Likewise.
-	(membcmp): Likewise.
-	(membadd): Likewise.
-	(ctf_add_type): Likewise.
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-lookup.c (isqualifier): New.
-	(ctf_lookup_by_name): Likewise.
-	(struct ctf_lookup_var_key): Likewise.
-	(ctf_lookup_var): Likewise.
-	(ctf_lookup_variable): Likewise.
-	(ctf_lookup_symbol_name): Likewise.
-	(ctf_lookup_by_symbol): Likewise.
-	(ctf_func_info): Likewise.
-	(ctf_func_args): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-decl.c: New file.
-	* ctf-types.c: Likewise.
-	* ctf-impl.h: New declarations.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open-bfd.c: New file.
-	* ctf-open.c (ctf_close): New.
-	* ctf-impl.h: Include bfd.h.
-	(ctf_file): New members ctf_data_mmapped, ctf_data_mmapped_len.
-	(ctf_archive_internal): New members ctfi_abfd, ctfi_data,
-	ctfi_bfd_close.
-	(ctf_bfdopen_ctfsect): New declaration.
-	(_CTF_SECTION): likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-archive.c: New.
-	* ctf-impl.h (ctf_archive_internal): New type.
-	(ctf_arc_open_internal): New declaration.
-	(ctf_arc_bufopen): Likewise.
-	(ctf_arc_close_internal): Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-open.c: New file.
-	* swap.h: Likewise.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-create.c: New file.
-	* ctf-lookup.c: New file.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-impl.h: New definitions and declarations for type creation
-	and lookup.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-hash.c: New file.
-	* ctf-impl.h: New declarations.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-error.c: New file.
-
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
-
-	* ctf-util.c: New file.
-	* elf.h: Likewise.
-	* ctf-impl.h: Include it, and add declarations.
+	Update year range in copyright notice of all files.
 
-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+For older changes see ChangeLog-2020
+
+Copyright (C) 2021 Free Software Foundation, Inc.
 
-	* ctf-impl.h: New file.
-	* ctf-subr.c: New file.
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
 
-
 Local Variables:
 mode: change-log
 left-margin: 8
-fill-column: 76
+fill-column: 74
 version-control: never
 End:
diff --git a/gdb/testsuite/ChangeLog b/gdb/testsuite/ChangeLog
index 983c4315bfb..fcca04996f4 100644
--- a/gdb/testsuite/ChangeLog
+++ b/gdb/testsuite/ChangeLog
@@ -1,3 +1,2596 @@
+2021-01-08  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/voidctx/pck.adb: New file.
+	* gdb.ada/voidctx/pck.ads: New file.
+	* gdb.ada/voidctx/voidctx.adb: New file.
+	* gdb.ada/voidctx.exp: New file.
+
+2021-01-08  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/27157
+	* gdb.base/empty-host-env-vars.exp: New test.
+
+2021-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/completion.exp: Add a new test.
+
+2021-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/intvar-dynamic-types.exp: New file.
+	* gdb.fortran/intvar-dynamic-types.f90: New file.
+
+2021-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/intvar-array.exp: New file.
+	* gdb.fortran/intvar-array.f90: New file.
+
+2021-01-07  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/assign_arr.exp: Add 'others' test.
+
+2021-01-06  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/fixed_points/pck.ads (Delta4): New constant.
+	(FP4_Type): New type.
+	(FP4_Var): New variable.
+	* gdb.ada/fixed_points/fixed_points.adb: Update.
+	* gdb.ada/fixed_points.exp: Add tests for binary operators.
+
+2021-01-06  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* lib/gdb.exp (gdb_test_sequence): Accept -prompt switch.
+	* gdb.threads/signal-while-stepping-over-bp-other-thread.exp:
+	Pass prompt containing debug print to gdb_test_sequence.
+
+2021-01-04  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/dw2-out-of-range-end-of-seq.exp: New file.
+
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
+
+
+
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.server/abspath.exp: Append "set sysroot" to GDBFLAGS.
+	* gdb.server/connect-without-multi-process.exp: Likewise.
+	* gdb.server/exit-multiple-threads.exp: Likewise.
+	* gdb.server/ext-attach.exp: Likewise.
+	* gdb.server/ext-restart.exp: Likewise.
+	* gdb.server/ext-run.exp: Likewise.
+	* gdb.server/ext-wrapper.exp: Likewise.
+	* gdb.server/multi-ui-errors.exp: Likewise.
+	* gdb.server/no-thread-db.exp: Likewise.
+	* gdb.server/reconnect-ctrl-c.exp: Likewise.
+	* gdb.server/run-without-local-binary.exp: Likewise.
+	* gdb.server/server-kill.exp: Likewise.
+	* gdb.server/server-run.exp: Likewise.
+	* gdb.server/solib-list.exp: Likewise.
+	* gdb.server/stop-reply-no-thread.exp: Likewise.
+	* gdb.server/wrapper.exp: Likewise.
+	* gdb.server/sysroot.exp: Increase timeout when testing the
+	target: sysroot.
+
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.server/server-run.exp: Use clean_restart.
+
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.server/ext-run.exp: Use clean_restart.
+
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.server/stop-reply-no-thread.exp: Use build_executable
+	instead of prepare_for_testing.
+
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.server/solib-list.exp: Use clean_restart.
+
+2021-01-04  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/morestack.c: Remove printf.
+	* gdb.base/morestack.exp: Don't use -fuse-ld=gold.
+
+2020-12-31  Tom Tromey  <tom@tromey.com>
+
+	* gdb.rust/simple.exp: Update output for Rust 1.49.
+
+2020-12-31  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* gdb.cp/step-and-next-inline.exp: Fix test case.
+
+2020-12-30  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.python/py-frame-args.exp: De-duplicate test names.
+
+2020-12-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR gdb/27059
+	* gdb.dwarf2/dyn-type-unallocated.c: New file.
+	* gdb.dwarf2/dyn-type-unallocated.exp: New file.
+
+2020-12-21  Peter Waller  <p@pwaller.net>
+
+	* gdb.base/style-interp-exec-mi.exp: New.
+	* gdb.base/style-interp-exec-mi.c: New.
+
+2020-12-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.base/list.exp: Replace send_gdb + gdb_expect with
+	  gdb_test.  Use proc_with_prefix.
+
+2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* gdb.btrace/exception.exp: Build with nopie.
+	* gdb.btrace/function_call_history.exp: Likewise.
+	* gdb.btrace/unknown_functions.exp: Likewise.
+
+2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* gdb.btrace/multi-inferior.exp: Skip if use_gdb_stub.
+
+2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* gdb.python/py-record-btrace.exp: Make test names unique.
+	* gdb.python/py-record-full.exp: Likewise.
+
+2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* gdb.btrace/data.exp: Make test names unique.
+	* gdb.btrace/delta.exp: Likewise.
+	* gdb.btrace/enable.exp: Likewise.
+	* gdb.btrace/function_call_history.exp: Likewise.
+	* gdb.btrace/nohist.exp: Likewise.
+	* gdb.btrace/non-stop.exp: Likewise.
+	* gdb.btrace/rn-dl-bind.exp: Likewise.
+	* gdb.btrace/step.exp: Likewise.
+	* gdb.btrace/stepi.exp: Likewise.
+	* gdb.btrace/tailcall.exp: Likewise.
+
+2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* gdb.btrace/enable.exp: Update error message.
+	* gdb.btrace/multi-inferior.exp: Likewise.
+	* gdb.btrace/reconnect.exp: Likewise.
+	* gdb.python/py-record-btrace.exp: Likewise.
+	* gdb.python/py-record-full.exp: Likewise.
+
+2020-12-20  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (save_target_board_info): New proc.
+	(gdb_compile_shlib): Use save_target_board_info.
+
+2020-12-19  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (supports_scalar_storage_order_attribute)
+	(supports_gnuc): New proc.
+	* gdb.base/endianity.exp: Define TEST_SSO.  Eliminate
+	test_compiler_info calls.  Add unsupported message.
+	* gdb.base/endianity.c: Use TEST_SSO.
+
+2020-12-19  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR exp/27070
+	* gdb.python/compare-enum-type-a.c: New test.
+	* gdb.python/compare-enum-type-b.c: New test.
+	* gdb.python/compare-enum-type.exp: New file.
+	* gdb.python/compare-enum-type.h: New test.
+
+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>
+
+	* gdb.python/py-format-string.exp: Add tests for address keyword.
+
+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>
+
+	* gdb.python/py-type.exp: Add tests for TYPE_CODE_METHOD.
+
+2020-12-18  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/fixed_points.exp: Also run with
+	-fgnat-encodings=minimal.  Update expected output.
+
+2020-12-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.base/async-shell.exp: Enable non-stop through GDBFLAGS.
+	* gdb.base/continue-all-already-running.exp: Likewise.
+	* gdb.base/moribund-step.exp: Likewise.
+	* gdb.base/step-sw-breakpoint-adjust-pc.exp: Likewise.
+
+2020-12-16  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/batch-preserve-term-settings.exp:
+
+2020-12-16  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_compile_shlib_1): Factor out of ...
+	(gdb_compile_shlib): ... here.  Filter out PIE-related flags.
+
+2020-12-16  Luis Machado  <luis.machado@linaro.org>
+
+	* gdb.arch/aarch64-tagged-pointer.c (main): Add a few more
+	pointer-based memory accesses.
+	* gdb.arch/aarch64-tagged-pointer.exp: Exercise additional
+	hw watchpoint cases.
+
+2020-12-15  Rae Kim  <rae.kim@gmail.com>
+
+	* gdb.base/document.exp: New test.
+
+2020-12-15  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.base/style.exp: Add deprecation tests.
+
+2020-12-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* lib/gdb.exp (gdb_test_multiple): Fix typo in doc.
+
+2020-12-14  Mark Wielaard  <mark@klomp.org>
+
+	* lib/dwarf.exp (Dwarf::_handle_attribute): Handle SPECIAL_expr
+	specially, set attr_form_comment to the actual FORM string used.
+
+2020-12-14  Mark Wielaard  <mark@klomp.org>
+
+	* lib/dwarf.exp (Dwarf::_read_constants): Don't set
+	_constants(SPECIAL_expr) here, but set it...
+	(Dwarf::cu): ...here based on _cu_version.
+
+2020-12-14  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_compile_shlib): Make sure it's not necessary to
+	pass -fPIC.
+	* gdb.ada/catch_ex_std.exp: Don't pass -fPIC to gdb_compile_shlib.
+	* gdb.base/break-probes.exp: Same.
+	* gdb.base/ctxobj.exp: Same.
+	* gdb.base/dso2dso.exp: Same.
+	* gdb.base/global-var-nested-by-dso.exp: Same.
+	* gdb.base/info-shared.exp: Same.
+	* gdb.base/jit-reader-simple.exp: Same.
+	* gdb.base/print-file-var.exp: Same.
+	* gdb.base/skip-solib.exp: Same.
+	* gdb.btrace/dlopen.exp: Same.
+
+2020-12-14  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26963
+	* lib/gdb.exp (run_on_host): Declare test unsupported if spawn fails.
+
+2020-12-14  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26962
+	* gdb.base/solib-corrupted.exp: Handle "'_r_debug' has unknown type;
+	cast it to its declared type".
+
+2020-12-14  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26951
+	* gdb.base/batch-preserve-term-settings.exp: Use "gdb-subshell$ " as
+	shell prompt.
+
+2020-12-14  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/nested.exp: Add new tests.
+	* gdb.ada/nested/hello.adb (Fourth, Fifth): New procedures.
+
+2020-12-14  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.dwarf2/ada-thick-pointer.exp: New file.
+
+2020-12-14  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.dwarf2/dw2-fixed-point.exp: Add test for division by zero.
+
+2020-12-13  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26953
+	* gdb.base/endianity.exp: Skip tests requiring scalar_storage_order
+	attribute support if compiler doesn't support it.
+
+2020-12-13  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_compile_shlib): Handle ada.
+	* gdb.ada/catch_ex_std.exp: Use gdb_compile_shlib to compile from
+	source to shared lib.  Add ada to options.
+
+2020-12-13  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.ada/catch_ex_std.exp: Use gnatmake -bargs and -largs instead of
+	calling gnatbind and gnatlink.
+
+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/dcache-flush.c: New file.
+	* gdb.base/dcache-flush.exp: New file.
+
+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/c-linkage-name.exp: Update to use new 'maint flush ...'
+	commands.
+	* gdb.base/killed-outside.exp: Likewise.
+	* gdb.opt/inline-bt.exp: Likewise.
+	* gdb.perf/gmonster-null-lookup.py: Likewise.
+	* gdb.perf/gmonster-print-cerr.py: Likewise.
+	* gdb.perf/gmonster-ptype-string.py: Likewise.
+	* gdb.python/py-unwind.exp: Likewise.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/commands.exp: Update expected results.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR cli/15104
+	* gdb.base/commands.exp: Add additional tests.
+	* gdb.base/completion.exp: Add additional tests.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/completion.exp: Add additional tests.
+
+2020-12-11  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26991
+	* gdb.arch/i386-mpx-call.exp: Don't expect to trigger bounds
+        violations by setting bounds registers if the bounds are passed in the
+        Bounds Table.
+
+2020-12-11  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26954
+	* gdb.base/float128.exp: Detect and handle no mpfr support.
+
+2020-12-10  Simon Marchi  <simon.marchi@efficios.com>
+
+	PR gdb/24694
+	* gdb.multi/multi-arch-exec.c (thread_start, main): Add barrier
+	calls.
+
+2020-12-10  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26947
+	* gdb.tui/new-layout.exp: Don't execute tests with unbalanced curly
+	braces for tcl 8.5 and earlier.
+
+2020-12-09  Simon Marchi  <simon.marchi@efficios.com>
+
+	PR 26875, PR 26901
+	* gdb.base/flexible-array-member.c: New test.
+	* gdb.base/flexible-array-member.exp: New test.
+
+2020-12-08  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.arch/amd64-gs_base.exp: Undo commit 67748e0f66, reimplement
+	using is_amd64_regs_target.
+
+2020-12-08  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.ada/mi_task_arg.exp: Accept <optimized out> as valid value of
+	self_id.
+
+2020-12-07  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/break-on-linker-gcd-function.exp: Remove unused
+	'additional_flags' variable.
+
+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.linespec/explicit.exp: Extend with a test to check completing
+	'-' after seemingly complete options.
+
+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.linespec/keywords.exp: Add tests to check positional
+	flexibility of "-force-condition".
+
+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/bp-cmds-run-with-ex.c: New file.
+	* gdb.base/bp-cmds-run-with-ex.exp: New file.
+	* gdb.base/bp-cmds-run-with-ex.gdb: New file.
+	* gdb.gdb/python-interrupts.exp: Update the call to
+	'catch_command_errors' with the new argument.
+	* gdb.gdb/python-selftest.exp: Ditto.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.arch/amd64-disp-step-avx.exp: Adjust pattern.
+	* gdb.threads/forking-threads-plus-breakpoint.exp: Likewise.
+	* gdb.threads/non-stop-fair-events.exp: Likewise.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.threads/step-over-exec.exp: New.
+	* gdb.threads/step-over-exec.c: New.
+	* gdb.threads/step-over-exec-execd.c: New.
+	* lib/my-syscalls.S: New.
+	* lib/my-syscalls.h: New.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* lib/dwarf.exp (declare_labels): Use name as text if text is
+	not provided.
+
+2020-12-04  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26990
+	* gdb.arch/amd64-gs_base.exp: Handle -m32 where fs_base and gs_base
+	are unsupported.
+
+2020-12-04  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.reverse/insn-reverse.exp: Don't break inside gdb_test_multiple
+	clause.
+
+2020-12-04  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.reverse/insn-reverse.exp: Fix count handling.
+
+2020-12-04  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.reverse/insn-reverse-x86.c: Guard x86_64 assembly with #ifdef
+	__x86_64__.
+
+2020-12-04  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.reverse/insn-reverse.c (test_nr): New var.
+	(usage, parse_args): New function.
+	(main): Call parse_args.  Only run test for test_nr.
+	* gdb.reverse/insn-reverse.exp: Detect lack of progress in stepi loop
+	and bail out.  Run subtests individually, using an inferior arg
+	specifying the subtest.
+
+2020-12-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.arch/riscv-tdesc-regs.exp: Remove unwanted test.
+
+2020-12-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.arch/riscv-tdesc-regs.exp (get_expected_result): New proc,
+	update test to use this.
+
+2020-12-01  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.threads/non-ldr-exc-1.exp: Fix indentation.
+
+2020-12-01  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.threads/non-ldr-exc-1.exp: Use foreach_with_prefix.
+	(do_test): Don't use with_test_prefix.
+	* gdb.threads/non-ldr-exc-2.exp: Use foreach_with_prefix.
+	(do_test): Don't use with_test_prefix.
+	* gdb.threads/non-ldr-exc-3.exp: Use foreach_with_prefix.
+	(do_test): Don't use with_test_prefix.
+	* gdb.threads/non-ldr-exc-4.exp: Use foreach_with_prefix.
+	(do_test): Don't use with_test_prefix.
+
+2020-12-01  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.threads/non-ldr-exit.exp: Fix comment.
+
+2020-12-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.xml/maint-xml-dump-03.xml: New file.
+
+2020-11-30  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26905
+	* gdb.dwarf2/count.exp: Remove kfails.
+
+2020-11-24  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/condbreak-multi-context.exp: Do not hard-code location
+	indices.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.dwarf2/dw2-fixed-point.exp: Fix the expected output of
+	the "ptype pck__fp1_range_var" test for the module-2 and pascal
+	languages.  Remove the associated setup_xfail.
+
+2020-11-23  Simon Marchi  <simon.marchi@efficios.com>
+
+	* lib/gdb.exp (gdb_assert): Show error message on error.
+
+2020-11-23  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.ada/enum_idx_packed.exp: Limit setup_kfail to gnat 9 and 10.
+	* gdb.ada/mod_from_name.exp: Same.
+	* gdb.ada/pckd_arr_ren.exp: Same.
+
+2020-11-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.base/template.exp: New.
+	* gdb.base/template.c: New.
+
+2020-11-22  Gary Benson <gbenson@redhat.com>
+
+	PR gdb/26905
+	* gdb.dwarf2/count.exp: Add test for an array whose upper bound
+	is defined using a DW_AT_count which references another DIE.
+
+2020-11-21  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/vla-ptr.exp: Add XFAIL.
+
+2020-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/array-slices-bad.exp: New file.
+	* gdb.fortran/array-slices-bad.f90: New file.
+	* gdb.fortran/array-slices-sub-slices.exp: New file.
+	* gdb.fortran/array-slices-sub-slices.f90: New file.
+	* gdb.fortran/array-slices.exp: Rewrite tests.
+	* gdb.fortran/array-slices.f90: Rewrite tests.
+	* gdb.fortran/vla-sizeof.exp: Correct expected results.
+
+2020-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/completion.exp: Add new completion tests.
+
+2020-11-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.mi/mi-nonstop-exit.exp: Enable non-stop through GDBFLAGS.
+	* gdb.mi/mi-ns-stale-regcache.exp: Likewise.
+	* gdb.mi/mi-nsintrall.exp: Likewise.
+	* gdb.mi/mi-nsmoribund.exp: Likewise.
+	* gdb.mi/mi-nsthrexec.exp: Likewise.
+	* gdb.mi/mi-watch-nonstop.exp: Likewise.
+
+2020-11-18  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* lib/mi-support.exp (mi_run_cmd_full): Use unresovled instead
+	of perror.
+
+2020-11-18  Joseph Myers  <joseph@codesourcery.com>
+
+	* lib/mi-support.exp (mi_gdb_file_cmd): Check for case where
+	$arg.exe exists but $arg does not.
+
+2020-11-17  Gary Benson <gbenson@redhat.com>
+
+	* gdb.trace/trace-common.h (x86_trace_dummy): Add
+	__attribute__ ((used)).
+
+2020-11-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.gdb/unittest.exp: Spot 'Running...' lines.
+
+2020-11-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/completion.exp: Add new tests.
+
+2020-11-16  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.dwarf2/data-loc.exp: Update expected output.  Remove C
+	tests.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.ada/fixed_cmp.exp: Add -fgnat-encodings=minimal testing.
+	* gdb.dwarf2/dw2-fixed-point.c (pck__fp1_var2): New global.
+	(main): Add reference to pck__fp1_var2.
+	* gdb.dwarf2/dw2-fixed-point.exp: Add comparison operator testing.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.dwarf2/dw2-fixed-point.exp: Add arithmetic tests.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.ada/fixed_points.exp: Add ptype tests.
+	* gdb.dwarf2/dw2-fixed-point.exp: Likewise.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.dwarf2/dw2-fixed-point.exp: Add "print /x" tests.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.ada/fixed_cmp.exp: Force compilation to use -fgnat-encodings=all.
+	* gdb.ada/fixed_points.exp: Add fixed-point variables printing tests.
+	* gdb.ada/fixed_points/pck.ads, gdb.ada/fixed_points/pck.adb:
+	New files.
+	* gdb.ada/fixed_points/fixed_points.adb: Add use of package Pck.
+
+	* gdb.dwarf2/dw2-fixed-point.c, gdb.dwarf2/dw2-fixed-point.exp:
+	New files.
+
+2020-11-14  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR cli/26879
+	* gdb.fortran/completion.exp: New file.
+	* gdb.fortran/completion.f90: New file.
+
+2020-11-12  Joseph Myers  <joseph@codesourcery.com>
+
+	* lib/gdb.exp (gdb_file_cmd): Check for case where $arg.exe exists
+	but $arg does not.
+
+2020-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/types.exp: Add more tests.
+
+2020-11-12  Tom Tromey  <tom@tromey.com>
+
+	PR rust/26799:
+	* gdb.rust/traits.exp: Remove kfails.
+
+2020-11-12  Gary Benson <gbenson@redhat.com>
+
+	* gdb.threads/tls-so_extern_main.c (tls_ptr): Add missing return
+	statement.
+
+2020-11-11  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.base/continue-after-aborted-step-over.exp: Add "breakpoint
+	always-inserted" axis.
+	(do_test): Add breakpoint_always_inserted parameter.
+
+2020-11-10  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/bias.exp: Update.
+	* gdb.ada/bias/bias.adb (X): Change value.
+
+2020-11-10  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/vla-optimized-out.exp (p sizeof (a)): Wrap supplied
+	regexp fragment in parentheses to prevent false matching.
+
+2020-11-10  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/vla-optimized-out.c (f1): Add __attribute__ ((weak)).
+
+2020-11-10  Gary Benson <gbenson@redhat.com>
+
+	* gdb.cp/step-and-next-inline.exp: Only require
+	-gstatement-frontiers when building with GCC.
+	Only setup KFAIL's for GCC issues when using
+	a GCC-built executable.
+
+2020-11-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/debug-expr.c: Add extra function to allow for an
+	additional test.
+	* gdb.base/debug-expr.exp (test_debug_expr): Delete, replace calls
+	to this proc with gdb_test_debug_expr.  Add an extra test.
+	* gdb.cp/debug-expr.exp (test_debug_expr): Delete, replace calls
+	to this proc with gdb_test_debug_expr, give the tests names
+	* gdb.dlang/debug-expr.exp (test_debug_expr): Delete, replace
+	calls to this proc with gdb_test_debug_expr, give the tests names
+	* gdb.fortran/debug-expr.exp: New file.
+	* gdb.fortran/debug-expr.f90: New file.
+	* lib/gdb.exp (gdb_test_debug_expr): New proc.
+
+2020-11-06  Simon Marchi  <simon.marchi@efficios.com>
+
+	* lib/dwarf.exp (ranges): Handle "base" and "range" as
+	proceduresu.
+	* gdb.dwarf/dw2-bad-elf.exp: Adjust.
+	* gdb.dwarf2/dw2-inline-many-frames.exp: Adjust.
+	* gdb.dwarf2/dw2-inline-stepping.exp: Adjust.
+	* gdb.dwarf2/dw2-ranges-base.exp: Adjust.
+	* gdb.dwarf2/dw2-ranges-func.exp: Adjust.
+	* gdb.dwarf2/dw2-ranges-overlap.exp: Adjust.
+	* gdb.dwarf2/dw2-ranges-psym.exp: Adjust.
+	* gdb.dwarf2/enqueued-cu-base-addr.exp: Adjust.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/funcall_ref.exp: Update.
+	* gdb.ada/var_rec_arr.exp: Update.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/rec_ptype.exp: New file.
+	* gdb.ada/rec_ptype/main.adb: New file.
+	* gdb.ada/rec_ptype/p.ads: New file.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/tick_length_array_enum_idx.exp: Add ptype test.
+	* gdb.ada/tick_length_array_enum_idx/foo_n207_004.adb
+	(PT_Full): New variable.
+	* gdb.ada/tick_length_array_enum_idx/pck.adb
+	(Full_PT): New type.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/array_of_variant.exp: New file.
+	* gdb.ada/array_of_variant/p.adb: New file.
+	* gdb.ada/array_of_variant/pck.ads: New file.
+	* gdb.ada/array_of_variant/pck.adb: New file.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/enum_idx_packed.exp: Add test.
+	* gdb.ada/enum_idx_packed/foo.adb (Multi_Access):
+	New variable.
+	* gdb.ada/enum_idx_packed/pck.ads (Short)
+	(Multi_Dimension, Multi_Dimension_Access): New types.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/enum_idx_packed.exp: Test two forms of -fgnat-encodings.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/set_pckd_arr_elt.exp: Also test
+	-fgnat-encodings=minimal.  Add tests.
+	* gdb.ada/set_pckd_arr_elt/foo.adb (Foo): Add VA variable.
+	Call Update_Small a second time.
+	* gdb.ada/set_pckd_arr_elt/pck.adb (New_Variant): New function.
+	* gdb.ada/set_pckd_arr_elt/pck.ads (Buffer, Variant)
+	(Variant_Access): New types.
+	(New_Variant): Declare.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/mod_from_name.exp: Test printing slice.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/O2_float_param.exp: Test different -fgnat-encodings
+	values.
+	* gdb.ada/access_to_unbounded_array.exp: Test different
+	-fgnat-encodings values.
+	* gdb.ada/big_packed_array.exp: Test different -fgnat-encodings
+	values.
+	* gdb.ada/arr_enum_idx_w_gap.exp: Test different -fgnat-encodings
+	values.
+	* gdb.ada/array_ptr_renaming.exp: Test different -fgnat-encodings
+	values.
+	* gdb.ada/array_of_variable_length.exp: Test different
+	-fgnat-encodings values.
+	* gdb.ada/arrayparam.exp: Test different -fgnat-encodings values.
+	* gdb.ada/arrayptr.exp: Test different -fgnat-encodings values.
+	* gdb.ada/frame_arg_lang.exp: Revert -fgnat-encodings=minimal
+	change.
+	* gdb.ada/mi_string_access.exp: Test different -fgnat-encodings
+	values.
+	* gdb.ada/mod_from_name.exp: Test different -fgnat-encodings values.
+	* gdb.ada/out_of_line_in_inlined.exp: Test different
+	-fgnat-encodings values.
+	* gdb.ada/packed_array.exp: Test different -fgnat-encodings
+	values.
+	* gdb.ada/pckd_arr_ren.exp: Test different -fgnat-encodings
+	values.
+	* gdb.ada/unc_arr_ptr_in_var_rec.exp: Test different
+	-fgnat-encodings values.
+	* gdb.ada/variant_record_packed_array.exp: Test different
+	-fgnat-encodings values.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/enum_idx_packed.exp: Add tests.
+	* gdb.ada/enum_idx_packed/foo.adb: Add variables.
+	* gdb.ada/enum_idx_packed/pck.adb: Add functions.
+	* gdb.ada/enum_idx_packed/pck.ads: Add types, function
+	declarations.
+
+2020-11-03  Tom de Vries  <tdevries@suse.de>
+
+	* lib/dwarf.exp (Dwarf::_handle_DW_TAG): Improve attribute list
+	terminator comments.
+	(Dwarf::cu, Dwarf::tu): Remove superfluous abbreviation table
+	terminator.
+
+2020-11-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.base/step-over-no-symbols.exp (test_step_over): Replace
+	integer format test with regexp.
+
+2020-11-02  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/print-file-var.exp (test): Separate compiler and
+	linker options, and build using build_executable_from_specs
+	to accommodate this.
+
+2020-11-02  Gary Benson <gbenson@redhat.com>
+
+	* lib/gdb.exp (gdb_compile): Inhibit passing "-x c++"
+	for .c files compiled as C++ with Clang if any shared
+	libraries are specified.
+
+2020-11-02  Gary Benson <gbenson@redhat.com>
+
+	* lib/attributes.h: New header.
+	* gdb.base/backtrace.c: Include the above. Replace
+	__attribute__(noclone)) with ATTRIBUTE_NOCLONE.
+	* gdb.base/infcall-nested-structs.c: Likewise.
+	* gdb.base/vla-optimized-out.c: Likewise.
+
+2020-11-02  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/fission-multi-cu.S: Remove .debug_line.dwo section.
+
+2020-11-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.ada/fixed_points/fixed_points.adb: Replace use of
+	System.Min_Int and System.Max_Int with smaller hardcoded
+	constants.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure.ac: Split AC_INIT into AC_INIT and AC_CONFIG_SRCDIR.
+	* configure: Re-generate.
+
+2020-10-30  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.arch/amd64-disp-step-avx.exp: Update displaced step debug
+	expected output.
+
+2020-10-30  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/paginate-after-ctrl-c-running.exp: Update with no pagination
+	behavior.
+	* gdb.base/paginate-bg-execution.exp: Ditto.
+	* gdb.base/paginate-inferior-exit.exp: Ditto.
+	* gdb.base/double-prompt-target-event-error.c: Remove.
+	* gdb.base/double-prompt-target-event-error.exp: Remove.
+
+2020-10-29  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/kill-detach-inferiors-cmd.exp: Check that 'kill
+	inferiors' and 'detach inferiors' do not change the current
+	inferior.
+
+2020-10-29  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.threads/tls.exp: Fix DUPLICATEs.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.python/py-symbol.exp: Add KFAILs for -readnow.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.ada/exec_changed.exp: Add KFAILs for -readnow.
+	* gdb.base/reread.exp: Same.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (readnow): Handle arg.
+	* gdb.rust/traits.exp: Add KFAILs for -readnow.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/relocate.exp: Update regexp for -readnow.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/dw2-error.exp: Mark failure break in main as known with
+	-readnow.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26772
+	* gdb.dwarf2/dw2-ranges-overlap.c: New test.
+	* gdb.dwarf2/dw2-ranges-overlap.exp: New file.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_file_cmd): Set gdb_file_cmd_msg.
+	* gdb.cp/nsalias.exp: Set complaints limit before file cmd.  Expect
+	complaint during file command for -readnow.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.cp/nsalias.exp: Fix typo in test name.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/dw2-filename.exp: Update regexp for -readnow.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/dw2-stack-boundary.exp: KFAILing the complaints for
+	-readnow.
+
+2020-10-27  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/multi-forks.exp: Use exp_continue to fix timeout.
+
+2020-10-27  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/maint.exp: Update for -readnow.
+
+2020-10-27  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.cp/psymtab-parameter.exp: Don't expect unexpanded CU for
+	-readnow.
+
+2020-10-14  Gary Benson <gbenson@redhat.com>
+
+	* gdb.python/py-format-string.exp (test_deref_refs): Treat
+	"_vptr$Base" as correct, in addition to "_vptr.Base".
+	(test_mixed): Likewise.
+
+2020-10-27  Gary Benson <gbenson@redhat.com>
+
+	* gdb.mi/mi-fortran-modules.exp: Check skip_fortran_tests.
+	* gdb.mi/mi-vla-fortran.exp: Likewise.  Also fix a comment.
+
+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/condbreak.exp: Update the completion tests to
+	consider the '-force' flag.
+
+2020-10-27  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/list-ambiguous-readnow.exp: New file.
+
+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/condbreak-multi-context.exp: Expand to test forcing
+	the condition.
+	* gdb.linespec/cpcompletion.exp: Update to consider the
+	'-force-condition' keyword.
+	* gdb.linespec/explicit.exp: Ditto.
+	* lib/completion-support.exp: Ditto.
+
+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/condbreak-multi-context.cc: New file.
+	* gdb.base/condbreak-multi-context.exp: New file.
+
+2020-10-26  Tom Tromey  <tom@tromey.com>
+
+	* lib/mi-support.exp (default_mi_gdb_start): Call
+	gdb_stdin_log_init.
+	* lib/gdb.exp (standard_output_file_with_gdb_instance): Don't
+	subtract one from gdb_instances.
+	(gdb_stdin_log_write): Flush in_file.
+
+2020-10-26  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/enqueued-cu-base-addr.exp: New file.
+
+2020-10-26  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/unsigned_range/foo.adb: New file.
+	* gdb.ada/unsigned_range/pack.adb: New file.
+	* gdb.ada/unsigned_range/pack.ads: New file.
+	* gdb.ada/unsigned_range.exp: New file.
+
+2020-10-26  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (INTERNAL_GDBFLAGS): Set heigth and width.
+
+2020-10-26  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/dw2-objfile-overlap-inner.S: Specify default base address
+	for CU.
+	* gdb.dwarf2/dw2-objfile-overlap-outer.S: Same.
+
+2020-10-23  Tom de Vries  <tdevries@suse.de>
+
+	* lib/dwarf.exp (Dwarf::_guess_form): Return "" by default instead of
+	DW_FORM_string.
+	(Dwarf::_default_form): New proc.
+	(Dwarf::_handle_DW_TAG): Use _default_form.  Error out if no form was
+	guessed.
+
+2020-10-23  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/ada-linkage-name.exp: Use $srcfile for DW_AT_name of CU.
+	* gdb.dwarf2/atomic-type.exp: Same.
+	* gdb.dwarf2/bad-regnum.exp: Same.
+	* gdb.dwarf2/cpp-linkage-name.exp: Same.
+	* gdb.dwarf2/dw2-align.exp: Same.
+	* gdb.dwarf2/dw2-bad-elf.exp: Same.
+	* gdb.dwarf2/dw2-bad-mips-linkage-name.exp: Same.
+	* gdb.dwarf2/dw2-bad-unresolved.exp: Same.
+	* gdb.dwarf2/dw2-namespaceless-anonymous.exp: Same.
+	* gdb.dwarf2/dw2-opt-structptr.exp: Same.
+	* gdb.dwarf2/dw2-unusual-field-names.exp: Same.
+	* gdb.dwarf2/enum-type.exp: Same.
+	* gdb.dwarf2/frame-inlined-in-outer-frame.exp: Same.
+	* gdb.dwarf2/info-locals-optimized-out.exp: Same.
+	* gdb.dwarf2/main-subprogram.exp: Same.
+	* gdb.dwarf2/missing-type-name.exp: Same.
+	* gdb.dwarf2/nonvar-access.exp: Same.
+	* gdb.dwarf2/typedef-void-finish.exp: Same.
+	* gdb.dwarf2/var-access.exp: Same.
+	* gdb.dwarf2/void-type.exp: Same.
+
+2020-10-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/26693
+	* gdb.dwarf2/template-specification-full-name.exp: New test.
+
+2020-10-22  Luis Machado  <luis.machado@linaro.org>
+
+	* gdb.base/msym-bp-shl.exp (test_break): Adjust pattern to not
+	expected an offset from the function.
+	* gdb.base/msym-bp.exp (test): Likewise.
+
+2020-10-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/array-slices.exp: Add a new test.
+
+2020-10-21  Gary Benson <gbenson@redhat.com>
+
+	* gdb.mi/mi-fullname-deleted.exp: Fix substituted
+	fullname test with Clang.  Also expand comments generally.
+
+2020-10-20  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/pr13961.S: Remove superfluous end-of-siblings marker.
+
+2020-10-20  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/arr-stride.c: Remove.
+	* gdb.dwarf2/arr-stride.exp: Use main.c.
+	* gdb.dwarf2/arr-subrange.c: Remove.
+	* gdb.dwarf2/arr-subrange.exp: Use main.c.
+	* gdb.dwarf2/bad-regnum.c: Remove.
+	* gdb.dwarf2/bad-regnum.exp: Use main.c.
+	* gdb.dwarf2/corrupt.c: Remove.
+	* gdb.dwarf2/corrupt.exp: Use main.c.
+	* gdb.dwarf2/dw2-bad-elf.c: Remove.
+	* gdb.dwarf2/dw2-bad-elf.exp: Use main.c.
+	* gdb.dwarf2/dw2-icycle.c: Remove.
+	* gdb.dwarf2/dw2-icycle.exp: Use main.c.
+	* gdb.dwarf2/formdata16.c: Remove.
+	* gdb.dwarf2/formdata16.exp: Use main.c.
+	* gdb.dwarf2/implptrconst.c: Remove.
+	* gdb.dwarf2/implptrconst.exp: Use main.c.
+	* gdb.dwarf2/info-locals-optimized-out.c: Remove.
+	* gdb.dwarf2/info-locals-optimized-out.exp: Use main.c.
+	* gdb.dwarf2/opaque-type-lookup.c: Remove.
+	* gdb.dwarf2/opaque-type-lookup.exp: Use main.c.
+
+2020-10-20  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/ada-valprint-error.exp: Remove redundant mention of .exp
+	file.
+	* gdb.dwarf2/dw2-dir-file-name.exp: Same.
+
+2020-10-20  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/dw2-error.exp: Use $gdb_test_file_name.
+	* gdb.dwarf2/dw2-line-number-zero.exp: Same.
+	* gdb.dwarf2/dw2-main-no-line-number.exp: Same.
+	* gdb.dwarf2/dw2-ranges-base.exp: Same.
+	* gdb.dwarf2/dw2-ranges.exp: Same.
+	* gdb.dwarf2/dw2-vendor-extended-opcode.exp: Same.
+	* gdb.dwarf2/var-access.exp: Same.
+
+2020-10-19  Tom Tromey  <tromey@adacore.com>
+
+	PR tui/26719
+	* gdb.tui/list.exp: Check source window contents after focus
+	change.
+
+2020-10-17  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26317
+	* gdb.dwarf2/dw2-main-no-line-number.exp: New file.
+
+2020-10-17  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (standard_testfile): Also treat args starting with '-'
+	as suffix.
+	* gdb.dwarf2/atomic.c: Rename to ...
+	* gdb.dwarf2/atomic-type.c: ... this.
+	* gdb.dwarf2/dw2-ranges2.c: Rename to ...
+	* gdb.dwarf2/dw2-ranges-2.c: ... this.
+	* gdb.dwarf2/dw2-ranges3.c: Rename to ...
+	* gdb.dwarf2/dw2-ranges-3.c: ... this.
+	* gdb.dwarf2/fission-mix2.c: Rename to ...
+	* gdb.dwarf2/fission-mix-2.c: ... this.
+	* gdb.dwarf2/ada-linkage-name.exp: Use more suffix args for
+	standard_testfile.
+	* gdb.dwarf2/ada-valprint-error.exp: Same.
+	* gdb.dwarf2/arr-stride.exp: Same.
+	* gdb.dwarf2/arr-subrange.exp: Same.
+	* gdb.dwarf2/atomic-type.exp: Same.
+	* gdb.dwarf2/bad-regnum.exp: Same.
+	* gdb.dwarf2/break-inline-psymtab.exp: Same.
+	* gdb.dwarf2/clang-debug-names-2.exp: Same.
+	* gdb.dwarf2/clang-debug-names.exp: Same.
+	* gdb.dwarf2/comp-unit-lang.exp: Same.
+	* gdb.dwarf2/corrupt.exp: Same.
+	* gdb.dwarf2/count.exp: Same.
+	* gdb.dwarf2/cpp-linkage-name.exp: Same.
+	* gdb.dwarf2/data-loc.exp: Same.
+	* gdb.dwarf2/dw2-align.exp: Same.
+	* gdb.dwarf2/dw2-bad-elf.exp: Same.
+	* gdb.dwarf2/dw2-bad-mips-linkage-name.exp: Same.
+	* gdb.dwarf2/dw2-bad-unresolved.exp: Same.
+	* gdb.dwarf2/dw2-case-insensitive.exp: Same.
+	* gdb.dwarf2/dw2-cp-infcall-ref-static.exp: Same.
+	* gdb.dwarf2/dw2-ifort-parameter.exp: Same.
+	* gdb.dwarf2/dw2-inline-many-frames.exp: Same.
+	* gdb.dwarf2/dw2-inline-param.exp: Same.
+	* gdb.dwarf2/dw2-inline-small-func.exp: Same.
+	* gdb.dwarf2/dw2-inline-stepping.exp: Same.
+	* gdb.dwarf2/dw2-is-stmt-2.exp: Same.
+	* gdb.dwarf2/dw2-is-stmt.exp: Same.
+	* gdb.dwarf2/dw2-line-number-zero.exp: Same.
+	* gdb.dwarf2/dw2-namespaceless-anonymous.exp: Same.
+	* gdb.dwarf2/dw2-opt-structptr.exp: Same.
+	* gdb.dwarf2/dw2-param-error.exp: Same.
+	* gdb.dwarf2/dw2-ranges-base.exp: Same.
+	* gdb.dwarf2/dw2-ranges.exp: Same.
+	* gdb.dwarf2/dw2-unusual-field-names.exp: Same.
+	* gdb.dwarf2/dw2-vendor-extended-opcode.exp: Same.
+	* gdb.dwarf2/dw4-sig-types.exp: Same.
+	* gdb.dwarf2/dynarr-ptr.exp: Same.
+	* gdb.dwarf2/enum-type.exp: Same.
+	* gdb.dwarf2/fission-mix.exp: Same.
+	* gdb.dwarf2/formdata16.exp: Same.
+	* gdb.dwarf2/implptrconst.exp: Same.
+	* gdb.dwarf2/implptrpiece.exp: Same.
+	* gdb.dwarf2/info-locals-optimized-out.exp: Same.
+	* gdb.dwarf2/main-subprogram.exp: Same.
+	* gdb.dwarf2/method-ptr.exp: Same.
+	* gdb.dwarf2/missing-sig-type.exp: Same.
+	* gdb.dwarf2/nonvar-access.exp: Same.
+	* gdb.dwarf2/opaque-type-lookup.exp: Same.
+	* gdb.dwarf2/shortpiece.exp: Same.
+	* gdb.dwarf2/staticvirtual.exp: Same.
+	* gdb.dwarf2/subrange.exp: Same.
+	* gdb.dwarf2/symtab-producer.exp: Same.
+	* gdb.dwarf2/typedef-void-finish.exp: Same.
+	* gdb.dwarf2/var-access.exp: Same.
+	* gdb.dwarf2/variant.exp: Same.
+	* gdb.dwarf2/void-type.exp: Same.
+	* gdb.dwarf2/dw2-ranges-psym.exp: Same.  Use main.c instead of
+	dw2-ranges-main.c.
+	* gdb.dwarf2/dw2-ranges-main.c: Remove.
+
+2020-10-16  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_breakpoint): Remove mention of "passfail".
+
+2020-10-16  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (gdb_breakpoint): Handle eof as in gdb_test_multiple.
+
+2020-10-14  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26732
+	* gdb.ada/mi_catch_ex.exp: Do mi_delete_breakpoints before running
+	scenario 2.
+	* gdb.ada/mi_catch_ex_hand.exp: Same.
+
+2020-10-13  Pedro Alves  <pedro@palves.net>
+
+	* lib/mi-support.exp (mi_clean_restart): New.
+	(mi_run_to_main): Delete.
+	All callers adjust to use mi_clean_restart / mi_runto_main.
+
+2020-10-13  Pedro Alves  <pedro@palves.net>
+
+	* config/monitor.exp: Use "list -q".
+	* gdb.arch/gdb1558.exp: Use "break -q".
+	* gdb.arch/i386-permbkpt.exp: Use "break -q".
+	* gdb.arch/i386-prologue-skip-cf-protection.exp: Use "break -q".
+	* gdb.base/break.exp: Use "break -q", "list -q" and "tbreak -q".
+	* gdb.base/commands.exp: Use "break -q".
+	* gdb.base/condbreak.exp: Use "break -q".
+	* gdb.base/ctf-ptype.exp: Use "list -q".
+	* gdb.base/define.exp: Use "break -q".
+	* gdb.base/del.exp: Use "break -q".
+	* gdb.base/fullname.exp: Use "break -q".
+	* gdb.base/hbreak-in-shr-unsupported.exp: Use "hbreak -q".
+	* gdb.base/hbreak-unmapped.exp: Use "hbreak -q".
+	* gdb.base/hbreak2.exp: Use "hbreak -q" and "list -q".
+	* gdb.base/hw-sw-break-same-address.exp: Use "break -q" and
+	"hbreak -q".
+	* gdb.base/included.exp: Use "list -q".
+	* gdb.base/label.exp: Use "break -q".
+	* gdb.base/lineinc.exp: Use "break -q".
+	* gdb.base/list.exp: Use "list -q".
+	* gdb.base/macscp.exp: Use "list -q".
+	* gdb.base/pending.exp: Use "break -q".
+	* gdb.base/prologue-include.exp: Use "break -q".
+	* gdb.base/ptype.exp: Use "list -q".
+	* gdb.base/sepdebug.exp: Use "break -q", "list -q" and "tbreak -q".
+	* gdb.base/server-del-break.exp: Use "break -q".
+	* gdb.base/style.exp: Use "break -q".
+	* gdb.base/symbol-without-target_section.exp: Use "list -q".
+	* gdb.base/watchpoint-reuse-slot.exp: Use "hbreak -q".
+	* gdb.cp/exception.exp: Use "tbreak -q".
+	* gdb.dwarf2/dw2-error.exp: Use "break -q".
+	* gdb.dwarf2/fission-mix.exp: Use "break -q".
+	* gdb.dwarf2/fission-reread.exp: Use "break -q".
+	* gdb.dwarf2/pr13961.exp: Use "break -q".
+	* gdb.linespec/explicit.exp: Use "list -q".
+	* gdb.linespec/linespec.exp: Use "break -q".
+	* gdb.mi/mi-simplerun.exp: Use "--qualified".
+	* gdb.python/py-mi-objfile-gdb.py: Use "list -q".
+	* gdb.server/bkpt-other-inferior.exp: Use "break -q".
+	* gdb.server/connect-without-multi-process.exp: Use "break -q".
+	* gdb.trace/change-loc.exp: Use "break -q".
+	* gdb.trace/pending.exp: Use "break -q".
+	* gdb.tui/basic.exp: Use "list -q".
+	* gdb.tui/list-before.exp: Use "list -q".
+	* gdb.tui/list.exp: Use "list -q".
+	* lib/gdb.exp (gdb_has_argv0): Use "break -q".
+
+2020-10-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/ui-redirect.exp: Expect "break -qualified main" in
+	saved breakpoints file.
+	* gdb.guile/scm-breakpoint.exp: Expect "-qualified main" when
+	inspecting breakpoint list.
+	* lib/gdb.exp (runto_main): Add "qualified" to options.
+	* lib/mi-support.exp (mi_runto_helper): Add 'qualified' parameter,
+	and handle it.
+	(mi_runto_main): Pass 1 as qualified argument.
+
+2020-10-13  Pedro Alves  <pedro@palves.net>
+
+	* lib/mi-support.exp (mi_runto_main): New proc.
+	(mi_run_to_main): Use it.
+	* gdb.mi/mi-catch-cpp-exceptions.exp: Likewise.
+	* gdb.mi/mi-var-cmd.exp: Likewise.
+	* gdb.mi/mi-var-invalidate.exp: Likewise.
+	* mi-var-list-children-invalid-grandchild.exp: Likewise.
+	* gdb.mi/mi2-amd64-entry-value.exp: Likewise.
+	* gdb.mi/new-ui-mi-sync.exp: Likewise.
+	* gdb.mi/user-selected-context-sync.exp: Likewise.
+	* gdb.opt/inline-cmds.exp: Likewise.
+	* gdb.python/py-framefilter-mi.exp: Likewise.
+	* gdb.python/py-mi.exp: Likewise.
+
+2020-10-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.ada/fun_in_declare.exp: Use "runto_main" instead of
+	"runto main".
+	* gdb.ada/small_reg_param.exp: Likewise.
+	* gdb.arch/powerpc-d128-regs.exp: Likewise.
+	* gdb.base/annota1.exp: Likewise.
+	* gdb.base/anon.exp: Likewise.
+	* gdb.base/breakpoint-in-ro-region.exp: Likewise.
+	* gdb.base/dprintf-non-stop.exp: Likewise.
+	* gdb.base/dprintf.exp: Likewise.
+	* gdb.base/gdb11530.exp: Likewise.
+	* gdb.base/gdb11531.exp: Likewise.
+	* gdb.base/gnu_vector.exp: Likewise.
+	* gdb.base/interrupt-noterm.exp: Likewise.
+	* gdb.base/memattr.exp: Likewise.
+	* gdb.base/step-over-syscall.exp: Likewise.
+	* gdb.base/watch-cond-infcall.exp: Likewise.
+	* gdb.base/watch-read.exp: Likewise.
+	* gdb.base/watch-vfork.exp: Likewise.
+	* gdb.base/watch_thread_num.exp: Likewise.
+	* gdb.base/watchpoint-stops-at-right-insn.exp: Likewise.
+	* gdb.guile/scm-frame-inline.exp: Likewise.
+	* gdb.linespec/explicit.exp: Likewise.
+	* gdb.opt/inline-break.exp: Likewise.
+	* gdb.python/py-frame-inline.exp: Likewise.
+	* gdb.reverse/break-precsave.exp: Likewise.
+	* gdb.reverse/break-reverse.exp: Likewise.
+	* gdb.reverse/consecutive-precsave.exp: Likewise.
+	* gdb.reverse/consecutive-reverse.exp: Likewise.
+	* gdb.reverse/finish-precsave.exp: Likewise.
+	* gdb.reverse/finish-reverse.exp: Likewise.
+	* gdb.reverse/fstatat-reverse.exp: Likewise.
+	* gdb.reverse/getresuid-reverse.exp: Likewise.
+	* gdb.reverse/i386-precsave.exp: Likewise.
+	* gdb.reverse/i386-reverse.exp: Likewise.
+	* gdb.reverse/i386-sse-reverse.exp: Likewise.
+	* gdb.reverse/i387-env-reverse.exp: Likewise.
+	* gdb.reverse/i387-stack-reverse.exp: Likewise.
+	* gdb.reverse/insn-reverse.exp: Likewise.
+	* gdb.reverse/machinestate-precsave.exp: Likewise.
+	* gdb.reverse/machinestate.exp: Likewise.
+	* gdb.reverse/pipe-reverse.exp: Likewise.
+	* gdb.reverse/readv-reverse.exp: Likewise.
+	* gdb.reverse/recvmsg-reverse.exp: Likewise.
+	* gdb.reverse/rerun-prec.exp: Likewise.
+	* gdb.reverse/s390-mvcle.exp: Likewise.
+	* gdb.reverse/solib-precsave.exp: Likewise.
+	* gdb.reverse/solib-reverse.exp: Likewise.
+	* gdb.reverse/step-precsave.exp: Likewise.
+	* gdb.reverse/step-reverse.exp: Likewise.
+	* gdb.reverse/time-reverse.exp: Likewise.
+	* gdb.reverse/until-precsave.exp: Likewise.
+	* gdb.reverse/until-reverse.exp: Likewise.
+	* gdb.reverse/waitpid-reverse.exp: Likewise.
+	* gdb.reverse/watch-precsave.exp: Likewise.
+	* gdb.reverse/watch-reverse.exp: Likewise.
+	* gdb.threads/kill.exp: Likewise.
+	* gdb.threads/tid-reuse.exp: Likewise.
+
+2020-10-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/26642
+	* gdb.base/maint-target-async-off.c: New test.
+	* gdb.base/maint-target-async-off.exp: New test.
+
+2020-10-13  Alan Modra  <amodra@gmail.com>
+
+	* gdb.arch/powerpc-altivec.s,
+	* gdb.arch/powerpc-power7.s,
+	* gdb.arch/powerpc-power8.s,
+	* gdb.arch/powerpc-power9.s,
+	* gdb.arch/powerpc-vsx.s,
+	* gdb.arch/powerpc-vsx2.s: Remove duplicate instructions.
+	* gdb.arch/powerpc-altivec.exp,
+	* gdb.arch/powerpc-power7.exp,
+	* gdb.arch/powerpc-power8.exp,
+	* gdb.arch/powerpc-power9.exp,
+	* gdb.arch/powerpc-vsx.exp,
+	* gdb.arch/powerpc-vsx2.exp: Likewise, and update expected
+	disassembly of mfvsrd/mtvsrd.
+
+2020-10-13  Alan Modra  <amodra@gmail.com>
+
+	* gdb.arch/arm-disassembler-options.exp: Adjust expected
+	"target architecture" output.
+	* gdb.arch/powerpc-d128-regs.exp: Likewise.
+	* gdb.arch/powerpc-disassembler-options.exp: Likewise.
+	* gdb.arch/ppc64-symtab-cordic.exp: Likewise.
+	* gdb.arch/s390-disassembler-options.exp: Likewise.
+
+2020-10-12  Pedro Alves  <pedro@palves.net>
+
+	PR exp/26602
+	PR c++/26550
+	* gdb.cp/ambiguous.cc (marker1): Delete.
+	(main): Initialize all the fields of the locals.  Replace marker1
+	call with a "set breakpoint here" marker.
+	* gdb.cp/ambiguous.exp: Modernize.  Use gdb_continue_to_breakpoint
+	instead of running to marker1.  Add tests printing all the
+	variables and all the fields of the variables.
+	(test_ambiguous): New proc, expecting the new GDB output when a
+	field access is ambiguous.  Change all "warning: X ambiguous"
+	tests to use it.
+
+2020-10-12  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/msym-bp.c (foo): Add __attribute__ ((used)).
+	* gdb.base/msym-bp-2.c (foo): Likewise.
+	* gdb.base/msym-lang.c (foo): Likewise.
+	* gdb.base/msym-lang-main.c (foo): Likewise.
+	* gdb.base/symtab-search-order-1.c (static_global): Likewise.
+	* gdb.guile/scm-pretty-print.c (eval_func): Likewise.
+	* gdb.mi/mi-sym-info-1.c (global_f1): Likewise.
+	* gdb.mi/mi-sym-info-2.c (global_f1, var1, var2): Likewise.
+	* gdb.multi/watchpoint-multi-exit.c (globalvar): Likewise.
+	* gdb.python/py-as-string.c (enum_valid, enum_invalid): Likewise.
+	* gdb.python/py-objfile.c (static_var): Likewise.
+	* gdb.python/py-symbol.c (rr): Likewise.
+	* gdb.python/py-symbol-2.c (anon, rr): Likewise.
+	* gdb.mi/mi-sym-info.exp (lineno1, lineno2): Updated.
+
+2020-10-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/mixed-lang-stack.exp (run_tests): Update expected
+	output of backtrace.
+
+2020-10-09  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/scalar_storage/storage.adb (Another_Range): New type.
+	(Rec): Add field.  Fix range.
+	* gdb.ada/scalar_storage.exp: Update.
+
+2020-10-09  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR exp/26714
+	* gdb.base/printcmds.exp: Add tests for void results.
+
+2020-10-09  Jan Vrany  <jan.vrany@labware.com>
+
+	* gdb.mi/mi-cmd-param-changed.exp: Check that notification is
+	is emmited for both 'set directories' and 'directory' commands.
+
+2020-10-08  Tom Tromey  <tom@tromey.com>
+
+	* gdb.base/style.exp: Check that "main"'s name is styled.
+
+2020-10-07  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.base/find.exp: Rename some tests.
+
+2020-10-06  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/list0.c (unused): Add __attribute__ ((used)).
+	* gdb.base/list1.c (unused): Likewise.
+
+2020-10-06  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/list-ambiguous0.c (ambiguous_var): Add
+	__attribute__ ((used)).
+	* gdb.base/list-ambiguous1.c (ambiguous_var): Likewise.
+
+2020-10-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.base/m32r.ld: Remove SEARCH_DIR line.  Add MEMORY regions,
+	make use of regions throughout.
+	* gdb.base/overlays.exp: Enclose string with variableds in "..",
+	not {...}.
+	* gdb.base/ovlymgr.c: Add 'string.h' and 'stdlib.h' includes.
+
+2020-10-05  Hannes Domani  <ssbssa@yahoo.de>
+
+	* gdb.base/call-sc.c: Fix return struct on stack test case.
+	* gdb.base/call-sc.exp: Likewise.
+
+2020-10-02  Gary Benson <gbenson@redhat.com>
+
+	* README: Fix "paralell".
+
+2020-09-30  Gary Benson <gbenson@redhat.com>
+
+	* gdb.dwarf2/dw2-double-set-die-type.S (.Ldie_3e0):
+	Convert directive to lowercase.
+	(.Labbrev1_begin): Add missing label.
+	(abbrev code 0x1): Remove DW_AT_stmt_list.
+	(.Ldie_b): Likewise.
+
+2020-09-27  Tom Tromey  <tom@tromey.com>
+
+	* gdb.tui/new-layout.exp: Use with_test_prefix.
+
+2020-09-26  Gareth Rees <grees@undo.io>  (tiny change)
+
+	PR python/26586
+	* gdb.python/python.exp: add test cases for the from_tty
+	argument to gdb.execute.
+
+2020-09-25  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/infcall-nested-structs.exp.tcl: Add
+	additional_flags=-Wno-tautological-compare for C++
+	tests when compiling using Clang.
+
+2020-09-25  Gary Benson <gbenson@redhat.com>
+
+	* lib/gdb.exp (gdb_compile): Pass "-x c++" earlier, and only
+	for .c files.
+
+2020-09-24  Tom Tromey  <tromey@adacore.com>
+
+	PR tui/26638:
+	* gdb.tui/list.exp: Check output of "focus next".
+
+2020-09-23  Tom Tromey  <tom@tromey.com>
+
+	* gdb.dwarf2/intbits.exp: New file.
+	* gdb.dwarf2/intbits.c: New file.
+
+2020-09-20  Pedro Alves  <pedro@palves.net>
+
+	* lib/mi-support.exp (mi_uncatched_gdb_exit) Switch to the main
+	spawn_id before calling remote_close.  Close secondary MI channel.
+
+2020-09-20  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/testenv.exp (find_env): Bail out if printing 'envp[$i]'
+	fails.
+
+2020-09-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/array-slices.exp: Update expected results.
+	* gdb.fortran/class-allocatable-array.exp: Likewise.
+	* gdb.fortran/multi-dim.exp: Likewise.
+	* gdb.fortran/vla-type.exp: Likewise.
+	* gdb.mi/mi-vla-fortran.exp: Likewise.
+
+2020-09-18  Victor Collod  <vcollod@nvidia.com>
+
+	PR gdb/26635
+	* gdb.arch/amd64-prologue-skip-cf-protection.exp: Make the test
+	compatible with i386, and move it to...
+	* gdb.arch/i386-prologue-skip-cf-protection.exp: ... here.
+	* gdb.arch/amd64-prologue-skip-cf-protection.c: Move to...
+	* gdb.arch/i386-prologue-skip-cf-protection.c: ... here.
+
+2020-09-18  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26631
+	* gdb.multi/multi-target-thread-find.exp: New file.
+
+2020-09-18  Pedro Alves  <pedro@palves.net>
+
+	* gdb.multi/multi-target-continue.exp: New file, factored out from
+	multi-target.exp.
+	* gdb.multi/multi-target-info-inferiors.exp: New file, factored out from
+	multi-target.exp.
+	* gdb.multi/multi-target-interrupt.exp: New file, factored out from
+	multi-target.exp.
+	* gdb.multi/multi-target-no-resumed.exp: New file, factored out from
+	multi-target.exp.
+	* gdb.multi/multi-target-ping-pong-next.exp: New file, factored out from
+	multi-target.exp.
+	* gdb.multi/multi-target.exp.tcl: New file, factored out from
+	multi-target.exp.
+	* gdb.multi/multi-target.exp: Delete.
+
+2020-09-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/array-slices.exp: Add missing message data.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.cp/call-c-1.c (foo) [__cplusplus]: Add extern "C".
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.python/py-frame-inline.exp: Adjust to optionally expect a
+	full prototype.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.python/py-as-string.c: Add cast.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/sizeof.c (fill): Add cast.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/share-env-with-gdbserver.c (main): Add cast.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/prologue.c [__cplusplus] (marker): Explicitly specify
+	linkage name.
+	* gdb.base/prologue.exp: Use print /d.
+	* gdb.base/symbol-alias.exp: Handle C++ output.
+	* gdb.base/symbol-alias2.c: Handle C++ output.
+	[__cplusplus] (func): Explicitly specify linkage name.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.python/py-nested-maps.c (struct key_t): Rename to...
+	(struct my_key_t): ... this.  Adjust all references.
+	(struct value_t): Rename to ...
+	(struct my_value_t): ... this.  Adjust all references.
+	(create_map, add_map_element, create_map_map)
+	(add_map_map_element): Add casts.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.python/py-framefilter-mi.c (funca): Add casts.
+	* gdb.python/py-framefilter.c.c (funca, func2): Add casts.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.mi/var-cmd.c (do_anonymous_type_tests): Add cast.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/exprs.c: Replace 'this' with 'self' throughout.
+	* gdb.base/ptype.c: : Replace 'this' with 'self' throughout.
+	(charfoo, intfoo): Define full prototype.
+	* gdb.base/ptype1.c (charfoo): Define full prototype.
+	* gdb.base/setvar.c: Replace 'this' with 'self' throughout.
+	* gdb.base/whatis.c: Replace 'this' with 'self' throughout.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/charset.c [__cplusplus] (wchar_t, char16_t, char32_t):
+	Don't define.
+	(utf_32_string): Compile for both C and C++.
+	* gdb.base/charset.exp: Use "print /d".
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/watchpoint.c (buf): Make it 31 bytes.
+	(nullptr): Rename to ...
+	(null_ptr): ... this.
+	* gdb.base/watchpoint.exp: Adjust to rename.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/printcmds.c (three, flag_enum_without_zero)
+	(three_not_flag): Add casts.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/examine-backward.c (Barrier, TestStrings): Now unsigned
+	char array.
+	(main): Add references to Barrier, TestStrings, TestStringsH and
+	TestStringsW.
+	* gdb.base/examine-backward.exp: Issue "set print asm-demangle on"
+	and expect a full prototype in C++.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/nested-addr.c (main): Add cast.
+	* gdb.base/nested-addr.exp: Use "print /d".
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/break.exp (func): New.  Use it throughout when
+	expecting a function name.
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/display.exp: Issue "set print asm-demangle on".
+
+2020-09-17  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/find.c: Include <string.h>.
+	(init_bufs): Add cast.
+	* gdb.base/find.exp: Issue "set print asm-demangle on".
+
+2020-09-16  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/26598:
+	* gdb.base/skipcxx.exp: New file.
+	* gdb.base/skipcxx.cc: New file.
+
+2020-09-16  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26617
+	* gdb.dlang/watch-loc.c: Only add .debug_aranges if
+        WITH_DEBUG_SECTIONS is defined.
+	(xstr, str): New macro.
+	(.debug_aranges): Use DMAIN_START_0/1/2 and DMAIN_LENGTH
+	to get start and size of _Dmain.
+	* gdb.dlang/watch-loc.exp: Pass DMAIN_START_0/1/2 and DMAIN_LENGTH
+	using additional_flags.
+
+2020-09-16  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/bp-cmds-sourced-script.c: New file.
+	* gdb.base/bp-cmds-sourced-script.exp: New test.
+	* gdb.base/bp-cmds-sourced-script.gdb: New file.
+
+2020-09-16  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdbserver-support.exp (gdbserver_exit): Make sure we
+	get the gdb prompt after issuing "monitor exit".
+
+2020-09-16  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26624
+	* lib/gdb.exp (gdb_assert): Catch errors in condition evaluation.
+
+2020-09-16  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26618
+	* gdb.tui/new-layout.exp: Escape unbalanced braces.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	PR rust/26197:
+	* lib/rust-support.exp (rust_llvm_version): New proc.
+	* gdb.rust/simple.exp: Check rust_llvm_version.
+
+2020-09-14  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.rust/traits.exp: Fix PATH warning.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/catch-follow-exec.c (main): Add explicit return
+	statement.
+	* gdb.base/catch-signal.c (main): Likewise.
+	* gdb.base/condbreak-call-false.c (main): Likewise.
+	* gdb.base/consecutive.c (main): Add explicit return
+	statement and return type.
+	* gdb.base/cursal.c (main): Add explicit return statement.
+	* gdb.base/cvexpr.c (main): Likewise.
+	* gdb.base/display.c (main): Add explicit return statement and
+	return type.
+	* gdb.base/dprintf-detach.c (main): Add explicit return statement.
+	* gdb.base/endianity.c (main): Likewise.
+	* gdb.base/execd-prog.c (main): Likewise.
+	* gdb.base/gdb1090.c (main): Likewise.
+	* gdb.base/info_qt.c (main): Likewise.
+	* gdb.base/lineinc.c (main): Likewise.
+	* gdb.base/load-command.c (main): Likewise.
+	* gdb.base/macscp1.c (main): Likewise.
+	* gdb.base/pr10179-a.c (main): Likewise.
+	* gdb.base/quit-live.c (main): Likewise.
+	* gdb.base/scope0.c (main): Likewise.
+	* gdb.base/settings.c (main): Likewise.
+	* gdb.base/stack-checking.c (main): Return int.
+	* gdb.base/varargs.c (main): Add explicit return statement.
+	* gdb.cp/ambiguous.cc (main): Likewise.
+	* gdb.cp/anon-struct.cc (main): Likewise.
+	* gdb.cp/anon-union.cc (main): Likewise.
+	* gdb.cp/bool.cc (main): Likewise.
+	* gdb.cp/bs15503.cc (main): Likewise.
+	* gdb.cp/cplusfuncs.cc (main): Likewise.
+	* gdb.cp/cttiadd.cc (main): Likewise.
+	* gdb.cp/extern-c.cc (main): Likewise.
+	* gdb.cp/filename.cc (main): Likewise.
+	* gdb.cp/formatted-ref.cc (main): Likewise.
+	* gdb.cp/mb-ctor.cc (main): Likewise.
+	* gdb.cp/member-ptr.cc (main): Likewise.
+	* gdb.cp/minsym-fallback-main.cc (main): Likewise.
+	* gdb.cp/overload-const.cc (main): Likewise.
+	* gdb.cp/paren-type.cc (main): Likewise.
+	* gdb.cp/parse-lang.cc (main): Likewise.
+	* gdb.cp/pr-1023.cc (main): Likewise.
+	* gdb.cp/psmang1.cc (main): Likewise.
+	* gdb.cp/readnow-language.cc (main): Likewise.
+	* gdb.cp/ref-params.cc (main): Likewise.
+	* gdb.cp/rvalue-ref-params.cc (main): Likewise.
+	* gdb.cp/virtbase2.cc (main): Likewise.
+	* gdb.dwarf2/dw2-abs-hi-pc.c (main): Likewise.
+	* gdb.dwarf2/dw2-namespaceless-anonymous.c (main): Likewise.
+	* gdb.dwarf2/dw4-toplevel-types.cc (main): Likewise.
+	* gdb.mi/mi-console.c (main): Likewise.
+	* gdb.mi/mi-read-memory.c (main): Likewise.
+	* gdb.modula2/multidim.c (main): Likewise.
+	* gdb.opt/inline-small-func.c (main): Likewise.
+	* gdb.python/py-rbreak.c (main): Likewise.
+	* gdb.stabs/exclfwd1.c (main): Likewise.
+	* gdb.trace/qtro.c (main): Likewise.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/share-env-with-gdbserver.c (main): Call my_getenv
+	instead of getenv.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/dbx.exp (dbx_gdb_start): Adjust to use gdb_spawn
+	instead of spawning GDB with remote_spawn.
+	* lib/mi-support.exp (default_mi_gdb_start): Adjust to use
+	gdb_spawn instead of spawning GDB with remote_spawn.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.dwarf2/ada-linkage-name.c (main): Move to the bottom of the
+	file and add calls to first and second.
+	* gdb.dwarf2/atomic.c (main): Move to the bottom of the file and
+	add call to f.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.mi/mi-break-qualified.cc: New file.
+	* gdb.mi/mi-break-qualified.exp: New file.
+	* lib/mi-support.exp (mi_create_breakpoint_multi)
+	(mi_make_breakpoint_loc, mi_make_breakpoint_multi): New
+	procedures.
+	(mi_create_breakpoint_1): New, factored out from
+	mi_create_breakpoint.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.cp/inherit.exp: No longer pass -Wno-deprecated-register.
+	* gdb.cp/misc.exp: No longer pass -Wno-deprecated-register.
+	* gdb.cp/misc.cc (class small, small::method, marker_reg1)
+	(register_class): Delete.
+	(main): Don't call register_class.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.cp/classes.exp: No longer pass -Wno-deprecated-register.
+	(do_tests): Remove "calling method for small class" test.
+	* gdb.cp/classes.cc (class small, small::method, marker_reg1)
+	(register_class): Delete.
+	(main): Don't call register_class.
+	* gdb.cp/call-method-register.exp: New file, based on bits removed
+	from classes.exp.
+	* gdb.cp/call-method-register.cc: New file, based on bits removed
+	from classes.cc.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/msym-bp-2.c: New.
+	* gdb.base/msym-bp-shl-lib.c: New file.
+	* gdb.base/msym-bp-shl-main-2.c: New file.
+	* gdb.base/msym-bp-shl-main.c: New file.
+	* gdb.base/msym-bp-shl.exp: New file.
+	* gdb.base/msym-bp.c: New file.
+	* gdb.base/msym-bp.exp: New file.
+
+2020-09-13  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.base/default.exp: Change $_gdb_major to 11.
+
+2020-09-11  Moritz Riesterer  <moritz.riesterer@intel.com>
+	    Felix Willgerodt  <Felix.Willgerodt@intel.com>
+
+	* x86-avx512bf16.c: New file.
+	* x86-avx512bf16.exp: Likewise.
+	* lib/gdb.exp (skip_avx512bf16_tests): New function.
+
+2020-09-11  Tom de Vries  <tdevries@suse.de>
+
+	PR exp/26602
+	* gdb.cp/ambiguous.exp: Add KFAILs for PR26602.
+
+2020-09-11  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/bp-cmds-execution-x-script.exp: Remove a stale comment.
+
+2020-09-10  Alan Modra  <amodra@gmail.com>
+
+	PR 26597
+	* gdb.dlang/demangle.exp: Update tests as per gcc commit 387d0773f3.
+
+2020-09-08  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/frame-inlined-in-outer-frame.exp: Consume gdb prompt
+	after gdb_starti_cmd.
+
+2020-09-03  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+
+	* lib/fortran.exp (fortran_complex8): New proc.
+	(fortran_complex16): New proc.
+	* gdb.fortran/complex.exp: Use routines from fortran.exp
+	* gdb.fortran/pointer-to-pointer.exp: Likewise.
+	* gdb.fortran/vla-ptr-info.exp: Likewise.
+
+2020-09-03  Tom de Vries  <tdevries@suse.de>
+
+	PR breakpoint/26546
+	* gdb.base/label-without-address.exp: Runto main first.
+
+2020-09-02  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/mi_var_access.exp: Test children of access variable.
+	* gdb.ada/mi_var_access/mi_access.adb: Add new stop markers.
+	* gdb.ada/mi_var_array.exp: Update.
+
+2020-08-31  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.base/corefile.exp (warning-free): XFAIL test when running
+	on docker w/ AUFS storage driver.
+
+2020-08-31  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.base/corefile2.exp (renamed binfile): New tests.
+
+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.dwarf2/dw2-reg-undefined.exp: Remove spurious #.
+
+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.dwarf2/frame-inlined-in-outer-frame.exp: New file.
+	* gdb.dwarf2/frame-inlined-in-outer-frame.S: New file.
+
+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.dwarf2/dw2-reg-undefined.exp: Test "set debug frame 1"
+	output, printing a "not saved" value from history and printing a
+	convenience variable created from a "not saved" value.
+
+2020-08-31  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/eh_return.exp: Use nopie.
+
+2020-08-28  Pedro Alves  <pedro@palves.net>
+
+	* gdb.base/advance-until-multiple-locations.exp
+	(advance_overload, until_overload): Adjust to match the
+	frame/function header instead of the source line text.
+
+2020-08-28  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/label-without-address.c: New test.
+	* gdb.base/label-without-address.exp: New file.
+
+2020-08-27  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26523
+	PR gdb/26524
+	* gdb.base/advance-until-multiple-locations.cc: New.
+	* gdb.base/advance-until-multiple-locations.exp: New.
+
+2020-08-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	*  gdb.dwarf2/dw2-reg-undefined.exp: Use multi_line.
+
+2020-08-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.arch/amd64-byte.exp: Make test names unique, use
+	gdb_breakpoint, and fix typo 'forth' -> 'fourth'.
+	* gdb.arch/amd64-dword.exp: Likewise.
+	* gdb.arch/amd64-pseudo.c: Fix typo 'forth' -> 'fourth'.
+	* gdb.arch/amd64-stap-special-operands.exp: Make test names
+	unique.
+	* gdb.arch/amd64-tailcall-ret.exp: Likewise.
+	* gdb.arch/amd64-word.exp: Make test names unique, use
+	gdb_breakpoint, and fix typo 'forth' -> 'fourth'.
+	* gdb.arch/i386-byte.exp: Make test names unique, use
+	gdb_breakpoint.
+	* gdb.arch/i386-word.exp: Likewise.
+
+2020-08-25  Shahab Vahedi  <shahab@synopsys.com>
+
+	* gdb.arch/arc-tdesc-cpu.xml: Use new feature names.
+
+2020-08-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/26532
+	* gdb.threads/stepi-random-signal.exp: Update pattern.
+
+2020-08-25  Simon Marchi  <simon.marchi@efficios.com>
+
+	PR gdb/26532
+	* gdb.base/ui-redirect.exp: Update pattern.
+
+2020-08-25  Gary Benson <gbenson@redhat.com>
+
+	* gdb.dwarf2/dw2-dir-file-name.exp: Use system assembler
+	when compiling with clang.
+	* gdb.dwarf2/dw2-restore.exp: Likewise.
+
+2020-08-25  Gary Benson <gbenson@redhat.com>
+
+	* gdb.cp/ambiguous.exp: Enable test when compiling with GCC.
+	Add additional_flags=-Wno-inaccessible-base when compiling
+	with GCC >= 10.1 or clang.  Add additional_flags=-w when
+	compiling with GCC < 10.
+
+2020-08-25  Gaius Mulley  <gaiusmod2@gmail.com>
+
+	PR m2/26372
+	* gdb.modula2/multidim.c: New file.
+	* gdb.modula2/multidim.exp: New file.
+
+2020-08-24  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* lib/gdb.exp (runto): Always emit fail on internal error.
+
+2020-08-24  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb.base/gdb-sigterm.exp (do_test): Update expected regexp.
+	* gdb.threads/signal-while-stepping-over-bp-other-thread.exp:
+	Likewise.
+	* gdb.threads/stepi-random-signal.exp: Likewise.
+
+2020-08-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/print-file-var.exp: Fix typo "breapoint".
+	* gdb.trace/strace.exp: Ditto.
+
+2020-08-19  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+
+	* gdb.fortran/vla-type.exp: Skip commands not required for
+	the Flang compiled binaries after prologue fix.
+
+2020-08-17  Tom de Vries  <tdevries@suse.de>
+	    Tom Tromey  <tromey@adacore.com>
+
+	PR rust/26197:
+	* gdb.rust/simple.exp (xfail_pattern): Update for new failure.
+
+2020-08-17  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/mi_var_access.exp: New file.
+	* gdb.ada/mi_var_access/mi_access.adb: New file.
+	* gdb.ada/mi_var_access/pck.adb: New file.
+	* gdb.ada/mi_var_access/pck.ads: New file.
+
+2020-08-16  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/25350
+	* gdb.base/eh_return.c: New test.
+	* gdb.base/eh_return.exp: New file.
+
+2020-08-15  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.fortran/mixed-lang-stack.c (fortran_charlen_t): New type.
+	(mixed_func_1d_): Use fortran_charlen_t in decl.
+
+2020-08-15  Tom de Vries  <tdevries@suse.de>
+
+	PR backtrace/26390
+	* gdb.fortran/mixed-lang-stack.exp: Call bt with -frame-arguments all.
+	Update expected pattern.
+
+2020-08-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.fortran/complex.exp: Check skip_fortran_tests.
+	* gdb.fortran/library-module.exp: Likewise.
+	* gdb.fortran/logical.exp: Likewise.
+	* gdb.fortran/module.exp: Likewise.
+	* gdb.fortran/print_type.exp: Likewise.
+	* gdb.fortran/vla-alloc-assoc.exp: Likewise.
+	* gdb.fortran/vla-datatypes.exp: Likewise.
+	* gdb.fortran/vla-history.exp: Likewise.
+	* gdb.fortran/vla-ptr-info.exp: Likewise.
+	* gdb.fortran/vla-ptype-sub.exp: Likewise.
+	* gdb.fortran/vla-ptype.exp: Likewise.
+	* gdb.fortran/vla-sizeof.exp: Likewise.
+	* gdb.fortran/vla-type.exp: Likewise.
+	* gdb.fortran/vla-value-sub-arbitrary.exp: Likewise.
+	* gdb.fortran/vla-value-sub-finish.exp: Likewise.
+	* gdb.fortran/vla-value-sub.exp: Likewise.
+	* gdb.fortran/vla-value.exp: Likewise.
+
+2020-08-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.ada/access_tagged_param.exp: Check skip_ada_tests.
+	* gdb.ada/access_to_packed_array.exp: Likewise.
+	* gdb.ada/access_to_unbounded_array.exp: Likewise.
+	* gdb.ada/addr_arith.exp: Likewise.
+	* gdb.ada/arr_acc_idx_w_gap.exp: Likewise.
+	* gdb.ada/arr_arr.exp: Likewise.
+	* gdb.ada/arr_enum_idx_w_gap.exp: Likewise.
+	* gdb.ada/array_bounds.exp: Likewise.
+	* gdb.ada/array_of_variable_length.exp: Likewise.
+	* gdb.ada/array_ptr_renaming.exp: Likewise.
+	* gdb.ada/array_subscript_addr.exp: Likewise.
+	* gdb.ada/arraydim.exp: Likewise.
+	* gdb.ada/arrayparam.exp: Likewise.
+	* gdb.ada/arrayptr.exp: Likewise.
+	* gdb.ada/assign_1.exp: Likewise.
+	* gdb.ada/assign_arr.exp: Likewise.
+	* gdb.ada/atomic_enum.exp: Likewise.
+	* gdb.ada/attr_ref_and_charlit.exp: Likewise.
+	* gdb.ada/bad-task-bp-keyword.exp: Likewise.
+	* gdb.ada/bias.exp: Likewise.
+	* gdb.ada/boolean_expr.exp: Likewise.
+	* gdb.ada/bp_c_mixed_case.exp: Likewise.
+	* gdb.ada/bp_enum_homonym.exp: Likewise.
+	* gdb.ada/bp_inlined_func.exp: Likewise.
+	* gdb.ada/bp_on_var.exp: Likewise.
+	* gdb.ada/bp_range_type.exp: Likewise.
+	* gdb.ada/bp_reset.exp: Likewise.
+	* gdb.ada/call_pn.exp: Likewise.
+	* gdb.ada/catch_assert_if.exp: Likewise.
+	* gdb.ada/catch_ex.exp: Likewise.
+	* gdb.ada/catch_ex_std.exp: Likewise.
+	* gdb.ada/char_enum.exp: Likewise.
+	* gdb.ada/char_param.exp: Likewise.
+	* gdb.ada/complete.exp: Likewise.
+	* gdb.ada/cond_lang.exp: Likewise.
+	* gdb.ada/convvar_comp.exp: Likewise.
+	* gdb.ada/dgopt.exp: Likewise.
+	* gdb.ada/disc_arr_bound.exp: Likewise.
+	* gdb.ada/display_nested.exp: Likewise.
+	* gdb.ada/dot_all.exp: Likewise.
+	* gdb.ada/dyn_loc.exp: Likewise.
+	* gdb.ada/dyn_stride.exp: Likewise.
+	* gdb.ada/excep_handle.exp: Likewise.
+	* gdb.ada/expr_delims.exp: Likewise.
+	* gdb.ada/expr_with_funcall.exp: Likewise.
+	* gdb.ada/exprs.exp: Likewise.
+	* gdb.ada/fin_fun_out.exp: Likewise.
+	* gdb.ada/fixed_cmp.exp: Likewise.
+	* gdb.ada/formatted_ref.exp: Likewise.
+	* gdb.ada/frame_arg_lang.exp: Likewise.
+	* gdb.ada/frame_args.exp: Likewise.
+	* gdb.ada/fullname_bp.exp: Likewise.
+	* gdb.ada/fun_addr.exp: Likewise.
+	* gdb.ada/fun_in_declare.exp: Likewise.
+	* gdb.ada/fun_overload_menu.exp: Likewise.
+	* gdb.ada/fun_renaming.exp: Likewise.
+	* gdb.ada/funcall_char.exp: Likewise.
+	* gdb.ada/funcall_param.exp: Likewise.
+	* gdb.ada/funcall_ptr.exp: Likewise.
+	* gdb.ada/funcall_ref.exp: Likewise.
+	* gdb.ada/homonym.exp: Likewise.
+	* gdb.ada/info_addr_mixed_case.exp: Likewise.
+	* gdb.ada/info_auto_lang.exp: Likewise.
+	* gdb.ada/info_exc.exp: Likewise.
+	* gdb.ada/info_types.exp: Likewise.
+	* gdb.ada/int_deref.exp: Likewise.
+	* gdb.ada/interface.exp: Likewise.
+	* gdb.ada/iwide.exp: Likewise.
+	* gdb.ada/lang_switch.exp: Likewise.
+	* gdb.ada/length_cond.exp: Likewise.
+	* gdb.ada/maint_with_ada.exp: Likewise.
+	* gdb.ada/mi_catch_assert.exp: Likewise.
+	* gdb.ada/mi_catch_ex.exp: Likewise.
+	* gdb.ada/mi_catch_ex_hand.exp: Likewise.
+	* gdb.ada/mi_dyn_arr.exp: Likewise.
+	* gdb.ada/mi_ex_cond.exp: Likewise.
+	* gdb.ada/mi_exc_info.exp: Likewise.
+	* gdb.ada/mi_interface.exp: Likewise.
+	* gdb.ada/mi_prot.exp: Likewise.
+	* gdb.ada/mi_ref_changeable.exp: Likewise.
+	* gdb.ada/mi_string_access.exp: Likewise.
+	* gdb.ada/mi_task_arg.exp: Likewise.
+	* gdb.ada/mi_task_info.exp: Likewise.
+	* gdb.ada/mi_var_array.exp: Likewise.
+	* gdb.ada/mi_var_union.exp: Likewise.
+	* gdb.ada/mi_variant.exp: Likewise.
+	* gdb.ada/minsyms.exp: Likewise.
+	* gdb.ada/mod_from_name.exp: Likewise.
+	* gdb.ada/nested.exp: Likewise.
+	* gdb.ada/null_array.exp: Likewise.
+	* gdb.ada/optim_drec.exp: Likewise.
+	* gdb.ada/out_of_line_in_inlined.exp: Likewise.
+	* gdb.ada/packed_array_assign.exp: Likewise.
+	* gdb.ada/packed_tagged.exp: Likewise.
+	* gdb.ada/pp-rec-component.exp: Likewise.
+	* gdb.ada/print_chars.exp: Likewise.
+	* gdb.ada/print_pc.exp: Likewise.
+	* gdb.ada/ptr_typedef.exp: Likewise.
+	* gdb.ada/ptype_arith_binop.exp: Likewise.
+	* gdb.ada/ptype_array.exp: Likewise.
+	* gdb.ada/ptype_field.exp: Likewise.
+	* gdb.ada/ptype_tagged_param.exp: Likewise.
+	* gdb.ada/ptype_union.exp: Likewise.
+	* gdb.ada/py_range.exp: Likewise.
+	* gdb.ada/py_taft.exp: Likewise.
+	* gdb.ada/rdv_wait.exp: Likewise.
+	* gdb.ada/rec_comp.exp: Likewise.
+	* gdb.ada/rec_return.exp: Likewise.
+	* gdb.ada/ref_param.exp: Likewise.
+	* gdb.ada/ref_tick_size.exp: Likewise.
+	* gdb.ada/rename_subscript_param.exp: Likewise.
+	* gdb.ada/repeat_dyn.exp: Likewise.
+	* gdb.ada/same_component_name.exp: Likewise.
+	* gdb.ada/same_enum.exp: Likewise.
+	* gdb.ada/scalar_storage.exp: Likewise.
+	* gdb.ada/set_wstr.exp: Likewise.
+	* gdb.ada/small_reg_param.exp: Likewise.
+	* gdb.ada/str_binop_equal.exp: Likewise.
+	* gdb.ada/str_ref_cmp.exp: Likewise.
+	* gdb.ada/str_uninit.exp: Likewise.
+	* gdb.ada/sub_variant.exp: Likewise.
+	* gdb.ada/sym_print_name.exp: Likewise.
+	* gdb.ada/taft_type.exp: Likewise.
+	* gdb.ada/tagged.exp: Likewise.
+	* gdb.ada/tagged_access.exp: Likewise.
+	* gdb.ada/task_bp.exp: Likewise.
+	* gdb.ada/task_switch_in_core.exp: Likewise.
+	* gdb.ada/tasks.exp: Likewise.
+	* gdb.ada/tick_last_segv.exp: Likewise.
+	* gdb.ada/tick_length_array_enum_idx.exp: Likewise.
+	* gdb.ada/type_coercion.exp: Likewise.
+	* gdb.ada/unc_arr_ptr_in_var_rec.exp: Likewise.
+	* gdb.ada/unchecked_union.exp: Likewise.
+	* gdb.ada/uninitialized_vars.exp: Likewise.
+	* gdb.ada/var_arr_attrs.exp: Likewise.
+	* gdb.ada/var_arr_typedef.exp: Likewise.
+	* gdb.ada/var_rec_arr.exp: Likewise.
+	* gdb.ada/variant-record.exp: Likewise.
+	* gdb.ada/variant.exp: Likewise.
+	* gdb.ada/variant_record_packed_array.exp: Likewise.
+	* gdb.ada/varsize_limit.exp: Likewise.
+	* gdb.ada/whatis_array_val.exp: Likewise.
+	* gdb.ada/widewide.exp: Likewise.
+	* gdb.ada/win_fu_syms.exp: Likewise.
+
+2020-08-12  Gary Benson  <gbenson@redhat.com>
+
+	* gdb.dwarf2/dw2-op-out-param.S (.Ltext5): Fix duplicate label.
+
+2020-08-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* lib/check-test-names.exp (do_reset_vars): Use 'array unset' to
+	unset the array variable.
+
+2020-08-03  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26333
+	* lib/dwarf.exp (DW_LNE_user): New proc.
+	* gdb.dwarf2/dw2-vendor-extended-opcode.c: New test.
+	* gdb.dwarf2/dw2-vendor-extended-opcode.exp: New file.
+
+2020-07-31  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.base/coremaker2.c: Change all uses of 'unsigned long long'
+	to 'uintptr_t'
+	(inttypes.h): Include.
+
+2020-07-31  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.base/coremaker2.c (buf_rw): Increase size to 256 KiB.
+	(C5_24k): Delete.
+	(C5_8k, C5_64k, C5_256k): New macros.
+	(buf_ro): Allocate 256 KiB of initialized data.
+
+2020-07-30  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/condbreak-bad.exp: Extend the test with scenarios
+	that attempt to overwrite an existing condition with a condition
+	that fails parsing and also with a condition that parses fine
+	but contains junk at the end.
+
+2020-07-30  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/condbreak-bad.c: New test.
+	* gdb.base/condbreak-bad.exp: New file.
+
+2020-07-30  Tom de Vries  <tdevries@suse.de>
+
+	* lib/sym-info-cmds.exp (GDBInfoModuleSymbols::check_entry_1): Factor
+	out of ...
+	(GDBInfoModuleSymbols::check_entry): ... here.
+	(GDBInfoModuleSymbols::check_optional_entry): New proc.
+	* gdb.fortran/info-modules.exp: Use check_optional_entry for entries
+	related to __def_init_mod1_M1t1 / __vtype_mod1_M1t1 / __copy_mod1_M1t1.
+
+2020-07-30  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.fortran/ptype-on-functions.exp: Make "_t" suffix on
+	"__class_some_module_Number_t" optional.
+
+2020-07-29  Tom de Vries  <tdevries@suse.de>
+
+	* lib/selftest-support.exp (selftest_setup): Allow breakpoint at
+	multiple locations.
+
+2020-07-29  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/dw2-line-number-zero.exp: Set breakpoints on lines
+	rather than function name.
+
+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR symtab/26270:
+	* gdb.cp/disasm-func-name.cc: New file.
+	* gdb.cp/disasm-func-name.exp: New file.
+
+2020-07-28  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.dwarf2/varval.exp (setup_exec): Add 'or' instruction to
+	'varval' location.
+
+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-unwind.py: Update to make use of a register
+	descriptor.
+
+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-arch-reg-names.exp: Add additional tests.
+
+2020-07-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR fortran/23051
+	PR fortran/26139
+	* gdb.fortran/class-allocatable-array.exp: New file.
+	* gdb.fortran/class-allocatable-array.f90: New file.
+	* gdb.fortran/pointer-to-pointer.exp: New file.
+	* gdb.fortran/pointer-to-pointer.f90: New file.
+
+2020-07-25  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26243
+	* gdb.dwarf2/dw2-line-number-zero.c: New test.
+	* gdb.dwarf2/dw2-line-number-zero.exp: New file.
+
+2020-07-24  Tom de Vries  <tdevries@suse.de>
+
+	PR testsuite/26293
+	* gdb.ada/mi_prot.exp: Require gnatmake-8.
+
+2020-07-23  Pedro Alves  <pedro@palves.net>
+
+	* gdb.server/server-kill.exp (prepare): New, factored out from the
+	top level.
+	(kill_server): New.
+	(test_tstatus, test_unwind_nosyms, test_unwind_syms): New.
+	(top level) : Call test_tstatus, test_unwind_nosyms, test_unwind_syms.
+
+2020-07-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.dwarf2/dw2-disasm-over-non-stmt.exp: New file.
+
+2020-07-22  Sandra Loosemore  <sandra@codesourcery.com>
+
+	* lib/gdb.exp (gdb_wrapper_file, gdb_wrapper_flags):
+	Initialize to empty string at top level.
+	(gdb_wrapper_init): Revert check for file existence on build.
+	Build the wrapper in its default place, not a build-specific
+	location.  When host == build, make the pathname absolute.
+	(gdb_compile): Delete leftover declaration of
+	gdb_wrapper_initialized.  Check gdb_wrapper_file being an empty
+	string instead of uninitialized.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.base/corefile2.exp: New file.
+	* gdb.base/coremaker2.exp: New file.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.base/coredump-filter.exp: Add second
+	non-Private-Shared-Anon-File test.
+	(test_disasm): Rename binfile for test which is expected
+	to fail.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.base/corefile.exp: Add test "accessing read-only mmapped
+	data in core file".
+	* gdb.base/coremaker.c (buf2ro): New global.
+	(mmapdata): Add a read-only mmap mapping.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	PR corefiles/25631
+	* gdb.base/corefile.exp (accessing anonymous, unwritten-to mmap data):
+	New test.
+	* gdb.base/coremaker.c (buf3): New global.
+	(mmapdata): Add mmap call which uses MAP_ANONYMOUS and MAP_PRIVATE
+	flags.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.base/coremaker.c (filler_ro): New global constant.
+
+2020-07-22  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/mi_prot.exp: New file.
+	* gdb.ada/mi_prot/pkg.adb: New file.
+	* gdb.ada/mi_prot/pkg.ads: New file.
+	* gdb.ada/mi_prot/prot.adb: New file.
+
+2020-07-22  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.base/jit-reader-simple.exp: Add a scenario for a binary that
+	loads two JITers.
+
+2020-07-21  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-arch-reg-groups.exp: Additional tests.
+
+2020-07-21  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-arch-reg-names.exp: Additional tests.
+
+2020-07-21  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.reverse/solib-precsave.exp: Handle additional "recommended
+	breakpoint locations".
+	* gdb.reverse/solib-reverse.exp: Same.
+
+2020-07-21  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.reverse/step-reverse.c (callee): Merge statements.
+
+2020-07-21  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.fortran/info-modules.exp (info module variables): Allow missing
+	line numbers for some variables.
+
+2020-07-21  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.opt/inline-locals.c (init_array): New func.
+	(func1): Use init_array.
+	* gdb.opt/inline-locals.exp: Update pattern.
+
+2020-07-21  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.debuginfod/fetch_src_and_symbols.exp: Use save_vars for env
+	vars.  Fix PATH and DUPLICATE errors.  Cleanup whitespace.
+
+2020-07-20  Ludovic Courtès  <ludo@gnu.org>
+
+	* gdb.guile/source2.scm: Add #f first argument to 'format'.
+	* gdb.guile/types-module.exp: Remove "ERROR:" from
+	regexps since Guile 3.0 no longer prints that.
+
+2020-07-20  Ludovic Courtès  <ludo@gnu.org>
+
+	* gdb.guile/scm-error.exp ("source $remote_guile_file_1"): Relax
+	error regexp to match on Guile 2.2.
+
+2020-07-20  Gary Benson <gbenson@redhat.com>
+
+	* gdb.cp/align.exp: Fix "alignof (void)" tests when compiling
+	with clang.
+
+2020-07-20  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.threads/omp-par-scope.c (lock, lock2): New variable.
+	(omp_set_lock_in_order): New function.
+	(single_scope, multi_scope, nested_func, nested_parallel): Use
+	omp_set_lock_in_order and omp_unset_lock.
+	(main): Init and destroy lock and lock2.
+
+2020-07-20  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/valgrind-infcall-2.exp: Handle printf unknown return type.
+
+2020-07-20  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.threads/attach-slow-waitpid.exp: Bail out if gdb_start fails.
+
+2020-07-17  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.base/valgrind-infcall-2.c: New test.
+	* gdb.base/valgrind-infcall-2.exp: New file.
+	* lib/valgrind.exp (vgdb_start): Add and handle active_at_startup.
+
+2020-07-17  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dlang/circular.c (found): Use found_label as label name.
+	* gdb.dwarf2/arr-subrange.c (main): Use main_label as label name.
+	* gdb.dwarf2/comp-unit-lang.c (func): Use func_label as label name.
+	* gdb.dlang/circular.exp: Use MACRO_AT_func and MACRO_AT_range.
+	* gdb.dwarf2/ada-linkage-name.exp: Same.
+	* gdb.dwarf2/arr-subrange.exp: Same.
+	* gdb.dwarf2/atomic-type.exp: Same.
+	* gdb.dwarf2/comp-unit-lang.exp: Same.
+	* gdb.dwarf2/cpp-linkage-name.exp: Same.
+	* gdb.dwarf2/dw2-bad-mips-linkage-name.exp: Same.
+	* gdb.dwarf2/dw2-lexical-block-bare.exp: Same.
+	* gdb.dwarf2/dw2-regno-invalid.exp: Same.
+	* gdb.dwarf2/implptr-64bit.exp: Same.
+	* gdb.dwarf2/imported-unit-abstract-const-value.exp: Same.
+	* gdb.dwarf2/imported-unit-runto-main.exp: Same.
+	* gdb.dwarf2/imported-unit.exp: Same.
+	* gdb.dwarf2/main-subprogram.exp: Same.
+	* gdb.dwarf2/missing-type-name.exp: Same.
+	* gdb.dwarf2/nonvar-access.exp: Same.
+	* gdb.dwarf2/struct-with-sig.exp: Same.
+	* gdb.dwarf2/typedef-void-finish.exp: Same.
+	* gdb.dwarf2/void-type.exp: Same.
+
+2020-07-17  Tom de Vries  <tdevries@suse.de>
+
+	* lib/dwarf.exp (Dwarf::MACRO_AT_func, Dwarf::MACRO_AT_range): Drop
+	src parameter.
+	* gdb.dlang/watch-loc.exp: Update MACRO_AT_{func,range} calls.
+	* gdb.dwarf2/bitfield-parent-optimized-out.exp: Same.
+	* gdb.dwarf2/dw2-ifort-parameter.exp: Same.
+	* gdb.dwarf2/dw2-opt-structptr.exp: Same.
+	* gdb.dwarf2/dwz.exp: Same.
+	* gdb.dwarf2/implptr-optimized-out.exp: Same.
+	* gdb.dwarf2/implref-array.exp: Same.
+	* gdb.dwarf2/implref-const.exp: Same.
+	* gdb.dwarf2/implref-global.exp: Same.
+	* gdb.dwarf2/implref-struct.exp: Same.
+	* gdb.dwarf2/info-locals-optimized-out.exp: Same.
+	* gdb.dwarf2/opaque-type-lookup.exp: Same.
+	* gdb.dwarf2/var-access.exp: Same.
+	* gdb.dwarf2/varval.exp: Same.
+	* gdb.trace/entry-values.exp: Same.
+
+2020-07-17  Tom de Vries  <tdevries@suse.de>
+
+	* lib/dwarf.exp (Dwarf::extern): Remove.
+	* gdb.compile/compile-ops.exp: Remove use of Dwarf::extern.
+	* gdb.dlang/circular.exp: Same.
+	* gdb.dwarf2/comp-unit-lang.exp: Same.
+	* gdb.dwarf2/dw2-ifort-parameter.exp: Same.
+	* gdb.dwarf2/dw2-symtab-includes.exp: Same.
+	* gdb.dwarf2/dwz.exp: Same.
+	* gdb.dwarf2/imported-unit-abstract-const-value.exp: Same.
+	* gdb.dwarf2/imported-unit-runto-main.exp: Same.
+	* gdb.dwarf2/imported-unit.exp: Same.
+	* gdb.dwarf2/opaque-type-lookup.exp: Same.
+
+2020-07-16  Sandra Loosemore  <sandra@codesourcery.com>
+
+	* gdb.base/shell.exp: Skip pipe tests dependent on sh on Windows host.
+	Use double quotes instead of single quotes.
+
+2020-07-16  Caroline Tice  <cmtice@google.com>
+
+	* gdb.dwarf2/dw5-rnglist-test.cc: New file.
+	* gdb.dwarf2/dw5-rnglist-test.exp: New file.
+
+2020-07-16  Tom de Vries  <tdevries@suse.de>
+
+	* lib/dwarf.exp (program): Initialize _line.
+	(DW_LNE_end_sequence): Reinitialize _line.
+	(DW_LNS_advance_line): Update _line.
+	(line): New proc.
+	* gdb.dwarf2/dw2-inline-many-frames.exp: Use line.
+	* gdb.dwarf2/dw2-inline-small-func.exp: Same.
+	* gdb.dwarf2/dw2-inline-stepping.exp: Same.
+	* gdb.dwarf2/dw2-is-stmt-2.exp: Same.
+	* gdb.dwarf2/dw2-is-stmt.exp: Same.
+	* gdb.dwarf2/dw2-ranges-func.exp: Same.
+
+2020-07-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/ptype-on-functions.exp: Make the result pattern more
+	generic.
+
+2020-07-15  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.trace/entry-values.exp: Expect "call" instead of "callq" if
+	is_amd64_regs_target.
+
+2020-07-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.fortran/ptype-on-functions.exp: Add more tests.
+	* gdb.fortran/ptype-on-functions.f90: Likewise.
+
+2020-07-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* lib/dwarf.exp (Dwarf::cu, Dwarf::tu, Dwarf::lines): Change valid
+	values in documentation for addr_size to 4 and 8.
+
+2020-07-14  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.arch/amd64-osabi.exp: Update.
+	* gdb.arch/arm-disassembler-options.exp: Update.
+	* gdb.arch/powerpc-disassembler-options.exp: Update.
+	* gdb.arch/ppc64-symtab-cordic.exp: Update.
+	* gdb.arch/s390-disassembler-options.exp: Update.
+	* gdb.base/all-architectures.exp.tcl: Update.
+	* gdb.base/attach-pie-noexec.exp: Update.
+	* gdb.base/catch-syscall.exp: Update.
+	* gdb.xml/tdesc-arch.exp: Update.
+
+2020-07-14  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.threads/clone-new-thread-event.c (gettid): Rename to ...
+	(local_gettid): ... this.
+	(fn): Update.
+
+2020-07-13  Sandra Loosemore  <sandra@codesourcery.com>
+
+	* gdb.base/info_sources.exp: Skip directory match tests on
+	remote hosts.
+
+2020-07-13  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/savedregs.exp (caller): Use parentheses to
+	make expected expression evaluation ordering explicit.
+
+2020-07-13  Gary Benson <gbenson@redhat.com>
+
+	* gdb.arch/i386-sse.c (have_sse) <edx>: Make unsigned.
+
+2020-07-13  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/bigcore.c (main): Use a volatile pointer when
+	attempting to trigger a SIGSEGV.
+	* gdb.base/gcore-relro-pie.c (break_here): Likewise.
+	* gdb.base/gcore-tls-pie.c (break_here): Likewise.
+	* gdb.base/savedregs.c (thrower): Likewise.
+	* gdb.mi/mi-syn-frame.c (bar): Likewise.
+
+2020-07-13  Gary Benson <gbenson@redhat.com>
+
+	* gdb.base/vla-datatypes.c (vla_factory): Factor out sections
+	defining and using VLA structure fields into...
+	* gdb.base/vla-struct-fields.c: New file.
+	* gdb.base/vla-datatypes.exp: Factor out VLA structure field
+	tests into...
+	* gdb.base/vla-struct-fields.exp: New file.
+
+2020-07-13  Tom de Vries  <tdevries@suse.de>
+
+	* lib/gdb.exp (have_fuse_ld_gold): New caching proc.
+	* gdb.base/gcore-tls-pie.exp: Use have_fuse_ld_gold.
+	* gdb.base/gold-gdb-index.exp: Same.
+	* gdb.base/morestack.exp: Same.
+
+2020-07-11  Daniel Xu  <dxu@dxuuu.xyz>
+
+	PR rust/26121
+	* gdb.rust/modules.rs: Prevent linker from discarding test
+	symbol.
+
+2020-07-10  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26199
+	* gdb.multi/multi-target.c (exit_thread): New.
+	(thread_start): Break loop if EXIT_THREAD.
+	* gdb.multi/multi-target.exp (test_no_unwaited_for): New proc.
+	(top level) Call test_no_resumed.
+
+2020-07-08  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.ada/catch_ex/foo.adb: Pass string to raise.
+	* gdb.ada/catch_ex.exp: Examine catchpoint text.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR python/22748
+	* gdb.opt/inline-frame-tailcall.c: New file.
+	* gdb.opt/inline-frame-tailcall.exp: New file.
+	* gdb.python/py-unwind-inline.c: New file.
+	* gdb.python/py-unwind-inline.exp: New file.
+	* gdb.python/py-unwind-inline.py: New file.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-arch-reg-groups.exp: New file.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-arch-reg-names.exp: New file.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.python/py-unwind.py (TestUnwinder::__call__): Add test for
+	gdb.PendingFrame.architecture method.
+
+2020-07-06  Tom de Vries  <tdevries@suse.de>
+
+	* gdb.dwarf2/dw2-ranges-base.exp: Test line-table order.
+
 2020-07-03  Pedro Alves  <palves@redhat.com>
 
 	* gdb.base/structs2.c (main): Adjust second parem_reg call to
@@ -68,7 +2661,7 @@
 
 	* lib/gdb.exp (gdb_test_multiline): New, moved from gdb-guile.exp,
 	have a input seq nr in each pass message.
-        * lib/gdb-guile.exp (gdb_test_multiline): Move to gdb.exp.
+	* lib/gdb-guile.exp (gdb_test_multiline): Move to gdb.exp.
 	* lib/gdb-python.exp (gdb_py_test_multiple): Remove.
 	* gdb.python/python.exp: Make test names unique,
 	use gdb_test_multiline instead of gdb_py_test_multiple,
@@ -1822,7 +4415,7 @@
 	disabled.
 
 2020-03-02  Pedro Alves  <palves@redhat.com>
-	      Tom de Vries  <tdevries@suse.de>
+	    Tom de Vries  <tdevries@suse.de>
 
 	* lib/gdb.exp (gdb_test_multiple): Handle prompt_regexp option using
 	-prompt prefix, before user_code argument.  Add -lbl option likewise.
@@ -20449,6 +23042,6 @@ For older changes see ChangeLog-1993-2013.
 ;; version-control: never
 ;; End:
 
-    Copyright 2014-2020 Free Software Foundation, Inc.
+    Copyright 2014-2021 Free Software Foundation, Inc.
   Copying and distribution of this file, with or without modification,
   are permitted provided the copyright notice and this notice are preserved.
diff --git a/gdb/doc/ChangeLog b/gdb/doc/ChangeLog
index c5919345082..d718fdda75e 100644
--- a/gdb/doc/ChangeLog
+++ b/gdb/doc/ChangeLog
@@ -1,3 +1,197 @@
+2021-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.texinfo, refcard.tex: Update copyright year range.
+
+2020-12-29  Hannes Domani  <ssbssa@yahoo.de>
+
+	* python.texi (Frame Decorator API): Fix method name.
+
+2020-12-23  Alex Bennée  <alex.bennee@linaro.org>
+
+	* gdb.texinfo (Packets): Clarify language for ? packet.
+
+2020-12-21  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdb.texinfo (Requirements): Add GMP to list of requirements.
+
+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>
+
+	* python.texi (TUI Windows In Python): Remove erroneous 'a'.
+
+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>
+
+	* python.texi (Values From Inferior): Document the address keyword.
+
+2020-12-17  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/27088
+	* gdb.texinfo (Range Checking): Fix "show check range" command
+	name.
+
+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (Caching Target Data): Document 'maint flush
+	dcache'.
+
+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (Symbols): Document 'maint flush symbol-cache'.
+	(Maintenance Commands): Document 'maint flush register-cache'.
+
+2020-12-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* Makefile.in: Delete GDBvn.texi and version.subst only in
+	the maintainer-clean target.
+
+2020-11-29  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR python/26974
+	* python.texi: Fix docu for static members argument.
+
+2020-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (Debugging Output): Document 'set/show debug
+	fortran-array-slicing'.
+	(Special Fortran Commands): Document 'set/show fortran
+	repack-array-slices'.
+
+2020-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (Maintenance Commands): Update description of 'maint
+	print c-tdesc'.
+
+2020-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texinfo (Mode Options): Descriptions of initialization files
+	has been moved to 'Initialization Files'.
+	(Startup): Likewise.
+	(Initialization Files): New node.
+	(gdb man): Update to mention alternative file paths.
+	(gdbinit man): Likewise.
+
+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.texinfo (Set Breaks): Document the '-force-condition' flag
+	of the 'break'command.
+	* gdb.texinfo (Conditions): Document the '-force' flag of the
+	'condition' command.
+
+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* gdb.texinfo (Set Breaks): Document disabling of breakpoint
+	locations for which the breakpoint condition is invalid.
+
+2020-10-06  Michael Forney  <mforney@mforney.org>
+
+	* Makefile.in (HAVE_NATIVE_GCORE_HOST): Add for gcore.1
+	install condition.
+
+2020-10-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.texinfo (Debugging Output): Add set/show debug event-loop.
+
+2020-10-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.texinfo (Debugging Output): Add empty lines, fix typo.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* gdb.texinfo (GDB/MI Breakpoint Commands): Document
+	"-break-insert --qualified" and "-dprintf-insert --qualified".
+
+2020-08-25  Shahab Vahedi  <shahab@synopsys.com>
+
+	* gdb.texinfo (Synopsys ARC): Document LP_START, LP_END and BTA.
+
+2020-08-25  Shahab Vahedi  <shahab@synopsys.com>
+
+	* gdb.texinfo (Synopsys ARC): Update the documentation for ARC
+	Features.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* gdb.texinfo (Ravenscar Profile): Add examples.
+	Document runtime initialization limitation.
+
+2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* gdb.texinfo (Contributors): Add information for the eBPF
+	support.
+	(BPF): New section.
+
+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python.texi (Unwinding Frames in Python): Update descriptions
+	for PendingFrame.read_register and
+	gdb.UnwindInfo.add_saved_register.
+	(Frames In Python): Update description of Frame.read_register.
+
+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python.texi (Registers In Python): Document new find function.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb.texinfo (Maintenance Commands): Add documentation for
+	new command "maintenance print core-file-backed-mappings".
+
+2020-07-22  Reuben Thomas  <rrt@sc3d.org>
+
+	* gdb.texinfo (Remote Protocol, Overview): Correct the description
+	of which remote protocol commands are mandatory for a stub to
+	implement.
+
+2020-07-20  Ludovic Courtès  <ludo@gnu.org>
+
+	* doc/guile.texi (Guile Introduction): Mention Guile 3.0.
+
+2020-07-20  Ludovic Courtès  <ludo@gnu.org>
+
+	* guile.texi (Memory Ports in Guile): Mark
+	'memory-port-read-buffer-size',
+	'set-memory-port-read-buffer-size!',
+	'memory-port-write-buffer-size',
+	'set-memory-port-read-buffer-size!' as deprecated.
+	(Guile Introduction): Clarify which Guile
+	versions are supported.
+
+2020-07-13 Paul Carroll <pcarroll@codesourcery.com>
+
+	PR gdb/25716
+
+	* gdb.texinfo (Frame Apply): Remove anchor for 'frame
+	apply' and adjust xrefs to it.
+
+2020-07-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb.texinfo (Attach): Update exec-file-mismatch doc.
+
+2020-07-08  Hannes Domani  <ssbssa@yahoo.de>
+
+	* gdb.texinfo: Document Windows drive conversion of
+	'set auto-load scripts-directory'.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb.texi (Registers): Add @anchor for 'info registers
+	<reggroup>' command.
+	* python.texi (Architectures In Python): Document new
+	register_groups method.
+	(Registers In Python): Document two new object types related to
+	register groups.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python.texi (Python API): Add new section to the menu.
+	(Frames In Python): Add new @anchor.
+	(Architectures In Python): Document new registers method.
+	(Registers In Python): New section.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python.texi (Unwinding Frames in Python): Document
+	PendingFrame.architecture method.
+
 2020-06-26  Eli Zaretskii  <eliz@gnu.org>
 
 	* gdb.texinfo (Shell Commands): More accurate description of use
diff --git a/gdb/ChangeLog b/gdb/ChangeLog
index 8178e1673b1..d567830b1fa 100644
--- a/gdb/ChangeLog
+++ b/gdb/ChangeLog
@@ -1,10838 +1,201 @@
-2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
+2021-01-08  Tom Tromey  <tromey@adacore.com>
 
-	* macroexp.h (macro_stringify): Return
-	gdb::unique_xmalloc_ptr<char>.
-	* macroexp.c (macro_stringify): Likewise.
-	* macrotab.c (fixup_definition): Update.
+	* parse.c (parse_expression): Add void_context_p parameter.  Use
+	parse_exp_in_context.
+	* printcmd.c (print_command_1): Change voidprint to bool.  Pass to
+	parse_expression.
+	(print_command, call_command): Update.
+	* expression.h (parse_expression): Add void_context_p parameter.
 
-2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
+2021-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
 
-	* c-exp.y (scan_macro_expansion): Don't free `expansion`.
-	(lex_one_token): Update.
-	* macroexp.c (struct macro_buffer) <release>: Return
-	gdb::unique_xmalloc_ptr<char>.
-	(macro_stringify): Update.
-	(macro_expand): Update.
-	(macro_expand_next): Return gdb::unique_xmalloc_ptr<char>.
-	* macroexp.h (macro_expand_next): Likewise.
+	* value.c (set_value_component_location): Adjust the VALUE_LVAL
+	for internalvar components that have a dynamic location.
 
-2020-07-02  Simon Marchi  <simon.marchi@efficios.com>
+2021-01-08  Tom de Vries  <tdevries@suse.de>
 
-	* macroexp.h (macro_lookup_ftype): Remove.
-	(macro_expand, macro_expand_once, macro_expand_next): Remove
-	lookup function parameters, add scope parameter.
-	* macroexp.c (scan, substitute_args, expand, maybe_expand,
-	macro_expand, macro_expand_once, macro_expand_next): Likewise.
-	* macroscope.h (standard_macro_lookup): Change parameter type
-	to macro_scope.
-	* macroscope.c (standard_macro_lookup): Likewise.
-	* c-exp.y (lex_one_token): Update.
-	* macrocmd.c (macro_expand_command): Likewise.
-	(macro_expand_once_command): Likewise.
+	PR gdb/26881
+	* breakpoint.c (create_exception_master_breakpoint_probe)
+	(create_exception_master_breakpoint_hook): Factor out
+	of ...
+	(create_exception_master_breakpoint): ... here.  Only try to install
+	the master exception breakpoint in objfile.debug using the
+	_Unwind_DebugHook method, if the install using probes in objfile
+	failed.
 
-2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
+2021-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>
 
-	* inf-loop.c (inferior_event_handler): Remove client_data param.
-	* inf-loop.h (inferior_event_handler): Likewise.
-	* infcmd.c (step_1): Adjust.
-	* infrun.c (proceed): Adjust.
-	(fetch_inferior_event): Remove client_data param.
-	(infrun_async_inferior_event_handler): Adjust.
-	* infrun.h (fetch_inferior_event): Remove `void *` param.
-	* linux-nat.c (handle_target_event): Adjust.
-	* record-btrace.c (record_btrace_handle_async_inferior_event):
-	Adjust.
-	* record-full.c (record_full_async_inferior_event_handler):
-	Adjust.
-	* remote.c (remote_async_inferior_event_handler): Adjust.
+	* f-lang.c (fortran_value_subarray): Call value_from_component.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-07  Mike Frysinger  <vapier@gentoo.org>
 
-	* tui/tui-data.h (struct tui_win_info) <name>: Now pure virtual.
-	* tui/tui-stack.h (struct tui_locator_window) <name>: New method.
+	* remote-sim.c: Include memory-map.h.
+	(gdbsim_target): Define memory_map override.
+	(gdbsim_target::memory_map): Define.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-07  Tom Tromey  <tromey@adacore.com>
 
-	* tui/tui-wingeneral.c (tui_win_info::refresh_window): Move from
-	tui_gen_win_info.
-	(tui_win_info::make_window): Merge with
-	tui_gen_win_info::make_window.
-	(tui_win_info::make_visible): Move from tui_gen_win_info.
-	* tui/tui-win.c (tui_win_info::max_width): Move from
-	tui_gen_win_info.
-	* tui/tui-layout.h (class tui_layout_window) <m_window>: Change
-	type.
-	<window_factory>: Likewise.
-	* tui/tui-layout.c (tui_win_info::resize): Move from
-	tui_gen_win_info.
-	(make_standard_window): Change return type.
-	(get_locator_window, tui_get_window_by_name): Likewise.
-	(tui_layout_window::apply): Remove a cast.
-	* tui/tui-data.h (MIN_WIN_HEIGHT): Move earlier.
-	(struct tui_win_info): Merge with tui_gen_win_info.
-	(struct tui_gen_win_info): Remove.
+	* ada-lang.c (do_full_match): Conditionally skip "_ada_" prefix.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-07  Tom Tromey  <tromey@adacore.com>
 
-	* tui/tui-stack.h (struct tui_locator_window): Derive from
-	tui_win_info.
-	<do_scroll_horizontal, do_scroll_vertical>: New methods.
-	<can_box>: New method.
+	* ada-lang.c (add_component_interval): Start loop using vector's
+	updated size.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-06  Tom Tromey  <tromey@adacore.com>
 
-	* tui/tui-stack.h (struct tui_locator_window): Remove body.
+	* ada-lang.c (ada_evaluate_subexp) <BINOP_ADD, BINOP_SUB>:
+	Do not cast result.
+	* valarith.c (fixed_point_binop): Handle multiplication
+	and division specially.
+	* valops.c (value_to_gdb_mpq): New function.
+	(value_cast_to_fixed_point): Use it.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-05  Hannes Domani  <ssbssa@yahoo.de>
 
-	* tui/tui-regs.c (tui_data_window::display_registers_from)
-	(tui_data_window::display_registers_from)
-	(tui_data_window::first_data_item_displayed)
-	(tui_data_window::delete_data_content_windows): Update.
-	(tui_data_window::refresh_window, tui_data_window::no_refresh):
-	Remove.
-	(tui_data_window::check_register_values): Update.
-	(tui_data_item_window::rerender): Add parameters.  Update.
-	(tui_data_item_window::refresh_window): Remove.
-	* tui/tui-data.h (struct tui_gen_win_info) <no_refresh>: No longer
-	virtual.
-	* tui/tui-regs.h (struct tui_data_item_window): Don't derive from
-	tui_gen_win_info.
-	<refresh_window, max_height, min_height>: Remove.
-	<rerender>: Add parameters.
-	<x, y, visible>: New members.
-	(struct tui_data_window) <refresh_window, no_refresh>: Remove.
-	<m_item_width>: New member.
+	* tui/tui-winsource.c (tui_source_window_base::refresh_window):
+	Call wnoutrefresh instead of tui_win_info::refresh_window.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-05  Hannes Domani  <ssbssa@yahoo.de>
 
-	* tui/tui-regs.c (tui_data_window::show_register_group)
-	(tui_data_window::check_register_values): Update.
-	* tui/tui-regs.h (struct tui_data_item_window) <regno>: Rename
-	from item_no.
+	* tui/tui-source.c (tui_source_window::show_line_number):
+	Redraw second space after line number.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-05  Hannes Domani  <ssbssa@yahoo.de>
 
-	* tui/tui-regs.c (tui_data_window::show_register_group): Remove
-	useless "if".
+	PR tui/26927
+	* tui/tui-winsource.c (tui_source_window_base::refresh_window):
+	Fix source pad size in prefresh.
+	(tui_source_window_base::show_source_content): Grow source pad
+	if necessary.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
 
-	* tui/tui-regs.c (tui_data_window::show_register_group): Update.
-	* tui/tui-regs.h (struct tui_data_item_window) <name>: Remove.
+	* bfin-tdep.c (bfin_push_dummy_call): Use align_up.
+	(bfin_frame_align): Use align_down.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-04  Tom de Vries  <tdevries@suse.de>
 
-	* tui/tui-stack.c (SINGLE_KEY): Move from tui-data.h
-	* tui/tui-winsource.h (enum tui_line_or_address_kind)
-	(struct tui_line_or_address): Move from tui-data.h.
-	* tui/tui-win.c (DEFAULT_TAB_LEN): Move from tui-data.h.
-	* tui/tui-data.h (DEFAULT_TAB_LEN): Move to tui-win.c.
-	(tui_cmd_window, tui_source_window_base, tui_source_window)
-	(tui_disasm_window): Don't declare.
-	(enum tui_line_or_address_kind, struct tui_line_or_address): Move
-	to tui-winsource.h.
-	(SINGLE_KEY): Move to tui-stack.c.
+	* buildsym.c (buildsym_compunit::record_line): Filter out end-of-seq
+	terminators that do not terminate anything.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
 
-	* tui/tui-regs.h (struct tui_data_item_window) <content>: Now a
-	std::string.
-	* tui/tui-regs.c (class tab_expansion_file): New.
-	(tab_expansion_file::write): New method.
-	(tui_register_format): Change return type.  Use
-	tab_expansion_file.
-	(tui_get_register, tui_data_window::display_registers_from)
-	(tui_data_item_window::rerender): Update.
-	* tui/tui-io.h (tui_expand_tabs): Don't declare.
-	* tui/tui-io.c (tui_expand_tabs): Remove.
+	* debug.c (debug_print_depth): New.
+	* infrun.h (INFRUN_SCOPED_DEBUG_START_END): New.
+	(INFRUN_SCOPED_DEBUG_ENTER_EXIT): New.
+	* infrun.c (start_step_over): Use
+	INFRUN_SCOPED_DEBUG_ENTER_EXIT.
+	(proceed): Use INFRUN_SCOPED_DEBUG_ENTER_EXIT and
+	INFRUN_SCOPED_DEBUG_START_END.
+	(fetch_inferior_event): Use INFRUN_SCOPED_DEBUG_ENTER_EXIT.
 
-2020-07-01  Tom Tromey  <tom@tromey.com>
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
 
-	* tui/tui-regs.c (tui_reggroup_completer): Use complete_on_enum.
+	* infrun.c (print_target_wait_results): Use infrun_debug_printf.
 
-2020-07-01  Fangrui Song  <maskray@google.com>
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
 
-	* dwarf2/read.c (lnp_state_machine::check_line_address): Test -1.
+	* utils.c (vfprintf_unfiltered): Print timestamp only when
+	previous debug output ended with a newline.
 
-2020-07-01  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+2021-01-04  Luis Machado  <luis.machado@linaro.org>
 
-	* dwarf2/read.c (set_die_type): Removed conditions to restrict
-	forms for DW_AT_associated and DW_AT_allocated attributes,
-	which is already checked in function attr_to_dynamic_prop.
-
-2020-06-30  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (quirk_rust_enum): Correctly call
-	alloc_rust_variant for default-less enum.
-
-2020-06-30  Tom Tromey  <tromey@adacore.com>
-
-	PR build/26183:
-	* ada-lang.c (ada_lookup_name_info::ada_lookup_name_info): Use
-	gdb::to_string.
-
-2020-06-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh (displaced_step_copy_insn): Update doc.
-	* gdbarch.h: Re-generate.
-
-2020-06-28  Tom Tromey  <tom@tromey.com>
-
-	* command.h (cmd_types): Remove.
-	(cmd_type): Don't declare.
-	* cli/cli-decode.h (enum cmd_types): Uncomment.  No longer a
-	typedef.
-	* cli/cli-cmds.c (setting_cmd): Use cmd->type directly.
-	* cli/cli-decode.c (cmd_type): Remove.
-
-2020-06-27  Pedro Alves  <palves@redhat.com>
-
-	* fork-child.c (prefork_hook): Adjust.
-	* infcmd.c (set_inferior_io_terminal, get_inferior_io_terminal):
-	Delete.
-	(set_inferior_tty_command, show_inferior_tty_command): Adjust.
-	* inferior.c (inferior::set_tty, inferior::tty): New methods.
-	* inferior.h (set_inferior_io_terminal, get_inferior_io_terminal):
-	Remove declarations.
-	(struct inferior) <set_tty, tty>: New methods.
-	(struct inferior) <terminal>: Rename to ...
-	(struct inferior) <m_terminal>: ... this and make private.
-	* main.c (captured_main_1): Adjust.
-	* mi/mi-cmd-env.c (mi_cmd_inferior_tty_set): Adjust.
-	(mi_cmd_inferior_tty_show): Adjust.
-	* nto-procfs.c (nto_procfs_target::create_inferior): Adjust.
-	* windows-nat.c (windows_nat_target::create_inferior): Adjust.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* configure.ac: Add --enable-libctf: handle --disable-static
-	properly.
-	* acinclude.m4: sinclude ../config/enable.m4.
-	* Makefile.in (aclocal_m4_deps): Adjust accordingly.
-	(LIBCTF): Substitute in.
-	(CTF_DEPS): New, likewise.
-	(CLIBS): libctf needs symbols from libbfd: move earlier.
-	(CDEPS): Use CTF_DEPS, not LIBCTF, now LIBCTF can include rpath
-	flags.
-	* ctfread.c: Surround in ENABLE_LIBCTF.
-	(elfctf_build_psymtabs) [!ENABLE_LIBCTF]: New stub.
-	* configure: Regenerate.
-	* config.in: Likewise.
-
-2020-06-25  Simon Marchi  <simon.marchi@efficios.com>
-
-	* infcmd.c (set_inferior_io_terminal): Use make_unique_xstrdup.
-
-2020-06-25  Simon Marchi  <simon.marchi@efficios.com>
-
-	* inferior.h (struct inferior) <terminal>: Change type to
-	gdb::unique_xmalloc_ptr<char>.
-	* inferior.c (inferior::~inferior): Don't free inf->terminal.
-	* infcmd.c (set_inferior_io_terminal): Don't free terminal
-	field, adjust to unique pointer.
-	(get_inferior_io_terminal): Adjust to unique pointer.
-
-2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_print_registers_info): Loop over all
-	registers, not just the known core set of registers.
-
-2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_register_name): Return NULL for duplicate
-	fflags, frm, and fcsr registers.
-	(riscv_register_reggroup_p): Remove unknown CSRs from save and
-	restore groups.
-	(riscv_tdesc_unknown_reg): New function.
-	(riscv_gdbarch_init): Pass riscv_tdesc_unknown_reg to
-	tdesc_use_registers.
-	* riscv-tdep.h (struct gdbarch_tdep): Add
-	unknown_csrs_first_regnum, unknown_csrs_count,
-	duplicate_fflags_regnum, duplicate_frm_regnum, and
-	duplicate_fcsr_regnum fields.
-
-2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* target-descriptions.c (tdesc_use_registers): Add new parameter a
-	callback, use the callback (when not null) to help number unknown
-	registers.
-	* target-descriptions.h (tdesc_unknown_register_ftype): New typedef.
-	(tdesc_use_registers): Add extra parameter to declaration.
-
-2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (value_of_riscv_user_reg): Moved to here from later
-	in the file.
-	(class riscv_pending_register_alias): Likewise.
-	(riscv_register_feature::register_info): Change 'required_p' field
-	to 'required', and change its type.  Add 'check' member function.
-	(riscv_register_feature::register_info::check): Define new member
-	function.
-	(riscv_xreg_feature): Change initialisation of 'required' field.
-	(riscv_freg_feature): Likewise.
-	(riscv_virtual_feature): Likewise.
-	(riscv_csr_feature): Likewise.
-	(riscv_check_tdesc_feature): Take extra parameter, the csr
-	tdesc_feature, rewrite the function to use the new
-	riscv_register_feature::register_info::check function.
-	(riscv_gdbarch_init): Pass the csr tdesc_feature where needed.
-
-2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* features/Makefile: Remove all references to the deleted files
-	below.
-	* features/riscv/32bit-csr.c: Deleted.
-	* features/riscv/32bit-csr.xml: Deleted.
-	* features/riscv/64bit-csr.c: Deleted.
-	* features/riscv/64bit-csr.xml: Deleted.
-	* features/riscv/rebuild-csr-xml.sh: Deleted.
-
-2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (struct riscv_register_feature::register_info): Fix
-	whitespace error for declaration of names member variable.
-	(struct riscv_register_feature): Add new prefer_first_name member
-	variable, and fix whitespace error in declaration of registers.
-	(riscv_xreg_feature): Initialize prefer_first_name field.
-	(riscv_freg_feature): Likewise.
-	(riscv_virtual_feature): Likewise.
-	(riscv_csr_feature): Likewise.
-	(riscv_register_name): Expand on comments.  Remove register name
-	modifications for CSR and virtual registers.
-
-2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (struct riscv_register_feature): Fix whitespace
-	errors.
-
-2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* riscv-tdep.c (riscv_create_csr_aliases): Handle csr aliases from
-	riscv-opc.h.
-	(class riscv_pending_register_alias): New class.
-	(riscv_check_tdesc_feature): Take vector of pending aliases and
-	populate it as appropriate.
-	(riscv_setup_register_aliases): Delete.
-	(riscv_gdbarch_init): Create vector of pending aliases and pass it
-	to riscv_check_tdesc_feature in all cases.  Use the vector to
-	create the register aliases.
-
-2020-06-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* sol2-tdep.c (sol2_static_transform_name): Remove.
-	(sol2_init_abi): Don't register it.
-	* gdbarch.sh (static_transform_name): Remove.
-	* gdbarch.c, gdbarch.h: Regenerate.
-
-	* dbxread.c (read_dbx_symtab) <'S'>: Remove call to
-	gdbarch_static_transform_name.
-	* mdebugread.c (parse_partial_symbols) <'S'>: Likewise.
-	* stabsread.c (define_symbol) <'X'>: Remove.
-	(define_symbol) <'S'>: Remove gdbarch_static_transform_name
-	handling.
-	<'V'>: Likewise.
-	* xcoffread.c (scan_xcoff_symtab): Remove gdbarch.
-	<'S'>: Remove call to gdbarch_static_transform_name.
-
-2020-06-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* procfs.c (procfs_pre_trace): New function.
-	(procfs_target::create_inferior): Pass it to fork_inferior.
-
-2020-06-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* configure.tgt <sparc-*-linux*> (gdb_target_obs): Remove
-	sparc-sol2-tdep.o, sol2-tdep.o, sparc64-sol2-tdep.o.
-	<sparc64-*-linux*> (gdb_target_obs): Remove sparc64-sol2-tdep.o,
-	sol2-tdep.o, sparc-sol2-tdep.o.
-	* sparc-sol2-tdep.c (sparc32_sol2_init_abi): Make static.
-	* sparc-tdep.h (sparc32_sol2_init_abi): Remove.
-	* sparc64-sol2-tdep.c (sparc64_sol2_init_abi): Make static.
-	* sparc64-tdep.h (sparc64_sol2_init_abi): Remove.
-
-2020-06-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* amd64-sol2-tdep.c (amd64_sol2_sigtramp_p): Remove.
-	(amd64_sol2_init_abi): Use sol2_sigtramp_p.
-	Call sol2_init_abi.
- 	Remove calls to set_gdbarch_skip_solib_resolver,
-	set_gdbarch_core_pid_to_str.
-	* i386-sol2-tdep.c (i386_sol2_sigtramp_p): Remove.
-	(i386_sol2_static_transform_name): Remove.
-	(i386_sol2_init_abi): Call sol2_init_abi.
-	Remove calls to set_gdbarch_sofun_address_maybe_missing,
-	set_gdbarch_static_transform_name,
-	set_gdbarch_skip_solib_resolver, set_gdbarch_core_pid_to_str.
-	Use sol2_sigtramp_p.
-	* sol2-tdep.c (sol2_pc_in_sigtramp): New function.
-	(sol2_sigtramp_p): New function.
-	(sol2_static_transform_name): New function.
-	(sol2_skip_solib_resolver, sol2_core_pid_to_str): Make static.
-	(sol2_init_abi): New function.
-	* sol2-tdep.h (sol2_sigtramp_p, sol2_init_abi): Declare.
-	(sol2_skip_solib_resolver, sol2_core_pid_to_str): Remove.
-	* sparc-sol2-tdep.c (sparc_sol2_pc_in_sigtramp): Remove.
-	(sparc32_sol2_sigtramp_frame_sniffer): Just call sol2_sigtramp_p.
-	(sparc_sol2_static_transform_name): Remove.
-	(sparc32_sol2_init_abi): Call sol2_init_abi.
-	Remove calls to set_gdbarch_sofun_address_maybe_missing,
-	set_gdbarch_static_transform_name,
-	set_gdbarch_skip_solib_resolver,
-	set_gdbarch_core_pid_to_str.
-	* sparc-tdep.h (sparc_sol2_pc_in_sigtramp)
-	(sparc_sol2_static_transform_name): Remove
-	* sparc64-sol2-tdep.c (sparc64_sol2_sigtramp_frame_sniffer): Just
-	call sol2_sigtramp_p.
-	(sparc64_sol2_init_abi): Call sol2_init_abi.
-	Remove calls to set_gdbarch_sofun_address_maybe_missing,
-	set_gdbarch_static_transform_name,
-	set_gdbarch_skip_solib_resolver, set_gdbarch_core_pid_to_str.
-
-2020-06-24  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* symfile-add-flags.h: New flag SYMFILE_ALWAYS_CONFIRM.
-	* exec.c (validate_exec_file): If from_tty, set both
-	SYMFILE_VERBOSE (== from_tty) and SYMFILE_ALWAYS_CONFIRM.
-	* symfile.c (symbol_file_add_with_addrs): if always_confirm
-	and from_tty, unconditionally ask a confirmation.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* target-descriptions.c (tdesc_architecture_name): Protect against
-	NULL pointer dereference.
-	(maint_print_xml_tdesc_cmd): New function.
-	(_initialize_target_descriptions): Register new 'maint print
-	xml-tdesc' command and give it the filename completer.
-	* NEWS: Mention new 'maint print xml-tdesc' command.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* target-descriptions.c (class tdesc_compatible_info): New class.
-	(struct target_desc): Change type of compatible vector.
-	(tdesc_compatible_p): Update for change in type of
-	target_desc::compatible.
-	(tdesc_compatible_info_list): New function.
-	(tdesc_compatible_info_arch_name): New function.
-	(tdesc_add_compatible): Update for change in type of
-	target_desc::compatible.
-	(print_c_tdesc::visit_pre): Likewise.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* target-descriptions.c (print_c_tdesc::print_c_tdesc): Change
-	whitespace to underscore.
-	(maint_print_c_tdesc_cmd): Use fake filename for target
-	descriptions that came from the target.
-	(_initialize_target_descriptions): Add filename command completion
-	for 'maint print c-tdesc'.
-
-2020-06-23  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/loc.c (decode_debug_loclists_addresses): Add empty
-	lines.
-
-2020-06-23  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/loc.c (decode_debug_loc_dwo_addresses): Add empty
-	lines.
-	(dwarf2_find_location_expression): Likewise.
-	(call_site_parameter_matches): Likewise.
-	(dwarf2_compile_expr_to_ax): Likewise.
-	(disassemble_dwarf_expression): Likewise.
-	(loclist_describe_location): Likewise.
-
-2020-06-23  Pedro Alves  <palves@redhat.com>
-
-	* gdbarch-selftests.c: Don't include inferior.h, gdbthread.h or
-	progspace-and-thread.h.  Include scoped-mock-context.h instead.
-	(register_to_value_test): Use scoped_mock_context.
-	* regcache.c: Include "scoped-mock-context.h".
-	(cooked_read_test): Don't error out if a target is already pushed.
-	Use scoped_mock_context.  Adjust.
-	* scoped-mock-context.h: New file.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_is_string_type_p
-	initializer.
-	(ada_language::is_string_type_p): New member function.
-	* c-lang.c (c_language_data): Delete la_is_string_type_p
-	initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_is_string_type_p): Delete function, implementation
-	moved to f_language::is_string_type_p.
-	(f_language_data): Delete la_is_string_type_p initializer.
-	(f_language::is_string_type_p): New member function,
-	implementation from f_is_string_type_p.
-	* go-lang.c (go_is_string_type_p): Delete function, implementation
-	moved to go_language::is_string_type_p.
-	(go_language_data): Delete la_is_string_type_p initializer.
-	(go_language::is_string_type_p): New member function,
-	implementation from go_is_string_type_p.
-	* language.c (language_defn::is_string_type_p): Define new member
-	function.
-	(default_is_string_type_p): Make static, add comment copied from
-	header file.
-	(unknown_language_data): Delete la_is_string_type_p initializer.
-	(unknown_language::is_string_type_p): New member function.
-	(auto_language_data): Delete la_is_string_type_p initializer.
-	(auto_language::is_string_type_p): New member function.
-	* language.h (language_data): Delete la_is_string_type_p field.
-	(language_defn::is_string_type_p): Declare new function.
-	(default_is_string_type_p): Delete desclaration, move comment to
-	definition.
-	* m2-lang.c (m2_is_string_type_p): Delete function, implementation
-	moved to m2_language::is_string_type_p.
-	(m2_language_data): Delete la_is_string_type_p initializer.
-	(m2_language::is_string_type_p): New member function,
-	implementation from m2_is_string_type_p.
-	* objc-lang.c (objc_language_data): Delete la_is_string_type_p
-	initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_is_string_type_p): Delete function,
-	implementation moved to pascal_language::is_string_type_p.
-	(pascal_language_data): Delete la_is_string_type_p initializer.
-	(pascal_language::is_string_type_p): New member function,
-	implementation from pascal_is_string_type_p.
-	* rust-lang.c (rust_is_string_type_p): Delete function,
-	implementation moved to rust_language::is_string_type_p.
-	(rust_language_data): Delete la_is_string_type_p initializer.
-	(rust_language::is_string_type_p): New member function,
-	implementation from rust_is_string_type_p.
-	* valprint.c (val_print_scalar_or_string_type_p): Update call to
-	is_string_type_p.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_print_typedef
-	initializer.
-	(ada_language::print_typedef): New member function.
-	* c-lang.c (c_language_data): Delete la_print_typedef initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	(f_language::print_typedef): New member function.
-	* go-lang.c (go_language_data): Delete la_print_typedef
-	initializer.
-	* language.c (language_defn::print_typedef): Define member
-	function.
-	(unknown_language_data): Delete la_print_typedef initializer.
-	(unknown_language::print_typedef): New member function.
-	(auto_language_data): Delete la_print_typedef initializer.
-	(auto_language::print_typedef): New member function.
-	* language.h (language_data): Delete la_print_typedef field.
-	(language_defn::print_typedef): Declare new member function.
-	(LA_PRINT_TYPEDEF): Update call to print_typedef.
-	(default_print_typedef): Delete declaration.
-	* m2-lang.c (m2_language_data): Delete la_print_typedef
-	initializer.
-	(m2_language::print_typedef): New member function.
-	* objc-lang.c (objc_language_data): Delete la_print_typedef
-	initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	(pascal_language::print_typedef): New member function.
-	* rust-lang.c (rust_print_typedef): Delete function,
-	implementation moved to rust_language::print_typedef.
-	(rust_language): Delete la_print_typedef initializer.
-	(rust_language::print_typedef): New member function,
-	implementation from rust_print_typedef.
-	* typeprint.c (default_print_typedef): Delete.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_printstr initializer.
-	(ada_language::printstr): New member function.
-	* c-lang.c (c_language_data): Delete la_printstr initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_printstr): Rename to f_language::printstr.
-	(f_language_data): Delete la_printstr initializer.
-	(f_language::printstr): New member function, implementation from
-	f_printstr.
-	* go-lang.c (go_language_data): Delete la_printstr initializer.
-	* language.c (language_defn::printstr): Define new member
-	function.
-	(unk_lang_printstr): Delete.
-	(unknown_language_data): Delete la_printstr initializer.
-	(unknown_language::printstr): New member function.
-	(auto_language_data): Delete la_printstr initializer.
-	(auto_language::printstr): New member function.
-	* language.h (language_data): Delete la_printstr field.
-	(language_defn::printstr): Declare new member function.
-	(LA_PRINT_STRING): Update call to printstr.
-	* m2-lang.c (m2_printstr): Rename to m2_language::printstr.
-	(m2_language_data): Delete la_printstr initializer.
-	(m2_language::printstr): New member function, implementation from
-	m2_printstr.
-	* objc-lang.c (objc_language_data): Delete la_printstr
-	initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_printstr): Rename to pascal_language::printstr.
-	(pascal_language_data): Delete la_printstr initializer.
-	(pascal_language::printstr): New member function, implementation
-	from pascal_printstr.
-	* p-lang.h (pascal_printstr): Delete declaration.
-	* rust-lang.c (rust_printstr): Update header comment.
-	(rust_language_data): Delete la_printstr initializer.
-	(rust_language::printstr): New member function.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_printchar initializer.
-	(ada_language::printchar): New member function.
-	* c-lang.c (c_language_data): Delete la_printchar initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_printchar): Rename to f_language::printchar.
-	(f_language_data): Delete la_printchar initializer.
-	(f_language::printchar): New member function, implementation from
-	f_printchar.
-	* go-lang.c (go_language_data): Delete la_printchar initializer.
-	* language.c (unk_lang_printchar): Delete.
-	(language_defn::printchar): Define new member function.
-	(unknown_language_data): Delete la_printchar initializer.
-	(unknown_language::printchar): New member function.
-	(auto_language_data): Delete la_printchar initializer.
-	(auto_language::printchar): New member function.
-	* language.h (language_data): Delete la_printchar field.
-	(language_defn::printchar): Declare new member function.
-	(LA_PRINT_CHAR): Update call to printchar.
-	* m2-lang.c (m2_language_data): Delete la_printchar initializer.
-	(m2_language::printchar): New member function.
-	* objc-lang.c (objc_language_data): Delete la_printchar
-	initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Delete la_printchar
-	initializer.
-	(pascal_language::printchar): New member function.
-	* rust-lang.c (rust_printchar): Rename to
-	rust_language::printchar.
-	(rust_language_data): Delete la_printchar initializer.
-	(rust_language::printchar): New member function, implementation
-	from rust_printchar.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (emit_char): Renamed to ada_language::emitchar.
-	(ada_language_data): Delete la_emitchar initializer.
-	(ada_language::emitchar): New member function, implementation from
-	emit_char.
-	* c-lang.c (c_language_data): Delete la_emitchar initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_emit_char): Rename to f_language::emitchar.
-	(f_language_data): Delete la_emitchar initializer.
-	(f_language::emitchar): New member function, implementation from
-	f_emit_char.
-	* go-lang.c (go_language_data): Delete la_emitchar initializer.
-	* language.c (unk_lang_emit_char): Delete.
-	(language_defn::emitchar): New member function definition.
-	(unknown_language_data): Delete la_emitchar initializer.
-	(unknown_language::emitchar): New member function.
-	(auto_language_data): Delete la_emitchar initializer.
-	(auto_language::emitchar): New member function.
-	* language.h (language_data): Delete la_emitchar field.
-	(language_defn::emitchar): New member field declaration.
-	(LA_EMIT_CHAR): Update call to emitchar.
-	* m2-lang.c (m2_emit_char): Rename to m2_language::emitchar.
-	(m2_language_data): Delete la_emitchar initializer.
-	(m2_language::emitchar): New member function, implementation from
-	m2_emit_char.
-	* objc-lang.c (objc_language_data): Delete la_emitchar
-	initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_emit_char): Rename to pascal_language::emitchar.
-	(pascal_language_data): Delete la_emitchar initializer.
-	(pascal_language::emitchar): New member function, implementation
-	from pascal_emit_char.
-	* rust-lang.c (rust_emitchar): Rename to rust_language::emitchar.
-	(rust_language_data): Delete la_emitchar initializer.
-	(rust_language::emitchar): New member function, implementation
-	from rust_emitchar.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (resolve): Rename to ada_language::post_parser.
-	(ada_language_data): Delete la_post_parser initializer.
-	(ada_language::post_parser): New member function.
-	* c-lang.c (c_language_data): Delete la_post_parser initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_post_parser field.
-	(language_defn::post_parser): New member function.
-	* m2-lang.c (m2_language_data): Delete la_post_parser initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* parse.c (parse_exp_in_context): Update call to post_parser.
-	(null_post_parser): Delete definition.
-	* parser-defs.h (null_post_parser): Delete declaration.
-	* rust-lang.c (rust_language_data): Delete la_post_parser
-	initializer.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (parse): Rename to ada_language::parser.
-	(ada_language_data): Delete la_parser initializer.
-	(ada_language::parser): New member function, implementation from
-	parse.
-	* c-lang.c (c_language_data): Delete la_parser initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	(d_language::parser): New member function.
-	* f-lang.c (f_language_data): Delete la_parser initializer.
-	(f_language::parser): New member function.
-	* go-lang.c (go_language_data): Delete la_parser initializer.
-	(go_language::parser): New member function.
-	* language.c (unk_lang_parser): Delete.
-	(language_defn::parser): Define new member function.
-	(unknown_language_data): Delete la_parser initializer.
-	(unknown_language::parser): New member function.
-	(auto_language_data): Delete la_parser initializer.
-	(auto_language::parser): New member function.
-	* language.h (language_data): Delete la_parser field.
-	(language_defn::parser): Declare new member function.
-	* m2-lang.c (m2_language_data): Delete la_parser initializer.
-	(m2_language::parser): New member function.
-	* objc-lang.c (objc_language_data): Delete la_parser initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	(pascal_language::parser): New member function.
-	* parse.c (parse_exp_in_context): Update call to parser.
-	* rust-lang.c (rust_language_data): Delete la_parser initializer.
-	(rust_language::parser): New member function.
-
-2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* top.c (print_gdb_configuration): Print --with-python-libdir
-	configuration value.
-
-2020-06-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Mention change to the alias command.
-
-2020-06-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-cmds.c (lookup_cmd_for_default_args)
-	(alias_command_completer)
-	(make_alias_options_def_group): New functions.
-	(alias_opts, alias_option_defs): New struct and array.
-	(alias_usage_error): Update usage.
-	(alias_command): Handles optional DEFAULT-ARGS... arguments.
-	Use option framework.
-	(_initialize_cli_cmds): Update alias command help.
-	Update aliases command help.
-	(show_user):
-	Add NULL for new default_args lookup_cmd argument.
-	(valid_command_p): Rename to validate_aliased_command.
-	Add NULL for new default_args lookup_cmd argument.  Verify that the
-	aliased_command has no default args.
-	* cli/cli-decode.c (help_cmd): Show aliases definitions.
-	(lookup_cmd_1, lookup_cmd): New argument default_args.
-	(add_alias_cmd):
-	Add NULL for new default_args lookup_cmd argument.
-	(print_help_for_command): Show default args under the layout
-	 alias some_alias = some_aliased_cmd some_alias_default_arg.
-	* cli/cli-decode.h (struct cmd_list_element): New member default_args.
-	xfree default_args in destructor.
-	* cli/cli-script.c (process_next_line, do_define_command):
-	Add NULL for new default_args lookup_cmd argument.
-	* command.h: Declare new default_args argument in lookup_cmd
-	and lookup_cmd_1.
-	* completer.c (complete_line_internal_1):
-	Add NULL for new default_args lookup_cmd or lookup_cmd_1 argument.
-	* guile/scm-cmd.c (gdbscm_parse_command_name): Likewise.
-	* guile/scm-param.c (add_setshow_generic, pascm_parameter_defined_p):
-	Likewise.
-	* infcmd.c (_initialize_infcmd): Likewise.
-	* python/py-auto-load.c (gdbpy_initialize_auto_load): Likewise.
-	* python/py-cmd.c (gdbpy_parse_command_name): Likewise.
-	* python/py-param.c (add_setshow_generic): Likewise.
-	* remote.c (_initialize_remote): Likewise.
-	* top.c (execute_command): Prepend default_args if command has some.
-	(set_verbose):
-	Add NULL for new default_args lookup_cmd or lookup_cmd_1 argument.
-	* tracepoint.c (validate_actionline, encode_actions_1):
-	Add NULL for new default_args lookup_cmd or lookup_cmd_1 argument.
-
-2020-06-22  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* jit.c (jit_read_descriptor): Use bool as the return type.
-	(jit_breakpoint_re_set_internal): Use bool as the return type.
-	Invert the return value logic; return true if the jit breakpoint
-	has been successfully initialized.
-	(jit_inferior_init): Update the call to
-	jit_breakpoint_re_set_internal.
-
-2020-06-22  Pedro Alves  <palves@redhat.com>
-
-	PR gdb/25939
-	* procfs.c (procfs_target::wait): Don't reference inferior_ptid.
-	Use the current inferior instead.  Don't return
-	TARGET_WAITKIND_SPURIOUS/inferior_ptid -- instead continue and
-	wait again.
-	* sol-thread.c (sol_thread_target::wait): Don't reference
-	inferior_ptid.
-	(ps_lgetregs, ps_lsetregs, ps_lgetfpregs, ps_lsetfpregs)
-	(sol_update_thread_list_callback): Use the current inferior's pid
-	instead of inferior_ptid.
-
-2020-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* procfs.c: Cleanup many comments.
-
-	(READ_WATCHFLAG, WRITE_WATCHFLAG, EXEC_WATCHFLAG)
-	(AFTER_WATCHFLAG): Replace by value.
-
-	(MAIN_PROC_NAME_FORMAT): Inline ...
-	(create_procinfo): ... here.
-
-	(procfs_debug_inferior): Remove SYS_exec handling.
-	(syscall_is_exec): Likewise.
-	(procfs_set_exec_trap): Likewise.
-
-	(syscall_is_lwp_exit): Inline in callers.
-	(syscall_is_exit): Likewise.
-	(syscall_is_exec): Likewise.
-	(syscall_is_lwp_create): Likewise.
-
-	(invalidate_cache): Remove #if 0 code.
-
-	(make_signal_thread_runnable):  Remove.
-	(procfs_target::resume): Remove #if 0 code.
-
-2020-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	PR gdb/25939
-	* procfs.c (procfs_target::procfs_init_inferior): Move push_target
-	call ...
-	(procfs_target::create_inferior): ... here.
-
-2020-06-21  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* exec.c (validate_exec_file): Ensure the build-id is up to
-	date by calling reopen_exec_file (that checks file timestamp
-	to decide to re-read the file).
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	PR gdb/25412
-	* gdbthread.h (delete_thread, delete_thread_silent)
-	(find_thread_ptid): Update comments.
-	* thread.c (current_thread_): New global.
-	(is_current_thread): Move higher, and reimplement.
-	(inferior_thread): Reimplement.
-	(set_thread_exited): Use bool.  Add assertions.
-	(add_thread_silent): Simplify thread-reuse handling by always
-	calling delete_thread.
-	(delete_thread): Remove intro comment.
-	(find_thread_ptid): Skip exited threads.
-	(switch_to_thread_no_regs): Write to current_thread_.
-	(switch_to_no_thread): Check CURRENT_THREAD_ instead of
-	INFERIOR_PTID.  Clear current_thread_.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* aix-thread.c (pd_update): Use switch_to_thread.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* ravenscar-thread.c (ravenscar_thread_target): Update.
-	(ravenscar_thread_target::update_inferior_ptid): Rename to ...
-	(ravenscar_thread_target::add_active_thread): ... this.  Don't
-	set m_base_ptid here.  Update to avoid referencing inferior_ptid.
-	(ravenscar_thread_target::wait): Don't write to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* nat/windows-nat.c (current_windows_thread): Remove.
-	* nat/windows-nat.h (current_windows_thread): Remove.
-	* windows-nat.c (windows_nat_target::stopped_by_sw_breakpoint):
-	Adjust.
-	(display_selectors): Adjust to fetch the current
-	windows_thread_info based on inferior_ptid.
-	(fake_create_process): No longer write to current_windows_thread.
-	(windows_nat_target::get_windows_debug_event):
-	Don't set inferior_ptid or current_windows_thread.
-	(windows_nat_target::wait): Adjust to not rely on
-	current_windows_thread.
-	(do_initial_windows_stuff): Now a method of windows_nat_target.
-	Switch to the last_ptid thread.
-	(windows_nat_target::attach): Adjust.
-	(windows_nat_target::detach): Use switch_to_no_thread instead of
-	writing to inferior_ptid directly.
-	(windows_nat_target::create_inferior): Adjust.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* windows-nat.c (do_initial_windows_stuff): No longer set inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* go32-nat.c (go32_nat_target::create_inferior): Switch to thread
-	after creating it, instead of writing to inferior_ptid.  Don't
-	write to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* fork-child.c (postfork_hook): Don't write to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* bsd-kvm.c (bsd_kvm_target_open): Switch to thread after adding
-	it, instead of writing to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* btrace.c (btrace_fetch): Use switch_to_thread instead of writing
-	to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* bsd-kvm.c (bsd_kvm_target::close): Use switch_to_no_thread
-	instead of writing to inferior_ptid directly.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* corelow.c (core_target::close): Use switch_to_no_thread instead
-	of writing to inferior_ptid directly.
-	(add_to_thread_list, core_target_open): Use switch_to_thread
-	instead of writing to inferior_ptid directly.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* darwin-nat.c (darwin_nat_target::decode_message): Don't write to
-	inferior_ptid.
-	(darwin_nat_target::stop_inferior, darwin_nat_target::kill): Avoid
-	inferior_ptid.
-	(darwin_attach_pid): Use switch_to_no_thread instead of writing to
-	inferior_ptid directly.
-	(darwin_nat_target::init_thread_list): Switch to thread, instead
-	of writing to inferior_ptid.
-	(darwin_nat_target::attach): Don't write to inferior_ptid.
-	(darwin_nat_target::get_ada_task_ptid): Avoid inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* gnu-nat.c (gnu_nat_target::create_inferior): Switch to the added
-	thread.
-	(gnu_nat_target::attach): Don't write to inferior_ptid directly.
-	Instead use switch_to_thread.
-	(gnu_nat_target::detach): Use switch_to_no_thread
-	instead of writing to inferior_ptid directly.  Used passed-in
-	inferior instead of looking up the inferior by pid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* go32-nat.c (go32_nat_target::create_inferior): Don't write to
-	inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* nto-procfs.c (nto_procfs_target::update_thread_list): Avoid
-	inferior_ptid.
-	(nto_procfs_target::attach): Avoid inferior_ptid.  Switch to
-	thread.
-	(nto_procfs_target::detach): Avoid referencing
-	inferior_ptid.  Use switch_to_no_thread instead of writing to
-	inferior_ptid directly.
-	(nto_procfs_target::mourn_inferior): Use switch_to_no_thread
-	instead of writing to inferior_ptid directly.
-	(nto_procfs_target::create_inferior): Avoid inferior_ptid.  Switch
-	to thread.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* remote-sim.c (gdbsim_target::create_inferior): Switch to thread
-	after creating it, instead of writing to inferior_ptid.
-	(gdbsim_target_open): Use switch_to_no_thread instead of writing
-	to inferior_ptid directly.
-	(gdbsim_target::wait): Don't write to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* remote.c (remote_target::remote_notice_new_inferior): Use
-	switch_to_thread instead of writing to inferior_ptid directly.
-	(remote_target::add_current_inferior_and_thread): Use
-	switch_to_no_thread instead of writing to inferior_ptid directly.
-	(extended_remote_target::attach): Use switch_to_inferior_no_thread
-	and switch_to_thread instead of using set_current_inferior or
-	writing to inferior_ptid directly.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* tracectf.c (ctf_target_open): Switch to added thread instead of
-	writing to inferior_ptid directly.
-	(ctf_target::close): Use switch_to_no_thread instead of writing to
-	inferior_ptid directly.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* tracefile-tfile.c (tfile_target_open): Don't write to
-	inferior_ptid directly, instead switch to added thread.
-	(tfile_target::close): Use switch_to_no_thread instead of writing
-	to inferior_ptid directly.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* procfs.c (procfs_target::attach): Don't write to inferior_ptid.
-	(procfs_target::detach): Use switch_to_no_thread
-	instead of writing to inferior_ptid directly.
-	(do_attach): Change return type to void.  Switch to the added
-	thread.
-	(procfs_target::create_inferior): Switch to the added thread.
-	(procfs_do_thread_registers): Don't write to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* infrun.c (generic_mourn_inferior): Use switch_to_thread instead
-	of writing to inferior_ptid.
-	(scoped_restore_exited_inferior): Delete.
-	(handle_vfork_child_exec_or_exit): Simplify using
-	scoped_restore_current_pspace_and_thread.  Use switch_to_thread
-	instead of writing to inferior_ptid.
-	(THREAD_STOPPED_BY): Delete.
-	(thread_stopped_by_watchpoint, thread_stopped_by_sw_breakpoint)
-	(thread_stopped_by_hw_breakpoint): Delete.
-	(save_waitstatus): Use
-	scoped_restore_current_thread+switch_to_thread, and call
-	target_stopped_by_watchpoint instead of
-	thread_stopped_by_watchpoint, target_stopped_by_sw_breakpoint
-	instead of thread_stopped_by_sw_breakpoint, and
-	target_stopped_by_hw_breakpoint instead of
-	thread_stopped_by_hw_breakpoint.
-	(handle_inferior_event)
-	<TARGET_WAITKIND_EXITED/TARGET_WAITKIND_SIGNALLED>: Don't write to
-	inferior_ptid directly, nor
-	set_current_inferior/set_current_program_space.  Use
-	switch_to_thread / switch_to_inferior_no_thread instead.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* target.c (generic_mourn_inferior): Use switch_to_no_thread
-	instead of writing to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* inf-ptrace.c (inf_ptrace_target::create_inferior): Switch to the
-	added thread.
-	(inf_ptrace_target::attach): Don't write to inferior_ptid.  Switch
-	to the added thread.
-	(inf_ptrace_target::detach_success): Use switch_to_no_thread
-	instead of writing to inferior_ptid.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* gdbarch-selftests.c: Include "progspace-and-thread.h".
-	(register_to_value_test): Mock a program_space too.  Heap-allocate
-	the address space.  Don't write to inferior_ptid.  Use
-	switch_to_thread instead.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* linux-tdep.c (find_signalled_thread(thread_info *,void *)):
-	Delete.
-	(find_signalled_thread()): New, factored out from
-	linux_make_corefile_notes and adjusted to handle exited threads.
-	(linux_make_corefile_notes): Adjust to use the new
-	find_signalled_thread.
-
-2020-06-18  Pedro Alves  <palves@redhat.com>
-
-	* linux-tdep.c (btrace_fetch): Save/restore current thread instead
-	of saving/restoring inferior_ptid.
-
-2020-06-17  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.h (tui_scroll_forward, tui_scroll_backward)
-	(tui_scroll_left, tui_scroll_right, struct tui_win_info): Don't
-	declare.
-	* tui/tui-data.h (MIN_CMD_WIN_HEIGHT): Remove.
-
-2020-06-15  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (dwarf2_initialize_objfile): Check for presence
-	of partial symtabs.
-
-2020-06-17  Simon Marchi  <simon.marchi@efficios.com>
-
-	* regformats/reg-arm.dat: Remove.
-	* regformats/reg-bfin.dat: Remove.
-	* regformats/reg-cris.dat: Remove.
-	* regformats/reg-crisv32.dat: Remove.
-	* regformats/reg-m32r.dat: Remove.
-	* regformats/reg-tilegx.dat: Remove.
-	* regformats/reg-tilegx32.dat: Remove.
-
-2020-06-17  Simon Marchi  <simon.marchi@efficios.com>
-
-	* features/Makefile (WHICH): Remove arm files.
-	* regformats/arm/arm-with-iwmmxt.dat: Remove.
-	* regformats/arm/arm-with-neon.dat: Remove.
-	* regformats/arm/arm-with-vfpv2.dat: Remove.
-	* regformats/arm/arm-with-vfpv3.dat: Remove.
-
-2020-06-17  Simon Marchi  <simon.marchi@efficios.com>
-
-	* features/Makefile (XMLTOC): Remove rx.xml.
-
-2020-06-17  Pedro Alves  <palves@redhat.com>
-
-	* gdbthread.h (thread_control_state) <trap_expected> Update
-	comments.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_lookup_symbol_nonlocal): Rename to
-	ada_language::lookup_symbol_nonlocal.
-	(ada_language_data): Delete la_lookup_symbol_nonlocal initializer.
-	(ada_language::lookup_symbol_nonlocal): New member function,
-	implementation from ada_lookup_symbol_nonlocal.
-	* c-lang.c (c_language_data): Delete la_lookup_symbol_nonlocal
-	initializer.
-	(cplus_language_data): Delete la_lookup_symbol_nonlocal
-	initializer.
-	(cplus_language::lookup_symbol_nonlocal): New member function.
-	(asm_language_data): Delete la_lookup_symbol_nonlocal initializer.
-	(minimal_language_data) Likewise.
-	* cp-namespace.c (cp_lookup_nested_symbol): Update comment.
-	* d-lang.c (d_language_data): Delete la_lookup_symbol_nonlocal
-	initializer.
-	(d_language::lookup_symbol_nonlocal): New member function.
-	* f-lang.c (f_language_data): Delete la_lookup_symbol_nonlocal
-	initializer.
-	(f_language::lookup_symbol_nonlocal): New member function.
-	* go-lang.c (go_language_data): Delete la_lookup_symbol_nonlocal
-	initializer.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_lookup_symbol_nonlocal
-	field.
-	(language_defn::lookup_symbol_nonlocal): New member function.
-	* m2-lang.c (m2_language_data): Delete la_lookup_symbol_nonlocal
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_lookup_symbol_nonlocal): Rename to
-	rust_language::lookup_symbol_nonlocal.
-	(rust_language_data): Delete la_lookup_symbol_nonlocal
-	initializer.
-	(rust_language::lookup_symbol_nonlocal): New member function,
-	implementation from rust_lookup_symbol_nonlocal.
-	* symtab.c (lookup_symbol_aux): Update call to
-	lookup_symbol_nonlocal.
-	(basic_lookup_symbol_nonlocal): Rename to...
-	(language_defn::lookup_symbol_nonlocal): ...this, and update
-	header comment.  Remove language_defn parameter, and replace with
-	uses of `this'.
-	* symtab.h (basic_lookup_symbol_nonlocal): Delete declaration.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_value_print_inner
-	initializer.
-	(ada_language::value_print_inner): New member function.
-	* c-lang.c (c_language_data): Delete la_value_print_inner
-	initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	(d_language::value_print_inner): New member function.
-	* f-lang.c (f_language_data): Delete la_value_print_inner
-	initializer.
-	(f_language::value_print_inner): New member function.
-	* f-lang.h (f_value_print_innner): Rename to...
-	(f_value_print_inner): ...this (note spelling of 'inner').
-	* f-valprint.c (f_value_print_innner): Rename to...
-	(f_value_print_inner): ...this (note spelling of 'inner').
-	* go-lang.c (go_language_data): Delete la_value_print_inner
-	initializer.
-	(go_language::value_print_inner): New member function.
-	* language.c (language_defn::value_print_inner): Define new member
-	function.
-	(unk_lang_value_print_inner): Delete.
-	(unknown_language_data): Delete la_value_print_inner initializer.
-	(unknown_language::value_print_inner): New member function.
-	(auto_language_data): Delete la_value_print_inner initializer.
-	(auto_language::value_print_inner): New member function.
-	* language.h (language_data): Delete la_value_print_inner field.
-	(language_defn::value_print_inner): Delcare new member function.
-	* m2-lang.c (m2_language_data): Delete la_value_print_inner
-	initializer.
-	(m2_language::value_print_inner): New member function.
-	* objc-lang.c (objc_language_data): Delete la_value_print_inner
-	initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	(pascal_language::value_print_inner): New member function.
-	* rust-lang.c (rust_language_data): Delete la_value_print_inner
-	initializer.
-	(rust_language::value_print_inner): New member function.
-	* valprint.c (do_val_print): Update call to value_print_inner.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_value_print
-	initializer.
-	(ada_language::value_print): New member function.
-	* c-lang.c (c_language_data): Delete la_value_print initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (unk_lang_value_print): Delete.
-	(language_defn::value_print): Define new member function.
-	(unknown_language_data): Delete la_value_print initializer.
-	(unknown_language::value_print): New member function.
-	(auto_language_data): Delete la_value_print initializer.
-	(auto_language::value_print): New member function.
-	* language.h (language_data): Delete la_value_print field.
-	(language_defn::value_print): Declare new member function.
-	(LA_VALUE_PRINT): Update call to value_print.
-	* m2-lang.c (m2_language_data): Delete la_value_print initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	(pascal_language::value_print): New member function.
-	* rust-lang.c (rust_language_data): Delete la_value_print
-	initializer.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_watch_location_expression): Rename to
-	ada_language::watch_location_expression.
-	(ada_language_data): Delete la_watch_location_expression
-	initializer.
-	(ada_language::watch_location_expression): New member function,
-	implementation from ada_watch_location_expression.
-	* breakpoint.c (watch_command_1): Update call to
-	watch_location_expression.
-	* c-lang.c (c_watch_location_expression): Rename to
-	language_defn::watch_location_expression.
-	(c_language_data): Delete la_watch_location_expression
-	initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* c-lang.h (c_watch_location_expression): Delete declaration.
-	* d-lang.c (d_language_data): Delete la_watch_location_expression
-	initializer.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (language_defn::watch_location_expression): Member
-	function implementation from c_watch_location_expression.
-	(unknown_language_data): Delete la_watch_location_expression
-	initializer.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_watch_location_expression
-	field.
-	(language_defn::watch_location_expression): Declare new member
-	function.
-	* m2-lang.c (m2_language_data): Delete
-	la_watch_location_expression initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_watch_location_expression): Rename to
-	rust_language::watch_location_expression.
-	(rust_language_data): Delete la_watch_location_expression
-	initializer.
-	(rust_language::watch_location_expression): New member function,
-	implementation from rust_watch_location_expression.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_collect_symbol_completion_matches): Rename to
-	ada_language::collect_symbol_completion_matches.
-	(ada_language_data): Delete la_collect_symbol_completion_matches
-	initializer.
-	(ada_language::collect_symbol_completion_matches): New member
-	function, implementation from
-	ada_collect_symbol_completion_matches.
-	* c-lang.c (c_language_data): Delete
-	la_collect_symbol_completion_matches initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_collect_symbol_completion_matches): Rename to
-	f_language::collect_symbol_completion_matches.
-	(f_language_data): Delete la_collect_symbol_completion_matches
-	initializer.
-	(f_language::collect_symbol_completion_matches) New member
-	function, implementation from f_collect_symbol_completion_matches.
-	* go-lang.c (go_language_data): Delete
-	la_collect_symbol_completion_matches initializer.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete
-	la_collect_symbol_completion_matches field.
-	(language_defn::collect_symbol_completion_matches): New member
-	function.
-	* m2-lang.c (m2_language_data): Delete
-	la_collect_symbol_completion_matches initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-	* symtab.c (default_collect_symbol_completion_matches): Delete.
-	(collect_symbol_completion_matches): Update call to
-	collect_symbol_completion_matches.
-	(collect_symbol_completion_matches_type): Likewise.
-	* symtab.h (default_collect_symbol_completion_matches): Delete
-	declaration.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_get_gdb_completer_word_break_characters): Delete.
-	(ada_language_data): Delete la_word_break_characters initializer.
-	(ada_language::word_break_characters): New member function.
-	* c-lang.c (c_language_data): Delete la_word_break_characters
-	initializer.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* completer.c: Update global comment.
-	(advance_to_expression_complete_word_point): Update call to
-	word_break_characters.
-	(complete_files_symbols): Likewise.
-	(complete_line_internal_1): Likewise.
-	(default_completer_handle_brkchars): Likewise.
-	(skip_quoted_chars): Likewise.
-	* d-lang.c (d_language_data): Delete la_word_break_characters
-	initializer.
-	* f-lang.c (f_word_break_characters): Delete.
-	(f_language_data): Delete la_word_break_characters initializer.
-	(f_language::word_break_characters): New member function.
-	* go-lang.c (go_language_data): Delete la_word_break_characters
-	initializer.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (default_word_break_characters): Move declaration to
-	earlier in the file.
-	(language_data): Delete la_word_break_characters field.
-	(language_defn::word_break_characters): New member function.
-	* m2-lang.c (m2_language_data): Delete la_word_break_characters
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_get_symbol_name_matcher): Update header comment.
-	(ada_language_data): Delete la_get_symbol_name_matcher
-	initializer.
-	(language_defn::get_symbol_name_matcher_inner): New member
-	function.
-	* c-lang.c (c_language_data): Delete la_get_symbol_name_matcher
-	initializer.
-	(cplus_language_data): Likewise.
-	(cplus_language::get_symbol_name_matcher_inner): New member
-	function.
-	(asm_language_data): Delete la_get_symbol_name_matcher initializer.
-	(minimal_language_data): Likewise.
-	* cp-support.h (cp_get_symbol_name_matcher): Update header comment.
-	* d-lang.c (d_language_data): Delete la_get_symbol_name_matcher
-	initializer.
-	* dictionary.c (iter_match_first_hashed): Update call to
-	get_symbol_name_matcher.
-	(iter_match_next_hashed): Likewise.
-	(iter_match_next_linear): Likewise.
-	* dwarf2/read.c (dw2_expand_symtabs_matching_symbol): Likewise.
-	* f-lang.c (f_language_data): Delete la_get_symbol_name_matcher
-	initializer.
-	(f_language::get_symbol_name_matcher_inner): New member function.
-	* go-lang.c (go_language_data): Delete la_get_symbol_name_matcher
-	initializer.
-	* language.c (default_symbol_name_matcher): Update header comment,
-	make static.
-	(language_defn::get_symbol_name_matcher): New definition.
-	(language_defn::get_symbol_name_matcher_inner): Likewise.
-	(get_symbol_name_matcher): Delete.
-	(unknown_language_data): Delete la_get_symbol_name_matcher
-	initializer.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_get_symbol_name_matcher
-	field.
-	(language_defn::get_symbol_name_matcher): New member function.
-	(language_defn::get_symbol_name_matcher_inner): Likewise.
-	(default_symbol_name_matcher): Delete declaration.
-	* linespec.c (find_methods): Update call to
-	get_symbol_name_matcher.
-	* m2-lang.c (m2_language_data): Delete la_get_symbol_name_matcher
-	initializer.
-	* minsyms.c (lookup_minimal_symbol): Update call to
-	get_symbol_name_matcher.
-	(iterate_over_minimal_symbols): Likewise.
-	* objc-lang.c (objc_language_data): Delete
-	la_get_symbol_name_matcher initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* psymtab.c (psymbol_name_matches): Update call to
-	get_symbol_name_matcher.
-	* rust-lang.c (rust_language_data): Delete
-	la_get_symbol_name_matcher initializer.
-	* symtab.c (symbol_matches_search_name): Update call to
-	get_symbol_name_matcher.
-	(compare_symbol_name): Likewise.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_compute_program
-	initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(c_language::compute_program): New member function.
-	(cplus_language_data): Delete la_compute_program initializer.
-	(cplus_language::compute_program): New member function.
-	(asm_language_data): Delete la_compute_program initializer.
-	(minimal_language_data): Likewise.
-	* c-lang.h (c_compute_program): Update comment.
-	(cplus_compute_program): Likewise.
-	* compile/compile-c-support.c (c_compute_program): Likewise.
-	(cplus_compute_program): Likewise.
-	* compile/compile.c (compile_to_object): Update call to
-	la_compute_program.
-	* d-lang.c (d_language_data): Delete la_compute_program
-	initializer.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_compute_program field.
-	(language_defn::compute_program): New member function.
-	* m2-lang.c (m2_language_data): Delete la_compute_program
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-
-2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data) Delete
-	la_class_name_from_physname initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(cplus_language::class_name_from_physname): New member function.
-	(asm_language_data): Delete la_class_name_from_physname
-	initializer.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* dwarf2/read.c (guess_partial_die_structure_name): Update to call
-	method on language_defn class.
-	(guess_full_die_structure_name): Likewise.
-	* f-lang.c (f_language_data): Delete la_class_name_from_physname
-	initializer.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (language_class_name_from_physname): Delete.
-	(unk_lang_class_name): Delete.
-	(unknown_language_data): Delete la_class_name_from_physname
-	initializer.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_class_name_from_physname
-	field.
-	(language_defn::class_name_from_physname): New function.
-	(language_class_name_from_physname): Delete declaration.
-	* m2-lang.c (m2_language_data): Delete la_class_name_from_physname
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-
-2020-06-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (STATUS_NAME): New macro.
-	* tui/tui-layout.c (tui_remove_some_windows)
-	(initialize_known_windows, tui_register_window)
-	(tui_layout_split::remove_windows, initialize_layouts)
-	(tui_new_layout_command): Don't use hard-coded window names.
-
-2020-06-16  Tom Tromey  <tom@tromey.com>
-
-	PR tui/25348:
-	* tui/tui.c (tui_ensure_readline_initialized): Rename from
-	tui_initialize_readline.  Only run once.  Call rl_initialize.
-	* tui/tui.h (tui_ensure_readline_initialized): Rename from
-	tui_initialize_readline.
-	* tui/tui-io.c (tui_setup_io): Call
-	tui_ensure_readline_initialized.
-	* tui/tui-interp.c (tui_interp::init): Update.
-
-2020-06-16  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (tui_layout_split::remove_windows): Fix logic.
-	Also preserve the status window.
-
-2020-06-16  Tom Tromey  <tom@tromey.com>
-
-	* python/py-tui.c (tui_py_window::~tui_py_window): Handle case
-	where m_window==nullptr.
-
-2020-06-15  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (windows_nat::handle_output_debug_string):
-	Update.
-	(windows_nat::handle_ms_vc_exception): Update.
-	* target.h (target_read_string): Change API.
-	* target.c (target_read_string): Change API.
-	* solib-svr4.c (open_symbol_file_object, svr4_read_so_list):
-	Update.
-	* solib-frv.c (frv_current_sos): Update.
-	* solib-dsbt.c (dsbt_current_sos): Update.
-	* solib-darwin.c (darwin_current_sos): Update.
-	* linux-thread-db.c (inferior_has_bug): Update.
-	* expprint.c (print_subexp_standard): Update.
-	* ada-lang.c (ada_main_name, ada_tag_name_from_tsd)
-	(ada_exception_message_1): Update.
-
-2020-06-15  Tom Tromey  <tromey@adacore.com>
-
-	* linux-tdep.c (dump_mapping_p): Use target_read_memory.
-
-2020-06-15  Tom Tromey  <tromey@adacore.com>
-
-	* valprint.c (read_string): Update comment.
-	* target.c (MIN): Remove.
-	(target_read_string): Rewrite.
-
-2020-06-15  Tom Tromey  <tromey@adacore.com>
-
-	* corefile.c (read_memory_string): Remove.
-	* ada-valprint.c (ada_value_print_ptr): Update.
-	* ada-lang.h (ada_tag_name): Change return type.
-	* ada-lang.c (type_from_tag): Update.
-	(ada_tag_name_from_tsd): Change return type.  Use
-	target_read_string.
-	(ada_tag_name): Likewise.
-	* gdbcore.h (read_memory_string): Don't declare.
-
-2020-06-14  Hannes Domani  <ssbssa@yahoo.de>
-
-	* symtab.c (rbreak_command): Ignore Windows drive colon.
-
-2020-06-12  Simon Marchi  <simon.marchi@efficios.com>
-
-	* NEWS: Mention removed GDBserver host support.
-
-2020-06-12  Nelson Chu  <nelson.chu@sifive.com>
-
-	* features/riscv/rebuild-csr-xml.sh: Updated.
-
-2020-06-11  Tom Tromey  <tom@tromey.com>
-
-	PR gdb/18318:
-	* c-exp.y (lex_one_token): Handle 'p' like 'e'.
-
-2020-06-09  Jonny Grant  <jg@jguk.org>
-2020-06-09  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* main.c (captured_main_1): Don't print new line after help.
-	(print_gdb_help): add mailing list and IRC channel information
-	to --help.  Add new lines between items in the footer.  Remove
-	quotes around bug url.
-
-2020-06-11  Keith Seitz  <keiths@redhat.com>
-
-	PR gdb/21356
-	* gdbtypes.c (resolve_dynamic_union, resolve_dynamic_struct):
-	Resolve typedefs for type length calculations.
-
-2020-06-10  Tom de Vries  <tdevries@suse.de>
-
-	PR ada/24713
-	* dwarf2/index-write.c (struct mapped_symtab): Add m_string_obstack.
-	(write_psymbols): Enable .gdb_index for ada.
-	* dwarf2/read.c: Remove comment stating .gdb_index is unsupported for
-	ada.
-
-2020-06-10  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2/read.c (dw2_symtab_iter_init_common): Factor out of ...
-	(dw2_symtab_iter_init): ... here.  Add variant with "offset_type
-	namei" instead of "const char *name" argument.
-	(dw2_map_matching_symbols): Use "offset_type namei" variant of
-	dw2_symtab_iter_init.
-
-2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (TYPE_FIELD_TYPE): Remove.  Change all call sites
-	to use type::field and field::type instead.
-
-2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (FIELD_TYPE): Remove.  Change all call sites
-	to use field::type instead.
-
-2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct field) <type, set_type>: New methods.
-	Rename `type` field to...
-	<m_type>: ... this.  Change references throughout to use type or
-	set_type methods.
-	(FIELD_TYPE): Use field::type.  Change call sites that modify
-	the field's type to use field::set_type instead.
-
-2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (TYPE_INDEX_TYPE): Remove.  Change all call sites
-	to use type::index_type instead.
-
-2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct type) <index_type, set_index_type>: New
-	methods.
-	(TYPE_INDEX_TYPE): Use type::index_type.
-	* gdbtypes.c (create_array_type_with_stride): Likewise.
-
-2020-06-07  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_val_print_float): Remove "embedded_offset"
-	parameter.
-	(generic_value_print): Update.
-
-2020-06-05  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	Revert commit 982a38f60b0.
-	* python/py-tui.c (gdbpy_tui_set_title): Restore use of get.
-
-2020-06-05  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* python/py-tui.c (gdbpy_tui_set_title): Use release, not get, to
-	avoid use after free.
-
-2020-06-05  Tom de Vries  <tdevries@suse.de>
-
-	* NEWS: Fix typos.
-
-2020-06-04  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (dwarf2_read_gdb_index): Save partial_symtabs in
-	the per_bfd object.
-	(dwarf2_read_debug_names): Likewise.
-	(dwarf2_initialize_objfile): Use partial_symtabs from per_bfd
-	object when re-using a per_bfd object with an index.
-
-2020-06-03  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/26046
-	* dwarf2/read.c (scan_partial_symbols): Recurse into DW_TAG_subprogram
-	children for C++.
-	(load_partial_dies): Don't skip DW_TAG_inlined_subroutine child of
-	DW_TAG_subprogram.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete skip_trampoline
-	initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(cplus_language::skip_trampoline): New member function.
-	(asm_language_data): Delete skip_trampoline initializer.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (unk_lang_trampoline): Delete function.
-	(skip_language_trampoline): Update.
-	(unknown_language_data): Delete skip_trampoline initializer.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete skip_trampoline field.
-	(language_defn::skip_trampoline): New function.
-	* m2-lang.c (m2_language_data): Delete skip_trampoline
-	initializer.
-	* objc-lang.c (objc_skip_trampoline): Delete function, move
-	implementation to objc_language::skip_trampoline.
-	(objc_language_data): Delete skip_trampoline initializer.
-	(objc_language::skip_trampoline): New member function with
-	implementation from objc_skip_trampoline.
-	* opencl-lang.c (opencl_language_data): Delete skip_trampoline
-	initializer.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_demangle initializer.
-	(ada_language::demangle): New member function.
-	* c-lang.c (c_language_data): Delete la_demangle initializer.
-	(cplus_language_data): Delete la_demangle initializer.
-	(cplus_language::demangle): New member function.
-	(asm_language_data): Delete la_demangle initializer.
-	(minimal_language_data): Delete la_demangle initializer.
-	* d-lang.c (d_language_data): Delete la_demangle initializer.
-	(d_language::demangle): New member function.
-	* f-lang.c (f_language_data): Delete la_demangle initializer.
-	(f_language::demangle): New member function.
-	* go-lang.c (go_language_data): Delete la_demangle initializer.
-	(go_language::demangle): New member function.
-	* language.c (language_demangle): Update.
-	(unk_lang_demangle): Delete.
-	(unknown_language_data): Delete la_demangle initializer.
-	(unknown_language::demangle): New member function.
-	(auto_language_data): Delete la_demangle initializer.
-	(auto_language::demangle): New member function.
-	* language.h (language_data): Delete la_demangle field.
-	(language_defn::demangle): New function.
-	* m2-lang.c (m2_language_data): Delete la_demangle initializer.
-	* objc-lang.c (objc_language_data): Delete la_demangle
-	initializer.
-	(objc_language::demangle): New member function.
-	* opencl-lang.c (opencl_language_data): Delete la_demangle
-	initializer.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-	(rust_language::demangle): New member function.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_print_type
-	initializer.
-	(ada_language::print_type): New member function.
-	* c-lang.c (c_language_data): Delete la_print_type initializer.
-	(c_language::print_type): New member function.
-	(cplus_language_data): Delete la_print_type initializer.
-	(cplus_language::print_type): New member function.
-	(asm_language_data): Delete la_print_type initializer.
-	(asm_language::print_type): New member function.
-	(minimal_language_data): Delete la_print_type initializer.
-	(minimal_language::print_type): New member function.
-	* d-lang.c (d_language_data): Delete la_print_type initializer.
-	(d_language::print_type): New member function.
-	* f-lang.c (f_language_data): Delete la_print_type initializer.
-	(f_language::print_type): New member function.
-	* go-lang.c (go_language_data): Delete la_print_type initializer.
-	(go_language::print_type): New member function.
-	* language.c (unk_lang_print_type): Delete.
-	(unknown_language_data): Delete la_print_type initializer.
-	(unknown_language::print_type): New member function.
-	(auto_language_data): Delete la_print_type initializer.
-	(auto_language::print_type): New member function.
-	* language.h (language_data): Delete la_print_type field.
-	(language_defn::print_type): New function.
-	(LA_PRINT_TYPE): Update.
-	* m2-lang.c (m2_language_data): Delete la_print_type initializer.
-	(m2_language::print_type): New member function.
-	* objc-lang.c (objc_language_data): Delete la_print_type
-	initializer.
-	(objc_language::print_type): New member function.
-	* opencl-lang.c (opencl_print_type): Delete, implementation moved
-	to opencl_language::print_type.
-	(opencl_language_data): Delete la_print_type initializer.
-	(opencl_language::print_type): New member function, implementation
-	from opencl_print_type.
-	* p-lang.c (pascal_language_data): Delete la_print_type
-	initializer.
-	(pascal_language::print_type): New member function.
-	* rust-lang.c (rust_print_type): Delete, implementation moved to
-	rust_language::print_type.
-	(rust_language_data): Delete la_print_type initializer.
-	(rust_language::print_type): New member function, implementation
-	from rust_print_type.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_sniff_from_mangled_name): Delete function,
-	implementation moves to...
-	(ada_language::sniff_from_mangled_name): ...here.  Update return
-	type.
-	(ada_language_data): Delete la_sniff_from_mangled_name
-	initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(cplus_language::sniff_from_mangled_name): New member function,
-	implementation taken from gdb_sniff_from_mangled_name.
-	(asm_language_data): Delete la_sniff_from_mangled_name
-	initializer.
-	(minimal_language_data): Likewise.
-	* cp-support.c (gdb_sniff_from_mangled_name): Delete,
-	implementation moves to cplus_language::sniff_from_mangled_name.
-	* cp-support.h (gdb_sniff_from_mangled_name): Delete declaration.
-	* d-lang.c (d_sniff_from_mangled_name): Delete, implementation
-	moves to...
-	(d_language::sniff_from_mangled_name): ...here.
-	(d_language_data): Delete la_sniff_from_mangled_name initializer.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_sniff_from_mangled_name): Delete, implementation
-	moves to...
-	(go_language::sniff_from_mangled_name): ...here.
-	(go_language_data): Delete la_sniff_from_mangled_name initializer.
-	* language.c (language_sniff_from_mangled_name): Delete.
-	(unknown_language_data): Delete la_sniff_from_mangled_name
-	initializer.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_sniff_from_mangled_name
-	field.
-	(language_defn::sniff_from_mangled_name): New function.
-	(language_sniff_from_mangled_name): Delete declaration.
-	* m2-lang.c (m2_language_data): Delete la_sniff_from_mangled_name
-	field.
-	* objc-lang.c (objc_sniff_from_mangled_name): Delete,
-	implementation moves to...
-	(objc_language::sniff_from_mangled_name): ...here.
-	(objc_language_data): Delete la_sniff_from_mangled_name initializer.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_sniff_from_mangled_name): Delete,
-	implementation moves to...
-	(rust_language::sniff_from_mangled_name): ...here.
-	(rust_language_data): Delete la_sniff_from_mangled_name
-	initializer.
-	* symtab.c (symbol_find_demangled_name): Call
-	sniff_from_mangled_name member function.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_search_name_hash
-	initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(cplus_language::search_name_hash): New member function.
-	(asm_language_data): Delete la_search_name_hash initializer.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* dictionary.c (default_search_name_hash): Rename to...
-	(language_defn::search_name_hash): ...this.
-	* f-lang.c (f_language_data): Likewise.
-	(f_language::search_name_hash): New member function.
-	* go-lang.c (go_language_data): Delete la_search_name_hash
-	initializer.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (struct language_data): Delete la_search_name_hash
-	field.
-	(language_defn::search_name_hash): Declare new member function.
-	(default_search_name_hash): Delete declaration.
-	* m2-lang.c (m2_language_data): Delete la_search_name_hash
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-	* symtab.c (search_name_hash): Update call.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_get_compile_instance
-	initializer.
-	* c-lang.c (class compile_instance): Declare.
-	(c_language_data): Delete la_get_compile_instance initializer.
-	(c_language::get_compile_instance): New member function.
-	(cplus_language_data): Delete la_get_compile_instance initializer.
-	(cplus_language::get_compile_instance): New member function.
-	(asm_language_data): Delete la_get_compile_instance initializer.
-	(minimal_language_data): Likewise.
-	* c-lang.h (c_get_compile_context): Update comment.
-	(cplus_get_compile_context): Update comment.
-	* compile/compile.c (compile_to_object): Update calls, don't rely
-	on function pointer being NULL.
-	* d-lang.c (d_language_data): Delete la_get_compile_instance
-	initializer.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_get_compile_instance field.
-	(language_defn::get_compile_instance): New member function.
-	* m2-lang.c (m2_language_data): Delete la_get_compile_instance
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_add_all_symbols): Update comment.
-	(ada_iterate_over_symbols): Delete, move implementation to...
-	(ada_language::iterate_over_symbols): ...here, a new member
-	function, rewrite to use range based for loop.
-	(ada_language_data): Delete la_iterate_over_symbols initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(asm_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (language_data): Delete la_iterate_over_symbols field.
-	(language_defn::iterate_over_symbols): New member function.
-	(LA_ITERATE_OVER_SYMBOLS): Update.
-	* linespec.c (iterate_over_all_matching_symtabs): Update.
-	* m2-lang.c (m2_language_data): Delete la_iterate_over_symbols
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete
-	la_lookup_transparent_type initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(cplus_language::lookup_transparent_type): New member function.
-	(asm_language_data): Delete la_lookup_transparent_type
-	initializer.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (unknown_language_data): Likewise.
-	(auto_language_data): Likewise.
-	* language.h (struct language_data): Delete
-	la_lookup_transparent_type field.
-	(language_defn::lookup_transparent_type): New member function.
-	* m2-lang.c (m2_language_data): Delete la_lookup_transparent_type
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-	* symtab.c (symbol_matches_domain): Update call.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_arch_info): Delete function, move
-	implementation to...
-	(ada_language::language_arch_info): ...here, a new member
-	function.
-	(ada_language_data): Delete la_language_arch_info.
-	* c-lang.c (c_language_data): Likewise.
-	(c_language::language_arch_info): New member function.
-	(cplus_language_arch_info): Delete function, move
-	implementation to...
-	(cplus_language::language_arch_info): ...here, a new member
-	function.
-	(cplus_language_data): Delete la_language_arch_info.
-	(asm_language_data): Likewise.
-	(asm_language::language_arch_info): New member function.
-	(minimal_language_data): Delete la_language_arch_info.
-	(minimal_language::language_arch_info): New member function.
-	* d-lang.c (d_language_arch_info): Delete function, move
-	implementation to...
-	(d_language::language_arch_info): ...here, a new member
-	function.
-	(d_language_data): Delete la_language_arch_info.
-	* f-lang.c (f_language_arch_info): Delete function, move
-	implementation to...
-	(f_language::language_arch_info): ...here, a new member
-	function.
-	(f_language_data): Delete la_language_arch_info.
-	* go-lang.c (go_language_arch_info): Delete function, move
-	implementation to...
-	(go_language::language_arch_info): ...here, a new member
-	function.
-	(go_language_data): Delete la_language_arch_info.
-	* language.c (unknown_language_data): Likewise.
-	(unknown_language::language_arch_info): New member function.
-	(auto_language_data): Delete la_language_arch_info.
-	(auto_language::language_arch_info): New member function.
-	(language_gdbarch_post_init): Update call to
-	la_language_arch_info.
-	* language.h (language_data): Delete la_language_arch_info
-	function pointer.
-	(language_defn::language_arch_info): New function.
-	* m2-lang.c (m2_language_arch_info): Delete function, move
-	implementation to...
-	(m2_language::language_arch_info): ...here, a new member
-	function.
-	(m2_language_data): Delete la_language_arch_info.
-	* objc-lang.c (objc_language_arch_info): Delete function, move
-	implementation to...
-	(objc_language::language_arch_info): ...here, a new member
-	function.
-	(objc_language_data): Delete la_language_arch_info.
-	* opencl-lang.c (opencl_language_arch_info): Delete function, move
-	implementation to...
-	(opencl_language::language_arch_info): ...here, a new member
-	function.
-	(opencl_language_data): Delete la_language_arch_info.
-	* p-lang.c (pascal_language_arch_info): Delete function, move
-	implementation to...
-	(pascal_language::language_arch_info): ...here, a new member
-	function.
-	(pascal_language_data): Delete la_language_arch_info.
-	* rust-lang.c (rust_language_arch_info): Delete function, move
-	implementation to...
-	(rust_language::language_arch_info): ...here, a new member
-	function.
-	(rust_language_data): Delete la_language_arch_info.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_language_data): Delete la_pass_by_reference
-	initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(cplus_language::pass_by_reference_info): New method.
-	(asm_language_data): Delete la_pass_by_reference initializer.
-	(minimal_language_data): Likewise.
-	* cp-abi.c (cp_pass_by_reference): Remove use of
-	default_pass_by_reference.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	* gnu-v3-abi.c (gnuv3_pass_by_reference): Remove use of
-	default_pass_by_reference.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (language_pass_by_reference): Update.
-	(default_pass_by_reference): Delete.
-	(unknown_language_data): Delete la_pass_by_reference
-	initializer.
-	(auto_language_data): Likewise.
-	* language.h (struct language_data): Delete la_pass_by_reference
-	field.
-	(language_defn::pass_by_reference_info): New member function.
-	(default_pass_by_reference): Delete declaration.
-	* m2-lang.c (m2_language_data): Delete la_pass_by_reference
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_read_var_value): Delete function, move
-	implementation to...
-	(ada_language::read_var_value): ...here.
-	(ada_language_data): Delete la_read_var_value initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	* findvar.c (default_read_var_value): Rename to...
-	(language_defn::read_var_value): ...this.
-	* findvar.c (read_var_value): Update header comment, and change to
-	call member function instead of function pointer.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (unknown_language_data): Delete la_read_var_value
-	initializer.
-	(auto_language_data): Likewise.
-	* language.h (struct language_data): Delete la_read_var_value
-	field.
-	(language_defn::read_var_value): New member function.
-	(default_read_var_value): Delete declaration.
-	* m2-lang.c (m2_language_data): Delete la_read_var_value
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-	* value.h (default_read_var_value): Delete declaration.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* ada-lang.c (ada_print_array_index): Delete function, move
-	implementation to...
-	(ada_language::print_array_index): ...here.
-	(ada_language_data): Delete la_print_array_index initializer.
-	* c-lang.c (c_language_data): Likewise.
-	(cplus_language_data): Likewise.
-	(minimal_language_data): Likewise.
-	* d-lang.c (d_language_data): Likewise.
-	* f-lang.c (f_language_data): Likewise.
-	* go-lang.c (go_language_data): Likewise.
-	* language.c (default_print_array_index): Delete function, move
-	implementation to...
-	(language_defn::print_array_index): ...here.
-	(unknown_language_data): Delete la_print_array_index initializer.
-	(auto_language_data): Likewise.
-	* language.h (struct language_data): Delete la_print_array_index
-	field.
-	(language_defn::print_array_index): New member function.
-	(LA_PRINT_ARRAY_INDEX): Update.
-	(default_print_array_index): Delete declaration.
-	* m2-lang.c (m2_language_data): Delete la_print_array_index
-	initializer.
-	* objc-lang.c (objc_language_data): Likewise.
-	* opencl-lang.c (opencl_language_data): Likewise.
-	* p-lang.c (pascal_language_data): Likewise.
-	* rust-lang.c (rust_language_data): Likewise.
-
-2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdb/ada-lang.c (ada_language_defn): Convert to...
-	(ada_language_data): ...this.
-	(class ada_language): New class.
-	(ada_language_defn): New static global.
-	* gdb/c-lang.c (c_language_defn): Convert to...
-	(c_language_data): ...this.
-	(class c_language): New class.
-	(c_language_defn): New static global.
-	(cplus_language_defn): Convert to...
-	(cplus_language_data): ...this.
-	(class cplus_language): New class.
-	(cplus_language_defn): New static global.
-	(asm_language_defn): Convert to...
-	(asm_language_data): ...this.
-	(class asm_language): New class.
-	(asm_language_defn): New static global.
-	(minimal_language_defn): Convert to...
-	(minimal_language_data): ...this.
-	(class minimal_language): New class.
-	(minimal_language_defn): New static global.
-	* gdb/d-lang.c (d_language_defn): Convert to...
-	(d_language_data): ...this.
-	(class d_language): New class.
-	(d_language_defn): New static global.
-	* gdb/f-lang.c (f_language_defn): Convert to...
-	(f_language_data): ...this.
-	(class f_language): New class.
-	(f_language_defn): New static global.
-	* gdb/go-lang.c (go_language_defn): Convert to...
-	(go_language_data): ...this.
-	(class go_language): New class.
-	(go_language_defn): New static global.
-	* gdb/language.c (unknown_language_defn): Remove declaration.
-	(current_language): Initialize to nullptr, real initialization is
-	moved to _initialize_language.
-	(languages): Delete global.
-	(language_defn::languages): Define.
-	(set_language_command): Use language_defn::languages.
-	(set_language): Likewise.
-	(range_error): Likewise.
-	(language_enum): Likewise.
-	(language_def): Likewise.
-	(add_set_language_command): Use language_def::languages for the
-	language list, and language_def to lookup language pointers.
-	(skip_language_trampoline): Use language_defn::languages.
-	(unknown_language_defn): Convert to...
-	(unknown_language_data): ...this.
-	(class unknown_language): New class.
-	(unknown_language_defn): New static global.
-	(auto_language_defn): Convert to...
-	(auto_language_data): ...this.
-	(class auto_language): New class.
-	(auto_language_defn): New static global.
-	(language_gdbarch_post_init): Use language_defn::languages.
-	(_initialize_language): Initialize current_language.
-	* gdb/language.h (struct language_defn): Rename to...
-	(struct language_data): ...this.
-	(struct language_defn): New.
-	(auto_language_defn): Delete.
-	(unknown_language_defn): Delete.
-	(minimal_language_defn): Delete.
-	(ada_language_defn): Delete.
-	(asm_language_defn): Delete.
-	(c_language_defn): Delete.
-	(cplus_language_defn): Delete.
-	(d_language_defn): Delete.
-	(f_language_defn): Delete.
-	(go_language_defn): Delete.
-	(m2_language_defn): Delete.
-	(objc_language_defn): Delete.
-	(opencl_language_defn): Delete.
-	(pascal_language_defn): Delete.
-	(rust_language_defn): Delete.
-	* gdb/m2-lang.c (m2_language_defn): Convert to...
-	(m2_language_data): ...this.
-	(class m2_language): New class.
-	(m2_language_defn): New static global.
-	* gdb/objc-lang.c (objc_language_defn): Convert to...
-	(objc_language_data): ...this.
-	(class objc_language): New class.
-	(objc_language_defn): New static global.
-	* gdb/opencl-lang.c (opencl_language_defn): Convert to...
-	(opencl_language_data): ...this.
-	(class opencl_language): New class.
-	(opencl_language_defn): New static global.
-	* gdb/p-lang.c (pascal_language_defn): Convert to...
-	(pascal_language_data): ...this.
-	(class pascal_language): New class.
-	(pascal_language_defn): New static global.
-	* gdb/rust-exp.y (rust_lex_tests): Use language_def to find
-	language pointer, update comment format.
-	* gdb/rust-lang.c (rust_language_defn): Convert to...
-	(rust_language_data): ...this.
-	(class rust_language): New class.
-	(rust_language_defn): New static global.
-
-2020-06-01  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf2/read.c (class lnp_state_machine) <m_last_address>: New
-	member variable.
-	<m_stmt_at_address>: New member variable.
-	(lnp_state_machine::record_line): Don't record some lines, update
-	tracking of is_stmt at the same address.
-	(lnp_state_machine::lnp_state_machine): Initialise new member
-	variables.
-
-2020-06-01  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* config/i386/i386gnu.mn [%_S.o %_U.o] (COMPILE.post): Add
-	"-include gnu-nat-mig.h".
-	* gnu-nat-mig.h: New file.
-	* gnu-nat.c: Include "gnu-nat-mig.h".
-	(exc_server, msg_reply_server, notify_server,
-	process_reply_server): Remove declarations.
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* gnu-nat.h (inf_validate_procs, inf_suspend, inf_set_traced,
-	steal_exc_port, proc_get_state, inf_clear_wait, inf_cleanup,
-	inf_startup, inf_update_suspends, inf_set_pid, inf_steal_exc_ports,
-	inf_validate_procinfo, inf_validate_task_sc, inf_restore_exc_ports,
-	inf_set_threads_resume_sc, inf_set_threads_resume_sc_for_signal_thread,
-	inf_resume, inf_set_step_thread, inf_detach, inf_attach, inf_signal,
-	inf_continue, make_proc, proc_abort, _proc_free, proc_update_sc,
-	proc_get_exception_port, proc_set_exception_port, _proc_get_exc_port,
-	proc_steal_exc_port, proc_restore_exc_port, proc_trace): Move functions
-	to gnu_nat_target class.
-	* gnu-nat.c: Likewise.
-	(inf_update_procs, S_proc_wait_reply, set_task_pause_cmd,
-	set_task_exc_port_cmd, set_signals_cmd, set_thread_pause_cmd,
-	set_thread_exc_port_cmd): Call inf_validate_procs through gnu_target
-	object.
-	(gnu_nat_target::create_inferior, gnu_nat_target::detach): Pass `this'
-	instead of `gnu_target'.
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* i386-gnu-tdep.c: Include "gdbcore.h"
-	(gnu_sigtramp_code, i386_gnu_sc_reg_offset): New arrays.
-	(GNU_SIGTRAMP_LEN, GNU_SIGTRAMP_TAIL,
-	I386_GNU_SIGCONTEXT_THREAD_STATE_OFFSET): New macros
-	(i386_gnu_sigtramp_start, i386_gnu_sigtramp_p,
-	i386_gnu_sigcontext_addr): New functions
-	(i386gnu_init_abi): Register i386_gnu_sigtramp_p,
-	i386_gnu_sigcontext_addr, and i386_gnu_sc_reg_offset in the gdbarch
-	tdep.
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* gnu-nat.c (gnu_nat_target::create_inferior): Move push_target call
-	before fork_inferior call. Avoid calling it if target_is_pushed returns
-	true.
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* gnu-nat.h (gnu_target): New variable declaration.
-	* i386-gnu-nat.c (_initialize_i386gnu_nat): Initialize
-	gnu_target.
-	* gnu-nat.c (gnu_target): New variable.
-	(inf_validate_procs): Pass gnu_target to thread_change_ptid,
-	add_thread_silent, and add_thread calls.
-	(gnu_nat_target::create_inferior): Pass gnu_target to
-	add_thread_silent, thread_change_ptid call.
-	(gnu_nat_target::detach): Pass gnu_target to detach_inferior
-	call.
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* gnu-nat.c (gnu_xfer_auxv): Remove unused `res' variable.
-	(gnu_nat_target::find_memory_regions): Remove unused
-	`old_address' variable.
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* gnu-nat.c: Include "gdbarch.h".
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* reply_mig_hack.awk (Error return): Cast function through
-	void *, to bypass compiler function call check.
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* config/i386/i386gnu.mn (%_reply_S.c): Add dependency on
-	$(srcdir)/reply_mig_hack.awk.
-
-2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
-
-	* gnu-nat.h (gnu_debug_flag): Set type to bool.
-
-2020-05-30  Jonny Grant  <jg@jguk.org>
-
-	* configure.ac (ACX_BUGURL): change bug URL to https.
-
-2020-05-30  Pedro Alves  <palves@redhat.com>
-
-	* cp-support.c (replace_typedefs_template): New.
-	(replace_typedefs_qualified_name): Handle
-	DEMANGLE_COMPONENT_TEMPLATE.
-
-2020-05-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/comp-unit.c, dwarf2/comp-unit.h, dwarf2/index-cache.c,
-	dwarf2/index-cache.h, dwarf2/index-write.c,
-	dwarf2/index-write.h, dwarf2/line-header.c,
-	dwarf2/line-header.h, dwarf2/macro.c, dwarf2/macro.h,
-	dwarf2/read.c, dwarf2/read.h: Rename struct dwarf2_per_objfile
-	variables and fields from `dwarf2_per_objfile` to just
-	`per_objfile` throughout.
-
-2020-05-28  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/loc.c (class dwarf_evaluate_loc_desc)
-	<push_dwarf_reg_entry_value>: Add comment.
-
-2020-05-28  Kevin Buettner  <kevinb@redhat.com>
-	    Keith Seitz  <keiths@redhat.com>
-
-	* python/python.c (do_start_initialization): Call PyEval_SaveThread
-	instead of PyEval_ReleaseLock.
-	(class gdbpy_gil): Move to earlier in file.
-	(finalize_python): Set gdb_python_initialized.
-	(gdbpy_check_quit_flag): Acquire GIL via gdbpy_gil.  Return early
-	when not initialized.
-
-2020-05-28  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/loc.c (class dwarf_evaluate_loc_desc)
-	<push_dwarf_reg_entry_value>: Remove assert.  Override
-	per_objfile with caller_per_objfile.
-
-2020-05-28  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2/read.c	(dw2_symtab_iter_next, dw2_expand_marked_cus): Limit
-	PR gold/15646 workaround to symbol kind "type".
-
-2020-05-27  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (load_partial_dies): Use add_partial_symbol.
-
-2020-05-27  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/abbrev.h (struct abbrev_table) <lookup_abbrev>: Inline.
-	Use htab_find_with_hash.
-	<add_abbrev>: Remove "abbrev_number" parameter.
-	* dwarf2/abbrev.c (abbrev_table::add_abbrev): Remove
-	"abbrev_number" parameter.  Use htab_find_slot_with_hash.
-	(hash_abbrev): Add comment.
-	(abbrev_table::lookup_abbrev): Move to header file.
-	(abbrev_table::read): Update.
-
-2020-05-27  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (struct partial_die_info) <name>: Declare new
-	method.
-	<canonical_name>: New member.
-	<raw_name>: Rename from "name".
-	(partial_die_info): Initialize canonical_name.
-	(scan_partial_symbols): Check raw_name.
-	(partial_die_parent_scope, partial_die_full_name)
-	(add_partial_symbol, add_partial_subprogram)
-	(add_partial_enumeration, load_partial_dies): Use "name" method.
-	(partial_die_info::name): New method.
-	(partial_die_info::read, guess_partial_die_structure_name)
-	(partial_die_info::fixup): Update.
-
-2020-05-27  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/attribute.h (struct attribute) <form_is_ref>: Inline.
-	<get_ref_die_offset>: Inline.
-	<get_ref_die_offset_complaint>: New method.
-	* dwarf2/attribute.c (attribute::form_is_ref): Move to header.
-	(attribute::get_ref_die_offset_complaint): Rename from
-	get_ref_die_offset.  Just issue complaint.
-
-2020-05-27  Hannes Domani  <ssbssa@yahoo.de>
-
-	* cli/cli-cmds.c (shell_escape): Move exit_status_set_internal_vars.
-
-2020-05-27  Hannes Domani  <ssbssa@yahoo.de>
-
-	* exec.c (exec_file_attach): Use errno value of first openp failure.
-
-2020-05-27  Hannes Domani  <ssbssa@yahoo.de>
-
-	* nat/windows-nat.c (windows_thread_info::~windows_thread_info):
-	Don't close thread handle.
-
-2020-05-27  Tom Tromey  <tom@tromey.com>
-	    Simon Marchi  <simon.marchi@efficios.com>
-
-	* objfiles.h (struct objfile) <partial_symtabs>: Now a
-	shared_ptr.
-	* dwarf2/read.h (struct dwarf2_per_objfile) <partial_symtabs>: New
-	member.
-	* dwarf2/read.c (dwarf2_per_bfd_bfd_data_key,
-	dwarf2_per_bfd_objfile_data_key>: New globals.
-	(dwarf2_has_info): Use shared dwarf2_per_bfd if possible.
-	(dwarf2_get_section_info): Use get_dwarf2_per_objfile.
-	(dwarf2_initialize_objfile): Consider cases where per_bfd can be
-	shared.
-	(dwarf2_build_psymtabs): Set objfile::partial_symtabs and
-	short-circuit when sharing.
-	(dwarf2_build_psymtabs): Set dwarf2_per_objfile::partial_symtabs.
-	(dwarf2_psymtab::expand_psymtab): Use free_cached_comp_units.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_per_bfd) <line_header_hash>: Move
-	to...
-	(struct dwarf2_per_objfile) <line_header_hash>: ... here.
-	* dwarf2/read.c (handle_DW_AT_stmt_list): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (struct mapped_index_base) <symbol_name_at,
-	build_name_components, find_name_components_bounds>:
-	Add per_objfile parameter.
-	(struct mapped_index) <symbol_name_at>: Likewise.
-	(struct mapped_debug_names): Remove constructor.
-	<dwarf2_per_objfile>: Remove field.
-	<namei_to_name, symbol_name_at>: Add per_objfile parameter.
-	(mapped_index_base::find_name_components_bounds,
-	mapped_index_base::build_name_components,
-	dw2_expand_symtabs_matching_symbol): Likewise.
-	(class mock_mapped_index) <symbol_name_at>: Likewise.
-	(check_match): Likewise.
-	(check_find_bounds_finds): Likewise.
-	(test_mapped_index_find_name_component_bounds): Update.
-	(CHECK_MATCH): Update.
-	(dw2_expand_symtabs_matching): Update.
-	(class dw2_debug_names_iterator) <dw2_debug_names_iterator>: Add
-	per_objfile parameter.
-	<find_vec_in_debug_names>: Likewise.
-	<m_per_objfile>: New field.
-	(mapped_debug_names::namei_to_name): Add dwarf2_per_objfile
-	parameter.
-	(dw2_debug_names_iterator::find_vec_in_debug_names): Likewise.
-	(dw2_debug_names_iterator::next): Update.
-	(dw2_debug_names_lookup_symbol): Update.
-	(dw2_debug_names_expand_symtabs_for_function): Update.
-	(dw2_debug_names_map_matching_symbols): Update.
-	(dw2_debug_names_expand_symtabs_matching): Update.
-	(dwarf2_read_debug_names): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_cu): Forward-declare.
-	(struct dwarf2_per_bfd) <free_cached_comp_units>: Remove,
-	move to dwarf2_per_objfile.
-	<read_in_chain>: Remove.
-	(struct dwarf2_per_objfile) <get_cu, set_cu, remove_cu,
-	remove_all_cus, age_comp_units>: New methods.
-	<m_dwarf2_cus>: New member.
-	(struct dwarf2_per_cu_data) <cu>: Remove.
-	* dwarf2/read.c (struct dwarf2_cu) <read_in_chain>: Remove.
-	(age_cached_comp_units, free_one_cached_comp_unit): Remove,
-	moved to methods of dwarf2_per_objfile.
-	(dwarf2_clear_marks): Remove.
-	(dwarf2_queue_item::~dwarf2_queue_item): Update.
-	(dwarf2_per_bfd::~dwarf2_per_bfd): Don't free dwarf2_cus.
-	(dwarf2_per_bfd::free_cached_comp_units): Remove.
-	(dwarf2_per_objfile::remove_all_cus): New.
-	(class free_cached_comp_units) <~free_cached_comp_units>:
-	Update.
-	(load_cu): Update.
-	(dw2_do_instantiate_symtab): Adjust.
-	(fill_in_sig_entry_from_dwo_entry): Adjust.
-	(cutu_reader::init_tu_and_read_dwo_dies): Update.
-	(cutu_reader::cutu_reader): Likewise.
-	(cutu_reader::keep): Use dwarf2_per_objfile::set_cu.
-	(cutu_reader::cutu_reader): Use dwarf2_per_objfile::get_cu.
-	(process_psymtab_comp_unit): Use dwarf2_per_objfile::remove_cu
-	and dwarf2_per_objfile::age_comp_units.
-	(load_partial_comp_unit): Update.
-	(maybe_queue_comp_unit): Use dwarf2_per_objfile::get_cu.
-	(process_queue): Likewise.
-	(find_partial_die): Use dwarf2_per_objfile::get_cu instead of cu
-	backlink.
-	(dwarf2_read_addr_index): Likewise.
-	(follow_die_offset): Likewise.
-	(dwarf2_fetch_die_loc_sect_off): Likewise.
-	(dwarf2_fetch_constant_bytes): Likewise.
-	(dwarf2_fetch_die_type_sect_off): Likewise.
-	(follow_die_sig_1): Likewise.
-	(load_full_type_unit): Likewise.
-	(read_signatured_type): Likewise.
-	(dwarf2_cu::dwarf2_cu): Don't set cu field.
-	(dwarf2_cu::~dwarf2_cu): Remove.
-	(dwarf2_per_objfile::get_cu): New.
-	(dwarf2_per_objfile::set_cu): New.
-	(age_cached_comp_units): Rename to...
-	(dwarf2_per_objfile::age_comp_units): ... this.  Adjust
-	to std::unordered_map.
-	(free_one_cached_comp_unit): Rename to...
-	(dwarf2_per_objfile::remove_cu): ... this.  Adjust
-	to std::unordered_map.
-	(dwarf2_per_objfile::~dwarf2_per_objfile): New.
-	(dwarf2_mark_helper): Use dwarf2_per_objfile::get_cu, expect
-	a dwarf2_per_objfile in data.
-	(dwarf2_mark): Pass dwarf2_per_objfile in data to htab_traverse.
-	(dwarf2_clear_marks): Remove.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (class cutu_reader) <cutu_reader>: Replace
-	`int use_existing_cu` parameter with `dwarf2_cu *existing_cu`.
-	(init_tu_and_read_dwo_dies): Likewise.
-	(cutu_reader::init_tu_and_read_dwo_dies): Likewise.
-	(cutu_reader::cutu_reader): Likewise.
-	(load_partial_comp_unit): Likewise.
-	(process_psymtab_comp_unit): Update.
-	(build_type_psymtabs_1): Update.
-	(process_skeletonless_type_unit): Update.
-	(load_full_comp_unit): Update.
-	(find_partial_die): Update.
-	(dwarf2_read_addr_index): Update.
-	(read_signatured_type): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.h (struct dwarf2_per_cu_data) <m_header,
-	m_header_read_in>: New fields.
-	<get_header>: New method.
-	* dwarf2/read.c (per_cu_header_read_in): Remove.
-	(dwarf2_per_cu_data::get_header): New.
-	(dwarf2_per_cu_data::addr_size): Update.
-	(dwarf2_per_cu_data::offset_size): Update.
-	(dwarf2_per_cu_data::ref_addr_size): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.c (load_cu): Return dwarf2_cu.
-	(dw2_do_instantiate_symtab): Update.
-	(queue_and_load_all_dwo_tus): Change parameter from
-	dwarf2_per_cu_data to dwarf2_cu.
-	(dwarf2_fetch_die_loc_sect_off): Update.
-	(dwarf2_fetch_constant_bytes): Update.
-	(dwarf2_fetch_die_type_sect_off): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.c (process_full_comp_unit,
-	process_full_type_unit): Remove per_cu, per_objfile paramters.
-	Add dwarf2_cu parameter.
-	(process_queue): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.c (create_cu_from_index_list): Replace
-	dwarf2_per_objfile parameter with dwarf2_per_bfd.
-	(create_cus_from_index_list): Likewise.
-	(create_cus_from_index): Likewise.
-	(create_signatured_type_table_from_index): Likewise.
-	(create_cus_from_debug_names_list): Likewise.
-	(create_cus_from_debug_names): Likewise.
-	(dwarf2_read_gdb_index): Update.
-	(dwarf2_read_debug_names): Update.
-
-2020-05-27  Tom Tromey  <tom@tromey.com>
-	    Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_per_objfile)
-	<get_type_for_signatured_type, set_type_for_signatured_type>:
-	New methods.
-	<m_type_map>: New member.
-	(struct signatured_type) <type>: Remove.
-	* dwarf2/read.c
-	(dwarf2_per_objfile::get_type_for_signatured_type,
-	dwarf2_per_objfile::set_type_for_signatured_type): New.
-	(get_signatured_type): Use new methods.
-
-2020-05-27  Tom Tromey  <tom@tromey.com>
-	    Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct type_unit_group_unshareable): New.
-	(struct dwarf2_per_objfile) <type_units>: New member.
-	<get_type_unit_group_unshareable>: New method.
-	* dwarf2/read.c (struct type_unit_group) <compunit_symtab,
-	num_symtabs, symtabs>: Remove; move to
-	type_unit_group_unshareable.
-	(dwarf2_per_objfile::get_type_unit_group_unshareable): New.
-	(process_full_type_unit, dwarf2_cu::setup_type_unit_groups)
-	(dwarf2_cu::setup_type_unit_groups): Use type_unit_group_unshareable.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_per_cu_data):
-	<dwarf2_per_objfile>: Remove.
-	* dwarf2/read.c (create_cu_from_index_list): Don't assign
-	dwarf2_per_objfile.
-	(create_signatured_type_table_from_index): Likewise.
-	(create_signatured_type_table_from_debug_names): Likewise.
-	(create_debug_type_hash_table): Likewise.
-	(fill_in_sig_entry_from_dwo_entry): Likewise.
-	(create_type_unit_group): Likewise.
-	(read_comp_units_from_section): Likewise.
-	(create_cus_hash_table): Likewise.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (process_psymtab_comp_unit): Remove reference to
-	dwarf2_per_cu_data::dwarf2_per_objfile.
-	(compute_compunit_symtab_includes): Likewise.
-	(dwarf2_cu::start_symtab): Likewise.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.h (dwarf2_get_die_type): Add dwarf2_per_objfile
-	parameter.
-	* dwarf2/read.c (get_die_type_at_offset): Likewise.
-	(read_namespace_alias): Update.
-	(lookup_die_type): Update.
-	(dwarf2_get_die_type): Add dwarf2_per_objfile parameter.
-	* dwarf2/loc.c (class dwarf_evaluate_loc_desc) <get_base_type>:
-	Update.
-	(disassemble_dwarf_expression): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_queue_item): Add
-	dwarf2_per_objfile parameter, assign new parameter.
-	<per_objfile>: New field.
-	* dwarf2/read.c (free_one_cached_comp_unit): Add
-	dwarf2_per_objfile parameter.
-	(queue_comp_unit): Likewise.
-	(dw2_do_instantiate_symtab): Update.
-	(process_psymtab_comp_unit): Update.
-	(maybe_queue_comp_unit): Add dwarf2_per_objfile parameter.
-	(process_imported_unit_die): Update.
-	(queue_and_load_dwo_tu): Update.
-	(follow_die_offset): Update.
-	(follow_die_sig_1): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_per_cu_data) <objfile>: Remove.
-	* dwarf2/read.c (dwarf2_compute_name): Pass per_objfile down.
-	(read_call_site_scope): Assign per_objfile.
-	(dwarf2_per_cu_data::objfile): Remove.
-	* gdbtypes.h (struct call_site) <per_objfile>: New member.
-	* dwarf2/loc.h (dwarf2_evaluate_loc_desc): Add
-	dwarf2_per_objfile parameter.
-	* dwarf2/loc.c (dwarf2_evaluate_loc_desc_full): Add
-	dwarf2_per_objfile parameter.
-	(dwarf_expr_reg_to_entry_parameter): Add output
-	dwarf2_per_objfile parameter.
-	(locexpr_get_frame_base): Update.
-	(class dwarf_evaluate_loc_desc) <get_tls_address>: Update.
-	<push_dwarf_reg_entry_value>: Update.
-	<call_site_to_target_addr>: Update.
-	(dwarf_entry_parameter_to_value): Add dwarf2_per_objfile
-	parameter.
-	(value_of_dwarf_reg_entry): Update.
-	(rw_pieced_value): Update.
-	(indirect_synthetic_pointer): Update.
-	(dwarf2_evaluate_property): Update.
-	(dwarf2_loc_desc_get_symbol_read_needs): Add dwarf2_per_objfile
-	parameter.
-	(locexpr_read_variable): Update.
-	(locexpr_get_symbol_read_needs): Update.
-	(loclist_read_variable): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (dwarf2_fetch_die_loc_sect_off,
-	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
-	dwarf2_fetch_die_type_sect_off): Add dwarf2_per_objfile
-	parameter.
-	* dwarf2/read.c (dwarf2_fetch_die_loc_sect_off,
-	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
-	dwarf2_fetch_die_type_sect_off): Add dwarf2_per_objfile
-	parameter.
-	* dwarf2/loc.c (indirect_synthetic_pointer, per_cu_dwarf_call,
-	sect_variable_value): Add dwarf2_per_objfile parameter.
-	(class dwarf_evaluate_loc_desc) <dwarf_call,
-	dwarf_variable_value>: Update.
-	(fetch_const_value_from_synthetic_pointer): Add
-	dwarf2_per_objfile parameter.
-	(fetch_const_value_from_synthetic_pointer): Update.
-	(coerced_pieced_ref): Update.
-	(class symbol_needs_eval_context) <dwarf_call,
-	dwarf_variable_value>: Update.
-	(dwarf2_compile_expr_to_ax): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/loc.c (allocate_piece_closure): Add dwarf2_per_objfile
-	parameter.
-	(dwarf2_evaluate_loc_desc_full): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (dwarf2_read_addr_index): Add dwarf2_per_objfile
-	parameter.
-	* dwarf2/read.c (dwarf2_read_addr_index): Likewise.
-	* dwarf2/loc.c (decode_debug_loclists_addresses): Add
-	dwarf2_per_objfile parameter.
-	(decode_debug_loc_dwo_addresses): Likewise.
-	(dwarf2_find_location_expression): Update.
-	(class dwarf_evaluate_loc_desc) <get_addr_index>: Update.
-	(locexpr_describe_location_piece): Add dwarf2_per_objfile
-	parameter.
-	(disassemble_dwarf_expression): Add dwarf2_per_objfile
-	parameter.
-	(locexpr_describe_location_1): Likewise.
-	(locexpr_describe_location): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_per_cu_data) <text_offset>:
-	Remove.
-	* dwarf2/read.c (dwarf2_per_cu_data::text_offset): Remove.
-	* dwarf2/loc.c (dwarf2_find_location_expression): Update.
-	(dwarf2_compile_property_to_c): Update.
-	(dwarf2_compile_expr_to_ax): Add dwarf2_per_objfile parameter,
-	use text offset from objfile.
-	(locexpr_tracepoint_var_ref): Update.
-	(locexpr_generate_c_location): Update.
-	(loclist_describe_location): Update.
-	(loclist_tracepoint_var_ref): Update.
-	* dwarf2/compile.h (compile_dwarf_bounds_to_c): Add
-	dwarf2_per_objfile parameter.
-	* dwarf2/loc2c.c (do_compile_dwarf_expr_to_c): Likewise,
-	use text offset from objfile.
-	(compile_dwarf_expr_to_c): Add dwarf2_per_objfile parameter.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/expr.h (struct dwarf_expr_context)
-	<dwarf_expr_context>: Add dwarf2_per_objfile parameter.
-	<offset>: Remove.
-	<per_objfile>: New member.
-	* dwarf2/expr.c (dwarf_expr_context::dwarf_expr_context): Add
-	dwarf2_per_objfile parameter.  Don't set offset, set
-	per_objfile.
-	(dwarf_expr_context::execute_stack_op): Use offset from objfile.
-	* dwarf2/frame.c (dwarf2_frame_find_fde): Return (by parameter)
-	a dwarf2_per_objfile object instead of an offset.
-	(class dwarf_expr_executor) <dwarf_expr_executor>: Add
-	constructor.
-	(execute_stack_op): Add dwarf2_per_objfile parameter, pass it
-	to dwarf2_expr_executor constructor.  Don't set offset.
-	(dwarf2_fetch_cfa_info): Update.
-	(struct dwarf2_frame_cache) <text_offset>: Remove.
-	<per_objfile>: New field.
-	(dwarf2_frame_cache): Update.
-	(dwarf2_frame_prev_register): Update.
-	* dwarf2/loc.c (class dwarf_evaluate_loc_desc)
-	<dwarf_evaluate_loc_desc>: Add constructor.
-	(dwarf2_evaluate_loc_desc_full): Update.
-	(dwarf2_locexpr_baton_eval): Update.
-	(class symbol_needs_eval_context) <symbol_needs_eval_context>:
-	Add constructor.
-	(dwarf2_loc_desc_get_symbol_read_needs): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_per_cu_data) <addr_type,
-	addr_sized_int_type>: Move to dwarf2_cu.
-	<int_type>: Move to dwarf2_per_objfile.
-	(struct dwarf2_per_objfile) <int_type>: Move here.
-	* dwarf2/read.c (struct dwarf2_cu) <addr_type,
-	addr_sized_int_type>: Move here.
-	(read_func_scope): Update.
-	(read_array_type): Update.
-	(read_tag_string_type): Update.
-	(attr_to_dynamic_prop): Update.
-	(dwarf2_per_cu_data::int_type): Rename to...
-	(dwarf2_per_objfile::int_type): ... this.
-	(dwarf2_per_cu_data::addr_sized_int_type): Rename to...
-	(dwarf2_cu::addr_sized_int_type): ... this.
-	(read_subrange_type): Update.
-	(dwarf2_per_cu_data::addr_type): Rename to...
-	(dwarf2_cu::addr_type): ... this.
-	(set_die_type): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (queue_and_load_all_dwo_tus): Access per_objfile
-	data through per_cu->cu.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (lookup_dwo_comp_unit): Change
-	dwarf2_per_cu_data parameter fo dwarf2_cu.
-	(lookup_dwo_type_unit): Likewise.
-	(read_cutu_die_from_dwo): Likewise.
-	(lookup_dwo_unit): Likewise.
-	(open_and_init_dwo_file): Likewise.
-	(lookup_dwo_cutu): Likewise.
-	(lookup_dwo_comp_unit): Likewise.
-	(lookup_dwo_type_unit): Likewise.
-	(cutu_reader::init_tu_and_read_dwo_dies): Update.
-	(cutu_reader::cutu_reader): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (process_full_comp_unit): Add dwarf2_per_objfile
-	parameter.
-	(process_full_type_unit): Likewise.
-	(process_queue): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (recursively_compute_inclusions): Add
-	dwarf2_per_objfile parameter.
-	(compute_compunit_symtab_includes): Likewise.
-	(process_cu_includes): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (create_partial_symtab): Add dwarf2_per_objfile
-	parameter.
-	(create_type_unit_group): Update.
-	(process_psymtab_comp_unit_reader): Update.
-	(build_type_psymtabs_reader): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (cutu_reader::keep): Access dwarf2_per_objfile
-	object through m_this_cu->cu.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.c (queue_and_load_dwo_tu): Expect a dwarf2_cu as
-	the info parameter.
-	(queue_and_load_all_dwo_tus): Pass per_cu->cu.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.c (class cutu_reader) <cutu_reader>: Add
-	per_objfile parameter.
-	(load_full_type_unit): Add per_objfile parameter.
-	(read_signatured_type): Likewise.
-	(load_full_comp_unit): Likewise.
-	(load_cu): Likewise.
-	(dw2_do_instantiate_symtab): Likewise.
-	(dw2_get_file_names): Likewise.
-	(dw2_map_symtabs_matching_filename): Update.
-	(dw_expand_symtabs_matching_file_matcher): Update.
-	(dw2_map_symbol_filenames): Update.
-	(process_psymtab_comp_unit): Add per_objfile parameter.
-	(build_type_psymtabs_1): Update.
-	(process_skeletonless_type_unit): Update.
-	(dwarf2_build_psymtabs_hard): Update.
-	(load_partial_comp_unit): Add per_objfile parameter.
-	(scan_partial_symbols): Update.
-	(load_full_comp_unit): Add per_objfile parameter.
-	(process_imported_unit_die): Update.
-	(create_cus_hash_table): Update.
-	(find_partial_die): Update.
-	(dwarf2_read_addr_index): Update.
-	(follow_die_offset): Update.
-	(dwarf2_fetch_die_loc_sect_off): Update.
-	(dwarf2_fetch_constant_bytes): Update.
-	(dwarf2_fetch_die_type_sect_off): Update.
-	(follow_die_sig_1): Update.
-	(load_full_type_unit): Add per_objfile parameter.
-	(read_signatured_type): Likewise.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (lookup_dwo_unit): Use bfd_get_filename instead
-	of objfile_name.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.h (struct dwarf2_per_bfd) <obfd>: New member.
-	(dwarf2_get_dwz_file): Replace parameter with dwarf2_per_bfd.
-	* dwarf2/read.c (dwarf2_per_bfd::dwarf2_per_bfd): Assign obfd
-	field.
-	(dwarf2_get_dwz_file): Replace parameter with dwarf2_per_bfd.
-	(create_cus_from_index): Update.
-	(dwarf2_read_gdb_index): Update.
-	(create_cus_from_debug_names): Update.
-	(dwarf2_read_debug_names): Update.
-	(get_abbrev_section_for_cu): Update.
-	(create_all_comp_units): Update.
-	(read_attribute_value): Update.
-	(get_debug_line_section): Update.
-	* dwarf2/index-cache.c (index_cache::store): Update.
-	* dwarf2/index-write.c (save_gdb_index_command): Update.
-	* dwarf2/macro.c (dwarf_decode_macro_bytes): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.h (struct dwarf2_per_cu_data) <per_bfd>: New
-	member.
-	* dwarf2/read.c (dwarf2_per_bfd::allocate_per_cu): Initialize
-	dwarf2_per_cu_data::per_bfd.
-	(dwarf2_per_bfd::allocate_signatured_type): Likewise.
-	(create_type_unit_group): Likewise.
-	(queue_comp_unit): Remove reference to
-	per_cu->dwarf2_per_objfile.
-	(maybe_queue_comp_unit): Likewise.
-	(fill_in_sig_entry_from_dwo_entry): Assign new field.
-	(create_cus_hash_table): Assign new field.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c: Replace
-	dwarf2_cu->per_cu->dwarf2_per_objfile references with
-	dwarf2_cu->per_objfile throughout.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (dw2_do_instantiate_symtab): Add per_objfile
-	parameter, don't use per_cu->dwarf2_per_objfile.
-	(dw2_instantiate_symtab): Likewise.
-	(dw2_find_last_source_symtab): Update.
-	(dw2_map_expand_apply): Update.
-	(dw2_lookup_symbol): Update.
-	(dw2_expand_symtabs_for_function): Update.
-	(dw2_expand_all_symtabs): Update.
-	(dw2_expand_symtabs_with_fullname): Update.
-	(dw2_expand_symtabs_matching_one): Add per_objfile parameter,
-	don't use per_cu->dwarf2_per_objfile.
-	(dw2_expand_marked_cus): Update.
-	(dw2_find_pc_sect_compunit_symtab): Update.
-	(dw2_debug_names_lookup_symbol): Update.
-	(dw2_debug_names_expand_symtabs_for_function): Update.
-	(dw2_debug_names_map_matching_symbols): Update.
-	(dwarf2_psymtab::expand_psymtab): Update.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (struct dwarf2_cu) <dwarf2_cu>: Add parameter.
-	<per_objfile>: New member.
-	(class cutu_reader) <init_tu_and_read_dwo_dies>: Add parameter.
-	(cutu_reader::init_tu_and_read_dwo_dies): Add parameter, update
-	call to dwarf2_cu.
-	(cutu_reader::cutu_reader): Update.
-	(dwarf2_cu::dwarf2_cu): Add parameter, initialize per_objfile.
-
-2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_per_bfd) <die_type_hash>: Move to
-	struct dwarf2_per_objfile.
-	(struct dwarf2_per_objfile) <die_type_hash>: Move from struct
-	dwarf2_per_bfd.
-	* dwarf2/read.c (set_die_type): Update.
-	(get_die_type_at_offset): Update.
-
-2020-05-27  Tom Tromey  <tom@tromey.com>
-	    Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.h (struct dwarf2_per_bfd) <num_psymtabs>: New
-	method.
-	(struct dwarf2_per_objfile) <resize_symtabs, symtab_set_p,
-	get_symtab, set_symtab>: New methods.
-	<m_symtabs>: New field.
-	(struct dwarf2_psymtab): Derive from partial_symtab.
-	<readin_p, get_compunit_symtab>: Declare methods.
-	* dwarf2/read.c (dwarf2_per_objfile::symtab_set_p,
-	dwarf2_per_objfile::get_symtab, dwarf2_per_objfile::set_symtab):
-	New methods.
-	(struct dwarf2_per_cu_quick_data) <compunit_symtab>: Remove.
-	(dw2_do_instantiate_symtab, dw2_instantiate_symtab)
-	(dw2_map_expand_apply, dw2_map_symtabs_matching_filename)
-	(dw2_symtab_iter_next, dw2_print_stats)
-	(dw2_expand_symtabs_with_fullname)
-	(dw2_expand_symtabs_matching_one)
-	(dw_expand_symtabs_matching_file_matcher)
-	(dw2_find_pc_sect_compunit_symtab, dw2_map_symbol_filenames)
-	(dw2_debug_names_iterator::next)
-	(dw2_debug_names_map_matching_symbols)
-	(fill_in_sig_entry_from_dwo_entry, dwarf2_psymtab::read_symtab)
-	(process_queue, dwarf2_psymtab::expand_psymtab): Update.
-	(dwarf2_psymtab::readin_p, dwarf2_psymtab::get_compunit_symtab):
-	New methods.
-	(get_compunit_symtab, process_full_comp_unit)
-	(process_full_type_unit): Update.
-	(dwarf2_build_psymtabs, dwarf2_initialize_objfile, add_type_unit): Call
-
-2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.h (dwarf2_per_objfile): Rename to dwarf2_per_bfd,
-	then introduce a new dwarf2_per_objfile type.
-	<read_line_string>: Move to the new dwarf2_per_objfile type.
-	<objfile>: Likewise.
-	(dwarf2_per_bfd): Rename dwarf2_per_objfile to this.
-	* dwarf2/read.c: Replace references to dwarf2_per_objfile with
-	dwarf2_per_objfile->per_bfd.
-	(dwarf2_per_objfile::dwarf2_per_objfile): Rename to...
-	(dwarf2_per_bfd::dwarf2_per_bfd): ... this.
-	(dwarf2_per_objfile::free_cached_comp_units): Rename to...
-	(dwarf2_per_bfd::free_cached_comp_units): ... this.
-	(dwarf2_has_info): Allocate dwarf2_per_bfd.
-	(dwarf2_per_objfile::locate_sections): Rename to...
-	(dwarf2_per_bfd::locate_sections): ... this.
-	(dwarf2_per_objfile::get_cutu): Rename to...
-	(dwarf2_per_bfd::get_cutu): ... this.
-	(dwarf2_per_objfile::get_cu): Rename to...
-	(dwarf2_per_bfd::get_cu): ... this.
-	(dwarf2_per_objfile::get_tu): Rename to...
-	(dwarf2_per_bfd::get_tu): ... this.
-	(dwarf2_per_objfile::allocate_per_cu): Rename to...
-	(dwarf2_per_bfd::allocate_per_cu): ... this.
-	(dwarf2_per_objfile::allocate_signatured_type): Rename to...
-	(dwarf2_per_bfd::allocate_signatured_type): ... this.
-	(get_gdb_index_contents_ftype): Change parameter from
-	dwarf2_per_objfile to dwarf2_per_bfd.
-	* dwarf2/macro.c, dwarf2/index-write.c: Replace references to
-	dwarf2_per_objfile with dwarf2_per_objfile->per_bfd.
-
-2020-05-27  Tom Tromey  <tom@tromey.com>
-	    Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/loc.c (struct piece_closure) <per_objfile>: New member.
-	(allocate_piece_closure): Set "per_objfile" member.
-	(dwarf2_find_location_expression, dwarf2_locexpr_baton_eval)
-	(locexpr_describe_location, loclist_describe_location): Use new
-	member.
-	* dwarf2/read.c (read_call_site_scope)
-	(mark_common_block_symbol_computed, attr_to_dynamic_prop)
-	(dwarf2_const_value_attr, dwarf2_fetch_die_loc_sect_off)
-	(fill_in_loclist_baton, dwarf2_symbol_mark_computed,
-	handle_data_member_location): Set per_objfile member.
-	* dwarf2/loc.h (struct dwarf2_locexpr_baton) <per_objfile>: New
-	member.
-	(struct dwarf2_loclist_baton) <per_objfile>: New member.
-
-2020-05-27  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct dwarf2_per_objfile) <allocate_per_cu,
-	allocate_signatured_type>: Declare new methods.
-	<m_num_psymtabs>: New member.
-	(struct dwarf2_per_cu_data) <index>: New member.
-	* dwarf2/read.c (dwarf2_per_objfile::allocate_per_cu)
-	(dwarf2_per_objfile::allocate_signatured_type): New methods.
-	(create_cu_from_index_list): Use allocate_per_cu.
-	(create_signatured_type_table_from_index)
-	(create_signatured_type_table_from_debug_names)
-	(create_debug_type_hash_table, add_type_unit)
-	(read_comp_units_from_section): Use allocate_signatured_type.
-
-2020-05-27  Tom Tromey  <tom@tromey.com>
-
-	* psymtab.c (partial_map_expand_apply)
-	(psym_find_pc_sect_compunit_symtab, psym_lookup_symbol)
-	(psym_lookup_global_symbol_language)
-	(psymtab_to_symtab, psym_find_last_source_symtab, dump_psymtab)
-	(psym_print_stats, psym_expand_symtabs_for_function)
-	(psym_map_symbol_filenames, psym_map_matching_symbols)
-	(psym_expand_symtabs_matching)
-	(partial_symtab::read_dependencies, maintenance_info_psymtabs)
-	(maintenance_check_psymtabs): Update.
-	* psympriv.h (struct partial_symtab) <readin_p,
-	get_compunit_symtab>: Add objfile parameter.
-	(struct standard_psymtab) <readin_p, get_compunit_symtab>:
-	Likewise.
-	* dwarf2/read.c (struct dwarf2_include_psymtab) <readin_p,
-	get_compunit_symtab>: Likewise.
-	(dwarf2_psymtab::expand_psymtab): Pass objfile argument.
-
-2020-05-27  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct dwarf2_per_objfile) <obstack>: New
-	member.
-	* dwarf2/read.c (delete_file_name_entry): Fix comment.
-	(create_cu_from_index_list)
-	(create_signatured_type_table_from_index)
-	(create_signatured_type_table_from_debug_names)
-	(dw2_get_file_names_reader, dwarf2_initialize_objfile)
-	(dwarf2_create_include_psymtab)
-	(create_debug_type_hash_table, add_type_unit)
-	(create_type_unit_group, read_comp_units_from_section)
-	(dwarf2_compute_name, create_cus_hash_table)
-	(create_dwp_hash_table, create_dwo_unit_in_dwp_v1)
-	(create_dwo_unit_in_dwp_v2, open_and_init_dwp_file): Use new
-	obstack.
-	(dw2_get_real_path): Likewise.  Change argument to
-	dwarf2_per_objfile.
-
-2020-05-27  Luis Machado  <luis.machado@linaro.org>
-
-	PR tdep/26000
-	* arm-tdep.c (thumb_analyze_prologue): Fix instruction matching
-	for ldrd (immediate).
-
-2020-05-26  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* command.h: Add comment giving the name of class_tui.
-	* cli/cli-cmds.c (_initialize_cli_cmds): If TUI defined,
-	create the fake command for the help for class_tui.
-
-2020-05-26  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_print_array_index): Change type.  Call val_atr.
-	(ada_value_ptr_subscript): Don't call pos_atr on the lower bound.
-	(val_atr): New function.
-	(value_val_atr): Use it.
-	* ada-valprint.c (print_optional_low_bound): Change low bound
-	handling for enums.
-	(val_print_packed_array_elements): Don't call discrete_position.
-	* gdbtypes.c (get_discrete_bounds) <TYPE_CODE_RANGE>: Call
-	discrete_position for enum types.
-	* language.c (default_print_array_index): Change type.
-	* language.h (struct language_defn) <la_print_array_index>: Add
-	index_type parameter, change type of index_value.
-	(LA_PRINT_ARRAY_INDEX): Add index_type parameter.
-	(default_print_array_index): Update.
-	* valprint.c (maybe_print_array_index): Don't call
-	value_from_longest.  Update.
-	(value_print_array_elements): Don't call discrete_position.
-
-2020-05-26  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (value_val_atr): Handle TYPE_CODE_RANGE.
-	* gdbtypes.c (discrete_position): Handle TYPE_CODE_RANGE.
-
-2020-05-25  Cristiano De Alti  <cristiano_dealti@hotmail.com>
-
-	PR gdb/13519
-	* avr-tdep.c (avr_integer_to_address): Return data or code
-	address accordingly to the second 'type' argument of the
-	function.
-
-2020-05-25  Michael Weghorn  <m.weghorn@posteo.de>
-
-	* infcmd.c, inferior.h: (construct_inferior_arguments):
-	Moved function from here to gdbsupport/common-inferior.{h,cc}
-
-2020-05-23  Tom Tromey  <tom@tromey.com>
-
-	Revert commit eca1f90c:
-	* NEWS: Remove entry for completion styling.
-	* completer.c (_rl_completion_prefix_display_length): Move
-	declaration later.
-	(gdb_fnprint): Revert.
-	(gdb_display_match_list_1): Likewise.
-	* cli/cli-style.c (completion_prefix_style)
-	(completion_difference_style, completion_suffix_style): Remove.
-	(_initialize_cli_style): Revert.
-	* cli/cli-style.h (completion_prefix_style)
-	(completion_difference_style, completion_suffix_style): Don't
-	declare.
-
-2020-05-24  Pedro Alves  <palves@redhat.com>
-
-	* symtab.c (completion_list_add_name): Return boolean indication
-	of whether the symbol matched.
-	(completion_list_add_symbol): Don't try to remove C++ aliases if
-	the symbol didn't match in the first place.
-	* symtab.h (completion_list_add_name): Return bool.
-
-2020-05-23  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* gdbtypes.h (TYPE_FIELD): Remove.  Replace all uses with
-	type::field.
-
-2020-05-23  Joel Brobecker  <brobecker@adacore.com>
-
-	GDB 9.2 released.
-
-2020-05-23  Tom Tromey  <tom@tromey.com>
-
-	* NEWS: Add entry for completion styling.
-	* completer.c (_rl_completion_prefix_display_length): Move
-	declaration earlier.
-	(gdb_fnprint): Use completion_style.
-	(gdb_display_match_list_1): Likewise.
-	* cli/cli-style.c (completion_prefix_style)
-	(completion_difference_style, completion_suffix_style): New
-	globals.
-	(_initialize_cli_style): Register new globals.
-	* cli/cli-style.h (completion_prefix_style)
-	(completion_difference_style, completion_suffix_style): Declare.
-
-2020-05-23  Pedro Alves  <palves@redhat.com>
-
-	* utils.c: Include "gdbsupport/gdb-safe-ctype.h".
-	(parse_escape): Use ISDIGIT instead of isdigit.
-	(puts_debug): Use gdb_isprint instead of isprint.
-	(fprintf_symbol_filtered): Use ISALNUM instead of isalnum.
-	(cp_skip_operator_token, skip_ws, strncmp_iw_with_mode): Use
-	ISSPACE instead of isspace.
-	(strncmp_iw_with_mode): Use TOLOWER instead of tolower and ISSPACE
-	instead of isspace.
-	(strcmp_iw_ordered): Use ISSPACE instead of isspace.
-	(string_to_core_addr): Use TOLOWER instead of tolower, ISXDIGIT
-	instead of isxdigit and ISDIGIT instead of isdigit.
-
-2020-05-22  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct type) <field>: New method.
-	(TYPE_FIELDS): Remove, replace all uses with either type::fields
-	or type::field.
-
-2020-05-22  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct type) <fields, set_fields>: New methods.
-	(TYPE_FIELDS): Use type::fields.  Change all call sites that
-	modify the propery to use type::set_fields instead.
-
-2020-05-22  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (TYPE_NFIELDS): Remove.  Change all cal sites to use
-	type::num_fields instead.
-
-2020-05-22  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct type) <num_fields, set_num_fields>: New
-	methods.
-	(TYPE_NFIELDS): Use type::num_fields.  Change all call sites
-	that modify the number of fields to use type::set_num_fields
-	instead.
-
-2020-05-22  Tom Tromey  <tromey@adacore.com>
-
-	* compile/compile-object-load.h (munmap_list_free): Don't
-	declare.
-
-2020-05-22  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* annotate.c (annotate_source_line): Update return type, add call
-	to update current symtab and line.
-	* annotate.h (annotate_source_line): Update return type, and
-	extend header comment.
-	* source.c (info_line_command): Check annotation_level before
-	calling annotate_source_line.
-	* stack.c (print_frame_info): If calling annotate_source_line
-	returns true, then don't print any other source line information.
-
-2020-05-21  Simon Marchi  <simon.marchi@efficios.com>
-
-	* lm32-tdep.c (lm32_register_reggroup_p): Fix condition.
-
-2020-05-21  Simon Marchi  <simon.marchi@efficios.com>
-
-	* coffread.c (patch_type): Remove NULL check before xfree.
-	* corefile.c (set_gnutarget): Likewise.
-	* cp-abi.c (set_cp_abi_as_auto_default): Likewise.
-	* exec.c (build_section_table): Likewise.
-	* remote.c (remote_target::pass_signals): Likewise.
-	* utils.c (n_spaces): Likewise.
-	* cli/cli-script.c (document_command): Likewise.
-	* i386-windows-tdep.c (core_process_module_section): Likewise.
-	* linux-fork.c (struct fork_info) <~fork_info>: Likewise.
-
-2020-05-20  Simon Marchi  <simon.marchi@efficios.com>
-
-	* symfile.c (reread_symbols): Clear objfile's section_offsets
-	vector and section indices, re-compute them by calling
-	sym_offsets.
-
-2020-05-20  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (bound_name, MAX_ADA_DIMENS): Remove.
-	(desc_one_bound, desc_index_type): Compute field name.
-
-2020-05-20  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25833
-	* dwarf2/read.c (dw2_map_matching_symbols): Handle .gdb_index.
-
-2020-05-20  Alan Modra  <amodra@gmail.com>
-
-	PR 25993
-	* solib-darwin.c (darwin_bfd_open): Don't strdup pathname for
-	bfd_set_filename.
-	* solib-aix.c (solib_aix_bfd_open): Use std::string for name
-	passed to bfd_set_filename.
-	* symfile-mem.c (add_vsyscall_page): Likewise for string
-	passed to symbol_file_add_from_memory.
-	(symbol_file_add_from_memory): Make name param a const char* and
-	don't strdup.
-
-2020-05-20  Alan Modra  <amodra@gmail.com>
-
-	* coff-pe-read.c (read_pe_exported_syms): Use bfd_get_filename
-	rather than accessing bfd->filename directly.
-	* dtrace-probe.c (dtrace_static_probe_ops::get_probes): Likewise,
-	and use bfd_section_name.
-	* dwarf2/frame.c (decode_frame_entry): Likewise.
-	* exec.c (exec_set_section_address): Likewise.
-	* solib-aix.c (solib_aix_bfd_open): Likewise.
-	* stap-probe.c (get_stap_base_address): Likewise.
-	* symfile.c (reread_symbols): Likewise.
-
-2020-05-19  Tom Tromey  <tromey@adacore.com>
-
-	* sparc64-tdep.c (adi_tag_fd): Update call to target_fileio_open.
-
-2020-05-19  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (quirk_rust_enum): Allocate enough fields.
-
-2020-05-19  Pedro Alves  <palves@redhat.com>
-
-	* NEWS (set exec-file-mismatch): Adjust entry.
-	* exec.c: Include "build-id.h".
-	(validate_exec_file): Try to match build IDs instead of filenames.
-	* gdb_bfd.c (struct gdb_bfd_open_closure): New.
-	(gdb_bfd_iovec_fileio_open): Adjust to use gdb_bfd_open_closure
-	and pass down 'warn_if_slow'.
-	(gdb_bfd_open): Add 'warn_if_slow' parameter.  Use
-	gdb_bfd_open_closure to pass it down.
-	* gdb_bfd.h (gdb_bfd_open): Add 'warn_if_slow' parameter.
-
-2020-05-19  Pedro Alves  <palves@redhat.com>
-
-	* gdb_bfd.c (gdb_bfd_iovec_fileio_open): Adjust.
-	* target.c (target_fileio_open_1): Rename to target_fileio_open
-	and make extern.  Use bool.
-	(target_fileio_open, target_fileio_open_warn_if_slow): Delete.
-	(target_fileio_read_alloc_1): Adjust.
-	* target.h (target_fileio_open): Add 'warn_if_slow' parameter.
-	(target_fileio_open_warn_if_slow): Delete declaration.
-
-2020-05-19  Pedro Alves  <palves@redhat.com>
-
-	* gdb_bfd.h: (gdb_bfd_open): Default to 'fd' parameter to -1.
-	Adjust all callers.
-
-2020-05-19  Yoshinori Sato  <ysato@users.sourceforge.jp>
-
-	* h8300-tdep.c (h8300_is_argument_spill): Change how we check
-	whether disp is negative.
-
-2020-05-19  Simon Marchi  <simon.marchi@efficios.com>
-
-	* symfile.h (struct symfile_segment_data)
-	<~symfile_segment_data>: Remove.
-	<segment_info>: Change to std::vector.
-	* symfile.c (default_symfile_segments): Update.
-	* elfread.c (elf_symfile_segments): Update.
-
-2020-05-19  Simon Marchi  <simon.marchi@efficios.com>
-
-	* symfile.h (struct symfile_segment_data) <struct segment>: New.
-	<segments>: New.
-	<segment_bases, segment_sizes>: Remove.
-	* symfile.c (default_symfile_segments): Update.
-	* elfread.c (elf_symfile_segments): Update.
-	* remote.c (remote_target::get_offsets): Update.
-	* solib-target.c (solib_target_relocate_section_addresses):
-	Update.
-
-2020-05-19  Simon Marchi  <simon.marchi@efficios.com>
-
-	* symfile.h (struct symfile_segment_data): Initialize fields.
-	<~symfile_segment_data>: Add.
-	(symfile_segment_data_up): New.
-	(struct sym_fns) <sym_segments>: Return a
-	symfile_segment_data_up.
-	(default_symfile_segments): Return a symfile_segment_data_up.
-	(free_symfile_segment_data): Remove.
-	(get_symfile_segment_data): Return a symfile_segment_data_up.
-	* symfile.c (default_symfile_segments): Likewise.
-	(get_symfile_segment_data): Likewise.
-	(free_symfile_segment_data): Remove.
-	(symfile_find_segment_sections): Update.
-	* elfread.c (elf_symfile_segments): Return a
-	symfile_segment_data_up.
-	* remote.c (remote_target::get_offsets): Update.
-	* solib-target.c (solib_target_relocate_section_addresses):
-	Update.
-	* symfile-debug.c (debug_sym_segments): Return a
-	symfile_segment_data_up.
-
-2020-05-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	PR build/25981
-	* i386-sol2-nat.c [PR_MODEL_NATIVE != PR_MODEL_LP64] (regmap):
-	Hardcode register numbers.
-
-	PR build/25981
-	* procfs.c [(__i386__ || __x86_64__) && sun] (proc_get_LDT_entry,
-	procfs_find_LDT_entry): Remove.
-	* procfs.h [(__i386__ || __x86_64__) && sun] (struct ssd,
-	procfs_find_LDT_entry): Remove.
-	* sol-thread.c [(__i386__ || __x86_64__) && sun] (ps_lgetLDT):
-	Remove.
-
-2020-05-17  Pedro Alves  <palves@redhat.com>
-	    Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Keno Fischer  <keno@juliacomputing.com>
-
-	PR gdb/25741
-	* breakpoint.c (build_target_condition_list): Update comments.
-	(build_target_command_list): Update comments and skip matching
-	locations.
-	(insert_bp_location): Move "set breakpoint auto-hw on" handling to
-	a separate function.  Simplify "set breakpoint auto-hw off"
-	handling.
-	(insert_breakpoints): Update comment.
-	(tracepoint_locations_match): New parameter.  For breakpoints,
-	compare location types too, if the caller wants to.
-	(handle_automatic_hardware_breakpoints): New functions.
-	(bp_location_is_less_than): Also sort by location type and
-	hardware breakpoint length.
-	(update_global_location_list): Handle "set breakpoint auto-hw on"
-	here.
-	(update_breakpoint_locations): Ask breakpoint_locations_match to
-	ignore location types.
-
-2020-05-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (TYPE_NAME): Remove.  Change all cal sites to use
-	type::name instead.
-
-2020-05-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct type) <name, set_name>: New methods.
-	(TYPE_CODE): Use type::name.  Change all call sites used to set
-	the name to use type::set_name instead.
-
-2020-05-16  Tom Tromey  <tom@tromey.com>
-
-	* top.c (quit_force): Update.
-	* infrun.c (handle_no_resumed): Update.
-	* top.h (all_uis): New function.
-	(ALL_UIS): Remove.
-
-2020-05-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* mips-linux-tdep.c (mips_linux_in_dynsym_stub): Fix condition.
-
-2020-05-16  Pedro Alves  <palves@redhat.com>
-
-	* ia64-linux-nat.c
-	(ia64_linux_nat_target) <enable_watchpoints_in_psr(ptid_t)>:
-	Declare method.
-	(enable_watchpoints_in_psr): Now a method of ia64_linux_nat_target.
-
-2020-05-15  Simon Marchi  <simon.marchi@efficios.com>
-
-	* sparc64-tdep.c (adi_stat_t): Remove typedef (leaving struct).
-	(sparc64_adi_info): Likewise.
-
-2020-05-15  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (lookup_language_this, lookup_symbol_aux): Use
-	block_objfile.
-	(lookup_objfile_from_block): Remove.
-	(lookup_symbol_in_block, lookup_symbol_in_static_block)
-	(lookup_global_symbol): Use block_objfile.
-	* symtab.h (lookup_objfile_from_block): Don't declare.
-	* printcmd.c (clear_dangling_display_expressions): Use
-	block_objfile.
-	* parse.c (operator_check_standard): Use block_objfile.
-
-2020-05-15  Tom Tromey  <tom@tromey.com>
-
-	* language.c (language_alloc_type_symbol): Set
-	SYMBOL_SECTION.
-	* symtab.c (initialize_objfile_symbol): Remove.
-	(allocate_symbol): Remove.
-	(allocate_template_symbol): Remove.
-	* dwarf2/read.c (fixup_go_packaging): Use "new".
-	(new_symbol): Use "new".
-	(read_variable): Don't call initialize_objfile_symbol.  Use
-	"new".
-	(read_func_scope): Use "new".
-	* xcoffread.c (process_xcoff_symbol): Don't call
-	initialize_objfile_symbol.
-	(SYMBOL_DUP): Remove.
-	* coffread.c (process_coff_symbol, coff_read_enum_type): Use
-	"new".
-	* symtab.h (allocate_symbol, initialize_objfile_symbol)
-	(allocate_template_symbol): Don't declare.
-	(struct symbol): Add copy constructor.  Change defaults.
-	* jit.c (finalize_symtab): Use "new".
-	* ctfread.c (ctf_add_enum_member_cb, new_symbol, ctf_add_var_cb):
-	Use "new".
-	* stabsread.c (patch_block_stabs, define_symbol, read_enum_type)
-	(common_block_end): Use "new".
-	* mdebugread.c (parse_symbol): Use "new".
-	(new_symbol): Likewise.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Mention changes to help and apropos.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* command.h (enum command_class): Improve comments, document
-	that class_alias is for user-defined aliases, give the class
-	name for each class, remove unused class_xdb.
-	* cli/cli-decode.c (add_com_alias): Document THECLASS intended usage.
-	* breakpoint.c (_initialize_breakpoint): Replace class_alias
-	by a precise class.
-	* infcmd.c (_initialize_infcmd): Likewise.
-	* reverse.c (_initialize_reverse): Likewise.
-	* stack.c (_initialize_stack): Likewise.
-	* symfile.c (_initialize_symfile): Likewise.
-	* tracepoint.c (_initialize_tracepoint): Likewise.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-decode.c (apropos_cmd): Produce output for aliases
-	when their aliased command is traversed.
-	(help_cmd): Add fput_command_names_styled call to
-	output command name and aliases when command has an alias.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-decode.h (help_cmd_list): Remove declaration.
-	* cli/cli-decode.c (help_cmd_list): Declare as static,
-	remove prefix argument, use bool for recurse arg, rework to show the aliases of
-	a command together with the command.
-	(fput_command_name_styled, fput_command_names_styled): New functions.
-	(print_help_for_command): Remove prefix arg, use bool for recurse arg, use
-	fput_command_name_styled.
-	(help_list, help_all): Update callers to remove prefix arg and use bool recurse.
-	* cli/cli-cmds.c (_initialize_cli_cmds): Update alias_command doc.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-setshow.h (cmd_show_list): Remove prefix argument.
-	* cli/cli-decode.c (do_show_prefix_cmd): Likewise.
-	* command.h (cmd_show_list): Likewise.
-	* dwarf2/index-cache.c (show_index_cache_command): Likewise.
-	* cli/cli-setshow.c (cmd_show_list): Use the prefix to produce the output.  Skip aliases.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* unittests/command-def-selftests.c (traverse_command_structure):
-	Verify all commands of a list have the same prefix command and
-	that only the top cmdlist commands have a null prefix.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-decode.c (lookup_cmd_for_prefix): Return the aliased command
-	as prefix, not one of its aliases.
-	(set_cmd_prefix): Remove.
-	(do_add_cmd): Centralize the setting of the prefix of a command, when
-	command is defined after its full chain of prefix commands.
-	(add_alias_cmd): Remove call to set_cmd_prefix, as do_add_cmd does it.
-	(add_setshow_cmd_full): Likewise.
-	(update_prefix_field_of_prefixed_commands): New function.
-	(add_prefix_cmd): Replace non working call to set_cmd_prefix by
-	update_prefix_field_of_prefixed_commands.
-	* gdb/remote-fileio.c (initialize_remote_fileio): Use the real
-	addresses of remote_set_cmdlist and remote_show_cmdlist given
-	as argument, not the address of an argument.
-	* gdb/remote-fileio.h (initialize_remote_fileio): Likewise.
-	* gdb/remote.c (_initialize_remote): Likewise.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-cmds.c (alias_command): Check for an existing alias
-	using lookup_cmd_composition, as valid_command_p is too strict
-	and forbids aliases that are the prefix of an existing alias
-	or command.
-	* cli/cli-decode.c (lookup_cmd_composition): Ensure a prefix
-	command is properly recognised as a valid command.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* unittests/help-doc-selftests.c: Rename to
-	unittests/command-def-selftests.c
-	* unittests/command-def-selftests.c (help_doc_tests): Update some
-	comments.
-	(command_structure_tests, traverse_command_structure): New namespace
-	and function.
-	(command_structure_invariants_tests): New function.
-	(_initialize_command_def_selftests) Renamed from
-	_initialize_help_doc_selftests, register command_structure_invariants
-	selftest.
-
-2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-cmds.c (_initialize_cli_cmds): Define 'info set' as
-	an alias of 'show'.
-
-2020-05-15  Joel Brobecker  <brobecker@adacore.com>
-
-	* ada-lang.h: (ada_is_gnat_encoded_fixed_point_type): Renames
-	ada_is_fixed_point_type.  Update all callers.
-	(gnat_encoded_fixed_point_delta): Renames ada_delta.  Update
-	all callers.
-	* ada-lang.c (gnat_encoded_fixed_type_info): Renames fixed_type_info.
-	Update all callers.
-	* ada-typeprint.c (print_gnat_encoded_fixed_point_type): Renames
-	print_fixed_point_type.  Update all callers.
-	* ada-valprint.c (ada_value_print_num): Replace call to
-	ada_is_fixed_point_type by ada_is_gnat_encoded_fixed_point_type.
-
-2020-05-14  Kevin Buettner  <kevinb@redhat.com>
-
-	* nat/linux-btrace.c (btrace_this_cpu): Add check for AMD
-	processors.
-	(cpu_supports_bts): Add CV_AMD case.
-
-2020-05-14  Laurent Morichetti  <Laurent.Morichetti@amd.com>
-	    Simon Marchi  <simon.marchi@efficios.com>
-
-	* infrun.c (stop_all_threads): Collect multiple wait events at
-	each pass.
-
-2020-05-14  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (TYPE_CODE): Remove.  Change all call sites to use
-	type::code instead.
-
-2020-05-14  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct type) <code, set_code>: New methods.
-	(TYPE_CODE): Use type::code.  Change all call sites used to set
-	the code to use type::set_code instead.
-
-2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-	    Tom de Vries  <tdevries@suse.de>
-	    Pedro Alves  <palves@redhat.com>
-
-	PR threads/25478
-	* infrun.c (stop_all_threads): Do NOT ignore
-	TARGET_WAITKIND_NO_RESUMED, TARGET_WAITKIND_THREAD_EXITED,
-	TARGET_WAITKIND_EXITED, TARGET_WAITKIND_SIGNALLED wait statuses
-	received.
-	(handle_no_resumed): Remove code handling a live inferior with no
-	threads.
-	* remote.c (has_single_non_exited_thread): New.
-	(remote_target::update_thread_list): Do not delete a thread if is
-	the last thread of the process.
-	* thread.c (thread_select): Call delete_exited_threads instead of
-	prune_threads.
-
-2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* infrun.c (stop_all_threads): Enable/disable thread events of all
-	targets.  Move a debug message denoting the end of the function
-	into the SCOPED_EXIT block.
-
-2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* process-stratum-target.h: Include <set>.
-	(all_non_exited_process_targets, switch_to_target_no_thread): New
-	function declarations.
-	* process-stratum-target.c (all_non_exited_process_targets)
-	(switch_to_target_no_thread): New function implementations.
-
-2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* infrun.c (handle_inferior_event): Extract out a piece of code
-	into...
-	(mark_non_executing_threads): ...this new function.
-
-2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* infrun.c (resume_1): Move a 'regcache_read_pc' call down to first
-	use.
-
-2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* regcache.c (regcache_read_pc_protected): New function
-	implementation that returns 0 if the PC cannot read via
-	'regcache_read_pc'.
-	* infrun.c (proceed): Call 'regcache_read_pc_protected'
-	instead of 'regcache_read_pc'.
-	(keep_going_pass_signal): Ditto.
-
-2020-05-13  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (align_value): Remove.
-	(ada_template_to_fixed_record_type_1): Use align_up.
-
-2020-05-13  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* async-event.c: Update the copyright year.
-	* async-event.h: Update the copyright year.
-
-2020-05-12  Simon Marchi  <simon.marchi@efficios.com>
-
-	* objfiles.h (is_addr_in_objfile,
-	shared_objfile_contains_address_p): Return bool.
-	* objfile.c (is_addr_in_objfile,
-	shared_objfile_contains_address_p): Return bool.
-
-2020-05-11  Tom Tromey  <tromey@adacore.com>
-
-	* cli/cli-cmds.c (info_command): Restore.
-	(_initialize_cli_cmds): Use add_prefix_command for "info".
-	* gdb-gdb.gdb.in: Restore breakpoint on info_command.
-
-2020-05-11  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_value_primitive_field): Now public.
-	* ada-lang.h (ada_value_primitive_field): Declare.
-	* ada-valprint.c (print_field_values): Use
-	ada_value_primitive_field for wrapper fields.
-
-2020-05-11  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2/index-write.c (debug_names::psymbol_tag): Handle
-	MODULE_DOMAIN.
-
-2020-05-11  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25941
-	* dwarf2/read.c (create_cus_from_debug_names_list): Initialize CUs
-	with length 0, if not gdb-produced.
-	(cutu_reader::cutu_reader): Set CU length to actual length if 0.
-
-2020-05-09  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/25955
-	* break-catch-throw.c (check_status_exception_catchpoint): Fix name
-	calculation.
-
-2020-05-09  Tom Tromey  <tom@tromey.com>
-
-	* top.c (server_command): Now bool.
-	* top.h (server_command): Now bool.
-
-2020-05-08  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (read_lexical_block_scope): Don't process a DIE
-	already being processed.
-
-2020-05-08  Tom Tromey  <tom@tromey.com>
-
-	* printcmd.c (struct display) <next>: Remove.
-	<display>: New constructor.
-	<exp_string>: Now a std::string.
-	<enabled_p>: Now a bool.
-	(display_number): Move definition earlier.
-	(displays): Rename from display_chain.  Now a std::vector.
-	(ALL_DISPLAYS, ALL_DISPLAYS_SAFE): Remove.
-	(display_command): Update.
-	(do_one_display, disable_display)
-	(enable_disable_display_command, do_enable_disable_display):
-	Update.
-	(free_display): Remove.
-	(clear_displays): Rewrite.
-	(delete_display): Update.
-	(map_display_numbers): Use function_view.  Remove "data"
-	parameter.  Update.
-	(do_delete_display): Remove.
-	(undisplay_command): Update.
-	(do_one_display, do_displays, disable_display)
-	(info_display_command): Update.
-	(do_enable_disable_display): Remove.
-	(enable_disable_display_command)
-	(clear_dangling_display_expressions): Update.
-
-2020-05-08  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (set_symbol_cache_size)
-	(maintenance_print_symbol_cache, maintenance_flush_symbol_cache)
-	(maintenance_print_symbol_cache_statistics): Update.
-	* symmisc.c (print_symbol_bcache_statistics)
-	(print_objfile_statistics, maintenance_print_objfiles)
-	(maintenance_info_symtabs, maintenance_check_symtabs)
-	(maintenance_expand_symtabs, maintenance_info_line_tables):
-	Update.
-	* symfile-debug.c (set_debug_symfile): Update.
-	* source.c (forget_cached_source_info): Update.
-	* python/python.c (gdbpy_progspaces): Update.
-	* psymtab.c (maintenance_info_psymtabs): Update.
-	* probe.c (parse_probes): Update.
-	* linespec.c (iterate_over_all_matching_symtabs)
-	(collect_symtabs_from_filename, search_minsyms_for_name): Update.
-	* guile/scm-progspace.c (gdbscm_progspaces): Update.
-	* exec.c (exec_target::close): Update.
-	* ada-tasks.c (ada_tasks_new_objfile_observer): Update.
-	* breakpoint.c (print_one_breakpoint_location)
-	(create_longjmp_master_breakpoint)
-	(create_std_terminate_master_breakpoint): Update.
-	* progspace.c (program_spaces): Now a std::vector.
-	(maybe_new_address_space): Update.
-	(add_program_space): Remove.
-	(program_space::program_space): Update.
-	(remove_program_space): Update.
-	(number_of_program_spaces): Remove.
-	(print_program_space, update_address_spaces): Update.
-	* progspace.h (program_spaces): Change type.
-	(ALL_PSPACES): Remove.
-	(number_of_program_spaces): Don't declare.
-	(struct program_space) <next>: Remove.
-
-2020-05-08  Tom Tromey  <tom@tromey.com>
-
-	* mi/mi-cmd-file.c (mi_cmd_file_list_shared_libraries): Update.
-	* solib-svr4.c (svr4_fetch_objfile_link_map): Update.
-	(enable_break): Update.
-	* solib-frv.c (frv_fdpic_find_global_pointer): Update.
-	(frv_fdpic_find_canonical_descriptor): Update.
-	(frv_fetch_objfile_link_map): Update.
-	* progspace.c (program_space::free_all_objfiles): Update.
-	(program_space::solibs): New method.
-	* progspace.h (struct program_space) <solibs>: New method.
-	* solist.h (master_so_list): Don't declare.
-	(ALL_SO_LIBS): Remove.
-	* solib.h (so_list_head): Remove.
-	(update_solib_list): Update comment.
-	* solib.c (master_so_list): Remove.
-	(solib_used, update_solib_list, solib_add)
-	(info_sharedlibrary_command, clear_solib)
-	(reload_shared_libraries_1, remove_user_added_objfile): Update.
-
-2020-05-08  Tom Tromey  <tom@tromey.com>
-
-	* extension.c (extension_languages): Now a std::array.
-	(ALL_EXTENSION_LANGUAGES): Remove.
-	(get_ext_lang_defn, get_ext_lang_of_file)
-	(eval_ext_lang_from_control_command): Update.
-	(finish_ext_lang_initialization)
-	(auto_load_ext_lang_scripts_for_objfile)
-	(ext_lang_type_printers::ext_lang_type_printers)
-	(apply_ext_lang_type_printers)
-	(ext_lang_type_printers::~ext_lang_type_printers)
-	(apply_ext_lang_val_pretty_printer, apply_ext_lang_frame_filter)
-	(preserve_ext_lang_values, get_breakpoint_cond_ext_lang)
-	(breakpoint_ext_lang_cond_says_stop, check_quit_flag)
-	(get_matching_xmethod_workers, ext_lang_colorize)
-	(ext_lang_before_prompt): Update.
-	(ALL_ENABLED_EXTENSION_LANGUAGES): Remove.
-
-2020-05-08  Tom Tromey  <tom@tromey.com>
-
-	* symtab.h (class demangle_result_storage) <set_malloc_ptr>: New
-	overload.
-	<swap_string, m_string>: Remove.
-	* symtab.c (demangle_for_lookup, completion_list_add_symbol):
-	Update.
-	* stabsread.c (define_symbol, read_type): Update.
-	* linespec.c (find_linespec_symbols): Update.
-	* gnu-v3-abi.c (gnuv3_get_typeid): Update.
-	* dwarf2/read.c (dwarf2_canonicalize_name): Update.
-	* dbxread.c (read_dbx_symtab): Update.
-	* cp-support.h (cp_canonicalize_string_full)
-	(cp_canonicalize_string, cp_canonicalize_string_no_typedefs):
-	Return unique_xmalloc_ptr.
-	* cp-support.c (inspect_type): Update.
-	(cp_canonicalize_string_full): Return unique_xmalloc_ptr.
-	(cp_canonicalize_string_no_typedefs, cp_canonicalize_string):
-	Likewise.
-	* c-typeprint.c (print_name_maybe_canonical): Update.
-	* break-catch-throw.c (check_status_exception_catchpoint):
-	Update.
-
-2020-05-08  Tom de Vries  <tdevries@suse.de>
-
-	* infrun.c (follow_fork): Copy current_line and current_symtab to
-	child thread.
-
-2020-05-07  Simon Marchi  <simon.marchi@efficios.com>
-
-	* async-event.c (struct async_signal_handler, struct
-	async_event_handler): Reformat, remove typedef.
-
-2020-05-07  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (TYPE_DYN_PROP_LIST): Remove.  Update all users
-	access thistype->main_type->dyn_prop_list directly.
-
-2020-05-07  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct type) <remove_dyn_prop>: New method.
-	(remove_dyn_prop): Remove.  Update all users to use
-	type::remove_dyn_prop.
-	* gdbtypes.c (remove_dyn_prop): Rename to...
-	(type::remove_dyn_prop): ... this.
-
-2020-05-07  Simon Marchi via Gdb-patches  <gdb-patches@sourceware.org>
-
-	* gdbtypes.h (struct type) <add_dyn_prop>: New method.
-	(add_dyn_prop): Remove.  Update all users to use
-	type::add_dyn_prop.
-	* gdbtypes.c (add_dyn_prop): Rename to...
-	(type::add_dyn_prop): ... this.
-
-2020-05-07  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct type) <get_dyn_prop>: New method.
-	(get_dyn_prop): Remove.  Update all users to use
-	type::dyn_prop.
-	* gdbtypes.c (get_dyn_prop): Rename to...
-	(type::dyn_prop): ... this.
-
-2020-05-06  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct main_type) <flag_static>: Remove.
-
-2020-05-06  Simon Marchi  <simon.marchi@efficios.com>
-
-	* amd64-tdep.c (amd64_analyze_prologue): Check for `endbr64`
-	instruction, skip it if it's there.
-
-2020-05-05  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (struct main_type) <flag_incomplete>: Remove.
-
-2020-05-04  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbtypes.h (TYPE_INCOMPLETE): Remove.
-	* gdbtypes.c (recursive_dump_type): Remove use of
-	TYPE_INCOMPLETE.
-
-2020-05-03  Tom Tromey  <tom@tromey.com>
-
-	* breakpoint.c (catch_command, tcatch_command): Remove.
-	(_initialize_breakpoint): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	(set_breakpoint_cmd, show_breakpoint_cmd): Remove
-	* utils.c (set_internal_problem_cmd, show_internal_problem_cmd):
-	Remove.
-	(add_internal_problem_command): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* mips-tdep.c (set_mipsfpu_command): Remove.
-	(_initialize_mips_tdep): Use add_basic_prefix_cmd.
-	* dwarf2/index-cache.c (set_index_cache_command): Remove.
-	(_initialize_index_cache): Use add_basic_prefix_cmd.
-	* memattr.c (dummy_cmd): Remove.
-	(_initialize_mem): Use add_basic_prefix_cmd, add_show_prefix_cmd.
-	* tui/tui-win.c (set_tui_cmd, show_tui_cmd): Remove.
-	(_initialize_tui_win): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* cli/cli-logging.c (set_logging_command): Remove.
-	(_initialize_cli_logging): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	(show_logging_command): Remove.
-	* target.c (target_command): Remove.
-	(add_target): Use add_basic_prefix_cmd.
-
-2020-05-02  Hannes Domani  <ssbssa@yahoo.de>
-
-	* gdbtypes.h (enum dynamic_prop_node_kind): Fix typo.
-
-2020-05-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* gdb-gdb.gdb-in: Remove breakpoint on disappeared function
-	info_command.
-
-2020-04-30  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c (nbsd_enable_proc_events)
-	(nbsd_nat_target::post_startup_inferior): Add.
-	(nbsd_nat_target::post_attach): Call `nbsd_enable_proc_events'.
-	(nbsd_nat_target::update_thread_list): Rewrite.
-	(nbsd_nat_target::wait): Handle "PTRACE_LWP_EXIT" and
-	"PTRACE_LWP_CREATE".
-	* nbsd-nat.h (nbsd_nat_target::post_startup_inferior): Add.
-
-2020-04-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* stack.c (_initialize_stack): Remove duplicated creation
-	of "frame" command and "f" alias.
-
-2020-04-30  Hannes Domani  <ssbssa@yahoo.de>
-
-	PR gdb/18706
-	* gdbtypes.c (check_typedef): Calculate size of array of
-	stubbed type.
-
-2020-04-30  Hannes Domani  <ssbssa@yahoo.de>
-
-	PR gdb/15559
-	* i386-tdep.c (i386_push_dummy_call): Call
-	i386_thiscall_push_dummy_call.
-	(i386_thiscall_push_dummy_call): New function.
-	* i386-tdep.h (i386_thiscall_push_dummy_call): Declare.
-	* i386-windows-tdep.c (i386_windows_push_dummy_call): New function.
-	(i386_windows_init_abi): Call set_gdbarch_push_dummy_call.
-
-2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh (do_read): Add shellcheck disable directive for
-	warning SC2162.
-
-2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh: Use ${foo:-} where shellcheck would report a
-	"referenced but not assigned" warning.
-
-2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh: Remove code that sets fallbackdefault.
-
-2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh: Use shell operators && and || instead of
-	-a and -o.
-
-2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh: Use $(...) instead of `...`.
-
-2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh: Use double quotes around variables.
-
-2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh: Use %s with printf, instead of variables in the
-	format string.
-
-2020-04-29  Tom Tromey  <tromey@adacore.com>
-
-	PR ada/25875:
-	* dwarf2/read.c (update_enumeration_type_from_children): Compute
-	type fields here.
-	(read_enumeration_type): Call
-	update_enumeration_type_from_children later.  Update comments.
-	(process_enumeration_scope): Don't create type fields.
-
-2020-04-29  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-tdep.c: Include "xml-syscall.h".
-	(nbsd_init_abi): Call `set_xml_syscall_file_name'.
-
-2020-04-29  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c: Include "sys/wait.h".
-	(nbsd_resume, nbsd_nat_target::resume, nbsd_wait)
-	(nbsd_nat_target::wait, nbsd_nat_target::insert_exec_catchpoint)
-	(nbsd_nat_target::remove_exec_catchpoint)
-	(nbsd_nat_target::set_syscall_catchpoint): Add.
-	* nbsd-nat.h (nbsd_nat_target::resume, nbsd_nat_target::wait)
-	(nbsd_nat_target::insert_exec_catchpoint)
-	(nbsd_nat_target::remove_exec_catchpoint)
-	(nbsd_nat_target::set_syscall_catchpoint): Add.
-	* nbsd-tdep.c (nbsd_get_syscall_number): Add.
-	(nbsd_init_abi): Call `set_gdbarch_get_syscall_number' and pass
-	`nbsd_get_syscall_number'.
-
-2020-04-29  Tom Tromey  <tom@tromey.com>
-
-	* stack.c (print_block_frame_labels): Remove.
-
-2020-04-29  Hannes Domani  <ssbssa@yahoo.de>
-
-	PR gdb/17320
-	* ada-valprint.c (val_print_packed_array_elements): Move array
-	end bracket to new line.
-	(ada_val_print_string): Remove extra spaces before first array
-	element.
-	* c-valprint.c (c_value_print_array): Likewise.
-	* m2-valprint.c (m2_print_array_contents): Likewise.
-	(m2_value_print_inner): Likewise.
-	* p-valprint.c (pascal_value_print_inner): Likewise.
-	* valprint.c (generic_val_print_array): Likewise.
-	(value_print_array_elements): Move first array element and array
-	end bracket to new line.
-
-2020-04-29  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25889
-	* linespec.c (find_method): Fix ix calculation.
-
-2020-04-28  Kamil Rytarowski  <n54@gmx.com>
-
-	* syscalls/update-netbsd.sh: New file.
-	* syscalls/netbsd.xml: Regenerate.
-	* data-directory/Makefile.in: Register `netbsd.xml' in
-	`SYSCALLS_FILES'.
-
-2020-04-28  Simon Marchi  <simon.marchi@efficios.com>
-
-	* syscalls/update-freebsd.sh: Add double quotes.
-
-2020-04-28  Tom Tromey  <tom@tromey.com>
-
-	* NEWS: Update.
-	* python/py-cmd.c (gdbpy_initialize_commands): Add COMMAND_TUI.
-	(cmdpy_init): Allow class_tui.
-
-2020-04-28 Mark Williams <mark@myosotissp.com>
-
-	PR gdb/24480
-	* dwarf2read.c: Add missing assingments to list_in_scope when
-	start_symtab was already called.
-
-2020-04-28  Simon Marchi  <simon.marchi@efficios.com>
-
-	PR gdb/25881
-	* dwarf2/read.c (offset_map_type): Use
-	gdb:hash_enum<sect_offset> as hash function.
-
-2020-04-28  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2/read.c (process_structure_scope): Add symbol for struct decl
-	with DW_AT_signature.
-
-2020-04-27  Simon Marchi  <simon.marchi@efficios.com>
-
-	* configure.ac: Remove check for fs_base/gs_base in
-	user_regs_struct.
-	* configure: Re-generate.
-	* config.in: Re-generate.
-	* amd64-nat.c (amd64_native_gregset_reg_offset): Adjust.
-	* amd64-linux-nat.c (amd64_linux_nat_target::fetch_registers,
-	amd64_linux_nat_target::store_registers, ps_get_thread_area, ): Adjust.
-
-2020-04-27  Luis Machado  <luis.machado@linaro.org>
-
-	* dwarf2/frame-tailcall.c (dwarf2_tailcall_sniffer_first): Handle
-	problematic inline frame unwinding situation.
-	* frame.c (frame_id_computed_p): New function.
-	* frame.h (frame_id_computed_p): New prototype.
-
-2020-04-26  Tom Tromey  <tom@tromey.com>
-
-	* command.h (enum command_class) <class_pseudo>: Remove.
-
-2020-04-26  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* cli/cli-decode.c (lookup_cmd_composition): Fix comments
-	and whitespace.
-
-2020-04-25  Kamil Rytarowski  <n54@gmx.com>
-
-	* inf-ptrace.c (inf_ptrace_target::wait): Remove
-	`PT_GET_PROCESS_STATE' block.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	* symtab.h (symbol_get_demangled_name): Don't declare.
-	* symtab.c (symbol_get_demangled_name): Remove.
-	(general_symbol_info::natural_name)
-	(general_symbol_info::demangled_name): Update.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	PR rust/25025:
-	* dwarf2/read.c (dwarf2_physname): Do not demangle for Rust.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	PR symtab/12707:
-	* dwarf2/read.c (add_partial_symbol): Use the linkage name if it
-	exists.
-	(new_symbol): Likewise.
-	* compile/compile-object-load.c (get_out_value_type): Use
-	symbol_matches_search_name.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (add_partial_symbol): Do not call
-	compute_and_set_names.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (add_partial_symbol): Use new add_psymbol_to_list
-	overload.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	* psymtab.c (add_psymbol_to_bcache): Simplify calling convention.
-	(add_psymbol_to_list): New overload.  Make old overload call new
-	one.
-	* psympriv.h (add_psymbol_to_list): New overload.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (partial_die_info::read) <case
-	DW_AT_linkage_name>: Use value_as_string.
-	(dwarf2_string_attr): Use value_as_string.
-	* dwarf2/attribute.h (struct attribute) <value_as_string>: Declare
-	method.
-	* dwarf2/attribute.c (attribute::value_as_string): New method.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (general_symbol_info::natural_name)
-	(general_symbol_info::demangled_name): Check for language_rust.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (dw2_linkage_name): Move Rust "{" hack here...
-	(dwarf2_physname): ... from here.
-	(partial_die_info::read): Add Rust "{" hack.
-
-2020-04-24  Tom Tromey  <tom@tromey.com>
-
-	* symtab.h (struct general_symbol_info) <set_demangled_name>: New
-	method.
-	(symbol_set_demangled_name): Don't declare.
-	* symtab.c (general_symbol_info::set_demangled_name): Rename from
-	symbol_set_demangled_name.
-	(general_symbol_info::set_language)
-	(general_symbol_info::compute_and_set_names): Update.
-	* minsyms.c (minimal_symbol_reader::install): Update.
-	* dwarf2/read.c (new_symbol): Update.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	PR python/23662:
-	* python/py-type.c (convert_field): Handle
-	FIELD_LOC_KIND_DWARF_BLOCK.
-	(typy_get_sizeof): Handle TYPE_HAS_DYNAMIC_LENGTH.
-	(typy_get_dynamic): Nw function.
-	(type_object_getset): Add "dynamic".
-	* NEWS: Add entry.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* ada-typeprint.c (print_choices, print_variant_part)
-	(print_record_field_types_dynamic): New functions.
-	(print_record_field_types): Use print_record_field_types_dynamic.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (handle_data_member_location): New overload.
-	(dwarf2_add_field): Use it.
-	(decode_locdesc): Add "computed" parameter.  Update comment.
-	* gdbtypes.c (is_dynamic_type_internal): Also look for
-	FIELD_LOC_KIND_DWARF_BLOCK.
-	(resolve_dynamic_struct): Handle FIELD_LOC_KIND_DWARF_BLOCK.
-	* gdbtypes.c (is_dynamic_type_internal): Add special case for C++
-	virtual base classes.
-	* gnu-v3-abi.c (gnuv3_baseclass_offset): Handle
-	FIELD_LOC_KIND_DWARF_BLOCK.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (read_structure_type): Handle dynamic length.
-	* gdbtypes.c (is_dynamic_type_internal): Check
-	TYPE_HAS_DYNAMIC_LENGTH.
-	(resolve_dynamic_type_internal): Use TYPE_DYNAMIC_LENGTH.
-	* gdbtypes.h (TYPE_HAS_DYNAMIC_LENGTH, TYPE_DYNAMIC_LENGTH):
-	New macros.
-	(enum dynamic_prop_node_kind) <DYN_PROP_BYTE_SIZE>: New
-	constant.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (struct variant_field): Rewrite.
-	(struct variant_part_builder): New.
-	(struct nextfield): Remove "variant" field.  Add "offset".
-	(struct field_info): Add "current_variant_part" and
-	"variant_parts".
-	(alloc_discriminant_info): Remove.
-	(alloc_rust_variant): New function.
-	(quirk_rust_enum): Update.
-	(dwarf2_add_field): Set "offset" member.  Don't handle
-	DW_TAG_variant_part.
-	(offset_map_type): New typedef.
-	(convert_variant_range, create_one_variant)
-	(create_one_variant_part, create_variant_parts)
-	(add_variant_property): New functions.
-	(dwarf2_attach_fields_to_type): Call add_variant_property.
-	(read_structure_type): Don't handle DW_TAG_variant_part.
-	(handle_variant_part, handle_variant): New functions.
-	(handle_struct_member_die): Use them.
-	(process_structure_scope): Don't handle variant parts.
-	* gdbtypes.h (TYPE_FLAG_DISCRIMINATED_UNION): Remove.
-	(struct discriminant_info): Remove.
-	(enum dynamic_prop_node_kind) <DYN_PROP_DISCRIMINATED>: Remove.
-	(struct main_type) <flag_discriminated_union>: Remove.
-	* rust-lang.c (rust_enum_p, rust_empty_enum_p): Rewrite.
-	(rust_enum_variant): Return int.  Remove "contents".  Rewrite.
-	(rust_print_enum, rust_print_struct_def, rust_evaluate_subexp):
-	Update.
-	* valops.c (value_union_variant): Remove.
-	* value.h (value_union_variant): Don't declare.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (ada_discrete_type_high_bound, ada_discrete_type_low)
-	(ada_value_primitive_packed_val): Update.
-	* ada-valprint.c (ada_value_print_1): Update.
-	* dwarf2/loc.c (evaluate_for_locexpr_baton): New struct.
-	(dwarf2_locexpr_baton_eval): Take a property_addr_info rather than
-	just an address.  Use evaluate_for_locexpr_baton.
-	(dwarf2_evaluate_property): Update.
-	* dwarf2/loc.h (struct property_addr_info) <valaddr>: Now an
-	array_view.
-	* findvar.c (default_read_var_value): Update.
-	* gdbtypes.c (compute_variant_fields_inner)
-	(resolve_dynamic_type_internal): Update.
-	(resolve_dynamic_type): Change type of valaddr parameter.
-	* gdbtypes.h (resolve_dynamic_type): Update.
-	* valarith.c (value_subscripted_rvalue): Update.
-	* value.c (value_from_contents_and_address): Update.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/loc.c (dwarf2_locexpr_baton_eval): Add
-	"push_initial_value" parameter.
-	(dwarf2_evaluate_property): Likewise.
-	* dwarf2/loc.h (dwarf2_evaluate_property): Update.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* gdbtypes.c (is_dynamic_type_internal): Check for variant parts.
-	(variant::matches, compute_variant_fields_recurse)
-	(compute_variant_fields_inner, compute_variant_fields): New
-	functions.
-	(resolve_dynamic_struct): Check for DYN_PROP_VARIANT_PARTS.
-	Use resolved_type after type is made.
-	(operator==): Add new cases.
-	* gdbtypes.h (TYPE_HAS_VARIANT_PARTS): New macro.
-	(struct discriminant_range, struct variant, struct variant_part):
-	New.
-	(union dynamic_prop_data) <variant_parts, original_type>: New
-	members.
-	(enum dynamic_prop_node_kind) <DYN_PROP_VARIANT_PARTS>: New constant.
-	(enum dynamic_prop_kind) <PROP_TYPE, PROP_VARIANT_PARTS>: New
-	constants.
-	* value.c (unpack_bits_as_long): Now public.
-	* value.h (unpack_bits_as_long): Declare.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* rs6000-tdep.c (struct ppc_variant): Rename from "variant".
-	(variants, find_variant_by_arch, rs6000_gdbarch_init): Update.
-
-2020-04-24  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-tdep.c (exception_values): Add WOW64 exception numbers.
-
-2020-04-24  Kamil Rytarowski  <n54@gmx.com>
-
-	* inf-ptrace.h (follow_fork, insert_fork_catchpoint)
-	(remove_fork_catchpoint, post_startup_inferior)
-	(post_attach): Move...
-	* obsd-nat.h (follow_fork, insert_fork_catchpoint)
-	(remove_fork_catchpoint, post_startup_inferior)
-	(post_attach): ...here.
-	* inf-ptrace.c (follow_fork, insert_fork_catchpoint)
-	(remove_fork_catchpoint, post_startup_inferior)
-	(post_attach): Move...
-	* obsd-nat.c (follow_fork, insert_fork_catchpoint)
-	(remove_fork_catchpoint, post_startup_inferior)
-	(post_attach): ...here.
-
-2020-04-24  Tom Tromey  <tromey@adacore.com>
-
-	* nat/windows-nat.h (struct windows_thread_info)
-	<pc_adjusted>: New member.
-	* windows-nat.c (windows_fetch_one_register): Check
-	pc_adjusted.
-	(windows_nat_target::get_windows_debug_event)
-	(windows_nat_target::wait): Set pc_adjusted.
-
-2020-04-24  Tom de Vries  <tdevries@suse.de>
-
-	* contrib/cc-with-tweaks.sh: Remove <exec>.gdb-index file handling.
-	Run gdb-add-index inside temp dir.
-
-2020-04-23  Tom Tromey  <tromey@adacore.com>
-
-	* windows-tdep.c (is_linked_with_cygwin_dll): Always update "iter"
-	in loop.
-
-2020-04-23  Luis Machado  <luis.machado@linaro.org>
-
-	* dwarf2/frame-tailcall.c (dwarf2_tailcall_sniffer_first): Use
-	get_frame_register instead of gdbarch_unwind_pc.
-
-2020-04-23  Tom de Vries  <tdevries@suse.de>
-
-	* symtab.c (lookup_global_symbol): Prefer def over decl.
-
-2020-04-23  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25807
-	* block.c (best_symbol, better_symbol): Promote to external.
-	* block.h (best_symbol, better_symbol): Declare.
-	* symtab.c (lookup_symbol_in_objfile_symtabs): Prefer def over
-	decl.
-
-2020-04-23  Tom Tromey  <tromey@adacore.com>
-
-	PR ada/25837:
-	* dwarf2/read.c (dw2_expand_symtabs_matching_symbol): Store a
-	"const char *", not a "const std::string &".
-	<name_and_matcher::operator==>: Update.
-	* unittests/lookup_name_info-selftests.c: Change type of
-	"result".
-
-2020-04-23  Tom Tromey  <tom@tromey.com>
-
-	* inferior.h (iterate_over_inferiors): Don't declare.
-	* inferior.c (iterate_over_inferiors): Remove.
-	* darwin-nat.c (find_inferior_task_it, find_inferior_pid_it):
-	Remove.
-	(darwin_find_inferior_by_task, darwin_find_inferior_by_pid): Don't
-	use iterate_over_inferiors.
-	(darwin_resume_inferior_it)
-	(struct resume_inferior_threads_param)
-	(darwin_resume_inferior_threads_it): Remove.
-	(darwin_nat_target::resume): Don't use iterate_over_inferiors.
-
-2020-04-23  Tom de Vries  <tdevries@suse.de>
-
-	* blockframe.c (find_pc_partial_function): Use
-	find_pc_sect_compunit_symtab rather than
-	objfile->sf->qf->find_pc_sect_compunit_symtab.
-
-2020-04-22  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25764
-	* dwarf2/read.c (scan_partial_symbols): Allow external variable decls
-	in psymtabs.
-
-2020-04-22  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25801
-	* psymtab.c (psym_map_symtabs_matching_filename): Don't skip shared
-	symtabs.
-
-2020-04-22  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25700
-	* dwarf2/read.c (dwarf2_build_psymtabs_hard): Don't create psymtab for
-	CU if already created.
-
-2020-04-21  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* infrun.c (displaced_step_fixup): Switch to the event_thread
-	before calling displaced_step_restore, not after.
-
-2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>
-
-	* record-btrace.c (record_btrace_enable_warn): Ignore thread if
-	its inferior is not recorded by us.
-	(record_btrace_target_open): Replace call to
-	all_non_exited_threads () with call to current_inferior
-	()->non_exited_threads ().
-	(record_btrace_target::stop_recording): Likewise.
-	(record_btrace_target::close): Likewise.
-	(record_btrace_target::wait): Likewise.
-	(record_btrace_target::record_stop_replaying): Likewise.
-
-2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>
-
-	* btrace.c (btrace_enable): Throw an error on double enables and
-	when enabling recording fails.
-	(btrace_disable): Throw an error if the thread is not recorded.
-
-2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>
-
-	* record-btrace.c (record_btrace_target::fetch_registers): Forward
-	request if we do not have a thread_info.
-
-2020-04-21  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/25471
-	* thread.c
-	(scoped_restore_current_thread::scoped_restore_current_thread): Catch
-	exception in get_frame_id.
-
-2020-04-20  Tom Tromey  <tromey@adacore.com>
-
-	* python/python.c (struct gdbpy_event): Mark move constructor as
-	noexcept.
-	* python/py-tui.c (class gdbpy_tui_window_maker): Mark move
-	constructor as noexcept.
-	* completer.h (struct completion_result): Mark move constructor as
-	noexcept.
-	* completer.c (completion_result::completion_result): Use
-	initialization style.  Don't call reset_match_list.
-
-2020-04-20  Mihails Strasuns  <mihails.strasuns@intel.com>
-
-	* MAINTAINERS (Write After Approval): Add myself.
-
-2020-04-18  Tom Tromey  <tom@tromey.com>
-
-	* windows-tdep.c (init_w32_command_list)
-	(w32_prefix_command_valid): Restore.
-	(_initialize_windows_tdep): Call init_w32_command_list.
-
-2020-04-18  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (enter_line_range, scan_xcoff_symtab): Update.
-	* value.c (value_fn_field): Update.
-	* valops.c (find_function_in_inferior)
-	(value_allocate_space_in_inferior): Update.
-	* tui/tui-winsource.c (tui_update_source_windows_with_line):
-	Update.
-	* tui/tui-source.c (tui_source_window::set_contents): Update.
-	* symtab.c (lookup_global_or_static_symbol)
-	(find_function_start_sal_1, skip_prologue_sal)
-	(print_msymbol_info, find_gnu_ifunc, symbol_arch): Update.
-	* symmisc.c (dump_msymbols, dump_symtab_1)
-	(maintenance_print_one_line_table): Update.
-	* symfile.c (init_entry_point_info, section_is_mapped)
-	(list_overlays_command, simple_read_overlay_table)
-	(simple_overlay_update_1): Update.
-	* stap-probe.c (handle_stap_probe): Update.
-	* stabsread.c (dbx_init_float_type, define_symbol)
-	(read_one_struct_field, read_enum_type, read_range_type): Update.
-	* source.c (info_line_command): Update.
-	* python/python.c (gdbpy_source_objfile_script)
-	(gdbpy_execute_objfile_script): Update.
-	* python/py-type.c (save_objfile_types): Update.
-	* python/py-objfile.c (py_free_objfile): Update.
-	* python/py-inferior.c (python_new_objfile): Update.
-	* psymtab.c (psym_find_pc_sect_compunit_symtab, dump_psymtab)
-	(dump_psymtab_addrmap_1, maintenance_info_psymtabs)
-	(maintenance_check_psymtabs): Update.
-	* printcmd.c (info_address_command): Update.
-	* objfiles.h (struct objfile) <arch>: New method, from
-	get_objfile_arch.
-	(get_objfile_arch): Don't declare.
-	* objfiles.c (get_objfile_arch): Remove.
-	(filter_overlapping_sections): Update.
-	* minsyms.c (msymbol_is_function): Update.
-	* mi/mi-symbol-cmds.c (mi_cmd_symbol_list_lines)
-	(output_nondebug_symbol): Update.
-	* mdebugread.c (parse_symbol, basic_type, parse_partial_symbols)
-	(mdebug_expand_psymtab): Update.
-	* machoread.c (macho_add_oso_symfile): Update.
-	* linux-tdep.c (linux_infcall_mmap, linux_infcall_munmap):
-	Update.
-	* linux-fork.c (checkpoint_command): Update.
-	* linespec.c (convert_linespec_to_sals): Update.
-	* jit.c (finalize_symtab): Update.
-	* infrun.c (insert_exception_resume_from_probe): Update.
-	* ia64-tdep.c (ia64_find_unwind_table): Update.
-	* hppa-tdep.c (internalize_unwinds): Update.
-	* gdbtypes.c (get_type_arch, init_float_type, objfile_type):
-	Update.
-	* gcore.c (call_target_sbrk): Update.
-	* elfread.c (record_minimal_symbol, elf_symtab_read)
-	(elf_rel_plt_read, elf_gnu_ifunc_record_cache)
-	(elf_gnu_ifunc_resolve_by_got): Update.
-	* dwarf2/read.c (create_addrmap_from_index)
-	(create_addrmap_from_aranges, dw2_find_pc_sect_compunit_symtab)
-	(read_debug_names_from_section)
-	(process_psymtab_comp_unit_reader, add_partial_symbol)
-	(add_partial_subprogram, process_full_comp_unit)
-	(read_file_scope, read_func_scope, read_lexical_block_scope)
-	(read_call_site_scope, dwarf2_ranges_read)
-	(dwarf2_record_block_ranges, dwarf2_add_field)
-	(mark_common_block_symbol_computed, read_tag_pointer_type)
-	(read_tag_string_type, dwarf2_init_float_type)
-	(dwarf2_init_complex_target_type, read_base_type)
-	(partial_die_info::read, partial_die_info::read)
-	(read_attribute_value, dwarf_decode_lines_1, new_symbol)
-	(dwarf2_fetch_die_loc_sect_off): Update.
-	* dwarf2/loc.c (dwarf2_find_location_expression)
-	(class dwarf_evaluate_loc_desc, rw_pieced_value)
-	(dwarf2_evaluate_loc_desc_full, dwarf2_locexpr_baton_eval)
-	(dwarf2_loc_desc_get_symbol_read_needs)
-	(locexpr_describe_location_piece, locexpr_describe_location_1)
-	(loclist_describe_location): Update.
-	* dwarf2/index-write.c (write_debug_names): Update.
-	* dwarf2/frame.c (dwarf2_build_frame_info): Update.
-	* dtrace-probe.c (dtrace_process_dof): Update.
-	* dbxread.c (read_dbx_symtab, dbx_end_psymtab)
-	(process_one_symbol): Update.
-	* ctfread.c (ctf_init_float_type, read_base_type): Update.
-	* coffread.c (coff_symtab_read, enter_linenos, decode_base_type)
-	(coff_read_enum_type): Update.
-	* cli/cli-cmds.c (edit_command, list_command): Update.
-	* buildsym.c (buildsym_compunit::finish_block_internal): Update.
-	* breakpoint.c (create_overlay_event_breakpoint)
-	(create_longjmp_master_breakpoint)
-	(create_std_terminate_master_breakpoint)
-	(create_exception_master_breakpoint, get_sal_arch): Update.
-	* block.c (block_gdbarch): Update.
-	* annotate.c (annotate_source_line): Update.
-
-2020-04-17  Tom Tromey  <tromey@adacore.com>
-
-	* auto-load.c (show_auto_load_cmd): Remove.
-	(auto_load_show_cmdlist_get): Use add_show_prefix_cmd.
-	* arc-tdep.c (_initialize_arc_tdep): Use add_show_prefix_cmd.
-	(maintenance_print_arc_command): Remove.
-	* tui/tui-win.c (tui_command): Remove.
-	(tui_get_cmd_list): Use add_basic_prefix_cmd.
-	* tui/tui-layout.c (tui_layout_command): Remove.
-	(_initialize_tui_layout): Use add_basic_prefix_cmd.
-	* python/python.c (user_set_python, user_show_python): Remove.
-	(_initialize_python): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* guile/guile.c (set_guile_command, show_guile_command): Remove.
-	(install_gdb_commands): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	(info_guile_command): Remove.
-	* dwarf2/read.c (set_dwarf_cmd, show_dwarf_cmd): Remove.
-	(_initialize_dwarf2_read): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* cli/cli-style.h (class cli_style_option) <add_setshow_commands>:
-	Remove do_set and do_show parameters.
-	* cli/cli-style.c (set_style, show_style): Remove.
-	(_initialize_cli_style): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	(cli_style_option::add_setshow_commands): Remove do_set and
-	do_show parameters.
-	(cli_style_option::add_setshow_commands): Use
-	add_basic_prefix_cmd, add_show_prefix_cmd.
-	(STYLE_ADD_SETSHOW_COMMANDS): Remove macro.
-	(set_style_name): Remove.
-	* cli/cli-dump.c (dump_command, append_command): Remove.
-	(srec_dump_command, ihex_dump_command, verilog_dump_command)
-	(tekhex_dump_command, binary_dump_command)
-	(binary_append_command): Remove.
-	(_initialize_cli_dump): Use add_basic_prefix_cmd.
-	* windows-tdep.c (w32_prefix_command_valid): Remove global.
-	(init_w32_command_list): Remove; move into ...
-	(_initialize_windows_tdep): ... here.  Use add_basic_prefix_cmd.
-	* valprint.c (set_print, show_print, set_print_raw)
-	(show_print_raw): Remove.
-	(_initialize_valprint): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* typeprint.c (set_print_type, show_print_type): Remove.
-	(_initialize_typeprint): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* record.c (set_record_command, show_record_command): Remove.
-	(_initialize_record): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* cli/cli-cmds.c (_initialize_cli_cmds): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	(info_command, show_command, set_debug, show_debug): Remove.
-	* top.h (set_history, show_history): Don't declare.
-	* top.c (set_history, show_history): Remove.
-	* target-descriptions.c (set_tdesc_cmd, show_tdesc_cmd)
-	(unset_tdesc_cmd): Remove.
-	(_initialize_target_descriptions): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* symtab.c (info_module_command): Remove.
-	(_initialize_symtab): Use add_basic_prefix_cmd.
-	* symfile.c (overlay_command): Remove.
-	(_initialize_symfile): Use add_basic_prefix_cmd.
-	* sparc64-tdep.c (info_adi_command): Remove.
-	(_initialize_sparc64_adi_tdep): Use add_basic_prefix_cmd.
-	* sh-tdep.c (show_sh_command, set_sh_command): Remove.
-	(_initialize_sh_tdep): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* serial.c (serial_set_cmd, serial_show_cmd): Remove.
-	(_initialize_serial): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* ser-tcp.c (set_tcp_cmd, show_tcp_cmd): Remove.
-	(_initialize_ser_tcp): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* rs6000-tdep.c (set_powerpc_command, show_powerpc_command)
-	(_initialize_rs6000_tdep): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* riscv-tdep.c (show_riscv_command, set_riscv_command)
-	(show_debug_riscv_command, set_debug_riscv_command): Remove.
-	(_initialize_riscv_tdep): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* remote.c (remote_command, set_remote_cmd): Remove.
-	(_initialize_remote): Use add_basic_prefix_cmd.
-	* record-full.c (set_record_full_command)
-	(show_record_full_command): Remove.
-	(_initialize_record_full): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* record-btrace.c (cmd_set_record_btrace)
-	(cmd_show_record_btrace, cmd_set_record_btrace_bts)
-	(cmd_show_record_btrace_bts, cmd_set_record_btrace_pt)
-	(cmd_show_record_btrace_pt): Remove.
-	(_initialize_record_btrace): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* ravenscar-thread.c (set_ravenscar_command)
-	(show_ravenscar_command): Remove.
-	(_initialize_ravenscar): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* mips-tdep.c (show_mips_command, set_mips_command)
-	(_initialize_mips_tdep): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* maint.c (maintenance_command, maintenance_info_command)
-	(maintenance_check_command, maintenance_print_command)
-	(maintenance_set_cmd, maintenance_show_cmd): Remove.
-	(_initialize_maint_cmds): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	(show_per_command_cmd): Remove.
-	* maint-test-settings.c (maintenance_set_test_settings_cmd):
-	Remove.
-	(maintenance_show_test_settings_cmd): Remove.
-	(_initialize_maint_test_settings): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* maint-test-options.c (maintenance_test_options_command):
-	Remove.
-	(_initialize_maint_test_options): Use add_basic_prefix_cmd.
-	* macrocmd.c (macro_command): Remove
-	(_initialize_macrocmd): Use add_basic_prefix_cmd.
-	* language.c (set_check, show_check): Remove.
-	(_initialize_language): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* infcmd.c (unset_command): Remove.
-	(_initialize_infcmd): Use add_basic_prefix_cmd.
-	* i386-tdep.c (set_mpx_cmd, show_mpx_cmd): Remove.
-	(_initialize_i386_tdep): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* go32-nat.c (go32_info_dos_command): Remove.
-	(_initialize_go32_nat): Use add_basic_prefix_cmd.
-	* cli/cli-decode.c (do_prefix_cmd, add_basic_prefix_cmd)
-	(do_show_prefix_cmd, add_show_prefix_cmd): New functions.
-	* frame.c (set_backtrace_cmd, show_backtrace_cmd): Remove.
-	(_initialize_frame): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* dcache.c (set_dcache_command, show_dcache_command): Remove.
-	(_initialize_dcache): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* cp-support.c (maint_cplus_command): Remove.
-	(_initialize_cp_support): Use add_basic_prefix_cmd.
-	* btrace.c (maint_btrace_cmd, maint_btrace_set_cmd)
-	(maint_btrace_show_cmd, maint_btrace_pt_set_cmd)
-	(maint_btrace_pt_show_cmd, _initialize_btrace): Use
-	add_basic_prefix_cmd, add_show_prefix_cmd.
-	* breakpoint.c (save_command): Remove.
-	(_initialize_breakpoint): Use add_basic_prefix_cmd.
-	* arm-tdep.c (set_arm_command, show_arm_command): Remove.
-	(_initialize_arm_tdep): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* ada-lang.c (maint_set_ada_cmd, maint_show_ada_cmd)
-	(set_ada_command, show_ada_command): Remove.
-	(_initialize_ada_language): Use add_basic_prefix_cmd,
-	add_show_prefix_cmd.
-	* command.h (add_basic_prefix_cmd, add_show_prefix_cmd): Declare.
-
-2020-04-16  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c (inf_ptrace_target::auxv_parse): Remove.
-	* nbsd-nat.h (inf_ptrace_target::auxv_parse): Likewise.
-
-2020-04-16  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* windows-tdep.c (is_linked_with_cygwin_dll): Add filename to
-	warning messages.
-
-2020-04-16  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* windows-tdep.c (is_linked_with_cygwin_dll): Consider case where
-	import table is not at beginning of .idata section.
-
-2020-04-16  Pedro Alves  <palves@redhat.com>
-
-	* inferior.c (delete_inferior): Use delete operator directly
-	instead of delete_program_space.
-	* progspace.c (add_program_space): New, factored out from
-	program_space::program_space.
-	(remove_program_space): New, factored out from
-	delete_program_space.
-	(program_space::program_space): Remove intro comment.  Rewrite.
-	(program_space::~program_space): Remove intro comment.  Call
-	remove_program_space.
-	(delete_program_space): Delete.
-	* progspace.h (program_space::program_space): Make explicit.  Move
-	intro comment here, adjusted.
-	(program_space::~program_space): Move intro comment here,
-	adjusted.
-	(delete_program_space): Remove.
-
-2020-04-16  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (windows_nat::handle_access_violation): New
-	function.
-	* nat/windows-nat.h (handle_access_violation): Declare.
-	* nat/windows-nat.c (handle_exception): Move Cygwin code to
-	windows-nat.c.  Call handle_access_violation.
-
-2020-04-16  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25791
-	* dwarf2/index-write.c (write_gdbindex): Generate CU table entries for
-	CUs without psymtab.
-
-2020-04-16  Kevin Buettner  <kevinb@redhat.com>
-
-	* python/python.c (do_start_initialization): Don't call
-	PyEval_InitThreads for Python 3.9 and beyond.
-
-2020-04-15  Kamil Rytarowski  <n54@gmx.com>
-
-	* obsd-nat.c (obsd_nat_target::update_thread_list): Pass "this" to
-	thread functions.
-	(obsd_nat_target::wait): Likewise.
-
-2020-04-15  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (DEBUG_EXEC, DEBUG_EVENTS, DEBUG_MEM)
-	(DEBUG_EXCEPT): Use debug_printf.
-
-2020-04-15  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* completer.c (class completion_tracker::completion_hash_entry)
-	<hash_name>: New member function.
-	(completion_tracker::discard_completions): New callback to hash a
-	completion_hash_entry, pass this to htab_create_alloc.
-
-2016-01-20  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* windows-nat.c (windows_make_so): Warn rather than stopping with
-	an error if realpath() fails.
-
-2020-04-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c (nbsd_pid_to_kinfo_proc2): New.
-	(nbsd_nat_target::info_proc): Add do_status.
-
-2020-04-14  Simon Marchi  <simon.marchi@polymtl.ca>
-	    Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25718
-	* psympriv.h (struct partial_symtab::read_symtab)
-	(struct partial_symtab::expand_psymtab)
-	(struct partial_symtab::read_dependencies): Update comments.
-	* dwarf2/read.c (struct dwarf2_include_psymtab::read_symtab): Call
-	read_symtab for includer.
-	(struct dwarf2_include_psymtab::expand_psymtab): Assert false.
-	(struct dwarf2_include_psymtab::readin_p): Call readin_p () for includer.
-	(struct dwarf2_include_psymtab::m_readin): Remove.
-	(struct dwarf2_include_psymtab::includer): New member function.
-	(dwarf2_psymtab::expand_psymtab): Assert !readin.
-
-2020-04-14  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25720
-	* symmisc.c (maintenance_expand_symtabs): Call expand_symtabs_matching
-	with NULL symbol_matcher and lookup_name.
-	* psymtab.c (psym_expand_symtabs_matching): Handle NULL symbol_matcher
-	and lookup_name.
-	* dwarf2/read.c (dw2_expand_symtabs_matching)
-	(dw2_debug_names_expand_symtabs_matching): Same.
-	* symfile.h (struct quick_symbol_functions::expand_symtabs_matching):
-	Make lookup_name a pointer.  Update comment.
-	* symtab.c (global_symbol_searcher::expand_symtabs): Handle
-	lookup_name being a pointer.
-	* symfile.c (expand_symtabs_matching): Same.
-	* symfile-debug.c (debug_qf_expand_symtabs_matching): Same.
-	* linespec.c (iterate_over_all_matching_symtabs): Same.
-
-2020-04-13  Tom Tromey  <tom@tromey.com>
-
-	* run-on-main-thread.c: Update include.
-	* unittests/main-thread-selftests.c: Update include.
-	* tui/tui-win.c: Update include.
-	* tui/tui-io.c: Update include.
-	* tui/tui-interp.c: Update include.
-	* tui/tui-hooks.c: Update include.
-	* top.h: Update include.
-	* top.c: Update include.
-	* ser-base.c: Update include.
-	* remote.c: Update include.
-	* remote-notif.c: Update include.
-	* remote-fileio.c: Update include.
-	* record-full.c: Update include.
-	* record-btrace.c: Update include.
-	* python/python.c: Update include.
-	* posix-hdep.c: Update include.
-	* mingw-hdep.c: Update include.
-	* mi/mi-main.c: Update include.
-	* mi/mi-interp.c: Update include.
-	* main.c: Update include.
-	* linux-nat.c: Update include.
-	* interps.c: Update include.
-	* infrun.c: Update include.
-	* inf-loop.c: Update include.
-	* event-top.c: Update include.
-	* event-loop.c: Move to ../gdbsupport/.
-	* event-loop.h: Move to ../gdbsupport/.
-	* async-event.h: Update include.
-	* Makefile.in (COMMON_SFILES, HFILES_NO_SRCDIR): Update.
-
-2020-04-13  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c: Include async-event.h.
-	* remote.c: Include async-event.h.
-	* remote-notif.c: Include async-event.h.
-	* record-full.c: Include async-event.h.
-	* record-btrace.c: Include async-event.h.
-	* infrun.c: Include async-event.h.
-	* event-top.c: Include async-event.h.
-	* event-loop.h: Move some declarations to async-event.h.
-	* event-loop.c: Don't include ser-event.h or top.h.  Move some
-	code to async-event.c.
-	* async-event.h: New file.
-	* async-event.c: New file.
-	* Makefile.in (COMMON_SFILES): Add async-event.c.
-	(HFILES_NO_SRCDIR): Add async-event.h.
-
-2020-04-13  Tom Tromey  <tom@tromey.com>
-
-	* utils.c (flush_streams): New function.
-	* event-loop.c (gdb_wait_for_event): Call flush_streams.
-
-2020-04-13  Tom Tromey  <tom@tromey.com>
-
-	* event-loop.c (handle_file_event): Use warning, not
-	printf_unfiltered.
-
-2020-04-13  Tom Tromey  <tom@tromey.com>
-
-	* event-loop.c: Include <chrono>.
-
-2020-04-13  Tom Tromey  <tom@tromey.com>
-
-	* gdb_select.h: Move to ../gdbsupport/.
-	* event-loop.c: Update include path.
-	* top.c: Update include path.
-	* ser-base.c: Update include path.
-	* ui-file.c: Update include path.
-	* ser-tcp.c: Update include path.
-	* guile/scm-ports.c: Update include path.
-	* posix-hdep.c: Update include path.
-	* ser-unix.c: Update include path.
-	* gdb_usleep.c: Update include path.
-	* mingw-hdep.c: Update include path.
-	* inflow.c: Update include path.
-	* infrun.c: Update include path.
-	* event-top.c: Update include path.
-
-2020-04-13  Tom Tromey  <tom@tromey.com>
-
-	* configure: Rebuild.
-	* configure.ac: Remove checks that are now in GDB_AC_COMMON.
-
-2020-04-13  Tom Tromey  <tom@tromey.com>
-
-	* event-loop.h (start_event_loop): Don't declare.
-	* event-loop.c (start_event_loop): Move...
-	* main.c (start_event_loop): ...here.  Now static.
-
-2020-04-13  Sergio Durigan Junior  <sergiodj@sergiodj.net>
-
-	* MAINTAINERS: Update my email address.
-
-2020-04-12  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c (nbsd_nat_target::info_proc): Add IP_MINIMAL and
-	IP_ALL.
-
-2020-04-12  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c (nbsd_pid_to_cmdline): Add.
-	(nbsd_nat_target::info_proc): Add do_cmdline.
-
-2020-04-12  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c (nbsd_pid_to_cwd): Add.
-	(nbsd_nat_target::info_proc): Add do_cwd.
-
-2020-04-12  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c (nbsd_nat_target::info_proc): Add do_exe.
-
-2020-04-11  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c; Include "nbsd-tdep.h" and "gdbarch.h".
-	* nbsd-nat.c (nbsd_nat_target::find_memory_regions)
-	(nbsd_nat_target::info_proc): New functions.
-	* nbsd-nat.c (kinfo_get_vmmap): New function.
-	* nbsd-nat.c (nbsd_nat_target::info_proc) Use
-	nbsd_info_proc_mappings_header and nbsd_info_proc_mappings_entry.
-	* nbsd-tdep.c (nbsd_info_proc_mappings_header)
-	(nbsd_info_proc_mappings_entry, nbsd_vm_map_entry_flags): New
-	functions.
-	* nbsd-tdep.c (KINFO_VME_PROT_READ, KINFO_VME_PROT_WRITE)
-	(KINFO_VME_PROT_EXEC, KINFO_VME_FLAG_COW)
-	(KINFO_VME_FLAG_NEEDS_COPY, KINFO_VME_FLAG_NOCOREDUMP)
-	(KINFO_VME_FLAG_PAGEABLE, KINFO_VME_FLAG_GROWS_UP)
-	(KINFO_VME_FLAG_GROWS_DOWN): New.
-
-2020-04-10  Artur Shepilko  <nomadbyte@gmail.com>
-
-	* utils.c (copy_bitwise): Use unsigned 0 constant as operand of
-	bit shift.
-
-2020-04-10  Tom Tromey  <tromey@adacore.com>
-
-	* symfile.c (symbol_file_add_separate): Preserve OBJF_MAINLINE.
-
-2020-04-10  Tom Tromey  <tromey@adacore.com>
-
-	* symtab.c (get_symbol_address, get_msymbol_address): Skip
-	separate debug files.
-
-2020-04-10  Hannes Domani  <ssbssa@yahoo.de>
-
-	* nat/windows-nat.c (STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP):
-	Move to...
-	* nat/windows-nat.h (STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP):
-	... here.
-	* windows-nat.c (windows_nat_target::get_windows_debug_event):
-	Check for STATUS_WX86_BREAKPOINT.
-	(windows_nat_target::wait): Same.
-
-2020-04-10  Tom de Vries  <tdevries@suse.de>
-
-	PR cli/25808
-	* python/lib/gdb/__init__.py: Initialize lexer with stripnl=False.
-
-2020-04-09  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* MAINTAINERS (Global Maintainers): Add Tom de Vries.
-	(Write After Approval): Remove Tom de Vries.
-
-2020-04-09  Bernd Edlinger  <bernd.edlinger@hotmail.de>
-
-	revert partially:
-	2020-04-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>
-
-	* buildsym.c (record_line): Fix undefined behavior and preserve
-	lines at eof.
-
-2020-04-09  Kamil Rytarowski  <n54@gmx.com>
-
-	* auxv.h (svr4_auxv_parse): New.
-	* auxv.c (default_auxv_parse): Split into default_auxv_parse
-	and generic_auxv_parse.
-	(svr4_auxv_parse): Add.
-	* obsd-tdep.c: Include "auxv.h".
-	(obsd_auxv_parse): Remove.
-	(obsd_init_abi): Remove comment.
-	(obsd_init_abi): Change set_gdbarch_auxv_parse passed argument
-	from `obsd_auxv_parse' to `svr4_auxv_parse'.
-	* nbsd-tdep.c: Include "auxv.h".
-	(nbsd_init_abi): Call set_gdbarch_auxv_parse.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* nat/windows-nat.h (last_wait_event): Don't declare.
-	(wait_for_debug_event): Update comment.
-	* nat/windows-nat.c (last_wait_event): Now static.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (wait_for_debug_event): Move to
-	nat/windows-nat.c.
-	* nat/windows-nat.h (wait_for_debug_event): Declare.
-	* nat/windows-nat.c (wait_for_debug_event): Move from
-	windows-nat.c.  No longer static.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (get_windows_debug_event): Use
-	fetch_pending_stop.
-	* nat/windows-nat.h (fetch_pending_stop): Declare.
-	* nat/windows-nat.c (fetch_pending_stop): New function.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (windows_continue): Use matching_pending_stop and
-	continue_last_debug_event.
-	* nat/windows-nat.h (matching_pending_stop)
-	(continue_last_debug_event): Declare.
-	* nat/windows-nat.c (DEBUG_EVENTS): New define.
-	(matching_pending_stop, continue_last_debug_event): New
-	functions.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (MS_VC_EXCEPTION): Move to nat/windows-nat.c.
-	(handle_exception_result): Move to nat/windows-nat.h.
-	(DEBUG_EXCEPTION_SIMPLE): Remove.
-	(windows_nat::handle_ms_vc_exception): New function.
-	(handle_exception): Move to nat/windows-nat.c.
-	(get_windows_debug_event): Update.
-	(STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP): Move to
-	nat/windows-nat.c.
-	* nat/windows-nat.h (handle_ms_vc_exception): Declare.
-	(handle_exception_result): Move from windows-nat.c.
-	(handle_exception): Declare.
-	* nat/windows-nat.c (MS_VC_EXCEPTION, handle_exception)
-	(STATUS_WX86_SINGLE_STEP, STATUS_WX86_BREAKPOINT): Move from
-	windows-nat.c.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (exception_count, event_count): Remove.
-	(handle_exception, get_windows_debug_event)
-	(do_initial_windows_stuff): Update.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (windows_nat::handle_load_dll)
-	(windows_nat::handle_unload_dll): Rename.  No longer static.
-	* nat/windows-nat.h (handle_load_dll, handle_unload_dll):
-	Declare.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* complaints.h (stop_whining): Declare at top-level.
-	(complaint): Don't declare stop_whining.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (windows_nat::handle_output_debug_string):
-	Rename.  No longer static.
-	* nat/windows-nat.h (handle_output_debug_string): Declare.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (current_process_handle, current_process_id)
-	(main_thread_id, last_sig, current_event, last_wait_event)
-	(current_windows_thread, desired_stop_thread_id, pending_stops)
-	(struct pending_stop, siginfo_er): Move to nat/windows-nat.c.
-	(display_selectors, fake_create_process)
-	(get_windows_debug_event): Update.
-	* nat/windows-nat.h (current_process_handle, current_process_id)
-	(main_thread_id, last_sig, current_event, last_wait_event)
-	(current_windows_thread, desired_stop_thread_id, pending_stops)
-	(struct pending_stop, siginfo_er): Move from windows-nat.c.
-	* nat/windows-nat.c (current_process_handle, current_process_id)
-	(main_thread_id, last_sig, current_event, last_wait_event)
-	(current_windows_thread, desired_stop_thread_id, pending_stops)
-	(siginfo_er): New globals.  Move from windows-nat.c.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (get_image_name): Move to nat/windows-nat.c.
-	(handle_load_dll): Update.
-	* nat/windows-nat.c (get_image_name): Move from windows-nat.c.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (enum thread_disposition_type): Move to
-	nat/windows-nat.h.
-	(windows_nat::thread_rec): Rename from thread_rec.  No longer
-	static.
-	(windows_add_thread, windows_nat_target::fetch_registers)
-	(windows_nat_target::store_registers, handle_exception)
-	(windows_nat_target::resume, get_windows_debug_event)
-	(windows_nat_target::get_tib_address)
-	(windows_nat_target::thread_name)
-	(windows_nat_target::thread_alive): Update.
-	* nat/windows-nat.h (enum thread_disposition_type): Move from
-	windows-nat.c.
-	(thread_rec): Declare.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c: Add "using namespace".
-	* nat/windows-nat.h: Wrap contents in windows_nat namespace.
-	* nat/windows-nat.c: Wrap contents in windows_nat namespace.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* nat/windows-nat.h (struct windows_thread_info): Declare
-	destructor.
-	* nat/windows-nat.c (~windows_thread_info): New.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	PR gdb/22992
-	* windows-nat.c (current_event): Update comment.
-	(last_wait_event, desired_stop_thread_id): New globals.
-	(struct pending_stop): New.
-	(pending_stops): New global.
-	(windows_nat_target) <stopped_by_sw_breakpoint>
-	<supports_stopped_by_sw_breakpoint>: New methods.
-	(windows_fetch_one_register): Add assertions.  Adjust PC.
-	(windows_continue): Handle pending stops.  Suspend other threads
-	when stepping.  Use last_wait_event
-	(wait_for_debug_event): New function.
-	(get_windows_debug_event): Use wait_for_debug_event.  Handle
-	pending stops.  Queue spurious stops.
-	(windows_nat_target::wait): Set stopped_at_software_breakpoint.
-	(windows_nat_target::kill): Use wait_for_debug_event.
-	* nat/windows-nat.h (struct windows_thread_info)
-	<stopped_at_software_breakpoint>: New field.
-	* nat/windows-nat.c (windows_thread_info::resume): Clear
-	stopped_at_software_breakpoint.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (enum thread_disposition_type): New.
-	(thread_rec): Replace "get_context" parameter with "disposition";
-	change type.
-	(windows_add_thread, windows_nat_target::fetch_registers)
-	(windows_nat_target::store_registers, handle_exception)
-	(windows_nat_target::resume, get_windows_debug_event)
-	(windows_nat_target::get_tib_address)
-	(windows_nat_target::thread_name)
-	(windows_nat_target::thread_alive): Update.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (thread_rec): Use windows_thread_info::suspend.
-	(windows_continue): Use windows_continue::resume.
-	* nat/windows-nat.h (struct windows_thread_info) <suspend,
-	resume>: Declare new methods.
-	* nat/windows-nat.c: New file.
-	* configure.nat (NATDEPFILES): Add nat/windows-nat.o when needed.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (windows_add_thread, windows_delete_thread)
-	(windows_nat_target::fetch_registers)
-	(windows_nat_target::store_registers, fake_create_process)
-	(windows_nat_target::resume, windows_nat_target::resume)
-	(get_windows_debug_event, windows_nat_target::wait)
-	(windows_nat_target::pid_to_str)
-	(windows_nat_target::get_tib_address)
-	(windows_nat_target::get_ada_task_ptid)
-	(windows_nat_target::thread_name)
-	(windows_nat_target::thread_alive): Use lwp, not tid.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (handle_exception)
-	(windows_nat_target::thread_name): Update.
-	* nat/windows-nat.h (windows_thread_info): Remove destructor.
-	<name>: Now unique_xmalloc_ptr.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (thread_rec)
-	(windows_nat_target::fetch_registers): Update.
-	* nat/windows-nat.h (struct windows_thread_info) <suspended>:
-	Update comment.
-	<debug_registers_changed, reload_context>: Now bool.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (windows_add_thread): Use new.
-	(windows_init_thread_list, windows_delete_thread): Use delete.
-	(get_windows_debug_event): Update.
-	* nat/windows-nat.h (struct windows_thread_info): Add constructor,
-	destructor, and initializers.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (struct windows_thread_info): Remove.
-	* nat/windows-nat.h: New file.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (struct windows_thread_info) <tid>: Rename from "id".
-	(thread_rec, windows_add_thread, windows_delete_thread)
-	(windows_continue): Update.
-
-2020-04-08  Tom Tromey  <tromey@adacore.com>
-
-	* windows-nat.c (struct windows_thread_info): Remove typedef.
-	(thread_head): Remove.
-	(thread_list): New global.
-	(thread_rec, windows_add_thread, windows_init_thread_list)
-	(windows_delete_thread, windows_continue): Update.
-
-2020-04-08  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* windows-tdep.h (windows_init_abi): Add comment.
-	(cygwin_init_abi): New declaration.
-	* windows-tdep.c: Split signal enumeration in two, one for
-	Windows and one for Cygwin.
-	(windows_gdb_signal_to_target): Only deal with signal of the
-	Windows OS ABI.
-	(cygwin_gdb_signal_to_target): New function.
-	(windows_init_abi): Rename to windows_init_abi_common, don't set
-	gdb_signal_to_target gdbarch method.  Add new new function with
-	this name.
-	(cygwin_init_abi): New function.
-	* amd64-windows-tdep.c (amd64_windows_init_abi_common): Add
-	comment.  Don't call windows_init_abi.
-	(amd64_windows_init_abi): Add comment, call windows_init_abi.
-	(amd64_cygwin_init_abi): Add comment, call cygwin_init_abi.
-	* i386-windows-tdep.c (i386_windows_init_abi): Rename to
-	i386_windows_init_abi_common, don't call windows_init_abi.  Add
-	a new function of this name.
-	(i386_cygwin_init_abi): New function.
-	(_initialize_i386_windows_tdep): Bind i386_cygwin_init_abi to
-	OS ABI Cygwin.
-
-2020-04-08  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.c (read_gdb_index_from_buffer): Remove objfile
-	parameter.c.
-	(dwarf2_read_gdb_index): Update.
-
-2020-04-07  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-tdep.c: Include "objfiles.h".
-	(nbsd_skip_solib_resolver): New.
-	(nbsd_init_abi): Call set_gdbarch_skip_solib_resolver().
-
-2020-04-07  Nitika Achra  <Nitika.Achra@amd.com>
-
-	* dwarf2/loc.c (loclist_describe_location): Call the function decode_debug_loclists_
-	addresses if DWARF version is 5 or more because DW_LLE_start* or DW_LLE_offset_pair
-	with DW_LLE_base_addressx are being emitted in DWARFv5.
-	Add the newly added kind DW_LOC_OFFSET_PAIR also.
-	The length of location description is an unsigned ULEB integer in DWARFv5 instead of
-	unsigned integer.
-
-2020-04-07  Nitika Achra  <Nitika.Achra@amd.com>
-
-	* dwarf2/loc.c (enum debug_loc_kind): Add a new kind DEBUG_LOC_OFFSET_PAIR.
-	(dwarf2_find_location_expression): Call the function decode_debug_loclists_
-	addresses if DWARF version is 5 or more. DW_LLE_start* or DW_LLE_offset_pair
-	with DW_LLE_base_addressx are being emitted in DWARFv5 instead of DW_LLE_GNU*.
-	Add applicable base address if the entry is DW_LLE_offset_pair from DWO.
-	(decode_debug_loclists_addresses): Return DEBUG_LOC_OFFSET_PAIR instead of
-	DEBUG_LOC_START_END in case of DW_LLE_offset_pair.
-
-
-2020-04-07  Nitika Achra  <Nitika.Achra@amd.com>
-
-	* dwarf2/read.c (cu_debug_loc_section): Added the declaration for the function.
-	(read_loclist_index): New function definition.
-	(lookup_loclist_base): New function definition.
-	(read_loclist_header): New function definition.
-	(dwarf2_cu): Add loclist_base and loclist_header field.
-	(dwarf2_locate_dwo_sections): Handle .debug_loclists.dwo section.
-	(read_full_die_1): Read the value of DW_AT_loclists_base.
-	(read_attribute_reprocess): Handle DW_FORM_loclistx.
-	(read_attribute_value): Handle DW_FORM_loclistx.
-	(skip_one_die): Handle DW_FORM_loclistx.
-	(loclist_header): New structure declaration.
-	* dwarf2/attribute.c (form_is_section_offset): Handle DW_FORM_loclistx.
-
-2020-04-07  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/read.h (struct dwarf2_psymtab): Remove two-parameters
-	constructor.  Remove `addr` parameter from other constructor and
-	add `per_cu` parameter.
-	* dwarf2/read.c (create_partial_symtab): Update.
-
-2020-04-07  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25796
-	* dwarf2/read.c (can_have_DW_AT_const_value_p): New function.
-	(partial_die_info::fixup): Inherit has_const_value.
-
-2020-04-07  Tom de Vries  <tdevries@suse.de>
-
-	* psymtab.c (maintenance_check_psymtabs): Skip static LOC_BLOCK
-	symbols without address.
-
-2020-04-06  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.h (struct thread_info): Add forward declaration.
-	(nbsd_nat_target::thread_alive): Add.
-	(nbsd_nat_target::thread_name): Likewise.
-	(nbsd_nat_target::update_thread_list): Likewise.
-	(update_thread_list::post_attach): Likewise.
-	(post_attach::pid_to_str): Likewise.
-	* nbsd-nat.c: Include "gdbthread.h" and "inferior.h".
-	(nbsd_thread_lister): Add.
-	(nbsd_nat_target::thread_alive): Likewise.
-	(nbsd_nat_target::thread_name): Likewise.
-	(nbsd_add_threads): Likewise.
-	(update_thread_list::post_attach): Likewise.
-	(nbsd_nat_target::update_thread_list): Likewise.
-	(post_attach::pid_to_str): Likewise.
-
-2020-04-06  Tom Tromey  <tromey@adacore.com>
-
-	* ada-valprint.c (print_variant_part): Extract the variant field.
-	(print_field_values): Use the field as the outer value when
-	recursing.
-
-2020-04-06  Tom Tromey  <tromey@adacore.com>
-
-	* sh-nbsd-tdep.c: Include nbsd-tdep.h.
-	* ppc-nbsd-tdep.c: Include nbsd-tdep.h.
-	* mips-nbsd-tdep.c (mipsnbsd_init_abi): Add missing ";".
-	* arm-nbsd-tdep.c: Include nbsd-tdep.h.
-	* hppa-nbsd-tdep.c: Include nbsd-tdep.h.
-
-2020-04-06  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (read_base_type) <DW_ATE_complex_float>: Handle
-	TYPE_CODE_ERROR.
-
-2020-04-06  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-tdep.c: Include "gdbarch.h".
-	Define enum with NetBSD signal numbers.
-	(nbsd_gdb_signal_from_target, nbsd_gdb_signal_to_target): New.
-	* alpha-nbsd-tdep.c (alphanbsd_init_abi): Call nbsd_init_abi().
-	* amd64-nbsd-tdep.c (amd64nbsd_init_abi): Likewise.
-	* arm-nbsd-tdep.c (arm_netbsd_elf_init_abi): Likewise.
-	* hppa-nbsd-tdep.c (hppanbsd_init_abi): Likewise.
-	* i386-nbsd-tdep.c (i386nbsd_init_abi): Likewise.
-	* mips-nbsd-tdep.c (nbsd_init_abi): Likewise.
-	* ppc-nbsd-tdep.c (ppcnbsd_init_abi): Likewise.
-	* sh-nbsd-tdep.c (shnbsd_init_abi): Likewise.
-	* sparc-nbsd-tdep.c (sparc32nbsd_init_abi): Likewise.
-	* sparc64-nbsd-tdep.c (sparc64nbsd_init_abi): Likewise.
-	* vax-nbsd-tdep.c (vaxnbsd_elf_init_abi): Likewise.
-
-2020-04-03  Hannes Domani  <ssbssa@yahoo.de>
-
-	PR gdb/25325
-	* dwarf2/read.c (read_enumeration_type): Fix typed enum attributes.
-
-2020-04-03  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/loc.c (disassemble_dwarf_expression) <DW_OP_const_type>:
-	Read constant block.
-
-2020-04-02  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* gdb_bfd.h: Include gdbsupport/byte-vector.h.
-	(gdb_bfd_get_full_section_contents): New declaration.
-	* gdb_bfd.c (gdb_bfd_get_full_section_contents): New function.
-	* windows-tdep.c (is_linked_with_cygwin_dll): Use
-	gdb_bfd_get_full_section_contents.
-
-2020-04-02  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* exec.c (build_section_table): Replace internal_error with
-	gdb_assert.
-	(section_table_xfer_memory_partial): Likewise.
-	* mdebugread.c (parse_partial_symbols): Likewise.
-	* psymtab.c (lookup_partial_symbol): Likewise.
-	* utils.c (wrap_here): Likewise.
-
-2020-04-02  Tom Tromey  <tromey@adacore.com>
-
-	* f-lang.c (build_fortran_types): Use arch_type to initialize
-	builtin_complex_s32 in the TYPE_CODE_ERROR case.
-
-2020-04-02  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (partial_die_info::read): Do not create a vector
-	of attributes.
-
-2020-04-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Bernd Edlinger <bernd.edlinger@hotmail.de>
-	    Tom Tromey  <tromey@adacore.com>
-
-	* buildsym.c (buildsym_compunit::record_line): Remove
-	deduplication code.
-
-2020-04-02  Tom de Vries  <tdevries@suse.de>
-
-	PR ada/24671
-	* dwarf2/read.c (dw2_map_matching_symbols): Handle -readnow.
-
-2020-04-02  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2/read.c (dwarf2_gdb_index_functions,
-	dwarf2_debug_names_functions): Init lookup_global_symbol_language with
-	NULL.
-	* psymtab.c (psym_lookup_global_symbol_language): New function.
-	(psym_functions): Init psym_lookup_global_symbol_language with
-	psym_lookup_global_symbol_language.
-	* symfile-debug.c (debug_sym_quick_functions): Init
-	lookup_global_symbol_language with NULL.
-	* symfile.c (set_initial_language): Remove fixme comment.
-	* symfile.h (struct quick_symbol_functions): Add
-	lookup_global_symbol_language.
-	* symtab.c (find_quick_global_symbol_language): New function.
-	(find_main_name): Use find_quick_global_symbol_language.
-
-2020-04-01  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* windows-tdep.c (is_linked_with_cygwin_dll): Fix style.
-
-2020-04-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>
-
-	* buildsym.c (record_line): Fix undefined behavior and preserve
-	lines at eof.
-
-2020-04-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>
-
-	* buildsym.c (record_line): Fix the resizing condition.
-
-2020-04-01  Tom Tromey  <tom@tromey.com>
-
-	* value.h (value_literal_complex): Add comment.
-	* valops.c (value_literal_complex): Refer to value.h.
-
-2020-04-01  Tom Tromey  <tom@tromey.com>
-
-	* c-exp.y (FLOAT_KEYWORD, COMPLEX): New tokens.
-	(scalar_type): New rule, from typebase.
-	(typebase): Use scalar_type.  Recognize complex types.
-	(field_name): Handle FLOAT_KEYWORD.
-	(ident_tokens): Add _Complex and __complex__.
-
-2020-04-01  Tom Tromey  <tom@tromey.com>
-
-	PR exp/25299:
-	* valarith.c (promotion_type, complex_binop): New functions.
-	(scalar_binop): Handle complex numbers.  Use promotion_type.
-	(value_pos, value_neg, value_complement): Handle complex numbers.
-
-2020-04-01  Tom Tromey  <tom@tromey.com>
-
-	* c-exp.y (COMPLEX_INT, COMPLEX_FLOAT): New tokens.
-	(exp) <COMPLEX_INT, COMPLEX_FLOAT>: New rules.
-	(parse_number): Handle complex numbers.
-
-2020-04-01  Tom Tromey  <tom@tromey.com>
-
-	* c-valprint.c (c_decorations): Change complex suffix to "i".
-
-2020-04-01  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_value_print_complex): Use accessors.
-	* value.h (value_real_part, value_imaginary_part): Declare.
-	* valops.c (value_real_part, value_imaginary_part): New
-	functions.
-	* value.c (creal_internal_fn, cimag_internal_fn): Use accessors.
-
-2020-04-01  Tom Tromey  <tom@tromey.com>
-
-	* stabsread.c (rs6000_builtin_type, read_sun_floating_type)
-	(read_range_type): Update.
-	* mdebugread.c (basic_type): Update.
-	* go-lang.c (build_go_types): Use init_complex_type.
-	* gdbtypes.h (struct main_type) <complex_type>: New member.
-	(init_complex_type): Update.
-	(arch_complex_type): Don't declare.
-	* gdbtypes.c (init_complex_type): Remove "objfile" parameter.
-	Make name if none given.  Use alloc_type_copy.  Look for cached
-	complex type.
-	(arch_complex_type): Remove.
-	(gdbtypes_post_init): Use init_complex_type.
-	* f-lang.c (build_fortran_types): Use init_complex_type.
-	* dwarf2/read.c (read_base_type): Update.
-	* d-lang.c (build_d_types): Use init_complex_type.
-	* ctfread.c (read_base_type): Update.
-
-2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* infrun.c (stop_all_threads): Update assertion, plus when
-	stopping threads, take into account that we might be trying
-	to stop an all-stop target.
-	(stop_waiting): Call 'stop_all_threads' if there exists a
-	non-stop target.
-
-2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* target.h (exists_non_stop_target): New function declaration.
-	* target.c (exists_non_stop_target): New function.
-
-2020-04-01  Hannes Domani  <ssbssa@yahoo.de>
-
-	PR gdb/24789
-	* eval.c (is_integral_or_integral_reference): New function.
-	(evaluate_subexp_standard): Allow integer references in
-	pointer arithmetic.
-
-2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* remote.c (remote_target::remote_parse_stop_reply): Remove the
-	check for no ptid in the stop reply when the target is non-stop.
-
-2020-04-01  Tom Tromey  <tromey@adacore.com>
-
-	* symtab.h (class lookup_name_info) <lookup_name_info>: Change
-	"name" parameter to rvalue reference.  Initialize m_name_holder.
-	<lookup_name_info>: New overloads.
-	<name>: Return gdb::string_view.
-	<c_str>: New method.
-	<make_ignore_params>: Update.
-	<search_name_hash>: Update.
-	<language_lookup_name>: Return const char *.
-	<m_name>: Change type.
-	* symtab.c (demangle_for_lookup_info::demangle_for_lookup_info)
-	(demangle_for_lookup_info::demangle_for_lookup_info): Update.
-	(lookup_name_info::match_any): Update.
-	* psymtab.c (match_partial_symbol, lookup_partial_symbol):
-	Update.
-	* minsyms.c (linkage_name_str): Update.
-	* language.c (default_symbol_name_matcher): Update.
-	* dwarf2/read.c (mapped_index_base::find_name_components_bounds):
-	Update.
-	* ada-lang.c (ada_fold_name): Change parameter to string_view.
-	(ada_lookup_name_info::ada_lookup_name_info): Update.
-	(literal_symbol_name_matcher): Update.
-
-2020-04-01  Tom Tromey  <tromey@adacore.com>
-
-	* psymtab.c (psymtab_search_name): Remove function.
-	(psym_lookup_symbol): Create search name and lookup name here.
-	(lookup_partial_symbol): Remove "name" parameter; add
-	lookup_name.
-	(psym_expand_symtabs_for_function): Update.
-
-2020-03-31  Joel Jones  <joelkevinjones@gmail.com>
-
-	PR tui/25597:
-	* python/py-tui.c: Include gdb_curses.h inside of #ifdef TUI.
-
-2020-03-31  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/abbrev.c (abbrev_table::read): Conditionally call
-	memcpy.
-
-2020-03-30  Nelson Chu  <nelson.chu@sifive.com>
-
-	* features/riscv/32bit-csr.xml: Regenerated.
-	* features/riscv/64bit-csr.xml: Regenerated.
-
-2020-03-30  Tom Tromey  <tromey@adacore.com>
-
-	* ada-valprint.c (print_variant_part): Update.
-	* ada-lang.h (ada_which_variant_applies): Update.
-	* ada-lang.c (ada_which_variant_applies): Remove outer_type and
-	outer_valaddr parameters; replace with "outer" value parameter.
-	(to_fixed_variant_branch_type): Update.
-
-2020-03-30  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
-
-	* ppc-linux-nat.c: Include <algorithm>, <unordered_map>, and
-	<list>.  Remove inclusion of observable.h.
-	(PPC_DEBUG_CURRENT_VERSION): Move up define.
-	(struct arch_lwp_info): New struct.
-	(class ppc_linux_dreg_interface): New class.
-	(struct ppc_linux_process_info): New struct.
-	(struct ppc_linux_nat_target) <low_delete_thread, low_new_fork>
-	<low_new_clone, low_forget_process, low_prepare_to_resume>
-	<copy_thread_dreg_state, mark_thread_stale>
-	<mark_debug_registers_changed, register_hw_breakpoint>
-	<clear_hw_breakpoint, register_wp, clear_wp>
-	<can_use_watchpoint_cond_accel, calculate_dvc, check_condition>
-	<num_memory_accesses, get_trigger_type>
-	<create_watchpoint_request, hwdebug_point_cmp>
-	<init_arch_lwp_info, get_arch_lwp_info>
-	<low_stopped_by_watchpoint, low_stopped_data_address>: Declare as
-	methods.
-	<struct ptid_hash>: New inner struct.
-	<m_dreg_interface, m_process_info, m_installed_hw_bps>: Declare
-	members.
-	(saved_dabr_value, hwdebug_info, max_slots_number)
-	(struct hw_break_tuple, struct thread_points, ppc_threads)
-	(have_ptrace_hwdebug_interface)
-	(hwdebug_find_thread_points_by_tid)
-	(hwdebug_insert_point, hwdebug_remove_point): Remove.
-	(ppc_linux_nat_target::can_use_hw_breakpoint): Use
-	m_dreg_interface, remove call to PTRACE_SET_DEBUGREG.
-	(ppc_linux_nat_target::region_ok_for_hw_watchpoint): Add comment,
-	use m_dreg_interface.
-	(hwdebug_point_cmp): Change to...
-	(ppc_linux_nat_target::hwdebug_point_cmp): ...this method.  Use
-	reference arguments instead of pointers.
-	(ppc_linux_nat_target::ranged_break_num_registers): Use
-	m_dreg_interface.
-	(ppc_linux_nat_target::insert_hw_breakpoint): Add comment, use
-	m_dreg_interface.  Call register_hw_breakpoint.
-	(ppc_linux_nat_target::remove_hw_breakpoint): Add comment, use
-	m_dreg_interface.  Call clear_hw_breakpoint.
-	(get_trigger_type): Change to...
-	(ppc_linux_nat_target::get_trigger_type): ...this method.  Add
-	comment.
-	(ppc_linux_nat_target::insert_mask_watchpoint): Update comment,
-	use m_dreg_interface.  Call register_hw_breakpoint.
-	(ppc_linux_nat_target::remove_mask_watchpoint): Update comment,
-	use m_dreg_interface.  Call clear_hw_breakpoint.
-	(can_use_watchpoint_cond_accel): Change to...
-	(ppc_linux_nat_target::can_use_watchpoint_cond_accel): ...this
-	method.  Update comment, use m_dreg_interface and
-	m_process_info.
-	(calculate_dvc): Change to...
-	(ppc_linux_nat_target::calculate_dvc): ...this method.  Use
-	m_dreg_interface.
-	(num_memory_accesses): Change to...
-	(ppc_linux_nat_target::num_memory_accesses): ...this method.
-	(check_condition): Change to...
-	(ppc_linux_nat_target::check_condition): ...this method.
-	(ppc_linux_nat_target::can_accel_watchpoint_condition): Update
-	comment, use m_dreg_interface.
-	(create_watchpoint_request): Change to...
-	(ppc_linux_nat_target::create_watchpoint_request): ...this
-	method.  Use m_dreg_interface.
-	(ppc_linux_nat_target::insert_watchpoint): Add comment, use
-	m_dreg_interface.  Call register_hw_breakpoint or register_wp.
-	(ppc_linux_nat_target::remove_watchpoint): Add comment, use
-	m_dreg_interface.  Call clear_hw_breakpoint or clear_wp.
-	(ppc_linux_nat_target::low_forget_process)
-	(ppc_linux_nat_target::low_new_fork)
-	(ppc_linux_nat_target::low_new_clone)
-	(ppc_linux_nat_target::low_delete_thread)
-	(ppc_linux_nat_target::low_prepare_to_resume): New methods.
-	(ppc_linux_nat_target::low_new_thread): Remove previous logic,
-	only call mark_thread_stale.
-	(ppc_linux_thread_exit): Remove.
-	(ppc_linux_nat_target::stopped_data_address): Change to...
-	(ppc_linux_nat_target::low_stopped_data_address): This. Add
-	comment, use m_dreg_interface and m_thread_hw_breakpoints.
-	(ppc_linux_nat_target::stopped_by_watchpoint): Change to...
-	(ppc_linux_nat_target::stopped_by_watchpoint): This.  Add
-	comment.  Call low_stopped_data_address.
-	(ppc_linux_nat_target::watchpoint_addr_within_range): Use
-	m_dreg_interface.
-	(ppc_linux_nat_target::masked_watch_num_registers): Use
-	m_dreg_interface.
-	(ppc_linux_nat_target::copy_thread_dreg_state)
-	(ppc_linux_nat_target::mark_thread_stale)
-	(ppc_linux_nat_target::mark_debug_registers_changed)
-	(ppc_linux_nat_target::register_hw_breakpoint)
-	(ppc_linux_nat_target::clear_hw_breakpoint)
-	(ppc_linux_nat_target::register_wp)
-	(ppc_linux_nat_target::clear_wp)
-	(ppc_linux_nat_target::init_arch_lwp_info)
-	(ppc_linux_nat_target::get_arch_lwp_info): New methods.
-	(_initialize_ppc_linux_nat): Remove observer callback.
-
-2020-03-30  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
-
-	* ppc-linux-nat.c (ppc_linux_nat_target::store_registers)
-	(ppc_linux_nat_target::auxv_parse)
-	(ppc_linux_nat_target::read_description)
-	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset):
-	Move up.
-
-2020-03-30  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
-
-	* linux-nat.h (low_new_clone): New method.
-	* linux-nat.c (linux_handle_extended_wait): Call low_new_clone.
-
-2020-03-29  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dbxread.c (dbx_psymtab_to_symtab_1): Rename to...
-	(dbx_expand_psymtab): ... this.
-	(start_psymtab): Update.
-	* mdebugread.c (psymtab_to_symtab_1): Rename to...
-	(mdebug_expand_psymtab): ... this.
-	(parse_partial_symbols): Update.
-	(new_psymtab): Update.
-	* xcoffread.c (xcoff_psymtab_to_symtab_1): Rename to...
-	(xcoff_expand_psymtab): ... this.
-	(xcoff_start_psymtab): Update.
-
-2020-03-29  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* psympriv.h (partial_symtab) <read_dependencies>: Rename to...
-	<expand_dependencies>: ... this.
-	* psymtab.c (partial_symtab::read_dependencies): Rename to...
-	(partial_symtab::expand_dependencies): ... this.
-	* dwarf2/read.c (dwarf2_include_psymtab) <expand_psymtab>:
-	Update.
-	(dwarf2_psymtab::expand_psymtab): Update.
-	* dbxread.c (dbx_psymtab_to_symtab_1): Update.
-	* mdebugread.c (psymtab_to_symtab_1): Update.
-	* xcoffread.c (xcoff_psymtab_to_symtab_1): Update.
-
-2020-03-29  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* psympriv.h (discard_psymtab): Remove.
-	* dbxread.c (dbx_end_psymtab): Update.
-	* xcoffread.c (xcoff_end_psymtab): Update.
-
-2020-03-28  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/attribute.h (struct attribute) <form_is_constant>: Update
-	comment.
-
-2020-03-28  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_attribute_reprocess): Fix formatting.
-
-2020-03-27  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-nat.c (windows_add_all_dlls): Fix system dll paths.
-
-2020-03-26  John Baldwin  <jhb@FreeBSD.org>
-
-	* fbsd-tdep.c (fbsd_print_auxv_entry): Handle AT_FREEBSD_BSDFLAGS.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (handle_data_member_location, dwarf2_add_field)
-	(mark_common_block_symbol_computed, read_tag_string_type)
-	(attr_to_dynamic_prop, read_subrange_type): Update.
-	(dwarf2_get_ref_die_offset, dwarf2_get_attr_constant_value): Move
-	to be methods on struct attribute.
-	(skip_one_die, process_imported_unit_die, read_namespace_alias)
-	(read_call_site_scope, partial_die_info::read)
-	(partial_die_info::read, lookup_die_type, follow_die_ref):
-	Update.
-	* dwarf2/attribute.c (attribute::get_ref_die_offset): New method,
-	from dwarf2_get_ref_die_offset.
-	(attribute::constant_value): New method, from
-	dwarf2_get_attr_constant_value.
-	* dwarf2/attribute.h (struct attribute) <get_ref_die_offset>:
-	Declare method.
-	<constant_value>: New method.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (dwarf_unit_type_name, dwarf_tag_name)
-	(dwarf_attr_name, dwarf_form_name, dwarf_bool_name)
-	(dwarf_type_encoding_name): Move to stringify.c.
-	* Makefile.in (COMMON_SFILES): Add dwarf2/stringify.c.
-	* dwarf2/stringify.c: New file.
-	* dwarf2/stringify.h: New file.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/die.h (struct die_info) <addr_base, ranges_base>:
-	Rewrite.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/die.h (struct die_info) <addr_base, ranges_base>: New
-	methods.
-	* dwarf2/read.c (lookup_addr_base): Move to die.h.
-	(lookup_ranges_base): Likewise.
-	(read_cutu_die_from_dwo, read_full_die_1): Update.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_import_statement, read_file_scope)
-	(read_type_unit_scope, inherit_abstract_dies, read_func_scope)
-	(read_lexical_block_scope, read_call_site_scope)
-	(dwarf2_get_subprogram_pc_bounds, get_scope_pc_bounds)
-	(handle_struct_member_die, process_structure_scope)
-	(update_enumeration_type_from_children)
-	(process_enumeration_scope, read_array_type, read_common_block)
-	(read_namespace, read_module, read_subroutine_type): Update.
-	(sibling_die): Remove.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (lookup_addr_base, lookup_ranges_base)
-	(build_type_psymtabs_reader, read_structure_type)
-	(read_enumeration_type, read_full_die_1): Update.
-	(dwarf2_attr_no_follow): Move to die.h.
-	* dwarf2/die.h (struct die_info) <attr>: New method.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (struct dwarf2_cu) <base_known>: Remove.
-	<base_address>: Now an optional.
-	(dwarf2_find_base_address, dwarf2_rnglists_process)
-	(dwarf2_ranges_process, fill_in_loclist_baton)
-	(dwarf2_symbol_mark_computed): Update.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (struct die_info): Move to die.h.
-	* dwarf2/die.h: New file.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/line-header.h (dwarf_decode_line_header): Declare.
-	* dwarf2/read.c
-	(dwarf2_statement_list_fits_in_line_number_section_complaint):
-	Move to line-header.c.
-	(read_checked_initial_length_and_offset, read_formatted_entries):
-	Likewise.
-	(dwarf_decode_line_header): Split into two.
-	* dwarf2/line-header.c
-	(dwarf2_statement_list_fits_in_line_number_section_complaint):
-	Move from read.c.
-	(read_checked_initial_length_and_offset, read_formatted_entries):
-	Likewise.
-	(dwarf_decode_line_header): New function, split from read.c.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct dwarf2_per_objfile) <read_line_string>:
-	Declare method.
-	* dwarf2/read.c (read_attribute_value): Update.
-	(dwarf2_per_objfile::read_line_string): Rename from
-	read_indirect_line_string.
-	(read_formatted_entries): Update.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/macro.c (dwarf_decode_macro_bytes): Use objfile local
-	variable.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/macro.h (dwarf_decode_macros): Make section parameter
-	const.
-	* dwarf2/macro.c (skip_form_bytes, skip_unknown_opcode)
-	(dwarf_decode_macro_bytes, dwarf_decode_macros): Make section
-	parameter const.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (dwarf_decode_macros): Make "lh" const.
-	* dwarf2/macro.h (dwarf_decode_macros): Constify "lh" parameter.
-	* dwarf2/macro.c (macro_start_file): Constify "lh" parameter.
-	(dwarf_decode_macro_bytes, dwarf_decode_macros): Likewise.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/line-header.h (struct line_header) <is_valid_file_index,
-	file_names_size, file_full_name, file_file_name>: Use const.
-	<file_name_at, file_names>: Add const overload.
-	* dwarf2/line-header.c (line_header::file_file_name)
-	(line_header::file_full_name): Update.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (dwarf2_macro_malformed_definition_complaint)
-	(macro_start_file, consume_improper_spaces)
-	(parse_macro_definition, skip_form_bytes, skip_unknown_opcode)
-	(dwarf_parse_macro_header, dwarf_decode_macro_bytes)
-	(dwarf_decode_macros): Move to macro.c.
-	* dwarf2/macro.c: New file.
-	* dwarf2/macro.h: New file.
-	* Makefile.in (COMMON_SFILES): Add dwarf2/macro.c.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/section.h (struct dwarf2_section_info) <read_string>: New
-	method.
-	* dwarf2/section.c: New method.  From
-	read_indirect_string_at_offset_from.
-	* dwarf2/read.c (mapped_debug_names::namei_to_name): Update.
-	(read_indirect_string_at_offset_from): Move to section.c.
-	(read_indirect_string_at_offset): Rewrite.
-	(read_indirect_line_string_at_offset): Remove.
-	(read_indirect_string, read_indirect_line_string)
-	(dwarf_decode_macro_bytes): Update.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/section.h (struct dwarf2_section_info)
-	<overload_complaint>: Declare.
-	(dwarf2_section_buffer_overflow_complaint): Don't declare.
-	* dwarf2/section.c (dwarf2_section_info::overflow_complaint):
-	Rename from dwarf2_section_buffer_overflow_complaint.
-	* dwarf2/read.c (skip_one_die, partial_die_info::read)
-	(skip_form_bytes, dwarf_decode_macro_bytes): Update.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/section.h (dwarf2_section_buffer_overflow_complaint):
-	Declare.
-	* dwarf2/section.c (dwarf2_section_buffer_overflow_complaint):
-	Move from read.c.
-	* dwarf2/read.c (dwarf2_section_buffer_overflow_complaint): Move
-	to section.c.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (dwarf_decode_macros): Split into two overloads.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (macro_start_file): Change "cu" parameter to
-	"builder".
-	(dwarf_decode_macro_bytes): Likewise.  Add dwarf2_per_objfile
-	parameter.
-	(dwarf_decode_macros): Update.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_attribute_value): Update.
-	(read_indirect_string_from_dwz): Move to dwz.c; change into
-	method.
-	(dwarf_decode_macro_bytes): Update.
-	* dwarf2/dwz.h (struct dwz_file) <read_string>: Declare method.
-	* dwarf2/dwz.c: New file.
-	* Makefile.in (COMMON_SFILES): Add dwz.c.
-
-2020-03-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct dwz_file): Move to dwz.h.
-	* dwarf2/read.c: Add include.
-	* dwarf2/index-write.c: Add include.
-	* dwarf2/index-cache.c: Add include.
-	* dwarf2/dwz.h: New file.
-
-2020-03-25  Tom Tromey  <tom@tromey.com>
-
-	* compile/compile-object-load.c (get_out_value_type): Mention
-	correct symbol name in error message.
-
-2020-03-25  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-nat.c (windows_add_all_dlls): Fix system dll paths.
-
-2020-03-25  Tom de Vries  <tdevries@suse.de>
-
-	* symtab.h (is_main_symtab_of_compunit_symtab): New function.
-	* symmisc.c (dump_symtab_1): Print user and includes fields.
-	(maintenance_info_symtabs): Same.
-
-2020-03-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	PR gdb/25534
-	* riscv-tdep.c (riscv_arg_info::c_offset): Update comment.
-	(riscv_regcache_cooked_write): New function.
-	(riscv_push_dummy_call): Use new function.
-	(riscv_return_value): Likewise.
-
-2020-03-24  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* fbsd-nat.c (fbsd_nat_target::follow_fork): Change bool to int.
-	* fbsd-nat.h (class fbsd_nat_target) <follow_fork>: Likewise.
-	* inf-ptrace.c (inf_ptrace_target::follow_fork): Likewise.
-	* inf-ptrace.h (struct inf_ptrace_target) <follow_fork>: Likewise.
-	* infrun.c (follow_fork): Likewise.
-	(follow_fork_inferior): Likewise.
-	* linux-nat.c (linux_nat_target::follow_fork): Likewise.
-	* linux-nat.h (class linux_nat_target): Likewise.
-	* remote.c (class remote_target) <follow_fork>: Likewise.
-	(remote_target::follow_fork): Likewise.
-	* target-delegates.c: Re-generate.
-	* target.c (default_follow_fork): Likewise.
-	(target_follow_fork): Likewise.
-	* target.h (struct target_ops) <follow_fork>: Likewise.
-	(target_follow_fork): Likewise.
-
-2020-03-24  Tom de Vries  <tdevries@suse.de>
-
-	* psymtab.c (maintenance_info_psymtabs): Print user field.
-
-2020-03-20  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/loc.h (dwarf2_evaluate_property): Make "addr_stack"
-	const.
-	* dwarf2/loc.c (dwarf2_evaluate_property): Make "addr_stack"
-	const.
-
-2020-03-20  Simon Marchi  <simon.marchi@efficios.com>
-
-	* ptrace.m4: Don't check for ptrace declaration.
-	* config.in: Re-generate.
-	* configure: Re-generate.
-	* nat/gdb_ptrace.h: Don't declare ptrace if HAVE_DECL_PTRACE is
-	not defined.
-
-2020-03-20  Kamil Rytarowski  <n54@gmx.com>
-
-	* amd64-bsd-nat.c (gdb_ptrace): Change return type from `int' to
-	`PTRACE_TYPE_RET'.
-	* i386-bsd-nat.c (gdb_ptrace): Likewise.
-	* sparc-nat.c (gdb_ptrace): Likewise.
-	* x86-bsd-nat.c (gdb_ptrace): Likewise.
-
-2020-03-20  Tom Tromey  <tromey@adacore.com>
-
-	* c-exp.y (lex_one_token): Fix assert.
-
-2020-03-20  Tom Tromey  <tromey@adacore.com>
-
-	* ada-tasks.c (read_atcb): Use smaller length in strncpy call.
-	* linux-tdep.c (linux_fill_prpsinfo): Use smaller length in
-	strncpy call.
-
-2020-03-20  Tom Tromey  <tromey@adacore.com>
-
-	* symmisc.c (maintenance_print_one_line_table): Use ui_out.
-
-2020-03-20  Tom Tromey  <tromey@adacore.com>
-
-	* ada-valprint.c (print_variant_part): Remove parameters; switch
-	to value-based API.
-	(print_field_values): Likewise.
-	(ada_val_print_struct_union): Likewise.
-	(ada_value_print_1): Update.
-
-2020-03-20  Kamil Rytarowski  <n54@gmx.com>
-
-	* ppc-nbsd-nat.c (ppc_nbsd_nat_target): Inherit from
-	nbsd_nat_target instead of inf_ptrace_target.
-	* ppc-nbsd-nat.c: Include "nbsd-nat.h", as we are now using
-	nbsd_nat_target.
-
-2020-03-20  Kamil Rytarowski  <n54@gmx.com>
-
-	* hppa-nbsd-nat.c (fetch_registers): New variable lwp and pass
-	it to the ptrace call.
-	* (store_registers): Likewise.
-
-2020-03-20  Kamil Rytarowski  <n54@gmx.com>
-
-	* ppc-nbsd-nat.c (fetch_registers): New variable lwp and pass
-	it to the ptrace call.
-	* (store_registers): Likewise.
-
-2020-03-19  Luis Machado  <luis.machado@linaro.org>
-
-	* nat/aarch64-sve-linux-ptrace.c (aarch64_sve_set_vq): If vg is not
-	valid, fetch vg value from ptrace.
-
-2020-03-19  Kamil Rytarowski  <n54@gmx.com>
-	* inf-ptrace.h: Disable get_ptrace_pid on NetBSD.
-	* inf-ptrace.c: Likewise.
-	* (gdb_ptrace): Add.
-	* (inf_ptrace_target::resume): Update.
-	* (inf_ptrace_target::xfer_partial): Likewise.
-	* (inf_ptrace_peek_poke): Change argument `pid' to `ptid'.
-	* (inf_ptrace_peek_poke): Update.
-
-2020-03-19  Kamil Rytarowski  <n54@gmx.com>
-
-	* x86-bsd-nat.c (gdb_ptrace): New.
-	* (x86bsd_dr_set): Add new argument `ptid'.
-	* (x86bsd_dr_get, x86bsd_dr_set, x86bsd_dr_set_control,
-	x86bsd_dr_set_addr): Update.
-
-2020-03-19  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* remote.c (remote_target::process_stop_reply): Handle events for
-	all threads differently.
-
-2020-03-19  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* completer.c (completion_tracker::remove_completion): Define new
-	function.
-	* completer.h (completion_tracker::remove_completion): Declare new
-	function.
-	* symtab.c (completion_list_add_symbol): Remove aliasing msymbols
-	when adding a C++ function symbol.
-
-2020-03-19  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* completer.c (completion_tracker::completion_hash_entry): Define
-	new class.
-	(advance_to_filename_complete_word_point): Call
-	recompute_lowest_common_denominator.
-	(completion_tracker::completion_tracker): Call discard_completions
-	to setup the hash table.
-	(completion_tracker::discard_completions): Allow for being called
-	from the constructor, pass new equal function, and element deleter
-	when constructing the hash table.  Initialise new class member
-	variables.
-	(completion_tracker::maybe_add_completion): Remove use of
-	m_entries_vec, and store more information into m_entries_hash.
-	(completion_tracker::recompute_lcd_visitor): New function, most
-	content taken from...
-	(completion_tracker::recompute_lowest_common_denominator):
-	...here, this now just visits each item in the hash calling the
-	above visitor.
-	(completion_tracker::build_completion_result): Remove use of
-	m_entries_vec, call recompute_lowest_common_denominator.
-	* completer.h (completion_tracker::have_completions): Remove use
-	of m_entries_vec.
-	(completion_tracker::completion_hash_entry): Declare new class.
-	(completion_tracker::recompute_lowest_common_denominator): Change
-	function signature.
-	(completion_tracker::recompute_lcd_visitor): Declare new function.
-	(completion_tracker::m_entries_vec): Delete.
-	(completion_tracker::m_entries_hash): Initialize to NULL.
-	(completion_tracker::m_lowest_common_denominator_valid): New
-	member variable.
-	(completion_tracker::m_lowest_common_denominator_max_length): New
-	member variable.
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* regformats/regdef.h: Put reg in gdb namespace.
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* i386-bsd-nat.c (gdb_ptrace): New.
-	* (i386bsd_fetch_inferior_registers,
-	i386bsd_store_inferior_registers) Switch from pid_t to ptid_t.
-	* (i386bsd_fetch_inferior_registers,
-	i386bsd_store_inferior_registers) Use gdb_ptrace.
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* amd64-bsd-nat.c (gdb_ptrace): New.
-	* (amd64bsd_fetch_inferior_registers,
-	amd64bsd_store_inferior_registers) Switch from pid_t to ptid_t.
-	* (amd64bsd_fetch_inferior_registers,
-	amd64bsd_store_inferior_registers) Use gdb_ptrace.
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* user-regs.c (user_reg::read): Rename to...
-	(user_reg::xread): ...this.
-	* (append_user_reg): Rename argument `read' to `xread'.
-	* (user_reg_add_builtin): Likewise.
-	* (user_reg_add): Likewise.
-	* (value_of_user_reg): Likewise.
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* sparc-nat.c (gdb_ptrace): New.
-	* sparc-nat.c (sparc_fetch_inferior_registers)
-	(sparc_store_inferior_registers) Remove obsolete comment.
-	* sparc-nat.c (sparc_fetch_inferior_registers)
-	(sparc_store_inferior_registers) Switch from pid_t to ptid_t.
-	* sparc-nat.c (sparc_fetch_inferior_registers)
-	(sparc_store_inferior_registers) Use gdb_ptrace.
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* sh-nbsd-nat.c (fetch_registers): New variable lwp and pass
-	it to the ptrace call.
-	* sh-nbsd-nat.c (store_registers): Likewise.
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* sh-nbsd-nat.c (sh_nbsd_nat_target): Inherit from
-	nbsd_nat_target instead of inf_ptrace_target.
-	* sh-nbsd-nat.c: Include "nbsd-nat.h", as we are now using
-	nbsd_nat_target.
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* amd64-bsd-nat.c: Include amd64-bsd-nat.h".
-
-2020-03-17  Kamil Rytarowski  <n54@gmx.com>
-
-	* nbsd-nat.c: Include <sys/types.h>, <sys/ptrace.h> and
-	<sys/sysctl.h>.
-	* nbsd-nat.c (nbsd_nat_target::pid_to_exec_file): Rewrite.
-
-2020-03-17  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/23710
-	* dwarf2/read.h (struct dwarf2_per_cu_data): Add unit_type and lang
-	fields.
-	* dwarf2/read.c (process_psymtab_comp_unit): Initialize unit_type and lang
-	fields.
-	(process_imported_unit_die): Skip import of c++ CUs.
-
-2020-03-16  Tom Tromey  <tom@tromey.com>
-
-	* p-valprint.c (pascal_object_print_value): Initialize
-	base_value.
-
-2020-03-16  Anton Kolesov  <anton.kolesov@synopsys.com>
-	    Shahab Vahedi  <shahab@synopsys.com>
-
-	* Makefile.in: Add arch/arc.o
-	* configure.tgt: Likewise.
-	* arc-tdep.c (arc_tdesc_init): Use arc_read_description.
-	(_initialize_arc_tdep): Don't initialize old target descriptions.
-	(arc_read_description): New function to cache target descriptions.
-	* arc-tdep.h (arc_read_description): Add proto type.
-	* arch/arc.c: New file.
-	* arch/arc.h: Likewise.
-	* features/Makefile: Replace old target descriptions with new.
-	* features/arc-arcompact.c: Remove.
-	* features/arc-arcompact.xml: Likewise.
-	* features/arc-v2.c: Likewise
-	* features/arc-v2.xml: Likewise
-	* features/arc/aux-arcompact.xml: New file.
-	* features/arc/aux-v2.xml: Likewise.
-	* features/arc/core-arcompact.xml: Likewise.
-	* features/arc/core-v2.xml: Likewise.
-	* features/arc/aux-arcompact.c: Generate.
-	* features/arc/aux-v2.c: Likewise.
-	* features/arc/core-arcompact.c: Likewise.
-	* features/arc/core-v2.c: Likewise.
-	* target-descriptions (maint_print_c_tdesc_cmd): Support ARC features.
-
-2020-03-16  Tom Tromey  <tromey@adacore.com>
-
-	PR gdb/25663:
-	* dwarf2/read.c (dwarf2_name): Strip leading namespaces after
-	putting value into bcache.
-
-2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	PR gdb/21500
-	* amd64-windows-tdep.c (amd64_windows_init_abi): Rename
-	to...
-	(amd64_windows_init_abi_common): ... this.  Don't set size of
-	long type.
-	(amd64_windows_init_abi): New function.
-	(amd64_cygwin_init_abi): New function.
-	(_initialize_amd64_windows_tdep): Use amd64_cygwin_init_abi for
-	the Cygwin OS ABI.
-	* i386-windows-tdep.c (_initialize_i386_windows_tdep): Clarify
-	comment.
-
-2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* windows-tdep.h (is_linked_with_cygwin_dll): New declaration.
-	* windows-tdep.c (CYGWIN_DLL_NAME): New.
-	(pe_import_directory_entry): New struct type.
-	(is_linked_with_cygwin_dll): New function.
-	* amd64-windows-tdep.c (amd64_windows_osabi_sniffer): Select
-	GDB_OSABI_CYGWIN if the BFD is linked with the Cygwin DLL.
-	* i386-windows-tdep.c (i386_windows_osabi_sniffer): Likewise.
-
-2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* i386-windows-tdep.c: Mass-rename "cygwin" to "windows", except
-	i386_cygwin_core_osabi_sniffer.
-
-2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* i386-cygwin-tdep.c: Rename to...
-	* i386-windows-tdep.c: ... this.
-	* Makefile.in (ALL_TARGET_OBS): Rename i386-cygwin-tdep.c to
-	i386-windows-tdep.c.
-	* configure.tgt: Likewise.
-
-2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* osabi.h (enum gdb_osabi): Add GDB_OSABI_WINDOWS.
-	* osabi.c (gdb_osabi_names): Add "Windows".
-	* i386-cygwin-tdep.c (i386_cygwin_osabi_sniffer): Return
-	GDB_OSABI_WINDOWS when the binary's target is "pei-i386".
-	(i386_cygwin_core_osabi_sniffer): New function, extracted from
-	i386_cygwin_osabi_sniffer.
-	(_initialize_i386_cygwin_tdep): Register OS ABI
-	GDB_OSABI_WINDOWS for i386.
-	* amd64-windows-tdep.c (amd64_windows_osabi_sniffer): Return
-	GDB_OSABI_WINDOWS when the binary's target is "pei-x86-64".
-	(_initialize_amd64_windows_tdep): Register OS ABI GDB_OSABI_WINDOWS
-	for x86-64.
-	* configure.tgt: Use GDB_OSABI_WINDOWS as the default OS ABI
-	when the target matches '*-*-mingw*'.
-
-2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* defs.h (enum gdb_osabi): Move to...
-	* osabi.h (enum gdb_osabi): ... here.
-	* gdbarch.sh: Include osabi.h in gdbarch.h.
-	* gdbarch.h: Re-generate.
-
-2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
-
-	* amd64-windows-tdep.c (amd64_windows_osabi_sniffer): New
-	function.
-	(_initialize_amd64_windows_tdep): Register osabi sniffer.
-
-2020-03-14  Tom Tromey  <tom@tromey.com>
-
-	* c-typeprint.c (cp_type_print_method_args): Print "__restrict__"
-	for C++.
-	(c_type_print_modifier): Likewise.  Add "language" parameter.
-	(c_type_print_varspec_prefix, c_type_print_base_struct_union)
-	(c_type_print_base_1): Update.
-	* type-stack.h (enum type_pieces) <tp_atomic, tp_restrict>: New
-	constants.
-	* type-stack.c (type_stack::insert): Handle tp_atomic and
-	tp_restrict.
-	(type_stack::follow_type_instance_flags): Likewise.
-	(type_stack::follow_types): Likewise.  Merge type-following code.
-	* c-exp.y (RESTRICT, ATOMIC): New tokens.
-	(space_identifier, cv_with_space_id)
-	(const_or_volatile_or_space_identifier_noopt)
-	(const_or_volatile_or_space_identifier): Remove.
-	(single_qualifier, qualifier_seq_noopt, qualifier_seq): New
-	rules.
-	(ptr_operator, typebase): Update.
-	(enum token_flag) <FLAG_C>: New constant.
-	(ident_tokens): Add "restrict", "__restrict__", "__restrict", and
-	"_Atomic".
-	(lex_one_token): Handle FLAG_C.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* m68k-bsd-nat.c (fetch_registers): New variable lwp and pass
-	it to the ptrace call.
-	* m68k-bsd-nat.c (store_registers): Likewise.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* m68k-bsd-nat.c (m68kbsd_supply_gregset): Change type of regs to
-	gdb_byte *.
-	* m68k-bsd-nat.c (m68kbsd_supply_fpregset): Likewise.
-	* m68k-bsd-nat.c (m68kbsd_collect_gregset): Likewise.
-	* m68k-bsd-nat.c (m68kbsd_supply_pcb): Cast &tmp to gdb_byte *.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* m68k-bsd-nat.c (m68k_bsd_nat_target): Inherit from
-	nbsd_nat_target instead of inf_ptrace_target.
-	* m68k-bsd-nat.c: Include "nbsd-nat.h", as we are now using
-	nbsd_nat_target.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* m68k-bsd-nat.c: Define _KERNTYPES to get the declaration of
-	register_t.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* alpha-bsd-nat.c (fetch_registers): New variable lwp and pass
-	it to the ptrace call.
-	* alpha-bsd-nat.c (store_registers): Likewise.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* alpha-bsd-nat.c: Remove <sys/procfs.h> and "gregset.h" from
-	includes.
-	* alpha-bsd-nat.c (gregset_t, fpregset_t): Remove.
-	* alpha-bsd-nat.c (supply_gregset, fill_gregset, supply_fpregset,
-	fill_fpregset): Likewise.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* alpha-bsd-nat.c (alpha_netbsd_nat_target): Inherit from
-	nbsd_nat_target instead of inf_ptrace_target.
-	* alpha-bsd-nat.c: Include "nbsd-nat.h", as we are now using
-	nbsd_nat_target.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* alpha-bsd-nat.c: Define _KERNTYPES to get the declaration of
-	register_t.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* arm-nbsd-nat.c (fetch_register): New variable lwp and pass
-	it to the ptrace call.
-	* arm-nbsd-nat.c (fetch_fp_register): Likewise.
-	* arm-nbsd-nat.c (fetch_fp_regs): Likewise.
-	* arm-nbsd-nat.c (store_register): Likewise.
-	* arm-nbsd-nat.c (store_regs): Likewise.
-	* arm-nbsd-nat.c (store_fp_register): Likewise.
-	* arm-nbsd-nat.c (store_fp_regs): Likewise.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* arm-nbsd-nat.c (arm_netbsd_nat_target): Inherit from
-	nbsd_nat_target instead of inf_ptrace_target.
-	* arm-nbsd-nat.c: Include "nbsd-nat.h", as we are now using
-	nbsd_nat_target.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* x86-bsd-nat.c (x86bsd_dr_get): New variable lwp and pass
-	it to the ptrace call.
-	* x86-bsd-nat.c (x86bsd_dr_set): Likewise.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* vax-bsd-nat.c (vaxbsd_supply_gregset): New variable lwp and pass
-	it to the ptrace call.
-	* vax-bsd-nat.c (vaxbsd_collect_gregset): Likewise.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* vax-bsd-nat.c (vaxbsd_supply_gregset): Cast gregs to const
-	gdb_byte *.
-	* vax-bsd-nat.c (vaxbsd_collect_gregset): Cast gregs to void *.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* vax-bsd-nat.c (vax_bsd_nat_target): Inherit from nbsd_nat_target
-	instead of inf_ptrace_target.
-	* vax-bsd-nat.c: Include "nbsd-nat.h", as we are now using
-	nbsd_nat_target.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* mips-nbsd-nat.c: Define _KERNTYPES to get the declaration of
-	register_t.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* ppc-nbsd-nat.c: Define _KERNTYPES to get the declaration of
-	register_t.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* vax-bsd-nat.c: Define _KERNTYPES to get the declaration of
-	register_t.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* value.h (val_print): Don't declare.
-	* valprint.h (val_print_array_elements)
-	(val_print_scalar_formatted, generic_val_print): Don't declare.
-	* valprint.c (generic_val_print_array): Take a struct value.
-	(generic_val_print_ptr, generic_val_print_memberptr)
-	(generic_val_print_bool, generic_val_print_int)
-	(generic_val_print_char, generic_val_print_complex)
-	(generic_val_print): Remove.
-	(generic_value_print): Update.
-	(do_val_print): Remove unused parameters.  Don't call
-	la_val_print.
-	(val_print): Remove.
-	(common_val_print): Update.  Don't call value_check_printable.
-	(val_print_scalar_formatted, val_print_array_elements): Remove.
-	* rust-lang.c (rust_val_print): Remove.
-	(rust_language_defn): Update.
-	* p-valprint.c (pascal_val_print): Remove.
-	(pascal_value_print_inner): Update.
-	(pascal_object_print_val_fields, pascal_object_print_val):
-	Remove.
-	(pascal_object_print_static_field): Update.
-	* p-lang.h (pascal_val_print): Don't declare.
-	* p-lang.c (pascal_language_defn): Update.
-	* opencl-lang.c (opencl_language_defn): Update.
-	* objc-lang.c (objc_language_defn): Update.
-	* m2-valprint.c (m2_print_unbounded_array, m2_val_print): Remove.
-	* m2-lang.h (m2_val_print): Don't declare.
-	* m2-lang.c (m2_language_defn): Update.
-	* language.h (struct language_defn) <la_val_print>: Remove.
-	* language.c (unk_lang_value_print_inner): Rename.  Change
-	argument types.
-	(unknown_language_defn, auto_language_defn): Update.
-	* go-valprint.c (go_val_print): Remove.
-	* go-lang.h (go_val_print): Don't declare.
-	* go-lang.c (go_language_defn): Update.
-	* f-valprint.c (f_val_print): Remove.
-	* f-lang.h (f_value_print): Don't declare.
-	* f-lang.c (f_language_defn): Update.
-	* d-valprint.c (d_val_print): Remove.
-	* d-lang.h (d_value_print): Don't declare.
-	* d-lang.c (d_language_defn): Update.
-	* cp-valprint.c (cp_print_value_fields)
-	(cp_print_value_fields_rtti, cp_print_value): Remove.
-	(cp_print_static_field): Update.
-	* c-valprint.c (c_val_print_array, c_val_print_ptr)
-	(c_val_print_struct, c_val_print_union, c_val_print_int)
-	(c_val_print_memberptr, c_val_print): Remove.
-	* c-lang.h (c_val_print_array, cp_print_value_fields)
-	(cp_print_value_fields_rtti): Don't declare.
-	* c-lang.c (c_language_defn, cplus_language_defn)
-	(asm_language_defn, minimal_language_defn): Update.
-	* ada-valprint.c (ada_val_print_ptr, ada_val_print_num): Remove.
-	(ada_val_print_enum): Take a struct value.
-	(ada_val_print_flt, ada_val_print_array, ada_val_print_1)
-	(ada_val_print): Remove.
-	(ada_value_print_1): Update.
-	(printable_val_type): Remove.
-	* ada-lang.h (ada_val_print): Don't declare.
-	* ada-lang.c (ada_language_defn): Update.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (do_val_print): Update.
-	* python/python-internal.h (gdbpy_apply_val_pretty_printer): Take
-	a struct value.
-	(value_to_value_object_no_release): Declare.
-	* python/py-value.c (value_to_value_object_no_release): New
-	function.
-	* python/py-prettyprint.c (gdbpy_apply_val_pretty_printer): Take a
-	struct value.
-	* guile/scm-value.c (vlscm_scm_from_value_no_release): New
-	function.
-	* guile/scm-pretty-print.c (gdbscm_apply_val_pretty_printer): Take
-	a struct value.
-	* guile/guile-internal.h (vlscm_scm_from_value_no_release):
-	Declare.
-	(gdbscm_apply_val_pretty_printer): Take a struct value.
-	* extension.h (apply_ext_lang_val_pretty_printer): Take a struct
-	value.
-	* extension.c (apply_ext_lang_val_pretty_printer): Take a struct
-	value.
-	* extension-priv.h (struct extension_language_ops)
-	<apply_val_pretty_printer>: Take a struct value.
-	* cp-valprint.c (cp_print_value): Create a struct value.
-	(cp_print_value): Update.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (print_field_values): Call common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (val_print_packed_array_elements): Remove
-	bitoffset and val parameters.  Call common_val_print.
-	(ada_val_print_string): Remove offset, address, and original_value
-	parameters.
-	(ada_val_print_array): Update.
-	(ada_value_print_array): New function.
-	(ada_value_print_1): Call it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (ada_value_print): Use common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (ada_val_print_ref): Use common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (ada_value_print_num): New function.
-	(ada_value_print_1): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (ada_value_print_1) <TYPE_CODE_FLT>: Rewrite.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (ada_value_print_ptr): New function.
-	(ada_value_print_1): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (ada_val_print_gnat_array): Take a struct value;
-	call common_val_print.
-	(ada_val_print_1): Update.
-	(ada_value_print_1): New function.
-	(ada_value_print_inner): Rewrite.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* cp-valprint.c (cp_print_value_fields): Update.
-	(cp_print_value): New function.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* m2-valprint.c (m2_value_print_inner): Use
-	cp_print_value_fields.
-	* cp-valprint.c	(cp_print_value_fields): New function.
-	* c-valprint.c (c_value_print_struct): New function.
-	(c_value_print_inner): Use c_value_print_struct.
-	* c-lang.h (cp_print_value_fields): Declare.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* c-valprint.c (c_value_print_array): New function.
-	(c_value_print_inner): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* c-valprint.c (c_value_print_memberptr): New function.
-	(c_value_print_inner): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* c-valprint.c (c_value_print_int): New function.
-	(c_value_print_inner): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* c-valprint.c (c_value_print_ptr): New function.
-	(c_value_print_inner): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* c-valprint.c (c_value_print_inner): Rewrite.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_value_print_complex): New function.
-	(generic_value_print): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_val_print_float): Don't call
-	val_print_scalar_formatted.
-	(generic_val_print, generic_value_print): Update.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_value_print_char): New function
-	(generic_value_print): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_value_print_int): New function.
-	(generic_value_print): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_value_print_bool): New function.
-	(generic_value_print): Use it.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_val_print_func): Simplify.
-	(generic_val_print, generic_value_print): Update.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_val_print_flags): Remove.
-	(generic_val_print, generic_value_print): Update.
-	(val_print_type_code_flags): Add original_value parameter.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_val_print): Update.
-	(generic_value_print): Update.
-	* valprint.c (generic_val_print_enum): Don't call
-	val_print_scalar_formatted.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_value_print): Call generic_value_print_ptr.
-	* valprint.c (generic_value_print_ptr): New function.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_value_print): Rewrite.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* p-valprint.c (pascal_object_print_value_fields)
-	(pascal_object_print_value): New functions.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* p-valprint.c (pascal_value_print_inner): Rewrite.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* f-valprint.c (f_value_print_innner): Rewrite.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* m2-valprint.c (m2_print_unbounded_array): New overload.
-	(m2_print_unbounded_array): Update.
-	(m2_print_array_contents): Take a struct value.
-	(m2_value_print_inner): Rewrite.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* d-valprint.c (dynamic_array_type): Call d_value_print_inner.
-	(d_value_print_inner): New function.
-	* d-lang.h (d_value_print_inner): Declare.
-	* d-lang.c (d_language_defn): Use d_value_print_inner.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* go-valprint.c (go_value_print_inner): New function.
-	* go-lang.h (go_value_print_inner): Declare.
-	* go-lang.c (go_language_defn): Use go_value_print_inner.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* rust-lang.c (val_print_struct, rust_print_enum): Use the value
-	API.
-	(rust_val_print): Rewrite.
-	(rust_value_print_inner): New function, from rust_val_print.
-	(rust_language_defn): Use rust_value_print_inner.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* ada-valprint.c (ada_value_print_inner): New function.
-	* ada-lang.h (ada_value_print_inner): Declare.
-	* ada-lang.c (ada_language_defn): Use ada_value_print_inner.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* f-valprint.c (f_value_print_innner): New function.
-	* f-lang.h (f_value_print_innner): Declare.
-	* f-lang.c (f_language_defn): Use f_value_print_innner.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* p-valprint.c (pascal_value_print_inner): New function.
-	* p-lang.h (pascal_value_print_inner): Declare.
-	* p-lang.c (pascal_language_defn): Use pascal_value_print_inner.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* m2-valprint.c (m2_value_print_inner): New function.
-	* m2-lang.h (m2_value_print_inner): Declare.
-	* m2-lang.c (m2_language_defn): Use m2_value_print_inner.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* opencl-lang.c (opencl_language_defn): Use c_value_print_inner.
-	* objc-lang.c (objc_language_defn): Use c_value_print_inner.
-	* c-valprint.c (c_value_print_inner): New function.
-	* c-lang.h (c_value_print_inner): Declare.
-	* c-lang.c (c_language_defn, cplus_language_defn)
-	(asm_language_defn, minimal_language_defn): Use
-	c_value_print_inner.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* p-valprint.c (pascal_object_print_value_fields): Now static.
-	* p-lang.h (pascal_object_print_value_fields): Don't declare.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* c-valprint.c (c_val_print_array): Simplify.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (value_print_array_elements): New function.
-	* valprint.h (value_print_array_elements): Declare.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* printcmd.c (print_formatted): Use value_print_scalar_formatted.
-	* mips-tdep.c (mips_print_register): Use
-	value_print_scalar_formatted.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.h (value_print_scalar_formatted): Declare.
-	* valprint.c (value_print_scalar_formatted): New function.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.h (generic_value_print): Declare.
-	* valprint.c (generic_value_print): New function.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (do_val_print): Call la_value_print_inner, if
-	available.
-	* rust-lang.c (rust_language_defn): Update.
-	* p-lang.c (pascal_language_defn): Update.
-	* opencl-lang.c (opencl_language_defn): Update.
-	* objc-lang.c (objc_language_defn): Update.
-	* m2-lang.c (m2_language_defn): Update.
-	* language.h (struct language_defn) <la_value_print_inner>: New
-	member.
-	* language.c (unknown_language_defn, auto_language_defn): Update.
-	* go-lang.c (go_language_defn): Update.
-	* f-lang.c (f_language_defn): Update.
-	* d-lang.c (d_language_defn): Update.
-	* c-lang.c (c_language_defn, cplus_language_defn)
-	(asm_language_defn, minimal_language_defn): Update.
-	* ada-lang.c (ada_language_defn): Update.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* c-valprint.c (c_value_print): Use common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* cp-valprint.c (cp_print_static_field): Use common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* f-valprint.c (f77_print_array_1, f_val_print): Use
-	common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* riscv-tdep.c (riscv_print_one_register_info): Use
-	common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* mi/mi-main.c (output_register): Use common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* infcmd.c (default_print_one_register_info): Use
-	common_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.h (common_val_print_checked): Declare.
-	* valprint.c (common_val_print_checked): New function.
-	* stack.c (print_frame_arg): Use common_val_print_checked.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (do_val_print): New function, from val_print.
-	(val_print): Use do_val_print.
-	(common_val_print): Use do_val_print.
-
-2020-03-13  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (value_print): Use scoped_value_mark.
-
-2020-03-13  Tom de Vries  <tdevries@suse.de>
-
-	PR symtab/25646
-	* psymtab.c (partial_symtab::partial_symtab): Don't set
-	globals_offset and statics_offset.  Push element onto
-	current_global_psymbols and current_static_psymbols stacks.
-	(concat): New function.
-	(end_psymtab_common): Set globals_offset and statics_offset.  Pop
-	element from current_global_psymbols and current_static_psymbols
-	stacks.  Concat popped elements to global_psymbols and
-	static_symbols.
-	(add_psymbol_to_list): Use current_global_psymbols and
-	current_static_psymbols stacks.
-	* psymtab.h (class psymtab_storage): Add current_global_psymbols and
-	current_static_psymbols fields.
-
-2020-03-12  Christian Biesinger  <cbiesinger@google.com>
-
-	* corelow.c (sniff_core_bfd): Remove.
-	(class core_target) <m_core_vec>: Remove.
-	(core_target::core_target): Update.
-	(core_file_fns): Remove.
-	(deprecated_add_core_fns): Remove.
-	(default_core_sniffer): Remove.
-	(sniff_core_bfd): Remove.
-	(default_check_format): Remove.
-	(gdb_check_format): Remove.
-	(core_target_open): Update.
-	(core_target::get_core_register_section): Update.
-	(get_core_registers_cb): Update.
-	(core_target::fetch_registers): Update.
-	* gdbcore.h (struct core_fns): Remove.
-	(deprecated_add_core_fns): Remove.
-	(default_core_sniffer): Remove.
-	(default_check_format): Remove.
-
-2020-03-12  Tom Tromey  <tom@tromey.com>
-
-	* arm-tdep.c (struct arm_mapping_symbol) <value>: Now a
-	CORE_ADDR.
-	(struct arm_exidx_entry) <addr>: Now a CORE_ADDR.
-
-2020-03-12  Tom Tromey  <tom@tromey.com>
-
-	* remote.c (remote_target::download_tracepoint)
-	(remote_target::enable_tracepoint)
-	(remote_target::disable_tracepoint): Use phex, not sprintf_vma.
-	* breakpoint.c (print_recreate_masked_watchpoint): Use phex, not
-	sprintf_vma.
-
-2020-03-12  Tom Tromey  <tom@tromey.com>
-
-	* symfile-mem.c: Update CORE_ADDR size assert.
-
-2020-03-12  Simon Marchi  <simon.marchi@efficios.com>
-
-	* selftest.m4: Move to gdbsupport/.
-	* acinclude.m4: Update path to selftest.m4.
-
-2020-03-12  Simon Marchi  <simon.marchi@efficios.com>
-
-	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Rename to...
-	(SELFTESTS_SRCS): ... this.  Add disasm-selftests.c,
-	gdbarch-selfselftests.c and selftest-arch.c.
-	(SUBDIR_UNITTESTS_OBS): Rename to...
-	(SELFTESTS_OBS): ... this.
-	(COMMON_SFILES): Remove disasm-selftests.c and
-	gdbarch-selftests.c.
-	* configure.ac: Don't add selftest-arch.{c,o} to
-	CONFIG_{SRCS,OBS}.
-	* disasm-selftests.c, gdbarch-selftests.c: Remove GDB_SELF_TEST
-	preprocessor conditions.
-
-2020-03-12  Simon Marchi  <simon.marchi@efficios.com>
-
-	* configure.ac: Don't source bfd/development.sh.
-	* selftest.m4: Modify comment.
-	* configure: Re-generate.
-
-2020-03-12  Simon Marchi  <simon.marchi@efficios.com>
-
-	* selftest.m4 (GDB_AC_SELFTEST): Error out if $development is
-	not "true" or "false".
-	* configure: Re-generate.
-
-2020-03-12  Christian Biesinger  <cbiesinger@google.com>
-
-	* Makefile.in (HFILES_NO_SRCDIR): Add new arm-nbsd-tdep.h file.
-	* arm-nbsd-nat.c (arm_supply_gregset): Moved to arm-nbsd-tdep and
-	renamed to arm_nbsd_supply_gregset.
-	(fetch_register): Update to call arm_nbsd_supply_gregset.
-	(fetch_regs): Remove in favor of fetch_register with a -1 regno.
-	(arm_netbsd_nat_target::fetch_registers): Update.
-	(fetch_elfcore_registers): Removed.
-	(_initialize_arm_netbsd_nat): Removed call to deprecated_add_core_fns.
-	* arm-nbsd-tdep.c (struct arm_nbsd_reg): New struct.
-	(arm_nbsd_supply_gregset): Moved from arm-nbsd-nat.c and updated to
-	not require NetBSD system headers.
-	(arm_nbsd_regset): New struct.
-	(arm_nbsd_iterate_over_regset_sections): New function.
-	(arm_netbsd_init_abi_common): Updated to call
-	set_gdbarch_iterate_over_regset_sections.
-	* arm-nbsd-tdep.h: New file.
-
-2020-03-11  Kevin Buettner  <kevinb@redhat.com>
-
-	* symtab.c (find_pc_sect_line): Add check which prevents infinite
-	recursion.
-	
-2020-03-11  Simon Marchi  <simon.marchi@efficios.com>
-
-	* configure: Re-generate.
-
-2020-03-11  Tom Tromey  <tromey@adacore.com>
-
-	* ada-typeprint.c (print_choices): Fix comment.
-
-2020-03-11  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* buildsyms.c (buildsym_compunit::record_line): Avoid accessing
-	previous item in the list, when the list has no items.
-
-2020-03-11  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2/loc.c (dwarf2_evaluate_property): Handle NULL frame in
-	PROP_LOCLIST handling code.
-
-2020-03-10  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* buildsym-legacy.c (record_line): Pass extra parameter to
-	record_line.
-	* buildsym.c (buildsym_compunit::record_line): Take an extra
-	parameter, reduce duplication in the line table, and record the
-	is_stmt flag in the line table.
-	* buildsym.h (buildsym_compunit::record_line): Add extra
-	parameter.
-	* disasm.c (do_mixed_source_and_assembly_deprecated): Ignore
-	non-statement lines.
-	* dwarf2/read.c (dwarf_record_line_1): Add extra parameter, pass
-	this to the symtab builder.
-	(dwarf_finish_line): Pass extra parameter to dwarf_record_line_1.
-	(lnp_state_machine::record_line): Pass a suitable is_stmt flag
-	through to dwarf_record_line_1.
-	* infrun.c (process_event_stop_test): When stepping, don't stop at
-	a non-statement instruction, and only refresh the step info when
-	we land in the middle of a line's range.  Also add an extra
-	comment.
-	* jit.c (jit_symtab_line_mapping_add_impl): Initialise is_stmt
-	field.
-	* record-btrace.c (btrace_find_line_range): Only record lines
-	marked as is-statement.
-	* stack.c (frame_show_address): Show the frame address if we are
-	in a non-statement sal.
-	* symmisc.c (dump_symtab_1): Print the is_stmt flag.
-	(maintenance_print_one_line_table): Print a header for the is_stmt
-	column, and include is_stmt information in the output.
-	* symtab.c (find_pc_sect_line): Find lines marked as statements in
-	preference to non-statements.
-	(find_pcs_for_symtab_line): Prefer is-statement entries.
-	(find_line_common): Likewise.
-	* symtab.h (struct linetable_entry): Add is_stmt field.
-	(struct symtab_and_line): Likewise.
-	* xcoffread.c (arrange_linetable): Initialise is_stmt field when
-	arranging the line table.
-
-2020-03-07  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2/read.c (read_typedef): Treat anonymous typedef as forwarder
-	DIE.
-
-2020-03-07  Tom Tromey  <tom@tromey.com>
-
-	* valops.c (value_literal_complex): Remove obsolete comment.
-	* gdbtypes.h (enum type_code) <TYPE_CODE_FLT>: Remove obsolete
-	comment.
-
-2020-03-06  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* infrun.h: Forward-declare thread_info.
-	(set_step_info): Add thread_info parameter, add doc.
-	* infrun.c (set_step_info): Add thread_info parameter, move doc
-	to header.
-	* infrun.c (process_event_stop_test): Pass thread to
-	set_step_info call.
-	* infcmd.c (set_step_frame): Add thread_info pointer, pass it to
-	set_step_info.
-	(prepare_one_step): Add thread_info parameter, pass it to
-	set_step_frame and prepare_one_step (recursive) call.
-	(step_1): Pass thread to prepare_one_step call.
-	(step_command_fsm::should_stop): Pass thread to
-	prepare_one_step.
-	(until_next_fsm): Pass thread to set_step_frame call.
-	(finish_command): Pass thread to set_step_info call.
-
-2020-03-06  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-tdep.c (windows_solib_create_inferior_hook):
-	Check if inferior is running.
-
-2020-03-06  Tom de Vries  <tdevries@suse.de>
-
-	* NEWS: Fix "the the".
-	* ctfread.c: Same.
-
-2020-03-06  Tom de Vries  <tdevries@suse.de>
-
-	* psymtab.c (psymtab_to_symtab): Don't print "done.".
-
-2020-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* .dir-locals.el: Add a comment referencing the other copies of
-	this file.
-
-2020-03-05  John Baldwin  <jhb@FreeBSD.org>
-
-	* fbsd-tdep.c (fbsd_make_corefile_notes): Use std::string for
-	psargs.
-
-2020-03-05  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* .gitattributes: New file.
-
-2020-03-04  Tom Tromey  <tom@tromey.com>
-
-	* symmisc.c (print_symbol_bcache_statistics)
-	(print_objfile_statistics): Update.
-	* symfile.c (allocate_symtab): Use intern.
-	* psymtab.c (partial_symtab::partial_symtab): Use intern.
-	* objfiles.h (struct objfile_per_bfd_storage) <filename_cache,
-	macro_cache>: Remove.
-	<string_cache>: New member.
-	(struct objfile) <intern>: New methods.
-	* elfread.c (elf_symtab_read): Use intern.
-	* dwarf2/read.c (fixup_go_packaging): Intern package name.
-	(dwarf2_compute_name, dwarf2_physname)
-	(create_dwo_unit_in_dwp_v1, create_dwo_unit_in_dwp_v2): Intern
-	names.
-	(guess_partial_die_structure_name): Update.
-	(partial_die_info::fixup): Intern name.
-	(dwarf2_canonicalize_name): Change parameter to objfile.  Intern
-	name.
-	(dwarf2_name): Intern name.  Update.
-	* buildsym.c (buildsym_compunit::get_macro_table): Use
-	string_cache.
-
-2020-03-04  Tom Tromey  <tom@tromey.com>
-
-	* jit.c (bfd_open_from_target_memory): Make "target" const.
-	* corefile.c (gnutarget): Now const.
-	* gdbcore.h (gnutarget): Now const.
-
-2020-03-04  Hannes Domani  <ssbssa@yahoo.de>
-
-	* NEWS: Mention support for WOW64 processes.
-	* amd64-windows-nat.c (amd64_mappings): Rename and remove static.
-	(amd64_windows_segment_register_p): Remove static.
-	(_initialize_amd64_windows_nat): Update.
-	* configure.nat <windows> (NATDEPFILES): Add i386-windows-nat.o.
-	* i386-windows-nat.c (context_offset): Update.
-	(i386_mappings): Rename and remove static.
-	(i386_windows_segment_register_p): Remove static.
-	(_initialize_i386_windows_nat): Update.
-	* windows-nat.c (STATUS_WX86_BREAKPOINT): New macro.
-	(STATUS_WX86_SINGLE_STEP): New macro.
-	(EnumProcessModulesEx): New macro.
-	(Wow64SuspendThread): New macro.
-	(Wow64GetThreadContext): New macro.
-	(Wow64SetThreadContext): New macro.
-	(Wow64GetThreadSelectorEntry): New macro.
-	(windows_set_context_register_offsets): Add static.
-	(windows_set_segment_register_p): Likewise.
-	(windows_add_thread): Adapt for WOW64 processes.
-	(windows_fetch_one_register): Likewise.
-	(windows_nat_target::fetch_registers): Likewise.
-	(windows_store_one_register): Likewise.
-	(display_selector): Likewise.
-	(display_selectors): Likewise.
-	(handle_exception): Likewise.
-	(windows_continue): Likewise.
-	(windows_nat_target::resume): Likewise.
-	(windows_add_all_dlls): Likewise.
-	(do_initial_windows_stuff): Likewise.
-	(windows_nat_target::attach): Likewise.
-	(windows_get_exec_module_filename): Likewise.
-	(windows_nat_target::create_inferior): Likewise.
-	(windows_xfer_siginfo): Likewise.
-	(_initialize_loadable): Initialize Wow64SuspendThread,
-	Wow64GetThreadContext, Wow64SetThreadContext,
-	Wow64GetThreadSelectorEntry and EnumProcessModulesEx.
-	* windows-nat.h (windows_set_context_register_offsets):
-	Remove declaration.
-	(windows_set_segment_register_p): Likewise.
-	(i386_windows_segment_register_p): Add declaration.
-	(amd64_windows_segment_register_p): Likewise.
-
-2020-03-04  Luis Machado  <luis.machado@linaro.org>
-
-	Revert aa66aac47b4dd38f9524ddb5546c08cc09930d37 due to regressions
-	in "info registers" for AArch64/ARM.
-
-	The change caused "info registers" to not print GPR's.
-
-	gdb/ChangeLog:
-
-	2020-02-01  Shahab Vahedi  <shahab@synopsys.com>
-
-	* target-descriptions.c (tdesc_register_in_reggroup_p): Return 0
-	when reg->group is empty and reggroup is not.
-
-2020-03-03  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/frame.c (struct dwarf2_frame_cache)
-	<checked_tailcall_bottom, entry_cfa_sp_offset,
-	entry_cfa_sp_offset_p>: Remove members.
-	(dwarf2_frame_cache): Call dwarf2_tailcall_sniffer_first.
-	(dwarf2_frame_prev_register): Don't call
-	dwarf2_tailcall_sniffer_first.
-	(dwarf2_append_unwinders): Don't append tailcall unwinder.
-	* frame-unwind.c (add_unwinder): New fuction.
-	(frame_unwind_init): Use it.  Add tailcall unwinder.
-
-2020-03-03  Andrew Burgess  <andrew.burgess@embecosm.com>
-	    Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
-
-	* f-valprint.c (f_val_print): Handle TYPE_CODE_BOOL, any non-zero
-	value should be printed as true.
-
-2020-03-03  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-tdep.c (windows_solib_create_inferior_hook): New function.
-	(windows_init_abi): Set and use windows_so_ops.
-
-2020-03-03  Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* printcmd.c (print_c_string): Check also for TYPE_CODE_PTR
-	when verifying if dealing with a convenience variable.
-
-2020-03-03  Luis Machado  <luis.machado@linaro.org>
-
-	* auxv.c (default_print_auxv_entry): Add new AUXV entries.
-
-2020-03-02  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* infrun.c (gdbarch_supports_displaced_stepping): New.
-	(use_displaced_stepping): Break up conditions in smaller pieces.
-	Use gdbarch_supports_displaced_stepping.
-	(displaced_step_prepare_throw): Use
-	gdbarch_supports_displaced_stepping.
-
-2020-03-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* NEWS: Mention new behaviour of the history filename.
-	* top.c (write_history_p): Add comment.
-	(show_write_history_p): Add header comment, give a different
-	message when history writing is on, but the history filename is
-	empty.
-	(history_filename): Add comment.
-	(history_filename_empty): New function.
-	(show_history_filename): Add header comment, give a different
-	message when the filename is empty.
-	(init_history): Compare history_filename against nullptr, and only
-	read history if the filename is not empty.
-	(set_history_filename): Add header comment, and only make
-	non-empty filenames absolute.
-	(init_main): Make the filename argument to 'set history filename'
-	optional.
-
-2020-03-02  Christian Biesinger  <cbiesinger@google.com>
-
-	* arm-nbsd-nat.c (arm_supply_fparegset): Rename to...
-	(arm_supply_vfpregset): ...this, and update to use VFP registers.
-	(fetch_fp_register): Update.
-	(fetch_fp_regs): Update.
-	(store_fp_register): Update.
-	(store_fp_regs): Update.
-	(arm_netbsd_nat_target::read_description): New function.
-	(fetch_elfcore_registers): Update.
-
-2020-03-02  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* remote.c (remote_target::remote_parse_stop_reply): Don't use the
-	general_thread if the stop reply is missing a thread-id.
-	(remote_target::process_stop_reply): Use the first non-exited
-	thread if the target didn't pass a thread-id.
-	* infrun.c (do_target_wait): Move call to
-	switch_to_inferior_no_thread to ....
-	(do_target_wait_1): ... here.
-
-2020-02-29  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* debuginfod-support.c: Include defs.h first.
-
-2020-02-28  Tom de Vries  <tdevries@suse.de>
-
-	* symfile.c (set_initial_language): Use default language for lookup.
-
-2020-02-28  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (cutu_reader::init_tu_and_read_dwo_dies): Remove
-	reader variable, pass `this` to read_cutu_die_from_dwo.
-
-2020-02-27  Aaron Merey  <amerey@redhat.com>
-
-	* source.c (open_source_file): Check for nullptr when computing
-	srcpath.
-
-2020-02-27  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/read.c (struct field_info) <nfields>: Now a method, not a
-	member.
-	(dwarf2_add_field): Don't update nfields.
-	(dwarf2_attach_fields_to_type, process_structure_scope): Update.
-
-2020-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdbtypes.c (create_array_type_with_stride): Use std::abs not
-	abs.
-
-2020-02-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (struct dwarf2_include_psymtab): New.
-	(dwarf2_create_include_psymtab): Use dwarf2_include_psymtab.
-	(dwarf2_psymtab::expand_psymtab, dwarf2_psymtab::readin_p)
-	(dwarf2_psymtab::get_compunit_symtab): Remove null checks for
-	per_cu_data.
-
-2020-02-26  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/index-write.c (psym_index_map): Change type.
-	(add_address_entry_worker, write_one_signatured_type)
-	(recursively_count_psymbols, recursively_write_psymbols)
-	(class debug_names, psyms_seen_size, write_gdbindex)
-	(write_debug_names): Use partial_symtab, not dwarf2_psymtab.
-
-2020-02-26  Aaron Merey  <amerey@redhat.com>
-
-	* Makefile.in: Handle optional debuginfod support.
-	* NEWS: Update.
-	* README: Add --with-debuginfod summary.
-	* config.in: Regenerate.
-	* configure: Regenerate.
-	* configure.ac: Handle optional debuginfod support.
-	* debuginfod-support.c: debuginfod helper functions.
-	* debuginfod-support.h: Ditto.
-	* doc/gdb.texinfo: Add --with-debuginfod to configure options
-	summary.
-	* dwarf2/read.c (dwarf2_get_dwz_file): Query debuginfod servers
-	when a dwz file cannot be found.
-	* elfread.c (elf_symfile_read): Query debuginfod servers when a
-	debuginfo file cannot be found.
-	* source.c (open_source_file): Query debuginfod servers when a
-	source file cannot be found.
-	* top.c (print_gdb_configuration): Include
-	--{with,without}-debuginfod in the output.
-
-2020-02-26  Jérémie Galarneau  <jeremie.galarneau@efficios.com>
-
-	* thread.c (thr_try_catch_cmd): Print thread name.
-
-2020-02-26  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/loc.h (dwarf2_fetch_die_loc_sect_off,
-	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
-	dwarf2_fetch_die_type_sect_off): Move to...
-	* dwarf2/read.h (dwarf2_fetch_die_loc_sect_off,
-	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
-	dwarf2_fetch_die_type_sect_off): ... here.
-	* dwarf2/read.c (dwarf2_fetch_die_loc_sect_off,
-	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
-	dwarf2_fetch_die_type_sect_off): Move doc to header file.
-
-2020-02-26  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/25603
-	* symfile.c (set_initial_language): Exit-early if
-	language_mode == language_mode_manual.
-
-2020-02-25  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* dwarf2/loc.h (dwarf2_read_addr_index): Move...
-	* dwarf2/read.h (dwarf2_read_addr_index): ... here.
-	* dwarf2/read.c (dwarf2_read_addr_index): Move doc to header.
-
-2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* gdbtypes.c (create_array_type_with_stride): Handle negative
-	array strides.
-	* valarith.c (value_subscripted_rvalue): Likewise.
-
-2020-02-25  Luis Machado  <luis.machado@linaro.org>
-
-	* aarch64-tdep.c (aarch64_vnv_type): Fix comment typo.
-
-2020-02-25  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* loc.h (dwarf2_get_die_type): Move to...
-	* read.h (dwarf2_get_die_type): ... here.
-	* read.c (dwarf2_get_die_type): Move doc to header.
-
-2020-02-25  Joel Brobecker  <brobecker@adacore.com>
-
-	* copypright.py (EXCLUDE_LIST): Add 'gnulib/config.in' and
-	'gnulib/Makefile.in' to the list.
-
-2020-02-24  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct type_unit_unshareable) <num_symtabs>:
-	Remove.
-	* dwarf2/read.c (dwarf2_cu::setup_type_unit_groups): Use
-	XOBNEWVEC.
-
-2020-02-24  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct dwarf2_per_cu_data) <type_unit_group_p>:
-	New method.
-	* dwarf2/read.c (IS_TYPE_UNIT_GROUP): Remove.
-	(dw2_do_instantiate_symtab, dw2_get_file_names)
-	(build_type_psymtab_dependencies, load_full_type_unit): Update.
-
-2020-02-24  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.c (dwarf2_build_psymtabs_hard): Use
-	make_scoped_restore.
-	(dwarf2_psymtab::read_symtab): Don't clear
-	reading_partial_symbols.
-
-2020-02-24  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/25592
-	* stack.c (iterate_over_block_locals): Handle LOC_CONST.
-
-2020-02-24  Tom de Vries  <tdevries@suse.de>
-
-	* tui/tui-layout.c (_initialize_tui_layout): Fix help messages for
-	commands layout next/prev/regs.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/loc.h (dwarf2_compile_expr_to_ax): Don't declare.
-	* dwarf2/loc.c (dwarf2_compile_expr_to_ax): Now static.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.h (TUI_DISASM_WIN): Cast to tui_disasm_window.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (_initialize_tui_win): Add usage text.
-	* tui/tui-stack.c (_initialize_tui_stack): Add usage text.
-	* tui/tui-regs.c (_initialize_tui_regs): Add usage text.
-	* tui/tui.c (_initialize_tui): Add usage text.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_set_focus_command)
-	(tui_set_win_height_command): Use error_no_arg.
-	(_initialize_tui_win): Update help text.
-	(FOCUS_USAGE, WIN_HEIGHT_USAGE): Don't define.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (extract_display_start_addr): Rewrite.
-	* tui/tui-disasm.h (struct tui_disasm_window)
-	<display_start_addr>: Declare.
-	* tui/tui-source.h (struct tui_source_window)
-	<display_start_addr>: Declare.
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<show_source_line, display_start_addr>: New methods.
-	<m_horizontal_offset, m_start_line_or_addr, m_gdbarch, m_content>:
-	Rename and move to protected section.
-	* tui/tui-winsource.c (tui_source_window_base::update_source_window)
-	(tui_source_window_base::do_erase_source_content): Update.
-	(tui_source_window_base::show_source_line): Now a method.
-	(tui_source_window_base::show_source_content)
-	(tui_source_window_base::tui_source_window_base)
-	(tui_source_window_base::rerender)
-	(tui_source_window_base::refill)
-	(tui_source_window_base::do_scroll_horizontal)
-	(tui_source_window_base::set_is_exec_point_at)
-	(tui_source_window_base::update_breakpoint_info)
-	(tui_source_window_base::update_exec_info): Update.
-	* tui/tui-source.c (tui_source_window::set_contents)
-	(tui_source_window::showing_source_p)
-	(tui_source_window::do_scroll_vertical)
-	(tui_source_window::location_matches_p)
-	(tui_source_window::line_is_displayed): Update.
-	(tui_source_window::display_start_addr): New method.
-	* tui/tui-disasm.c (tui_disasm_window::set_contents)
-	(tui_disasm_window::do_scroll_vertical)
-	(tui_disasm_window::location_matches_p): Update.
-	(tui_disasm_window::display_start_addr): New method.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* NEWS: Add entry for gdb.register_window_type.
-	* tui/tui-layout.h (window_factory): New typedef.
-	(tui_register_window): Declare.
-	* tui/tui-layout.c (saved_tui_windows): New global.
-	(tui_apply_current_layout): Use it.
-	(tui_register_window): New function.
-	* python/python.c (do_start_initialization): Call
-	gdbpy_initialize_tui.
-	(python_GdbMethods): Add "register_window_type" function.
-	* python/python-internal.h (gdbpy_register_tui_window)
-	(gdbpy_initialize_tui): Declare.
-	* python/py-tui.c: New file.
-	* Makefile.in (SUBDIR_PYTHON_SRCS): Add py-tui.c.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-io.c (do_tui_putc): Don't omit annotations.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_set_win_focus_to): Move to tui-data.c.
-	* tui/tui-data.h (tui_set_win_with_focus): Don't declare.
-	* tui/tui-data.c (tui_set_win_with_focus): Remove.
-	(tui_set_win_focus_to): Move from tui-win.c.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.c (make_standard_window, get_locator_window): New
-	functions.
-	(known_window_types): New global.
-	(tui_get_window_by_name): Reimplement.
-	(initialize_known_windows): New function.
-	(validate_window_name): Rewrite.
-	(_initialize_tui_layout): Call initialize_known_windows.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.h (enum tui_win_type) <LOCATOR_WIN, DATA_ITEM_WIN>:
-	Remove constants.
-	* tui/tui-winsource.h (struct tui_source_window_base)
-	<tui_source_window_base>: Remove parameter.
-	* tui/tui-winsource.c
-	(tui_source_window_base::tui_source_window_base): Remove
-	parameter.
-	(tui_source_window_base::refill): Update.
-	* tui/tui-stack.h (struct tui_locator_window)
-	<tui_locator_window>: Update.
-	* tui/tui-source.h (struct tui_source_window) <tui_source_window>:
-	Default the constructor.
-	* tui/tui-regs.h (struct tui_data_item_window)
-	<tui_data_item_window>: Default the constructor.
-	(struct tui_data_window) <tui_data_window>: Likewise.
-	* tui/tui-disasm.h (struct tui_disasm_window) <tui_disasm_window>:
-	Default the constructor.
-	* tui/tui-data.h (struct tui_gen_win_info) <tui_gen_win_info>:
-	Default the constructor.
-	<type>: Remove.
-	(struct tui_win_info) <tui_win_info>: Default the constructor.
-	* tui/tui-data.c (tui_win_info::tui_win_info): Remove.
-	* tui/tui-command.h (struct tui_cmd_window) <tui_cmd_window>:
-	Default the constructor.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.h (tui_make_all_invisible): Don't declare.
-	* tui/tui-wingeneral.c (tui_make_all_invisible): Remove.
-	* tui/tui-win.c (tui_resize_all): Don't call
-	tui_delete_invisible_windows.
-	* tui/tui-layout.c (tui_apply_current_layout): Delete windows when
-	done.
-	(tui_set_layout): Update.
-	(tui_add_win_to_layout): Don't call tui_delete_invisible_windows.
-	* tui/tui-data.h (tui_delete_invisible_windows): Don't declare.
-	* tui/tui-data.c (tui_delete_invisible_windows): Remove.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-win.c (tui_partial_win_by_name): Handle ambiguity
-	correctly.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-data.c (tui_next_win, tui_prev_win): Reimplement.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.h (struct tui_source_window_iterator)
-	<inner_iterator>: New etytypedef.
-	<tui_source_window_iterator>: Take "end" parameter.
-	<tui_source_window_iterator>: Take iterator.
-	<operator*, advance>: Update.
-	<m_iter>: Change type.
-	<m_end>: New field.
-	(struct tui_source_windows) <begin, end>: Update.
-	* tui/tui-layout.c (tui_windows): New global.
-	(tui_apply_current_layout): Clear tui_windows.
-	(tui_layout_window::apply): Update tui_windows.
-	* tui/tui-data.h (tui_windows): Declare.
-	(all_tui_windows): Now inline function.
-	(class tui_window_iterator, struct all_tui_windows): Remove.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	PR tui/17850:
-	* tui/tui-win.c (tui_gen_win_info::max_width): New method.
-	* tui/tui-layout.h (class tui_layout_base) <get_sizes>: Add
-	"height" argument.
-	(class tui_layout_window) <get_sizes>: Likewise.
-	(class tui_layout_split) <tui_layout_split>: Add "vertical"
-	argument.
-	<get_sizes>: Add "height" argument.
-	<m_vertical>: New field.
-	* tui/tui-layout.c (tui_layout_split::clone): Update.
-	(tui_layout_split::get_sizes): Add "height" argument.
-	(tui_layout_split::adjust_size, tui_layout_split::apply): Update.
-	(tui_new_layout_command): Parse "-horizontal".
-	(_initialize_tui_layout): Update help string.
-	(tui_layout_split::specification): Add "-horizontal" when needed.
-	* tui/tui-layout.c (tui_layout_window::get_sizes): Add "height"
-	argument.
-	* tui/tui-data.h (struct tui_gen_win_info) <max_width, min_width>:
-	New methods.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.h (enum tui_adjust_result): New.
-	(class tui_layout_base) <adjust_size>: Return tui_adjust_result.
-	(class tui_layout_window) <adjust_size>: Return
-	tui_adjust_result.  Rewrite.
-	(class tui_layout_split) <adjust_size>: Return tui_adjust_result.
-	* tui/tui-layout.c (tui_layout_split::adjust_size): Update.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.h (class tui_layout_split) <add_split>: Change
-	parameter and return types.
-	(class tui_layout_base) <specification>: Add "depth".
-	(class tui_layout_window) <specification>: Add "depth".
-	(class tui_layout_split) <specification>: Add "depth".
-	* tui/tui-layout.c (tui_layout_split::add_split): Change parameter
-	and return types.
-	(tui_new_layout_command): Parse sub-layouts.
-	(_initialize_tui_layout): Update help string.
-	(tui_layout_window::specification): Add "depth".
-	(add_layout_command): Update.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* NEWS: Add "tui new-layout" item.
-	* tui/tui-layout.c (add_layout_command): Return cmd_list_element.
-	Add new-layout command to help text.
-	(validate_window_name): New function.
-	(tui_new_layout_command): New function.
-	(_initialize_tui_layout): Register "new-layout".
-	(tui_layout_window::specification): New method.
-	(tui_layout_window::specification): New method.
-	* tui/tui-layout.h (class tui_layout_base) <specification>: New
-	method.
-	(class tui_layout_window) <specification>: New method.
-	(class tui_layout_split) <specification>: New method.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c (tui_enable): Call tui_set_initial_layout.
-	* tui/tui-win.c (window_name_completer): Update comment.
-	* tui/tui-layout.h (class tui_layout_base) <replace_window>:
-	Declare method.
-	(class tui_layout_window) <replace_window>: Likewise.
-	(class tui_layout_split) <replace_window>: Likewise.
-	(tui_set_layout): Don't declare.
-	(tui_set_initial_layout): Declare function.
-	* tui/tui-layout.c (layouts, applied_skeleton, src_regs_layout)
-	(asm_regs_layout): New globals.
-	(tui_current_layout, show_layout): Remove.
-	(tui_set_layout, tui_add_win_to_layout): Rewrite.
-	(find_layout, tui_apply_layout): New function.
-	(layout_completer): Remove.
-	(tui_next_layout): Reimplement.
-	(tui_next_layout_command): New function.
-	(tui_set_initial_layout, tui_prev_layout_command): New functions.
-	(tui_regs_layout): Reimplement.
-	(tui_regs_layout_command): New function.
-	(extract_display_start_addr): Rewrite.
-	(next_layout, prev_layout): Remove.
-	(tui_layout_window::replace_window): New method.
-	(tui_layout_split::replace_window): New method.
-	(destroy_layout): New function.
-	(layout_list): New global.
-	(add_layout_command): New function.
-	(initialize_layouts): Update.
-	(tui_layout_command): New function.
-	(_initialize_tui_layout): Install "layout" commands.
-	* tui/tui-data.h (enum tui_layout_type): Remove.
-	(tui_current_layout): Don't declare.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_reg_layout): Remove.
-	(tui_reg_command): Use tui_regs_layout.
-	* tui/tui-layout.h (tui_reg_command): Declare.
-	* tui/tui-layout.c (tui_reg_command): New function.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c (tui_rl_delete_other_windows): Call
-	tui_remove_some_windows.
-	* tui/tui-layout.h (class tui_layout_base) <remove_windows>:
-	Declare method.
-	(class tui_layout_window) <remove_windows>: New method.
-	(class tui_layout_split) <remove_windows>: Declare.
-	(tui_remove_some_windows): Declare.
-	* tui/tui-layout.c (tui_remove_some_windows): New function.
-	(tui_layout_split::remove_windows): New method.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c (tui_rl_change_windows): Call tui_next_layout.
-	* tui/tui-layout.h (tui_next_layout): Declare.
-	* tui/tui-layout.c (tui_next_layout): New function.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-regs.c (tui_data_window::display_registers_from): Use
-	correct coordinates.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-layout.h (tui_add_win_to_layout): Add comment.
-	* tui/tui-layout.c (tui_add_win_to_layout): Add assert.  Remove
-	DATA_WIN case.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-disasm.c (tui_get_low_disassembly_address): Use
-	TUI_DISASM_WIN, not tui_win_list.
-
-2020-02-22  Tom Tromey  <tom@tromey.com>
-
-	* valprint.c (generic_val_print_enum_1)
-	(val_print_type_code_flags): Style member names.
-	* rust-lang.c (val_print_struct, rust_print_enum)
-	(rust_print_struct_def, rust_internal_print_type): Style member
-	names.
-	* p-valprint.c (pascal_object_print_value_fields): Style member
-	names.  Only call fprintf_symbol_filtered for static members.
-	* m2-typeprint.c (m2_record_fields, m2_enum): Style member names.
-	* f-valprint.c (f_val_print): Style member names.
-	* f-typeprint.c (f_type_print_base): Style member names.
-	* cp-valprint.c (cp_print_value_fields): Style member names.  Only
-	call fprintf_symbol_filtered for static members.
-	(cp_print_class_member): Style member names.
-	* c-typeprint.c (c_print_type_1, c_type_print_base_1): Style
-	member names.
-	* ada-valprint.c (ada_print_scalar): Style enum names.
-	(ada_val_print_enum): Likewise.
-	* ada-typeprint.c (print_enum_type): Style enum names.
-
-2020-02-21  Tom Tromey  <tom@tromey.com>
-
-	* psympriv.h (struct partial_symtab): Update comment.
-
-2020-02-21  Tom Tromey  <tromey@adacore.com>
-
-	* mips-tdep.h (mips_pc_is_mips16, mips_pc_is_micromips): Parameter
-	type is CORE_ADDR.
-
-2020-02-21  Tom de Vries  <tdevries@suse.de>
-
-	PR gdb/25534
-	* psymtab.c (partial_symtab::read_dependencies): Don't read dependency
-	if dependencies[i]->user != NULL.
-
-2020-02-21  Ali Tamur  <tamur@google.com>
-
-	* dwarf2/read.c (dwarf2_name): Add null check.
-
-2020-02-20  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (dwarf2_find_containing_comp_unit): Use ">", not
-	">=", in binary search.
-	(dwarf2_find_containing_comp_unit): New overload.
-	(run_test): New self-test.
-	(_initialize_dwarf2_read): Register new test.
-
-2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* riscv-tdep.c: Updated since the DECLARE_CSR is changed.
-	* riscv-tdep.h: Likewise.
-	* features/riscv/rebuild-csr-xml.sh: Generate the 64bit-csr.xml without
-	rv32-only CSR.
-	* features/riscv/64bit-csr.xml: Regenerated.
-
-2020-02-20  Sergio Durigan Junior  <sergiodj@redhat.com>
-	    Tom Tromey  <tom@tromey.com>
-
-	* utils.c (fputs_maybe_filtered): Call 'stream->puts' instead
-	of 'fputc_unfiltered'.
-	(putchar_unfiltered): Call 'fputc_unfiltered'.
-	(fputc_unfiltered): Call 'fputs_unfiltered'.
-
-2020-02-20  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* config.in: Regenerate.
-	* configure: Regenerate.
-	* configure.ac: Add --with-python-libdir option.
-	* main.c: Use WITH_PYTHON_LIBDIR.
-
-2020-02-19  Tom Tromey  <tom@tromey.com>
-
-	* symtab.c (general_symbol_info::compute_and_set_names): Use
-	obstack_strndup.  Simplify call to symbol_set_demangled_name.
-
-2020-02-19  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (allocate_signatured_type_table,
-	allocate_dwo_unit_table, allocate_type_unit_groups_table,
-	allocate_dwo_file_hash_table, allocate_dwp_loaded_cutus_table):
-	Remove objfile parameter, update all callers.
-
-2020-02-19  Doug Evans  <dje@google.com>
-
-	PR rust/25535
-	* rust-lang.c (rust_print_enum): Apply embedded_offset to
-	rust_enum_variant calculation.
-
-2020-02-19  Tom Tromey  <tromey@adacore.com>
-
-	* mips-tdep.h (mips_pc_is_mips): Parameter type is CORE_ADDR.
-
-2020-02-19  Tom Tromey  <tromey@adacore.com>
-
-	* ada-lang.c (cache_symbol): Use obstack_strdup.
-
-2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* configure: Regenerate.
-
-2020-02-19  Tom Tromey  <tromey@adacore.com>
-
-	* python/python.c (do_start_initialization): Use XNEWVEC.  Remove
-	NULL check.
-
-2020-02-19  Maciej W. Rozycki  <macro@wdc.com>
-
-	* NEWS: Mention RISC-V GNU/Linux GDBserver support.
-
-2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* arch/riscv.c (struct riscv_gdbarch_features_hasher): Only define
-	if GDBSERVER is not defined.
-	(riscv_tdesc_cache): Likewise, also store const target_desc.
-	(STATIC_IN_GDB): Define.
-	(riscv_create_target_description): Update declaration with
-	STATIC_IN_GDB.
-	(riscv_lookup_target_description): New function, only define if
-	GDBSERVER is not defined.
-	* arch/riscv.h (riscv_create_target_description): Declare only
-	when GDBSERVER is defined.
-	(riscv_lookup_target_description): New declaration when GDBSERVER
-	is not defined.
-	* nat/riscv-linux-tdesc.c (riscv_linux_read_description): Rename to...
-	(riscv_linux_read_features): ...this, and return
-	riscv_gdbarch_features instead of target_desc.
-	* nat/riscv-linux-tdesc.h: Include 'arch/riscv.h'.
-	(riscv_linux_read_description): Rename to...
-	(riscv_linux_read_features): ...this.
-	* riscv-linux-nat.c (riscv_linux_nat_target::read_description):
-	Update to use riscv_gdbarch_features and
-	riscv_lookup_target_description.
-	* riscv-tdep.c (riscv_find_default_target_description): Use
-	riscv_lookup_target_description instead of
-	riscv_create_target_description.
-
-2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
-
-	* valprint.c (generic_val_print_enum_1): When printing a flag
-	enum with value 0 and there is no enumerator with value 0, print
-	just "0" instead of "(unknown: 0x0)".
-
-2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
-
-	* valprint.c (generic_val_print_enum_1): Print unknown part of
-	flag enum in hex.
-
-2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c (update_enumeration_type_from_children): Allow
-	flag enums to contain duplicate enumerators.
-	* valprint.c (generic_val_print_enum_1): Update comment.
-
-2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
-
-	* dwarf2/read.c: Include "count-one-bits.h".
-	(update_enumeration_type_from_children): If an enumerator has
-	multiple bits set, don't treat the enumeration as a "flag enum".
-	* valprint.c (generic_val_print_enum_1): Assert that enumerators
-	of flag enums have 0 or 1 bit set.
-
-2020-02-18  Bernd Edlinger  <bernd.edlinger@hotmail.de>
-
-	* aarch64-tdep.c (aarch64_displaced_step_copy_insn): Use an explicit
-	conversion.
-	* amd64-tdep.c (amd64_displaced_step_copy_insn): Likewise.
-	* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn): Likewise.
-	* i386-tdep.c (i386_displaced_step_copy_insn): Likewise.
-	* rs6000-tdep.c (ppc_displaced_step_copy_insn): Likewise.
-	* s390-tdep.c (s390_displaced_step_copy_insn): Likewise.
-
-2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
-
-	* MAINTAINERS: Change palmer@sifive.com to palmer@dabbelt.com.
-
-2020-02-14  Simon Marchi  <simon.marchi@efficios.com>
-
-	* aarch64-tdep.c (aarch64_displaced_step_copy_insn): Use
-	displaced_step_closure_up.
-	* aarch64-tdep.h (aarch64_displaced_step_copy_insn): Likewise.
-	(struct displaced_step_closure_up):
-	* amd64-tdep.c (amd64_displaced_step_copy_insn): Likewise.
-	* amd64-tdep.h (amd64_displaced_step_copy_insn): Likewise.
-	* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn):
-	Likewise.
-	* gdbarch.sh (displaced_step_copy_insn): Likewise.
-	* gdbarch.c, gdbarch.h: Re-generate.
-	* i386-linux-tdep.c (i386_linux_displaced_step_copy_insn): Use
-	displaced_step_closure_up.
-	* i386-tdep.c (i386_displaced_step_copy_insn): Likewise.
-	* i386-tdep.h (i386_displaced_step_copy_insn): Likewise.
-	* infrun.h (displaced_step_closure_up): New type alias.
-	(struct displaced_step_inferior_state) <step_closure>: Change
-	type to displaced_step_closure_up.
-	* rs6000-tdep.c (ppc_displaced_step_copy_insn): Use
-	displaced_step_closure_up.
-	* s390-tdep.c (s390_displaced_step_copy_insn): Likewise.
-
-2020-02-14  Tom Tromey  <tom@tromey.com>
-
-	* minidebug.c (gnu_debug_key): New global.
-	(find_separate_debug_file_in_section): Use it.
-
-2020-02-14  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh (displaced_step_copy_insn): Change return type to an
-	std::unique_ptr.
-	* gdbarch.c: Re-generate.
-	* gdbarch.h: Re-generate.
-	* infrun.c (displaced_step_prepare_throw): Adjust to std::unique_ptr
-	change.
-	* aarch64-tdep.c (aarch64_displaced_step_copy_insn): Change return
-	type to std::unique_ptr.
-	* aarch64-tdep.h (aarch64_displaced_step_copy_insn): Likewise.
-	* amd64-tdep.c (amd64_displaced_step_copy_insn): Likewise.
-	* amd64-tdep.h (amd64_displaced_step_copy_insn): Likewise.
-	* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn): Likewise.
-	* i386-linux-tdep.c (i386_linux_displaced_step_copy_insn): Likewise.
-	* i386-tdep.c (i386_displaced_step_copy_insn): Likewise.
-	* i386-tdep.h (i386_displaced_step_copy_insn): Likewise.
-	* rs6000-tdep.c (ppc_displaced_step_copy_insn): Likewise.
-	* s390-tdep.c (s390_displaced_step_copy_insn): Likewise.
-
-2020-02-14  Simon Marchi  <simon.marchi@efficios.com>
-
-	* infrun.c (get_displaced_step_closure_by_addr): Adjust to
-	std::unique_ptr.
-	(displaced_step_clear): Rename to...
-	(displaced_step_reset): ... this.  Just call displaced->reset ().
-	(displaced_step_clear_cleanup): Rename to...
-	(displaced_step_reset_cleanup): ... this.
-	(displaced_step_prepare_throw): Adjust to std::unique_ptr.
-	(displaced_step_fixup): Likewise.
-	(resume_1): Likewise.
-	(handle_inferior_event): Restore child's memory before calling
-	displaced_step_fixup on the parent.
-	* infrun.h (displaced_step_inferior_state) <reset>: Adjust
-	to std::unique_ptr.
-	<step_closure>: Change type to std::unique_ptr.
-
-2020-02-14  Simon Marchi  <simon.marchi@efficios.com>
-
-	* arm-tdep.c: Include count-one-bits.h.
-	(cleanup_block_store_pc): Use count_one_bits.
-	(cleanup_block_load_pc): Use count_one_bits.
-	(arm_copy_block_xfer): Use count_one_bits.
-	(thumb2_copy_block_xfer): Use count_one_bits.
-	(thumb_copy_pop_pc_16bit): Use count_one_bits.
-	* arch/arm-get-next-pcs.c: Include count-one-bits.h.
-	(thumb_get_next_pcs_raw): Use count_one_bits.
-	(arm_get_next_pcs_raw): Use count_one_bits_l.
-	* arch/arm.c (bitcount): Remove.
-	* arch/arm.h (bitcount): Remove.
-
-2020-02-14  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2/frame-tailcall.c (dwarf2_tailcall_sniffer_first):
-	Update.
-	* dwarf2/loc.h (call_site_find_chain): Return unique_xmalloc_ptr.
-	* dwarf2/loc.c (call_site_find_chain_1): Return
-	unique_xmalloc_ptr.
-	(call_site_find_chain): Likewise.
-
-2020-02-14  Richard Biener  <rguenther@suse.de>
-
-	* dwarf2/read.c (lnp_state_machine::handle_special_opcode): Apply CSE
-	on expression with division operators.
-
-2020-02-13  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
-
-	* MAINTAINERS (Write After Approval): Adding myself.
-
-2020-02-12  Tom Tromey  <tom@tromey.com>
-
-	* event-loop.c (event_data, gdb_event, event_handler_func):
-	Remove.
-
-2020-02-12  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/frame.c (dwarf2_frame_bfd_data): New global.
-	(dwarf2_frame_objfile_data): Add comment.
-	(find_comp_unit, set_comp_unit): New functions.
-	(dwarf2_frame_find_fde): Use find_comp_unit.
-	(dwarf2_build_frame_info): Use set_comp_unit.
-
-2020-02-12  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/frame.c (struct comp_unit) <objfile>: Remove.
-	(comp_unit): Don't initialize objfile.
-	(execute_cfa_program): Add text_offset parameter.
-	(execute_cfa_program_test, dwarf2_fetch_cfa_info)
-	(dwarf2_frame_cache): Update.
-	(dwarf2_build_frame_info): Don't set "objfile" member.
-
-2020-02-12  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/frame.c (decode_frame_entry_1): Add gdbarch parameter.
-	(decode_frame_entry): Likewise.
-	(dwarf2_build_frame_info): Update.
-
-2020-02-12  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/frame.c (struct comp_unit) <obstack>: New member.
-	(decode_frame_entry_1): Use the comp_unit obstack.
-
-2020-02-12  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/frame.c (struct comp_unit): Add initializers and
-	constructor.
-	(dwarf2_frame_objfile_data): Store a comp_unit.
-	(dwarf2_frame_find_fde): Update.
-	(dwarf2_build_frame_info): Use "new".
-
-2020-02-12  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/frame.c (struct dwarf2_fde_table): Remove.
-	(dwarf2_fde_table): Typedef for std::vector.
-	(dwarf2_frame_objfile_data): Remove the deleter.  Now static.
-	(dwarf2_frame_find_fde, add_fde, decode_frame_entry_1)
-	(decode_frame_entry): Update.
-	(dwarf2_build_frame_info): Use "new".
-
-2020-02-12  Christian Biesinger  <cbiesinger@google.com>
-
-	* arm-tdep.c (arm_gdbarch_init): Update.
-	* arm-tdep.h (struct gdbarch_tdep) <have_fpa_registers,
-	have_wmmx_registers, have_vfp_pseudos, have_neon_pseudos,
-	have_neon, is_m>: Change to bool.
-
-2020-02-12  Christian Biesinger  <cbiesinger@google.com>
-
-	* arm-tdep.c (arm_dump_tdep): Print more fields of tdep.
-
-2020-02-12  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/loc.c (struct dwarf_expr_baton): Remove.
-
-2020-02-12  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-tdep.c (struct windows_gdbarch_data): Add tib_ptr_type.
-	(windows_get_tlb_type): Use windows_gdbarch_data->tib_ptr_type.
-
-2020-02-11  Tom Tromey  <tom@tromey.com>
-
-	* psymtab.h: Update comment.
-
-2020-02-11  Tom Tromey  <tom@tromey.com>
-
-	* gdb_obstack.h (struct auto_obstack): Use
-	DISABLE_COPY_AND_ASSIGN.
-
-2020-02-11  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/frame.h (struct objfile): Don't forward declare.
-
-2020-02-11  Christian Biesinger  <cbiesinger@google.com>
-
-	* cris-tdep.c (cris_supply_gregset): Change signature to match
-	what struct regset expects.
-	(cris_regset): New struct.
-	(fetch_core_registers): Remove.
-	(cris_iterate_over_regset_sections): New function.
-	(_initialize_cris_tdep): Don't call deprecated_add_core_fns.
-	(cris_gdbarch_init): Call set_gdbarch_iterate_over_regset_sections.
-
-2020-02-11  Christian Biesinger  <cbiesinger@google.com>
-
-	* arch/arm.h (enum gdb_regnum): Add comment for the FP0..7
-	registers.
-
-2020-02-11  Christian Biesinger  <cbiesinger@google.com>
-
-	* arm-tdep.c (arm_dump_tdep): Add \n in fprintf.
-
-2020-02-11  Simon Marchi  <simon.marchi@efficios.com>
-
-	* configure: Re-generate.
-
-2020-02-11  Simon Marchi  <simon.marchi@efficios.com>
-
-	* configure: Re-generate.
-
-2020-02-11  Simon Marchi  <simon.marchi@efficios.com>
-
-	* acinclude: Update warning.m4 path.
-	* warning.m4: Move to gdbsupport.
-
-2020-02-11  Tom Tromey  <tromey@adacore.com>
-
-	* remote.c (remote_console_output): Update.
-	* printcmd.c (printf_command): Update.
-	* event-loop.c (gdb_wait_for_event): Update.
-	* linux-nat.c (sigchld_handler): Update.
-	* remote-sim.c (gdb_os_write_stdout): Update.
-	(gdb_os_flush_stdout): Update.
-	(gdb_os_flush_stderr): Update.
-	(gdb_os_write_stderr): Update.
-	* exceptions.c (print_exception): Update.
-	* remote-fileio.c (remote_fileio_func_read): Update.
-	(remote_fileio_func_write): Update.
-	* tui/tui.c (tui_enable): Update.
-	* tui/tui-interp.c (tui_interp::init): Update.
-	* utils.c (init_page_info): Update.
-	(putchar_unfiltered, fputc_unfiltered): Update.
-	(gdb_flush): Update.
-	(emit_style_escape): Update.
-	(flush_wrap_buffer, fputs_maybe_filtered): Update.
-	* ui-file.c (ui_file_isatty, ui_file_read, ui_file_write)
-	(ui_file_write_async_safe, ui_file_flush, ui_file_puts): Remove.
-	(stderr_file::write): Update.
-	(stderr_file::puts): Update.
-	* ui-file.h (ui_file_isatty, ui_file_write)
-	(ui_file_write_async_safe, ui_file_read, ui_file_flush)
-	(ui_file_puts): Don't declare.
-
-2020-02-10  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2/read.c (process_psymtab_comp_unit_reader): Cast concat NULL
-	sentinel to char *.
-
-2020-02-09  Tom de Vries  <tdevries@suse.de>
-
-	* dwarf2read.c (process_psymtab_comp_unit_reader): Append CU offset to
-	filename if it matches "<artificial>".
-
-2020-02-09  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-tdep.c (struct enum_value_name): New struct.
-	(create_enum): New function.
-	(windows_get_siginfo_type): Create and use enum types.
-
-2020-02-09  Hannes Domani  <ssbssa@yahoo.de>
-
-	* NEWS: Mention $_siginfo support for Windows.
-	* windows-nat.c (handle_exception): Set siginfo_er.
-	(windows_nat_target::mourn_inferior): Reset siginfo_er.
-	(windows_xfer_siginfo): New function.
-	(windows_nat_target::xfer_partial): Call windows_xfer_siginfo.
-	* windows-tdep.c (struct windows_gdbarch_data): New struct.
-	(init_windows_gdbarch_data): New function.
-	(get_windows_gdbarch_data): New function.
-	(windows_get_siginfo_type): New function.
-	(windows_init_abi): Register windows_get_siginfo_type.
-	(_initialize_windows_tdep): Register init_windows_gdbarch_data.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (class cutu_reader) <cutu_reader,
-	init_tu_and_read_dwo_dies>: Remove "keep" parameter.
-	<keep>: Declare method.
-	<m_keep>: Remove member.
-	<~cutu_reader>: Remove.
-	(cutu_reader::init_tu_and_read_dwo_dies): Update.
-	(cutu_reader::cutu_reader): Update.
-	(cutu_reader::keep): Rename from ~cutu_reader.
-	(process_psymtab_comp_unit, build_type_psymtabs_1)
-	(process_skeletonless_type_unit, load_partial_comp_unit)
-	(load_full_comp_unit, dwarf2_read_addr_index)
-	(read_signatured_type): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (process_psymtab_comp_unit_reader): Remove
-	"want_partial_unit" parameter.
-	(process_psymtab_comp_unit): Change want_partial_unit to bool.
-	Inline check for DW_TAG_partial_unit.
-	(dwarf2_build_psymtabs_hard, scan_partial_symbols): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_n_bytes, read_direct_string): Move to
-	read.c.
-	* dwarf2/leb.h (read_n_bytes, read_direct_string): Move from
-	read.c.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_address): Move to comp-unit.c.
-	(dwarf2_rnglists_process, dwarf2_ranges_process)
-	(read_attribute_value, dwarf_decode_lines_1)
-	(var_decode_location, decode_locdesc): Update.
-	* dwarf2/comp-unit.c (comp_unit_head::read_address): Move from
-	read.c.  Remove "cu" parameter.
-	* dwarf2/comp-unit.h (struct comp_unit_head) <read_address>: New
-	method.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_attribute_value, read_indirect_string)
-	(read_indirect_line_string): Update.
-	* dwarf2/comp-unit.c (read_offset): Remove.
-	(read_comp_unit_head): Update.
-	* dwarf2/comp-unit.h (struct comp_unit_head) <read_offset>: New
-	method.
-	(read_offset): Don't declare.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* Makefile.in (COMMON_SFILES): Add dwarf2/comp-unit.c.
-	* dwarf2/read.c (struct comp_unit_head): Move to
-	dwarf2/comp-unit.h.
-	(enum class rcuh_kind): Move to comp-unit.h.
-	(get_cu_length, offset_in_cu_p): Now methods on comp_unit_head.
-	(read_comp_unit_head, error_check_comp_unit_head)
-	(read_and_check_comp_unit_head): Move to comp-unit.c.
-	(read_offset, dwarf_unit_type_name): Likewise.
-	(create_debug_type_hash_table, read_cutu_die_from_dwo)
-	(cutu_reader::cutu_reader, read_call_site_scope)
-	(find_partial_die, follow_die_offset): Update.
-	* dwarf2/comp-unit.h: New file, from dwarf2read.c.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_offset_1): Move to leb.c.
-	(read_abbrev_offset, read_offset, dwarf_decode_line_header)
-	(dwarf_decode_macro_bytes): Update.
-	* dwarf2/leb.c (read_offset): Rename; move from read.c.
-	* dwarf2/leb.h (read_offset): Declare.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (dwarf2_section_size): Remove.
-	(error_check_comp_unit_head, dwarf2_symbol_mark_computed):
-	Update.
-	* dwarf2/section.h (struct dwarf2_section_info) <get_size>: New method.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_initial_length): Move to leb.c.
-	* dwarf2/leb.h (read_initial_length): Declare.
-	* dwarf2/leb.c (read_initial_length): Move from read.c.  Add
-	handle_nonstd parameter.
-	* dwarf2/frame.c (read_initial_length): Remove.
-	(decode_frame_entry_1): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/loc.c (dwarf2_find_location_expression)
-	(dwarf_evaluate_loc_desc::get_tls_address)
-	(dwarf_evaluate_loc_desc::push_dwarf_reg_entry_value)
-	(rw_pieced_value, dwarf2_evaluate_loc_desc_full)
-	(dwarf2_locexpr_baton_eval, dwarf2_evaluate_property)
-	(dwarf2_compile_property_to_c)
-	(dwarf2_loc_desc_get_symbol_read_needs)
-	(dwarf2_compile_expr_to_ax, locexpr_describe_location)
-	(locexpr_tracepoint_var_ref, locexpr_generate_c_location)
-	(loclist_describe_location, loclist_tracepoint_var_ref)
-	(loclist_generate_c_location): Update.
-	* compile/compile-loc2c.c (do_compile_dwarf_expr_to_c): Update.
-	* dwarf2/loc.h (dwarf2_per_cu_objfile, dwarf2_per_cu_addr_size)
-	(dwarf2_per_cu_ref_addr_size, dwarf2_per_cu_offset_size)
-	(dwarf2_per_cu_text_offset, dwarf2_version): Don't declare.
-	* dwarf2/read.c (dwarf2_per_cu_data::objfile)
-	(dwarf2_per_cu_data::addr_size)
-	(dwarf2_per_cu_data::ref_addr_size)
-	(dwarf2_per_cu_data::text_offset)
-	(dwarf2_per_cu_data::addr_type): Now methods.
-	(per_cu_header_read_in): Make per_cu "const".
-	(dwarf2_version): Remove.
-	(dwarf2_per_cu_data::int_type): Now a method.
-	(dwarf2_per_cu_data::_addr_sized_int_type): Likewise.
-	(set_die_type, read_array_type, read_subrange_index_type)
-	(read_tag_string_type, read_subrange_type): Update.
-	* dwarf2/read.h (struct dwarf2_per_cu_data) <addr_size,
-	offset_size, ref_addr_size, text_offset, addr_type, version,
-	objfile, int_type, addr_sized_int_type>: Declare methods.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct dwarf2_per_cu_data) <imported_symtabs>:
-	Move earlier.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (dwarf_line_debug): Declare.
-	* Makefile.in (COMMON_SFILES): Add dwarf2/line-header.c.
-	* dwarf2/read.c: Move line_header code to new files.
-	(dwarf_line_debug): No longer static.
-	* dwarf2/line-header.c: New file.
-	* dwarf2/line-header.h: New file.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (struct line_header) <file_full_name,
-	file_file_name>: Return unique_xmalloc_ptr.
-	(line_header::file_file_name): Update.
-	(line_header::file_full_name): Update.
-	(dw2_get_file_names_reader): Update.
-	(macro_start_file): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (struct line_header) <file_full_name,
-	file_file_name>: Declare methods.
-	(dw2_get_file_names_reader): Update.
-	(file_file_name): Now a method.
-	(file_full_name): Likewise.
-	(macro_start_file): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (dwarf_always_disassemble)
-	(show_dwarf_always_disassemble): Move to loc.c.
-	(_initialize_dwarf2_read): Move "always-disassemble" registration
-	to loc.c.
-	* dwarf2/read.h (dwarf_always_disassemble): Don't declare.
-	* dwarf2/loc.c (dwarf_always_disassemble): Move from read.c.  Now
-	static.
-	(show_dwarf_always_disassemble): Move from read.c.
-	(_initialize_dwarf2loc): Move always-disassemble from read.c.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (~dwarf2_per_objfile): Update.
-	(create_quick_file_names_table): Return htab_up.
-	(dw2_get_file_names_reader, dw2_forget_cached_source_info):
-	Update.
-	* dwarf2/read.h (struct dwarf2_per_objfile)
-	<quick_file_names_table>: Now htab_up.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/abbrev.c (abbrev_table::read): Simplify.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/abbrev.c (abbrev_table): Move constructor from header.
-	Rewrite.
-	(abbrev_table::add_abbrev, abbrev_table::lookup_abbrev): Rewrite.
-	* dwarf2/abbrev.h (struct abbrev_info) <next>: Remove.
-	(abbrev_table::abbrev_table): No longer inline.
-	(ABBREV_HASH_SIZE): Remove.
-	(abbrev_table::m_abbrevs): Now an htab_up.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (read_cutu_die_from_dwo): Update.
-	(cutu_reader): Update.
-	(build_type_psymtabs_1): Update.
-	* dwarf2/abbrev.c (abbrev_table::read): Rename.
-	(abbrev_table::alloc_abbrev): Update.
-	* dwarf2/abbrev.h (abbrev_table_up): Move earlier.
-	(abbrev_table::read): New static method, renamed from
-	abbrev_table_read_table.
-	(abbrev_table::alloc_abbrev)
-	(abbrev_table::add_abbrev): Now private.
-	(abbrev_table::abbrev_table): Now private.
-	(abbrev_table::m_abbrev_obstack): Now private.  Rename.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (set_die_type, get_die_type_at_offset): Update.
-	* dwarf2/read.h (struct dwarf2_per_objfile) <die_type_hash>: Now
-	htab_up.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (struct dwp_file) <loaded_cus, loaded_tus>: Now
-	htab_up.
-	(lookup_dwo_unit_in_dwp): Update.
-	(allocate_dwp_loaded_cutus_table): Return htab_up.  Don't allocate
-	on obstack.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (allocate_dwo_file_hash_table): Don't allocate on
-	obstack.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (~dwarf2_per_objfile): Don't delete
-	line_header_hash.
-	(handle_DW_AT_stmt_list): Update.  Don't allocate on obstack.
-	* dwarf2/read.h (struct dwarf2_per_objfile) <line_header_hash>:
-	Change type to htab_up.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (allocate_type_unit_groups_table): Return
-	htab_up.  Don't allocate on obstack.
-	(get_type_unit_group, dwarf2_build_psymtabs_hard): Update.
-	* dwarf2/read.h (struct dwarf2_per_objfile) <type_unit_groups>:
-	Change type to htab_up.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct dwarf2_per_objfile) <signatured_types>:
-	Change type to htab_up.
-	* dwarf2/read.c (create_signatured_type_table_from_index)
-	(create_signatured_type_table_from_debug_names)
-	(create_all_type_units, add_type_unit)
-	(lookup_dwo_signatured_type, lookup_signatured_type)
-	(process_skeletonless_type_unit): Update.
-	(create_debug_type_hash_table, create_debug_types_hash_table):
-	Change type of types_htab.
-	(allocate_signatured_type_table, allocate_dwo_unit_table): Return
-	htab_up.  Don't allocate on obstack.
-	(create_cus_hash_table): Change type of cus_htab parameter.
-	(struct dwo_file) <cus, tus>: Now htab_up.
-	(lookup_dwo_signatured_type, lookup_dwo_cutu)
-	(process_dwo_file_for_skeletonless_type_units, lookup_dwo_cutu)
-	(queue_and_load_all_dwo_tus): Update.
-	* dwarf2/index-write.c (write_gdbindex): Update.
-	(write_debug_names): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.h (struct dwarf2_queue_item): Move from
-	dwarf2/read.c.  Remove "next" member.  Add constructor ntad
-	destructor.
-	(struct dwarf2_per_objfile) <queue>: New member.
-	* dwarf2/read.c (struct dwarf2_queue_item): Move to
-	dwarf2/read.h.
-	(dwarf2_queue, dwarf2_queue_tail): Remove.
-	(class dwarf2_queue_guard): Add parameter to constructor.  Use
-	DISABLE_COPY_AND_ASSIGN.
-	<m_per_objfile>: New member.
-	<~dwarf2_queue_guard>: Rewrite.
-	(dw2_do_instantiate_symtab, queue_comp_unit, process_queue):
-	Update.
-	(~dwarf2_queue_item): New.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/read.c (struct die_info) <has_children>: New member.
-	(dw2_get_file_names_reader): Remove has_children.
-	(dw2_get_file_names): Update.
-	(read_cutu_die_from_dwo): Remove has_children.
-	(cutu_reader::init_tu_and_read_dwo_dies)
-	(cutu_reader::cutu_reader): Update.
-	(process_psymtab_comp_unit_reader, build_type_psymtabs_reader):
-	Remove has_children.
-	(build_type_psymtabs_1, process_skeletonless_type_unit)
-	(load_partial_comp_unit, load_full_comp_unit): Update.
-	(create_dwo_cu_reader): Remove has_children.
-	(create_cus_hash_table, read_die_and_children): Update.
-	(read_full_die_1,read_full_die): Remove has_children.
-	(read_signatured_type): Update.
-	(class cutu_reader) <has_children>: Remove.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2/expr.c: Rename from dwarf2expr.c.
-	* dwarf2/expr.h: Rename from dwarf2expr.h.
-	* dwarf2/frame-tailcall.c: Rename from dwarf2-frame-tailcall.c.
-	* dwarf2/frame-tailcall.h: Rename from dwarf2-frame-tailcall.h.
-	* dwarf2/frame.c: Rename from dwarf2-frame.c.
-	* dwarf2/frame.h: Rename from dwarf2-frame.h.
-	* dwarf2/index-cache.c: Rename from dwarf-index-cache.c.
-	* dwarf2/index-cache.h: Rename from dwarf-index-cache.h.
-	* dwarf2/index-common.c: Rename from dwarf-index-common.c.
-	* dwarf2/index-common.h: Rename from dwarf-index-common.h.
-	* dwarf2/index-write.c: Rename from dwarf-index-write.c.
-	* dwarf2/index-write.h: Rename from dwarf-index-write.h.
-	* dwarf2/loc.c: Rename from dwarf2loc.c.
-	* dwarf2/loc.h: Rename from dwarf2loc.h.
-	* dwarf2/read.c: Rename from dwarf2read.c.
-	* dwarf2/read.h: Rename from dwarf2read.h.
-	* dwarf2/abbrev.c, aarch64-tdep.c, alpha-tdep.c,
-	amd64-darwin-tdep.c, arc-tdep.c, arm-tdep.c, bfin-tdep.c,
-	compile/compile-c-symbols.c, compile/compile-cplus-symbols.c,
-	compile/compile-loc2c.c, cris-tdep.c, csky-tdep.c, findvar.c,
-	gdbtypes.c, guile/scm-type.c, h8300-tdep.c, hppa-bsd-tdep.c,
-	hppa-linux-tdep.c, i386-darwin-tdep.c, i386-linux-tdep.c,
-	i386-tdep.c, iq2000-tdep.c, m32c-tdep.c, m68hc11-tdep.c,
-	m68k-tdep.c, microblaze-tdep.c, mips-tdep.c, mn10300-tdep.c,
-	msp430-tdep.c, nds32-tdep.c, nios2-tdep.c, or1k-tdep.c,
-	riscv-tdep.c, rl78-tdep.c, rs6000-tdep.c, rx-tdep.c, s12z-tdep.c,
-	s390-tdep.c, score-tdep.c, sh-tdep.c, sparc-linux-tdep.c,
-	sparc-tdep.c, sparc64-linux-tdep.c, sparc64-tdep.c, tic6x-tdep.c,
-	tilegx-tdep.c, v850-tdep.c, xstormy16-tdep.c, xtensa-tdep.c:
-	Update.
-	* Makefile.in (COMMON_SFILES): Update.
-	(HFILES_NO_SRCDIR): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.c (struct die_reader_specs) <comp_dir>: Remove.
-	(init_cu_die_reader, read_cutu_die_from_dwo): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.h (struct die_info): Don't declare.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.h (die_info_ptr): Remove typedef.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.c (read_call_site_scope)
-	(handle_data_member_location, dwarf2_add_member_fn)
-	(mark_common_block_symbol_computed, read_common_block)
-	(attr_to_dynamic_prop, partial_die_info::read)
-	(var_decode_location, dwarf2_fetch_die_loc_sect_off)
-	(dwarf2_symbol_mark_computed, set_die_type): Update.
-	* dwarf2/attribute.h (struct attribute) <form_is_block>: Declare
-	method.
-	(attr_form_is_block): Don't declare.
-	* dwarf2/attribute.c (attribute::form_is_block): Now a method.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.c (dwarf2_find_base_address, )
-	(read_call_site_scope, rust_containing_type)
-	(dwarf2_get_pc_bounds, dwarf2_record_block_ranges)
-	(handle_data_member_location, dwarf2_add_member_fn)
-	(get_alignment, read_structure_type, process_structure_scope)
-	(mark_common_block_symbol_computed, read_common_block)
-	(read_tag_string_type, attr_to_dynamic_prop, read_subrange_type)
-	(partial_die_info::read, read_attribute_value, new_symbol)
-	(lookup_die_type, dwarf2_get_ref_die_offset)
-	(dwarf2_get_attr_constant_value, follow_die_ref_or_sig)
-	(dwarf2_fetch_die_loc_sect_off, get_DW_AT_signature_type)
-	(dwarf2_symbol_mark_computed): Update.
-	* dwarf2/attribute.h (struct attribute) <value_as_address,
-	form_is_section_offset, form_is_constant, form_is_ref>: Declare
-	methods.
-	(value_as_address, attr_form_is_section_offset)
-	(attr_form_is_constant, attr_form_is_ref): Don't declare.
-	* dwarf2/attribute.c (attribute::value_as_address)
-	(attribute::form_is_section_offset, attribute::form_is_constant)
-	(attribute::form_is_ref): Now methods.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.c (struct attribute, DW_STRING)
-	(DW_STRING_IS_CANONICAL, DW_UNSND, DW_BLOCK, DW_SND, DW_ADDR)
-	(DW_SIGNATURE, struct dwarf_block, attr_value_as_address)
-	(attr_form_is_block, attr_form_is_section_offset)
-	(attr_form_is_constant, attr_form_is_ref): Move.
-	* dwarf2/attribute.h: New file.
-	* dwarf2/attribute.c: New file, from dwarf2read.c.
-	* Makefile.in (COMMON_SFILES): Add dwarf2/attribute.c.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.c (abbrev_table_up, struct abbrev_info)
-	(struct attr_abbrev, ABBREV_HASH_SIZE, struct abbrev_table):
-	Move.
-	(read_cutu_die_from_dwo, build_type_psymtabs_1): Update.
-	(abbrev_table::alloc_abbrev, abbrev_table::add_abbrev)
-	(abbrev_table::lookup_abbrev, abbrev_table_read_table): Move to
-	abbrev.c.
-	* dwarf2/abbrev.h: New file.
-	* dwarf2/abbrev.c: New file, from dwarf2read.c.
-	* Makefile.in (COMMON_SFILES): Add dwarf2/abbrev.c.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.c (dwarf2_section_buffer_overflow_complaint)
-	(dwarf2_section_size, dwarf2_get_section_info)
-	(create_signatured_type_table_from_debug_names)
-	(create_addrmap_from_aranges, read_debug_names_from_section)
-	(get_gdb_index_contents_from_section, read_comp_unit_head)
-	(error_check_comp_unit_head, read_abbrev_offset)
-	(create_debug_type_hash_table, init_cu_die_reader)
-	(read_cutu_die_from_dwo, dwarf2_build_psymtabs_hard)
-	(read_comp_units_from_section, create_cus_hash_table)
-	(create_dwp_hash_table, create_dwo_unit_in_dwp_v1)
-	(create_dwp_v2_section, dwarf2_rnglists_process)
-	(dwarf2_ranges_process, read_die_and_siblings, read_full_die)
-	(abbrev_table_read_table, read_indirect_string_at_offset_from)
-	(read_indirect_string_from_dwz, read_addr_index_1)
-	(read_str_index, dwarf_decode_line_header, skip_form_bytes)
-	(dwarf_decode_macro_bytes, dwarf_decode_macros)
-	(fill_in_loclist_baton): Update.
-	* dwarf2/section.h (struct dwarf2_section_info) <get_name,
-	get_containing_section, get_bfd_owner, get_bfd_section,
-	get_file_name, get_id, get_flags, empty, read>: Declare methods.
-	(dwarf2_read_section, get_section_name, get_section_file_name)
-	(get_containing_section, get_section_bfd_owner)
-	(get_section_bfd_section, get_section_name, get_section_file_name)
-	(get_section_id, get_section_flags, dwarf2_section_empty_p): Don't
-	declare.
-	* dwarf2/section.c (dwarf2_section_info::get_containing_section)
-	(dwarf2_section_info::get_bfd_owner)
-	(dwarf2_section_info::get_bfd_section)
-	(dwarf2_section_info::get_name)
-	(dwarf2_section_info::get_file_name, dwarf2_section_info::get_id)
-	(dwarf2_section_info::get_flags, dwarf2_section_info::empty)
-	(dwarf2_section_info::read): Now methods.
-	* dwarf-index-write.c (class debug_names): Update.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.h (struct dwarf2_section_info, dwarf2_read_section):
-	Move to dwarf2/section.h.
-	* dwarf2read.c (get_containing_section, get_section_bfd_owner)
-	(get_section_bfd_section, get_section_name)
-	(get_section_file_name, get_section_id, get_section_flags)
-	(dwarf2_section_empty_p, dwarf2_read_section): Moe to
-	dwarf2/section.c.
-	* dwarf2/section.h: New file.
-	* dwarf2/section.c: New file, from dwarf2read.c.
-	* Makefile.in (COMMON_SFILES): Add dwarf2/section.c.
-
-2020-02-08  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.h (read_unsigned_leb128): Don't declare.
-	* dwarf2read.c (read_1_byte, read_1_signed_byte, read_2_bytes)
-	(read_2_signed_bytes, read_3_bytes, read_4_bytes)
-	(read_4_signed_bytes, read_8_bytes): Move to dwarf2/leb.h.
-	(read_unsigned_leb128, read_signed_leb128): Move to dwarf2/leb.c.
-	* dwarf2/leb.h: New file, from dwarf2read.c.
-	* dwarf2/leb.c: New file, from dwarf2read.c.
-	* dwarf2-frame.c (read_1_byte, read_4_bytes, read_8_bytes):
-	Remove.
-	* Makefile.in (CONFIG_SRC_SUBDIR): Add dwarf2.
-	(COMMON_SFILES): Add dwarf2/leb.c.
-
-2020-02-08  Joel Brobecker  <brobecker@adacore.com>
-
-	GDB 9.1 released.
-
-2020-02-05  Iain Buclaw  <ibuclaw@gdcproject.org>
-
-	PR gdb/25190:
-	* gdb/remote-sim.c (gdb_os_write_stderr): Update.
-	* gdb/remote.c (remote_console_output): Update.
-	* gdb/ui-file.c (fputs_unfiltered): Rename to...
-	(ui_file_puts): ...this.
-	* gdb/ui-file.h (ui_file_puts): Add declaration.
-	* gdb/utils.c (emit_style_escape): Update.
-	(flush_wrap_buffer): Update.
-	(fputs_maybe_filtered): Update.
-	(fputs_unfiltered): Add function.
-
-2020-02-05  Iain Buclaw  <ibuclaw@gdcproject.org>
-
-	* gdb/event-loop.c (gdb_wait_for_event): Update.
-	* gdb/printcmd.c (printf_command): Update.
-	* gdb/remote-fileio.c (remote_fileio_func_write): Update.
-	* gdb/remote-sim.c (gdb_os_flush_stdout): Update.
-	(gdb_os_flush_stderr): Update.
-	* gdb/remote.c (remote_console_output): Update.
-	* gdb/ui-file.c (gdb_flush): Rename to...
-	(ui_file_flush): ...this.
-	(stderr_file::write): Update.
-	(stderr_file::puts): Update.
-	* gdb/ui-file.h (gdb_flush): Rename to...
-	(ui_file_flush): ...this.
-	* gdb/utils.c (gdb_flush): Add function.
-	* gdb/utils.h (gdb_flush): Add declaration.
-
-2020-02-07  Tom Tromey  <tromey@adacore.com>
-
-	PR breakpoints/24915:
-	* source.c (find_and_open_source): Do not check basenames_may_differ.
-
-2020-02-07  Tom Tromey  <tom@tromey.com>
-
-	* README: Update gdbserver documentation.
-	* gdbserver: Move to top level.
-	* configure.tgt (build_gdbserver): Remove.
-	* configure.ac: Remove --enable-gdbserver.
-	* configure: Rebuild.
-	* Makefile.in (distclean): Don't mention gdbserver.
-
-2020-02-06  Shahab Vahedi  <shahab@synopsys.com>
-
-	* source-cache.c (source_cache::ensure): Surround
-	get_plain_source_lines with a try/catch.
-	(source_cache::get_line_charpos): Get rid of try/catch
-	and only check for the return value of "ensure".
-	* tui/tui-source.c (tui_source_window::set_contents):
-	Simplify "nlines" calculation.
-
-2020-02-06  Shahab Vahedi  <shahab@synopsys.com>
-
-	* MAINTAINERS (Write After Approval): Add myself.
-
-2020-02-05  Christian Biesinger  <cbiesinger@google.com>
-
-	* sparc-nat.h (struct sparc_target) <xfer_partial>: Fix base class
-	function call.
-
-2020-02-05  Christian Biesinger  <cbiesinger@google.com>
-
-	* ppc-nbsd-tdep.h: Fix macro name in #endif comment.
-
-2020-02-05  Maciej W. Rozycki  <macro@wdc.com>
-
-	* nat/riscv-linux-tdesc.h: New file.
-	* nat/riscv-linux-tdesc.c: New file, taking code from...
-	* riscv-linux-nat.c (riscv_linux_nat_target::read_description):
-	... here.
-	* configure.nat <linux> <riscv*>: Add nat/riscv-linux-tdesc.o to
-	NATDEPFILES.
-
-2020-02-04  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* remote-sim.c (sim_inferior_data::sim_inferior_data): Assert that
-	we don't set the fake simulator ptid to the null_ptid.
-
-2020-02-03  Simon Marchi  <simon.marchi@efficios.com>
-
-	* fork-child.c (gdb_startup_inferior): Use bool instead of int.
-	* gdbthread.h (class thread_info) <resumed>: Likewise.
-	* infrun.c (resume_1): Likewise.
-	(proceed): Likewise.
-	(infrun_thread_stop_requested): Likewise.
-	(stop_all_threads): Likewise.
-	(handle_inferior_event): Likewise.
-	(restart_threads): Likewise.
-	(finish_step_over): Likewise.
-	(keep_going_stepped_thread): Likewise.
-	* linux-nat.c (attach_proc_task_lwp_callback): Likewise.
-	(linux_handle_extended_wait): Likewise.
-	* record-btrace.c (get_thread_current_frame_id): Likewise.
-	* record-full.c (record_full_wait_1): Likewise.
-	* remote.c (remote_target::process_initial_stop_replies): Likewise.
-	* target.c (target_resume): Likewise.
-	* thread.c (set_running_thread): Likewise.
-
-2020-02-03  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
-
-	* f-valprint.c (f77_print_array_1): Changed datatype of index
-	variable to LONGEST from int to enable it to contain bound
-	values correctly.
-
-2020-02-03  Maciej W. Rozycki  <macro@wdc.com>
-
-	* riscv-linux-nat.c [!NFPREG] (NFPREG): New macro.
-	(supply_fpregset_regnum, fill_fpregset): Handle regset buffer
-	offsets according to FLEN determined.
-	(riscv_linux_nat_target::read_description): Determine FLEN
-	dynamically.
-	(riscv_linux_nat_target::fetch_registers): Size regset buffer
-	according to FLEN determined.
-	(riscv_linux_nat_target::store_registers): Likewise.
-
-2020-02-01  Shahab Vahedi  <shahab@synopsys.com>
-
-	* target-descriptions.c (tdesc_register_in_reggroup_p): Return 0
-	when reg->group is empty and reggroup is not.
-
-2020-01-31  Tom Tromey  <tromey@adacore.com>
-
-	* ravenscar-thread.c (ravenscar_thread_target::mourn_inferior):
-	Call beneath target's mourn_inferior after unpushing.
-
-2020-01-31  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	PR tui/9765
-	* tui/tui-disasm.c (tui_find_disassembly_address): If we don't
-	have enough lines to fill the screen, still return the lowest
-	address we found.
-
-2020-01-31  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* tui/tui-win.c (_initialize_tui_win): Update help text for '+',
-	'-', '<', and '>' commands.
-
-2020-01-29  Pedro Alves  <palves@redhat.com>
-	    Sergio Durigan Junior  <sergiodj@redhat.com>
-
-	* infcmd.c (construct_inferior_arguments): Assert that
-	'argc' is greater than 0.
-
-2020-01-29  Luis Machado  <luis.machado@linaro.org>
-
-	* aarch64-tdep.c (BRK_INSN_MASK): Define to 0xffe0001f.
-	(BRK_INSN_MASK): Define to 0xd4200000.
-	(aarch64_program_breakpoint_here_p): New function.
-	(aarch64_gdbarch_init): Set gdbarch_program_breakpoint_here_p hook.
-	* arch-utils.c (default_program_breakpoint_here_p): Moved from
-	breakpoint.c.
-	* arch-utils.h (default_program_breakpoint_here_p): Moved from
-	breakpoint.h
-	* breakpoint.c (bp_loc_is_permanent): Changed return type to bool and
-	call gdbarch_program_breakpoint_here_p.
-	(program_breakpoint_here): Moved to arch-utils.c, renamed to
-	default_program_breakpoint_here_p, changed return type to bool and
-	simplified.
-	* breakpoint.h (program_breakpoint_here): Moved prototype to
-	arch-utils.h, renamed to default_program_breakpoint_here_p and changed
-	return type to bool.
-	* gdbarch.c: Regenerate.
-	* gdbarch.h: Regenerate.
-	* gdbarch.sh (program_breakpoint_here_p): New method.
-	* infrun.c (handle_signal_stop): Call
-	gdbarch_program_breakpoint_here_p.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* ctfread.c (struct ctf_fp_info): Reindent.
-	(_initialize_ctfread): Remove.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* psymtab.c (partial_map_expand_apply)
-	(psym_find_pc_sect_compunit_symtab, psym_lookup_symbol)
-	(psymtab_to_symtab, psym_find_last_source_symtab, dump_psymtab)
-	(psym_print_stats, psym_expand_symtabs_for_function)
-	(psym_map_symbol_filenames, psym_map_matching_symbols)
-	(psym_expand_symtabs_matching)
-	(partial_symtab::read_dependencies, maintenance_info_psymtabs)
-	(maintenance_check_psymtabs): Use new methods.
-	* psympriv.h (struct partial_symtab) <readin_p,
-	get_compunit_symtab>: New methods.
-	<readin, compunit_symtab>: Remove members.
-	(struct standard_psymtab): New.
-	(struct legacy_psymtab): Derive from standard_psymtab.
-	* dwarf2read.h (struct dwarf2_psymtab): Derive from
-	standard_psymtab.
-	* ctfread.c (struct ctf_psymtab): Derive from standard_psymtab.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_psymtab_to_symtab_1): Call
-	read_dependencies.  Add assert.
-	* psymtab.c (partial_symtab::read_dependencies): New method.
-	* psympriv.h (struct partial_symtab) <read_dependencies>: New
-	method.
-	* mdebugread.c (psymtab_to_symtab_1): Call read_dependencies.
-	* dwarf2read.c (dwarf2_psymtab::expand_psymtab): Call
-	read_dependencies.
-	* dbxread.c (dbx_psymtab_to_symtab_1): Call read_dependencies.
-	Add assert.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_psymtab_to_symtab_1): Change argument order.
-	Call expand_psymtab.
-	(xcoff_read_symtab): Call expand_psymtab.
-	(xcoff_start_psymtab, xcoff_end_psymtab): Set
-	legacy_expand_psymtab.
-	* psympriv.h (struct partial_symtab) <expand_psymtab>: New
-	method.
-	(struct legacy_psymtab) <expand_psymtab>: Implement.
-	<legacy_expand_psymtab>: New member.
-	* mdebugread.c (mdebug_read_symtab): Call expand_psymtab.
-	(parse_partial_symbols): Set legacy_expand_psymtab.
-	(psymtab_to_symtab_1): Change argument order.  Call
-	expand_psymtab.
-	(new_psymtab): Set legacy_expand_psymtab.
-	* dwarf2read.h (struct dwarf2_psymtab) <expand_psymtab>: Declare.
-	* dwarf2read.c (dwarf2_psymtab::read_symtab): Call
-	expand_psymtab.
-	(dwarf2_psymtab::expand_psymtab): Rename from
-	psymtab_to_symtab_1.  Call expand_psymtab.
-	* dbxread.c (start_psymtab): Set legacy_expand_psymtab.
-	(dbx_end_psymtab): Likewise.
-	(dbx_psymtab_to_symtab_1): Change argument order. Call
-	expand_psymtab.
-	(dbx_read_symtab): Call expand_psymtab.
-	* ctfread.c (struct ctf_psymtab) <expand_psymtab>: Declare.
-	(ctf_psymtab::expand_psymtab): Rename from psymtab_to_symtab.
-	(ctf_psymtab::read_symtab): Call expand_psymtab.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_read_symtab): Remove prints.  Add assert.
-	* psymtab.c (psymtab_to_symtab): Print verbose "Reading"
-	messages.
-	* mdebugread.c (mdebug_read_symtab): Remove prints.
-	* dwarf2read.c (dwarf2_psymtab::read_symtab): Remove prints.  Add
-	assert.
-	* dbxread.c (dbx_read_symtab): Remove prints.  Add assert.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (this_symtab_psymtab, read_xcoff_symtab)
-	(xcoff_psymtab_to_symtab_1, xcoff_read_symtab)
-	(xcoff_start_psymtab, xcoff_end_psymtab, scan_xcoff_symtab): Use
-	legacy_symtab.
-	* stabsread.h (dbx_end_psymtab): Use legacy_symtab.
-	* psymtab.c (psymtab_to_symtab): Call method.
-	(dump_psymtab): Update.
-	* psympriv.h (struct partial_symtab): Add virtual destructor.
-	<read_symtab>: New method.
-	(struct legacy_symtab): New.
-	* mdebugread.c (mdebug_read_symtab): Use legacy_psymtab.
-	(struct pst_map) <pst>: Now a legacy_psymtab.
-	(parse_procedure, parse_partial_symbols, psymtab_to_symtab_1)
-	(new_psymtab): Use legacy_psymtab.
-	* dwarf2read.h (struct dwarf2_psymtab): New.
-	(struct dwarf2_per_cu_data) <psymtab>: Use it.
-	* dwarf2read.c (dwarf2_create_include_psymtab)
-	(dwarf2_build_include_psymtabs, create_type_unit_group)
-	(create_partial_symtab, process_psymtab_comp_unit_reader)
-	(build_type_psymtabs_reader, build_type_psymtab_dependencies)
-	(set_partial_user): Use dwarf2_psymtab.
-	(dwarf2_psymtab::read_symtab): Rename from dwarf2_read_symtab.
-	(psymtab_to_symtab_1, process_full_comp_unit)
-	(process_full_type_unit, dwarf2_ranges_read)
-	(dwarf2_get_pc_bounds, psymtab_include_file_name)
-	(dwarf_decode_lines): Use dwarf2_psymtab.
-	* dwarf-index-write.c (psym_index_map): Use dwarf2_psymtab.
-	(add_address_entry_worker, write_one_signatured_type)
-	(recursively_count_psymbols, recursively_write_psymbols)
-	(write_one_signatured_type, psyms_seen_size, write_gdbindex)
-	(write_debug_names): Likewise.
-	* dbxread.c (struct header_file_location): Take a legacy_psymtab.
-	<pst>: Now a legacy_psymtab.
-	(find_corresponding_bincl_psymtab): Return a legacy_psymtab.
-	(read_dbx_symtab, start_psymtab, dbx_end_psymtab)
-	(dbx_psymtab_to_symtab_1, read_ofile_symtab): Use legacy_psymtab.
-	* ctfread.c (struct ctf_psymtab): New.
-	(ctf_start_symtab, ctf_end_symtab, psymtab_to_symtab): Take a
-	ctf_psymtab.
-	(ctf_psymtab::read_symtab): Rename from ctf_read_symtab.
-	(create_partial_symtab): Return a ctf_psymtab.
-	(scan_partial_symbols): Update.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_start_psymtab): Use new.
-	* psymtab.c (partial_symtab::partial_symtab): New constructor,
-	renamed from start_psymtab_common.
-	* psympriv.h (struct partial_symtab): Add new constructor.
-	(start_psymtab_common): Don't declare.
-	* mdebugread.c (parse_partial_symbols): Use new.
-	* dwarf2read.c (create_partial_symtab): Use new.
-	* dbxread.c (start_psymtab): Use new.
-	* ctfread.c (create_partial_symtab): Use new.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_end_psymtab): Use new.
-	* psymtab.c (start_psymtab_common): Use new.
-	(partial_symtab::partial_symtab): Rename from allocate_psymtab.
-	Update.
-	* psympriv.h (struct partial_symtab): Add parameters to
-	constructor.  Don't inline.
-	(allocate_psymtab): Don't declare.
-	* mdebugread.c (new_psymtab): Use new.
-	* dwarf2read.c (dwarf2_create_include_psymtab): Use new.
-	* dbxread.c (dbx_end_psymtab): Use new.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* psymtab.h (class psymtab_storage) <install_psymtab>: Rename from
-	allocate_psymtab.  Update documentation.
-	* psymtab.c (psymtab_storage::install_psymtab): Rename from
-	allocate_psymtab.  Do not use new.
-	(allocate_psymtab): Use new.  Update.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* xcoffread.c (xcoff_psymtab_to_symtab_1): Update.
-	* psymtab.c (psym_print_stats): Update.
-	* psympriv.h (struct partial_symtab) <readin,
-	psymtabs_addrmap_supported, anonymous>: Now bool.
-	* mdebugread.c (psymtab_to_symtab_1): Update.
-	* dwarf2read.c (create_type_unit_group, create_partial_symtab)
-	(build_type_psymtabs_reader, psymtab_to_symtab_1)
-	(process_full_comp_unit, process_full_type_unit): Update.
-	* dbxread.c (dbx_psymtab_to_symtab_1): Update.
-	* ctfread.c (psymtab_to_symtab): Update.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* mdebugread.c (parse_partial_symbols): Use discard_psymtab.
-	* psymtab.h (class psymtab_storage) <free_psymtabs>: Remove.
-	* psymtab.c (psymtab_storage): Delete psymtabs.
-	(psymtab_storage::allocate_psymtab): Use new.
-	(psymtab_storage::discard_psymtab): Use delete.
-	* psympriv.h (struct partial_symtab): Add constructor and
-	initializers.
-
-2020-01-26  Tom Tromey  <tom@tromey.com>
-
-	* machoread.c: Do not include psympriv.h.
-
-2020-01-25  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* NEWS: Mention the new option and the set/show commands.
-
-2020-01-25  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* exec.c (exec_file_mismatch_names, exec_file_mismatch_mode)
-	(show_exec_file_mismatch_command, set_exec_file_mismatch_command)
-	(validate_exec_file): New variables, enums, functions.
-	(exec_file_locate_attach, print_section_info): Style the filenames.
-	(_initialize_exec): Install show_exec_file_mismatch_command and
-	 set_exec_file_mismatch_command.
-	* gdbcore.h (validate_exec_file): Declare.
-	* infcmd.c (attach_command): Call validate_exec_file.
-	* remote.c ( remote_target::remote_add_inferior): Likewise.
-
-2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* frame.c (find_frame_sal): Move call to get_next_frame into more
-	inner scope.
-	* inline-frame.c (inilne_state) <inline_state>: Update argument
-	types.
-	(inilne_state) <skipped_symbol>: Rename to...
-	(inilne_state) <skipped_symbols>: ...this, and change to a vector.
-	(skip_inline_frames): Build vector of skipped symbols and use this
-	to reate the inline_state.
-	(inline_skipped_symbol): Add a comment and some assertions, fetch
-	skipped symbol from the list.
-
-2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* buildsym.c (lte_is_less_than): Delete.
-	(buildsym_compunit::end_symtab_with_blockvector): Create local
-	lambda function to sort line table entries, and use
-	std::stable_sort instead of std::sort.
-	* symtab.c (find_pc_sect_line): Skip backward over end of sequence
-	markers when looking for a previous line.
-
-2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf2read.c (lnp_state_machine::record_line): Include
-	end_sequence parameter in debug print out.  Record the line if we
-	are at an end_sequence marker even if it's not the start of a
-	statement.
-	* symmisc.c (maintenance_print_one_line_table): Print end of
-	sequence markers with 'END' not '0'.
-
-2020-01-24  Pedro Alves  <palves@redhat.com>
-
-	PR gdb/25410
-	* thread.c (scoped_restore_current_thread::restore): Use
-	switch_to_inferior_no_thread.
-	* exec.c: Include "progspace-and-thread.h".
-	(add_target_sections, remove_target_sections):
-	scoped_restore_current_pspace_and_thread instead of
-	scoped_restore_current_thread.
-	* infrun.c (handle_vfork_child_exec_or_exit): Assign the pspace
-	and aspace to the inferior before calling clone_program_space.
-	Remove stale comment.
-
-2020-01-24  Christian Biesinger  <cbiesinger@google.com>
-
-	* arm-nbsd-nat.c (arm_nbsd_nat_target::fetch_registers): Rename to...
-	(arm_netbsd_nat_target::fetch_registers): ...this.
-	(arm_nbsd_nat_target::store_registers): Rename to...
-	(arm_netbsd_nat_target::store_registers): ...this.
-
-2020-01-24  Christian Biesinger  <cbiesinger@google.com>
-
-	* arm-nbsd-nat.c: Define _KERNTYPES to get the declaration of
-	register_t.
-
-2020-01-24  Christian Biesinger  <cbiesinger@google.com>
-
-	* aarch64-fbsd-tdep.c (aarch64_fbsd_iterate_over_regset_sections):
-	Update comment.
-	* aarch64-linux-tdep.c (aarch64_linux_iterate_over_regset_sections):
-	Likewise.
-	* arm-fbsd-tdep.c (arm_fbsd_iterate_over_regset_sections): Likewise.
-	* gdbcore.h (deprecated_add_core_fns): Update comment to point to
-	the correct replacement (iterate_over_regset_sections).
-	* riscv-fbsd-tdep.c (riscv_fbsd_iterate_over_regset_sections):
-	Update comment.
-
-2020-01-24  Graham Markall  <graham.markall@embecosm.com>
-
-	PR gdb/23718
-	* gdb/python/python.c (execute_gdb_command): Call
-	async_enable_stdin in catch block.
-
-2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* event-loop.c (start_event_loop): Wrap async_enable_stdin with
-	SWITCH_THRU_ALL_UIS.
-
-2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	PR tui/9765
-	* minsyms.c (lookup_minimal_symbol_by_pc_section): Update header
-	comment, add extra parameter, and update to store previous symbol
-	when appropriate.
-	* minsyms.h (lookup_minimal_symbol_by_pc_section): Update comment,
-	add extra parameter.
-	* tui/tui-disasm.c (tui_disassemble): Update header comment,
-	remove unneeded parameter, add try/catch around gdb_print_insn,
-	rewrite to add items to asm_lines vector.
-	(tui_find_backward_disassembly_start_address): New function.
-	(tui_find_disassembly_address): Updated throughout.
-	(tui_disasm_window::set_contents): Update for changes to
-	tui_disassemble.
-	(tui_disasm_window::do_scroll_vertical): No need to adjust the
-	number of lines to scroll.
-
-2020-01-23  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* objfiles.h (ALL_OBJFILE_OSECTIONS): Move up.
-	(SECT_OFF_DATA): Likewise.
-	(SECT_OFF_RODATA): Likewise.
-	(SECT_OFF_TEXT): Likewise.
-	(SECT_OFF_BSS): Likewise.
-	(struct objfile) <text_section_offset, data_section_offset>: New
-	methods.
-	* amd64-windows-tdep.c (amd64_windows_find_unwind_info): Use
-	objfile::text_section_offset.
-	* coff-pe-read.c (add_pe_forwarded_sym): Likewise.
-	* coffread.c (coff_symtab_read): Likewise.
-	(enter_linenos): Likewise.
-	(process_coff_symbol): Likewise.
-	* ctfread.c (get_objfile_text_range): Likewise.
-	* dtrace-probe.c (dtrace_probe::get_relocated_address):
-	Use objfile::data_section_offset.
-	* dwarf2-frame.c (execute_cfa_program): Use
-	objfile::text_section_offset.
-	(dwarf2_frame_find_fde): Likewise.
-	* dwarf2read.c (create_addrmap_from_index): Likewise.
-	(create_addrmap_from_aranges): Likewise.
-	(dw2_find_pc_sect_compunit_symtab): Likewise.
-	(process_psymtab_comp_unit_reader): Likewise.
-	(add_partial_symbol): Likewise.
-	(add_partial_subprogram): Likewise.
-	(process_full_comp_unit): Likewise.
-	(read_file_scope): Likewise.
-	(read_func_scope): Likewise.
-	(read_lexical_block_scope): Likewise.
-	(read_call_site_scope): Likewise.
-	(dwarf2_rnglists_process): Likewise.
-	(dwarf2_ranges_process): Likewise.
-	(dwarf2_ranges_read): Likewise.
-	(dwarf_decode_lines_1): Likewise.
-	(new_symbol): Likewise.
-	(dwarf2_fetch_die_loc_sect_off): Likewise.
-	(dwarf2_per_cu_text_offset): Likewise.
-	* hppa-bsd-tdep.c (hppabsd_find_global_pointer): Likewise.
-	* hppa-tdep.c (read_unwind_info): Likewise.
-	* ia64-tdep.c (ia64_find_unwind_table): Likewise.
-	* psympriv.h (struct partial_symtab): Likewise.
-	* psymtab.c (find_pc_sect_psymtab): Likewise.
-	* solib-svr4.c (enable_break): Likewise.
-	* stap-probe.c (relocate_address): Use
-	objfile::data_section_offset.
-	* xcoffread.c (enter_line_range): Use
-	objfile::text_section_offset.
-	(read_xcoff_symtab): Likewise.
-
-2020-01-23  Simon Marchi  <simon.marchi@efficios.com>
-
-	* darwin-nat.c (darwin_nat_target::wait_1): Move `inf`
-	declaration to narrower scopes.
-
-2020-01-23  Simon Marchi  <simon.marchi@efficios.com>
-
-	* darwin-nat.h (struct darwin_exception_msg, enum
-	darwin_msg_state, struct darwin_thread_info, darwin_thread_t):
-	Move up.
-	(class darwin_nat_target) <wait_1, check_new_threads,
-	decode_exception_message, decode_message, stop_inferior,
-	init_thread_list, ptrace_him, cancel_breakpoint>: Declare.
-	* darwin-nat.c (darwin_check_new_threads): Rename to...
-	(darwin_nat_target::check_new_threads): ... this.
-	(darwin_suspend_inferior_it): Remove.
-	(darwin_decode_exception_message): Rename to...
-	(darwin_nat_target::decode_exception_message): ... this.
-	(darwin_nat_target::resume): Pass target to find_inferior_ptid.
-	(darwin_decode_message): Rename to...
-	(darwin_nat_target::decode_message): ... this.
-	(cancel_breakpoint): Rename to...
-	(darwin_nat_target::cancel_breakpoint): ... this.
-	(darwin_wait): Rename to...
-	(darwin_nat_target::wait_1): ... this.  Use range-based for loop
-	instead of iterate_over_inferiors.
-	(darwin_nat_target::wait): Call wait_1 instead of darwin_wait.
-	(darwin_stop_inferior): Rename to...
-	(darwin_nat_target::stop_inferior): ... this.
-	(darwin_nat_target::kill): Call wait_1 instead of darwin_wait.
-	(darwin_init_thread_list): Rename to...
-	(darwin_nat_target::init_thread_list): ... this.
-	(darwin_ptrace_him): Rename to...
-	(darwin_nat_target::ptrace_him): ... this.
-	(darwin_nat_target::create_inferior): Pass lambda function to
-	fork_inferior.
-	(darwin_nat_target::detach): Call stop_inferior instead of
-	darwin_stop_inferior.
-	* fork-inferior.h (fork_inferior): Change init_trace_fun
-	parameter to gdb::function_view.
-	* fork-inferior.c (fork_inferior): Likewise.
-
-2020-01-23  Hannes Domani  <ssbssa@yahoo.de>
-
-	* i386-cygwin-tdep.c (core_process_module_section): Update.
-	* windows-nat.c (struct lm_info_windows): Add text_offset.
-	(windows_xfer_shared_libraries): Update.
-	* windows-tdep.c (windows_xfer_shared_library):
-	Add text_offset_cached argument.
-	* windows-tdep.h (windows_xfer_shared_library): Update.
-
-2020-01-21  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbarch.sh: Add declaration for _initialize_gdbarch.
-
-2020-01-21  Simon Marchi  <simon.marchi@efficios.com>
-
-	* remote-sim.c (check_for_duplicate_sim_descriptor): Remove.
-	(get_sim_inferior_data): Remove use of iterate_over_inferiors,
-	replace with range-based for.
-	(gdbsim_interrupt_inferior): Remove.
-	(gdbsim_target::interrupt): Replace iterate_over_inferiors use
-	with a range-based for.  Inline code from
-	gdbsim_interrupt_inferior.
-
-2020-01-21  Simon Marchi  <simon.marchi@efficios.com>
-
-	* infrun.c (proceed): Fix indentation.
-
-2020-01-21  Tom Tromey  <tromey@adacore.com>
-
-	* source-cache.c (source_cache::ensure): Call ext_lang_colorize.
-	* python/python.c (python_extension_ops): Update.
-	(gdbpy_colorize): New function.
-	* python/lib/gdb/__init__.py (colorize): New function.
-	* extension.h (ext_lang_colorize): Declare.
-	* extension.c (ext_lang_colorize): New function.
-	* extension-priv.h (struct extension_language_ops) <colorize>: New
-	member.
-	* cli/cli-style.c (_initialize_cli_style): Update help text.
-
-2020-01-21  Luis Machado  <luis.machado@linaro.org>
-
-	* aarch64-tdep.c (struct aarch64_displaced_step_closure)
-	<cond>: Change type to bool.
-	(aarch64_displaced_step_b_cond): Update cond to use bool type.
-	(aarch64_displaced_step_cb): Likewise.
-	(aarch64_displaced_step_tb): Likewise.
-
-2020-01-21  Luis Machado  <luis.machado@linaro.org>
-
-	* aarch64-tdep.c (aarch64_displaced_step_fixup): Add more debugging
-	output.
-
-2020-01-21  Luis Machado  <luis.machado@linaro.org>
-
-	* aarch64-tdep.c (struct aarch64_displaced_step_closure )
-	<pc_adjust>: Adjust the documentation.
-	(aarch64_displaced_step_fixup): Check if PC really moved before
-	adjusting it.
-
-2020-01-19  Tom Tromey  <tom@tromey.com>
-
-	* disasm.c (~gdb_disassembler): New destructor.
-	(gdb_buffered_insn_length): Call disassemble_free_target.
-	* disasm.h (class gdb_disassembler): Declare destructor.  Use
-	DISABLE_COPY_AND_ASSIGN.
-
-2020-01-19  Tom Tromey  <tom@tromey.com>
-
-	* dwarf2read.c (abbrev_table_up): Move typedef earlier.
-	(die_reader_func_ftype): Remove.
-	(cutu_reader): New class.
-	(dw2_get_file_names_reader): Remove "data" parameter.
-	(dw2_get_file_names): Use cutu_reader.
-	(create_debug_type_hash_table): Update.
-	(read_cutu_die_from_dwo): Update comment.
-	(lookup_dwo_unit): Add dwo_name parameter.
-	(cutu_reader::init_tu_and_read_dwo_dies): Now a method.  Remove
-	die_reader_func_ftype and data parameters.
-	(cutu_reader::cutu_reader): Rename from init_cutu_and_read_dies.
-	Remove die_reader_func_ftype and data parameters.
-	(~cutu_reader): New; from init_cutu_and_read_dies.
-	(cutu_reader::cutu_reader): Rename from
-	init_cutu_and_read_dies_no_follow.  Remove die_reader_func_ftype
-	and data parameters.
-	(init_cutu_and_read_dies_simple): Remove.
-	(struct process_psymtab_comp_unit_data): Remove.
-	(process_psymtab_comp_unit_reader): Remove data parameter; add
-	want_partial_unit and pretend_language parameters.
-	(process_psymtab_comp_unit): Use cutu_reader.
-	(build_type_psymtabs_reader): Remove data parameter.
-	(build_type_psymtabs_1): Use cutu_reader.
-	(process_skeletonless_type_unit): Likewise.
-	(load_partial_comp_unit_reader): Remove.
-	(load_partial_comp_unit): Use cutu_reader.
-	(load_full_comp_unit_reader): Remove.
-	(load_full_comp_unit): Use cutu_reader.
-	(struct create_dwo_cu_data): Remove.
-	(create_dwo_cu_reader): Remove datap parameter; add dwo_file and
-	dwo_unit parameters.
-	(create_cus_hash_table): Use cutu_reader.
-	(struct dwarf2_read_addr_index_data): Remove.
-	(dwarf2_read_addr_index_reader): Remove.
-	(dwarf2_read_addr_index): Use cutu_reader.
-	(read_signatured_type_reader): Remove.
-	(read_signatured_type): Use cutu_reader.
-
-2020-01-19  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui.c (tui_show_assembly): Use tui_suppress_output.
-	* tui/tui-wingeneral.h (class tui_suppress_output): New.
-	(tui_wrefresh): Declare.
-	* tui/tui-wingeneral.c (suppress_output): New global.
-	(tui_suppress_output, ~tui_suppress_output): New constructor and
-	destructor.
-	(tui_wrefresh): New function.
-	(tui_gen_win_info::refresh_window): Use tui_wrefresh.
-	(tui_gen_win_info::make_window): Call wnoutrefresh when needed.
-	* tui/tui-regs.h (struct tui_data_window) <no_refresh>: Declare
-	method.
-	* tui/tui-regs.c (tui_data_window::erase_data_content): Call
-	tui_wrefresh.
-	(tui_data_window::no_refresh): New method.
-	(tui_data_item_window::refresh_window): Call tui_wrefresh.
-	(tui_reg_command): Use tui_suppress_output
-	* tui/tui-layout.c (tui_set_layout): Use tui_suppress_output.
-	* tui/tui-data.h (struct tui_gen_win_info) <no_refresh>: New
-	method.
-	* tui/tui-command.c (tui_refresh_cmd_win): Call tui_wrefresh.
-
-2020-01-19  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-winsource.c (tui_update_source_windows_with_line):
-	Handle case where symtab is null.
-
-2020-01-19  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* linux-fork.c (one_fork_p): Simplify.
-
-2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
-
-	* top.c (struct qt_args): Remove.
-	(kill_or_detach): Change return type to void, replace `void *`
-	parameter with a proper one.
-	(print_inferior_quit_action):  Likewise.
-	(quit_confirm): Use range-based for loop to iterate over inferiors.
-	(quit_force): Likewise.
-
-2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
-
-	* mi/mi-main.c (run_one_inferior): Change return type to void, replace
-	`void *` parameter with proper parameters.
-	(mi_cmd_exec_run): Use range-based loop to iterate over inferiors.
-	(print_one_inferior): Change return type to void, replace `void *`
-	parameter with proper parameters.
-	(mi_cmd_list_thread_groups): Use range-based loop to iterate over
-	inferiors.
-	(get_other_inferior): Remove.
-	(mi_cmd_remove_inferior): Use range-based loop to iterate over
-	inferiors.
-
-2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
-
-	* mi/mi-interp.c (report_initial_inferior): Remove.
-	(mi_interp::init): Use range-based for to iterate over inferiors.
-
-2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
-
-	* python/py-inferior.c (build_inferior_list): Remove.
-	(gdbpy_ref): Use range-based for loop to iterate over inferiors.
-
-2020-01-16  Christian Biesinger  <cbiesinger@google.com>
-
-	* btrace.c (btrace_compute_ftrace_1): Fix spelling error (Unkown).
-	(btrace_stitch_trace): Likewise.
-	* charset.c (intermediate_encoding): Likewise (vaild).
-	* nat/linux-btrace.c (linux_read_pt): Likewise (Unkown).
-	* python/py-record-btrace.c (struct PyMethodDef): Likewise (occurences).
-	* record-btrace.c (record_btrace_print_conf): Likewise (unkown).
-
-2020-01-16  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-tdep.c (windows_get_tlb_type):
-	Add rtl_user_process_parameters type.
-
-2020-01-16  Pedro Alves  <palves@redhat.com>
-	    Norbert Lange  <nolange79@gmail.com>
-
-	PR build/24805
-	* gdbsupport/gdb_proc_service.h (PS_EXPORT): New.
-	(ps_get_thread_area, ps_getpid, ps_lcontinue, ps_lgetfpregs)
-	(ps_lgetregs, ps_lsetfpregs, ps_lsetregs, ps_lstop, ps_pcontinue)
-	(ps_pdread, ps_pdwrite, ps_pglobal_lookup, ps_pstop, ps_ptread)
-	(ps_ptwrite, ps_lgetxregs, ps_lgetxregsize, ps_lsetxregs)
-	(ps_plog): Redeclare exported functions with default visibility.
-
-2020-01-16  Nitika Achra  <Nitika.Achra@amd.com>
-
-	* dwarf2loc.c (decode_debug_loclists_addresses): Handle
-	DW_LLE_base_addressx, DW_LLE_startx_length, DW_LLE_start_length.
-
-2020-01-15  Simon Marchi  <simon.marchi@efficios.com>
-
-	* infcmd.c (post_create_inferior): Use get_thread_regcache
-	instead of get_current_regcache.
-
-2020-01-14  Tom Tromey  <tom@tromey.com>
-
-	PR symtab/12535:
-	* python/python.c (gdbpy_decode_line): Treat empty string the same
-	as no argument.
-
-2020-01-14  Tom Tromey  <tom@tromey.com>
-
-	* Makefile.in (CLIBS): Remove second use of $(LIBIBERTY).
-
-2020-01-14  Tom Tromey  <tom@tromey.com>
-
-	* nat/linux-btrace.c: Don't include <config.h>.
-	* nat/linux-ptrace.c: Don't include <config.h>.
-	* nat/x86-linux-dregs.c: Don't include <config.h>.
-
-2020-01-14  Tom Tromey  <tom@tromey.com>
-
-	* configure: Rebuild.
-	* configure.ac: Move many checks to ../gdbsupport/common.m4.
-
-2020-01-14  Tom Tromey  <tom@tromey.com>
-
-	* nat/x86-linux-dregs.c: Include configh.h.
-	* nat/linux-ptrace.c: Include configh.h.
-	* nat/linux-btrace.c: Include configh.h.
-	* defs.h: Include config.h, bfd.h.
-	* configure.ac: Don't source common.host.
-	(CONFIG_OBS, CONFIG_SRCS): Remove gdbsupport files.
-	* configure: Rebuild.
-	* acinclude.m4: Update path.
-	* Makefile.in (SUPPORT, LIBSUPPORT, INCSUPPORT): New variables.
-	(CONFIG_SRC_SUBDIR): Remove gdbsupport.
-	(INTERNAL_CFLAGS_BASE): Add INCSUPPORT.
-	(CLIBS): Add LIBSUPPORT.
-	(CDEPS): Likewise.
-	(COMMON_SFILES): Remove gdbsupport files.
-	(HFILES_NO_SRCDIR): Likewise.
-	(stamp-version): Update path to create-version.sh.
-	(ALLDEPFILES): Remove gdbsupport files.
-
-2020-01-14  Tom Tromey  <tom@tromey.com>
-
-	* gdbsupport/common.m4 (GDB_AC_COMMON): Define WIN32APILIBS and
-	USE_WIN32API when needed.
-	* configure.ac (USE_WIN32API): Don't define.
-	(WIN32LIBS): Use WIN32APILIBS.
-	* configure: Rebuild.
-
-2020-01-14  Tom Tromey  <tom@tromey.com>
-
-	* configure: Rebuild.
-	* gdbsupport/common.m4 (GDB_AC_COMMON): Fix indentation.
-
-2020-01-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>
-
-	* skip.c (skip_function_command): Make skip w/o arguments use the
-	name of the inlined function if pc is inside any inlined function.
-
-2020-01-14  Luis Machado  <luis.machado@linaro.org>
-
-	* inf-ptrace.c (inf_ptrace_target::resume): Update comments.
-	* infrun.c (resume_1): Likewise.
-	(handle_inferior_event): Remove stale comment.
-	* linux-nat.c (linux_nat_target::resume): Update comments.
-	(save_stop_reason): Likewise.
-	(linux_nat_filter_event): Likewise.
-	* linux-nat.h (struct lwp_info) <stop_pc>, <stop_reason>: Likewise.
-
-2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* elfread.c (record_minimal_symbol): Set section index to 0 for
-	non-allocatable sections.
-
-
-2020-01-13  Ali Tamur <tamur@google.com>
-
-	* dwarf2read.c (dwarf2_debug_sections): Add debug_str_offsets sections.
-	(dwarf2_cu): Add str_offsets_base field.  Change the type of addr_base
-	to gdb::optional.  Update comments.
-	(dwo_file): Update comments.
-	(read_attribute): Update API to take an additional out parameter,
-	need_reprocess.  This is used to mark attributes that need other
-	attributes (e.g. str_offsets_base) for correct computation which may not
-	have been read yet.
-	(read_attribute_reprocess): New function declaration.
-	(read_addr_index): Likewise.
-	(read_dwo_str_index): Likewise.
-	(read_stub_str_index): Likewise.
-	(dwarf2_per_objfile::locate_sections): Handle debug_str_offsets section.
-	(lookup_addr_base): New function definition.
-	(lookup_ranges_base): Likewise.
-	(read_cutu_die_from_dwo): Use the new functions: lookup_addr_base,
-	lookup_ranges_base.
-	(init_cutu_and_read_dies): Update comments.
-	(init_cutu_and_read_dies_no_follow): Change API to take parent compile
-	unit.  This is used to inherit parent's str_offsets_base and addr_base.
-	Update comments.
-	(init_cutu_and_read_dies_simple): Reflect API changes.
-	(skip_one_die): Reflect API changes.  Handle DW_FORM_rnglistx.
-	(create_cus_hash_table): Change API to take parent compile unit.  
-	Reflect API changes.
-	(open_and_init_dwo_file): Reflect API changes.
-	(dwarf2_get_pc_bounds): Update comments.
-	(dwarf2_record_block_ranges): Likewise.
-	(read_full_die_1): Change implementation to reprocess attributes that
-	need str_offsets_base and addr_base.
-	(partial_die_info::read): Likewise.
-	(read_attribute_reprocess): New function definition.
-	(read_attribute_value): Change API to take an additional out parameter,
-	need_reprocess.  Handle DW_FORM_rnglistx.  No longer trigger an error
-	when a non-dwo compile unit has index based attributes.
-	(read_attribute): Reflect API changes.
-	(read_addr_index_1): Reflect API changes.  Update comments.
-	(dwarf2_read_addr_index_data): Reflect API changes.
-	(dwarf2_read_addr_index): Likewise.
-	(read_str_index): Change API and implementation.  This becomes a helper
-	to be used by the new string index related methods.  Update error
-	message and comments.
-	(read_dwo_str_index): New function definition.
-	(read_stub_str_index): Likewise.
-	* dwarf2read.h (dwarf2_per_objfile): Add str_offsets field.
-	* symfile.h (dwarf2_debug_sections): Likewise.
-	* xcoffread.c (dwarf2_debug_sections): Likewise.
-
-2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
-
-	* gdbcore.h (struct core_fns) <core_read_registers>: Change
-	core_reg_sect type to gdb_byte *.
-	* arm-nbsd-nat.c (fetch_elfcore_registers): Likewise.
-	* cris-tdep.c (fetch_core_registers): Likewise.
-	* corelow.c (core_target::get_core_register_section): Change
-	type of `contents` to gdb::byte_vector.
-
-2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* tui/tui-wingeneral.c (box_win): Position the title in the center
-	of the border.
-
-2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* corelow.c (core_target::get_core_register_section): Use
-	  std::vector instead of alloca.
-
-2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
-
-	* warning.m4: Add -Wmissing-declarations to build_warnings.
-	* configure: Re-generate.
-
-2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
-
-	* python/python.c (init__gdb_module): Add declaration.
-
-2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
-
-	* aarch64-fbsd-nat.c (_initialize_aarch64_fbsd_nat): Add declaration.
-	* aarch64-fbsd-tdep.c (_initialize_aarch64_fbsd_tdep): Add declaration.
-	* aarch64-linux-nat.c (_initialize_aarch64_linux_nat): Add declaration.
-	* aarch64-linux-tdep.c (_initialize_aarch64_linux_tdep): Add declaration.
-	* aarch64-newlib-tdep.c (_initialize_aarch64_newlib_tdep): Add declaration.
-	* aarch64-tdep.c (_initialize_aarch64_tdep): Add declaration.
-	* ada-exp.y (_initialize_ada_exp): Add declaration.
-	* ada-lang.c (_initialize_ada_language): Add declaration.
-	* ada-tasks.c (_initialize_tasks): Add declaration.
-	* agent.c (_initialize_agent): Add declaration.
-	* aix-thread.c (_initialize_aix_thread): Add declaration.
-	* alpha-bsd-nat.c (_initialize_alphabsd_nat): Add declaration.
-	* alpha-linux-nat.c (_initialize_alpha_linux_nat): Add declaration.
-	* alpha-linux-tdep.c (_initialize_alpha_linux_tdep): Add declaration.
-	* alpha-nbsd-tdep.c (_initialize_alphanbsd_tdep): Add declaration.
-	* alpha-obsd-tdep.c (_initialize_alphaobsd_tdep): Add declaration.
-	* alpha-tdep.c (_initialize_alpha_tdep): Add declaration.
-	* amd64-darwin-tdep.c (_initialize_amd64_darwin_tdep): Add declaration.
-	* amd64-dicos-tdep.c (_initialize_amd64_dicos_tdep): Add declaration.
-	* amd64-fbsd-nat.c (_initialize_amd64fbsd_nat): Add declaration.
-	* amd64-fbsd-tdep.c (_initialize_amd64fbsd_tdep): Add declaration.
-	* amd64-linux-nat.c (_initialize_amd64_linux_nat): Add declaration.
-	* amd64-linux-tdep.c (_initialize_amd64_linux_tdep): Add declaration.
-	* amd64-nbsd-nat.c (_initialize_amd64nbsd_nat): Add declaration.
-	* amd64-nbsd-tdep.c (_initialize_amd64nbsd_tdep): Add declaration.
-	* amd64-obsd-nat.c (_initialize_amd64obsd_nat): Add declaration.
-	* amd64-obsd-tdep.c (_initialize_amd64obsd_tdep): Add declaration.
-	* amd64-sol2-tdep.c (_initialize_amd64_sol2_tdep): Add declaration.
-	* amd64-tdep.c (_initialize_amd64_tdep): Add declaration.
-	* amd64-windows-nat.c (_initialize_amd64_windows_nat): Add declaration.
-	* amd64-windows-tdep.c (_initialize_amd64_windows_tdep): Add declaration.
-	* annotate.c (_initialize_annotate): Add declaration.
-	* arc-newlib-tdep.c (_initialize_arc_newlib_tdep): Add declaration.
-	* arc-tdep.c (_initialize_arc_tdep): Add declaration.
-	* arch-utils.c (_initialize_gdbarch_utils): Add declaration.
-	* arm-fbsd-nat.c (_initialize_arm_fbsd_nat): Add declaration.
-	* arm-fbsd-tdep.c (_initialize_arm_fbsd_tdep): Add declaration.
-	* arm-linux-nat.c (_initialize_arm_linux_nat): Add declaration.
-	* arm-linux-tdep.c (_initialize_arm_linux_tdep): Add declaration.
-	* arm-nbsd-nat.c (_initialize_arm_netbsd_nat): Add declaration.
-	* arm-nbsd-tdep.c (_initialize_arm_netbsd_tdep): Add declaration.
-	* arm-obsd-tdep.c (_initialize_armobsd_tdep): Add declaration.
-	* arm-pikeos-tdep.c (_initialize_arm_pikeos_tdep): Add declaration.
-	* arm-symbian-tdep.c (_initialize_arm_symbian_tdep): Add declaration.
-	* arm-tdep.c (_initialize_arm_tdep): Add declaration.
-	* arm-wince-tdep.c (_initialize_arm_wince_tdep): Add declaration.
-	* auto-load.c (_initialize_auto_load): Add declaration.
-	* auxv.c (_initialize_auxv): Add declaration.
-	* avr-tdep.c (_initialize_avr_tdep): Add declaration.
-	* ax-gdb.c (_initialize_ax_gdb): Add declaration.
-	* bfin-linux-tdep.c (_initialize_bfin_linux_tdep): Add declaration.
-	* bfin-tdep.c (_initialize_bfin_tdep): Add declaration.
-	* break-catch-sig.c (_initialize_break_catch_sig): Add declaration.
-	* break-catch-syscall.c (_initialize_break_catch_syscall): Add declaration.
-	* break-catch-throw.c (_initialize_break_catch_throw): Add declaration.
-	* breakpoint.c (_initialize_breakpoint): Add declaration.
-	* bsd-uthread.c (_initialize_bsd_uthread): Add declaration.
-	* btrace.c (_initialize_btrace): Add declaration.
-	* charset.c (_initialize_charset): Add declaration.
-	* cli/cli-cmds.c (_initialize_cli_cmds): Add declaration.
-	* cli/cli-dump.c (_initialize_cli_dump): Add declaration.
-	* cli/cli-interp.c (_initialize_cli_interp): Add declaration.
-	* cli/cli-logging.c (_initialize_cli_logging): Add declaration.
-	* cli/cli-script.c (_initialize_cli_script): Add declaration.
-	* cli/cli-style.c (_initialize_cli_style): Add declaration.
-	* coff-pe-read.c (_initialize_coff_pe_read): Add declaration.
-	* coffread.c (_initialize_coffread): Add declaration.
-	* compile/compile-cplus-types.c (_initialize_compile_cplus_types): Add declaration.
-	* compile/compile.c (_initialize_compile): Add declaration.
-	* complaints.c (_initialize_complaints): Add declaration.
-	* completer.c (_initialize_completer): Add declaration.
-	* copying.c (_initialize_copying): Add declaration.
-	* corefile.c (_initialize_core): Add declaration.
-	* corelow.c (_initialize_corelow): Add declaration.
-	* cp-abi.c (_initialize_cp_abi): Add declaration.
-	* cp-namespace.c (_initialize_cp_namespace): Add declaration.
-	* cp-support.c (_initialize_cp_support): Add declaration.
-	* cp-valprint.c (_initialize_cp_valprint): Add declaration.
-	* cris-linux-tdep.c (_initialize_cris_linux_tdep): Add declaration.
-	* cris-tdep.c (_initialize_cris_tdep): Add declaration.
-	* csky-linux-tdep.c (_initialize_csky_linux_tdep): Add declaration.
-	* csky-tdep.c (_initialize_csky_tdep): Add declaration.
-	* ctfread.c (_initialize_ctfread): Add declaration.
-	* d-lang.c (_initialize_d_language): Add declaration.
-	* darwin-nat-info.c (_initialize_darwin_info_commands): Add declaration.
-	* darwin-nat.c (_initialize_darwin_nat): Add declaration.
-	* dbxread.c (_initialize_dbxread): Add declaration.
-	* dcache.c (_initialize_dcache): Add declaration.
-	* disasm-selftests.c (_initialize_disasm_selftests): Add declaration.
-	* disasm.c (_initialize_disasm): Add declaration.
-	* dtrace-probe.c (_initialize_dtrace_probe): Add declaration.
-	* dummy-frame.c (_initialize_dummy_frame): Add declaration.
-	* dwarf-index-cache.c (_initialize_index_cache): Add declaration.
-	* dwarf-index-write.c (_initialize_dwarf_index_write): Add declaration.
-	* dwarf2-frame-tailcall.c (_initialize_tailcall_frame): Add declaration.
-	* dwarf2-frame.c (_initialize_dwarf2_frame): Add declaration.
-	* dwarf2expr.c (_initialize_dwarf2expr): Add declaration.
-	* dwarf2loc.c (_initialize_dwarf2loc): Add declaration.
-	* dwarf2read.c (_initialize_dwarf2_read): Add declaration.
-	* elfread.c (_initialize_elfread): Add declaration.
-	* exec.c (_initialize_exec): Add declaration.
-	* extension.c (_initialize_extension): Add declaration.
-	* f-lang.c (_initialize_f_language): Add declaration.
-	* f-valprint.c (_initialize_f_valprint): Add declaration.
-	* fbsd-nat.c (_initialize_fbsd_nat): Add declaration.
-	* fbsd-tdep.c (_initialize_fbsd_tdep): Add declaration.
-	* filesystem.c (_initialize_filesystem): Add declaration.
-	* findcmd.c (_initialize_mem_search): Add declaration.
-	* findvar.c (_initialize_findvar): Add declaration.
-	* fork-child.c (_initialize_fork_child): Add declaration.
-	* frame-base.c (_initialize_frame_base): Add declaration.
-	* frame-unwind.c (_initialize_frame_unwind): Add declaration.
-	* frame.c (_initialize_frame): Add declaration.
-	* frv-linux-tdep.c (_initialize_frv_linux_tdep): Add declaration.
-	* frv-tdep.c (_initialize_frv_tdep): Add declaration.
-	* ft32-tdep.c (_initialize_ft32_tdep): Add declaration.
-	* gcore.c (_initialize_gcore): Add declaration.
-	* gdb-demangle.c (_initialize_gdb_demangle): Add declaration.
-	* gdb_bfd.c (_initialize_gdb_bfd): Add declaration.
-	* gdbarch-selftests.c (_initialize_gdbarch_selftests): Add declaration.
-	* gdbarch.c (_initialize_gdbarch): Add declaration.
-	* gdbtypes.c (_initialize_gdbtypes): Add declaration.
-	* gnu-nat.c (_initialize_gnu_nat): Add declaration.
-	* gnu-v2-abi.c (_initialize_gnu_v2_abi): Add declaration.
-	* gnu-v3-abi.c (_initialize_gnu_v3_abi): Add declaration.
-	* go-lang.c (_initialize_go_language): Add declaration.
-	* go32-nat.c (_initialize_go32_nat): Add declaration.
-	* guile/guile.c (_initialize_guile): Add declaration.
-	* h8300-tdep.c (_initialize_h8300_tdep): Add declaration.
-	* hppa-linux-nat.c (_initialize_hppa_linux_nat): Add declaration.
-	* hppa-linux-tdep.c (_initialize_hppa_linux_tdep): Add declaration.
-	* hppa-nbsd-nat.c (_initialize_hppanbsd_nat): Add declaration.
-	* hppa-nbsd-tdep.c (_initialize_hppanbsd_tdep): Add declaration.
-	* hppa-obsd-nat.c (_initialize_hppaobsd_nat): Add declaration.
-	* hppa-obsd-tdep.c (_initialize_hppabsd_tdep): Add declaration.
-	* hppa-tdep.c (_initialize_hppa_tdep): Add declaration.
-	* i386-bsd-nat.c (_initialize_i386bsd_nat): Add declaration.
-	* i386-cygwin-tdep.c (_initialize_i386_cygwin_tdep): Add declaration.
-	* i386-darwin-nat.c (_initialize_i386_darwin_nat): Add declaration.
-	* i386-darwin-tdep.c (_initialize_i386_darwin_tdep): Add declaration.
-	* i386-dicos-tdep.c (_initialize_i386_dicos_tdep): Add declaration.
-	* i386-fbsd-nat.c (_initialize_i386fbsd_nat): Add declaration.
-	* i386-fbsd-tdep.c (_initialize_i386fbsd_tdep): Add declaration.
-	* i386-gnu-nat.c (_initialize_i386gnu_nat): Add declaration.
-	* i386-gnu-tdep.c (_initialize_i386gnu_tdep): Add declaration.
-	* i386-go32-tdep.c (_initialize_i386_go32_tdep): Add declaration.
-	* i386-linux-nat.c (_initialize_i386_linux_nat): Add declaration.
-	* i386-linux-tdep.c (_initialize_i386_linux_tdep): Add declaration.
-	* i386-nbsd-nat.c (_initialize_i386nbsd_nat): Add declaration.
-	* i386-nbsd-tdep.c (_initialize_i386nbsd_tdep): Add declaration.
-	* i386-nto-tdep.c (_initialize_i386nto_tdep): Add declaration.
-	* i386-obsd-nat.c (_initialize_i386obsd_nat): Add declaration.
-	* i386-obsd-tdep.c (_initialize_i386obsd_tdep): Add declaration.
-	* i386-sol2-nat.c (_initialize_amd64_sol2_nat): Add declaration.
-	* i386-sol2-tdep.c (_initialize_i386_sol2_tdep): Add declaration.
-	* i386-tdep.c (_initialize_i386_tdep): Add declaration.
-	* i386-windows-nat.c (_initialize_i386_windows_nat): Add declaration.
-	* ia64-libunwind-tdep.c (_initialize_libunwind_frame): Add declaration.
-	* ia64-linux-nat.c (_initialize_ia64_linux_nat): Add declaration.
-	* ia64-linux-tdep.c (_initialize_ia64_linux_tdep): Add declaration.
-	* ia64-tdep.c (_initialize_ia64_tdep): Add declaration.
-	* ia64-vms-tdep.c (_initialize_ia64_vms_tdep): Add declaration.
-	* infcall.c (_initialize_infcall): Add declaration.
-	* infcmd.c (_initialize_infcmd): Add declaration.
-	* inflow.c (_initialize_inflow): Add declaration.
-	* infrun.c (_initialize_infrun): Add declaration.
-	* interps.c (_initialize_interpreter): Add declaration.
-	* iq2000-tdep.c (_initialize_iq2000_tdep): Add declaration.
-	* jit.c (_initialize_jit): Add declaration.
-	* language.c (_initialize_language): Add declaration.
-	* linux-fork.c (_initialize_linux_fork): Add declaration.
-	* linux-nat.c (_initialize_linux_nat): Add declaration.
-	* linux-tdep.c (_initialize_linux_tdep): Add declaration.
-	* linux-thread-db.c (_initialize_thread_db): Add declaration.
-	* lm32-tdep.c (_initialize_lm32_tdep): Add declaration.
-	* m2-lang.c (_initialize_m2_language): Add declaration.
-	* m32c-tdep.c (_initialize_m32c_tdep): Add declaration.
-	* m32r-linux-nat.c (_initialize_m32r_linux_nat): Add declaration.
-	* m32r-linux-tdep.c (_initialize_m32r_linux_tdep): Add declaration.
-	* m32r-tdep.c (_initialize_m32r_tdep): Add declaration.
-	* m68hc11-tdep.c (_initialize_m68hc11_tdep): Add declaration.
-	* m68k-bsd-nat.c (_initialize_m68kbsd_nat): Add declaration.
-	* m68k-bsd-tdep.c (_initialize_m68kbsd_tdep): Add declaration.
-	* m68k-linux-nat.c (_initialize_m68k_linux_nat): Add declaration.
-	* m68k-linux-tdep.c (_initialize_m68k_linux_tdep): Add declaration.
-	* m68k-tdep.c (_initialize_m68k_tdep): Add declaration.
-	* machoread.c (_initialize_machoread): Add declaration.
-	* macrocmd.c (_initialize_macrocmd): Add declaration.
-	* macroscope.c (_initialize_macroscope): Add declaration.
-	* maint-test-options.c (_initialize_maint_test_options): Add declaration.
-	* maint-test-settings.c (_initialize_maint_test_settings): Add declaration.
-	* maint.c (_initialize_maint_cmds): Add declaration.
-	* mdebugread.c (_initialize_mdebugread): Add declaration.
-	* memattr.c (_initialize_mem): Add declaration.
-	* mep-tdep.c (_initialize_mep_tdep): Add declaration.
-	* mi/mi-cmd-env.c (_initialize_mi_cmd_env): Add declaration.
-	* mi/mi-cmds.c (_initialize_mi_cmds): Add declaration.
-	* mi/mi-interp.c (_initialize_mi_interp): Add declaration.
-	* mi/mi-main.c (_initialize_mi_main): Add declaration.
-	* microblaze-linux-tdep.c (_initialize_microblaze_linux_tdep): Add declaration.
-	* microblaze-tdep.c (_initialize_microblaze_tdep): Add declaration.
-	* mips-fbsd-nat.c (_initialize_mips_fbsd_nat): Add declaration.
-	* mips-fbsd-tdep.c (_initialize_mips_fbsd_tdep): Add declaration.
-	* mips-linux-nat.c (_initialize_mips_linux_nat): Add declaration.
-	* mips-linux-tdep.c (_initialize_mips_linux_tdep): Add declaration.
-	* mips-nbsd-nat.c (_initialize_mipsnbsd_nat): Add declaration.
-	* mips-nbsd-tdep.c (_initialize_mipsnbsd_tdep): Add declaration.
-	* mips-sde-tdep.c (_initialize_mips_sde_tdep): Add declaration.
-	* mips-tdep.c (_initialize_mips_tdep): Add declaration.
-	* mips64-obsd-nat.c (_initialize_mips64obsd_nat): Add declaration.
-	* mips64-obsd-tdep.c (_initialize_mips64obsd_tdep): Add declaration.
-	* mipsread.c (_initialize_mipsread): Add declaration.
-	* mn10300-linux-tdep.c (_initialize_mn10300_linux_tdep): Add declaration.
-	* mn10300-tdep.c (_initialize_mn10300_tdep): Add declaration.
-	* moxie-tdep.c (_initialize_moxie_tdep): Add declaration.
-	* msp430-tdep.c (_initialize_msp430_tdep): Add declaration.
-	* nds32-tdep.c (_initialize_nds32_tdep): Add declaration.
-	* nios2-linux-tdep.c (_initialize_nios2_linux_tdep): Add declaration.
-	* nios2-tdep.c (_initialize_nios2_tdep): Add declaration.
-	* nto-procfs.c (_initialize_procfs): Add declaration.
-	* objc-lang.c (_initialize_objc_language): Add declaration.
-	* observable.c (_initialize_observer): Add declaration.
-	* opencl-lang.c (_initialize_opencl_language): Add declaration.
-	* or1k-linux-tdep.c (_initialize_or1k_linux_tdep): Add declaration.
-	* or1k-tdep.c (_initialize_or1k_tdep): Add declaration.
-	* osabi.c (_initialize_gdb_osabi): Add declaration.
-	* osdata.c (_initialize_osdata): Add declaration.
-	* p-valprint.c (_initialize_pascal_valprint): Add declaration.
-	* parse.c (_initialize_parse): Add declaration.
-	* ppc-fbsd-nat.c (_initialize_ppcfbsd_nat): Add declaration.
-	* ppc-fbsd-tdep.c (_initialize_ppcfbsd_tdep): Add declaration.
-	* ppc-linux-nat.c (_initialize_ppc_linux_nat): Add declaration.
-	* ppc-linux-tdep.c (_initialize_ppc_linux_tdep): Add declaration.
-	* ppc-nbsd-nat.c (_initialize_ppcnbsd_nat): Add declaration.
-	* ppc-nbsd-tdep.c (_initialize_ppcnbsd_tdep): Add declaration.
-	* ppc-obsd-nat.c (_initialize_ppcobsd_nat): Add declaration.
-	* ppc-obsd-tdep.c (_initialize_ppcobsd_tdep): Add declaration.
-	* printcmd.c (_initialize_printcmd): Add declaration.
-	* probe.c (_initialize_probe): Add declaration.
-	* proc-api.c (_initialize_proc_api): Add declaration.
-	* proc-events.c (_initialize_proc_events): Add declaration.
-	* proc-service.c (_initialize_proc_service): Add declaration.
-	* procfs.c (_initialize_procfs): Add declaration.
-	* producer.c (_initialize_producer): Add declaration.
-	* psymtab.c (_initialize_psymtab): Add declaration.
-	* python/python.c (_initialize_python): Add declaration.
-	* ravenscar-thread.c (_initialize_ravenscar): Add declaration.
-	* record-btrace.c (_initialize_record_btrace): Add declaration.
-	* record-full.c (_initialize_record_full): Add declaration.
-	* record.c (_initialize_record): Add declaration.
-	* regcache-dump.c (_initialize_regcache_dump): Add declaration.
-	* regcache.c (_initialize_regcache): Add declaration.
-	* reggroups.c (_initialize_reggroup): Add declaration.
-	* remote-notif.c (_initialize_notif): Add declaration.
-	* remote-sim.c (_initialize_remote_sim): Add declaration.
-	* remote.c (_initialize_remote): Add declaration.
-	* reverse.c (_initialize_reverse): Add declaration.
-	* riscv-fbsd-nat.c (_initialize_riscv_fbsd_nat): Add declaration.
-	* riscv-fbsd-tdep.c (_initialize_riscv_fbsd_tdep): Add declaration.
-	* riscv-linux-nat.c (_initialize_riscv_linux_nat): Add declaration.
-	* riscv-linux-tdep.c (_initialize_riscv_linux_tdep): Add declaration.
-	* riscv-tdep.c (_initialize_riscv_tdep): Add declaration.
-	* rl78-tdep.c (_initialize_rl78_tdep): Add declaration.
-	* rs6000-aix-tdep.c (_initialize_rs6000_aix_tdep): Add declaration.
-	* rs6000-lynx178-tdep.c (_initialize_rs6000_lynx178_tdep):
-	Add declaration.
-	* rs6000-nat.c (_initialize_rs6000_nat): Add declaration.
-	* rs6000-tdep.c (_initialize_rs6000_tdep): Add declaration.
-	* run-on-main-thread.c (_initialize_run_on_main_thread): Add declaration.
-	* rust-exp.y (_initialize_rust_exp): Add declaration.
-	* rx-tdep.c (_initialize_rx_tdep): Add declaration.
-	* s12z-tdep.c (_initialize_s12z_tdep): Add declaration.
-	* s390-linux-nat.c (_initialize_s390_nat): Add declaration.
-	* s390-linux-tdep.c (_initialize_s390_linux_tdep): Add declaration.
-	* s390-tdep.c (_initialize_s390_tdep): Add declaration.
-	* score-tdep.c (_initialize_score_tdep): Add declaration.
-	* ser-go32.c (_initialize_ser_dos): Add declaration.
-	* ser-mingw.c (_initialize_ser_windows): Add declaration.
-	* ser-pipe.c (_initialize_ser_pipe): Add declaration.
-	* ser-tcp.c (_initialize_ser_tcp): Add declaration.
-	* ser-uds.c (_initialize_ser_socket): Add declaration.
-	* ser-unix.c (_initialize_ser_hardwire): Add declaration.
-	* serial.c (_initialize_serial): Add declaration.
-	* sh-linux-tdep.c (_initialize_sh_linux_tdep): Add declaration.
-	* sh-nbsd-nat.c (_initialize_shnbsd_nat): Add declaration.
-	* sh-nbsd-tdep.c (_initialize_shnbsd_tdep): Add declaration.
-	* sh-tdep.c (_initialize_sh_tdep): Add declaration.
-	* skip.c (_initialize_step_skip): Add declaration.
-	* sol-thread.c (_initialize_sol_thread): Add declaration.
-	* solib-aix.c (_initialize_solib_aix): Add declaration.
-	* solib-darwin.c (_initialize_darwin_solib): Add declaration.
-	* solib-dsbt.c (_initialize_dsbt_solib): Add declaration.
-	* solib-frv.c (_initialize_frv_solib): Add declaration.
-	* solib-svr4.c (_initialize_svr4_solib): Add declaration.
-	* solib-target.c (_initialize_solib_target): Add declaration.
-	* solib.c (_initialize_solib): Add declaration.
-	* source-cache.c (_initialize_source_cache): Add declaration.
-	* source.c (_initialize_source): Add declaration.
-	* sparc-linux-nat.c (_initialize_sparc_linux_nat): Add declaration.
-	* sparc-linux-tdep.c (_initialize_sparc_linux_tdep): Add declaration.
-	* sparc-nat.c (_initialize_sparc_nat): Add declaration.
-	* sparc-nbsd-nat.c (_initialize_sparcnbsd_nat): Add declaration.
-	* sparc-nbsd-tdep.c (_initialize_sparcnbsd_tdep): Add declaration.
-	* sparc-obsd-tdep.c (_initialize_sparc32obsd_tdep): Add declaration.
-	* sparc-sol2-tdep.c (_initialize_sparc_sol2_tdep): Add declaration.
-	* sparc-tdep.c (_initialize_sparc_tdep): Add declaration.
-	* sparc64-fbsd-nat.c (_initialize_sparc64fbsd_nat): Add declaration.
-	* sparc64-fbsd-tdep.c (_initialize_sparc64fbsd_tdep): Add declaration.
-	* sparc64-linux-nat.c (_initialize_sparc64_linux_nat): Add declaration.
-	* sparc64-linux-tdep.c (_initialize_sparc64_linux_tdep): Add declaration.
-	* sparc64-nat.c (_initialize_sparc64_nat): Add declaration.
-	* sparc64-nbsd-nat.c (_initialize_sparc64nbsd_nat): Add declaration.
-	* sparc64-nbsd-tdep.c (_initialize_sparc64nbsd_tdep): Add declaration.
-	* sparc64-obsd-nat.c (_initialize_sparc64obsd_nat): Add declaration.
-	* sparc64-obsd-tdep.c (_initialize_sparc64obsd_tdep): Add declaration.
-	* sparc64-sol2-tdep.c (_initialize_sparc64_sol2_tdep): Add declaration.
-	* sparc64-tdep.c (_initialize_sparc64_adi_tdep): Add declaration.
-	* stabsread.c (_initialize_stabsread): Add declaration.
-	* stack.c (_initialize_stack): Add declaration.
-	* stap-probe.c (_initialize_stap_probe): Add declaration.
-	* std-regs.c (_initialize_frame_reg): Add declaration.
-	* symfile-debug.c (_initialize_symfile_debug): Add declaration.
-	* symfile-mem.c (_initialize_symfile_mem): Add declaration.
-	* symfile.c (_initialize_symfile): Add declaration.
-	* symmisc.c (_initialize_symmisc): Add declaration.
-	* symtab.c (_initialize_symtab): Add declaration.
-	* target.c (_initialize_target): Add declaration.
-	* target-connection.c (_initialize_target_connection): Add
-	declaration.
-	* target-dcache.c (_initialize_target_dcache): Add declaration.
-	* target-descriptions.c (_initialize_target_descriptions): Add declaration.
-	* thread.c (_initialize_thread): Add declaration.
-	* tic6x-linux-tdep.c (_initialize_tic6x_linux_tdep): Add declaration.
-	* tic6x-tdep.c (_initialize_tic6x_tdep): Add declaration.
-	* tilegx-linux-nat.c (_initialize_tile_linux_nat): Add declaration.
-	* tilegx-linux-tdep.c (_initialize_tilegx_linux_tdep): Add declaration.
-	* tilegx-tdep.c (_initialize_tilegx_tdep): Add declaration.
-	* tracectf.c (_initialize_ctf): Add declaration.
-	* tracefile-tfile.c (_initialize_tracefile_tfile): Add declaration.
-	* tracefile.c (_initialize_tracefile): Add declaration.
-	* tracepoint.c (_initialize_tracepoint): Add declaration.
-	* tui/tui-hooks.c (_initialize_tui_hooks): Add declaration.
-	* tui/tui-interp.c (_initialize_tui_interp): Add declaration.
-	* tui/tui-layout.c (_initialize_tui_layout): Add declaration.
-	* tui/tui-regs.c (_initialize_tui_regs): Add declaration.
-	* tui/tui-stack.c (_initialize_tui_stack): Add declaration.
-	* tui/tui-win.c (_initialize_tui_win): Add declaration.
-	* tui/tui.c (_initialize_tui): Add declaration.
-	* typeprint.c (_initialize_typeprint): Add declaration.
-	* ui-style.c (_initialize_ui_style): Add declaration.
-	* unittests/array-view-selftests.c (_initialize_array_view_selftests): Add declaration.
-	* unittests/child-path-selftests.c (_initialize_child_path_selftests): Add declaration.
-	* unittests/cli-utils-selftests.c (_initialize_cli_utils_selftests): Add declaration.
-	* unittests/common-utils-selftests.c (_initialize_common_utils_selftests): Add declaration.
-	* unittests/copy_bitwise-selftests.c (_initialize_copy_bitwise_utils_selftests): Add declaration.
-	* unittests/environ-selftests.c (_initialize_environ_selftests): Add declaration.
-	* unittests/filtered_iterator-selftests.c
-	(_initialize_filtered_iterator_selftests): Add declaration.
-	* unittests/format_pieces-selftests.c (_initialize_format_pieces_selftests): Add declaration.
-	* unittests/function-view-selftests.c (_initialize_function_view_selftests): Add declaration.
-	* unittests/help-doc-selftests.c (_initialize_help_doc_selftests): Add declaration.
-	* unittests/lookup_name_info-selftests.c (_initialize_lookup_name_info_selftests): Add declaration.
-	* unittests/main-thread-selftests.c
-	(_initialize_main_thread_selftests): Add declaration.
-	* unittests/memory-map-selftests.c (_initialize_memory_map_selftests): Add declaration.
-	* unittests/memrange-selftests.c (_initialize_memrange_selftests): Add declaration.
-	* unittests/mkdir-recursive-selftests.c (_initialize_mkdir_recursive_selftests): Add declaration.
-	* unittests/observable-selftests.c (_initialize_observer_selftest): Add declaration.
-	* unittests/offset-type-selftests.c (_initialize_offset_type_selftests): Add declaration.
-	* unittests/optional-selftests.c (_initialize_optional_selftests): Add declaration.
-	* unittests/parse-connection-spec-selftests.c (_initialize_parse_connection_spec_selftests): Add declaration.
-	* unittests/rsp-low-selftests.c (_initialize_rsp_low_selftests): Add declaration.
-	* unittests/scoped_fd-selftests.c (_initialize_scoped_fd_selftests): Add declaration.
-	* unittests/scoped_mmap-selftests.c (_initialize_scoped_mmap_selftests): Add declaration.
-	* unittests/scoped_restore-selftests.c (_initialize_scoped_restore_selftests): Add declaration.
-	* unittests/string_view-selftests.c (_initialize_string_view_selftests): Add declaration.
-	* unittests/style-selftests.c (_initialize_style_selftest): Add declaration.
-	* unittests/tracepoint-selftests.c (_initialize_tracepoint_selftests): Add declaration.
-	* unittests/tui-selftests.c (_initialize_tui_selftest): Add
-	declaration.
-	* unittests/unpack-selftests.c (_initialize_unpack_selftests): Add declaration.
-	* unittests/utils-selftests.c (_initialize_utils_selftests): Add declaration.
-	* unittests/vec-utils-selftests.c (_initialize_vec_utils_selftests): Add declaration.
-	* unittests/xml-utils-selftests.c (_initialize_xml_utils): Add declaration.
-	* user-regs.c (_initialize_user_regs): Add declaration.
-	* utils.c (_initialize_utils): Add declaration.
-	* v850-tdep.c (_initialize_v850_tdep): Add declaration.
-	* valops.c (_initialize_valops): Add declaration.
-	* valprint.c (_initialize_valprint): Add declaration.
-	* value.c (_initialize_values): Add declaration.
-	* varobj.c (_initialize_varobj): Add declaration.
-	* vax-bsd-nat.c (_initialize_vaxbsd_nat): Add declaration.
-	* vax-nbsd-tdep.c (_initialize_vaxnbsd_tdep): Add declaration.
-	* vax-tdep.c (_initialize_vax_tdep): Add declaration.
-	* windows-nat.c (_initialize_windows_nat): Add declaration.
-	(_initialize_check_for_gdb_ini): Add declaration.
-	(_initialize_loadable): Add declaration.
-	* windows-tdep.c (_initialize_windows_tdep): Add declaration.
-	* x86-bsd-nat.c (_initialize_x86_bsd_nat): Add declaration.
-	* x86-linux-nat.c (_initialize_x86_linux_nat): Add declaration.
-	* xcoffread.c (_initialize_xcoffread): Add declaration.
-	* xml-support.c (_initialize_xml_support): Add declaration.
-	* xstormy16-tdep.c (_initialize_xstormy16_tdep): Add declaration.
-	* xtensa-linux-nat.c (_initialize_xtensa_linux_nat): Add declaration.
-	* xtensa-linux-tdep.c (_initialize_xtensa_linux_tdep): Add declaration.
-	* xtensa-tdep.c (_initialize_xtensa_tdep): Add declaration.
-
-2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* regformats/regdat.sh: Generate declaration for init function.
-
-2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* remote-sim.c (next_pid, INITIAL_PID, sim_inferior_data): Move
-	up.
-	(gdbsim_target) <get_inferior_data_by_ptid, resume_one_inferior,
-	close_one_inferior>: New methods.
-	(get_sim_inferior_data_by_ptid): Move to gdbsim_target,
-	pass down target to find_inferior_pid.
-	(gdbsim_target::fetch_registers, gdbsim_target::store_registers):
-	Pass down target to find_inferior_ptid.
-	(gdbsim_target::create_inferior): Pass down target to
-	add_thread_silent.
-	(gdbsim_close_inferior): Move to gdbsim_close_inferior, pass
-	target down to find_inferior_ptid and switch_to_thread.
-	(gdbsim_target::close): Update to call close_one_inferior.
-	(struct resume_data): Remove.
-	(gdbsim_resume_inferior): Move to gdbsim_target.  Take arguments
-	directly, rather than through a void pointer.
-	(gdbsim_target::resume): Update to call resume_one_inferior.
-
-2020-01-12  Simon Marchi  <simon.marchi@polymtl.ca>
-
-	* gdbsupport/gdb_wait.c: Include gdb_wait.h.
-
-2020-01-12  Pedro Alves  <palves@redhat.com>
-
-	* bsd-kvm.c (bsd_kvm_target::close): Call exit_inferior_silent
-	directly for the current inferior instead of
-	discard_all_inferiors.
-	(discard_all_inferiors): Delete.
-
-2020-01-11  Tom Tromey  <tom@tromey.com>
-
-	* tui/tui-wingeneral.c (box_win): Check cli_styling.
-	* tui/tui-winsource.c (tui_source_window_base::refill): Use
-	deprecated_safe_get_selected_frame.
-
-2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-
-	* inferior.c (print_inferior): Switch inferior before printing it.
-
-2020-01-10  Aleksandar Paunovic  <aleksandar.paunovic@intel.com>
-	    Pedro Alves  <palves@redhat.com>
-
-	* progspace-and-thread.c (switch_to_program_space_and_thread):
-	Assert there's an inferior for PSPACE.  Use
-	switch_to_inferior_no_thread to switch the inferior too.
-	* progspace.c (program_space::~program_space): Call
-	clear_symtab_users here, with SYMFILE_DEFER_BP_RESET.
-	(program_space::free_all_objfiles): Don't call clear_symtab_users
-	here.
-	* symfile.c (symbol_file_clear): Call clear_symtab_users here.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* NEWS: Mention multi-target debugging, "info connections", and
-	"add-inferior -no-connection".
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* infrun.c: Include "target-connection.h".
-	(check_multi_target_resumption): New.
-	(proceed): Call it.
-	* target-connection.c (make_target_connection_string): Make
-	extern.
-	* target-connection.h (make_target_connection_string): Declare.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* Makefile.in (COMMON_SFILES): Add target-connection.c.
-	* inferior.c (uiout_field_connection): New function.
-	(print_inferior): Add new "connection-id" column.
-	(add_inferior_command): Show connection number/string of added
-	inferior.
-	* process-stratum-target.h
-	(process_stratum_target::connection_string): New virtual method.
-	(process_stratum_target::connection_number): New field.
-	* remote.c (remote_target::connection_string): New override.
-	* target-connection.c: New file.
-	* target-connection.h: New file.
-	* target.c (decref_target): Remove process_stratum targets from
-	the connection list.
-	(target_stack::push): Add process_stratum targets to the
-	connection list.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	Revert:
-	2016-04-12  Pedro Alves  <palves@redhat.com>
-	* serial.c (serial_open, serial_fdopen_ops, do_serial_close):
-	Remove references to name.
-	* serial.h (struct serial) <name>: Delete.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* gdbarch-selftests.c (register_to_value_test): Remove "target
-	already pushed" check.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-	    John Baldwin  <jhb@FreeBSD.org>
-
-	* aarch64-linux-nat.c
-	(aarch64_linux_nat_target::thread_architecture): Adjust.
-	* ada-tasks.c (print_ada_task_info): Adjust find_thread_ptid call.
-	(task_command_1): Likewise.
-	* aix-thread.c (sync_threadlists, aix_thread_target::resume)
-	(aix_thread_target::wait, aix_thread_target::fetch_registers)
-	(aix_thread_target::store_registers)
-	(aix_thread_target::thread_alive): Adjust.
-	* amd64-fbsd-tdep.c: Include "inferior.h".
-	(amd64fbsd_get_thread_local_address): Pass down target.
-	* amd64-linux-nat.c (ps_get_thread_area): Use ps_prochandle
-	thread's gdbarch instead of target_gdbarch.
-	* break-catch-sig.c (signal_catchpoint_print_it): Adjust call to
-	get_last_target_status.
-	* break-catch-syscall.c (print_it_catch_syscall): Likewise.
-	* breakpoint.c (breakpoints_should_be_inserted_now): Consider all
-	inferiors.
-	(update_inserted_breakpoint_locations): Skip if inferiors with no
-	execution.
-	(update_global_location_list): When handling moribund locations,
-	find representative inferior for location's pspace, and use thread
-	count of its process_stratum target.
-	* bsd-kvm.c (bsd_kvm_target_open): Pass target down.
-	* bsd-uthread.c (bsd_uthread_target::wait): Use
-	as_process_stratum_target and adjust thread_change_ptid and
-	add_thread calls.
-	(bsd_uthread_target::update_thread_list): Use
-	as_process_stratum_target and adjust find_thread_ptid,
-	thread_change_ptid and add_thread calls.
-	* btrace.c (maint_btrace_packet_history_cmd): Adjust
-	find_thread_ptid call.
-	* corelow.c (add_to_thread_list): Adjust add_thread call.
-	(core_target_open): Adjust add_thread_silent and thread_count
-	calls.
-	(core_target::pid_to_str): Adjust find_inferior_ptid call.
-	* ctf.c (ctf_target_open): Adjust add_thread_silent call.
-	* event-top.c (async_disconnect): Pop targets from all inferiors.
-	* exec.c (add_target_sections): Push exec target on all inferiors
-	sharing the program space.
-	(remove_target_sections): Remove the exec target from all
-	inferiors sharing the program space.
-	(exec_on_vfork): New.
-	* exec.h (exec_on_vfork): Declare.
-	* fbsd-nat.c (fbsd_add_threads): Add fbsd_nat_target parameter.
-	Pass it down.
-	(fbsd_nat_target::update_thread_list): Adjust.
-	(fbsd_nat_target::resume): Adjust.
-	(fbsd_handle_debug_trap): Add fbsd_nat_target parameter.  Pass it
-	down.
-	(fbsd_nat_target::wait, fbsd_nat_target::post_attach): Adjust.
-	* fbsd-tdep.c (fbsd_corefile_thread): Adjust
-	get_thread_arch_regcache call.
-	* fork-child.c (gdb_startup_inferior): Pass target down to
-	startup_inferior and set_executing.
-	* gdbthread.h (struct process_stratum_target): Forward declare.
-	(add_thread, add_thread_silent, add_thread_with_info)
-	(in_thread_list): Add process_stratum_target parameter.
-	(find_thread_ptid(inferior*, ptid_t)): New overload.
-	(find_thread_ptid, thread_change_ptid): Add process_stratum_target
-	parameter.
-	(all_threads()): Delete overload.
-	(all_threads, all_non_exited_threads): Add process_stratum_target
-	parameter.
-	(all_threads_safe): Use brace initialization.
-	(thread_count): Add process_stratum_target parameter.
-	(set_resumed, set_running, set_stop_requested, set_executing)
-	(threads_are_executing, finish_thread_state): Add
-	process_stratum_target parameter.
-	(switch_to_thread): Use is_current_thread.
-	* i386-fbsd-tdep.c: Include "inferior.h".
-	(i386fbsd_get_thread_local_address): Pass down target.
-	* i386-linux-nat.c (i386_linux_nat_target::low_resume): Adjust.
-	* inf-child.c (inf_child_target::maybe_unpush_target): Remove
-	have_inferiors check.
-	* inf-ptrace.c (inf_ptrace_target::create_inferior)
-	(inf_ptrace_target::attach): Adjust.
-	* infcall.c (run_inferior_call): Adjust.
-	* infcmd.c (run_command_1): Pass target to
-	scoped_finish_thread_state.
-	(proceed_thread_callback): Skip inferiors with no execution.
-	(continue_command): Rename 'all_threads' local to avoid hiding
-	'all_threads' function.  Adjust get_last_target_status call.
-	(prepare_one_step): Adjust set_running call.
-	(signal_command): Use user_visible_resume_target.  Compare thread
-	pointers instead of inferior_ptid.
-	(info_program_command): Adjust to pass down target.
-	(attach_command): Mark target's 'thread_executing' flag.
-	(stop_current_target_threads_ns): New, factored out from ...
-	(interrupt_target_1): ... this.  Switch inferior before making
-	target calls.
-	* inferior-iter.h
-	(struct all_inferiors_iterator, struct all_inferiors_range)
-	(struct all_inferiors_safe_range)
-	(struct all_non_exited_inferiors_range): Filter on
-	process_stratum_target too.  Remove explicit.
-	* inferior.c (inferior::inferior): Push dummy target on target
-	stack.
-	(find_inferior_pid, find_inferior_ptid, number_of_live_inferiors):
-	Add process_stratum_target parameter, and pass it down.
-	(have_live_inferiors): Adjust.
-	(switch_to_inferior_and_push_target): New.
-	(add_inferior_command, clone_inferior_command): Handle
-	"-no-connection" parameter.  Use
-	switch_to_inferior_and_push_target.
-	(_initialize_inferior): Mention "-no-connection" option in
-	the help of "add-inferior" and "clone-inferior" commands.
-	* inferior.h: Include "process-stratum-target.h".
-	(interrupt_target_1): Use bool.
-	(struct inferior) <push_target, unpush_target, target_is_pushed,
-	find_target_beneath, top_target, process_target, target_at,
-	m_stack>: New.
-	(discard_all_inferiors): Delete.
-	(find_inferior_pid, find_inferior_ptid, number_of_live_inferiors)
-	(all_inferiors, all_non_exited_inferiors): Add
-	process_stratum_target parameter.
-	* infrun.c: Include "gdb_select.h" and <unordered_map>.
-	(target_last_proc_target): New global.
-	(follow_fork_inferior): Push target on new inferior.  Pass target
-	to add_thread_silent.  Call exec_on_vfork.  Handle target's
-	reference count.
-	(follow_fork): Adjust get_last_target_status call.  Also consider
-	target.
-	(follow_exec): Push target on new inferior.
-	(struct execution_control_state) <target>: New field.
-	(user_visible_resume_target): New.
-	(do_target_resume): Call target_async.
-	(resume_1): Set target's threads_executing flag.  Consider resume
-	target.
-	(commit_resume_all_targets): New.
-	(proceed): Also consider resume target.  Skip threads of inferiors
-	with no execution.  Commit resumtion in all targets.
-	(start_remote): Pass current inferior to wait_for_inferior.
-	(infrun_thread_stop_requested): Consider target as well.  Pass
-	thread_info pointer to clear_inline_frame_state instead of ptid.
-	(infrun_thread_thread_exit): Consider target as well.
-	(random_pending_event_thread): New inferior parameter.  Use it.
-	(do_target_wait): Rename to ...
-	(do_target_wait_1): ... this.  Add inferior parameter, and pass it
-	down.
-	(threads_are_resumed_pending_p, do_target_wait): New.
-	(prepare_for_detach): Adjust calls.
-	(wait_for_inferior): New inferior parameter.  Handle it.  Use
-	do_target_wait_1 instead of do_target_wait.
-	(fetch_inferior_event): Adjust.  Switch to representative
-	inferior.  Pass target down.
-	(set_last_target_status): Add process_stratum_target parameter.
-	Save target in global.
-	(get_last_target_status): Add process_stratum_target parameter and
-	handle it.
-	(nullify_last_target_wait_ptid): Clear 'target_last_proc_target'.
-	(context_switch): Check inferior_ptid == null_ptid before calling
-	inferior_thread().
-	(get_inferior_stop_soon): Pass down target.
-	(wait_one): Rename to ...
-	(poll_one_curr_target): ... this.
-	(struct wait_one_event): New.
-	(wait_one): New.
-	(stop_all_threads): Adjust.
-	(handle_no_resumed, handle_inferior_event): Adjust to consider the
-	event's target.
-	(switch_back_to_stepped_thread): Also consider target.
-	(print_stop_event): Update.
-	(normal_stop): Update.  Also consider the resume target.
-	* infrun.h (wait_for_inferior): Remove declaration.
-	(user_visible_resume_target): New declaration.
-	(get_last_target_status, set_last_target_status): New
-	process_stratum_target parameter.
-	* inline-frame.c (clear_inline_frame_state(ptid_t)): Add
-	process_stratum_target parameter, and use it.
-	(clear_inline_frame_state (thread_info*)): New.
-	* inline-frame.c (clear_inline_frame_state(ptid_t)): Add
-	process_stratum_target parameter.
-	(clear_inline_frame_state (thread_info*)): Declare.
-	* linux-fork.c (delete_checkpoint_command): Pass target down to
-	find_thread_ptid.
-	(checkpoint_command): Adjust.
-	* linux-nat.c (linux_nat_target::follow_fork): Switch to thread
-	instead of just tweaking inferior_ptid.
-	(linux_nat_switch_fork): Pass target down to thread_change_ptid.
-	(exit_lwp): Pass target down to find_thread_ptid.
-	(attach_proc_task_lwp_callback): Pass target down to
-	add_thread/set_running/set_executing.
-	(linux_nat_target::attach): Pass target down to
-	thread_change_ptid.
-	(get_detach_signal): Pass target down to find_thread_ptid.
-	Consider last target status's target.
-	(linux_resume_one_lwp_throw, resume_lwp)
-	(linux_handle_syscall_trap, linux_handle_extended_wait, wait_lwp)
-	(stop_wait_callback, save_stop_reason, linux_nat_filter_event)
-	(linux_nat_wait_1, resume_stopped_resumed_lwps): Pass target down.
-	(linux_nat_target::async_wait_fd): New.
-	(linux_nat_stop_lwp, linux_nat_target::thread_address_space): Pass
-	target down.
-	* linux-nat.h (linux_nat_target::async_wait_fd): Declare.
-	* linux-tdep.c (get_thread_arch_regcache): Pass target down.
-	* linux-thread-db.c (struct thread_db_info::process_target): New
-	field.
-	(add_thread_db_info): Save target.
-	(get_thread_db_info): New process_stratum_target parameter.  Also
-	match target.
-	(delete_thread_db_info): New process_stratum_target parameter.
-	Also match target.
-	(thread_from_lwp): Adjust to pass down target.
-	(thread_db_notice_clone): Pass down target.
-	(check_thread_db_callback): Pass down target.
-	(try_thread_db_load_1): Always push the thread_db target.
-	(try_thread_db_load, record_thread): Pass target down.
-	(thread_db_target::detach): Pass target down.  Always unpush the
-	thread_db target.
-	(thread_db_target::wait, thread_db_target::mourn_inferior): Pass
-	target down.  Always unpush the thread_db target.
-	(find_new_threads_callback, thread_db_find_new_threads_2)
-	(thread_db_target::update_thread_list): Pass target down.
-	(thread_db_target::pid_to_str): Pass current inferior down.
-	(thread_db_target::get_thread_local_address): Pass target down.
-	(thread_db_target::resume, maintenance_check_libthread_db): Pass
-	target down.
-	* nto-procfs.c (nto_procfs_target::update_thread_list): Adjust.
-	* procfs.c (procfs_target::procfs_init_inferior): Declare.
-	(proc_set_current_signal, do_attach, procfs_target::wait): Adjust.
-	(procfs_init_inferior): Rename to ...
-	(procfs_target::procfs_init_inferior): ... this and adjust.
-	(procfs_target::create_inferior, procfs_notice_thread)
-	(procfs_do_thread_registers): Adjust.
-	* ppc-fbsd-tdep.c: Include "inferior.h".
-	(ppcfbsd_get_thread_local_address): Pass down target.
-	* proc-service.c (ps_xfer_memory): Switch current inferior and
-	program space as well.
-	(get_ps_regcache): Pass target down.
-	* process-stratum-target.c
-	(process_stratum_target::thread_address_space)
-	(process_stratum_target::thread_architecture): Pass target down.
-	* process-stratum-target.h
-	(process_stratum_target::threads_executing): New field.
-	(as_process_stratum_target): New.
-	* ravenscar-thread.c
-	(ravenscar_thread_target::update_inferior_ptid): Pass target down.
-	(ravenscar_thread_target::wait, ravenscar_add_thread): Pass target
-	down.
-	* record-btrace.c (record_btrace_target::info_record): Adjust.
-	(record_btrace_target::record_method)
-	(record_btrace_target::record_is_replaying)
-	(record_btrace_target::fetch_registers)
-	(get_thread_current_frame_id, record_btrace_target::resume)
-	(record_btrace_target::wait, record_btrace_target::stop): Pass
-	target down.
-	* record-full.c (record_full_wait_1): Switch to event thread.
-	Pass target down.
-	* regcache.c (regcache::regcache)
-	(get_thread_arch_aspace_regcache, get_thread_arch_regcache): Add
-	process_stratum_target parameter and handle it.
-	(current_thread_target): New global.
-	(get_thread_regcache): Add process_stratum_target parameter and
-	handle it.  Switch inferior before calling target method.
-	(get_thread_regcache): Pass target down.
-	(get_thread_regcache_for_ptid): Pass target down.
-	(registers_changed_ptid): Add process_stratum_target parameter and
-	handle it.
-	(registers_changed_thread, registers_changed): Pass target down.
-	(test_get_thread_arch_aspace_regcache): New.
-	(current_regcache_test): Define a couple local test_target_ops
-	instances and use them for testing.
-	(readwrite_regcache): Pass process_stratum_target parameter.
-	(cooked_read_test, cooked_write_test): Pass mock_target down.
-	* regcache.h (get_thread_regcache, get_thread_arch_regcache)
-	(get_thread_arch_aspace_regcache): Add process_stratum_target
-	parameter.
-	(regcache::target): New method.
-	(regcache::regcache, regcache::get_thread_arch_aspace_regcache)
-	(regcache::registers_changed_ptid): Add process_stratum_target
-	parameter.
-	(regcache::m_target): New field.
-	(registers_changed_ptid): Add process_stratum_target parameter.
-	* remote.c (remote_state::supports_vCont_probed): New field.
-	(remote_target::async_wait_fd): New method.
-	(remote_unpush_and_throw): Add remote_target parameter.
-	(get_current_remote_target): Adjust.
-	(remote_target::remote_add_inferior): Push target.
-	(remote_target::remote_add_thread)
-	(remote_target::remote_notice_new_inferior)
-	(get_remote_thread_info): Pass target down.
-	(remote_target::update_thread_list): Skip threads of inferiors
-	bound to other targets.  (remote_target::close): Don't discard
-	inferiors.  (remote_target::add_current_inferior_and_thread)
-	(remote_target::process_initial_stop_replies)
-	(remote_target::start_remote)
-	(remote_target::remote_serial_quit_handler): Pass down target.
-	(remote_target::remote_unpush_target): New remote_target
-	parameter.  Unpush the target from all inferiors.
-	(remote_target::remote_unpush_and_throw): New remote_target
-	parameter.  Pass it down.
-	(remote_target::open_1): Check whether the current inferior has
-	execution instead of checking whether any inferior is live.  Pass
-	target down.
-	(remote_target::remote_detach_1): Pass down target.  Use
-	remote_unpush_target.
-	(extended_remote_target::attach): Pass down target.
-	(remote_target::remote_vcont_probe): Set supports_vCont_probed.
-	(remote_target::append_resumption): Pass down target.
-	(remote_target::append_pending_thread_resumptions)
-	(remote_target::remote_resume_with_hc, remote_target::resume)
-	(remote_target::commit_resume): Pass down target.
-	(remote_target::remote_stop_ns): Check supports_vCont_probed.
-	(remote_target::interrupt_query)
-	(remote_target::remove_new_fork_children)
-	(remote_target::check_pending_events_prevent_wildcard_vcont)
-	(remote_target::remote_parse_stop_reply)
-	(remote_target::process_stop_reply): Pass down target.
-	(first_remote_resumed_thread): New remote_target parameter.  Pass
-	it down.
-	(remote_target::wait_as): Pass down target.
-	(unpush_and_perror): New remote_target parameter.  Pass it down.
-	(remote_target::readchar, remote_target::remote_serial_write)
-	(remote_target::getpkt_or_notif_sane_1)
-	(remote_target::kill_new_fork_children, remote_target::kill): Pass
-	down target.
-	(remote_target::mourn_inferior): Pass down target.  Use
-	remote_unpush_target.
-	(remote_target::core_of_thread)
-	(remote_target::remote_btrace_maybe_reopen): Pass down target.
-	(remote_target::pid_to_exec_file)
-	(remote_target::thread_handle_to_thread_info): Pass down target.
-	(remote_target::async_wait_fd): New.
-	* riscv-fbsd-tdep.c: Include "inferior.h".
-	(riscv_fbsd_get_thread_local_address): Pass down target.
-	* sol2-tdep.c (sol2_core_pid_to_str): Pass down target.
-	* sol-thread.c (sol_thread_target::wait, ps_lgetregs, ps_lsetregs)
-	(ps_lgetfpregs, ps_lsetfpregs, sol_update_thread_list_callback):
-	Adjust.
-	* solib-spu.c (spu_skip_standalone_loader): Pass down target.
-	* solib-svr4.c (enable_break): Pass down target.
-	* spu-multiarch.c (parse_spufs_run): Pass down target.
-	* spu-tdep.c (spu2ppu_sniffer): Pass down target.
-	* target-delegates.c: Regenerate.
-	* target.c (g_target_stack): Delete.
-	(current_top_target): Return the current inferior's top target.
-	(target_has_execution_1): Refer to the passed-in inferior's top
-	target.
-	(target_supports_terminal_ours): Check whether the initial
-	inferior was already created.
-	(decref_target): New.
-	(target_stack::push): Incref/decref the target.
-	(push_target, push_target, unpush_target): Adjust.
-	(target_stack::unpush): Defref target.
-	(target_is_pushed): Return bool.  Adjust to refer to the current
-	inferior's target stack.
-	(dispose_inferior): Delete, and inline parts ...
-	(target_preopen): ... here.  Only dispose of the current inferior.
-	(target_detach): Hold strong target reference while detaching.
-	Pass target down.
-	(target_thread_name): Add assertion.
-	(target_resume): Pass down target.
-	(target_ops::beneath, find_target_at): Adjust to refer to the
-	current inferior's target stack.
-	(get_dummy_target): New.
-	(target_pass_ctrlc): Pass the Ctrl-C to the first inferior that
-	has a thread running.
-	(initialize_targets): Rename to ...
-	(_initialize_target): ... this.
-	* target.h: Include "gdbsupport/refcounted-object.h".
-	(struct target_ops): Inherit refcounted_object.
-	(target_ops::shortname, target_ops::longname): Make const.
-	(target_ops::async_wait_fd): New method.
-	(decref_target): Declare.
-	(struct target_ops_ref_policy): New.
-	(target_ops_ref): New typedef.
-	(get_dummy_target): Declare function.
-	(target_is_pushed): Return bool.
-	* thread-iter.c (all_matching_threads_iterator::m_inf_matches)
-	(all_matching_threads_iterator::all_matching_threads_iterator):
-	Handle filter target.
-	* thread-iter.h (struct all_matching_threads_iterator, struct
-	all_matching_threads_range, class all_non_exited_threads_range):
-	Filter by target too.  Remove explicit.
-	* thread.c (threads_executing): Delete.
-	(inferior_thread): Pass down current inferior.
-	(clear_thread_inferior_resources): Pass down thread pointer
-	instead of ptid_t.
-	(add_thread_silent, add_thread_with_info, add_thread): Add
-	process_stratum_target parameter.  Use it for thread and inferior
-	searches.
-	(is_current_thread): New.
-	(thread_info::deletable): Use it.
-	(find_thread_ptid, thread_count, in_thread_list)
-	(thread_change_ptid, set_resumed, set_running): New
-	process_stratum_target parameter.  Pass it down.
-	(set_executing): New process_stratum_target parameter.  Pass it
-	down.  Adjust reference to 'threads_executing'.
-	(threads_are_executing): New process_stratum_target parameter.
-	Adjust reference to 'threads_executing'.
-	(set_stop_requested, finish_thread_state): New
-	process_stratum_target parameter.  Pass it down.
-	(switch_to_thread): Also match inferior.
-	(switch_to_thread): New process_stratum_target parameter.  Pass it
-	down.
-	(update_threads_executing): Reimplement.
-	* top.c (quit_force): Pop targets from all inferior.
-	(gdb_init): Don't call initialize_targets.
-	* windows-nat.c (windows_nat_target) <get_windows_debug_event>:
-	Declare.
-	(windows_add_thread, windows_delete_thread): Adjust.
-	(get_windows_debug_event): Rename to ...
-	(windows_nat_target::get_windows_debug_event): ... this.  Adjust.
-	* tracefile-tfile.c (tfile_target_open): Pass down target.
-	* gdbsupport/common-gdbthread.h (struct process_stratum_target):
-	Forward declare.
-	(switch_to_thread): Add process_stratum_target parameter.
-	* mi/mi-interp.c (mi_on_resume_1): Add process_stratum_target
-	parameter.  Use it.
-	(mi_on_resume): Pass target down.
-	* nat/fork-inferior.c (startup_inferior): Add
-	process_stratum_target parameter.  Pass it down.
-	* nat/fork-inferior.h (startup_inferior): Add
-	process_stratum_target parameter.
-	* python/py-threadevent.c (py_get_event_thread): Pass target down.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* remote.c (remote_target::start_remote): Don't set inferior_ptid
-	directly.  Instead find the first thread in the thread list and
-	use switch_to_thread.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* remote.c (remote_target::remote_add_inferior): Don't bind a
-	process to the current inferior if the current inferior is already
-	bound to a process.
-
-2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
-	    Pedro Alves	 <palves@redhat.com>
-
-	* remote.c (remote_target::remote_parse_stop_reply) <W/X packets>:
-	If no process is specified, return null_ptid instead of
-	inferior_ptid.
-	(remote_target::wait_as): Handle TARGET_WAITKIND_EXITED /
-	TARGET_WAITKIND_SIGNALLED with no pid.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* remote.c (first_remote_resumed_thread): New.
-	(remote_target::wait_as): Use it as default event_ptid instead of
-	inferior_ptid.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* infrun.c (handle_no_resumed): Use all_non_exited_inferiors.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* tracefile-tfile.c (tfile_target::close): Assert that trace_fd is
-	not -1.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* break-catch-sig.c (signal_catchpoint_print_it): Don't pass a
-	ptid to get_last_target_status.
-	* break-catch-syscall.c (print_it_catch_syscall): Don't pass a
-	ptid to get_last_target_status.
-	* infcmd.c (continue_command): Don't pass a target_waitstatus to
-	get_last_target_status.
-	(info_program_command): Don't pass a target_waitstatus to
-	get_last_target_status.
-	* infrun.c (init_wait_for_inferior): Use
-	nullify_last_target_wait_ptid.
-	(get_last_target_status): Handle nullptr arguments.
-	(nullify_last_target_wait_ptid): Clear target_last_waitstatus.
-	(print_stop_event): Don't pass a ptid to get_last_target_status.
-	(normal_stop): Don't pass a ptid to get_last_target_status.
-	* infrun.h (get_last_target_status, set_last_target_status): Move
-	comments here and update.
-	(nullify_last_target_wait_ptid): Declare.
-	* linux-fork.c (fork_load_infrun_state): Remove local extern
-	declaration of nullify_last_target_wait_ptid.
-	* linux-nat.c (get_detach_signal): Don't pass a target_waitstatus
-	to get_last_target_status.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* gdbthread.h (scoped_restore_current_thread)
-	<dont_restore, restore, m_dont_restore>: Declare.
-	* thread.c (thread_alive): Add assertion.  Return bool.
-	(switch_to_thread_if_alive): New.
-	(prune_threads): Switch inferior/thread.
-	(print_thread_info_1): Switch thread before calling target methods.
-	(scoped_restore_current_thread::restore): New, factored out from
-	...
-	(scoped_restore_current_thread::~scoped_restore_current_thread):
-	... this.
-	(scoped_restore_current_thread::scoped_restore_current_thread):
-	Add assertion.
-	(thread_apply_all_command, thread_select): Use
-	switch_to_thread_if_alive.
-	* infrun.c (proceed, restart_threads, handle_signal_stop)
-	(switch_back_to_stepped_thread): Switch current thread before
-	calling target methods.
-
-2020-01-10  Pedro Alves <palves@redhat.com>
-
-	* inferior.c (switch_to_inferior_no_thread): New function,
-	factored out from ...
-	(inferior_command): ... here.
-	* inferior.h (switch_to_inferior_no_thread): Declare.
-	* mi/mi-main.c (run_one_inferior): Use
-	switch_to_inferior_no_thread.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* infcmd.c (kill_command): Remove dead code.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* remote.c (remote_target::mourn_inferior): No longer check
-	whether the target is running.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* corelow.c (core_target::has_execution): Change parameter type to
-	inferior pointer.
-	* inferior.c (number_of_live_inferiors): Use
-	inferior::has_execution instead of target_has_execution_1.
-	* inferior.h (inferior::has_execution): New.
-	* linux-thread-db.c (thread_db_target::update_thread_list): Use
-	inferior::has_execution instead of target_has_execution_1.
-	* process-stratum-target.c
-	(process_stratum_target::has_execution): Change parameter type to
-	inferior pointer.  Check the inferior's PID instead of
-	inferior_ptid.
-	* process-stratum-target.h
-	(process_stratum_target::has_execution): Change parameter type to
-	inferior pointer.
-	* record-full.c (record_full_core_target::has_execution): Change
-	parameter type to inferior pointer.
-	* target.c (target_has_execution_1): Change parameter type to
-	inferior pointer.
-	(target_has_execution_current): Adjust.
-	* target.h (target_ops::has_execution): Change parameter type to
-	inferior pointer.
-	(target_has_execution_1): Change parameter type to inferior
-	pointer.  Change return type to bool.
-	* tracefile.h (tracefile_target::has_execution): Change parameter
-	type to inferior pointer.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* exceptions.c (print_flush): Remove current_top_target() check.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* remote.c (show_remote_exec_file): Show the current inferior's
-	exec-file instead of the command variable's value.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* record-full.c (record_full_resume_ptid): New global.
-	(record_full_target::resume): Set it.
-	(record_full_wait_1): Use record_full_resume_ptid instead of
-	inferior_ptid.
-
-2020-01-10  Pedro Alves  <palves@redhat.com>
-
-	* gdbthread.h (scoped_restore_current_thread)
-	<dont_restore, restore, m_dont_restore>: Declare.
-	* thread.c (thread_alive): Add assertion.  Return bool.
-	(switch_to_thread_if_alive): New.
-	(prune_threads): Switch inferior/thread.
-	(print_thread_info_1): Switch thread before calling target methods.
-	(scoped_restore_current_thread::restore): New, factored out from
-	...
-	(scoped_restore_current_thread::~scoped_restore_current_thread):
-	... this.
-	(scoped_restore_current_thread::scoped_restore_current_thread):
-	Add assertion.
-	(thread_apply_all_command, thread_select): Use
-	switch_to_thread_if_alive.
-
-2020-01-10  George Barrett  <bob@bob131.so>
-
-	* stap-probe.c (stap_modify_semaphore): Don't check for null
-	semaphores.
-	(stap_probe::set_semaphore, stap_probe::clear_semaphore): Check
-	for null semaphores.
-
-2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Update
-	all source windows, and maintain horizontal scroll status while
-	doing so.
-
-2020-01-09  Tom Tromey  <tom@tromey.com>
-
-	PR tui/18932:
-	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Call
-	update_source_window, not print_source_lines.
-
-2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* tui/tui.c (tui_enable): Register tui hooks after calling
-	tui_display_main.
-
-2020-01-09  Christian Biesinger  <cbiesinger@google.com>
-
-	* gdbsupport/common-defs.h: Don't define _FORTIFY_SOURCE on MinGW.
-
-2020-01-08  Simon Marchi  <simon.marchi@efficios.com>
-
-	* thread.c (print_thread_info_1): Fix indentation.
-
-2020-01-09  Christian Biesinger  <cbiesinger@google.com>
-
-	* symtab.c (general_symbol_info::compute_and_set_names): Move the
-	unique_xmalloc_ptr outside the if to always free the demangled name.
-
-2020-01-08  Tom Tromey  <tromey@adacore.com>
-
-	* xcoffread.c (enter_line_range, read_xcoff_symtab)
-	(process_xcoff_symbol, xcoff_symfile_offsets): Update.
-	* symtab.h (MSYMBOL_VALUE_ADDRESS): Update.
-	(struct section_offsets, ANOFFSET, SIZEOF_N_SECTION_OFFSETS):
-	Remove.
-	(section_offsets): New typedef.
-	* symtab.c (fixup_section, get_msymbol_address): Update.
-	* symmisc.c (dump_msymbols): Update.
-	* symfile.h (relative_addr_info_to_section_offsets)
-	(symfile_map_offsets_to_segments): Update.
-	* symfile.c (build_section_addr_info_from_objfile)
-	(init_objfile_sect_indices): Update.
-	(struct place_section_arg): Change type of "offsets".
-	(place_section): Update.
-	(relative_addr_info_to_section_offsets): Change type of
-	"section_offsets".  Remove "num_sections" parameter.
-	(default_symfile_offsets, syms_from_objfile_1)
-	(set_objfile_default_section_offset): Update.
-	(reread_symbols): No need to preserve section offsets by hand.
-	(symfile_map_offsets_to_segments): Change type of "offsets".
-	* stap-probe.c (relocate_address): Update.
-	* stabsread.h (process_one_symbol): Update.
-	* solib-target.c (struct lm_info_target) <offsets>: Change type.
-	(solib_target_relocate_section_addresses): Update.
-	* solib-svr4.c (enable_break, svr4_relocate_main_executable):
-	Update.
-	* solib-frv.c (frv_relocate_main_executable): Update.
-	* solib-dsbt.c (dsbt_relocate_main_executable): Update.
-	* solib-aix.c (solib_aix_get_section_offsets): Change return
-	type.
-	(solib_aix_solib_create_inferior_hook): Update.
-	* remote.c (remote_target::get_offsets): Update.
-	* psymtab.c (find_pc_sect_psymtab): Update.
-	* psympriv.h (struct partial_symbol) <address, text_low,
-	text_high>: Update.
-	* objfiles.h (obj_section_offset): Update.
-	(struct objfile) <section_offsets>: Change type.
-	<num_sections>: Remove.
-	(objfile_relocate): Update.
-	* objfiles.c (entry_point_address_query): Update
-	(relocate_one_symbol): Change type of "section_offsets".
-	(objfile_relocate1, objfile_relocate1): Change type of
-	"new_offsets".
-	(objfile_rebase1): Update.
-	* mipsread.c (mipscoff_symfile_read): Update.
-	(read_alphacoff_dynamic_symtab): Remove "section_offsets"
-	parameter.
-	* mdebugread.c (parse_symbol): Change type of "section_offsets".
-	(parse_external, psymtab_to_symtab_1): Update.
-	* machoread.c (macho_symfile_offsets): Update.
-	* ia64-tdep.c (ia64_find_unwind_table): Update.
-	* hppa-tdep.c (read_unwind_info): Update.
-	* hppa-bsd-tdep.c (hppabsd_find_global_pointer): Update.
-	* dwarf2read.c (create_addrmap_from_index)
-	(create_addrmap_from_aranges, dw2_find_pc_sect_compunit_symtab)
-	(process_psymtab_comp_unit_reader, add_partial_symbol)
-	(add_partial_subprogram, process_full_comp_unit)
-	(read_file_scope, read_func_scope, read_lexical_block_scope)
-	(read_call_site_scope, dwarf2_rnglists_process)
-	(dwarf2_ranges_process, dwarf2_ranges_read)
-	(dwarf_decode_lines_1, var_decode_location, new_symbol)
-	(dwarf2_fetch_die_loc_sect_off, dwarf2_per_cu_text_offset):
-	Update.
-	* dwarf2-frame.c (execute_cfa_program, dwarf2_frame_find_fde):
-	Update.
-	* dtrace-probe.c (dtrace_probe::get_relocated_address): Update.
-	* dbxread.c (read_dbx_symtab, read_ofile_symtab): Update.
-	(process_one_symbol): Change type of "section_offsets".
-	* ctfread.c (get_objfile_text_range): Update.
-	* coffread.c (coff_symtab_read, enter_linenos)
-	(process_coff_symbol): Update.
-	* coff-pe-read.c (add_pe_forwarded_sym): Update.
-	* amd64-windows-tdep.c (amd64_windows_find_unwind_info): Update.
-
-2020-01-08  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (parse_macro_definition): Use std::string.
-	(parse_macro_definition): Likewise.
-
-2020-01-08  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (abbrev_table_read_table): Use std::vector.
-	(ATTR_ALLOC_CHUNK): Remove.
-
-2020-01-08  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (fixup_go_packaging): Use unique_xmalloc_ptr.
-
-2020-01-08  Tom Tromey  <tromey@adacore.com>
-
-	* dwarf2read.c (add_partial_symbol): Use unique_xmalloc_ptr.
-	(dwarf2_compute_name, open_dwo_file): Likewise.
-	(process_enumeration_scope): Use std::vector.
-	(guess_partial_die_structure_name): Use unique_xmalloc_ptr.
-	(partial_die_info::fixup, dwarf2_start_subfile)
-	(guess_full_die_structure_name, dwarf2_name): Likewise.
-	(determine_prefix): Update.
-	(guess_full_die_structure_name): Make return type const.
-	(partial_die_full_name): Return unique_xmalloc_ptr.
-	(DW_FIELD_ALLOC_CHUNK): Remove.
-
-2020-01-07  Tom Tromey  <tromey@adacore.com>
-
-	PR build/24937:
-	* stap-probe.c (class stap_static_probe_ops): Add constructor.
-
-2020-01-02  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* cli/cli-style.c: Set cli_styling to 'true' in the Cygwin build.
-
-2020-01-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* stack.c (print_frame_info): Move disassemble_next_line code
-	inside source_print block.
-
-2020-01-06  Eli Zaretskii  <eliz@gnu.org>
-
-	* gdbsupport/gdb_wait.c: Include <signal.h> instead of
-	gdb/signals.h, as we are now using native signal symbols.
-
-2020-01-06  Shahab Vahedi  <shahab@synopsys.com>
-
-	* tui/tui-disasm.c (tui_disasm_window::addr_is_displayed): Avoid
-	overflow by an early check of content vs threshold.
-	* tui/tui-source.c (tui_source_window::line_is_displayed):
-	Likewise.
-
-2020-01-06  Eli Zaretskii  <eliz@gnu.org>
-
-	* NEWS: Mention the recent fix of $_exitsignal on MS-Windows.
-
-2020-01-02  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* coff-pe-read.c (read_pe_exported_syms): Don't try to read the
-	export table if no section contains it's RVA.
-
-2020-01-06  Eli Zaretskii  <eliz@gnu.org>
-
-	* windows-tdep.c: Fix a typo in WINDOWS_SIGABRT.
-
-2020-01-06  Hannes Domani  <ssbssa@yahoo.de>
-
-	* source.c (print_source_lines_base): Set last_line_listed.
-
-2020-01-06  Shahab Vahedi  <shahab@synopsys.com>
-
-	* tui/tui-disasm.c: Remove trailing spaces.
-
-2020-01-06  Eli Zaretskii  <eliz@gnu.org>
-	    Pedro Alves  <palves@redhat.com>
-
-	* Makefile.in (COMMON_SFILES): Add gdbsupport/gdb_wait.c.
-	* windows-tdep.c: New enumeration of WINDOWS_SIG* signals.
-	(windows_gdb_signal_to_target): New function, uses the above
-	enumeration to convert GDB internal signal codes to equivalent
-	Windows codes.
-	(windows_init_abi): Call set_gdbarch_gdb_signal_to_target.
-	* windows-nat.c: Include "gdb_wait.h".
-	(get_windows_debug_event): Extract the fatal exception from the
-	exit status and convert to the equivalent Posix signal number.
-	* cli/cli-cmds.c (exit_status_set_internal_vars): Account for the
-	possibility that WTERMSIG returns GDB_SIGNAL_UNKNOWN.
-	* gdbsupport/gdb_wait.c: New file, implements
-	windows_status_to_termsig.
-	* gdbsupport/gdb_wait.h (WIFEXITED, WIFSIGNALED, WEXITSTATUS)
-	(WTERMSIG) [__MINGW32__]: Separate definitions for MinGW.
-
-2020-01-05  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* tui/tui-layout.c (tui_add_win_to_layout): Use tui_set_layout not
-	show_layout.
-
-2020-01-05  Luis Machado  <luis.machado@linaro.org>
-
-	* aarch64-linux-nat.c
-	(aarch64_linux_nat_target::thread_architecture): Use bfd_arch_aarch64
-	and bfd_mach_aarch64.
-
-2020-01-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
-
-	* ui-file.c (stdio_file::can_emit_style_escape)
-	(tee_file::can_emit_style_escape): Ensure style is used also on
-	gdb_stderr when gdb_stderr is a tty supporting styling, similarly
-	to gdb_stdout.
-	* main.c (set_gdb_data_directory): Use file style to output the
-	warning that the given pathname is not a directory.
-	* top.c (show_history_filename, gdb_safe_append_history)
-	(show_gdb_datadir): Use file style.
-
-2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
-
-	* solib-target.c (struct lm_info_target):
-	Change offsets to be a unique_xmalloc_ptr.
-	(solib_target_relocate_section_addresses): Update.
-
-2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
-
-	* windows-nat.c (windows_clear_solib): Free so_list linked list.
-
-2020-01-03  Bernd Edlinger  <bernd.edlinger@hotmail.de>
-
-	* MAINTAINERS (Write After Approval): Add myself.
-
-2020-01-02  Luis Machado  <luis.machado@linaro.org>
-
-	* proc-service.c (get_ps_regcache): Remove reference to obsolete
-	Cell BE architecture.
-	* target.h (struct target_ops) <thread_architecture>: Likewise.
-
-2020-01-01  Hannes Domani  <ssbssa@yahoo.de>
-
-	* Makefile.in: Use INSTALL_PROGRAM_ENV.
-
-2020-01-01  Hannes Domani  <ssbssa@yahoo.de>
-
-	* MAINTAINERS (Write After Approval): Add myself.
-
-2020-01-01  Joel Brobecker  <brobecker@adacore.com>
-
-	* gdbarch.sh: Update copyright year range of generated files.
-
-2020-01-01  Joel Brobecker  <brobecker@adacore.com>
-
-	Update copyright year range in all GDB files.
-
-2020-01-01  Joel Brobecker  <brobecker@adacore.com>
-
-	* copyright.py: Convert to Python 3.
-
-2020-01-01  Joel Brobecker  <brobecker@adacore.com>
-
-	* copyright.py: Adapt after move of gnulib directory from gdb
-	directory to toplevel directory.
-
-2020-01-01  Joel Brobecker  <brobecker@adacore.com>
-
-	* copyright.py (main): Exit if run from the wrong directory.
-
-2020-01-01  Joel Brobecker  <brobecker@adacore.com>
-
-	* top.c (print_gdb_version): Change copyright year to 2020.
-
-2020-01-01  Joel Brobecker  <brobecker@adacore.com>
-
-	* config/djgpp/fnchange.lst: Add entry for gdb/ChangeLog-2019.
+	Update all users of trad_frame_saved_reg to use the new member
+	functions.
 
-For older changes see ChangeLog-2019.
+	Remote all struct keywords from declarations of trad_frame_saved_reg
+	types, except on forward declarations.
+
+	* aarch64-tdep.c: Update.
+	* alpha-mdebug-tdep.c: Update.
+	* alpha-tdep.c: Update.
+	* arc-tdep.c: Update.
+	* arm-tdep.c: Update.
+	* avr-tdep.c: Update.
+	* cris-tdep.c: Update.
+	* csky-tdep.c: Update.
+	* frv-tdep.c: Update.
+	* hppa-linux-tdep.c: Update.
+	* hppa-tdep.c: Update.
+	* hppa-tdep.h: Update.
+	* lm32-tdep.c: Update.
+	* m32r-linux-tdep.c: Update.
+	* m32r-tdep.c: Update.
+	* m68hc11-tdep.c: Update.
+	* mips-tdep.c: Update.
+	* moxie-tdep.c: Update.
+	* riscv-tdep.c: Update.
+	* rs6000-tdep.c: Update.
+	* s390-linux-tdep.c: Update.
+	* s390-tdep.c: Update.
+	* score-tdep.c: Update.
+	* sparc-netbsd-tdep.c: Update.
+	* sparc-sol2-tdep.c: Update.
+	* sparc64-fbsd-tdep.c: Update.
+	* sparc64-netbsd-tdep.c: Update.
+	* sparc64-obsd-tdep.c: Update.
+	* sparc64-sol2-tdep.c: Update.
+	* tilegx-tdep.c: Update.
+	* v850-tdep.c: Update.
+	* vax-tdep.c: Update.
+
+	* frame-unwind.c (frame_unwind_got_bytes): Make parameter const.
+	* frame-unwind.h (frame_unwind_got_bytes): Likewise.
+
+	* trad-frame.c: Update.
+	Remove TF_REG_* enum.
+	(trad_frame_alloc_saved_regs): Add a static assertion to check for
+	a trivially-constructible struct.
+	(trad_frame_reset_saved_regs): Adjust to use member function.
+	(trad_frame_value_p): Likewise.
+	(trad_frame_addr_p): Likewise.
+	(trad_frame_realreg_p): Likewise.
+	(trad_frame_value_bytes_p): Likewise.
+	(trad_frame_set_value): Likewise.
+	(trad_frame_set_realreg): Likewise.
+	(trad_frame_set_addr): Likewise.
+	(trad_frame_set_unknown): Likewise.
+	(trad_frame_set_value_bytes): Likewise.
+	(trad_frame_get_prev_register): Likewise.
+	* trad-frame.h: Update.
+	(trad_frame_saved_reg_kind): New enum.
+	(struct trad_frame_saved_reg) <addr, realreg, data>: Remove.
+	<m_kind, m_reg>: New member fields.
+	<set_value, set_realreg, set_addr, set_unknown, set_value_bytes>
+	<kind, value, realreg, addr, value_bytes, is_value, is_realreg>
+	<is_addr, is_unknown, is_value_bytes>: New member functions.
+
+2021-01-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* target-float.c: Fix typos.
+
+2021-01-02  Hannes Domani  <ssbssa@yahoo.de>
+
+	* gdb-gdb.py.in: Fix main_type.flds_bnds.bounds pretty printer.
+
+2021-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdbarch.sh: Update copyright year range.
+
+2021-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	Update copyright year range in copyright header of all GDB files.
+
+2021-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* copyright.py (get_update_list): Add "gdbserver" and "gdbsupport"
+	to the list of directories to update.
+
+2021-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* top.c (print_gdb_version): Update copyright year.
+
+2021-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* config/djgpp/fnchange.lst: Add entry for gdb/ChangeLog-2020.
+
+For older changes see ChangeLog-2020.
 
 Local Variables:
 mode: change-log
diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index 6a2e70291d4..ed7ad34c57b 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -4,3603 +4,311 @@
 	* dwarf2.c (read_rnglists): Ignore empty range when parsing line
 	number tables.
 
-2021-01-23  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/27231
-	* dwarf2.c (read_rnglists): Advance rngs_ptr after
-	_bfd_safe_read_leb128 when parsing DW_RLE_offset_pair.
-
-2021-01-01  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-08-22  H.J. Lu  <hongjiu.lu@intel.com>
-	PR ld/26382
-	* elflink.c (elf_link_output_symstrtab): Keep only one '@' for
-	versioned symbols, which are defined in shared objects, in
-	symbol string table.
-
-2020-12-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/27016
-	* elf64-x86-64.c (elf_x86_64_convert_load_reloc): Convert load
-	to mov only for GOTPCRELX relocations.
-
-2020-10-09  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (write_plt_relocs_for_local_syms): Don't do local
-	entry offset optimisation.
-
-2020-10-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26711
-	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Merge -z ibt
-	and -z shstk only with GNU_PROPERTY_X86_FEATURE_1_AND.
-
-2020-09-28  Alan Modra  <amodra@gmail.com>
-
-	PR 26656
-	* elf64-ppc.c (ppc_build_one_stub, ppc_size_one_stub): Check for
-	NULL stub_entry->h before calling is_tls_get_addr.
-
-2020-09-26  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (GLINK_PLTRESOLVE_SIZE): Depend on has_plt_localentry0.
-	(LD_R0_0R11, ADD_R11_R0_R11): Define.
-	(ppc64_elf_tls_setup): Disable params->plt_localentry0 when power10
-	code detected.
-	(ppc64_elf_size_stubs): Update __glink_PLTresolve eh_frame.
-	(ppc64_elf_build_stubs): Move r2 save to start of __glink_PLTresolve,
-	and only emit for has_plt_localentry0.  Don't use r2 in the stub.
-
-2020-09-24  Nick Clifton  <nickc@redhat.com>
-
-	Import from mainline:
-	2020-08-29  Nick Clifton  <nickc@redhat.com>
-
-	PR 26520
-	* dwarf2.c (scan_unit_for_symbols): Add member entries to the
-	variable table.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	PR 26656
-	* elf64-ppc.c (plt_stub_size): Add "odd" param.  Use it with
-	size_power10_offset rather than calculating from start of stub.
-	Add size for notoc tls_get_addr_opt stub.
-	(plt_stub_pad): Add "odd" param, pass to plt_stub_size.
-	(build_tls_get_addr_head, build_tls_get_addr_tail): New functions.
-	(build_tls_get_addr_stub): Delete.
-	(ppc_build_one_stub): Use a temp for htab->params->stub_bfd.
-	Emit notoc tls_get_addr_opt stub.  Move eh_frame code to
-	suit.  Adjust code to use bfd_tls_get_addr_head/tail in place
-	of build_tls_get_addr_stub.
-	(ppc_size_one_stub): Size notoc tls_get_addr_opt stub.
-	Adjust plt_stub_size and plt_stub_pad calls.  Correct "odd"
-	when padding stub.  Size eh_frame for notoc stub too.
-	Correct lr_restore value.
-	(ppc64_elf_relocate_section): Don't skip over first insn of
-	notoc tls_get_addr_opt stub.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	PR 26655
-	* elf64-ppc.c (ppc64_elf_func_desc_adjust): Rename to..
-	(ppc64_elf_edit): Call params->edit.
-	(ppc64_elf_tls_setup): Don't call _bfd_elf_tls_setup.  Return a
-	bfd_boolean.
-	* elf64-ppc.h (struct ppc64_elf_params): Add "edit".
-	(ppc64_elf_tls_setup): Update declaration.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-08-13  Alan Modra  <amodra@gmail.com>
-	* elf64-ppc.h (struct ppc64_elf_params): Add no_pcrel_opt.
-	* elf64-ppc.c (ppc64_elf_relocate_section): Disable GOT reloc
-	optimizations when --no-toc-optimize.  Disable R_PPC64_PCREL_OPT
-	optimization when --no-pcrel-optimize.
-
-2020-09-19  Nick Clifton  <nickc@redhat.com>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
+	* version.m4: Set to 2.36.0.
 	* development.sh (development): Set to true.
+	* configure: Regenerate.
+	* po/bfd.pot: Regenerate.
 
-2020-09-19  Nick Clifton  <nickc@redhat.com>
-
-	This is the 2.35.1 point release.
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
+	This is the 2.36 release.
+	* version.m4: Set to 2.36.
 	* development.sh (development): Set to false.
-	* version.m4: Set to 2.35.1.
+	(experimental): Set to false.
 	* configure: Regenerate.
 	* po/bfd.pot: Regenerate.
 
-2020-09-15  Hans-Peter Nilsson  <hp@axis.com>
-
-	Backport from mainline:
-	PR ld/26589
-	* elf32-cris.c (cris_elf_check_relocs): Add missing NULL check
-	on argument before calling UNDEFWEAK_NO_DYNAMIC_RELOC.
-
-2020-09-10  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-08-24  Alan Modra  <amodra@gmail.com>
-	* elf32-ppc.c (ppc_elf_check_relocs): Set has_tls_reloc for
-	high part tprel16 relocs.
-	(ppc_elf_tls_optimize): Sanity check high part tprel16 relocs.
-	Clear do_tls_opt on odd instructions.
-	(ppc_elf_relocate_section): Move TPREL16_HA/LO optimisation later.
-	Don't sanity check them here.
-	* elf64-ppc.c (ppc64_elf_check_relocs): Set has_tls_reloc for
-	high part tprel16 relocs.
-	(ppc64_elf_tls_optimize): Sanity check high part tprel16 relocs.
-	Clear do_tls_opt on odd instructions.
-	(ppc64_elf_relocate_section): Don't sanity check TPREL16_HA.
-
-2020-09-03  Nick Clifton  <nickc@redhat.com>
-
-	Backport from mainline:
-	2020-08-20  Nick Clifton  <nickc@redhat.com>
-
-	PR 26406
-	* elf-bfd.h (struct bfd_elf_section_data): Add
-	has_secondary_relocs field.
-	* elf.c (_bfd_elf_copy_special_section_fields): Set the
-	has_secondary_relocs field for sections which have associated
-	secondary relocs.
-	* elfcode.h (elf_write_relocs): Only call write_secondary_relocs
-	on sections which have associated secondary relocs.
-
-2020-08-26  David Faust  <david.faust@oracle.com>
-
-	* archures.c (bfd_mach_xbpf): Define.
-	* bfd-in2.h: Regenerate.
-	* cpu-bpf.c (bfd_xbpf_arch) New.
-	(bfd_bpf_arch) Update next in list field to point to xbpf arch.
-
-2020-08-25  Nick Clifton  <nickc@redhat.com>
-
-	Backport from the mainline:
-	2020-08-25  Mark Wielaard  <mark@klomp.org>
-
-	*  dwarf2.c (struct dwarf2_debug_file): Add dwarf_rnglists_buffer
-	and dwarf_rnglists_size fields.
-	(dwarf_debug_sections): Add debug_rnglists.
-	(dwarf_debug_section_enum): Likewise.
-	(read_debug_rnglists): New function.
-	(read_rangelist): New function to call either read_ranges or
-	read_rnglists. Rename original function to...
-	(read_ranges): ...this.
-	(read_rnglists): New function.
-
-	2020-08-24  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf2.c (read_attribute_value): Handle DW_FORM_data16.
-	(read_formatted_entries): Likewise. And skip zero entry.
-
-2020-08-15  Alan Modra  <amodra@gmail.com>
-
-	PR 26389
-	* syms.c (bfd_decode_symclass): Choose 'c' for commons only when
-	SEC_SMALL_DATA.
-	* elf32-m32r.c (_bfd_m32r_elf_symbol_processing): Set SEC_SMALL_DATA
-	on small common section.
-	* elf32-score.c (s3_bfd_score_elf_symbol_processing): Likewise.
-	* elf32-score7.c (s7_bfd_score_elf_symbol_processing): Likewise.
-	* elf32-tic6x.c (elf32_tic6x_symbol_processing): Likewise.
-	* elf32-v850.c (v850_elf_symbol_processing): Likewise.
-	* elfxx-mips.c (_bfd_mips_elf_symbol_processing): Likewise.
-	* ecoff.c (ecoff_set_symbol_info, ecoff_link_add_externals): Likewise.
-
-2020-08-12  Nick Clifton  <nickc@redhat.com>
-
-	* po/ru.po: Updated Russian translation.
-	* po/sr.po: Updated Serbian translation.
-
-2020-08-07  David Faust  <david.faust@oracle.com>
-
-	* elf64-bpf.c (bpf_elf_relocate_section): Ensure signed division for
-	DISP16 and DISP32 relocations.
-
-2020-08-05  David Faust  <david.faust@oracle.com>
-
-	* elf64-bpf.c (bpf_elf_generic_reloc): New function.
-	(bpf_elf_howto_table): Use it here.
-	(bpf_elf_relocate_section): Use addends recorded in input_bfd for
-	instruction and data relocations.
-
-2020-07-30  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+2021-01-23  H.J. Lu  <hongjiu.lu@intel.com>
 
-	PR ld/26312
-	* elfnn-aarch64.c (elfNN_aarch64_init_small_plt0_entry): Set sh_entsize
-	to 0.
-	(elfNN_aarch64_finish_dynamic_sections): Remove sh_entsize setting.
+	PR binutils/27231
+	* dwarf2.c (read_rnglists): Advance rngs_ptr after
+	_bfd_safe_read_leb128 when parsing DW_RLE_offset_pair.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-20  Alan Modra  <amodra@gmail.com>
 
-	* version.m4: Set to 2.35.0
-	* development.sh (development): Set to true.
-	* configure: Regenerate.
+	* elf64-ppc.c (ppc64_elf_get_synthetic_symtab): Don't assume
+	section symbols are present.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-18  H.J. Lu  <hongjiu.lu@intel.com>
 
-	2.35 Release:
-	* version.m4: Set to 2.35
-	* development.sh (development): Set to false.
-	(experimental): Set to false.
-	* configure: Regenerate.
-	* po/bfd/pot: Regenerate.
+	PR ld/27193
+	* elflink.c (elf_create_symbuf): Also ignore section symbols.
 
-2020-07-19  Alan Modra  <amodra@gmail.com>
+2021-01-18  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* elf64-ppc.c (struct ppc_link_hash_table): Add has_power10_relocs.
-	(select_alt_stub): New function.
-	(ppc_get_stub_entry): Use it here.
-	(ppc64_elf_check_relocs): Set had_power10_relocs rather than
-	power10_stubs.
-	(ppc64_elf_size_stubs): Clear power10_stubs here instead.  Don't
-	merge notoc stubs with other varieties when power10_stubs is "auto".
-	Instead dup the stub hash table entry.
-	(plt_stub_size, ppc_build_one_stub, ppc_size_one_stub): Adjust
-	tests of power10_stubs.
+	PR ld/23169
+	* elfxx-x86.c (_bfd_x86_elf_link_fixup_ifunc_symbol): Don't
+	check pointer_equality_needed.
 
-2020-07-15  Hans-Peter Nilsson  <hp@bitrange.com>
+2021-01-14  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* elf64-mmix.c (mmix_elf_relax_section): Improve accounting for
-	R_MMIX_PUSHJ_STUBBABLE relocs against undefined symbols.
+	PR ld/26688
+	* elf32-bfin.c (bfinfdpic_relocate_section): Skip non SEC_ALLOC
+	section for R_BFIN_FUNCDESC.
 
-2020-07-15  Nick Clifton  <nickc@redhat.com>
+2021-01-14  Nick Clifton  <nickc@redhat.com>
 
-	PR26240
-	* coffgen.c (coff_get_normalized_symtab): Fix off-by-one error in
-	check for aux entries that overflow the buufer.
+	* elf.c (elfcore_grok_win32pstatus): Check for a note type of 0.
 
-2020-07-10  Alan Modra  <amodra@gmail.com>
+2021-01-12  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* elf64-ppc.h (struct ppc64_elf_params): Add power10_stubs.
-	* elf64-ppc.c (struct ppc_link_hash_table): Delete
-	power10_stubs.
-	(ppc64_elf_check_relocs): Adjust setting of power10_stubs.
-	(plt_stub_size, ppc_build_one_stub, ppc_size_one_stub): Adjust
-	uses of power10_stubs.
+	PR ld/27171
+	* reloc.c (bfd_perform_relocation): Adjust R_AMD64_DIR64 and
+	R_AMD64_DIR32 relocations for PE/x86-64 inputs.
 
-2020-07-09  Nick Clifton  <nickc@redhat.com>
+2021-01-11  Nick Clifton  <nickc@redhat.com>
 
 	* po/fr.po: Updated French translation.
-
-2020-07-06  Nick Clifton  <nickc@redhat.com>
-
 	* po/pt.po: Updated Portuguese translation.
+	* po/sr.po: Updated Serbian translation.
 	* po/uk.po: Updated Ukranian translation.
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+2021-01-09  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* version.m4: Set version to 2.34.90.
-	* configure: Regenerate.
-	* po/bfd.pot: Regenerate.
+	PR ld/27166
+	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Handle
+	-z lam-u48 and -z lam-u57.
 
-22020-07-04  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.35 branch created.
-
-2020-07-01  Alan Modra  <amodra@gmail.com>
-
-	PR 26188
-	* coffgen.c (coff_find_nearest_line_with_names): Sanity check
-	raw syment index before dereferencing.
-
-2020-07-01  Alan Modra  <amodra@gmail.com>
-
-	* elf32-i386.c (elf_backend_object_p): Undef for vxworks.
-
-2020-07-01  Alan Modra  <amodra@gmail.com>
-
-	* config.bfd: Obsolete xc16x.
-
-2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* archures.c (bfd_mach_i386_nacl): Removed.
-	(bfd_mach_i386_i386_nacl): Likewise.
-	(bfd_mach_x86_64_nacl): Likewise.
-	(bfd_mach_x64_32_nacl): Likewise.
-	* config.bfd: Remove *-*-nacl* targets.
-	* configure.ac: Remove x86 NaCl target vectors.
-	* cpu-i386.c (bfd_arch_i386_onebyte_nop_fill): Removed.
-	(bfd_x64_32_nacl_arch): Likewise.
-	(bfd_x86_64_nacl_arch): Likewise.
-	(bfd_i386_nacl_arch): Likewise.
-	(bfd_x64_32_arch_intel_syntax): Updated.
-	* elf32-i386.c: Don't include "elf-nacl.h".
-	(elf_i386_nacl_plt): Removed.
-	(elf_i386_nacl_plt0_entry): Likewise.
-	(elf_i386_nacl_plt_entry): Likewise.
-	(elf_i386_nacl_pic_plt0_entry): Likewise.
-	(elf_i386_nacl_pic_plt_entry): Likewise.
-	(elf_i386_nacl_eh_frame_plt): Likewise.
-	(elf_i386_nacl_plt): Likewise.
-	(elf32_i386_nacl_elf_object_p): Likewise.
-	(elf_i386_get_synthetic_symtab): Updated.
-	(elf_i386_link_setup_gnu_properties): Likewise.
-	* elf64-x86-64.c: Don't include "elf-nacl.h".
-	(elf_x86_64_nacl_plt): Removed.
-	(elf64_x86_64_nacl_elf_object_p): Likewise.
-	(elf_x86_64_nacl_plt0_entry): Likewise.
-	(elf_x86_64_nacl_plt_entry): Likewise.
-	(elf_x86_64_nacl_eh_frame_plt): Likewise.
-	(elf_x86_64_nacl_plt): Likewise.
-	(elf32_x86_64_nacl_elf_object_p): Likewise.
-	(elf_x86_64_get_synthetic_symtab): Updated.
-	(elf_x86_64_link_setup_gnu_properties): Likewise.
-	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Likewise.
-	* targets.c: Remove x86 NaCl target vectors.
-	* bfd-in2.h: Regenerated.
-	* configure: Likewise.
-
-2020-06-29  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf32-tic6x.c (elf32_tic6x_size_dynamic_sections): Call
-	_bfd_elf_add_dynamic_tags.
-
-2020-06-29  Alan Modra  <amodra@gmail.com>
-
-	* peXXigen.c (_bfd_XXi_slurp_codeview_record): Properly check
-	return value of bfd_bread.  Don't read more than requested length.
-	Sanity check length.  Properly terminate file name.
-
-2020-06-29  Alan Modra  <amodra@gmail.com>
-
-	* arc-got.h: Use C style comments.
-	* coff-z80.c: Likewise.
-	* elf32-csky.c: Likewise.
-	* peXXigen.c: Likewise.
-	* elf32-m32c.c (m32c_elf_relax_delete_bytes): Remove commented out
-	code.
-
-2020-06-26  Pat Bernardi  <bernardi@adacore.com>
-
-	* elf32-m68k.c (m68k_elf_merge_obj_attributes): New function.
-	(elf32_m68k_merge_private_bfd_data): Merge GNU attributes.
-
-2020-06-26  Alan Modra  <amodra@gmail.com>
-
-	* elfxx-riscv.c (struct priv_spec_t, priv_specs),
-	(riscv_get_priv_spec_class, riscv_get_priv_spec_class_from_numbers),
-	(riscv_get_priv_spec_name): Move to..
-	* cpu-riscv.c: ..here.
-	(riscv_get_priv_spec_class_from_numbers): Don't xmalloc temp buffer.
-	Use %u to print unsigned numbers.
-
-2020-06-24  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* cpu-riscv.c (riscv_scan): Don't allow shorter matches using the
-	default architecture.
-
-2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26083
-	* elf32-csky.c (csky_elf_size_dynamic_sections): Call
-	_bfd_elf_add_dynamic_tags.
-
-2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26083
-	* elf32-cris.c (elf_cris_size_dynamic_sections): Call
-	_bfd_elf_add_dynamic_tags.
-
-2020-06-24  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (_bfd_vms_slurp_etir <ETIR__C_OPR_ASH>): Implement
-	shifts without undefined behaviour.
-
-2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf-bfd.h (elf_link_hash_table): Add dt_pltgot_required and
-	dt_jmprel_required.
-	(_bfd_elf_add_dynamic_tags): New.
-	* elf-m10300.c (_bfd_mn10300_elf_size_dynamic_sections): Call
-	_bfd_elf_add_dynamic_tags.
-	* elf32-arc.c (elf_arc_size_dynamic_sections): Likewise.
-	* elf32-bfin.c (elf32_bfinfdpic_size_dynamic_sections): Likewise.
-	* elf32-cr16.c (_bfd_cr16_elf_size_dynamic_sections): Likewise.
-	* elf32-frv.c (elf32_frvfdpic_size_dynamic_sections): Likewise.
-	* elf32-lm32.c (lm32_elf_size_dynamic_sections): Likewise.
-	* elf32-m32r.c (m32r_elf_size_dynamic_sections): Likewise.
-	* elf32-m68k.c (elf_m68k_size_dynamic_sections): Likewise.
-	* elf32-microblaze.c (microblaze_elf_size_dynamic_sections):
-	Likewise.
-	* elf32-nds32.c (nds32_elf_size_dynamic_sections): Likewise.
-	* elf32-nios2.c (nios2_elf32_size_dynamic_sections): Likewise.
-	* elf32-or1k.c (or1k_elf_size_dynamic_sections): Likewise.
-	* elf32-s390.c (elf_s390_size_dynamic_sections): Likewise.
-	* elf32-tilepro.c (tilepro_elf_size_dynamic_sections): Likewise.
-	* elf32-vax.c (elf_vax_size_dynamic_sections): Likewise.
-	* elf64-alpha.c (elf64_alpha_size_dynamic_sections): Likewise.
-	* elf64-s390.c (elf_s390_size_dynamic_sections): Likewise.
-	* elfnn-aarch64.c (elfNN_aarch64_size_dynamic_sections):
-	Likewise.
-	* elfnn-riscv.c (riscv_elf_size_dynamic_sections): Likewise.
-	* elfxx-tilegx.c (tilegx_elf_size_dynamic_sections): Likewise.
-	* elf32-arm.c (elf32_arm_size_dynamic_sections): Call
-	_bfd_elf_maybe_vxworks_add_dynamic_tags.
-	* elf32-ppc.c (ppc_elf_size_dynamic_sections): Likewise.
-	* elfxx-sparc.c (_bfd_sparc_elf_size_dynamic_sections):
-	Likewise.
-	* elfxx-x86.c (_bfd_x86_elf_link_hash_table_create): Likewise.
-	(_bfd_x86_elf_size_dynamic_sections): Likewise.
-	* elfxx-x86.h (elf_x86_link_hash_table): Remove dt_reloc,
-	dt_reloc_sz and dt_reloc_ent.
-	* elf-vxworks.c (_bfd_elf_maybe_vxworks_add_dynamic_tags): New.
-	* elf-vxworks.h (_bfd_elf_maybe_vxworks_add_dynamic_tags):
-	Likewise.
-	* elf32-hppa.c (elf32_hppa_link_hash_table_create): Set
-	etab.dt_pltgot_required.
-	(elf32_hppa_size_dynamic_sections): Call
-	_bfd_elf_add_dynamic_tags.
-	* elf32-metag.c (elf_metag_link_hash_table_create): Set
-	etab.dt_pltgot_required.
-	(elf_metag_size_dynamic_sections): Call _bfd_elf_add_dynamic_tags.
-	* elf32-sh.c (sh_elf_link_hash_table_create): Set
-	root.dt_pltgot_required for FDPIC output.
-	(sh_elf_size_dynamic_sections): Call
-	_bfd_elf_maybe_vxworks_add_dynamic_tags.
-	* elf32-xtensa.c (elf_xtensa_link_hash_table_create): Set
-	elf.dt_pltgot_required.
-	(elf_xtensa_size_dynamic_sections): Call
-	_bfd_elf_add_dynamic_tags.
-	* elf64-hppa.c (elf64_hppa_hash_table_create): Set
-	root.dt_pltgot_required.
-	(elf64_hppa_size_dynamic_sections): Call
-	_bfd_elf_add_dynamic_tags.
-	* elfnn-ia64.c (elfNN_ia64_hash_table_create): Set
-	root.dt_pltgot_required.
-	(elfNN_ia64_size_dynamic_sections): Set root.dt_jmprel_required
-	for rel_pltoff_sec.  Call _bfd_elf_add_dynamic_tags.
-	* elflink.c (_bfd_elf_add_dynamic_tags): New.
-
-2020-06-22  Saagar Jha  <saagar@saagarjha.com>
-
-	* mach-o.c: Support the new load commands by reading a linkedit
-	data command for them.
-
-2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
-
-	* elfxx-riscv.c (struct priv_spec_t priv_specs[]): Move them from
-	opcodes/riscv-opc.c to bfd/elfxx-riscv.c, since we need it in linker.
-	(riscv_get_priv_spec_class): Likewise.
-	(riscv_get_priv_spec_name): Likewise.
-	(riscv_get_priv_spec_class_from_numbers): New function, convert
-	the version numbers into string, then call riscv_get_priv_spec_class
-	to get the priv spec class.
-	* elfxx-riscv.h (riscv_get_priv_spec_class): Move forward declaration
-	from include/opcode/riscv.h to bfd/elfxx-riscv.h.
-	(riscv_get_priv_spec_name): Likewise.
-	(riscv_get_priv_spec_class_from_numbers): New forward declaration.
-	(opcode/riscv.h): Include it in the header rather than elfxx-riscv.c.
-	* elfnn-riscv.c (riscv_merge_attributes):  Get the priv spec classes
-	of input and output objects form their priv spec attributes by
-	riscv_get_priv_spec_class_from_numbers.  Report warning rather than
-	errors when linking objects with differnet priv spec versions.  We do
-	know v1.9.1 may have conflicts to other versions, so report the
-	warning, too.  After that, update the output priv spec version to the
-	newest one so far.
-
-2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
-
-	* elfnn-riscv.c (riscv_merge_attributes): Once we meet one of the
-	priv attributes, we will check the conflicts for all of them (major,
-	minor and revision), and then set the priv_attrs_merged to TRUE to
-	indicate that we have handled all of the priv attributes.  Remove
-	the unused boolean priv_may_conflict, in_priv_zero and out_priv_zero.
-
-2020-06-21  Alan Modra  <amodra@gmail.com>
-
-	PR 26132
-	* configure.ac: Disable plugins by default for some targets.
-	* plugin.c: Comment typo fix.
-	* configure: Regenerate.
-
-2020-06-19  Nick Clifton  <nickc@redhat.com>
-
-	* plugin.c (try_load_plugin): Suppress the error message about
-	being unable to open a plugin if creating a list of viable
-	plugins.
-
-2020-06-16  Alan Modra  <amodra@gmail.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-	* aout-tic30.c: Delete file.
-	* Makefile.am (BFD32_BACKENDS): Remove aout-tic30.lo.
-	(BFD32_BACKENDS_CFILES): Remove aout-tic30.c.
-	* config.bfd (c30-*-*aout*, tic30-*-*aout*): Remove entry.
-	(xc16x-*-elf): Sort properly.
-	* configure.ac: Remove tic30_aout_vec.
-	* targets.c: Likewise.
-	* Makefile.in: Regenerate.
+	* version.m4: Update release number to 2.35.90.
 	* configure: Regenerate.
-	* po/SRC-POTFILES.in: Regenerate.
-
-2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* elf32-xtensa.c (XSHAL_ABI, XTHAL_ABI_UNDEFINED)
-	(XTHAL_ABI_WINDOWED, XTHAL_ABI_CALL0): New macros.
-	(elf32xtensa_abi): New global variable.
-	(xtensa_abi_choice): New function.
-	(elf_xtensa_create_plt_entry): Use xtensa_abi_choice instead of
-	XSHAL_ABI to select PLT code.
-
-2020-06-15  Roland McGrath  <mcgrathr@google.com>
-
-	* elflink.c (bfd_elf_define_start_stop): Use start_stop_visibility
-	field of bfd_link_info.
-
-2020-06-15  Alan Modra  <amodra@gmail.com>
-
-	* config.bfd: Obsolete powerpcle-*-pe targets.
-
-2020-06-15  Alan Modra  <amodra@gmail.com>
-
-	PR 26103
-	* elflink.c (elf_link_add_archive_symbols): Exclude undefined
-	symbols that were defined in discarded sections.
-	* cofflink.c (coff_link_check_archive_element): Likewise.
-	(coff_link_add_symbols): Set indx to -3 for symbols defined in
-	discarded sections.
-	(_bfd_coff_write_global_sym): Don't emit such symbols.
-	libcoff-in.h (struct coff_link_hash_entry): Update indx comment.
-	libcoff.h: Regenerate.
-
-2020-06-11  Alan Modra  <amodra@gmail.com>
-
-	PR 26107
-	* pdp11.c (is_stab): Replace legacy "index" function with "strchr".
-
-2020-06-10  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elfnn-ia64.c (elfNN_ia64_link_hash_table): Remove reltext.
-	(allocate_dynrel_entries): Set DF_TEXTREL instead of reltext.
-	(elfNN_ia64_size_dynamic_sections): Check DF_TEXTREL instead
-	of reltext.
-
-2020-06-10  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26094
-	* elflink.c (bfd_elf_define_start_stop): Handle common symbols.
-	Clear verinfo.verdef.
-
-2020-06-09  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/18801
-	* elf-bfd.h (elf_link_hash_table): Add ifunc_resolvers.
-	(_bfd_elf_allocate_ifunc_dyn_relocs): Remove the
-	bfd_boolean * argument.  Set ifunc_resolvers if there are IFUNC
-	resolvers.
-	* elf-ifunc.c (_bfd_elf_allocate_ifunc_dyn_relocs): Updated.
-	Set ifunc_resolvers if there are FUNC resolvers.
-	* elf64-ppc.c (ppc_link_hash_table): Remove local_ifunc_resolver.
-	(build_global_entry_stubs_and_plt): Replace local_ifunc_resolver
-	with elf.ifunc_resolvers.
-	(write_plt_relocs_for_local_syms): Likewise.
-	(ppc64_elf_relocate_section): Likewise.
-	(ppc64_elf_finish_dynamic_sections): Likewise.
-	* elfnn-aarch64.c (elfNN_aarch64_allocate_ifunc_dynrelocs):
-	Updated.
-	* elfxx-x86.c (elf_x86_allocate_dynrelocs): Likewise.
-	(_bfd_x86_elf_size_dynamic_sections): Check elf.ifunc_resolvers
-	instead of readonly_dynrelocs_against_ifunc.
-	* elfxx-x86.h (elf_x86_link_hash_table): Remove
-	readonly_dynrelocs_against_ifunc.
-
-2020-06-09  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (struct ppc_link_hash_table): Delete
-	maybe_local_ifunc_resolver field.
-	(build_global_entry_stubs_and_plt): Set local_ifunc_resolver in
-	cases where maybe_local_ifunc_resolver was set.
-	(ppc64_elf_relocate_section): Likewise.
-	(ppc64_elf_finish_dynamic_sections): Downgrade ifunc with textrel
-	error to a warning.
-
-2020-06-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf-bfd.h (elf_link_hash_entry): Add tlsdesc_plt and
-	tlsdesc_got.
-	* elf32-arm.c (elf32_arm_link_hash_table): Remove tlsdesc_plt
-	and dt_tlsdesc_got.
-	(elf32_arm_size_dynamic_sections): Updated.  Clear
-	root.tlsdesc_plt for DF_BIND_NOW.
-	(elf32_arm_finish_dynamic_sections): Updated.
-	(elf32_arm_output_arch_local_syms): Likewise.
-	* elf32-nds32.c (nds32_elf_size_dynamic_sections): Updated.
-	Clear root.tlsdesc_plt for DF_BIND_NOW.
-	(nds32_elf_finish_dynamic_sections): Updated.
-	* elf32-nds32.h (elf_nds32_link_hash_table): Remove
-	dt_tlsdesc_plt and dt_tlsdesc_got.
-	* elf64-x86-64.c (elf_x86_64_finish_dynamic_sections): Updated.
-	* elfnn-aarch64.c (elf_aarch64_link_hash_table): Remove
-	tlsdesc_plt and dt_tlsdesc_got.
-	(elfNN_aarch64_allocate_dynrelocs): Updated.
-	(elfNN_aarch64_finish_dynamic_sections): Likewise.
-	(elfNN_aarch64_size_dynamic_sections): Updated.  Clear
-	root.tlsdesc_plt for DF_BIND_NOW.  Don't check DF_BIND_NOW
-	twice.
-	* elfxx-x86.c (elf_x86_allocate_dynrelocs): Updated.
-	(_bfd_x86_elf_size_dynamic_sections): Likewise.
-	(_bfd_x86_elf_finish_dynamic_sections): Likewise.
-	* elfxx-x86.h (elf_x86_link_hash_table): Remove tlsdesc_plt and
-	tlsdesc_got.
-
-2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf32-tic6x.c (elf32_bed): Defined the default to
-	elf32_tic6x_bed.
-
-2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf64-hppa.c (elf64_hppa_link_hash_table): Remove plt_sec and
-	plt_rel_sec.
-	(elf64_hppa_check_relocs): Replace plt_sec/plt_rel_sec with
-	root.splt/root.srelplt.
-	(elf64_hppa_create_dynamic_sections): Likewise.
-	(elf64_hppa_size_dynamic_sections): Likewise.
-	(elf64_hppa_finish_dynamic_symbol): Likewise.
-	(elf_hppa_final_link): Likewise.
-	(elf_hppa_final_link_relocate): Likewise.
-
-2020-06-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elfxx-sparc.c (_bfd_sparc_elf_size_dynamic_sections): Updated.
-	* elfxx-sparc.h (_bfd_sparc_elf_link_hash_table): Remove
-	is_vxworks.
-
-2020-06-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf-bfd.h (elf_target_os): New.
-	(elf_link_hash_table): Add target_os.
-	(elf_backend_data): Add target_os.
-	* elf32-arm.c (elf32_arm_link_hash_table): Remove vxworks_p,
-	symbian_p and nacl_p.
-	(create_got_section): Updated.
-	(elf32_arm_create_dynamic_sections): Likewise.
-	(arm_type_of_stub): Likewise.
-	(elf32_arm_create_or_find_stub_sec): Likewise.
-	(elf32_arm_allocate_plt_entry): Likewise.
-	(elf32_arm_populate_plt_entry): Likewise.
-	(elf32_arm_final_link_relocate): Likewise.
-	(elf32_arm_check_relocs): Likewise.
-	(allocate_dynrelocs_for_symbol): Likewise.
-	(elf32_arm_finish_dynamic_symbol): Likewise.
-	(elf32_arm_finish_dynamic_sections): Likewise.
-	(elf32_arm_output_plt_map_1): Likewise.
-	(elf32_arm_output_arch_local_syms): Likewise.
-	(elf32_arm_add_symbol_hook): Likewise.
-	(elf32_arm_nacl_link_hash_table_create): Likewise.
-	(elf32_arm_vxworks_link_hash_table_create): Likewise.
-	(elf32_arm_symbian_link_hash_table_create): Likewise.
-	(ELF_TARGET_OS): New.
-	* elf32-i386.c (elf_i386_arch_bed): Removed.
-	(elf_backend_arch_data): Likewise.
-	(elf_i386_solaris_arch_bed): Likewise.
-	(elf_i386_nacl_arch_bed): Likewise.
-	(elf_i386_vxworks_arch_bed): Likewise.
-	(elf_i386_relocate_section): Updated.
-	(elf_i386_finish_dynamic_sections): Likewise.
-	(elf_i386_get_synthetic_symtab): Likewise.
-	(elf_i386_link_setup_gnu_properties): Likewise.
-	(ELF_TARGET_OS): New.
-	* elf32-mips.c (ELF_TARGET_OS): New.
-	* elf32-ppc.c (ppc_elf_link_hash_table): Remove is_vxworks.
-	(ppc_elf_create_got): Updated.
-	(ppc_elf_create_dynamic_sections): Likewise.
-	(ppc_elf_check_relocs): Likewise.
-	(ppc_elf_adjust_dynamic_symbol): Likewise.
-	(ppc_elf_size_dynamic_sections): Likewise.
-	(ppc_elf_relocate_section): Likewise.
-	(ppc_elf_finish_dynamic_sections): Likewise.
-	(ppc_elf_vxworks_link_hash_table_create): Likewise.
-	(ELF_TARGET_OS): New.
-	* elf32-sh.c (elf_sh_link_hash_table): Remove vxworks_p.
-	(sh_elf_link_hash_table_create): Updated.
-	(sh_elf_create_dynamic_sections): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(sh_elf_size_dynamic_sections): Likewise.
-	(sh_elf_relocate_section): Likewise.
-	(sh_elf_finish_dynamic_symbol): Likewise.
-	(sh_elf_finish_dynamic_sections): Likewise.
-	(ELF_TARGET_OS): New.
-	* elf32-sparc.c (elf32_sparc_vxworks_link_hash_table_create):
-	Removed.
-	(bfd_elf32_bfd_link_hash_table_create): Likewise.
-	(ELF_TARGET_OS): New.
-	* elf64-x86-64.c (elf_x86_64_arch_bed): Removed.
-	(elf_x86_64_solaris_arch_bed): Likewise.
-	(elf_x86_64_nacl_arch_bed): Likewise.
-	(elf_x86_64_finish_dynamic_sections): Updated.
-	(elf_x86_64_get_synthetic_symtab): Likewise.
-	(elf_x86_64_link_setup_gnu_properties): Likewise.
-	(ELF_TARGET_OS): New.
-	* elflink.c (_bfd_elf_link_hash_table_init): Initialize
-	target_o.
-	* elfxx-mips.c (mips_elf_link_hash_table): Remove is_vxworks.
-	(MIPS_ELF_REL_DYN_NAME): Updated.
-	(ELF_MIPS_GP_OFFSET): Likewise.
-	(mips_elf_create_local_got_entry): Likewise.
-	(mips_elf_allocate_dynamic_relocations): Likewise.
-	(mips_elf_count_got_symbols): Likewise.
-	(is_gott_symbol): Likewise.
-	(mips_elf_calculate_relocation): Likewise.
-	(mips_elf_create_dynamic_relocation): Likewise.
-	(_bfd_mips_elf_check_relocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(_bfd_mips_elf_adjust_dynamic_symbol): Likewise.
-	(mips_elf_lay_out_got): Likewise.
-	(mips_elf_set_plt_sym_value): Likewise.
-	(_bfd_mips_elf_size_dynamic_sections): Likewise.
-	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.
-	(_bfd_mips_elf_finish_dynamic_sections): Likewise.
-	(_bfd_mips_elf_final_link): Likewise.
-	(_bfd_mips_init_file_header): Likewise.
-	* elfxx-sparc.c (_bfd_sparc_elf_create_dynamic_sections):
-	Likewise.
-	(allocate_dynrelocs): Likewise.
-	(_bfd_sparc_elf_size_dynamic_sections): Likewise.
-	(_bfd_sparc_elf_relocate_section): Likewise.
-	(_bfd_sparc_elf_finish_dynamic_symbol): Likewise.
-	(sparc_finish_dyn): Likewise.
-	(_bfd_sparc_elf_finish_dynamic_sections): Likewise.
-	* elfxx-target.h (ELF_TARGET_OS): New.
-	(elfNN_bed): Add ELF_TARGET_OS.
-	* elfxx-x86.c (elf_x86_allocate_dynrelocs): Updated.
-	(_bfd_x86_elf_link_hash_table_create): Likewise.
-	(_bfd_x86_elf_size_dynamic_sections): Likewise.
-	(_bfd_x86_elf_finish_dynamic_sections): Likewise.
-	(_bfd_x86_elf_adjust_dynamic_symbol): Likewise.
-	(_bfd_x86_elf_link_setup_gnu_properties): Likewise.
-	* elfxx-x86.h (elf_x86_target_os): Removed.
-	(elf_x86_backend_data): Likewise.
-	(get_elf_x86_backend_data): Likewise.
-	(elf_x86_link_hash_table): Remove target_os.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* reloc.c: Rename
-	BFD_RELOC_PPC64_GOT_TLSGD34 to BFD_RELOC_PPC64_GOT_TLSGD_PCREL34,
-	BFD_RELOC_PPC64_GOT_TLSLD34 to BFD_RELOC_PPC64_GOT_TLSLD_PCREL34,
-	BFD_RELOC_PPC64_GOT_TPREL34 to BFD_RELOC_PPC64_GOT_TPREL_PCREL34,
-	BFD_RELOC_PPC64_GOT_DTPREL34 to BFD_RELOC_PPC64_GOT_DTPREL_PCREL34.
-	* elf64-ppc.c: Update throughout for reloc renaming.
-	(ppc64_elf_reloc_name_lookup): Handle old reloc names.
-	* libbfd.h: Regenerate.
-	* bfd-in2.h: Regenerate.
-
-2020-06-05  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26080
-	* elf32-bfin.c (bfinfdpic_relocate_section): Skip non SEC_ALLOC
-	section.
-
-2020-06-05  Nick Clifton  <nickc@redhat.com>
-
-	* pdp11.c (aout_link_add_symbols): Fix use before initialisation
-	bug.
-
-2020-06-05  Nelson Chu  <nelson.chu@sifive.com>
-
-	* elfnn-riscv.c (riscv_merge_attributes): Add new boolean
-	priv_may_conflict, in_priv_zero and out_priv_zero to decide
-	whether the object can be linked according to it's priv
-	attributes.  The object without any priv spec attributes can
-	be linked with others.  If the first input object doesn't contain
-	any priv attributes, then we need to copy the setting from the
-	next input one.  Also report more detailed error messages to user.
-
-2020-06-04  Stephen Casner  <casner@acm.org>
-
-	Extend pdp11-aout symbol table format to accommodate .stab
-	symbols and implement correct handling of them.
-
-	* pdp11.c (pdp11_external_nlist): Repurposed e_unused to e_desc.
-	(N_STAB, is_stab): Needed new function is_stab to disambiguate
-	normal vs. .stab symbol table type values, replacing N_STAB mask.
-	(translate_from_native_sym_flags): Determine correct section for
-	different .stab types.
-	(translate_to_native_sym_flags): Leave .stab types intact.
-	(translate_symbol_table): Error if symbol indicates overlay;
-	store desc field from .stab symbols.
-	(write_syms): Output desc field with symbol.
-	(aout_link_check_ar_symbols): Skip .stab symbols.
-	(aout_link_add_symbols): Correctly distinguish .stab symbols.
-	(aout_link_write_other_symbol): Write 0 for desk and ovly fields.
-	(aout_link_write_symbols): Write 0 for desk and ovly fields;
-	correctly distinguish .stab symbols and select calculate their
-	section and value; and copy desc and ovly fields from input symbol
-	to output symbol.
-
-2020-06-04  Stephen Casner  <casner@acm.org>
-
-	* aoutx.h (translate_symbol_table): Comment had external and
-	internal swapped.
-	* pdp11.c (translate_symbol_table): Likewise.
-
-2020-06-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elfxx-x86.h (elf_x86_link_hash_table): Remove target_id.
-	(is_x86_elf): Check elf.hash_table_id instead of target_id.
-	* elfxx-x86.c (_bfd_x86_elf_link_hash_table_create): Updated.
-
-2020-06-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26080
-	* elf-m10300.c (mn10300_elf_relocate_section): Resolve relocation
-	in debug section against symbol defined in shared library to 0.
-	* elf32-i386.c (elf_i386_check_relocs): Remove SEC_ALLOC check.
-	* elf32-lm32.c (lm32_elf_check_relocs): Likewise.
-	* elf32-m32r.c (m32r_elf_check_relocs): Likewise.
-	* elf32-nds32.c (nds32_elf_check_relocs): Likewise.
-	* elf32-nios2.c (nios2_elf32_check_relocs): Likewise.
-	* elf32-or1k.c (or1k_elf_check_relocs): Likewise.
-	* elf32-ppc.c (ppc_elf_check_relocs): Likewise.
-	* elf32-sh.c (sh_elf_check_relocs): Likewise.
-	* elf32-xtensa.c (elf_xtensa_check_relocs): Likewise.
-	* elf64-alpha.c (elf64_alpha_check_relocs): Likewise.
-	* elf64-ppc.c (ppc64_elf_check_relocs): Likewise.
-	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
-	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Likewise.
-	* elf32-vax.c (elf_vax_check_relocs): Set non_got_ref for non-GOT
-	reference.
-	(elf_vax_adjust_dynamic_symbol): Generate a copy reloc only if
-	there is non-GOT reference.
-	* elflink.c (_bfd_elf_link_check_relocs): Skip non-loaded,
-	non-alloced sections.
-
-2020-06-03  Stephen Casner  <casner@acm.org>
-
-	Copy several years of fixes from bfd/aoutx.h to bfd/pdp11.c.
-
-	* pdp11.c (some_aout_object_p): 4c1534c7a2a - Don't set EXEC_P for
-	files with relocs.
-	(aout_get_external_symbols): 6b8f0fd579d - Return if count is zero.
-	0301ce1486b PR 22306 - Handle stringsize of zero, and error for any
-	other size that doesn't qcover the header word.
-	bf82069dce1 PR 23056 - Allocate an extra byte at the end of the
-	string table, and zero it.
-	(translate_symbol_table): 0d329c0a83a PR 22887 - Print an error
-	message and set bfd_error on finding an invalid name string offset.
-	(add_to_stringtab): INLINE -> inline
-	(pdp11_aout_swap_reloc_in): 116acb2c268 PR 22887 - Correct r_index
-	bound check.
-	(squirt_out_relocs): e2996cc315d PR 20921 - Check for and report
-	any relocs that could not be recognised.
-	92744f05809 PR 20929 - Check for relocs	without an associated symbol.
-	(find_nearest_line):  808346fcfcf PR 23055 - Check that the symbol
-	name exists and is long enough, before attempting to see if it is
-	for a .o file.
-	c3864421222 - Correct case for N_SO being the last symbol.
-	50455f1ab29 PR 20891 - Handle the case where the main file name
-	and the directory name are both empty.
-	e82ab856bb4 PR 20892 - Handle the case where function name is empty.
-	(aout_link_add_symbols): e517df3dbf7 PR 19629 - Check for out of
-	range string table offsets.
-	531336e3a0b PR 20909 - Fix off-by-one error in check for an
-	illegal string offset.
-	(aout_link_includes_newfunc): Add comment.
-	(pdp11_aout_link_input_section): ad756e3f9e6 - Return with an error
-	on unexpected relocation type rather than ASSERT.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26066
-	* elf32-nios2.c (nios2_elf32_size_dynamic_sections): Call
-	_bfd_elf_maybe_set_textrel to set DF_TEXTREL.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26066
-	* elf32-nios2.c (nios2_elf32_check_relocs): Skip non-loaded,
-	non-alloced sections.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf32-frv.c (elf32_frv_relocate_section): Don't generate
-	dynamic relocations for non SEC_ALLOC sections.
-
-2020-06-03  Gunther Nikl  <gnikl@justmail.de>
-
-	* aout64.c (BMAGIC, QMAGIC): Do not define.
-	* aoutx.h (N_IS_BMAGIC, N_SET_QMAGIC): New defines.
-	(NAME (aout, some_aout_object_p)): Use N_IS_QMAGIC and N_IS_BMAGIC
-	to check the file format.
-	(adjust_z_magic): Use N_SET_QMAGIC to set file format.
-	* i386aout.c (NO_WRITE_HEADER_KLUDGE): Delete define.
-	* libaout.h (NO_WRITE_HEADER_KLUDGE): Do not define.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf32-arc.c (elf_arc_relocate_section): Don't generate dynamic
-	relocations for non SEC_ALLOC sections.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf-bfd.h (_bfd_elf_maybe_set_textrel): New
-	* elf32-arm.c (maybe_set_textrel): Removed.
-	(elf32_arm_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-csky.c (maybe_set_textrel): Removed.
-	(csky_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-hppa.c (maybe_set_textrel): Removed.
-	(elf32_hppa_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-lm32.c (maybe_set_textrel): Removed.
-	(lm32_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-m32r.c (maybe_set_textrel): Removed.
-	(m32r_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-metag.c (maybe_set_textrel): Removed.
-	(elf_metag_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-nds32.c (maybe_set_textrel): Removed.
-	(nds32_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-or1k.c (maybe_set_textrel): Removed.
-	(or1k_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-ppc.c (maybe_set_textrel): Removed.
-	(ppc_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-s390.c (maybe_set_textrel): Removed.
-	(elf_s390_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-sh.c (maybe_set_textrel): Removed.
-	(sh_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-tic6x.c (maybe_set_textrel): Removed.
-	(elf32_tic6x_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf32-tilepro.c (maybe_set_textrel): Removed.
-	(tilepro_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf64-ppc.c (maybe_set_textrel): Removed.
-	(ppc64_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elf64-s390.c (maybe_set_textrel): Removed.
-	(elf_s390_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elfnn-aarch64.c (maybe_set_textrel): Removed.
-	(elfNN_aarch64_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elfnn-riscv.c (maybe_set_textrel): Removed.
-	(riscv_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elfxx-sparc.c (maybe_set_textrel): Removed.
-	(_bfd_sparc_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elfxx-tilegx.c (maybe_set_textrel): Removed.
-	(tilegx_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elfxx-x86.c (maybe_set_textrel): Removed.
-	(_bfd_x86_elf_size_dynamic_sections): Replace maybe_set_textrel
-	with _bfd_elf_maybe_set_textrel.
-	* elflink.c (_bfd_elf_maybe_set_textrel): New.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26067
-	* elf32-arm.c (elf32_arm_copy_indirect_symbol): Don't copy
-	dyn_relocs.
-	* elf32-csky.c (csky_elf_copy_indirect_symbol): Likewise.
-	* elf32-hppa.c (elf32_hppa_copy_indirect_symbol): Likewise.
-	* elf32-metag.c (elf_metag_copy_indirect_symbol): Likewise.
-	* elf32-microblaze.c (microblaze_elf_copy_indirect_symbol):
-	Likewise.
-	* elf32-nds32.c (nds32_elf_copy_indirect_symbol): Likewise.
-	* elf32-nios2.c (nios2_elf32_copy_indirect_symbol): Likewise.
-	* elf32-or1k.c (or1k_elf_copy_indirect_symbol): Likewise.
-	* elf32-s390.c (elf_s390_copy_indirect_symbol): Likewise.
-	* elf32-sh.c (sh_elf_copy_indirect_symbol): Likewise.
-	* elf32-tilepro.c (tilepro_elf_copy_indirect_symbol): Likewise.
-	* elf64-s390.c (elf_s390_copy_indirect_symbol): Likewise.
-	* elfnn-aarch64.c (elfNN_aarch64_copy_indirect_symbol): Likewise.
-	* elfnn-riscv.c (riscv_elf_copy_indirect_symbol): Likewise.
-	* elfxx-sparc.c (_bfd_sparc_elf_copy_indirect_symbol): Likewise.
-	* elfxx-tilegx.c (tilegx_elf_copy_indirect_symbol): Likewise.
-	* elfxx-x86.c (_bfd_x86_elf_copy_indirect_symbol): Likewise.
-	* elf32-lm32.c (lm32_elf_copy_indirect_symbol): Removed.
-	(elf_backend_copy_indirect_symbol): Likewise.
-	* elf32-m32r.c (m32r_elf_copy_indirect_symbol): Removed.
-	(elf_backend_copy_indirect_symbol): Likewise.
-	* elflink.c (_bfd_elf_link_hash_copy_indirect): Copy dyn_relocs.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26067
-	* elf-bfd.h (_bfd_elf_readonly_dynrelocs): New.
-	* elf32-arm.c (readonly_dynrelocs): Removed.
-	(maybe_set_textrel): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	* elf32-csky.c (readonly_dynrelocs): Removed.
-	(maybe_set_textrel): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	*  elf32-hppa.c(readonly_dynrelocs): Removed.
-	(alias_readonly_dynrelocs): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elf32-lm32.c (readonly_dynrelocs): Removed.
-	(lm32_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elf32-m32r.c (readonly_dynrelocs): Removed.
-	(m32r_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elf32-metag.c (readonly_dynrelocs): Removed.
-	(elf_metag_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elf32-microblaze.c (readonly_dynrelocs): Removed.
-	(microblaze_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	* elf32-nds32.c (readonly_dynrelocs): Removed.
-	(nds32_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elf32-or1k.c (readonly_dynrelocs): Removed.
-	(or1k_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	* elf32-ppc.c (readonly_dynrelocs): Removed.
-	(alias_readonly_dynrelocs): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	(ppc_elf_adjust_dynamic_symbol): Likewise.
-	(maybe_set_textrel): Likewise.
-	* elf32-s390.c (readonly_dynrelocs): Removed.
-	(elf_s390_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elf32-sh.c (readonly_dynrelocs): Removed.
-	(sh_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elf32-tic6x.c (readonly_dynrelocs): Removed.
-	(maybe_set_textrel): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	* elf32-tilepro.c (readonly_dynrelocs): Removed.
-	(tilepro_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elf64-ppc.c (readonly_dynrelocs): Removed.
-	(alias_readonly_dynrelocs): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	(ppc64_elf_adjust_dynamic_symbol): Likewise.
-	(maybe_set_textrel): Likewise.
-	* elf64-s390.c (readonly_dynrelocs): Removed.
-	(elf_s390_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elflink.c (_bfd_elf_readonly_dynrelocs): New.
-	* elfnn-aarch64.c (readonly_dynrelocs): Removed.
-	(maybe_set_textrel): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	* elfnn-riscv.c (readonly_dynrelocs): Removed.
-	(riscv_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elfxx-sparc.c (readonly_dynrelocs): Removed.
-	(_bfd_sparc_elf_adjust_dynamic_symbol): Replace
-	readonly_dynrelocs with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elfxx-tilegx.c (readonly_dynrelocs): Removed.
-	(tilegx_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
-	with _bfd_elf_readonly_dynrelocs.
-	(maybe_set_textrel): Likewise.
-	* elfxx-x86.c (readonly_dynrelocs): Removed.
-	(maybe_set_textrel): Replace readonly_dynrelocs with
-	_bfd_elf_readonly_dynrelocs.
-	(_bfd_x86_elf_adjust_dynamic_symbol): Likewise.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elfxx-x86.h (GENERATE_DYNAMIC_RELOCATION_P): Silence
-	-fsanitize=undefined.
-
-2020-06-03  Alan Modra  <amodra@gmail.com>
-
-	PR 26069
-	PR 18758
-	* peicode.h (pe_ILF_make_a_section): Align data for compilers
-	other than gcc.
-	(pe_ILF_build_a_bfd): Likewise.
-
-2020-06-03  Alan Modra  <amodra@gmail.com>
-
-	PR 26069
-	* elf.c (_bfd_elf_close_and_cleanup): Free elf_shstrtab for
-	core files as well as objects.
-
-2020-06-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26067
-	* elf-bfd.h (elf_link_hash_entry): Add dyn_relocs after size.
-	* elf-s390-common.c (s390_elf_allocate_ifunc_dyn_relocs):
-	Updated.
-	* elf32-arc.c (elf_arc_link_hash_entry): Remove dyn_relocs.
-	(elf_arc_link_hash_newfunc): Updated.
-	* elf32-arm.c (elf32_arm_link_hash_entry): Remove dyn_relocs.
-	(elf32_arm_link_hash_newfunc): Updated.
-	(elf32_arm_copy_indirect_symbol): Likewise.
-	(elf32_arm_check_relocs): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs_for_symbol): Likewise.
-	* elf32-csky.c (csky_elf_link_hash_entry): Remove dyn_relocs.
-	(csky_elf_link_hash_newfunc): Updated.
-	(csky_allocate_dynrelocs): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(csky_elf_copy_indirect_symbol): Likewise.
-	* elf32-hppa.c (elf32_hppa_link_hash_entry): Remove dyn_relocs.
-	(hppa_link_hash_newfunc): Updated.
-	(elf32_hppa_copy_indirect_symbol): Likewise.
-	(elf32_hppa_hide_symbol): Likewise.
-	(elf32_hppa_adjust_dynamic_symbol): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(elf32_hppa_relocate_section): Likewise.
-	* elf32-i386.c (elf_i386_check_relocs): Likewise.
-	* elf32-lm32.c (elf_lm32_link_hash_entry): Removed.
-	(lm32_elf_link_hash_newfunc): Likewise.
-	(lm32_elf_link_hash_table_create): Updated.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(lm32_elf_copy_indirect_symbol): Likewise.
-	* elf32-m32r.c (elf_m32r_link_hash_entry): Removed.
-	(m32r_elf_link_hash_newfunc): Likewise.
-	(m32r_elf_link_hash_table_create): Updated.
-	(m32r_elf_copy_indirect_symbol): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elf32-metag.c (elf_metag_link_hash_entry): Remove dyn_relocs.
-	(metag_link_hash_newfunc): Updated.
-	(elf_metag_copy_indirect_symbol): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elf32-microblaze.c (elf32_mb_link_hash_entry): Remove
-	dyn_relocs.
-	(link_hash_newfunc): Updated.
-	(microblaze_elf_check_relocs): Likewise.
-	(microblaze_elf_copy_indirect_symbol): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elf32-nds32.c (elf_nds32_link_hash_entry): Remove dyn_relocs.
-	(nds32_elf_link_hash_newfunc): Updated.
-	(nds32_elf_copy_indirect_symbol): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(nds32_elf_check_relocs): Likewise.
-	* elf32-nios2.c (elf32_nios2_link_hash_entry): Remove dyn_relocs.
-	(link_hash_newfunc): Updated.
-	(nios2_elf32_copy_indirect_symbol): Likewise.
-	(nios2_elf32_check_relocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elf32-or1k.c (elf_or1k_link_hash_entry): Remove dyn_relocs.
-	(or1k_elf_link_hash_newfunc): Updated.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(or1k_elf_copy_indirect_symbol): Likewise.
-	* elf32-ppc.c (ppc_elf_link_hash_entry): Remove dyn_relocs.
-	(ppc_elf_link_hash_newfunc): Updated.
-	(ppc_elf_copy_indirect_symbol): Likewise.
-	(ppc_elf_check_relocs): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(ppc_elf_adjust_dynamic_symbol): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(ppc_elf_relocate_section): Likewise.
-	* elf32-s390.c (elf_s390_link_hash_entry): Remove dyn_relocs.
-	(link_hash_newfunc): Updated.
-	(elf_s390_copy_indirect_symbol): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(elf_s390_adjust_dynamic_symbol): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elf32-sh.c (elf_sh_link_hash_entry): Remove dyn_relocs.
-	(sh_elf_link_hash_newfunc): Updated.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(sh_elf_copy_indirect_symbol): Likewise.
-	(sh_elf_check_relocs): Likewise.
-	* elf32-tic6x.c (elf32_tic6x_link_hash_entry): Removed.
-	(elf32_tic6x_link_hash_newfunc): Likewise.
-	(elf32_tic6x_link_hash_table_create): Updated.
-	(readonly_dynrelocs): Likewise.
-	(elf32_tic6x_check_relocs): Likewise.
-	(elf32_tic6x_allocate_dynrelocs): Likewise.
-	* elf32-tilepro.c (tilepro_elf_link_hash_entry): Remove
-	dyn_relocs.
-	(link_hash_newfunc): Updated.
-	(tilepro_elf_copy_indirect_symbol): Likewise.
-	(tilepro_elf_check_relocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elf64-ppc.c (ppc_link_hash_entry): Remove dyn_relocs.
-	(ppc64_elf_copy_indirect_symbol): Updated.
-	(ppc64_elf_check_relocs): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(ppc64_elf_adjust_dynamic_symbol): Likewise.
-	(dec_dynrel_count): Likewise.
-	(allocate_dynrelocs): Likewise.
-	(ppc64_elf_relocate_section): Likewise.
-	* elf64-s390.c (elf_s390_link_hash_entry): Remove dyn_relocs.
-	(link_hash_newfunc): Updated.
-	(elf_s390_copy_indirect_symbol): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
-	* elfnn-aarch64.c (elf_aarch64_link_hash_entry): Remove
-	dyn_relocs.
-	(elfNN_aarch64_link_hash_newfunc): Updated.
-	(elfNN_aarch64_copy_indirect_symbol): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(need_copy_relocation_p): Likewise.
-	(elfNN_aarch64_allocate_dynrelocs): Likewise.
-	(elfNN_aarch64_allocate_ifunc_dynrelocs): Likewise.
-	* elfnn-riscv.c (riscv_elf_link_hash_entry): Remove dyn_relocs.
-	(link_hash_newfunc): Updated.
-	(riscv_elf_copy_indirect_symbol): Likewise.
-	(riscv_elf_check_relocs): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elfxx-sparc.c (_bfd_sparc_elf_link_hash_entry): Remove
-	dyn_relocs.
-	(link_hash_newfunc): Updated.
-	(_bfd_sparc_elf_copy_indirect_symbol): Likewise.
-	(_bfd_sparc_elf_check_relocs): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elfxx-tilegx.c (tilegx_elf_link_hash_entry): Remove dyn_relocs.
-	(link_hash_newfunc): Updated.
-	(tilegx_elf_copy_indirect_symbol): Likewise.
-	(tilegx_elf_check_relocs): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(allocate_dynrelocs): Likewise.
-	* elfxx-x86.c (elf_x86_allocate_dynrelocs): Likewise.
-	(readonly_dynrelocs): Likewise.
-	(_bfd_x86_elf_copy_indirect_symbol): Likewise.
-	* elfxx-x86.h (elf_x86_link_hash_entry): Remove dyn_relocs.
-
-2020-06-01  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (_bfd_vms_slurp_etir): Check bound for the current
-	command against cmd_length, not the end of record.  For
-	ETIR__C_STO_IMMR check size against cmd_length, mask repeat count
-	to 32-bits and break out on zero size.  Add ETIR__C_STC_LP_PSB
-	cmd_length test.
-
-2020-05-28  David Faust  <david.faust@oracle.com>
-
-	* elf64-bpf.c (bpf_elf_relocate_section): Fix handling of
-	R_BPF_INSN_{32,64} relocations.
-
-2020-05-28  Stephen Casner  <casner@acm.org>
-
-	* pdp11.c: Implement BRD_RELOC_32 to relocate the low 16 bits of
-	addreses in .long (used in testsuites) and .stab values.
-
-2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/22909
-	* elflink.c (bfd_elf_final_link): Use bfd_link_textrel_check.
-	Check bfd_link_dll when issue a DT_TEXTREL warning.
-	* elfxx-x86.c (maybe_set_textrel): Likewise.
-	(_bfd_x86_elf_size_dynamic_sections): Likewise.
-
-2020-05-26  Nick Clifton  <nickc@redhat.com>
-
-	* plugin.c (try_load_plugin): Extend error message when a plugin
-	fails to open.
-
-2020-05-23  Alan Modra  <amodra@gmail.com>
-
-	* bfdio.c (bfd_get_file_size): Don't segfault on NULL arch_header.
-
-2020-05-22  Alan Modra  <amodra@gmail.com>
-
-	PR 25882
-	* elf32-ppc.c (_bfd_elf_ppc_merge_fp_attributes): Don't init FP
-	attributes from shared libraries, and do not return an error if
-	they don't match.
-
-2020-05-21  Alan Modra  <amodra@gmail.com>
-
-	PR 25993
-	* opncls.c (_bfd_free_cached_info): Keep a copy of the bfd
-	filename.
-	(_bfd_delete_bfd): Free the copy.
-	(_bfd_new_bfd): Free nbfd->memory on error.
-
-2020-05-21  Alan Modra  <amodra@gmail.com>
-
-	* aoutx.h: Replace "if (x) free (x)" with "free (x)" throughout.
-	* archive.c, * bfd.c, * bfdio.c, * coff-alpha.c, * coff-ppc.c,
-	* coff-sh.c, * coff-stgo32.c, * coffcode.h, * coffgen.c,
-	* cofflink.c, * cpu-arm.c, * doc/chew.c, * dwarf2.c, * ecoff.c,
-	* ecofflink.c, * elf-eh-frame.c, * elf-m10200.c, * elf-m10300.c,
-	* elf-strtab.c, * elf.c, * elf32-arc.c, * elf32-arm.c,
-	* elf32-avr.c, * elf32-bfin.c, * elf32-cr16.c, * elf32-crx.c,
-	* elf32-epiphany.c, * elf32-ft32.c, * elf32-h8300.c,
-	* elf32-ip2k.c, * elf32-m32c.c, * elf32-m68hc11.c,
-	* elf32-m68k.c, * elf32-microblaze.c, * elf32-msp430.c,
-	* elf32-nds32.c, * elf32-nios2.c, * elf32-ppc.c, * elf32-pru.c,
-	* elf32-rl78.c, * elf32-rx.c, * elf32-sh.c, * elf32-spu.c,
-	* elf32-v850.c, * elf32-xtensa.c, * elf64-alpha.c,
-	* elf64-hppa.c, * elf64-ia64-vms.c, * elf64-mips.c
-	* elf64-mmix.c, * elf64-ppc.c, * elf64-sparc.c, * elfcode.h,
-	* elflink.c, * elfnn-ia64.c, * elfnn-riscv.c, * elfxx-mips.c,
-	* elfxx-x86.c, * format.c, * ihex.c, * libbfd.c, * linker.c,
-	* mmo.c, * opncls.c, * pdp11.c, * peXXigen.c, * pef.c,
-	* peicode.h, * simple.c, * som.c, * srec.c, * stabs.c, * syms.c,
-	* targets.c, * vms-lib.c, * xcofflink.c, * xtensa-isa.c: Likewise.
-
-2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* elfxx-riscv.h (riscv_parse_subset_t): Add new callback function
-	get_default_version.  It is used to find the default version for
-	the specific extension.
-	* elfxx-riscv.c (riscv_parsing_subset_version): Remove the parameters
-	default_major_version and default_minor_version.  Add new bfd_boolean
-	parameter *use_default_version.  Set it to TRUE if we need to call
-	the callback rps->get_default_version to find the default version.
-	(riscv_parse_std_ext): Call rps->get_default_version if we fail to find
-	the default version in riscv_parsing_subset_version, and then call
-	riscv_add_subset to add the subset into subset list.
-	(riscv_parse_prefixed_ext): Likewise.
-	(riscv_std_z_ext_strtab): Support Zicsr extensions.
-	* elfnn-riscv.c (riscv_merge_std_ext): Use strcasecmp to compare the
-	strings rather than characters.
-	riscv_merge_arch_attr_info): The callback function get_default_version
-	is only needed for assembler, so set it to NULL int the linker.
-	* elfxx-riscv.c (riscv_estimate_digit): Remove the static.
-	* elfxx-riscv.h: Updated.
-
-2020-05-20  Alan Modra  <amodra@gmail.com>
-
-	PR 25993
-	* archive.c (_bfd_get_elt_at_filepos): Don't strdup filename,
-	use bfd_set_filename.
-	* elfcode.h (_bfd_elf_bfd_from_remote_memory): Likewise.
-	* mach-o.c (bfd_mach_o_fat_member_init): Likewise.
-	* opncls.c (bfd_fopen, bfd_openstreamr, bfd_openr_iovec, bfd_openw),
-	(bfd_create): Likewise.
-	(_bfd_delete_bfd): Don't free filename.
-	(bfd_set_filename): Copy filename param to bfd_alloc'd memory,
-	return pointer to the copy or NULL on alloc fail.
-	* vms-lib.c (_bfd_vms_lib_get_module): Free newname and test
-	result of bfd_set_filename.
-	* bfd-in2.h: Regenerate.
-
-2020-05-20  Alan Modra  <amodra@gmail.com>
-
-	PR 26011
-	* elf.c (_bfd_elf_get_reloc_upper_bound): Sanity check reloc
-	section size against file size.
-	(_bfd_elf_get_dynamic_reloc_upper_bound): Likewise.
-
-2020-05-19  Gunther Nikl  <gnikl@justmail.de>
-
-	PR 26005
-	* elf.c (bfd_section_from_shdr): Replace bfd_zmalloc with bfd_malloc
-	and memset when allocating memory for the sections_being_created
-	array.
-
-2020-05-19  Stafford Horne  <shorne@gmail.com>
-
-	* elf32-or1k.c (or1k_elf_finish_dynamic_symbol): Rename srela
-	to relgot.
-	(or1k_elf_relocate_section): Access srelgot via
-	htab->root.srelgot.  Add assertions for srelgot->contents.
-	Introduce local variable for srelgot to not reuse global
-	sreloc.
-	(or1k_elf_relocate_section): Fixup dynamic symbol detection.
-	(or1k_set_got_and_rela_sizes): New function.
-	(or1k_initial_exec_offset): New function.
-	(TLS_GD, TLS_IE, TLS_LD, TLS_LE): Redefine macros as masks.
-	(or1k_elf_relocate_section): Allow for TLS to handle multiple
-	model access.
-	(or1k_elf_check_relocs): Use OR to set TLS access.
-	(allocate_dynrelocs): Use or1k_set_got_and_rela_sizes to set
-	sizes.
-	(or1k_elf_size_dynamic_sections): Use
-	or1k_set_got_and_rela_sizes to set sizes.
-	(or1k_elf_relocate_section): Fixup PCREL relocation calculation.
-	(TCB_SIZE): New macro.
-	(tpoff): Use TCB_SIZE and alignment to calculate offset.
-	(allocate_dynrelocs, readonly_dynrelocs, or1k_elf_check_relocs)
-	(or1k_elf_size_dynamic_sections): Rename p to sec_relocs.
-	(allocate_dynrelocs): Rename s to splt or sgot based on usage.
-	(tpoff): Add dynamic boolean argument.
-	(or1k_elf_relocate_section): Pass dynamic flag to tpoff.
-
-2020-05-19  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>
-
-	* elfnn-aarch64.c (elfNN_aarch64_final_link_relocate): Club
-	BFD_RELOC_AARCH64_BRANCH19 and BFD_RELOC_AARCH64_TSTBR14
-	cases with BFD_RELOC_AARCH64_JUMP26.
-	(elfNN_aarch64_check_relocs): Likewise.
-
-2020-05-19  Alan Modra  <amodra@gmail.com>
-
-	* aix5ppc-core.c (xcoff64_core_file_matches_executable_p): Use
-	bfd_get_filename rather than accessing bfd->filename directly.
-	* aout-target.h (MY (object_p)): Likewise.
-	* aoutx.h (aout_find_nearest_line, aout_link_write_symbols): Likewise.
-	* archive.c (find_nested_archive, _bfd_generic_read_ar_hdr_mag),
-	(_bfd_construct_extended_name_table, _bfd_bsd44_write_ar_hdr),
-	(_bfd_archive_bsd44_construct_extended_name_table),
-	(_bfd_write_archive_contents, _bfd_compute_and_write_armap),
-	(_bfd_bsd_write_armap): Likewise.
-	* bfd.c (bfd_errmsg, _bfd_doprnt): Likewise.
-	* cache.c (bfd_open_file): Likewise.
-	* ecoff.c (_bfd_ecoff_write_armap): Likewise.
-	* ecofflink.c (bfd_ecoff_debug_accumulate_other): Likewise.
-	* elf32-bfin.c (bfinfdpic_relocate_section): Likewise.
-	* elf32-frv.c (elf32_frv_relocate_section): Likewise.
-	* elf32-hppa.c (elf32_hppa_final_link): Likewise.
-	* elf32-nds32.c (nds32_elf_output_symbol_hook),
-	(patch_tls_desc_to_ie): Likewise.
-	* elf32-spu.c (sort_bfds, print_one_overlay_section),
-	(spu_elf_auto_overlay): Likewise.
-	* elf64-hppa.c (elf_hppa_final_link): Likewise.
-	* elf64-ia64-vms.c (elf64_ia64_size_dynamic_sections): Likewise.
-	* elfcore.h (elf_core_file_matches_executable_p): Likewise.
-	* elflink.c (bfd_elf_size_dynamic_sections),
-	(elf_link_input_bfd): Likewise.
-	* linker.c (_bfd_generic_link_output_symbols): Likewise.
-	* mach-o.c (bfd_mach_o_follow_dsym),
-	(bfd_mach_o_close_and_cleanup): Likewise.
-	* opncls.c (_bfd_delete_bfd, _maybe_make_executable),
-	(find_separate_debug_file, get_build_id_name): Likewise.
-	* pdp11.c (aout_find_nearest_line, aout_link_write_symbols): Likewise.
-	* plugin.c (bfd_plugin_open_input): Likewise.
-	* rs6000-core.c (rs6000coff_core_file_matches_executable_p): Likewise.
-	* som.c (som_write_armap): Likewise.
-	* srec.c (srec_write_record, srec_write_symbols): Likewise.
-	* vms-lib.c (_bfd_vms_lib_get_imagelib_file),
-	(_bfd_vms_lib_write_archive_contents): Likewise.
-	* xcofflink.c (xcoff_link_add_dynamic_symbols): Likewise.
-
-2020-05-19  Alan Modra  <amodra@gmail.com>
-
-	PR 25713
-	* bfdio.c (_bfd_real_fopen): Typo fix.
-
-2020-05-18  Nick Clifton  <nickc@redhat.com>
-
-	PR 26005
-	* elf.c (bfd_section_from_shdr): Use bfd_malloc to allocate memory
-	for the sections_being_created array.
-
-2020-05-18  Alan Modra  <amodra@gmail.com>
-
-	* ecoff.c (ecoff_slurp_reloc_table): Malloc external_relocs so
-	they can be freed without also freeing internal_relocs.
-
-2020-05-18  Jaydeep Chauhan  <jaydeepchauhan1494@gmail.com>
-
-	PR 25713
-	* bfdio.c (_bfd_real_fopen): Convert UNIX style sirectory
-	separators into DOS style when creating a WIN32 fullpath.
-
-2020-05-14  Nelson Chu  <nelson.chu@sifive.com>
-
-	* elfnn-riscv.c (elfNN_riscv_mkobject):  New function.  We need this
-	to initialize RISC-V tdata.
-
-2020-05-12  Gunther Nikl  <gnikl@justmail.de>
-
-	* aoutx.h (NAME (aout, swap_std_reloc_out)): Reject an unsupported
-	relocation size.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (xlate_pcrel_opt): Handle lxvp and stxvp.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c: Rename powerxx to power10 throughout.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	PR 25961
-	* coffgen.c (coff_get_normalized_symtab): Check that buffer
-	contains required number of auxents before processing any auxent.
-	* coffswap.h (coff_swap_aux_in <C_FILE>): Only swap in extended
-	file name from auxents for PE.
-
-2020-05-04  Gunther Nikl  <gnikl@justmail.de>
-
-	* aout-cris.c (DEFAULT_ARCH): Delete define.
-	(MY_set_arch_mach): Likewise.
-	(SET_ARCH_MACH): Use bfd_set_arch_mach with an explicit architecture
-	of bfd_arch_cris.
-	(swap_ext_reloc_in): Add casts to r_index extraction. Mask valid bits
-	of r_type before the shift.
-
-2020-05-04  Wilco Dijkstra  <wdijkstr@arm.com>
-
-	PR ld/25665
-	* elfnn-aarch64.c (group_sections): Copy implementation from
-	elf32-arm.c.
-
-2020-05-01  Alan Modra  <amodra@gmail.com>
-
-	PR 25900
-	* elfnn-riscv.c (_bfd_riscv_relax_section): Check root.type before
-	accessing root.u.def of symbols.  Also check root.u.def.section
-	is non-NULL.  Reverse tests so as to make the logic positive.
-
-2020-05-01  Alan Modra  <amodra@gmail.com>
-
-	PR 25882
-	* elf32-tic6x.c (elf32_tic6x_merge_attributes): Don't transfer
-	Tag_ABI_PIC or Tag_ABI_PID from dynamic objects to the output.
-
-2020-05-01  Alan Modra  <amodra@gmail.com>
-
-	PR 25882
-	* elf32-bfin.c (elf32_bfin_merge_private_bfd_data): Add FIXME.
-	* elf32-frv.c (frv_elf_merge_private_bfd_data): Likewise.
-	* elfxx-mips.c (_bfd_mips_elf_merge_private_bfd_data): Likewise.
-	* elf32-nds32.c (nds32_elf_merge_private_bfd_data): Likewise.
-	* elf32-score.c (s3_elf32_score_merge_private_bfd_data): Likewise.
-	* elf32-score7.c (s7_elf32_score_merge_private_bfd_data): Likewise.
-	* elf32-sh.c (sh_elf_merge_private_data): Likewise.
-	* elf32-tic6x.c (elf32_tic6x_merge_attributes): Likewise.
-	* elf64-ia64-vms.c (elf64_ia64_merge_private_bfd_data): Likewise.
-	* elfnn-ia64.c (elfNN_ia64_merge_private_bfd_data): Likewise.
-
-2020-05-01  Alan Modra  <amodra@gmail.com>
-
-	PR 25882
-	* elf32-ppc.c (ppc_elf_merge_private_bfd_data): Ignore e_flags
-	from shared libraries.
+	* po/bfd.pot: Regenerate.
 
-2020-04-29  Max Filippov  <jcmvbkbc@gmail.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-	* elf32-xtensa.c (relax_section): Don't negate diff_value for
-	XTENSA_NDIFF relocations. Don't add sign bits whe diff_value
-	equals 0. Report overflow when the result has negative sign but
-	all significant bits are zero.
+	* 2.36 release branch crated.
 
-2020-04-29  Gunther Nikl  <gnikl@justmail.de>
+2021-01-08  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* aoutx.h (swap_std_reloc_out): Special case 64 bit relocations.
-	(aout_link_reloc_link_order): Likewise. Make r_length an unsigned.
+	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Also set
+	LAM_U57 when setting LAM_U48.
 
-2020-04-28  Alan Modra  <amodra@gmail.com>
+2021-01-08  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* vms-alpha.c (_bfd_vms_slurp_etir): Correct divide by zero check.
-	Emit warning message.
+	PR ld/26256
+	PR ld/27160
+	* elflink.c (elf_fixup_link_order): Verify that fixing up
+	SHF_LINK_ORDER doesn't increase the output section size.
 
-2020-04-27  Tamar Christina  <tamar.christina@arm.com>
+2021-01-09  Alan Modra  <amodra@gmail.com>
 
-	* coff-i386.c (COFF_WITH_PE_BIGOBJ): New.
-	* coff-x86_64.c (COFF_WITH_PE_BIGOBJ): New.
-	* config.bfd (targ_selvecs): Rename x86_64_pe_be_vec
-	to x86_64_pe_big_vec as it not a big-endian format.
-	(vec i386_pe_big_vec): New.
-	* configure.ac: Likewise.
-	* targets.c: Likewise.
 	* configure: Regenerate.
-	* pe-i386.c (TARGET_SYM_BIG, TARGET_NAME_BIG,
-	COFF_WITH_PE_BIGOBJ): New.
-	* pe-x86_64.c (TARGET_SYM_BIG, TARGET_NAME_BIG):
-	New.
-	(x86_64_pe_be_vec): Moved.
-
-2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>
-
-	* elf-bfd.h (elfcore_write_arc_v2): Add prototype.
-	* elf.c (elfcore_grok_arc_v2): New function.
-	(elfcore_grok_note): Call the new function to handle the corresponding
-	note.
-	(elfcore_write_arc_v2): New function.
-	(elfcore_write_register_note): Call the new function to handle the
-	corresponding pseudo-sections.
-
-2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
-
-	PR ld/25861
-	* bfd-in2.h: Regenerated.
-	* elf32-xtensa.c (elf_howto_table): New entries for
-	R_XTENSA_PDIFF{8,16,32} and R_XTENSA_NDIFF{8,16,32}.
-	(elf_xtensa_reloc_type_lookup, elf_xtensa_do_reloc)
-	(relax_section): Add cases for R_XTENSA_PDIFF{8,16,32} and
-	R_XTENSA_NDIFF{8,16,32}.
-	* libbfd.h (bfd_reloc_code_real_names): Add names for
-	BFD_RELOC_XTENSA_PDIFF{8,16,32} and
-	BFD_RELOC_XTENSA_NDIFF{8,16,32}.
-	* reloc.c: Add documentation for BFD_RELOC_XTENSA_PDIFF{8,16,32}
-	and BFD_RELOC_XTENSA_NDIFF{8,16,32}.
-
-2020-04-21  Tamar Christina  <tamar.christina@arm.com>
-
-	PR binutils/24753
-	* compress.c (bfd_get_full_section_contents): Exclude sections with no
-	content.
-
-2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25849
-	* elf-bfd.h (elf_backend_data): Add
-	elf_backend_strip_zero_sized_dynamic_sections.
-	(_bfd_elf_strip_zero_sized_dynamic_sections): New prototype.
-	* elf64-alpha.c (elf_backend_strip_zero_sized_dynamic_sections):
-	New macro.
-	* elflink.c (_bfd_elf_strip_zero_sized_dynamic_sections): New
-	function.
-	* elfxx-target.h (elf_backend_strip_zero_sized_dynamic_sections):
-	New macro.
-	(elfNN_bed): Add elf_backend_strip_zero_sized_dynamic_sections.
-
-2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* elf64-alpha.c (alpha_elf_reloc_entry): Replace reltext with
-	sec.
-	(elf64_alpha_check_relocs): Set sec instead of reltext.  Warn
-	DT_TEXTREL with -M.
-	(elf64_alpha_calc_dynrel_sizes): Warn DT_TEXTREL with -M.
-
-2020-04-21  Nick Clifton  <nickc@redhat.com>
-
-	* po/sr.po: Updated Serbian translation.
-
-2020-04-21  Alan Modra  <amodra@gmail.com>
-
-	* elf32-sh.c (sh_elf_relocate_section): Remove STO_SH5_ISA32
-	processing.
-
-2020-04-20  Stephen Casner  <casner@acm.org>
-
-	* pdp11.c (N_STAB): Modify value to avoid conflict with N_EXT
-	causing globals from linker script to be treated as debug symbols.
-	(translate_symbol_table): Don't sign-extend symbol values from 16
-	to 64 bits in nm output.
-
-2020-04-20  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc64_elf_size_stubs): Strip relbrlt too.
-
-2020-04-18  Alan Modra  <amodra@gmail.com>
-
-	* section.c (bfd_is_const_section): Correct test for special
-	sections.
-	* bfd-in2.h: Regenerate.
-
-2020-04-17  Alan Modra  <amodra@gmail.com>
-
-	PR 25842
-	* elf.c (_bfd_elf_get_symbol_version_string): Don't segfault on
-	NULL nodename.
-
-2020-04-16  Nick Clifton  <nickc@redhat.com>
-
-	PR 25803
-	* elfxx-mips.c (_bfd_mips_elf_adjust_dynamic_symbol): Replace an
-	abort with a more helpful error message.
-
-2020-04-16  Alan Modra  <amodra@gmail.com>
-
-	PR 25827
-	* dwarf2.c (scan_unit_for_symbols): Wrap overlong lines.  Don't
-	strdup(0).
-
-2020-04-15  Fangrui Song <maskray@google.com>
-
-	PR binutils/24613
-	* coff-rs6000.c (xcoff_ppc_relocate_section): Change RM_GENERATE_ERROR
-	to RM_DIAGNOSE plus a check of warn_unresolved_syms.
-	* coff64-rs6000.c (xcoff_ppc_relocate_section): Likewise.
-	* elf-bfd.h (_bfd_elf_large_com_section): Likewise.
-	* elf32-m32r.c (m32r_elf_relocate_section): Likewise.
-	* elf32-score.c (s3_bfd_score_elf_relocate_section): Likewise.
-	* elf32-score7.c (s7_bfd_score_elf_relocate_section): Likewise.
-	* elf32-sh.c (sh_elf_relocate_section): Likewise.
-	* elf32-spu.c (spu_elf_relocate_section): Likewise.
-	* elf64-hppa.c (elf64_hppa_relocate_section): Likewise.
-	* elflink.c (elf_link_output_extsym): Likewise.
-	* elfxx-mips.c (mips_elf_calculate_relocation): Likewise.
-
-2020-04-15  Alan Modra  <amodra@gmail.com>
-
-	PR 25823
-	* peXXigen.c (_bfd_XXi_swap_sym_in <C_SECTION>): Don't use a
-	pointer into strings that may be freed for section name, always
-	allocate a new string.
-
-2020-04-14  Juan Manuel Guerrero  <juan.guerrero@gmx.de>
-            Jan W. Jagersma  <jwjagersma@gmail.com>
-
-	* coff-go32.c (COFF_GO32, IMAGE_SCN_LNK_NRELOC_OVFL)
-	(coff_SWAP_scnhdr_in, coff_SWAP_scnhdr_out): Define.
-	(_bfd_go32_swap_scnhdr_in, _bfd_go32_swap_scnhdr_out)
-	(_bfd_go32_mkobject): New functions.
-	* coff-stgo32.c (IMAGE_SCN_LNK_NRELOC_OVFL)
-	(coff_SWAP_scnhdr_in, coff_SWAP_scnhdr_out): Define.
-	(go32exe_mkobject): Call _bfd_go32_mkobject.
-	* coffcode.h (COFF_WITH_EXTENDED_RELOC_COUNTER): Define.
-	(coff_set_alignment_hook): Define function for COFF_GO32_EXE
-	and COFF_GO32.
-	(coff_write_relocs): Enable extended reloc counter code if
-	COFF_WITH_EXTENDED_RELOC_COUNTER is defined.  Test for obj_go32.
-	(coff_write_object_contents): Likewise.  Pad section headers
-	for COFF_GO32 and COFF_GO32EXE.  Use bfd_coff_swap_scnhdr_out
-	instead of coff_swap_scnhdr_out.
-	* cofflink.c (_bfd_coff_final_link): Test also for obj_go32 to
-	enable extended reloc counter.
-	* coffswap.h: (coff_swap_scnhdr_in, coff_swap_scnhdr_out):
-	Declare with ATTRIBUTE_UNUSED.
-	* libcoff-in.h: (struct coff_tdata): New field go32.
-	(obj_go32): Define.
-	* libcoff.h: Regenerate.
-
-2020-04-14  Fangrui Song  <maskray@google.com>
-
-	PR gas/25768
-	* elf.c (assign_section_numbers): Always set .stab sh_entsize to
-	12.
-
-2020-04-14  Stephen Casner  <casner@acm.org>
-
-	PR ld/25677
-	* pdp11.c: Add implementation of --imagic option.
-	(adjust_o_magic): Fix objcopy --extract-symbol test.
-	* libaout.h (enum aout_magic): Add i_magic.
-
-2020-04-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-	    Nick Clifton  <nickc@redhat.com>
-
-	* elf32-sparc.c (sparc_final_write_processing): Fix whitespace.
-	<0>: Ignore.
-	<default>: Error rather than abort.
-
-2020-04-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25767
-	* elf.c (_bfd_elf_fixup_group_sections): Remove zero-sized
-	relocation section from section group.
-
-2020-04-02  Jan W. Jagersma  <jwjagersma@gmail.com>
-
-	* bfdio.c (bfd_bread, bfd_tell, bfd_seek, bfd_mmap): Always add
-	bfd->origin to file offset.
-	* bfdwin.c (bfd_get_file_window): Likewise.
-	* bfd.c: Clarify the use of the bfd->origin field.
-	* bfd-in2.h: Regenerate.
-	* coff-i386.c: Don't include go32exe.h. Allow overriding
-	coff_write_object_contents via COFF_WRITE_CONTENTS.
-	* coff-stgo32.c (go32exe_cleanup, go32exe_mkobject)
-	(go32exe_write_object_contents): New functions.
-	(go32exe_temp_stub, go32exe_temp_stub_size): New static globals.
-	(COFF_WRITE_CONTENTS, GO32EXE_DEFAULT_STUB_SIZE): Define.
-	(create_go32_stub): Remove check for 2k size limit.  Read stub
-	from go32exe_temp_stub if present.
-	(go32_stubbed_coff_bfd_copy_private_bfd_data): Allocate and
-	copy variable-length stub.
-	(go32_check_format): Read stub to go32exe_temp_stub, set
-	origin, return go32exe_cleanup.
-	(adjust_filehdr_in_post, adjust_filehdr_out_pre)
-	(adjust_filehdr_out_post, adjust_scnhdr_in_post)
-	(adjust_scnhdr_out_pre, adjust_scnhdr_out_post)
-	(adjust_aux_in_post, adjust_aux_out_pre, adjust_aux_out_post):
-	Remove functions and their associated #defines.
-	* coffcode.h (coff_mkobject_hook): Remove stub copying code.
-	* libcoff-in.h: (struct coff_tdata): New field stub_size.
-	Rename field go32stub to stub.
-	* libcoff.h: Regenerate.
-	* coff-stgo32.c (go32_check_format): Rename to...
-	(go32exe_check_format): ...this.
-	(go32_stubbed_coff_bfd_copy_private_bfd_data): Rename to...
-	(go32exe_copy_private_bfd_data): ...this.
-	(stub_bytes): Rename to...
-	(go32exe_default_stub): ...this.
-	(create_go32_stub): Rename to...
-	(go32exe_create_stub): ...this.
-	* coff-stgo32.c (go32exe_copy_private_bfd_data): Avoid realloc
-	when possible.
-
-2020-04-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25749
-	PR ld/25754
-	* elf32-i386.c (elf_i386_convert_load_reloc): Convert load
-	relocation to R_386_32 for relocation against non-preemptible
-	absolute symbol.
-	(elf_i386_check_relocs): Call _bfd_elf_x86_valid_reloc_p.  Don't
-	allocate dynamic relocation for non-preemptible absolute symbol.
-	(elf_i386_relocate_section): Pass sec to
-	GENERATE_DYNAMIC_RELOCATION_P.
-	* elf64-x86-64.c (R_X86_64_converted_reloc_bit): Moved.
-	(elf_x86_64_convert_load_reloc): Covert load relocation to
-	R_X86_64_32S or R_X86_64_32 for relocation against non-preemptible
-	absolute symbol.  Don't convert to R_X86_64_32S nor R_X86_64_32
-	for non-preemptible absolute symbol if they overflow.
-	(elf_x86_64_check_relocs): Call _bfd_elf_x86_valid_reloc_p.  Set
-	tls_type for GOT slot to GOT_ABS for non-preemptible absolute
-	symbol.  Don't allocate dynamic relocation for non-preemptible
-	absolute symbol.
-	(elf_x86_64_relocate_section): Don't generate relative relocation
-	for GOTPCREL relocations aganst local absolute symbol.  Pass sec
-	to GENERATE_DYNAMIC_RELOCATION_P.
-	* elfxx-x86.c (elf_x86_allocate_dynrelocs): No dynamic relocation
-	against non-preemptible absolute symbol.
-	(_bfd_elf_x86_valid_reloc_p): New function.
-	(_bfd_x86_elf_size_dynamic_sections): No dynamic relocation for
-	GOT_ABS GOT slot.
-	* elfxx-x86.h (GENERATE_DYNAMIC_RELOCATION_P): Add an SEC
-	argument.  Don't generate dynamic relocation against
-	non-preemptible absolute symbol.
-	(ABS_SYMBOL_P): New.
-	(GENERATE_RELATIVE_RELOC_P): Don't generate relative relocation
-	against non-preemptible absolute symbol.
-	(GOT_ABS): New.
-	(R_X86_64_converted_reloc_bit): New.  Moved from elf64-x86-64.c.
-	(_bfd_elf_x86_valid_reloc_p): New.
-
-2020-04-01  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/16017
-	* elf32-arm.c (elf32_arm_populate_plt_entry): Set LSB of the PLT0
-	address in the GOT if in thumb only mode.
-
-2020-04-01  Tamar Christina  <tamar.christina@arm.com>
-
-	* elf32-arm.c (elf32_thumb2_plt_entry): Fix PC-rel offset.
-
-2020-04-01  Hans-Peter Nilsson  <hp@bitrange.com>
-
-	* mmo.c (mmo_scan): Create .text section only when needed, not
-	from the start.
-
-2020-03-31  Alan Modra  <amodra@gmail.com>
-
-	* coff-alpha.c (alpha_ecoff_get_elt_at_filepos): Correct bfd_bread
-	return value check.
-
-2020-03-31  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (image_write): Check bounds for sections without
-	contents too.  Error on non-zero write to section without
-	contents.
-	(_bfd_vms_slurp_etir): Check return of image_write* functions.
-
-2020-03-31  Alan Modra  <amodra@gmail.com>
-
-	* tekhex.c (pass_over): Check is_eof before reading buffer.
-
-2020-03-30  Nick Clifton  <nickc@redhat.com>
-
-	PR binutils/pr25662
-	* libcoff-in.h (struct pe_tdata): Rename the insert_timestamp
-	field to timestamp and make it an integer.
-	* libcoff.h: Regenerate.
-	* peXXigen.c (_bfd_XXi_only_swap_filehdr_out): Test the timestamp
-	field in the pe_data structure rather than the insert_timestamp
-	field.
-
-2020-03-30  Alan Modra  <amodra@gmail.com>
-
-	PR 25745
-	* elf64-ppc.c (ppc64_elf_build_stubs): Use asprintf to form
-	statistics message.
-
-2020-03-26  Nick Clifton  <nickc@redhat.com>
-
-	* cofflink.c (bfd_coff_get_internal_extra_pe_aouthdr): Delete.
-	* libbfd-in.h (bfd_coff_get_internal_extra_pe_aouthdr): Remove
-	prototype.
-	* libbfd.h: Regenerate.
-
-2020-03-26  Alan Modra  <amodra@gmail.com>
-
-	* i386msdos.c (msdos_object_p): Catch -1 return from bfd_bread.
-
-2020-03-26  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (dst_define_location): Limit size of dst_ptr_offsets
-	array.
-	(_bfd_vms_slurp_object_records): Rename "err" to "ok".
-
-2020-03-25  Nick Clifton  <nickc@redhat.com>
-
-	* cofflink.c (bfd_coff_get_internal_extra_pe_aouthdr): New
-	function.
-	* libbfd-in.h (bfd_coff_get_internal_extra_pe_aouthdr): Prototype.
-	* libbfd.h: Regenerate.
-
-2020-03-25  Shahab Vahedi  <shahab@synopsys.com>
-
-	* elf32-arc.c (PRINT_DEBUG_RELOC_INFO_BEFORE): Use the
-	correct field name in the output string.
-
-2020-03-25  Alan Modra  <amodra@gmail.com>
 
-	PR 25662
-	* elf.c (assign_file_positions_for_load_sections): Adjust offset
-	for SHT_NOBITS section if first in segment.
+2021-01-07  Samuel Thibault  <samuel.thibault@gnu.org>
 
-2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25708
-	* elf-bfd.h (_bfd_elf_get_symbol_version_name): Renamed to ...
-	(_bfd_elf_get_symbol_version_string): This.
-	* elf.c (_bfd_elf_get_symbol_version_name): Renamed to ...
-	(_bfd_elf_get_symbol_version_string): This.
-	(bfd_elf_print_symbol): Pass TRUE to
-	_bfd_elf_get_symbol_version_string.
-	* libbfd-in.h (_bfd_nosymbols_get_symbol_version_string): Add a
-	bfd_boolean argument.
-	* syms.c (_bfd_nosymbols_get_symbol_version_string): Likewise.
-	* targets.c  (_bfd_get_symbol_version_string): Likewise.
-	(bfd_get_symbol_version_string): Likewise.
-	* bfd-in2.h: Regenerated.
-
-2020-03-24  Nick Clifton  <nickc@redhat.com>
-	    Jaydeep Chauhan  <jaydeepchauhan1494@gmail.com>
-
-	PR 25713
-	* bfdio.c (_bfd_real_fopen): Add code to handle long filenames on
-	Win32 systems.
-
-2020-03-24  Nick Clifton  <nickc@redhat.com>
-
-	PR 25681
-	* elf.c (_bfd_elf_map_sections_to_segments): When looking for a
-	segment to use for PT_GNU_RELRO, ignore empty sections in a
-	segment's current list.
-
-2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25717
-	* elf-bfd.h (elf_obj_tdata): Change num_group to unsigned int.
-
-2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25708
-	* elf-bfd.h (_bfd_elf_get_symbol_version_name): New.
-	* elf.c (_bfd_elf_get_symbol_version_name): New function.  Based
-	on the previous _bfd_elf_get_symbol_version_string.
-	(_bfd_elf_get_symbol_version_string): Use it.
-
-2020-03-24  Alan Modra  <amodra@gmail.com>
-
-	* archive.c (_bfd_generic_read_ar_hdr_mag): Sanity check extended
-	name size.  Use bfd_malloc rather than bfd_zmalloc, clearing just
-	struct areltdata.
-
-2020-03-23  Sebastian Huber  <sebastian.huber@embedded-brains.de>
-
-	* elflink.c (_bfd_elf_tls_setup): Mention .tdata in comment.
-
-2020-03-23  Alan Modra  <amodra@gmail.com>
-
-	* ecoff.c (_bfd_ecoff_slurp_armap): Sanity check parsed_size and
-	symbol count.  Allocate an extra byte to ensure name strings
-	are terminated.  Sanity check name offsets.  Release memory on
-	error return.
-
-2020-03-23  Alan Modra  <amodra@gmail.com>
-
-	* i386msdos.c (msdos_object_p): Don't access e_lfanew when that
-	field hasn't been read.  Remove unnecessary casts.
-
-2020-03-22  Alan Modra  <amodra@gmail.com>
-
-	* coff64-rs6000.c (xcoff64_slurp_armap): Ensure size is large
-	enough to read number of symbols.
-
-2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* configure.ac (HAVE_EXECUTABLE_SUFFIX): Removed.
-	(EXECUTABLE_SUFFIX): Likewise.
-	* config.in: Regenerated.
-	* configure: Likewise.
-	* plugin.c (bfd_plugin_close_and_cleanup): Defined as
-	_bfd_generic_close_and_cleanup.
-	(plugin_list_entry): Remove resolution_file, resolution_option,
-	real_bfd, real_nsyms, real_syms, lto_nsyms, lto_syms, gcc,
-	lto_wrapper, gcc_env and initialized,
-	(need_lto_wrapper_p): Removed.
-	(get_lto_wrapper): Likewise.
-	(setup_lto_wrapper_env): Likewise.
-	(register_all_symbols_read): Likewise.
-	(egister_cleanup): Likewise.
-	(get_symbols): Likewise.
-	(add_input_file): Likewise.
-	(bfd_plugin_set_program_name): Remove need_lto_wrapper.
-	(add_symbols): Updated.
-	(try_claim): Likewise.
-	(try_load_plugin): Likewise.
-	(bfd_plugin_canonicalize_symtab): Likewise.
-	* plugin.h (bfd_plugin_set_program_name): Remove int argument.
-	(plugin_data_struct): Remove real_bfd, real_nsyms and real_syms.
-
-2020-03-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25640
-	* plugin.c (plugin_list_entry): Add has_symbol_type.
-	(add_symbols_v2): New function.
-	(bfd_plugin_open_input): Don't invoke LTO wrapper if LTO plugin
-	provides symbol type.
-	(try_load_plugin): Add LDPT_ADD_SYMBOLS_V2.
-	(bfd_plugin_canonicalize_symtab): Use LTO plugin symbol type if
-	available.
-
-2020-03-20  Alan Modra  <amodra@gmail.com>
-
-	* coff-rs6000.c (_bfd_xcoff_slurp_armap): Ensure size is large
-	enough to read number of symbols.
-
-2020-03-20  Alan Modra  <amodra@gmail.com>
-
-	* elf.c (_bfd_elf_setup_sections): Don't test known non-NULL
-	backend functions for NULL before calling.
-	(copy_special_section_fields, _bfd_elf_copy_private_bfd_data),
-	(bfd_section_from_shdr, assign_section_numbers): Likewise.
-	* elfcode.h (elf_write_relocs, elf_slurp_reloc_table): Likewise.
-	* elfnn-ia64.c (ignore_errors): New function.
-	(elf_backend_link_order_error_handler): Redefine as ignore_errors.
-
-2020-03-19  Nick Clifton  <nickc@redhat.com>
-
-	PR 25676
-	* dwarf2.c (struct varinfo): Add unit_offset field to record the
-	location of the varinfo in the unit's debug info data.  Change the
-	type of the stack field to a boolean.
-	(lookup_var_by_offset): New function.  Returns the varinfo
-	structure for the variable described at the given offset in the
-	unit's debug info.
-	(scan_unit_for_symbols): Add support for variables which have the
-	DW_AT_specification attribute.
-
-2020-03-19  Nick Clifton  <nickc@redhat.com>
-
-	PR 25699
-	* elf.c (bfd_elf_set_group_contents): Replace assertion with an
-	error return.
-
-2020-03-19  Sebastian Huber  <sebastian.huber@embedded-brains.de>
+	* configure: Regenerate.
 
-	* elfxx-riscv.c (riscv_parse_subset): Don't use C99.
-
-2020-03-18  Nick Clifton  <nickc@redhat.com>
-
-	PR 25673
-	* elf.c (_bfd_elf_write_secondary_reloc_section): Fix illegal
-	memory access when processing a corrupt secondary reloc section.
-
-2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
-
-	* elf32-arm.c (arm_build_one_stub): Emit a fatal error message
-	instead of calling abort.
-	* elf32-csky.c (csky_build_one_stub): Likewise.
-	* elf32-hppa.c (hppa_build_one_stub): Likewise.
-	* elf32-m68hc11.c (m68hc11_elf_build_one_stub): Likewise.
-	* elf32-m68hc12.c (m68hc12_elf_build_one_stub): Likewise.
-	* elf32-metag.c (metag_build_one_stub): Likewise.
-	* elf32-nios2.c (nios2_build_one_stub): Likewise.
-	* elf64-ppc.c (ppc_build_one_stub): Likewise.
-	(ppc_size_one_stub): Likewise.
-	* elfnn-aarch64.c (aarch64_build_one_stub): Likewise.
-
-2020-03-17  Nick Clifton  <nickc@redhat.com>
-
-	PR 25688
-	* elf.c (_bfd_elf_copy_special_section_fields): Replace assertions
-	with error messages.
-
-2020-03-17  Nick Clifton  <nickc@redhat.com>
-
-	PR 25687
-	* elf.c (_bfd_elf_slurp_secondary_reloc_section): Remove redundant
-	free.  Add free on another failure path.
-
-2020-03-16  Alan Modra  <amodra@gmail.com>
-
-	PR 25675
-	* elf.c (elf_sort_segments): Don't call bfd_octets_per_byte unless
-	we have a non-zero section count.  Do lma comparison in octets.
-
-2020-03-16  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (dst_restore_location): Validate index into
-	dst_ptr_offsets array before accessing.  Return status.
-	(dst_retrieve_location): Similarly, making "loc" parameter a
-	pointer to return value.
-	(_bfd_vms_slurp_etir): Update calls to above functions.
-
-2020-03-14  Kamil Rytarowski  <n54@gmx.com>
-
-	* configure.ac: Include netbsd-core.lo for all NetBSD arm and mips
-	targets.
-	* configure: Regenerated.
-
-2020-03-14  Alan Modra  <amodra@gmail.com>
-
-	* section.c (BFD_FAKE_SECTIONS): Formatting.
-	* bfd-in2.h: Regenerate.
-
-2020-03-13  Kamil Rytarowski  <n54@gmx.com>
-
-	* elf.c (elfcore_grok_netbsd_note): Add support for
-	NT_NETBSDCORE_LWPSTATUS notes.
-
-2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>
-
-	* bfd-in2.h: Regenerate.
-	* section.c (asection): Add already_assigned field.
-	(BFD_FAKE_SECTION): Add default initializer for it.
-	* ecoff.c (bfd_debug_section): Initialize already_assigned field.
-	* elf32-arm.c (arm_build_one_stub): Add support for
-	non_contiguous_regions.
-	* elf32-csky.c (csky_build_one_stub): Likewise.
-	* elf32-hppa.c (hppa_build_one_stub): Likewise.
-	* elf32-m68hc11.c (m68hc11_elf_build_one_stub): Likewise.
-	* elf32-m68hc12.c (m68hc12_elf_build_one_stub): Likewise.
-	* elf32-metag.c (metag_build_one_stub): Likewise.
-	* elf32-nios2.c (nios2_build_one_stub): Likewise.
-	* elf64-ppc.c (ppc_build_one_stub): Likewise.
-	(ppc_size_one_stub): Likewise.
-	* elfnn-aarch64.c (aarch64_build_one_stub): Likewise.
-	* elflink.c (elf_link_input_bfd): Likewise.
-
-2020-03-13  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24920
-	* elf-linker-x86.h (elf_linker_x86_params): Add
-	static_before_all_inputs and has_dynamic_linker.
-	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Report
-	dynamic input objects if -static is passed at command-line
-	before all input files without --dynamic-linker unless
-	--no-dynamic-linker is used.
-
-2020-03-13  Kamil Rytarowski  <n54@gmx.com>
-
-	* elf.c (elfcore_grok_netbsd_note): Add support for aarch64.
-
-2020-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* bfd.c (bfd_record_phdr): New local "opb".  Fix assignment of
-	"p_paddr" from "at".
-	* elfcode.h (bfd_from_remote_memory): Add units to several
-	parameters.  New local "opb".  Fix usage of p_align.  Fix
-	calculation of "localbase" from "ehdr_vma" and "p_vaddr".  Fix
-	call of target_read_memory.
-	* elflink.c (elf_fixup_link_order): Fix scope of "s" local.  Fix
-	calculation of "offset" and "output_offset".
-	(bfd_elf_final_link): New local "opb".  Fix calculation of "size"
-	from "offset" and fix calculation of "end" from "vma+size".  Fix
-	comparison between "sh_addr" and "vma"/"output_offset".
-	(bfd_elf_discard_info): Fix calculation of "eh_alignment".
-	* elf-bfd.h (struct elf_link_hash_table): Add unit to tls_size
-	member.
-	* elf.c (_bfd_elf_map_sections_to_segments): Add unit (bytes/
-	octets) to "wrap_to2 and "phdr_size" locals.  Fix calculation of
-	"wrap_to" value.  Add unit (bytes) to phdr_lma variable.  Fix
-	assignment of p_paddr from phdr_lma.  Fix comparison between
-	"lma+size" and "next->lma".
-	(elf_sort_segments): Fix assignment from p_paddr to lma.
-	(assign_file_positions_for_load_sections): Add unit (bytes) to
-	local "align".  Fix calculation of local "off_adjust".  Fix
-	calculation of local "filehdr_vaddr".
-	(assign_file_positions_for_non_load_sections): New local "opb".
-	Fix calculation of "end" from "p_size". Fix comparison between
-	"vma+SECTION_SIZE" and "start".  Fix calculation of "p_memsz"
-	from "end" and "p_vaddr".
-	(rewrite_elf_program_header): Fix comparison between p_vaddr and
-	vma.  Fix assignment to p_paddr from lma.  Fix comparison between
-	p_paddr and lma.  Fix assignment to p_paddr from lma.
-	* merge.c (sec_merge_emit): New local "opb". Convert
-	"alignment_power" to octets.
-	(_bfd_add_merge_section): New locals "alignment_power" and
-	"opb".  Fix comparison between "alignment_power" and
-	"sizeof(align)".
-	(_bfd_merge_sections): New local "opb".  Divide size by opb
-	before checking align mask.
-
-2020-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* elf.c (_bfd_elf_make_section_from_shdr): Introduce new temp
-	opb.  Divide Elf_Internal_Shdr::sh_addr by opb when setting
-	section LMA/VMA.
-	(_bfd_elf_make_section_from_phdr): Similarly.
-	(elf_fake_sections): Fix calculation of
-	Elf_Internal_shdr::sh_addr from section VMA.
-	(_bfd_elf_map_sections_to_segments): Fix mixup between octets
-	and bytes.
-	(assign_file_positions_for_load_sections): Fix calculations of
-	Elf_Internal_shdr::p_vaddr and p_paddr from section LMA/VMA.  Fix
-	comparison between program header address and section LMA.
-	(assign_file_positions_for_non_load_sections): Likewise.
-	(rewrite_elf_program_header): Likewise.  Introduce new temp opb.
-	(IS_CONTAINED_BY_VMA): Add parameter opb.
-	(IS_CONTAINED_BY_LMA,IS_SECTION_IN_INPUT_SEGMENT,
-	INCLUDE_SECTION_IN_SEGMENT): Likewise.
-	(copy_elf_program_header): Update call to ELF_SECTION_IN_SEGMENT.
-	Fix calculations of p_addr_valid and p_vaddr_offset.
-	* elflink.c (elf_link_add_object_symbols): Multiply section VMA
-	with octets per byte when comparing against p_vaddr.
-
-2020-03-11  Alan Modra  <amodra@gmail.com>
-
-	* som.c (setup_sections): Sanity check subspace.name.
-
-2020-03-11  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc64_elf_inline_plt): Do increment rel in for loop.
-
-2020-03-10  Alan Modra  <amodra@gmail.com>
-
-	PR 25648
-	* ihex.c (ihex_write_object_contents): Don't assume ordering of
-	addresses here.
-
-2020-03-09  Alan Modra  <amodra@gmail.com>
-
-	* wasm-module.c (wasm_scan): Sanity check file name length
-	before allocating memory.  Move common section setup code.  Do
-	without bfd_tell to calculate section size.
-
-2020-03-06  Nick Clifton  <nickc@redhat.com>
-
-	* elf.c (_bfd_elf_set_section_contents): Replace call to abort
-	with error messages and failure return values.
-
-2020-03-05  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* elf32-xtensa.c (shrink_dynamic_reloc_sections): Shrink dynamic
-	relocation sections for any removed reference to a dynamic symbol.
-
-2020-03-05  Nick Clifton  <nickc@redhat.com>
-
-	* elf-bfd.h (struct elf_backend_data): Add new fields:
-	init_secondary_reloc_section, slurp_secondary_reloc_section,
-	write_secondary_reloc_section.
-	(_bfd_elf_init_secondary_reloc_section): Prototype.
-	(_bfd_elf_slurp_secondary_reloc_section): Prototype.
-	(_bfd_elf_write_secondary_reloc_section): Prototype.
-	* elf.c ( bfd_section_from_shdr): Invoke the new
-	init_secondary_reloc_section backend function, if defined, when a
-	second reloc section is encountered.
-	(swap_out_syms): Invoke the new symbol_section_index function, if
-	defined, when computing the section index of an OS/PROC specific
-	symbol.
-	(_bfd_elf_init_secondary_reloc_section): New function.
-	(_bfd_elf_slurp_secondary_reloc_section): New function.
-	(_bfd_elf_write_secondary_reloc_section): New function.
-	(_bfd_elf_copy_special_section_fields): New function.
-	* elfcode.h (elf_write_relocs): Invoke the new
-	write_secondary_relocs function, if defined, in order to emit
-	secondary relocs.
-	(elf_slurp_reloc_table): Invoke the new slurp_secondary_relocs
-	function, if defined, in order to read in secondary relocs.
-	* elfxx-target.h (elf_backend_copy_special_section_fields):
-	Provide a non-NULL default definition.
-	(elf_backend_init_secondary_reloc_section): Likewise.
-	(elf_backend_slurp_secondary_reloc_section): Likewise.
-	(elf_backend_write_secondary_reloc_section): Likewise.
-	(struct elf_backend_data elfNN_bed): Add initialisers for the new
-	fields.
-        * configure.ac (score_elf32_[bl]e_vec): Add elf64.lo
-        * configure: Regenerate.
-
-2020-03-05  Alan Modra  <amodra@gmail.com>
-
-	* archive64.c (_bfd_archive_64_bit_slurp_armap): Check parsed_size
-	against file size before allocating memory.  Use bfd_alloc rather
-	than bfd_zalloc for carsym/strings memory.
-
-2020-03-04  Alan Modra  <amodra@gmail.com>
-
-	* elf.c (elf_fake_sections): Ensure sh_addralign is such that
-	sh_addr mod sh_addalign is zero.
-
-2020-03-04  Alan Modra  <amodra@gmail.com>
-
-	* format.c (bfd_check_format_matches): Call cleanup on error exit.
-
-2020-03-03  Alan Modra  <amodra@gmail.com>
-
-	* format.c (struct bfd_preserve): Add cleanup field.
-	(bfd_preserve_save): Add cleanup param and save.
-	(bfd_preserve_restore): Return cleanup.
-	(bfd_preserve_finish): Call the cleanup for the discarded match.
-	(bfd_check_format_matches): Pass cleanup to bfd_preserve_save,
-	and clear when preserving a match.  Restore cleanup too when
-	restoring that match.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* cisco-core.c (cisco_core_file_p): Return bfd_cleanup.
-	* hpux-core.c (hpux_core_core_file_p): Update prototype.
-	* sco5-core.c (sco5_core_file_p): Return bfd_cleanup.
-	(core_sco5_vec): Correct initialisers.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* aix386-core.c (aix386_core_file_p): Return bfd_cleanup.
-	* aix5ppc-core.c (xcoff64_core_p): Likewise.
-	* cisco-core.c (cisco_core_file_validate): Likewise.
-	* hppabsd-core.c (hppabsd_core_core_file_p): Likewise.
-	* hpux-core.c (hpux_core_core_file_p): Likewise.
-	* irix-core.c (irix_core_core_file_p): Likewise.
-	* lynx-core.c (lynx_core_file_p): Likewise.
-	* netbsd-core.c (netbsd_core_file_p): Likewise.
-	* osf-core.c (osf_core_core_file_p): Likewise.
-	* ptrace-core.c (ptrace_unix_core_file_p): Likewise.
-	* sco5-core.c (sco5_core_file_p): Likewise.
-
-2020-03-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* trad-core.c (trad_unix_core_file_p): Return bfd_cleanup.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* targets.c (bfd_cleanup): New typedef.
-	(struct bfd <_bfd_check_format>): Return a bfd_cleanup.
-	* libbfd-in.h (_bfd_no_cleanup): Define.
-	* format.c (bfd_reinit): Add cleanup parameter, call it.
-	(bfd_check_format_matches): Set cleanup from _bfd_check_format
-	call and pass to bfd_reinit.  Delete temp, use abfd->xvec instead.
-	* aout-target.h (callback, object_p): Return bfd_cleanup.
-	* aout-tic30.c (tic30_aout_callback, tic30_aout_object_p): Likewise.
-	* archive.c (bfd_generic_archive_p): Likewise.
-	* binary.c (binary_object_p): Likewise.
-	* coff-alpha.c (alpha_ecoff_object_p): Likewise.
-	* coff-ia64.c (ia64coff_object_p): Likewise.
-	* coff-rs6000.c (_bfd_xcoff_archive_p, rs6000coff_core_p): Likewise.
-	* coff-sh.c (coff_small_object_p): Likewise.
-	* coff-stgo32.c (go32_check_format): Likewise.
-	* coff64-rs6000.c (xcoff64_archive_p, rs6000coff_core_p),
-	(xcoff64_core_p): Likewise.
-	* coffgen.c (coff_real_object_p, coff_object_p): Likewise.
-	* elf-bfd.h (bfd_elf32_object_p, bfd_elf32_core_file_p),
-	(bfd_elf64_object_p, bfd_elf64_core_file_p): Likewise.
-	* elfcode.h (elf_object_p): Likewise.
-	* elfcore.h (elf_core_file_p): Likewise.
-	* i386msdos.c (msdos_object_p): Likewise.
-	* ihex.c (ihex_object_p): Likewise.
-	* libaout.h (some_aout_object_p): Likewise.
-	* libbfd-in.h (bfd_generic_archive_p, _bfd_dummy_target),
-	(_bfd_vms_lib_alpha_archive_p, _bfd_vms_lib_ia64_archive_p): Likewise.
-	* libbfd.c (_bfd_dummy_target): Likewise.
-	* libcoff-in.h (coff_object_p): Likewise.
-	* mach-o-aarch64.c (bfd_mach_o_arm64_object_p),
-	(bfd_mach_o_arm64_core_p): Likewise.
-	* mach-o-arm.c (bfd_mach_o_arm_object_p),
-	(bfd_mach_o_arm_core_p): Likewise.
-	* mach-o-i386.c (bfd_mach_o_i386_object_p),
-	(bfd_mach_o_i386_core_p): Likewise.
-	* mach-o-x86-64.c (bfd_mach_o_x86_64_object_p),
-	(bfd_mach_o_x86_64_core_p): Likewise.
-	* mach-o.c (bfd_mach_o_header_p, bfd_mach_o_gen_object_p),
-	(bfd_mach_o_gen_core_p, bfd_mach_o_fat_archive_p): Likewise.
-	* mach-o.h (bfd_mach_o_object_p, bfd_mach_o_core_p),
-	(bfd_mach_o_fat_archive_p, bfd_mach_o_header_p): Likewise.
-	* mmo.c (mmo_object_p): Likewise.
-	* pef.c (bfd_pef_object_p, bfd_pef_xlib_object_p): Likewise.
-	* peicode.h (coff_real_object_p, pe_ILF_object_p),
-	(pe_bfd_object_p): Likewise.
-	* plugin.c (ld_plugin_object_p, bfd_plugin_object_p): Likewise.
-	* ppcboot.c (ppcboot_object_p): Likewise.
-	* rs6000-core.c (rs6000coff_core_p): Likewise.
-	* som.c (som_object_setup, som_object_p): Likewise.
-	* srec.c (srec_object_p, symbolsrec_object_p): Likewise.
-	* tekhex.c (tekhex_object_p): Likewise.
-	* vms-alpha.c (alpha_vms_object_p): Likewise.
-	* vms-lib.c (_bfd_vms_lib_archive_p, _bfd_vms_lib_alpha_archive_p),
-	(_bfd_vms_lib_ia64_archive_p, _bfd_vms_lib_txt_archive_p): Likewise.
-	* wasm-module.c (wasm_object_p): Likewise.
-	* xsym.c (bfd_sym_object_p): Likewise.
-	* xsym.h (bfd_sym_object_p): Likewise.
-	* aoutx.h (some_aout_object_p): Likewise, and callback parameter
-	return type.
-	* pdp11.c (some_aout_object_p): Likewise.
-	* plugin.c (register_ld_plugin_object_p): Update object_p
-	parameter type.
-	* plugin.h (register_ld_plugin_object_p): Likewise.
-	* bfd-in2.h: Regenerate.
-	* libbfd.h: Regenerate.
-	* libcoff.h: Regenerate.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* coff-alpha.c (alpha_ecoff_le_vec): Add SEC_SMALL_DATA to
-	applicable section flags.
-	* coff-mips.c (mips_ecoff_le_vec, mips_ecoff_be_vec): Likewise.
+2021-01-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR 27109
+	* aix386-core.c (core_aix386_vec): Initialize
+	keep_unused_section_symbol to TARGET_KEEP_UNUSED_SECTION_SYMBOLS.
+	* aout-target.h (MY (vec)): Likewise.
+	* binary.c (binary_vec): Likewise.
+	* cisco-core.c (core_cisco_be_vec): Likewise.
+	(core_cisco_le_vec): Likewise.
+	* coff-alpha.c (alpha_ecoff_le_vec): Likewise.
+	* coff-i386.c (TARGET_SYM): Likewise.
+	(TARGET_SYM_BIG): Likewise.
+	* coff-ia64.c (TARGET_SYM): Likewise.
+	* coff-mips.c (mips_ecoff_le_vec): Likewise.
+	(mips_ecoff_be_vec): Likewise.
 	(mips_ecoff_bele_vec): Likewise.
-	* coffcode.h (sec_to_styp_flags): Set SEC_SMALL_DATA for .sdata
-	and .sbss sections.
-	* ecoff.c (_bfd_ecoff_new_section_hook): Likewise.
-	(_bfd_ecoff_styp_to_sec_flags): Likewise.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* elf32-m32r.c (m32r_elf_section_flags): New function.
-	(elf_backend_section_flags): Define.
-	* elf32-nds32.c (nds32_elf_section_flags): New function.
-	(elf_backend_section_flags): Define.
-	* elf32-ppc.c (ppc_elf_section_from_shdr): Set SEC_SMALL_DATA for
-	.sbss and .sdata sections.
-	* elf32-v850.c (v850_elf_section_from_shdr): Set SEC_SMALL_DATA
-	for SHF_V850_GPREL sections.
-	* elf64-alpha.c (elf64_alpha_section_from_shdr): Delete outdated
-	FIXME.
-	* elf64-hppa.c (elf64_hppa_section_from_shdr): Set SEC_SMALL_DATA
-	for SHF_PARISC_SHORT sections.
-	* elf64-ppc.c (ppc64_elf_section_flags): New function.
-	(elf_backend_section_flags): Define.
-	* elfxx-mips.c (_bfd_mips_elf_section_from_shdr): Set SEC_SMALL_DATA
-	for SHF_MIPS_GPREL sections.  Delete FIXME.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* elf-bfd.h (elf_backend_section_flags): Remove flagword* param.
-	* elf.c (_bfd_elf_make_section_from_shdr): Set section flags before
-	calling elf_backend_section_flags with adjusted params.  Use
-	newsect->flags past that point.
-	(_bfd_elf_new_section_hook): Always set sh_type and sh_flags for
-	special sections.
-	(_bfd_elf_init_private_section_data): Allow normal sh_type sections
-	to have their type overridden, and all sh_flags but processor and
-	os specific.
-	* elf32-arm.c (elf32_arm_section_flags): Adjust for changed params.
-	* elf32-mep.c (mep_elf_section_flags): Likewise.
-	* elf32-nios2.c (nios2_elf32_section_flags): Likewise.
-	* elf64-alpha.c (elf64_alpha_section_flags): Likewise.
-	* elf64-ia64-vms.c (elf64_ia64_section_flags): Likewise.
-	* elfnn-ia64.c (elfNN_ia64_section_flags): Likewise.
-	* elfnn-aarch64.c (elfNN_aarch64_size_stubs): Exclude the linker
-	stub BFD and non-aarch64 input files when scanning for stubs.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* coff-alpha.c (alpha_ecoff_get_elt_at_filepos): Provide an upper
-	limit to decompressed element size.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* vms-lib.c (vms_traverse_index): Add recur_count param and
-	update calls.  Fail on excessive recursion.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (vms_get_remaining_object_record): Use
-	bfd_realloc_or_free rather than bfd_realloc.
-	(add_symbol_entry, vector_grow1, alpha_vms_slurp_relocs): Likewise.
-	(dst_define_location, parse_module): Likewise, and check realloc
-	return status before using memory.  Return status from function
-	adjusting all callers.
-
-2020-02-28  Alan Modra  <amodra@gmail.com>
-
-	* vms-lib.c (_bfd_vms_lib_archive_p): Free memory on error paths.
-
-2020-02-28  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (alpha_vms_object_p): Use _bfd_malloc_and_read.
-	Remove duplicate undersize check.
-
-2020-02-27  Alan Modra  <amodra@gmail.com>
-
-	PR 24511
-	* mmo.c (mmo_scan): Set SEC_DATA for .data.
-
-2020-02-27  Alan Modra  <amodra@gmail.com>
-
-	PR 24511
-	* syms.c (stt): Trim off all but 'e', 'i' and 'p' entries.
-	(coff_section_type): Adjust comment.
-	(decode_section_type): Likewise.  Call coff_section_type before
-	decode_section_type.
-	(bfd_decode_symclass): Use 'c' for common sections other than
-	the standard one.
-
-2020-02-27  Alan Modra  <amodra@gmail.com>
-
-	* coff-rs6000.c (_bfd_xcoff_read_ar_hdr): Put all data in one
-	malloc'd block.
-
-2020-02-27  Alan Modra  <amodra@gmail.com>
-
-	* bfd.c (bfd_stat_arch_elt): Use vector of containing archive,
-	if file is an archive element.
-	* bfd-in2.h: Regenerate.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* archive.c (do_slurp_bsd_armap): Increase minimum parsed_size, and
-	bfd_set_error on failing test.  Don't bother changing bfd_error on
-	file read error.  Check symdef_count is multiple of BSD_SYMDEF_SIZE.
-	Check sym name is within string buffer.  Use size_t for some vars.
-	(do_slurp_coff_armap): Use size_t for some variables, fix size of
-	int_buf.  Don't change bfd_error on file read error.  Use
-	_bfd_mul_overflow when calculating carsym buffer size.  Reorder
-	calculations to catch overflows before they occur.  malloc and
-	free raw armap rather than using bfd_alloc.  Read raw armap before
-	allocating carsym+strings buffer.
-	(_bfd_slurp_extended_name_table): Localize variables.  Check
-	name size against file size.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* vms-lib.c (vms_lib_read_index): Release correct buffer.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* elf32-rx.c (rx_elf_relocate_section): Use bfd_malloc rather than
-	malloc.  Check for NULL return from bfd_malloc.
-	(rx_table_find, rx_table_map): Likewise.
-	(rx_set_section_contents): Check bfd_alloc return.
-	(rx_dump_symtab): Don't alloc internal_syms or external_syms.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* aoutx.h: Indent labels correctly.  Format error strings.
-	* archive.c: Likewise.
-	* archive64.c: Likewise.
-	* coff-arm.c: Likewise.
-	* coff-rs6000.c: Likewise.
-	* coff-stgo32.c: Likewise.
-	* cpu-arm.c: Likewise.
-	* dwarf2.c: Likewise.
-	* elf-ifunc.c: Likewise.
-	* elf-properties.c: Likewise.
-	* elf-s390-common.c: Likewise.
-	* elf-strtab.c: Likewise.
-	* elf.c: Likewise.
-	* elf32-arm.c: Likewise.
-	* elf32-bfin.c: Likewise.
-	* elf32-cr16.c: Likewise.
-	* elf32-csky.c: Likewise.
-	* elf32-i386.c: Likewise.
-	* elf32-m68k.c: Likewise.
-	* elf32-msp430.c: Likewise.
-	* elf32-nds32.c: Likewise.
-	* elf32-nios2.c: Likewise.
-	* elf32-pru.c: Likewise.
-	* elf32-xtensa.c: Likewise.
-	* elf64-ia64-vms.c: Likewise.
-	* elf64-x86-64.c: Likewise.
-	* elfcode.h: Likewise.
-	* elfcore.h: Likewise.
-	* elflink.c: Likewise.
-	* elfnn-aarch64.c: Likewise.
-	* elfnn-ia64.c: Likewise.
-	* elfnn-riscv.c: Likewise.
-	* elfxx-mips.c: Likewise.
-	* elfxx-sparc.c: Likewise.
-	* elfxx-x86.c: Likewise.
-	* i386lynx.c: Likewise.
-	* merge.c: Likewise.
-	* pdp11.c: Likewise.
-	* plugin.c: Likewise.
-	* reloc.c: Likewise.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	PR 25593
-	* elf-bfd.h (struct elf_link_hash_table): Rename "loaded" to
-	"dyn_loaded".
-	(bfd_elf_add_dt_needed_tag): Declare.
-	* elf-strtab.c (_bfd_elf_strtab_restore): Handle NULL buf.
-	* elflink.c (bfd_elf_add_dt_needed_tag): Make global and rename
-	from elf_add_dt_needed_tag.  Remove soname and doit param.
-	(elf_link_add_object_symbols): Don't use elf_add_dt_needed_tag
-	to see whether as-needed lib is already loaded, use dyn_loaded
-	list instead.  When saving and restoring around as-needed lib
-	handle possibility that dynstr has not been initialised.  Don't
-	add DT_NEEDED tags here.  Limit dyn_loaded list to dynamic libs.
-	Mark libs loaded via DT_NEEDED entries of other libs with
-	DYN_NO_NEEDED if they should not be mentioned in DT_NEEDED of
-	the output.
-	(elf_link_check_versioned_symbol): Remove now unneccesary
-	DYNAMIC check when traversing dyn_loaded list.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* bfdio.c (bfd_get_file_size): Ignore bogus archive element sizes.
-
-2020-02-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25584
-	* plugin.c (need_lto_wrapper_p): New.
-	(bfd_plugin_set_program_name): Add an int argument to set
-	need_lto_wrapper_p.
-	(get_lto_wrapper): Return FALSE if need_lto_wrapper_p isn't
-	set.
-	* plugin.h (bfd_plugin_set_program_name): Add an int argument.
-
-2020-02-24  Alan Modra  <amodra@gmail.com>
-
-	* vms-lib.c (_bfd_vms_lib_archive_p): Correct overflow checks.
-
-2020-02-24  Alan Modra  <amodra@gmail.com>
-
-	* vms-lib.c (struct carsym_mem): Add limit.
-	(vms_add_index): Heed limit.
-	(vms_traverse_index): Catch buffer overflows.  Remove outdated fixme.
-	(vms_lib_read_index): Set up limit.  Catch 32-bit overflow.
-	Always return actual number read.
-	(_bfd_vms_lib_archive_p): Catch buffer overflows.  Replace
-	assertion with error exit.
-
-2020-02-22  Alan Modra  <amodra@gmail.com>
-
-	PR 25585
-	* elf.c (assign_file_positions_for_load_sections): Continue linking
-	on "PHDR segment not covered by LOAD segment" errors.
-
-2020-02-21  Alan Modra  <amodra@gmail.com>
-
-	* mach-o.c (bfd_mach_o_canonicalize_relocs): Fix ineffective
-	overflow check.
-	(bfd_mach_o_canonicalize_reloc): Likewise.
-	(bfd_mach_o_canonicalize_dynamic_reloc): Likewise.  Sanity check
-	counts and offsets against file size.
-	(bfd_mach_o_build_dysymtab): Fix ineffective overflow check.
-	(bfd_mach_o_mangle_sections): Remove unnecessary overflow check.
-	(bfd_mach_o_read_symtab_symbols): Sanity check count and offset
-	against file size.  Delete symbol table error message.
-	(bfd_mach_o_read_dysymtab): Sanity check counts and offsets
-	against file size.
-	(bfd_mach_o_read_symtab): Likewise.
-	(bfd_mach_o_read_command): Pass file size.
-	(bfd_mach_o_scan): Sanity check command count against file size.
-
-2020-02-21  Alan Modra  <amodra@gmail.com>
-
-	PR 25569
-	* aoutx.h (adjust_o_magic, adjust_z_magic, adjust_n_magic): Use
-	"text", "data" and "bss" section pointer vars.  Don't update
-	section size, just exec header sizes.
-	(adjust_sizes_and_vmas): Don't update text section size.  Set
-	initial exec header a_text.  Print exec headers sizes.
-	* pdp11.c (adjust_o_magic, adjust_z_magic, adjust_n_magic),
-	(adjust_sizes_and_vmas): Similarly.  Formatting.
-	(final_link): Correct final file extension.
-
-2020-02-20  Nick Clifton  <nickc@redhat.com>
-
-	* elf-bfd.h (struct elf_backend_data): Add symbol_section_index
-	callback.
-	* elfxx-target.h (elf_backend_symbol_section_index): Provide
-	default definition.
-	(elfNN_bed): Initialise the symbol_section_index field.
-	* elf.c (swap_out_syms): Call symbol_section_index, if defined, on
-	OS and PROC specific section indicies.  Warn if converting other
-	reserved incidies to SHN_ABS.
-
-2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25537
-	* cpu-z80.c: Add machine type compatibility checking.
-
-2020-02-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25355
-	* plugin.c (plugin_list_entry): Remove handle.
-	(try_load_plugin): Call dlclose before return.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* libbfd-in.h (_bfd_constant_p): Define.
-	(_bfd_alloc_and_read, _bfd_malloc_and_read): Check read size against
-	file size before allocating memory.
-	* coffgen.c (_bfd_coff_get_external_symbols): Remove file size check.
-	* elf.c (bfd_elf_get_str_section): Likewise.
-	(_bfd_elf_slurp_version_tables): Likewise.
-	* libbfd.h: Regenerate.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* libbfd-in.h (_bfd_alloc_and_read, _bfd_malloc_and_read): New.
-	* aoutx.h (aout_get_external_symbols): Replace calls to
-	bfd_[m]alloc and bfd_bread with call to _bfd_[m]alloc_and_read.
-	(slurp_reloc_table): Likewise.
-	* archive.c (do_slurp_bsd_armap): Likewise.
-	(do_slurp_coff_armap): Likewise.
-	* archive64.c (_bfd_archive_64_bit_slurp_armap): Likewise.
-	* coff-rs6000.c (_bfd_xcoff_slurp_armap): Likewise.
-	* coff64-rs6000.c (xcoff64_slurp_armap): Likewise.
-	* coffcode.h (coff_set_arch_mach_hook, buy_and_read): Likewise.
-	* coffgen.c (coff_real_object_p, coff_object_p, build_debug_section),
-	(_bfd_coff_get_external_symbols): Likewise.
-	* ecoff.c (ecoff_slurp_symbolic_header),
-	(_bfd_ecoff_slurp_symbolic_info, ecoff_slurp_reloc_table),
-	(_bfd_ecoff_slurp_armap, ecoff_link_add_object_symbols, READ),
-	(ecoff_indirect_link_order): Likewise.
-	* elf.c (bfd_elf_get_str_section, setup_group, elf_read_notes),
-	(_bfd_elf_slurp_version_tables): Likewise.
-	* elf32-m32c.c (m32c_elf_relax_section): Likewise.
-	* elf32-rl78.c (rl78_elf_relax_section): Likewise.
-	* elf32-rx.c (elf32_rx_relax_section): Likewise.
-	* elf64-alpha.c (READ): Likewise.
-	* elf64-mips.c (mips_elf64_slurp_one_reloc_table): Likewise.
-	* elf64-sparc.c (elf64_sparc_slurp_one_reloc_table): Likewise.
-	* elfcode.h (elf_slurp_symbol_table),
-	(elf_slurp_reloc_table_from_section): Likewise.
-	* elflink.c (elf_link_add_object_symbols),
-	(elf_link_check_versioned_symbol): Likewise.
-	* elfxx-mips.c (READ): Likewise.
-	* i386lynx.c (slurp_reloc_table): Likewise.
-	* lynx-core.c (lynx_core_file_p): Likewise.
-	* mach-o.c (bfd_mach_o_canonicalize_relocs),
-	(bfd_mach_o_read_symtab_strtab, bfd_mach_o_alloc_and_read),
-	(bfd_mach_o_read_prebound_dylib, bfd_mach_o_read_dyld_content
-	* pdp11.c (aout_get_external_symbols, slurp_reloc_table
-	* pef.c (bfd_pef_print_loader_section, bfd_pef_scan_start_address),
-	(bfd_pef_parse_symbols): Likewise.
-	* peicode.h (pe_ILF_object_p, pe_bfd_object_p
-	* som.c (setup_sections, som_slurp_string_table),
-	(som_slurp_reloc_table, som_bfd_count_ar_symbols),
-	(som_bfd_fill_in_ar_symbols): Likewise.
-	* vms-alpha.c (module_find_nearest_line, evax_bfd_print_dst),
-	(evax_bfd_print_image): Likewise.
-	* vms-lib.c (_bfd_vms_lib_archive_p): Likewise.
-	* wasm-module.c (wasm_scan): Likewise.
-	* xcofflink.c (xcoff_link_add_symbols): Likewise.
-	* xsym.c (bfd_sym_read_name_table),
-	(bfd_sym_print_type_information_table_entry): Likewise.
-	* libbfd.h: Regenerate.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* aoutx.h (slurp_reloc_table): Allocate reloc_cache after
-	reading external relocs.
-	* ecoff.c (ecoff_slurp_reloc_table): Likewise.
-	* archive.c (_bfd_write_archive_contents): Don't twiddle bfd_error
-	after bfd_bread.
-	* archive64.c (_bfd_archive_64_bit_slurp_armap): Remove unnecessary
-	bfd_release.
-	* elf32-m32c.c (m32c_offset_for_reloc): Make shndx_buf a bfd_byte*.
-	(m32c_elf_relax_section): Likewise.
-	* elf32-rl78.c (rl78_offset_for_reloc): Likewise.
-	(rl78_elf_relax_section): Likewise.
-	* elf32-rx.c (rx_offset_for_reloc): Likewise.
-	(elf32_rx_relax_section): Likewise.
-	* mach-o.c (bfd_mach_o_alloc_and_read): Move earlier with better
-	parameter types and use..
-	(bfd_mach_o_read_dylinker, bfd_mach_o_read_dylib),
-	(bfd_mach_o_read_fvmlib, bfd_mach_o_read_str): ..in these functions.
-	* peicode.h (pe_bfd_object_p): Don't zero the part of opthdr
-	being read from file, just the extra.
-	* som.c (som_slurp_symbol_table): Allocate internal symbol buffer
-	after reading external syms.  Free on failure.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* coffcode.h (buy_and_read, coff_slurp_line_table),
-	(coff_slurp_symbol_table, coff_slurp_reloc_table): Replace
-	bfd_[z][m]alloc2 calls with _bfd_mul_overflow followed by the
-	corresponding bfd_alloc call.  Adjust variables to suit.
-	* coffgen.c (_bfd_coff_get_external_symbols): Likewise.
-	* ecoff.c (_bfd_ecoff_slurp_symbolic_info),
-	(_bfd_ecoff_slurp_symbol_table, READ): Likewise.
-	* elf.c (bfd_elf_get_elf_syms, setup_group, bfd_section_from_shdr),
-	(swap_out_syms, _bfd_elf_slurp_version_tables): Likewise.
-	* elf32-m32c.c (m32c_elf_relax_section): Likewise.
-	* elf32-rl78.c (rl78_elf_relax_section): Likewise.
-	* elf32-rx.c (elf32_rx_relax_section): Likewise.
-	* elf64-alpha.c (READ): Likewise.
-	* elfcode.h (elf_object_p, elf_write_relocs, elf_write_shdrs_and_ehdr),
-	(elf_slurp_symbol_table, elf_slurp_reloc_table),
-	(bfd_from_remote_memory): Likewise.
-	* elfcore.h (core_find_build_id): Likewise.
-	* elfxx-mips.c (READ): Likewise.
-	* mach-o.c (bfd_mach_o_mangle_sections),
-	(bfd_mach_o_read_symtab_symbols, bfd_mach_o_read_thread),
-	(bfd_mach_o_read_dysymtab, bfd_mach_o_flatten_sections),
-	(bfd_mach_o_scan, bfd_mach_o_fat_archive_p): Likewise.
-	* som.c (setup_sections, som_prep_for_fixups)
-	(som_build_and_write_symbol_table, som_slurp_symbol_table),
-	(som_slurp_reloc_table, som_bfd_count_ar_symbols),
-	(som_bfd_fill_in_ar_symbols, som_slurp_armap),
-	(som_bfd_ar_write_symbol_stuff): Likewise.
-	* vms-alpha.c (vector_grow1): Likewise.
-	* vms-lib.c (vms_add_index): Likewise.
-	* wasm-module.c (wasm_scan_name_function_section): Likewise.
-	* libbfd.c (bfd_malloc2, bfd_realloc2, bfd_zmalloc2): Delete.
-	* opncls.c (bfd_alloc2, bfd_zalloc2): Delete.
-	* libbfd-in.h (bfd_malloc2, bfd_realloc2, bfd_zmalloc2),
-	(bfd_alloc2, bfd_zalloc2): Delete.
-	(_bfd_mul_overflow): Define.
-	* libbfd.h: Regenerate.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* elf.c (bfd_section_from_shdr): Use bfd_zalloc rather than
-	bfd_zalloc2.
-	(assign_section_numbers): Likewise.
-	(elf_map_symbols): Likewise, and bfd_alloc rather than bfd_alloc2.
-	(_bfd_elf_map_sections_to_segments): Use bfd_malloc rather than
-	bfd_malloc2, size_t amt, and unsigned tls_count.
-	(rewrite_elf_program_header): Use bfd_malloc and size_t amt.
-	* elflink.c (elf_create_symbuf): Use bfd_malloc.
-	(elf_output_implib): Use bfd_alloc.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* bfd.c (struct bfd): Move format and direction to other
-	bitfields.  Add "size".
-	* bfdio.c (bfd_get_size): Cache size when not writing file.
-	* opncls.c (bfd_get_debug_link_info_1): Allow for bfd_get_size
-	returning zero, ie. unknown.
-	(bfd_get_alt_debug_link_info): Likewise.
-	* bfd-in2.h: Regenerate.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* coffgen.c (_bfd_coff_get_external_symbols): Don't call
-	bfd_get_file_size twice.
-	(_bfd_coff_read_string_table): Allow for bfd_get_file_size
-	zero, ie. unknown, return.
-	* elf-attrs.c (_bfd_elf_parse_attributes): Likewise.
-	* elfcode.h (elf_swap_shdr_in): Likewise.
-	(elf_object_p): Don't call bfd_get_file_size twice and correct
-	file size check.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* mach-o.c (bfd_mach_o_flatten_sections): Return a bfd_boolean,
-	FALSE if memory alloc fails.  Adjust calls.
-	* som.c (som_prep_for_fixups): Likewise.
-	* vms-alpha.c (alpha_vms_add_fixup_lp, alpha_vms_add_fixup_ca),
-	(alpha_vms_add_fixup_qr, alpha_vms_add_fixup_lr),
-	(alpha_vms_add_lw_reloc, alpha_vms_add_qw_reloc): Likewise.
-	* som.c (som_build_and_write_symbol_table): Return via error_return
-	on seek failure.
-	* vms-alpha.c (VEC_APPEND): Adjust for vector_grow1 changes.
-	(VEC_APPEND_EL): Delete.
-	(vector_grow1): Return pointer to element.  Catch overflow.
-	Return NULL on memory allocation failure.
-	(alpha_vms_add_fixup_lp): Replace VEC_APPEND_EL with VEC_APPEND.
-	(alpha_vms_add_fixup_ca): Likewise.
-	(alpha_vms_link_add_object_symbols): Check VEC_APPEND result
-	before using.
-	* elf.c (bfd_section_from_shdr): Check bfd_zalloc2 result.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* aix386-core.c (aix386_core_file_p): Use size_t for "amt".
-	* aout-target.h (object_p): Likewise.
-	* aout-tic30.c (tic30_aout_object_p): Likewise.
-	* aoutx.h (some_aout_object_p, mkobject, make_empty_symbol),
-	(emit_stringtab, write_syms, link_hash_table_create),
-	(aout_link_write_other_symbol): Likewise.
-	* archive.c (_bfd_generic_mkarchive, bfd_generic_archive_p),
-	(bfd_ar_hdr_from_filesystem, _bfd_write_archive_contents),
-	(_bfd_compute_and_write_armap): Likewise.
-	* archures.c (bfd_arch_list): Likewise.
-	* bfd.c (bfd_record_phdr): Likewise.
-	* binary.c (binary_canonicalize_symtab): Likewise.
-	* cisco-core.c (cisco_core_file_validate): Likewise.
-	* coff-arm.c (coff_arm_link_hash_table_create, find_thumb_glue),
-	(find_arm_glue, record_arm_to_thumb_glue),
-	(record_thumb_to_arm_glue): Likewise.
-	* coff-ppc.c (ppc_coff_link_hash_table_create, record_toc),
-	(ppc_allocate_toc_section): Likewise.
-	* coff-rs6000.c (_bfd_xcoff_mkobject, _bfd_xcoff_archive_p): Likewise.
-	* coff-sh.c (sh_relax_section): Likewise.
-	* coff64-rs6000.c (xcoff64_archive_p): Likewise.
-	* coffcode.h (handle_COMDAT, coff_new_section_hook),
-	(coff_set_alignment_hook, coff_mkobject),
-	(coff_compute_section_file_positions): Likewise.
-	* coffgen.c (coff_make_empty_symbol, coff_bfd_make_debug_symbol),
-	(coff_find_nearest_line_with_names),
-	( bfd_coff_set_symbol_class): Likewise.
-	* cofflink.c (_bfd_coff_link_hash_table_create),
-	(_bfd_coff_link_input_bfd): Likewise.
-	* dwarf1.c (alloc_dwarf1_unit, alloc_dwarf1_func): Likewise.
-	* dwarf2.c (read_abbrevs, read_attribute_value, add_line_info),
-	(build_line_info_table, sort_line_sequences),
-	(line_info_add_include_dir, line_info_add_file_name),
-	(decode_line_info, scan_unit_for_symbols, parse_comp_unit),
-	(place_sections, _bfd_dwarf2_slurp_debug_info): Likewise.
-	* ecoff.c (_bfd_ecoff_mkobject, _bfd_ecoff_make_empty_symbol),
-	(_bfd_ecoff_find_nearest_line),
-	(_bfd_ecoff_bfd_link_hash_table_create): Likewise.
-	* ecofflink.c (bfd_ecoff_debug_init): Likewise.
-	* elf-hppa.h (_bfd_elf_hppa_gen_reloc_type): Likewise.
-	* elf-m10300.c (mn10300_elf_relax_section),
-	(elf32_mn10300_link_hash_table_create): Likewise.
-	* elf-strtab.c (_bfd_elf_strtab_init): Likewise.
-	* elf.c (make_mapping, copy_elf_program_header): Likewise.
-	* elf32-arm.c (elf32_arm_link_hash_table_create),
-	(elf32_arm_setup_section_lists, elf32_arm_check_relocs),
-	(elf32_arm_new_section_hook): Likewise.
-	* elf32-avr.c (elf_avr_new_section_hook),
-	(elf32_avr_link_hash_table_create, get_local_syms),
-	(elf32_avr_setup_section_lists): Likewise.
-	* elf32-bfin.c (bfinfdpic_elf_link_hash_table_create),
-	(bfin_link_hash_table_create): Likewise.
-	* elf32-cr16.c (elf32_cr16_link_hash_table_create): Likewise.
-	* elf32-cris.c (elf_cris_link_hash_table_create): Likewise.
-	* elf32-csky.c (csky_elf_link_hash_table_create),
-	(csky_elf_check_relocs, elf32_csky_setup_section_lists): Likewise.
-	* elf32-frv.c (frvfdpic_elf_link_hash_table_create): Likewise.
-	* elf32-hppa.c (elf32_hppa_link_hash_table_create),
-	(elf32_hppa_setup_section_lists, get_local_syms): Likewise.
-	* elf32-i386.c (elf_i386_check_relocs): Likewise.
-	* elf32-lm32.c (lm32_elf_link_hash_table_create): Likewise.
-	* elf32-m32r.c (m32r_elf_link_hash_table_create),
-	(m32r_elf_check_relocs): Likewise.
-	* elf32-m68hc1x.c (m68hc11_elf_hash_table_create),
-	(elf32_m68hc11_setup_section_lists),
-	(elf32_m68hc11_size_stubs): Likewise.
-	* elf32-m68k.c (elf_m68k_link_hash_table_create): Likewise.
-	* elf32-metag.c (elf_metag_link_hash_table_create),
-	(elf_metag_setup_section_lists): Likewise.
-	* elf32-microblaze.c (microblaze_elf_link_hash_table_create),
-	(microblaze_elf_check_relocs): Likewise.
-	* elf32-nds32.c (nds32_elf_link_hash_table_create),
-	(nds32_elf_check_relocs): Likewise.
-	* elf32-nios2.c (nios2_elf32_setup_section_lists),
-	(get_local_syms, nios2_elf32_check_relocs),
-	(nios2_elf32_link_hash_table_create): Likewise.
-	* elf32-or1k.c (or1k_elf_link_hash_table_create),
-	(or1k_elf_check_relocs): Likewise.
-	* elf32-ppc.c (ppc_elf_modify_segment_map, update_plt_info): Likewise.
-	* elf32-pru.c (pru_elf32_link_hash_table_create): Likewise.
-	* elf32-s390.c (elf_s390_link_hash_table_create),
-	(elf_s390_check_relocs): Likewise.
-	* elf32-score.c (score_elf_create_got_section),
-	(s3_elf32_score_new_section_hook),
-	(elf32_score_link_hash_table_create): Likewise.
-	* elf32-score7.c (score_elf_create_got_section),
-	(s7_elf32_score_new_section_hook): Likewise.
-	* elf32-sh.c (sh_elf_link_hash_table_create),
-	(sh_elf_check_relocs): Likewise.
-	* elf32-tic6x.c (elf32_tic6x_link_hash_table_create),
-	(elf32_tic6x_new_section_hook, elf32_tic6x_check_relocs): Likewise.
-	* elf32-tilepro.c (tilepro_elf_link_hash_table_create),
-	(tilepro_elf_check_relocs): Likewise.
-	* elf32-v850.c (remember_hi16s_reloc): Likewise.
-	* elf32-vax.c (elf_vax_link_hash_table_create): Likewise.
-	* elf32-xtensa.c (elf_xtensa_link_hash_table_create),
-	(elf_xtensa_new_section_hook): Likewise.
-	* elf64-alpha.c (elf64_alpha_bfd_link_hash_table_create),
-	(get_got_entry, elf64_alpha_check_relocs): Likewise.
-	* elf64-hppa.c (elf64_hppa_hash_table_create): Likewise.
-	* elf64-ia64-vms.c (elf64_ia64_object_p): Likewise.
-	* elf64-mmix.c (mmix_elf_new_section_hook): Likewise.
-	* elf64-ppc.c (ppc64_elf_new_section_hook),
-	(ppc64_elf_link_hash_table_create, update_local_sym_info),
-	(update_plt_info, ppc64_elf_check_relocs): Likewise.
-	* elf64-s390.c (elf_s390_link_hash_table_create),
-	(elf_s390_check_relocs): Likewise.
-	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
-	* elflink.c (bfd_elf_link_record_local_dynamic_symbol),
-	(_bfd_elf_link_find_version_dependencies, elf_link_add_object_symbols),
-	(elf_link_add_archive_symbols, compute_bucket_count),
-	(bfd_elf_size_dynsym_hash_dynstr, _bfd_elf_link_hash_table_create),
-	(bfd_elf_get_bfd_needed_list, elf_link_swap_symbols_out),
-	(bfd_elf_final_link): Likewise.
-	* elfnn-aarch64.c (elfNN_aarch64_link_hash_table_create),
-	(elfNN_aarch64_setup_section_lists, elfNN_aarch64_check_relocs),
-	(elfNN_aarch64_new_section_hook): Likewise.
-	* elfnn-ia64.c (elfNN_ia64_object_p): Likewise.
-	* elfnn-riscv.c (riscv_elf_link_hash_table_create),
-	(riscv_elf_check_relocs): Likewise.
-	* elfxx-mips.c (_bfd_mips_elf_new_section_hook),
-	(_bfd_mips_elf_add_symbol_hook, _bfd_mips_elf_check_relocs),
-	(_bfd_mips_elf_modify_segment_map, _bfd_mips_elf_set_section_contents),
-	(_bfd_mips_elf_link_hash_table_create): Likewise.
-	* elfxx-sparc.c (_bfd_sparc_elf_link_hash_table_create),
-	(_bfd_sparc_elf_check_relocs),
-	(_bfd_sparc_elf_new_section_hook): Likewise.
-	* elfxx-tilegx.c (tilegx_elf_link_hash_table_create),
-	(tilegx_elf_check_relocs): Likewise.
-	* elfxx-x86.c (_bfd_x86_elf_link_hash_table_create): Likewise.
-	* format.c (bfd_check_format_matches): Likewise.
-	* hash.c (_bfd_stringtab_init): Likewise.
-	* ihex.c (ihex_scan): Likewise.
-	* irix-core.c (irix_core_core_file_p): Likewise.
-	* linker.c (bfd_wrapped_link_hash_lookup),
-	(_bfd_generic_link_hash_table_create),
-	(_bfd_generic_reloc_link_order): Likewise.
-	* lynx-core.c (lynx_core_file_p): Likewise.
-	* netbsd-core.c (netbsd_core_file_p): Likewise.
-	* osf-core.c (osf_core_core_file_p): Likewise.
-	* pdp11.c (some_aout_object_p, mkobject, make_empty_symbol),
-	(link_hash_table_create, aout_link_write_other_symbol): Likewise.
-	* peXXigen.c (_bfd_XX_bfd_copy_private_section_data): Likewise.
-	* peicode.h (pe_mkobject): Likewise.
-	* ppcboot.c (ppcboot_mkobject, ppcboot_canonicalize_symtab): Likewise.
-	* ptrace-core.c (ptrace_unix_core_file_p): Likewise.
-	* sco5-core.c (read_uarea): Likewise.
-	* som.c (hppa_som_gen_reloc_type, som_object_p, som_prep_headers),
-	(som_write_fixups, som_write_space_strings, som_write_symbol_strings),
-	(som_finish_writing, som_canonicalize_symtab, som_new_section_hook),
-	(som_bfd_copy_private_section_data, bfd_som_set_section_attributes),
-	(bfd_som_attach_aux_hdr, som_write_armap): Likewise.
-	* srec.c (srec_scan): Likewise.
-	* syms.c (_bfd_generic_make_empty_symbol): Likewise.
-	* targets.c (bfd_target_list): Likewise.
-	* tekhex.c (first_phase, tekhex_sizeof_headers): Likewise.
-	* trad-core.c (trad_unix_core_file_p): Likewise.
-	* vms-alpha.c (vms_initialize, alpha_vms_bfd_link_hash_table_create),
-	(vms_new_section_hook): Likewise.
-	* wasm-module.c (wasm_make_empty_symbol): Likewise.
-	* xcofflink.c (xcoff_get_section_contents),
-	(_bfd_xcoff_bfd_link_hash_table_create, xcoff_set_import_path),
-	(xcoff_find_function, bfd_xcoff_link_record_set, xcoff_build_ldsym),
-	(bfd_xcoff_size_dynamic_sections, xcoff_link_input_bfd): Likewise.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* elfxx-riscv.c (riscv_multi_letter_ext_valid_p): Don't use C99.
-
-2020-02-13  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* plugin.c (try_load_plugin): Make plugin_list_iter an argument
-	and use it if it isn't NULL.  Remove has_plugin_p argument.  Add
-	a build_list_p argument.  Don't search plugin_list.  Short circuit
-	when building the plugin list.
-	(has_plugin): Renamed to has_plugin_list.
-	(bfd_plugin_set_plugin): Don't set has_plugin.
-	(bfd_plugin_specified_p): Check plugin_list instead.
-	(build_plugin_list): New function.
-	(load_plugin): Call build_plugin_list and use plugin_list.
-
-2020-02-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25355
-	* plugin.c (try_claim): Always clean up for LTO wrapper.
-	(try_load_plugin): Treat each object as independent.  Create a
-	copy for plugin name.
-
-2020-02-11  Nick Clifton  <nickc@redhat.com>
-
-	* elf32-msp430.c (msp430_final_link_relocate): Always use longs
-	for addresses in print statements.
-	(msp430_elf_relax_delete_bytes): Likewise.
-	(msp430_elf_relax_add_words): Likewise.
-	(msp430_elf_relax_section): Likewise.
-
-2020-02-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* plugin.c (add_symbols): Clear plugin_data memory.
-
-2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25355
-	* configure.ac (HAVE_EXECUTABLE_SUFFIX): New AC_DEFINE.
-	(EXECUTABLE_SUFFIX): Likewise.
-	* config.in: Regenerated.
-	* configure: Likewise.
-	* plugin.c (bfd_plugin_close_and_cleanup): Removed.
-	(plugin_list_entry): Add all_symbols_read, cleanup_handler,
-	gcc, lto_wrapper, resolution_file, resolution_option, gcc_env,
-	real_bfd, real_nsyms, real_syms, lto_nsyms and lto_syms.
-	(get_lto_wrapper): New.
-	(setup_lto_wrapper_env): Likewise.
-	(current_plugin): Likewise.
-	(register_all_symbols_read): Likewise.
-	(register_cleanup): Likewise.
-	(get_symbols): Likewise.
-	(add_input_file): Likewise.
-	(bfd_plugin_close_and_cleanup): Likewise.
-	(claim_file): Removed.
-	(register_claim_file): Set current_plugin->claim_file.
-	(add_symbols): Make a copy of LTO symbols.  Set lto_nsyms and
-	lto_syms in current_plugin.
-	(try_claim): Use current_plugin->claim_file.  Call LTO plugin
-	all_symbols_read handler.  Copy real symbols to plugin_data.
-	Call LTO plugin cleanup handler.  Clean up for LTO wrapper.
-	(try_load_plugin): Don't reuse the previous plugin for LTO
-	wrapper.  Set up GCC LTO wrapper if possible.  Don't set
-	plugin_list_iter->claim_file.
-	(bfd_plugin_canonicalize_symtab): Use real LTO symbols if
-	possible.
-	* plugin.h (plugin_data_struct): Add real_bfd, real_nsyms and
-	real_syms.
-
-2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* elf32-msp430.c (msp430_elf_relax_section): Before relaxing a branch,
-	check if previous instruction matches a conditional jump inserted
-	earlier. Invert conditional jump and delete branch in this case.
-
-2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* elf32-msp430.c (msp430_elf_relax_add_two_words): Rename to
-	msp430_elf_relax_add_words. Support insertion of either one or two
-	words.
-	(msp430_elf_relax_section): Catch opcode of 0x3c00 when relocation
-	needs to be grown. Handle insertion of branch instruction to replace
-	jump.
-
-2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* elf32-msp430.c (msp430_final_link_relocate): Add printf statements for
-	debugging relocations.
-	(msp430_elf_relax_delete_bytes): Likewise.
-	(msp430_elf_relax_add_two_words): Likewise.
-	(msp430_elf_relax_section): Likewise.
-
-2020-02-10  Alan Modra  <amodra@gmail.com>
-
-	* archures.c: Wrap overlong z80 comments.
-	* bfd-in2.h: Regenerate.
-
-2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25469
-	* archures.c: Add GBZ80 and Z80N machine values.
-	* reloc.c: Add BFD_RELOC_Z80_16_BE.
-	* coff-z80.c: Add support for new reloc.
-	* coffcode.h: Add support for new machine values.
-	* cpu-z80.c: Add support for new machine names.
-	* elf32-z80.c: Add support for new reloc.
-	* bfd-in2.h: Regenerate.
-	* libbfd.h: Regenerate.
-
-2020-02-07  Nick Clifton  <nickc@redhat.com>
-
-	PR 23932
-	* elf.c (rewrite_elf_program_header): Do not complain if no
-	sections are mapped to a segment.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25490
-	* elflink.c (_bfd_elf_gc_mark_extra_sections): Issue an error
-	for garbage collection on __patchable_function_entries section
-	without linked-to section.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25381
-	* bfd-in2.h: Regenerated.
-	* elflink.c (_bfd_elf_gc_mark_extra_sections): Call mark_hook
-	on section if gc_mark of any of its linked-to sections is set
-	and don't set gc_mark again.
-	* section.c (asection): Add linked_to_symbol_name to map_head
-	union.
-
-2020-02-06  Maciej W. Rozycki  <macro@wdc.com>
-
-	* elf32-v850.c (v850_elf_relax_section): Fix the index used for
-	reporting an unrecognized instruction with R_V850_LONGJUMP.
-
-2020-02-05  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc_stub_plt_branch): Match comment with reality.
-
-2020-02-04  Alan Modra  <amodra@gmail.com>
-
-	* elf32-ppc.c (ppc_elf_relocate_section): After applying
-	R_PPC_VLE_ADDR20, goto copy_reloc.
-
-2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* bfd-in2.h: Regenerated.
-	* section.c (SEC_ASSEMBLER_SECTION_ID): Fix a typo in comments.
-
-2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25380
+	* coff-rs6000.c (rs6000_xcoff_vec): Likewise.
+	(powerpc_xcoff_vec): Likewise.
+	* coff-sh.c (sh_coff_small_vec): Likewise.
+	(sh_coff_small_le_vec): Likewise.
+	* coff-tic30.c (tic30_coff_vec): Likewise.
+	* coff-tic54x.c (tic54x_coff0_vec): Likewise.
+	(tic54x_coff0_beh_vec): Likewise.
+	(tic54x_coff1_vec): Likewise.
+	(tic54x_coff1_beh_vec): Likewise.
+	(tic54x_coff2_vec): Likewise.
+	(tic54x_coff2_beh_vec): Likewise.
+	* coff-x86_64.c (TARGET_SYM): Likewise.
+	(TARGET_SYM_BIG): Likewise.
+	* coff64-rs6000.c (rs6000_xcoff64_vec): Likewise.
+	(rs6000_xcoff64_aix_vec): Likewise.
+	* coffcode.h (CREATE_BIG_COFF_TARGET_VEC): Likewise.
+	(CREATE_BIGHDR_COFF_TARGET_VEC): Likewise.
+	(CREATE_LITTLE_COFF_TARGET_VEC): Likewise.
+	* elfxx-target.h (TARGET_BIG_SYM): Likewise.
+	(TARGET_LITTLE_SYM): Likewise.
+	* hppabsd-core.c (core_hppabsd_vec): Likewise.
+	* hpux-core.c (core_hpux_vec): Likewise.
+	* i386msdos.c (i386_msdos_vec): Likewise.
+	* ihex.c (ihex_vec): Likewise.
+	* irix-core.c (core_irix_vec): Likewise.
+	* mach-o-target.c (TARGET_NAME): Likewise.
+	* mmo.c (mmix_mmo_vec): Likewise.
+	* netbsd-core.c (core_netbsd_vec): Likewise.
+	* osf-core.c (core_osf_vec): Likewise.
+	* pdp11.c (MY (vec)): Likewise.
+	* pef.c (pef_vec): Likewise.
+	(pef_xlib_vec): Likewise.
+	* plugin.c (plugin_vec): Likewise.
+	* ppcboot.c (powerpc_boot_vec): Likewise.
+	* ptrace-core.c (core_ptrace_vec): Likewise.
+	* sco5-core.c (core_sco5_vec): Likewise.
+	* som.c (hppa_som_vec): Likewise.
+	* srec.c (srec_vec): Likewise.
+	(symbolsrec_vec): Likewise.
+	* tekhex.c (tekhex_vec): Likewise.
+	* trad-core.c (core_trad_vec): Likewise.
+	* verilog.c (verilog_vec): Likewise.
+	* vms-alpha.c (alpha_vms_vec): Likewise.
+	* vms-lib.c (alpha_vms_lib_txt_vec): Likewise.
+	* wasm-module.c (wasm_vec): Likewise.
+	* xsym.c (sym_vec): Likewise.
+	* elf.c (ignore_section_sym): Return TRUE if BSF_SECTION_SYM_USED
+	isn't set.
+	(elf_map_symbols): Don't include ignored section symbols.
+	* elfcode.h (elf_slurp_symbol_table): Also set
+	BSF_SECTION_SYM_USED on STT_SECTION symbols.
+	* elflink.c (bfd_elf_final_link): Generated section symbols only
+	when emitting relocations or reqired.
+	* elfxx-x86.h (TARGET_KEEP_UNUSED_SECTION_SYMBOLS): New.
+	* syms.c (BSF_SECTION_SYM_USED): New.
+	* targets.c (TARGET_KEEP_UNUSED_SECTION_SYMBOLS): New.
+	(bfd_target): Add keep_unused_section_symbols.
+	(bfd_keep_unused_section_symbols): New.
 	* bfd-in2.h: Regenerated.
-	* ecoff.c (bfd_debug_section): Add section_id.
-	* section.c (bfd_section): Add section_id.
-	(SEC_ASSEMBLER_SECTION_ID): New.
-	(BFD_FAKE_SECTION): Add section_id.
-
-2020-02-01  Nick Clifton  <nickc@redhat.com>
-
-	* config.bfd: Move the c30-aout and tic30-aout targets onto the
-	obsolete list.
-
-2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>
-
-	* elf-eh-frame.c (_bfd_elf_write_section_eh_frame): DW_EH_PE_datarel
-	encodings are relative to the GOT on nios2, too.
-
-2020-01-31  Alan Modra  <amodra@gmail.com>
-
-	* Makefile.am (elf32-target.h, elf64-target.h): Don't use a temp
-	file.  Use $< and $@ in rules.
-	(elf32-aarch64.c, elf64-aarch64.c): Likewise.
-	(elf32-ia64.c, elf64-ia64.c): Likewise.
-	(elf32-riscv.c, elf64-riscv.c): Likewise.
-	(peigen.c, pepigen.c, pex64igen.c): Likewise.
-	(elf32-aarch64.c, elf64-aarch64.c): Don't emit $srcdir on #line.
-	(elf32-riscv.c, elf64-riscv.c): Likewise, and use $(SED).
-	(elf32-ia64.c, elf64-ia64.c): Do emit #line.
-	(peigen.c, pepigen.c, pex64igen.c): Likewise.
-	* Makefile.in: Regenerate.
-
-2020-01-31  Alan Modra  <amodra@gmail.com>
-
-	PR 4110
-	* elf.c (setup_group): Don't clear entire section contents,
-	just the padding after group flags.  Release alloc'd memory
-	after a seek or read failure.
-
-2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* peXXigen.c (pe_is_repro): New function.
-	(_bfd_XX_print_private_bfd_data_common): Note timestamp is
-	actually a build hash if PE_IMAGE_DEBUG_TYPE_REPRO is present.
-
-2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* peXXigen.c (debug_type_names): Add names for new debug data type
-	values.
-
-2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
-
-	* peXXigen.c (pe_print_debugdata): Fix the iteration variable for
-	inner loop.  Fix a memory leak.
-
-2020-01-30  Alan Modra  <amodra@gmail.com>
-
-	* coffgen.c (coff_real_object_p): Don't clear obj_coff_keep_syms
-	or obj_coff_keep_strings here.
-	(coff_get_normalized_symtab): Free external syms directly.
-	* xcofflink.c (xcoff_link_input_bfd): Restore obj_coff_keep_syms
-	on error exit path.
-
-2020-01-27  Jim Wilson  <jimw@sifive.com>
-
-	* cpu-riscv.c (riscv_scan): New.
-	(N): Change bfd_default_scan to riscv_scan.
 
-2020-01-27  Andreas Schwab  <schwab@suse.de>
+2021-01-07  Nick Clifton  <nickc@redhat.com>
 
-	* Makefile.am (ALL_MACHINES): Remove cpu-plugin.lo.
-	(ALL_MACHINES_CFILES): Remove cpu-plugin.c.
-	* Makefile.in: Regenerate.
-	* cpu-plugin.c: Remove.
-	* archures.c (enum bfd_architecture): Remove bfd_arch_plugin.
-	(bfd_plugin_arch): Remove declaration.
-	* bfd-in2.h: Regenerate.
-	* po/SRC-POTFILES.in: Regenerate.
-
-2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
-	    Alan Modra  <amodra@gmail.com>
-
-	PR ld/25458
-	* elflink.c (_bfd_elf_gc_mark_rsec): Mark all weak aliases.
-
-2020-01-24  Jim Wilson  <jimw@sifive.com>
-
-	* elfxx-riscv.c (riscv_get_prefix_class): Format s case like others.
-	(riscv_parse_prefixed_ext): Fix s extension comment and reword to
-	avoid over long line.
-
-2020-01-24  Nick Clifton  <nickc@redhat.com>
+	PR 25713
+	* bfdio.c (_bfd_real_fopen): For Win32 convert relative paths to
+	absolute paths and check to see if they are longer than MAX_PATH.
 
-	PR 25447
-	* coffgen.c (_bfd_coff_close_and_cleanup): Do not clear the keep
-	syms and keep strings flags as these may have been set in order to
-	prevent a bogus call to free.
+2021-01-07  Philipp Tomsich  <prt@gnu.org>
 
-2020-01-23  Nick Clifton  <nickc@redhat.com>
+	* elfxx-riscv.c (riscv_std_z_ext_strtab): Added zihintpause.
 
-	* po/fr.po: Updated French translation.
+2021-01-07  Claire Xenia Wolf  <claire@symbioticeda.com>
+	    Jim Wilson  <jimw@sifive.com>
+	    Andrew Waterman  <andrew@sifive.com>
+	    Maxim Blinov  <maxim.blinov@embecosm.com>
+	    Kito Cheng  <kito.cheng@sifive.com>
+	    Nelson Chu  <nelson.chu@sifive.com>
 
-2020-01-23  Alan Modra  <amodra@gmail.com>
-
-	PR 25444
-	* elf.c (assign_file_positions_for_load_sections): Avoid divide
-	by zero when p_align is zero.
-
-2020-01-22  Maxim Blinov  <maxim.blinov@embecosm.com>
-
-	* bfd/elfnn-riscv.c (riscv_skip_prefix): New.
-	(riscv_prefix_cmp): Likewise.
-	(riscv_non_std_ext_p): Deleted.
-	(riscv_std_sv_ext_p): Likewise.
-	(riscv_non_std_sv_ext_p): Likewise.
-	(riscv_merge_non_std_and_sv_ext): Rename to...
-	(riscv_merge_multi_letter_ext): and modified to use riscv_prefix_cmp.
-	(riscv_merge_arch_attr_info): Replace 3 calls to
-	riscv_merge_non_std_and_sv_ext with single call to
-	riscv_merge_multi_letter_ext.
-	* bfd/elfxx-riscv.c (riscv_parse_std_ext): Break if we
-	encounter a 'z' prefix.
-	(riscv_get_prefix_class): New function, return prefix class based
-	on first few characters of input string.
-	(riscv_parse_config): New structure to factor out minor differences
-	in extension class parsing behaviour.
-	(riscv_parse_sv_or_non_std_ext): Rename to...
-	(riscv_parse_prefixed_ext): and parameterise with
-	riscv_parse_config.
-	(riscv_std_z_ext_strtab, riscv_std_s_ext_strtab): New.
-	(riscv_multi_letter_ext_valid_p): New.
-	(riscv_ext_x_valid_p, riscv_ext_z_valid_p, riscv_ext_s_valid_p): New.
-	(riscv_parse_subset): Delegate all non-single-letter parsing work
-	to riscv_parse_prefixed_ext.
-	* bfd/elfxx-riscv.h (riscv_isa_ext_class): New type.
-	(riscv_get_prefix_class): Declare.
-
-2020-01-22  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (struct ppc_link_hash_table): Add tga_group.
-	(ppc64_elf_archive_symbol_lookup): Extract __tls_get_addr_opt for
-	__tls_get_addr_desc.
-	(ppc64_elf_size_stubs): Add section for linker generated
-	__tls_get_addr_desc wrapper function.  Loop at least once if
-	generating this function.
-	(emit_tga_desc, emit_tga_desc_eh_frame): New functions.
-	(ppc64_elf_build_stubs): Generate __tls_get_addr_desc.
-
-2020-01-22  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.h (struct ppc64_elf_params): Add no_tls_get_addr_regsave.
-	* elf64-ppc.c (struct ppc_link_hash_table): Add tga_desc and
-	tga_desc_fd.
-	(is_tls_get_addr): Match tga_desc and tga_desc_df too.
-	(STDU_R1_0R1, ADDI_R1_R1): Define.
-	(tls_get_addr_prologue, tls_get_addr_epilogue): New functions.
-	(ppc64_elf_tls_setup): Set up tga_desc and tga_desc_fd.  Indirect
-	tga_desc_fd to opt_fd, and tga_desc to opt.  Set
-	no_tls_get_addr_regsave.
-	(branch_reloc_hash_match): Add hash3 and hash4.
-	(ppc64_elf_tls_optimize): Handle tga_desc_fd and tga_desc too.
-	(ppc64_elf_size_dynamic_sections): Likewise.
-	(ppc64_elf_relocate_section): Likewise.
-	(plt_stub_size, build_plt_stub): Likewise.  Size regsave
-	__tls_get_addr stub.
-	(build_tls_get_addr_stub): Build regsave __tls_get_addr stub and
-	eh_frame.
-	(ppc_size_one_stub): Handle tga_desc_fd and tga_desc too.  Size
-	eh_frame for regsave __tls_get_addr.
-
-2020-01-22  Alan Modra  <amodra@gmail.com>
-
-	* elf64-ppc.c (ppc64_elf_size_stubs): Correct condition under
-	which __tls_get_addr calls will be eliminated.
-
-2020-01-20  Nick Clifton  <nickc@redhat.com>
-
-	* po/pt.po: Updates Portuguese translation.
-	* po/ru.po: Updated Russian translation.
-	* po/uk.po: Updated Ukranian translation.
+	* elfxx-riscv.c (riscv_std_z_ext_strtab): Added zba, zbb and zbc.
 
-2020-01-20  H.J. Lu  <hongjiu.lu@intel.com>
+2021-01-06  H.J. Lu  <hongjiu.lu@intel.com>
 
-	PR ld/25416
-	* elf64-x86-64.c (elf_x86_64_check_tls_transition): Support
-	"rex leal x@tlsdesc(%rip), %reg" and "call *x@tlsdesc(%eax)" in
-	X32 mode.
-	(elf_x86_64_relocate_section): In x32 mode, for GDesc -> LE
-	transition, relax "rex leal x@tlsdesc(%rip), %reg" to
-	"rex movl $x@tpoff, %reg", for GDesc -> IE transition, relax
-	"rex leal x@tlsdesc(%rip), %reg" to
-	"rex movl x@gottpoff(%rip), %eax".  For both transitions, relax
-	"call *(%eax)" to "nopl (%rax)".
+	* elf32-bfin.c (bfin_check_relocs): Check bfd_link_hash_indirect.
+	(bfinfdpic_check_relocs): Likewise.
 
-2020-01-20  Alan Modra  <amodra@gmail.com>
+2021-01-06  Alan Modra  <amodra@gmail.com>
 
-	* elf64-ppc.c (LD_R11_0R3, CMPDI_R11_0, STD_R11_0R1, LD_R11_0R1),
-	(MTLR_R11): Don't define.
-	(LD_R0_0R3, CMPDI_R0_0): Define.
-	(build_tls_get_addr_stub): Don't use r11 in stub.
+	* elf32-score.c (s3_bfd_score_info_to_howto): Report an error
+	on unknown r_type.
+	* elf32-score7.c (s7_bfd_score_info_to_howto): Likewise.
 
-2020-01-20  Alan Modra  <amodra@gmail.com>
+2021-01-06  Alan Modra  <amodra@gmail.com>
 
-	* elf64-ppc.c (ppc_elf_hash_entry): New function, use throughout file.
-	(defined_sym_val, is_tls_get_addr): Likewise.
+	* config.bfd (sparc-*-solaris2*): Add sparc_elf32_vec.
+	(sparc64-*-solaris2*): Add sparc_elf64_vec and
+	sparc_elf32_vec.
 
-2020-01-18  Nick Clifton  <nickc@redhat.com>
+2021-01-06  Marcus Comstedt  <marcus@mc.pp.se>
 
-	* version.m4 (BFD_VERSION): Set to 2.34.50.
+	* config.bfd: Added targets riscv64be*-*-*, riscv32be*-*-* and
+	riscvbe*-*-*.  Also added riscv_elf[32|64]_be_vec.
+	* configure.ac: Handle riscv_elf[32|64]_be_vec.
 	* configure: Regenerate.
-	* po/bfd.pot: Regenerate.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.34 branch created.
-
-2020-01-17  Christian Biesinger  <cbiesinger@google.com>
-
-	* coff-arm.c: Fix spelling error (seperate).
-	* elfxx-riscv.c (riscv_parse_sv_or_non_std_ext): Fix spelling
-	error (seperate).
-	* sysdep.h (strnlen): Fix spelling error (seperate).
-
-2020-01-15  Lars Brinkhoff  <lars@nocrew.org>
-
-	PR 20694
-	* pdp11.c (TARGET_PAGE_SIZE): Set to 8192.
-
-2020-01-15  Alan Modra  <amodra@gmail.com>
-
-	PR 25384
-	* elf64-ppc.c (ELIMINATE_COPY_RELOCS): Update comment.
-	(ppc64_elf_adjust_dynamic_symbol): Don't allow .dynbss copies
-	of function symbols unless dot symbols are present.  Do warn
-	whenever one is created, regardles of whether a PLT entry is
-	also emitted for the function symbol.
-
-2020-01-14  Alan Modra  <amodra@gmail.com>
-
-	* som.c (som_bfd_count_ar_symbols): Error when file position
-	of symbols on chains is not strictly increasing.
-
-2020-01-14  Alan Modra  <amodra@gmail.com>
-
-	* vms.h (VMS_DEBUG): Define as 0.
-	* vms-alpha.c (image_write): Move debug output after bounds check.
-	Tidy bounds check.
-	(_bfd_vms_slurp_eihd): Warning fix.
-	(_bfd_vms_slurp_etir): Init variables to avoid bogus warnings.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (_bfd_vms_slurp_egsd): Ensure minimum size even
-	for "ignored" records.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* wasm-module.c (wasm_scan_name_function_section): Formatting.
-	Delete asect name check.  Move asect NULL check to wasm_object_p.
-	Correct bounds check of sizes against end.  Replace uses of
-	bfd_zalloc with bfd_alloc, zeroing only necessary bytes.  Use
-	just one bfd_release.
-	(wasm_scan): Don't use malloc/strdup for section names,
-	bfd_alloc instead.  Simplify code prefixing section name.
-	Formatting.  Don't attempt to free memory here..
-	(wasm_object_p): ..do so here.
-
-2020-01-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	PR ld/22269
-	* elf32-arm.c (elf32_arm_final_link_relocate): Use
-	UNDEFWEAK_NO_DYNAMIC_RELOC.
-	(allocate_dynrelocs_for_symbol): Likewise.
-
-2020-01-10  Tamar Christina  <tamar.christina@arm.com>
-
-	PR 25210
-	* elfnn-aarch64.c (_bfd_aarch64_create_stub_section): Remove elfclass.
-
-2020-01-10  Alan Modra  <amodra@gmail.com>
-
-	* coff-alpha.c (alpha_ecoff_object_p): Calculate size in bfd_size_type.
-
-2020-01-09  Nick Clifton  <nickc@redhat.com>
-
-	PR 25221
-	* bfd.c (bfd_convert_section_contents): Check for a compress
-	header size that is larger than the actual section size.
-
-2020-01-08  Alan Modra  <amodra@gmail.com>
-
-	PR 25351
-	* elflink.c (bfd_elf_final_link): Call _bfd_fix_excluded_sec_syms
-	after removing sections.
-
-2020-01-06  Jim Wilson  <jimw@sifive.com>
-
-	PR 25205
-	* elfnn-riscv.c (riscv_elf_relocate_section) <R_RISCV_CALL>: Add
-	check for !bfd_link_pic (info).
-	<R_RISCV_CALL_PLT>: Move next to R_RISCV_CALL.
-	<R_RISCV_JAL>: Add comment.
-	(_bfd_riscv_relax_section): For plt.offset check, add check for
-	bfd_link_pic (info).  Add comment.
-
-2020-01-06  Alan Modra  <amodra@gmail.com>
-
-	* format.c (bfd_check_format_matches): Ignore bfd_error on target
-	match failures.  Don't init to bfd_error_wrong_format before
-	calling _bfd_check_format.
-
-2020-01-06  Alan Modra  <amodra@gmail.com>
-
-	* vms-alpha.c (_bfd_vms_push, _bfd_vms_pop): Return pass/fail
-	status rather than exiting on stack overflow or underflow.
-	(_bfd_vms_slurp_etir): Adjust to suit.
-
-2020-01-06  Alan Modra  <amodra@gmail.com>
-
-	* som.c (som_bfd_fill_in_ar_symbols): Bounds check som_dict index.
-
-2020-01-06  Alan Modra  <amodra@gmail.com>
-
-	* mach-o.c (bfd_mach_o_read_dylinker): Don't read past end of
-	command.  Check name offset is within command.
-	(bfd_mach_o_read_dylib, bfd_mach_o_read_prebound_dylib),
-	(bfd_mach_o_read_prebind_cksum, bfd_mach_o_read_twolevel_hints),
-	(bfd_mach_o_read_fvmlib, bfd_mach_o_read_dysymtab),
-	(bfd_mach_o_read_symtab, bfd_mach_o_read_uuid),
-	(bfd_mach_o_read_linkedit, bfd_mach_o_read_str),
-	(bfd_mach_o_read_dyld_info, bfd_mach_o_read_version_min),
-	(bfd_mach_o_read_encryption_info, bfd_mach_o_read_source_version),
-	(bfd_mach_o_read_encryption_info_64, bfd_mach_o_read_main),
-	(bfd_mach_o_read_note, bfd_mach_o_read_build_version),
-	(bfd_mach_o_read_segment): Similarly.
-	(bfd_mach_o_read_thread): Properly bound check thread struct.
-	Don't repeat checks on second loop.
-	(bfd_mach_o_read_command): Fail on invalid command length.
-
-2020-01-04  Alan Modra  <amodra@gmail.com>
-
-	* format.c (bfd_check_format_matches): Add preserve_match.
-	Save initial bfd state in "preserve", matched bfd state in
-	"preserve_match".  Save just the first match.  Release
-	bfd_alloc memory.  Restore and finish preserved state as
-	appropriate on all function exit paths.
-
-2020-01-04  Alan Modra  <amodra@gmail.com>
-
-	* mmo.c (mmo_mkobject): Allocate tdata with bfd_zalloc.
-
-2020-01-04  Alan Modra  <amodra@gmail.com>
+	* elfnn-riscv.c: Include <limits.h> and define CHAR_BIT for
+	riscv_is_insn_reloc.
+	(riscv_get_insn): RISC-V instructions are always little endian, but
+	bfd_get may be used for big-endian, so add new riscv_get_insn to handle
+	the insturctions.
+	(riscv_put_insn): Likewsie.
+	(riscv_is_insn_reloc): Check if we are relocaing an instruction.
+	(perform_relocation): Call riscv_is_insn_reloc to decide if we should
+	use riscv_[get|put]_insn or bfd_[get|put].
+	(riscv_zero_pcrel_hi_reloc): Use riscv_[get|put]_insn, bfd_[get|put]l32
+	or bfd_[get|put]l16 for code.
+	(riscv_elf_relocate_section): Likewise.
+	(riscv_elf_finish_dynamic_symbol): Likewise.
+	(riscv_elf_finish_dynamic_sections): Likewise.
+	(_bfd_riscv_relax_call): Likewise.
+	(_bfd_riscv_relax_lui): Likewise.
+	(_bfd_riscv_relax_align): Likewise.
+	(_bfd_riscv_relax_pc): Likewise.
+	(riscv_elf_object_p): Handled for big endian.
+	(TARGET_BIG_SYM, TARGET_BIG_NAME): Defined.
+	* targets.c: Add riscv_elf[32|64]_be_vec.
+	(_bfd_target_vector): Likewise.
+
+2021-01-05  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (bfd_elf_link_record_dynamic_symbol): Handle no_export
+	for relocatable executable.
+
+2021-01-05  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_slurp_egsd): Read flags after size check.
+
+2021-01-05  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (allocate_dynrelocs): When we are generating pde,
+	make sure gp symbol is output as a dynamic symbol.
+
+2021-01-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26256
+	* elflink.c (compare_link_order): Place unordered sections before
+	ordered sections.
+	(elf_fixup_link_order): Add a link info argument.  Allow mixed
+	ordered and unordered input sections for non-relocatable link.
+	Sort the consecutive bfd_indirect_link_order sections with the
+	same pattern.  Change the offsets of the bfd_indirect_link_order
+	sections only.
+	(bfd_elf_final_link): Pass info to elf_fixup_link_order.
+	* section.c (bfd_section): Add pattern.
+	(BFD_FAKE_SECTION): Initialize pattern to NULL.
+	* bfd-in2.h: Regenerated.
 
-	* coffgen.c (coff_real_object_p): Free malloc'd memory on target
-	match too.
+2021-01-04  Alexander Fedotov  <alfedotov@gmail.com>
 
-2020-01-03  Nick Clifton  <nickc@redhat.com>
+	* elf32-arm.c (elf32_arm_print_private_bfd_data): Prefix hex value
+	of private flags with 0x.
+	* elfnn-aarch64.c (elfNN_aarch64_print_private_bfd_data): Likewise.
 
-	PR 25307
-	(bfd_pef_parse_function_stubs): Correct the test that ensures that
-	there is enough data remaining in the code buffer before
-	attempting to read a function stub.
+2021-01-04  Alan Modra  <amodra@gmail.com>
 
-2020-01-03  Nick Clifton  <nickc@redhat.com>
+	PR 26822
+	* elflink.c (elf_link_input_bfd): Use the file base name in
+	linker generated STT_FILE symbols.
 
-	PR 25308
-	* elf-properties.c (_bfd_elf_convert_gnu_properties): Check the
-	return value from bfd_malloc.
-	* elf32-arm.c (bfd_elf32_arm_vfp11_fix_veneer_locations): Likewise.
-	(bfd_elf32_arm_stm32l4xx_fix_veneer_locations): Likewise.
-	(elf32_arm_filter_cmse_symbols): Likewise.
-	(elf32_arm_write_section): Likewise.
-	* mach-o.c (bfd_mach_o_core_fetch_environment): Likewise.
-	(bfd_mach_o_follow_dsym): Likewise.
-	* pef.c (bfd_pef_print_loader_section): Likewise.
-	(bfd_pef_scan_start_address): Likewise.
-	(bfd_pef_parse_function_stubs): Likewise.
-	(bfd_pef_parse_symbols): Likewise.
+2021-01-04  Nelson Chu  <nelson.chu@sifive.com>
 
-2020-01-03  Sergei Trofimovich  <siarheit@google.com>
+	* elfxx-riscv.c (riscv_compare_subsets): Removed static.
+	* elfxx-riscv.h: Add declaration.
+	* elfnn-riscv.c (riscv_merge_multi_letter_ext): Use
+	riscv_compare_subsets to check the orders.
+	(riscv_skip_prefix): Removed.
+	(riscv_prefix_cmp): Removed.
 
-        * elfnn-ia64.c (elfNN_ia64_merge_private_bfd_data): don't fail
-        on binary inputs ld/PR25316.
-        (is_ia64_elf): new helper to filter on ia64 objects.
+2021-01-04  Alan Modra  <amodra@gmail.com>
 
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
+	PR 26741
+	* elfxx-riscv.c (riscv_parse_prefixed_ext): Free subset after
+	calculating subset version length.
 
-	* mach-o.c (cpusubtype, bfd_mach_o_header_p): Insert underscore
-	in parameter names.
-	(bfd_mach_o_scan): Insert underscore in two variable names.
+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>
 
-2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+	* xcofflink.c: Correct spelling in comments.
 
-	* Makefile.am: Add z80-elf target support.
-	* configure.ac: Likewise.
-	* targets.c: Likewise.
-	* Makefile.in: Regenerate.
-	* configure: Regenerate.
-	* config.bfd: Add z80-elf target support and new arches: ez80 and
-	z180.
-	* elf32-z80.c: New file.
-	* archures.c: Add new z80 architectures: eZ80 and Z180.
-	* coffcode.h: Likewise.
-	* cpu-z80.c: Likewise.
-	* coff-z80.c: Add new relocations for Z80 target and local label
-	check.
-	* reloc.c: Add new relocs.
-	* bfd-in2.h: Regenerate.
-	* libbfd.h: Regenerate.
-
-2020-01-02  Tamar Christina  <tamar.christina@arm.com>
-
-	PR 25210
-	PR 24753
-	* elfnn-aarch64.c (_bfd_aarch64_create_stub_section): Set ELF class.
-
-2020-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/libdecnumber/ChangeLog b/libdecnumber/ChangeLog
index 58be97d5241..0bc98232249 100644
--- a/libdecnumber/ChangeLog
+++ b/libdecnumber/ChangeLog
@@ -1,3 +1,7 @@
+2020-07-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aclocal.m4, configure: Re-generate.
+
 2018-10-31  Joseph Myers  <joseph@codesourcery.com>
 
 	* configure: Regenerate.
diff --git a/sim/cris/ChangeLog b/sim/cris/ChangeLog
index d37fc8f56d8..1c4bda1f0c2 100644
--- a/sim/cris/ChangeLog
+++ b/sim/cris/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2019-09-06  Alan Modra  <amodra@gmail.com>
 
 	* sim-if.c (sim_open): Constify filename variable.
@@ -380,3 +388,358 @@
 2010-03-30  Mike Frysinger  <vapier@gentoo.org>
 
 	* devices.c (device_error): Add const to message.
+
+2010-02-11  Doug Evans  <dje@sebabeach.org>
+
+	* cpuv10.h, * cpuv32.h, * cris-desc.c,
+	* cris-desc.h, * decodev10.c, * decodev32.c,
+	* modelv10.c, * modelv32.c, * semcrisv10f-switch.c,
+	* semcrisv32f-switch.c: Regenerate.
+
+2010-01-02  Doug Evans  <dje@sebabeach.org>
+
+	* arch.c, * arch.h, * cpuall.h, * cpuv10.c,
+	* cpuv10.h, * cpuv32.c, * cpuv32.h, * cris-desc.c,
+	* cris-desc.h, * cris-opc.h, * decodev10.c,
+	* decodev10.h, * decodev32.c, * decodev32.h,
+	* modelv10.c, * modelv32.c, * semcrisv10f-switch.c,
+	* semcrisv32f-switch.c: Regenerate, update copyright year.
+
+2010-01-01  Doug Evans  <dje@sebabeach.org>
+
+	* mloop.in: Fix copyright year update snafu.
+
+2009-11-22  Doug Evans  <dje@sebabeach.org>
+
+	* cpuall.h: Regenerate.
+	* cpuv10.h: Regenerate.
+	* cpuv32.h: Regenerate.
+	* decodev10.c: Regenerate.
+	* decodev10.h: Regenerate.
+	* decodev32.c: Regenerate.
+	* decodev32.h: Regenerate.
+
+2009-10-23  Doug Evans  <dje@sebabeach.org>
+
+	* arch.c: Regenerate.
+	* arch.h: Regenerate.
+	* cpuall.h: Regenerate.
+	* cpuv10.c: Regenerate.
+	* cpuv10.h: Regenerate.
+	* cpuv32.c: Regenerate.
+	* cpuv32.h: Regenerate.
+	* cris-desc.c: Regenerate.
+	* cris-desc.h: Regenerate.
+	* cris-opc.h: Regenerate.
+	* decodev10.c: Regenerate.
+	* decodev10.h: Regenerate.
+	* decodev32.c: Regenerate.
+	* decodev32.h: Regenerate.
+	* modelv10.c: Regenerate.
+	* modelv32.c: Regenerate.
+	* semcrisv10f-switch.c: Regenerate.
+	* semcrisv32f-switch.c: Regenerate.
+
+2009-01-18  Hans-Peter Nilsson  <hp@axis.com>
+
+	* sim-if.c: Include errno.h.
+	(cris_start_address, cris_program_offset): New variables.
+	(OPTION_CRIS_PROGRAM_OFFSET, OPTION_CRIS_STARTADDR): New option
+	enums.
+	(cris_options): New options --cris-program-offset and
+	--cris-start-address.
+	(cris_option_handler): Handle new options.
+	(cris_program_offset_write, cris_set_section_offset_iterator)
+	(cris_offset_sections, cris_offset_sections): New functions.
+	(sim_load): Use cris_program_offset_write as function argument to
+	cris_load_elf_file, not sim_write.
+	(struct offsetinfo): New struct.
+	(cris_handle_interpreter): Fix typo in comment.
+	(sim_open): Call cris_offset_sections as soon as the bfd of the
+	infile is available.  Gate bfd validity checks on abfd non-NULL.
+	(sim_create_inferior): Let cris_start_address when != -1 override
+	other start-address choices.
+
+2009-01-06  Hans-Peter Nilsson  <hp@axis.com>
+
+	* traps.c (abort): Define to call sim_io_error.
+	(create_map): Make -1 imply a non-fixed address, not 0.  All
+	callers changed.  Only prefer the next higher unmapped address if
+	the last mapped address is no less than 0x40000000.  Check that
+	the address to be mapped is not already mapped.  Update head
+	comment.
+	(unmap_pages): Don't call abort when recursive call fails, just
+	note and return an error if a page in the range couldn't be unmapped.
+	(cris_bmod_handler, h_supr_set_handler, h_supr_get_handler)
+	(schedule, make_first_thread, cris_pipe_empty): New local variable sd.
+	(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle
+	non-MAP_FIXED argument overlapping existing map.  For MAP_FIXED,
+	don't abort on page not being mapped.  Handle non-anon filemap
+	with length padded to pagesize.
+
+2009-01-03  Hans-Peter Nilsson  <hp@axis.com>
+
+	* sim-if.c (TARGET_AT_NULL, TARGET_AT_PHDR, TARGET_AT_PHENT)
+	(TARGET_AT_PHNUM, TARGET_AT_PAGESZ, TARGET_AT_BASE)
+	(TARGET_AT_FLAGS, TARGET_AT_ENTRY, TARGET_AT_UID, TARGET_AT_EUID)
+	(TARGET_AT_GID, TARGET_AT_EGID, TARGET_AT_HWCAP)
+	(TARGET_AT_CLKTCK): Remove redundant macros.
+	(AUX_ENT): Adjust to use standard ELF AT_* macros.
+	(AUX_ENTF): Ditto.  Remove always-0 middle argument.  Update all
+	callers.
+	(sim_open): Also pass AT_SECURE.
+
+	* sim-main.h (struct _sim_cpu): New member
+	set_target_thread_data.
+	* crisv32f.c (CRIS_TLS_REGISTER): Define.
+	* crisv10f.c: Ditto.
+	* cris-tmpl.c (MY (set_target_thread_data)): New function.
+	(MY (f_specific_init)): Set new _sim_cpu member to new function.
+	* traps.c (TARGET_SYS_set_thread_area): Define.
+	(cris_break_13_handler) <case TARGET_SYS_set_thread_area>: New
+	case.
+
+	* traps.c (TARGET_SYS_exit_group): Define.
+	(cris_break_13_handler): Handle it like the exit for the last
+	thread.
+
+	* traps.c (TARGET_UTSNAME): Update to 2009-01-01.
+	(TARGET_EPOCH): Update to match TARGET_UTSNAME.  Correct comment.
+	(cris_break_13_handler) <case TARGET_SYS_uname>: Update to
+	2.6.27.  Set machine field to the BFD printable name of the
+	machine.
+
+	* traps.c (TARGET_MAP_DENYWRITE): Define.
+	(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle
+	TARGET_MAP_DENYWRITE.
+
+	* traps.c (TARGET_SYS_access, TARGET_R_OK, TARGET_W_OK)
+	(TARGET_X_OK, TARGET_F_OK): Define.
+	(cris_break_13_handler) <case TARGET_SYS_access>: New case.
+
+	* semcrisv32f-switch.c: Regenerate.
+
+2008-12-30  Hans-Peter Nilsson  <hp@axis.com>
+
+	* sim-if.c (sim_open): If sim_analyze_program fails, emit
+	just a short CRIS-specific notice.  Tweak the wording for a
+	failing architecture test.
+
+	* traps.c (TARGET_SYS_writev): New macro.
+	(is_mapped_only, cris_dump_map): New functions.
+	(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle more flags
+	and prot combinations and a non-zero page-offset.  If
+	TARGET_MAP_FIXED, unmap pages before mapping them.
+	<case TARGET_SYS_mprotect>: When checking, allow any length
+	argument.  Don't actually do anything.
+	<case TARGET_SYS_writev>: New case.
+
+	* Makefile.in (SIM_OBJS): Remove sim-hload.o.
+	* sim-if.c: Include elf-bfd.h.
+	(struct progbounds): New members end_loadmem, start_nonloadmem.
+	(xprintf, eprintf): New functions, copied from common/sim-load.c.
+	(cris_load_elf_file, sim_load, cris_get_progbounds): New functions.
+	(get_progbounds_iterator): Renamed from get_progbounds.  Make
+	static.  Update head comment.  Set new struct progbounds members.
+	(exec_load_addr, interp_load_addr, interp_start_addr): New static
+	variables.
+	(aux_ent_phdr, aux_ent_phent, aux_ent_phnum, aux_ent_base)
+	(aux_ent_entry, cris_write_interp, cris_handle_interpreter): New
+	functions.
+	(sim_open): New constant array auxv_entries.  Rewrite AUX_ENT
+	handling to use auxv_entries.  Improve error message and checking
+	for invalid programs.  Use new variable abfd for the program
+	instead of for each access reaching into sd to get it.
+	(sim_create_inferior): If non-zero, use interp_start_addr instead
+	of the program start address.
+	(cris_disassemble_insn): Remove incorrect and unclear, supposedly
+	stale comment.  Always specify little-endian.
+
+2008-07-11  Hans-Peter Nilsson  <hp@axis.com>
+
+	* configure: Regenerate to track ../common/common.m4 changes.
+	* config.in: Ditto.
+
+2008-06-06  Vladimir Prus  <vladimir@codesourcery.com>
+	    Daniel Jacobowitz  <dan@codesourcery.com>
+	    Joseph Myers  <joseph@codesourcery.com>
+
+	* configure: Regenerate.
+
+2007-10-22  Hans-Peter Nilsson  <hp@axis.com>
+
+	* arch.c, arch.h, cpuall.h, cpuv10.c,
+	cpuv10.h, cpuv32.c, cpuv32.h, cris-desc.c,
+	cris-desc.h, cris-opc.h, decodev10.c,
+	decodev10.h, decodev32.c, decodev32.h,
+	modelv10.c, modelv32.c, semcrisv10f-switch.c,
+	semcrisv32f-switch.c: Regenerate.
+
+2007-02-20  Hans-Peter Nilsson  <hp@axis.com>
+
+	* traps.c (dump_statistics): Change format for cycle numbers
+	to %llu and cast parameters to unsigned long long.
+
+2006-10-02  Edgar E. Iglesias  <edgar@axis.com>
+	    Hans-Peter Nilsson  <hp@axis.com>
+
+	* cris-sim.h (enum cris_unknown_syscall_action_type)
+	(cris_unknown_syscall_action): Declare.
+	* sim-if.c (cris_unknown_syscall_action): Define.
+	(cris_options): Add cris-unknown-syscall option.
+	(cris_option_handler): Correct comment about and error message for
+	invalid --cris-cycles argument.  Handle --cris-unknown-syscall.
+	* traps.c: Include stdarg.h
+	(cris_unknown_syscall): New function.
+	(cris_break_13_handler): Instead of sim_io_eprintf and
+	sim_engine_halt, call cris_unknown_syscall to handle more or less
+	unknown syscalls.  Adjust code as necessary to handle return
+	value.
+
+2006-09-30  Hans-Peter Nilsson  <hp@axis.com>
+
+	* traps.c (TARGET_PIPE_BUF): New macro.
+	(cris_pipe_empty): Correct initialization of "remaining".  Only
+	adjust the "write" return value if more than TARGET_PIPE_BUF bytes
+	are written.
+
+2006-09-29  Hans-Peter Nilsson  <hp@axis.com>
+
+	* configure.ac: Check for limits.h and sys/param.h.
+	* configure, config.in: Rebuild.
+	* traps.c (SIM_PATHMAX): New macro.
+	(cris_break_13_handler): Use SIM_PATHMAX, not MAXPATHLEN.
+
+2006-06-05  Daniel Jacobowitz  <dan@codesourcery.com>
+
+	* configure: Regenerated.
+
+2006-05-31  Daniel Jacobowitz  <dan@codesourcery.com>
+
+	* configure: Regenerated.
+
+2006-04-08  Hans-Peter Nilsson  <hp@axis.com>
+
+	* crisv32f.c (MY (deliver_interrupt)): Set CCS to new_ccs.
+
+2006-04-03  Hans-Peter Nilsson  <hp@axis.com>
+
+	* dv-cris.c, dv-rv.c, rvdummy.c: New files.
+	* Makefile.in (CONFIG_DEVICES): Remove redundant setting.
+	(dv-cris.o, dv-rv.o rvdummy$(EXEEXT), rvdummy.o): New rules.
+	(all): Depend on rvdummy$(EXEEXT).
+	* configure.ac: Call SIM_AC_OPTION_WARNINGS.  Check for
+	sys/socket.h and sys/select.h.  Call SIM_AC_OPTION_HARDWARE,
+	default off.
+	* configure: Regenerate.
+	* cris-sim.h (cris_have_900000xxif): Declare here.
+	(enum cris_interrupt_type, crisv10deliver_interrupt)
+	(crisv32deliver_interrupt: New declarations.
+	* cris-tmpl.c [WITH_HW] (MY (f_model_insn_after)): Call
+	sim_events_tickn and set state-events member work_pending when it's
+	time for the next event.
+	[WITH_HW] (MY (f_specific_init)): Set CPU-model-specific
+	interrupt-delivery function.
+	* crisv10f.c (MY (deliver_interrupt)): New function.
+	* crisv32f.c (MY (deliver_interrupt)): New function.
+	* devices.c: Include hw-device.h.
+	(device_io_read_buffer) [WITH_HW]: Call hw_io_read_buffer.
+	(device_io_write_buffer): Only perform 0x900000xx-functions if
+	cris_have_900000xxif is nonzero.  Else if WITH_HW defined,
+	call hw_io_write_buffer.  Add return 0 last in function.
+	* sim-if.c (cris_have_900000xxif): Now global.
+	(sim_open) [WITH_HW]: Clear deliver_interrupt cpu member.
+	Force "-model" option, effectively.
+	* sim-main.h (cris_interrupt_delivery_fn): New type.
+	(struct _sim_cpu) [WITH_HW]: New member deliver_interrupt.
+
+2006-04-02  Hans-Peter Nilsson  <hp@axis.com>
+
+	* Makefile.in (CRISV10F_OBJS): Remove semcrisv10f-switch.o.
+	(CRISV32F_OBJS): Remove semcrisv32f-switch.o.
+	(semcrisv10f-switch.o, semcrisv32f-switch.o: Remove dependency rules.
+
+2006-02-23  Hans-Peter Nilsson  <hp@axis.com>
+
+	* traps.c (syscall_map): Remove CB_SYS_time / TARGET_SYS_time
+	mapping.
+	(cris_break_13_handler) <case TARGET_SYS_time>: New case.
+
+2006-01-10  Hans-Peter Nilsson  <hp@axis.com>
+
+	* cris-tmpl.c (MY (f_model_insn_before)): Only display basic
+	cycle count for the current insn.
+
+2005-12-06  Hans-Peter Nilsson  <hp@axis.com>
+
+	* cpuv10.h, cpuv32.h, cris-desc.c, cris-opc.h,
+	decodev10.c, decodev10.h, decodev32.c,
+	decodev32.h, modelv10.c, modelv32.c,
+	semcrisv10f-switch.c, semcrisv32f-switch.c: Regenerate.
+
+2005-12-05  Hans-Peter Nilsson  <hp@axis.com>
+
+	* arch.c, arch.h, cpuall.h, cpuv10.c,
+	cpuv10.h, cpuv32.c, cpuv32.h, cris-desc.c,
+	cris-desc.h, cris-opc.h, decodev10.c,
+	decodev10.h, decodev32.c, decodev32.h,
+	modelv10.c, modelv32.c, semcrisv10f-switch.c,
+	semcrisv32f-switch.c: Regenerate.
+
+2005-11-20  Hans-Peter Nilsson  <hp@axis.com>
+
+	* traps.c (TARGET_O_RDONLY, TARGET_O_WRONLY): Define.
+	(open_map): Use TARGET_O_ACCMODE, TARGET_O_RDONLY and
+	TARGET_O_WRONLY.
+	(cris_break_13_handler) <case TARGET_SYS_fcntl>: Add support for
+	F_GETFL on fd 0, 1 and 2.
+
+2005-11-17  Hans-Peter Nilsson  <hp@axis.com>
+
+	* sim-main.h (struct _sim_cpu): New members last_syscall,
+	last_open_fd, last_open_flags.
+	* traps.c: Don't include targ-vals.h.
+	(TARGET_O_ACCMODE): Define.
+	(cris_break_13_handler): Set new _sim_cpu members.
+	<case TARGET_SYS_fcntl>: Support special case of F_GETFL.
+	Rearrange code as switch.  Emit "unimplemented" abort for
+	unimplemented fcntl calls.
+
+	* traps.c (TARGET_SYS_stat): Define.
+	(syscall_stat32_map): Add entry for TARGET_SYS_stat.
+	(cris_break_13_handler) <case TARGET_SYS_stat>: New case.
+
+2005-11-16  Hans-Peter Nilsson  <hp@axis.com>
+
+	* cris-tmpl.c (MY (f_model_insn_before)): Make sure only the
+	low 32 bits are used after an unsigned long cast.
+
+2005-05-28  Hans-Peter Nilsson  <hp@axis.com>
+
+	* Makefile.in (stamp-v32fmloop): Depend on stamp-v10fmloop.
+
+2005-04-18  Hans-Peter Nilsson  <hp@axis.com>
+
+	* traps.c (cris_break_13_handler) <case TARGET_SYS_mmap2>:
+	For ((len & 8191) != 0 && fd == (USI) -1), don't say this isn't
+	implemented.  In call to create_map, pad length argument to 8k.
+
+2005-03-24  Hans-Peter Nilsson  <hp@axis.com>
+
+	* Makefile.in (stamp-v10fcpu, stamp-v32fcpu): Add kludge to
+	include cgen-ops.h in decodev10.c and decodev32.c.
+	* sim-main.h: Don't include cgen-ops.h here.
+	* arch.c, arch.h, cpuall.h, cpuv10.c,
+	cpuv10.h, cpuv32.c, cpuv32.h, cris-desc.c,
+	cris-desc.h, cris-opc.h, decodev10.c,
+	decodev10.h, decodev32.c, decodev32.h,
+	modelv10.c, modelv32.c, semcrisv10f-switch.c,
+	semcrisv32f-switch.c: Regenerate.
+
+	* traps.c (cris_break_13_handler) <case
+	TARGET_SYS_rt_sigaction>: Rename sa_handler, sa_flags,
+	sa_restorer, sa_mask_low, sa_mask_high to target_sa_handler etc.
+
+2005-03-23  Mark Kettenis  <kettenis@gnu.org>
+
+	* configure: Regenerate.
diff --git a/sim/pru/ChangeLog b/sim/pru/ChangeLog
index bccc3efd531..4bcb118f8ef 100644
--- a/sim/pru/ChangeLog
+++ b/sim/pru/ChangeLog
@@ -1,3 +1,17 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2020-11-12  Dimitar Dimitrov  <dimitar@dinux.eu>
+
+	* pru.h (RS1SEL): New macro.
+	(RS1_WIDTH): New macro.
+	* pru.isa: Describe the LMBD instruction.
+
 2019-09-23  Dimitar Dimitrov  <dimitar@dinux.eu>
 
 	* Makefile.in: New file.
diff --git a/sim/m32r/ChangeLog b/sim/m32r/ChangeLog
index 5f1b216cc07..4529ec1c25c 100644
--- a/sim/m32r/ChangeLog
+++ b/sim/m32r/ChangeLog
@@ -1,3 +1,25 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2020-11-12  Nick Clifton  <nickc@redhat.com>
+
+	* m32r-sim.h (m32rbf_h_accum_get_handler): Always provide a
+	prototype for this function.
+	(m32rbf_h_accum_set_handler): Likewise.
+	(m32r2f_h_accums_get_handler): Prototype.
+	(m32r2f_h_accums_set_handler): Prototype.
+
+2020-09-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* m32r.c (m32rbf_register_size): New function.
+	(m32rbf_fetch_register): Use new function.
+	(m32rbf_store_register): Likewise.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/or1k/ChangeLog b/sim/or1k/ChangeLog
new file mode 100644
index 00000000000..7c62b642792
--- /dev/null
+++ b/sim/or1k/ChangeLog
@@ -0,0 +1,56 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2019-06-13  Stafford Horne  <shorne@gmail.com>
+
+	* cpu.c: Regenerate.
+	* cpu.h: Regenerate.
+	* decode.c: Regenerate.
+	* decode.h: Regenerate.
+	* model.c: Regenerate.
+	* sem-switch.c: Regenerate.
+	* sem.c: Regenerate.
+
+2018-10-05  Stafford Horne  <shorne@gmail.com>
+
+	* cpu.h: Regenerate.
+	* decode.c: Regenerate.
+	* decode.h: Regenerate.
+	* model.c: Regenerate.
+	* sem-switch.c: Regenerate.
+	* sem.c: Regenerate:
+
+2017-12-12  Stafford Horne  <shorne@gmail.com>
+	    Peter Gavin  <pgavin@gmail.com>
+
+	* aclocal.m4: Generated.
+	* config.in: Generated.
+	* configure: Generated.
+
+2017-12-12  Stafford Horne  <shorne@gmail.com>
+	    Peter Gavin  <pgavin@gmail.com>
+
+	* arch.c: Generated.
+	* arch.h: Generated.
+	* cpu.c: Generated.
+	* cpu.h: Generated.
+	* cpuall.h: Generated.
+	* decode.c: Generated.
+	* decode.h: Generated.
+	* model.c: Generated.
+	* sem-switch.c: Generated.
+	* sem.c: Generated.
+
+2017-12-12  Stafford Horne  <shorne@gmail.com>
+	    Peter Gavin  <pgavin@gmail.com>
+
+	* README: New file.
+	* Makefile.in: New file.
+	* configure.ac: New file.
+	* mloop.in: New file.
+	* or1k-sim.h: New file.
+	* or1k.c: New file.
+	* sim-if.c: New file.
+	* sim-main.h: New file.
+	* traps.c: New file.
diff --git a/sim/frv/ChangeLog b/sim/frv/ChangeLog
index 1d73d5d1a74..4a9264be6e3 100644
--- a/sim/frv/ChangeLog
+++ b/sim/frv/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/msp430/ChangeLog b/sim/msp430/ChangeLog
index 0f27982068c..bc5a1e8ae5b 100644
--- a/sim/msp430/ChangeLog
+++ b/sim/msp430/ChangeLog
@@ -1,3 +1,23 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2020-08-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* msp430-sim.c (sim_open): Increase the size of the main memory region
+	to 0xFAC0.
+
+2020-08-05  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* msp430-sim.c (put_op): For unsigned multiplication, explicitly cast
+	operands to the unsigned type before multiplying.
+	* msp430-sim.h (struct msp430_cpu_state): Fix types used to store hwmult
+	operands.
+
 2020-01-22  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
 
 	* msp430-sim.c (msp430_step_once): Ignore the carry flag when executing
diff --git a/sim/ppc/ChangeLog b/sim/ppc/ChangeLog
index ef5fa4d5acf..2d5e70df958 100644
--- a/sim/ppc/ChangeLog
+++ b/sim/ppc/ChangeLog
@@ -1,3 +1,20 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* sim_calls.c (sim_memory_map): Define.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* gen-icache.c, igen.c: Include stdlib.h.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* acinclude.m4 (ACX_BUGURL): Change http:// to https://.
+	* configure: Regenerate.
+
+2020-10-20  Dr. David Alan Gilbert  <dgilbert@redhat.com>
+
+	* emul_netbsd.c (do_sigprocmask): Fix printf format.
+
 2020-07-03  Sebastian Huber  <sebastian.huber@embedded-brains.de>
 
 	* ld-insn.h (last_model, last_model_data, last_model_function,
@@ -24,6 +41,10 @@
 	PR build/24572:
 	* Makefile.in (install-strip): New target.
 
+2019-09-20  Alan Modra  <amodra@gmail.com>
+
+	* emul_generic.c (emul_add_tree_options): Delete old bfd code.
+
 2019-01-26  Tom Tromey  <tom@tromey.com>
 
 	* Makefile.in (version.c): Use sim's create-version.sh.
diff --git a/sim/m68hc11/ChangeLog b/sim/m68hc11/ChangeLog
index 9dbcc332b1a..5f57a70710a 100644
--- a/sim/m68hc11/ChangeLog
+++ b/sim/m68hc11/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/testsuite/ChangeLog b/sim/testsuite/ChangeLog
index 3be4a00c5c7..4767062a9bf 100644
--- a/sim/testsuite/ChangeLog
+++ b/sim/testsuite/ChangeLog
@@ -1,3 +1,30 @@
+2021-01-05  Mike Frysinger  <vapier@gentoo.org>
+
+	* sim/fr30/: Delete.
+
+2021-01-05  Mike Frysinger  <vapier@gentoo.org>
+
+	* common/Make-common.in: Delete.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2020-10-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* configure: Regnerate.
+	* configure.ac (AC_CONFIG_AUX_DIR): Update.
+
+2020-08-04  David Faust  <david.faust@oracle.com>
+	    Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* configure: Regenerate.
+	* sim/bpf: New directory.
+
+2020-07-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure: Re-generate.
+
 2019-12-19  Tom Tromey  <tromey@adacore.com>
 
 	PR build/24572:
diff --git a/sim/ft32/ChangeLog b/sim/ft32/ChangeLog
index b2b84efd443..48235fb6916 100644
--- a/sim/ft32/ChangeLog
+++ b/sim/ft32/ChangeLog
@@ -1,3 +1,19 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2017-11-01  James Bowman  <james.bowman@ftdichip.com>
+
+	* interp.c (step_once): Add ft32 shortcode decoder.
+
+2017-10-12  James Bowman  <james.bowman@ftdichip.com>
+
+	* interp.c (step_once): Replace FT32_FLD_K8 with K15.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/d10v/ChangeLog b/sim/d10v/ChangeLog
index c1551b4efd0..a53becd6558 100644
--- a/sim/d10v/ChangeLog
+++ b/sim/d10v/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/igen/ChangeLog b/sim/igen/ChangeLog
index f3f50f4d3fa..bf2ee3e912e 100644
--- a/sim/igen/ChangeLog
+++ b/sim/igen/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* gen-icache.c, igen.c: Include stdlib.h.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2020-07-03  Sebastian Huber  <sebastian.huber@embedded-brains.de>
 
 	PR sim/26194
diff --git a/sim/mn10300/ChangeLog b/sim/mn10300/ChangeLog
index a6357a8ae35..8f3c1111795 100644
--- a/sim/mn10300/ChangeLog
+++ b/sim/mn10300/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/rx/ChangeLog b/sim/rx/ChangeLog
index df6b30714b8..9aa0a9661bb 100644
--- a/sim/rx/ChangeLog
+++ b/sim/rx/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/avr/ChangeLog b/sim/avr/ChangeLog
index b199c280515..810bd5864ad 100644
--- a/sim/avr/ChangeLog
+++ b/sim/avr/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
@@ -278,3 +286,26 @@
 2010-04-14  Mike Frysinger  <vapier@gentoo.org>
 
 	* interp.c (sim_write): Add const to buffer arg.
+
+2009-11-12  Tristan Gingold  <gingold@adacore.com>
+
+	* interp.c (sim_write): Allow byte access.
+	(sim_read): Ditto.
+
+2009-11-12  Tristan Gingold  <gingold@adacore.com>
+
+	* interp.c (sim_load): Clear memory before loading.
+
+2009-11-09  Tristan Gingold  <gingold@adacore.com>
+
+	* interp.c (sim_resume): Fix typo for OP_ret.
+
+2009-10-22  Tristan Gingold  <gingold@adacore.com>
+
+	* interp.c (sim_stop): Return 1.
+
+2009-04-27  Tristan Gingold  <gingold@adacore.com>
+
+	* interp.c, Makefile.in, configure.ac: New files.
+	* config.in: New file, generated by autoheader.
+	* configure: New file generated by autoconf.
diff --git a/sim/arm/ChangeLog b/sim/arm/ChangeLog
index d5f96678cd9..560632a0a87 100644
--- a/sim/arm/ChangeLog
+++ b/sim/arm/ChangeLog
@@ -1,3 +1,40 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* wrapper.c: Include stdlib.h.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* iwmmxt.c: Include stdlib.h.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2020-12-15  Nick Clifton  <nickc@redhat.com>
+
+	* wrapper.c (sim_create_inferior): Accept some more ARM machine numbers.
+
+2020-12-15  Jens Bauer <jens@plustv.dk>
+
+	* armemu.c (handle_v6_insn): Add support for SDIV and UDIV.
+	* thumbemu.c (handle_T2_insn): Likewise.
+
+2020-10-20  Dr. David Alan Gilbert  <dgilbert@redhat.com>
+
+	* armos.c (SWIread): Fix printf format.
+
+2020-08-13  Luis Machado  <luis.machado@linaro.org>
+
+	PR sim/26365
+
+	* wrapper.c (sim_target_parse_command_line): Free discarded argv
+	entries.
+	(sim_open): Use a duplicate of argv instead of the original argv.
+
 2020-01-17  Christian Biesinger  <cbiesinger@google.com>
 
 	* iwmmxt.c: Fix spelling error (seperate).
diff --git a/sim/mcore/ChangeLog b/sim/mcore/ChangeLog
index b2a9731ee52..b0b065455f7 100644
--- a/sim/mcore/ChangeLog
+++ b/sim/mcore/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/cr16/ChangeLog b/sim/cr16/ChangeLog
index c61b847a400..1de8e15b55e 100644
--- a/sim/cr16/ChangeLog
+++ b/sim/cr16/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/iq2000/ChangeLog b/sim/iq2000/ChangeLog
index 5303d2ca747..ba5bac6736c 100644
--- a/sim/iq2000/ChangeLog
+++ b/sim/iq2000/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/lm32/ChangeLog b/sim/lm32/ChangeLog
index d542e0d2ef9..32052351ef8 100644
--- a/sim/lm32/ChangeLog
+++ b/sim/lm32/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/mips/ChangeLog b/sim/mips/ChangeLog
index 31f55703933..17d5ab7d91a 100644
--- a/sim/mips/ChangeLog
+++ b/sim/mips/ChangeLog
@@ -1,3 +1,23 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2020-12-31  Pavel I. Kryukov  <kryukov@frtk.ru>  (tiny change)
+
+	*  sim-main.c: Include <stdlib.h>.
+
+2020-12-14  Pavel I. Kryukov  <kryukov@frtk.ru>  (tiny change)
+
+	* cp1.c: Include <stdlib.h>.
+
+2020-07-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure: Re-generate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/v850/ChangeLog b/sim/v850/ChangeLog
index b0265049cc2..fe9bed958fb 100644
--- a/sim/v850/ChangeLog
+++ b/sim/v850/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/bpf/ChangeLog b/sim/bpf/ChangeLog
new file mode 100644
index 00000000000..75e115f76e7
--- /dev/null
+++ b/sim/bpf/ChangeLog
@@ -0,0 +1,58 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2020-11-01  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-09-08  David Faust  <david.faust@oracle.com>
+
+	* sem-be.c: Regenerate.
+	* sem-le.c: Likewise.
+
+2020-09-03  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* bpf.c: Include bpf-helpers.h.
+	* bpf-helpers.h: Provide a prototype for bpf_trace_printk.
+	* configure.ac: Set simulator bitsize to 64.
+	* configure (includedir): Regenerate.
+	* sim-if.c: Include stdlib.h.
+	* traps.c: Likewise.
+
+2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+	    David Faust <david.faust@oracle.com>
+
+	* arch.c: Likewise.
+	* arch.h: Likewise.
+	* cpu.c: Likewise.
+	* cpu.h: Likewise.
+	* cpuall.h: Likewise.
+	* decode-be.c: Likewise.
+	* decode-be.h: Likewise.
+	* decode-le.c: Likewise.
+	* decode-le.h: Likewise.
+	* defs-be.h: Likewise.
+	* defs-le.h: Likewise.
+	* sem-be.c: Likewise.
+	* sem-le.c: Likewise.
+
+2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+	    David Faust <david.faust@oracle.com>
+
+	* Makefile.in: New file.
+	* bpf-helpers.c: Likewise.
+	* bpf-helpers.def: Likewise.
+	* bpf-helpers.h: Likewise.
+	* bpf-sim.h: Likewise.
+	* bpf.c: Likewise.
+	* config.in: Likewise.
+	* configure.ac: Likewise.
+	* decode.h: Likewise.
+	* eng.h: Likewise.
+	* mloop.in: Likewise.
+	* sim-if.c: Likewise.
+	* sim-main.h: Likewise.
+	* traps.c: Likewise.
+	* configure: Generate.
+	* aclocal.m4: Likewise.
diff --git a/sim/m32c/ChangeLog b/sim/m32c/ChangeLog
index 513b7953e6e..1179044b5f4 100644
--- a/sim/m32c/ChangeLog
+++ b/sim/m32c/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
@@ -265,6 +273,13 @@
 	(m32c_sim_restore_console): Disable if no termios.
 	(mem_get_byte): Disable console input if no termios.
 
+2009-05-08  Kevin Buettner  <kevinb@redhat.com>
+
+	* gdb-if.c (m32c_signal_to_host): Rename to
+	m32c_signal_to_target.  Change signal return values from SIGILL,
+	SIGTRAP, SIGSEGV, etc. to TARGET_SIGNAL_ILL, TARGET_SIGNAL_TRAP,
+	TARGET_SIGNAL_SEGV, etc.  Fix all callers.
+
 2009-01-06  Joel Sherrill <joel.sherrill@oarcorp.com>
 
 	* r8c.opc, m32c.opc: Add parentheses to remove warnings.
@@ -402,5 +417,3 @@
 	* syscalls.h: New.
 	* trace.c: New.
 	* trace.h: New.
-
-
diff --git a/sim/microblaze/ChangeLog b/sim/microblaze/ChangeLog
index c0b07f9a130..793e46c313b 100644
--- a/sim/microblaze/ChangeLog
+++ b/sim/microblaze/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/rl78/ChangeLog b/sim/rl78/ChangeLog
index b995aeb36a4..38ec393d27f 100644
--- a/sim/rl78/ChangeLog
+++ b/sim/rl78/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/sh/ChangeLog b/sim/sh/ChangeLog
index 9e75fb92d1a..124a216fd06 100644
--- a/sim/sh/ChangeLog
+++ b/sim/sh/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/bfin/ChangeLog b/sim/bfin/ChangeLog
index 8aada122aa2..12127ecbf7c 100644
--- a/sim/bfin/ChangeLog
+++ b/sim/bfin/ChangeLog
@@ -1,3 +1,28 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* machs.c: Include stdlib.h.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* dv-bfin_dma.c: Include stdlib.h.
+
+2021-01-02  Mike Frysinger  <vapier@gentoo.org>
+
+	* interp.c: Change ALIGN to align_up.
+	* sim-main.h (ALIGN): Delete
+
+2020-08-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure.ac: Include config/pkg.m4.
+
+2020-07-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aclocal.m4, configure: Re-generate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/ChangeLog b/sim/ChangeLog
index 72d4d4eb36b..515e941bbdd 100644
--- a/sim/ChangeLog
+++ b/sim/ChangeLog
@@ -1,3 +1,20 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* README-HACKING (C Language Assumptions): Require C11 compiler.
+
+2020-09-03  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* configure.ac: Do not configure sim/testsuite nor sim/igen if the
+	primary target doesn't have a simulator.
+	* configure: Regenerate.
+
+2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+	    David Faust <david.faust@oracle.com>
+
+	* configure.tgt (sim_arch): Add entry for bpf-*-*.
+	* configure: Regenerate.
+	* MAINTAINERS: Add maintainer for the BPF simulator.
+
 2019-12-19  Tom Tromey  <tromey@adacore.com>
 
 	PR build/24572:
@@ -9,10 +26,6 @@
 	* configure: Regenerated.
 	* configure.tgt: Add PRU.
 
-2019-09-20  Alan Modra  <amodra@gmail.com>
-
-	* ppc/emul_generic.c (emul_add_tree_options): Delete old bfd code.
-
 2019-09-18  Alan Modra  <amodra@gmail.com>
 
 	* common/sim-load.c, * common/sim-utils.c, * cris/sim-if.c,
@@ -21,16 +34,6 @@
 	* rl78/load.c, * rl78/trace.c, * rx/gdb-if.c, * rx/load.c,
 	* rx/trace.c: Update throughout for bfd section macro changes.
 
-2019-06-13  Stafford Horne  <shorne@gmail.com>
-
-	* or1k/cpu.c: Regenerate.
-	* or1k/cpu.h: Regenerate.
-	* or1k/decode.c: Regenerate.
-	* or1k/decode.h: Regenerate.
-	* or1k/model.c: Regenerate.
-	* or1k/sem-switch.c: Regenerate.
-	* or1k/sem.c: Regenerate.
-
 2019-02-28  Joel Brobecker  <brobecker@adacore.com>
 
 	* MAINTAINERS: Move Mike Frysinger to past maintainers' section.
@@ -55,15 +58,6 @@
 	* or1k/configure: Regenerate.
 	* sh64/configure: Regenerate.
 
-2018-10-05  Stafford Horne  <shorne@gmail.com>
-
-	* or1k/cpu.h: Regenerate.
-	* or1k/decode.c: Regenerate.
-	* or1k/decode.h: Regenerate.
-	* or1k/model.c: Regenerate.
-	* or1k/sem-switch.c: Regenerate.
-	* or1k/sem.c: Regenerate:
-
 2018-07-20  Maciej W. Rozycki  <macro@mips.com>
 
 	* MAINTAINERS: Update my e-mail address, downgrade to MIPS I-IV
@@ -90,45 +84,11 @@
 	    Peter Gavin  <pgavin@gmail.com>
 
 	* configure: Regenerated.
-	* or1k/aclocal.m4: Generated.
-	* or1k/config.in: Generated.
-	* or1k/configure: Generated.
-
-2017-12-12  Stafford Horne  <shorne@gmail.com>
-	    Peter Gavin  <pgavin@gmail.com>
-
-	* or1k/arch.c: Generated.
-	* or1k/arch.h: Generated.
-	* or1k/cpu.c: Generated.
-	* or1k/cpu.h: Generated.
-	* or1k/cpuall.h: Generated.
-	* or1k/decode.c: Generated.
-	* or1k/decode.h: Generated.
-	* or1k/model.c: Generated.
-	* or1k/sem-switch.c: Generated.
-	* or1k/sem.c: Generated.
 
 2017-12-12  Stafford Horne  <shorne@gmail.com>
 	    Peter Gavin  <pgavin@gmail.com>
 
 	* configure.tgt: Add or1k sim.
-	* or1k/README: New file.
-	* or1k/Makefile.in: New file.
-	* or1k/configure.ac: New file.
-	* or1k/mloop.in: New file.
-	* or1k/or1k-sim.h: New file.
-	* or1k/or1k.c: New file.
-	* or1k/sim-if.c: New file.
-	* or1k/sim-main.h: New file.
-	* or1k/traps.c: New file.
-
-2017-11-01  James Bowman  <james.bowman@ftdichip.com>
-
-	* ft32/interp.c (step_once): Add ft32 shortcode decoder.
-
-2017-10-12  James Bowman  <james.bowman@ftdichip.com>
-
-	* ft32/interp.c (step_once): Replace FT32_FLD_K8 with K15.
 
 2017-10-12  James Bowman  <james.bowman@ftdichip.com>
 
@@ -493,32 +453,12 @@
 
 	* README-HACKING: Add more sections.
 
-2010-02-11  Doug Evans  <dje@sebabeach.org>
-
-	* cris/cpuv10.h, * cris/cpuv32.h, * cris/cris-desc.c,
-	* cris/cris-desc.h, * cris/decodev10.c, * cris/decodev32.c,
-	* cris/modelv10.c, * cris/modelv32.c, * cris/semcrisv10f-switch.c,
-	* cris/semcrisv32f-switch.c: Regenerate.
-
 2010-01-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
 
 	* avr/configure: Regenerate.
 	* cris/configure: Regenerate.
 	* microblaze/configure: Regenerate.
 
-2010-01-02  Doug Evans  <dje@sebabeach.org>
-
-	* cris/arch.c, * cris/arch.h, * cris/cpuall.h, * cris/cpuv10.c,
-	* cris/cpuv10.h, * cris/cpuv32.c, * cris/cpuv32.h, * cris/cris-desc.c,
-	* cris/cris-desc.h, * cris/cris-opc.h, * cris/decodev10.c,
-	* cris/decodev10.h, * cris/decodev32.c, * cris/decodev32.h,
-	* cris/modelv10.c, * cris/modelv32.c, * cris/semcrisv10f-switch.c,
-	* cris/semcrisv32f-switch.c: Regenerate, update copyright year.
-
-2010-01-01  Doug Evans  <dje@sebabeach.org>
-
-	* cris/mloop.in: Fix copyright year update snafu.
-
 2009-11-24  Joel Brobecker  <brobecker@adacore.com>
 
 	* common/aclocal.m4: Add include of ../../config/zlib.m4.
@@ -538,54 +478,6 @@
 	* configure.ac: Add entry for Renesas RX.
 	* configure: Regenerate.
 
-2009-11-22  Doug Evans  <dje@sebabeach.org>
-
-	* cris/cpuall.h: Regenerate.
-	* cris/cpuv10.h: Regenerate.
-	* cris/cpuv32.h: Regenerate.
-	* cris/decodev10.c: Regenerate.
-	* cris/decodev10.h: Regenerate.
-	* cris/decodev32.c: Regenerate.
-	* cris/decodev32.h: Regenerate.
-
-2009-11-12  Tristan Gingold  <gingold@adacore.com>
-
-	* avr/interp.c (sim_write): Allow byte access.
-	(sim_read): Ditto.
-
-2009-11-12  Tristan Gingold  <gingold@adacore.com>
-
-	* avr/interp.c (sim_load): Clear memory before loading.
-
-2009-11-09  Tristan Gingold  <gingold@adacore.com>
-
-	* avr/interp.c (sim_resume): Fix typo for OP_ret.
-
-2009-10-23  Doug Evans  <dje@sebabeach.org>
-
-	* cris/arch.c: Regenerate.
-	* cris/arch.h: Regenerate.
-	* cris/cpuall.h: Regenerate.
-	* cris/cpuv10.c: Regenerate.
-	* cris/cpuv10.h: Regenerate.
-	* cris/cpuv32.c: Regenerate.
-	* cris/cpuv32.h: Regenerate.
-	* cris/cris-desc.c: Regenerate.
-	* cris/cris-desc.h: Regenerate.
-	* cris/cris-opc.h: Regenerate.
-	* cris/decodev10.c: Regenerate.
-	* cris/decodev10.h: Regenerate.
-	* cris/decodev32.c: Regenerate.
-	* cris/decodev32.h: Regenerate.
-	* cris/modelv10.c: Regenerate.
-	* cris/modelv32.c: Regenerate.
-	* cris/semcrisv10f-switch.c: Regenerate.
-	* cris/semcrisv32f-switch.c: Regenerate.
-
-2009-10-22  Tristan Gingold  <gingold@adacore.com>
-
-	* avr/interp.c (sim_stop): Return 1.
-
 2009-10-16  Doug Evans  <dje@sebabeach.org>
 
 	* MAINTAINERS: Add myself as m32r maintainer.
@@ -643,13 +535,6 @@
 
 	* MAINTAINERS: Orphan ppc.
 
-2009-05-08  Kevin Buettner  <kevinb@redhat.com>
-
-	* m32c/gdb-if.c (m32c_signal_to_host): Rename to
-	m32c_signal_to_target.  Change signal return values from SIGILL,
-	SIGTRAP, SIGSEGV, etc. to TARGET_SIGNAL_ILL, TARGET_SIGNAL_TRAP,
-	TARGET_SIGNAL_SEGV, etc.  Fix all callers.
-
 2009-04-30  Anthony Green  <green@moxielogic.com>
 
 	* MAINTAINERS: Add myself for the moxie port.
@@ -660,9 +545,6 @@
 2009-04-27  Tristan Gingold  <gingold@adacore.com>
 
 	* avr: New directory.
-	* avr/interp.c, avr/Makefile.in, avr/configure.ac: New files.
-	* avr/config.in: New file, generated by autoheader.
-	* avr/configure: New file generated by autoconf.
 	* configure.ac: Add avr.
 	* configure: Regenerated.
 
@@ -671,121 +553,6 @@
 	* Makefile.in: Add dummy install-pdf, html, and
 	install-html targets.
 
-2009-01-18  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/sim-if.c: Include errno.h.
-	(cris_start_address, cris_program_offset): New variables.
-	(OPTION_CRIS_PROGRAM_OFFSET, OPTION_CRIS_STARTADDR): New option
-	enums.
-	(cris_options): New options --cris-program-offset and
-	--cris-start-address.
-	(cris_option_handler): Handle new options.
-	(cris_program_offset_write, cris_set_section_offset_iterator)
-	(cris_offset_sections, cris_offset_sections): New functions.
-	(sim_load): Use cris_program_offset_write as function argument to
-	cris_load_elf_file, not sim_write.
-	(struct offsetinfo): New struct.
-	(cris_handle_interpreter): Fix typo in comment.
-	(sim_open): Call cris_offset_sections as soon as the bfd of the
-	infile is available.  Gate bfd validity checks on abfd non-NULL.
-	(sim_create_inferior): Let cris_start_address when != -1 override
-	other start-address choices.
-
-2009-01-06  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/traps.c (abort): Define to call sim_io_error.
-	(create_map): Make -1 imply a non-fixed address, not 0.  All
-	callers changed.  Only prefer the next higher unmapped address if
-	the last mapped address is no less than 0x40000000.  Check that
-	the address to be mapped is not already mapped.  Update head
-	comment.
-	(unmap_pages): Don't call abort when recursive call fails, just
-	note and return an error if a page in the range couldn't be unmapped.
-	(cris_bmod_handler, h_supr_set_handler, h_supr_get_handler)
-	(schedule, make_first_thread, cris_pipe_empty): New local variable sd.
-	(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle
-	non-MAP_FIXED argument overlapping existing map.  For MAP_FIXED,
-	don't abort on page not being mapped.  Handle non-anon filemap
-	with length padded to pagesize.
-
-2009-01-03  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/sim-if.c (TARGET_AT_NULL, TARGET_AT_PHDR, TARGET_AT_PHENT)
-	(TARGET_AT_PHNUM, TARGET_AT_PAGESZ, TARGET_AT_BASE)
-	(TARGET_AT_FLAGS, TARGET_AT_ENTRY, TARGET_AT_UID, TARGET_AT_EUID)
-	(TARGET_AT_GID, TARGET_AT_EGID, TARGET_AT_HWCAP)
-	(TARGET_AT_CLKTCK): Remove redundant macros.
-	(AUX_ENT): Adjust to use standard ELF AT_* macros.
-	(AUX_ENTF): Ditto.  Remove always-0 middle argument.  Update all
-	callers.
-	(sim_open): Also pass AT_SECURE.
-
-	* cris/sim-main.h (struct _sim_cpu): New member
-	set_target_thread_data.
-	* cris/crisv32f.c (CRIS_TLS_REGISTER): Define.
-	* cris/crisv10f.c: Ditto.
-	* cris/cris-tmpl.c (MY (set_target_thread_data)): New function.
-	(MY (f_specific_init)): Set new _sim_cpu member to new function.
-	* cris/traps.c (TARGET_SYS_set_thread_area): Define.
-	(cris_break_13_handler) <case TARGET_SYS_set_thread_area>: New
-	case.
-
-	* cris/traps.c (TARGET_SYS_exit_group): Define.
-	(cris_break_13_handler): Handle it like the exit for the last
-	thread.
-
-	* cris/traps.c (TARGET_UTSNAME): Update to 2009-01-01.
-	(TARGET_EPOCH): Update to match TARGET_UTSNAME.  Correct comment.
-	(cris_break_13_handler) <case TARGET_SYS_uname>: Update to
-	2.6.27.  Set machine field to the BFD printable name of the
-	machine.
-
-	* cris/traps.c (TARGET_MAP_DENYWRITE): Define.
-	(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle
-	TARGET_MAP_DENYWRITE.
-
-	* cris/traps.c (TARGET_SYS_access, TARGET_R_OK, TARGET_W_OK)
-	(TARGET_X_OK, TARGET_F_OK): Define.
-	(cris_break_13_handler) <case TARGET_SYS_access>: New case.
-
-	* cris/semcrisv32f-switch.c: Regenerate.
-
-2008-12-30  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/sim-if.c (sim_open): If sim_analyze_program fails, emit
-	just a short CRIS-specific notice.  Tweak the wording for a
-	failing architecture test.
-
-	* cris/traps.c (TARGET_SYS_writev): New macro.
-	(is_mapped_only, cris_dump_map): New functions.
-	(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle more flags
-	and prot combinations and a non-zero page-offset.  If
-	TARGET_MAP_FIXED, unmap pages before mapping them.
-	<case TARGET_SYS_mprotect>: When checking, allow any length
-	argument.  Don't actually do anything.
-	<case TARGET_SYS_writev>: New case.
-
-	* cris/Makefile.in (SIM_OBJS): Remove sim-hload.o.
-	* cris/sim-if.c: Include elf-bfd.h.
-	(struct progbounds): New members end_loadmem, start_nonloadmem.
-	(xprintf, eprintf): New functions, copied from common/sim-load.c.
-	(cris_load_elf_file, sim_load, cris_get_progbounds): New functions.
-	(get_progbounds_iterator): Renamed from get_progbounds.  Make
-	static.  Update head comment.  Set new struct progbounds members.
-	(exec_load_addr, interp_load_addr, interp_start_addr): New static
-	variables.
-	(aux_ent_phdr, aux_ent_phent, aux_ent_phnum, aux_ent_base)
-	(aux_ent_entry, cris_write_interp, cris_handle_interpreter): New
-	functions.
-	(sim_open): New constant array auxv_entries.  Rewrite AUX_ENT
-	handling to use auxv_entries.  Improve error message and checking
-	for invalid programs.  Use new variable abfd for the program
-	instead of for each access reaching into sd to get it.
-	(sim_create_inferior): If non-zero, use interp_start_addr instead
-	of the program start address.
-	(cris_disassemble_insn): Remove incorrect and unclear, supposedly
-	stale comment.  Always specify little-endian.
-
 2008-07-29  Nick Clifton  <nickc@redhat.com>
 
 	* common/genmloop.sh: Add new parameter: -shell to specify the
@@ -802,17 +569,6 @@
 
 	* frv/mloop.in: Add missing start of line comment marker.
 
-2008-07-11  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/configure: Regenerate to track ../common/common.m4 changes.
-	* cris/config.in: Ditto.
-
-2008-06-06  Vladimir Prus  <vladimir@codesourcery.com>
-	    Daniel Jacobowitz  <dan@codesourcery.com>
-	    Joseph Myers  <joseph@codesourcery.com>
-
-	* cris/configure: Regenerate.
-
 2008-05-09  Olivier Hainque  <hainque@adacore.com>
 
 	* ppc/altivec.igen (vperm): Latch inputs into temporaries.
@@ -842,15 +598,6 @@
 	* frv/frv.c (frvbf_cut): Only look at the six LSBs of
 	cut_point.
 
-2007-10-22  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,
-	cris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,
-	cris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,
-	cris/decodev10.h, cris/decodev32.c, cris/decodev32.h,
-	cris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,
-	cris/semcrisv32f-switch.c: Regenerate.
-
 2007-08-24  Joel Brobecker  <brobecker@adacore.com>
 
 	Switch the license of all files explicitly copyright the FSF
@@ -860,11 +607,6 @@
 
 	* Makefile.in: Add dummy "pdf" target.
 
-2007-02-20  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/traps.c (dump_statistics): Change format for cycle numbers
-	to %llu and cast parameters to unsigned long long.
-
 2007-02-16  Thiemo Seufer  <ths@mips.com>
 
 	* Makefile.in (FLAGS_TO_PASS, TARGET_FLAGS_TO_PASS): Add RUNTEST.
@@ -894,54 +636,16 @@
 
 	* MAINTAINERS: Add self as authorized committer for *.
 
-2006-10-02  Edgar E. Iglesias  <edgar@axis.com>
-	    Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/cris-sim.h (enum cris_unknown_syscall_action_type)
-	(cris_unknown_syscall_action): Declare.
-	* cris/sim-if.c (cris_unknown_syscall_action): Define.
-	(cris_options): Add cris-unknown-syscall option.
-	(cris_option_handler): Correct comment about and error message for
-	invalid --cris-cycles argument.  Handle --cris-unknown-syscall.
-	* cris/traps.c: Include stdarg.h
-	(cris_unknown_syscall): New function.
-	(cris_break_13_handler): Instead of sim_io_eprintf and
-	sim_engine_halt, call cris_unknown_syscall to handle more or less
-	unknown syscalls.  Adjust code as necessary to handle return
-	value.
-
 2006-09-30  Daniel Jacobowitz  <dan@codesourcery.com>
 
 	* MAINTAINERS: Add Dave Brolley for sh64.
 
-2006-09-30  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/traps.c (TARGET_PIPE_BUF): New macro.
-	(cris_pipe_empty): Correct initialization of "remaining".  Only
-	adjust the "write" return value if more than TARGET_PIPE_BUF bytes
-	are written.
-
-2006-09-29  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/configure.ac: Check for limits.h and sys/param.h.
-	* cris/configure, cris/config.in: Rebuild.
-	* cris/traps.c (SIM_PATHMAX): New macro.
-	(cris_break_13_handler): Use SIM_PATHMAX, not MAXPATHLEN.
-
 2006-08-08  Joel Sherrill <joel.sherrill@oarcorp.com>
 
 	* configure.ac (sparc-*-rtems*|sparc-*-elf*): Enable erc32 simulator.
 	* Makefile.in (FLAGS_TO_PASS): Include libdir.
 	* configure: Regenerated.
 
-2006-06-05  Daniel Jacobowitz  <dan@codesourcery.com>
-
-	* cris/configure: Regenerated.
-
-2006-05-31  Daniel Jacobowitz  <dan@codesourcery.com>
-
-	* cris/configure: Regenerated.
-
 2006-05-05  Andreas Schwab  <schwab@suse.de>
 
 	* configure.ac (CFLAGS_FOR_BUILD): Set and substitute.
@@ -956,57 +660,10 @@
 	* MAINTAINERS: Add an "Authorized committers" section, and list
 	DJ Delorie for v850.
 
-2006-04-08  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/crisv32f.c (MY (deliver_interrupt)): Set CCS to new_ccs.
-
-2006-04-03  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/dv-cris.c, cris/dv-rv.c, cris/rvdummy.c: New files.
-	* cris/Makefile.in (CONFIG_DEVICES): Remove redundant setting.
-	(dv-cris.o, dv-rv.o rvdummy$(EXEEXT), rvdummy.o): New rules.
-	(all): Depend on rvdummy$(EXEEXT).
-	* cris/configure.ac: Call SIM_AC_OPTION_WARNINGS.  Check for
-	sys/socket.h and sys/select.h.  Call SIM_AC_OPTION_HARDWARE,
-	default off.
-	* cris/configure: Regenerate.
-	* cris/cris-sim.h (cris_have_900000xxif): Declare here.
-	(enum cris_interrupt_type, crisv10deliver_interrupt)
-	(crisv32deliver_interrupt: New declarations.
-	* cris/cris-tmpl.c [WITH_HW] (MY (f_model_insn_after)): Call
-	sim_events_tickn and set state-events member work_pending when it's
-	time for the next event.
-	[WITH_HW] (MY (f_specific_init)): Set CPU-model-specific
-	interrupt-delivery function.
-	* cris/crisv10f.c (MY (deliver_interrupt)): New function.
-	* cris/crisv32f.c (MY (deliver_interrupt)): New function.
-	* cris/devices.c: Include hw-device.h.
-	(device_io_read_buffer) [WITH_HW]: Call hw_io_read_buffer.
-	(device_io_write_buffer): Only perform 0x900000xx-functions if
-	cris_have_900000xxif is nonzero.  Else if WITH_HW defined,
-	call hw_io_write_buffer.  Add return 0 last in function.
-	* cris/sim-if.c (cris_have_900000xxif): Now global.
-	(sim_open) [WITH_HW]: Clear deliver_interrupt cpu member.
-	Force "-model" option, effectively.
-	* cris/sim-main.h (cris_interrupt_delivery_fn): New type.
-	(struct _sim_cpu) [WITH_HW]: New member deliver_interrupt.
-
-2006-04-02  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/Makefile.in (CRISV10F_OBJS): Remove semcrisv10f-switch.o.
-	(CRISV32F_OBJS): Remove semcrisv32f-switch.o.
-	(semcrisv10f-switch.o, semcrisv32f-switch.o: Remove dependency rules.
-
 2006-03-13  DJ Delorie  <dj@redhat.com>
 
 	* MAINTAINERS: Add self as m32c sim maintainer.
 
-2006-02-23  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/traps.c (syscall_map): Remove CB_SYS_time / TARGET_SYS_time
-	mapping.
-	(cris_break_13_handler) <case TARGET_SYS_time>: New case.
-
 2006-01-23  Jim Blandy  <jimb@redhat.com>
 
 	Add simulator for Renesas M32C and M16C.
@@ -1015,59 +672,6 @@
 	* configure.ac: Add entry for Renesas M32C.
 	* configure: Regenerate.
 
-2006-01-10  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/cris-tmpl.c (MY (f_model_insn_before)): Only display basic
-	cycle count for the current insn.
-
-2005-12-06  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/cpuv10.h, cris/cpuv32.h, cris/cris-desc.c, cris/cris-opc.h,
-	cris/decodev10.c, cris/decodev10.h, cris/decodev32.c,
-	cris/decodev32.h, cris/modelv10.c, cris/modelv32.c,
-	cris/semcrisv10f-switch.c, cris/semcrisv32f-switch.c: Regenerate.
-
-2005-12-05  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,
-	cris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,
-	cris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,
-	cris/decodev10.h, cris/decodev32.c, cris/decodev32.h,
-	cris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,
-	cris/semcrisv32f-switch.c: Regenerate.
-
-2005-11-20  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/traps.c (TARGET_O_RDONLY, TARGET_O_WRONLY): Define.
-	(open_map): Use TARGET_O_ACCMODE, TARGET_O_RDONLY and
-	TARGET_O_WRONLY.
-	(cris_break_13_handler) <case TARGET_SYS_fcntl>: Add support for
-	F_GETFL on fd 0, 1 and 2.
-
-2005-11-17  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/sim-main.h (struct _sim_cpu): New members last_syscall,
-	last_open_fd, last_open_flags.
-	* cris/traps.c: Don't include targ-vals.h.
-	(TARGET_O_ACCMODE): Define.
-	(cris_break_13_handler): Set new _sim_cpu members.
-	<case TARGET_SYS_fcntl>: Support special case of F_GETFL.
-	Rearrange code as switch.  Emit "unimplemented" abort for
-	unimplemented fcntl calls.
-
-	* cris/traps.c (TARGET_SYS_stat): Define.
-	(syscall_stat32_map): Add entry for TARGET_SYS_stat.
-	(cris_break_13_handler) <case TARGET_SYS_stat>: New case.
-
-2005-11-16  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/cris-tmpl.c (MY (f_model_insn_before)): Make sure only the
-	low 32 bits are used after an unsigned long cast.
-
-2005-05-28  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/Makefile.in (stamp-v32fmloop): Depend on stamp-v10fmloop.
-
 2005-05-26  Chris Demetriou  <cgd@netbsd.org>
 
 	* MAINTAINERS: Update my mail address, move myself to the
@@ -1092,12 +696,6 @@
 
 	* common/Make-common.in: Add $(EXEEXT) to "run".
 
-2005-04-18  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/traps.c (cris_break_13_handler) <case TARGET_SYS_mmap2>:
-	For ((len & 8191) != 0 && fd == (USI) -1), don't say this isn't
-	implemented.  In call to create_map, pad length argument to 8k.
-
 2005-04-15  Corinna Vinschen  <vinschen@redhat.com>
 
 	* configure.ac: Add explicit sh64 case.
@@ -1107,26 +705,6 @@
 
 	* arm/wrapper.c: Provide SIGTRAP and SIGBUS.
 
-2005-03-24  Hans-Peter Nilsson  <hp@axis.com>
-
-	* cris/Makefile.in (stamp-v10fcpu, stamp-v32fcpu): Add kludge to
-	include cgen-ops.h in decodev10.c and decodev32.c.
-	* cris/sim-main.h: Don't include cgen-ops.h here.
-	* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,
-	cris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,
-	cris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,
-	cris/decodev10.h, cris/decodev32.c, cris/decodev32.h,
-	cris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,
-	cris/semcrisv32f-switch.c: Regenerate.
-
-	* cris/traps.c (cris_break_13_handler) <case
-	TARGET_SYS_rt_sigaction>: Rename sa_handler, sa_flags,
-	sa_restorer, sa_mask_low, sa_mask_high to target_sa_handler etc.
-
-2005-03-23  Mark Kettenis  <kettenis@gnu.org>
-
-	* cris/configure: Regenerate.
-
 2005-02-28  Jim Blandy  <jimb@redhat.com>
 
 	* d10v/configure.ac, igen/configure.ac, m68hc11/configure.ac,
diff --git a/sim/erc32/ChangeLog b/sim/erc32/ChangeLog
index 088a2a4b459..cab1717c5be 100644
--- a/sim/erc32/ChangeLog
+++ b/sim/erc32/ChangeLog
@@ -1,3 +1,15 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2020-07-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure: Re-generate.
+
 2018-10-30  Joel Sherrill <joel@rtems.org>
 
 	* configure.ac: Remove the Cygwin-specific libtermcap.a hack
diff --git a/sim/aarch64/ChangeLog b/sim/aarch64/ChangeLog
index 1b907b94c9c..97e33401afc 100644
--- a/sim/aarch64/ChangeLog
+++ b/sim/aarch64/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2020-02-06  Carlo Bramini  <carlo_bramini@users.sourceforge.net>
 
 	PR sim/25318
diff --git a/sim/h8300/ChangeLog b/sim/h8300/ChangeLog
index 2c0cb4b493e..d01ab03284d 100644
--- a/sim/h8300/ChangeLog
+++ b/sim/h8300/ChangeLog
@@ -1,3 +1,27 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-07  Mike Frysinger  <vapier@gentoo.org>
+
+	* compile.c (set_simcache_size, h8_get_cache_top, h8_set_cache_top,
+	h8_get_compiles, h8_increment_compiles, h8_get_cache_idx_buf,
+	h8_set_cache_idx_buf, h8_get_cache_idx, h8_set_cache_idx, compile,
+	set_simcache_size): Delete.
+	(init_pointers): Delete calls to h8_get_cache_idx_buf,
+	h8_set_cache_idx_buf, and set_simcache_size.
+	(step_once): Replace call to h8_get_cache_idx with decode.  Delete
+	case 0 handling and call to compile.
+	(sim_write): Delete call to h8_set_cache_idx.
+	(sim_info): Delete call to h8_get_compiles & sim_cache_size.
+	(sim_load): Delete calls to h8_get_cache_idx_buf & h8_set_cache_idx_buf.
+	* sim-main.h (sim_state): Delete sim_cache_size, sim_cache, cache_idx,
+	cache_top, and compiles.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2017-09-06  John Baldwin  <jhb@FreeBSD.org>
 
 	* configure: Regenerate.
diff --git a/sim/moxie/ChangeLog b/sim/moxie/ChangeLog
index 9f21b3c90ed..8e1b1abe008 100644
--- a/sim/moxie/ChangeLog
+++ b/sim/moxie/ChangeLog
@@ -1,3 +1,11 @@
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* configure: Regenerate.
+
 2019-12-14  Anthony Green  <green@moxielogic.com>
 
 	* interp.c (sim_engine_run): Make use of sim_io_* functions for
diff --git a/sim/common/ChangeLog b/sim/common/ChangeLog
index a1ac3f13d41..52a2003e9c6 100644
--- a/sim/common/ChangeLog
+++ b/sim/common/ChangeLog
@@ -1,3 +1,50 @@
+2021-01-09  Mike Frysinger  <vapier@gentoo.org>
+
+	* cgen-par.c: Include stdlib.h.
+	* cgen-trace.c, hw-events.c, sim-abort.c: Likewise.
+
+2021-01-08  Mike Frysinger  <vapier@gentoo.org>
+
+	* Make-common.in (C_DIALECT): Define.
+	(COMPILE.pre): Append $(C_DIALECT).
+	* acinclude.m4 (SIM_AC_COMMON): Probe C11 to define C_DIALECT.
+
+2021-01-07  Mike Frysinger  <vapier@gentoo.org>
+
+	* sim-core.c (sim_memory_map): Define.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* acinclude.m4 (ACX_BUGURL): Change http:// to https://.
+	* configure: Regenerate.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* sim-options.c (sim_print_version): Print out more details when
+	is_command is non-zero.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* sim-options.c (standard_option_handler): Call sim_print_version.
+	(sim_print_version): New function.
+	* sim-options.h (sim_print_version): New prototype.
+
+2021-01-04  Mike Frysinger  <vapier@gentoo.org>
+
+	* sim-config.c (print_sim_config): Rename to ...
+	(sim_config_print): ... this.
+	* sim-config.h: Likewise.
+
+2021-01-02  Mike Frysinger  <vapier@gentoo.org>
+
+	* sim-bits.h (_ALIGNa, _FLOORa, ALIGN_8, ALIGN_16, ALIGN_PAGE,
+	FLOOR_PAGE): Delete unused macros.
+	(align_up, align_down): Define.
+
+2020-08-10  Tom de Vries  <tdevries@suse.de>
+
+	* sim-cpu.c: Include stdlib.h for free.
+
 2020-01-19  Simon Marchi  <simon.marchi@polymtl.ca>
 
 	* nrun.c: Include stdlib.h.
diff --git a/gdbsupport/ChangeLog b/gdbsupport/ChangeLog
index e1b040d5827..d973a6daa4f 100644
--- a/gdbsupport/ChangeLog
+++ b/gdbsupport/ChangeLog
@@ -1,3 +1,251 @@
+2021-01-08  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/27157
+	* pathstuff.cc (get_standard_cache_dir, get_standard_config_dir,
+	find_gdb_home_config_file): Add empty string check.
+
+2021-01-06  Mike Frysinger  <vapier@gentoo.org>
+
+	* common-utils.h (align_up): Fix typo in header comment.
+
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* common-debug.h (debug_print_depth): New.
+	(struct scoped_debug_start_end): New.
+	(scoped_debug_start_end): New.
+	(scoped_debug_enter_exit): New.
+	* common-debug.cc (debug_prefixed_vprintf): Print indentation.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbsupport/common-utils.cc: Change 'ctype.h' include to
+	'safe-ctype.h'.
+	(extract_string_maybe_quoted): Use safe-ctype function versions.
+	(is_digit_in_base): Likewise.
+	(digit_to_int): Likewise.
+	(strtoulst): Likewise.
+	(skip_spaces): Likewise.
+	(skip_to_space): Likewise.
+
+2020-12-11  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* common-debug.h (debug_prefixed_printf_cond): New.
+	* event-loop.h (event_loop_debug_printf): Use
+	debug_prefixed_printf_cond.
+
+2020-12-08  Alexander Fedotov  <alfedotov@gmail.com>
+
+	* pathstuff.cc (get_standard_cache_dir): Use LOCALAPPDATA environment
+	variable when running on Windows.
+
+2020-12-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tdesc.cc (print_xml_feature::visit): Print enum fields using
+	'evalue' syntax.
+
+2020-12-01  Chungyi Chi  <demonic@csie.io>
+
+	* tdesc.cc (print_xml_feature::visit): Print enum size attribute.
+
+2020-11-20  Tom Tromey  <tromey@adacore.com>
+
+	* thread-pool.cc (thread_pool::set_thread_count): Ignore system
+	errors.
+
+2020-11-10  Tom Tromey  <tromey@adacore.com>
+
+	PR build/26848:
+	* pathstuff.h: Move include block here...
+	* pathstuff.cc: ... from here.
+
+2020-11-02  Tom Tromey  <tom@tromey.com>
+
+	* pathstuff.h (get_standard_config_dir): Declare.
+	* pathstuff.cc (get_standard_config_dir): New function.
+
+2020-11-02  Simon Marchi  <simon.marchi@efficios.com>
+
+	* common-exceptions.h: Fix indentation.
+	* event-loop.cc: Fix indentation.
+	* fileio.cc: Fix indentation.
+	* filestuff.cc: Fix indentation.
+	* gdb-dlfcn.cc: Fix indentation.
+	* gdb_string_view.h: Fix indentation.
+	* job-control.cc: Fix indentation.
+	* signals.cc: Fix indentation.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* common-debug.cc (debug_prefixed_printf): New.
+	* common-debug.h (debug_prefixed_printf): New declaration.
+	* event-loop.cc (event_loop_debug_printf_1): Remove.
+	* event-loop.h (event_loop_debug_printf_1): Remove.
+	(event_loop_debug_printf): Use debug_prefixed_printf.
+	(event_loop_ui_debug_printf): Use debug_prefixed_printf.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* common.m4: Replace AC_TRY_COMPILE with AC_COMPILE_IFELSE +
+	AC_LANG_PROGRAM.
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* common.m4: Replace AC_FUNC_VFORK with AC_FUNC_FORK.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+	* warning.m4: Replace AC_TRY_COMPILE with AC_COMPILE_IFELSE +
+	AC_LANG_PROGRAM.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+	* ptrace.m4: Replace AC_TRY_COMPILE with AC_COMPILE_IFELSE +
+	AC_LANG_PROGRAM.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+	* ptrace.m4: Re-indent.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* aclocal.m4: Re-generate.
+	* configure: Re-generate.
+	* configure.ac: Remove AM_PROG_CC_STDC.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure.ac: Use AC_CANONICAL_{BUILD,HOST,TARGET} instead of
+	AC_CANONICAL_SYSTEM.
+	* configure: Re-generate.
+
+2020-10-26  Pedro Alves  <pedro@palves.net>
+
+	* eintr.h (handle_eintr): Replace Ret template parameter with
+	ErrorValType.  Use it as type of the failure value.  Deduce the
+	function's return type using decltype.  Use lowercase for function
+	parameter names.
+
+2020-10-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* Makefile.in: Re-generate.
+	* acinclude.m4: Update ptrace.m4 path.
+	* ptrace.m4: Move here.
+
+2020-10-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tdesc.h (allocate_target_description): Update return type.
+
+2020-10-07  Tom Tromey  <tromey@adacore.com>
+
+	* Makefile.in: Rebuild.
+	* Makefile.am (libgdbsupport_a_SOURCES): Add search.cc.
+	* search.h: New file.
+	* search.cc: New file.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* event-loop.h (debug_event_loop): New variable declaration.
+	(event_loop_debug_printf_1): New function declaration.
+	(event_loop_debug_printf): New macro.
+	* event-loop.cc (debug_event_loop): New variable.
+	(handle_file_event): Add debug print.
+	(event_loop_debug_printf_1): New function.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* common-debug.cc (debug_prefixed_vprintf): Move here.
+	* common-debug.h (debug_prefixed_vprintf): Move here.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* event-loop.h (add_file_handler): Add "name" parameter.
+	* event-loop.cc (struct file_handler) <name>: New field.
+	(create_file_handler): Add "name" parameter, assign it to file
+	handler.
+	(add_file_handler): Add "name" parameter.
+
+2020-10-01  Kamil Rytarowski  <n54@gmx.com>
+
+	* agent.cc (gdb_connect_sync_socket): Preinitialize addr with zeros.
+
+2020-09-29  Pedro Alves  <pedro@palves.net>
+
+	* valid-expr.h (CHECK_VALID_EXPR_INT): Make archetype a template
+	class instead of an alias template and adjust static_assert.
+
+2020-09-24  Simon Marchi  <simon.marchi@efficios.com>
+
+	* event-loop.c (struct file_handler): Remove typedef, re-format.
+
+2020-09-16  John Baldwin  <jhb@FreeBSD.org>
+
+	* common.m4 (GDB_AC_COMMON): Refactor checks for kinfo_getfile().
+	* configure, config.in: Regenerate.
+
+2020-09-14  Pedro Alves  <pedro@palves.net>
+
+	* enum-flags.h: Include "traits.h".
+	(DEF_ENUM_FLAGS_TYPE): Declare a function instead of defining a
+	structure.
+	(enum_underlying_type): Update comment.
+	(namespace enum_flags_detail): New.  Move struct zero_type here.
+	(EnumIsUnsigned, EnumIsSigned): New.
+	(class enum_flags): Make most methods constexpr.
+	(operator&=, operator|=, operator^=): Take an enum_flags instead
+	of an enum_type.  Make rvalue ref versions deleted.
+	(operator enum_type()): Delete.
+	(operator&, operator|, operator^, operator~): Delete, moved out of
+	class.
+	(raw()): New method.
+	(is_enum_flags_enum_type_t): Declare.
+	(ENUM_FLAGS_GEN_BINOP, ENUM_FLAGS_GEN_COMPOUND_ASSIGN)
+	(ENUM_FLAGS_GEN_COMP): New.  Use them to reimplement global
+	operators.
+	(operator~): Now constexpr and reimplemented.
+	(operator<<, operator>>): New deleted functions.
+	* valid-expr.h (CHECK_VALID_EXPR_5, CHECK_VALID_EXPR_6): New.
+
+2020-09-14  Pedro Alves  <pedro@palves.net>
+
+	* traits.h (struct nonesuch, struct detector, detected_or)
+	(detected_or_t, is_detected, detected_t, detected_or)
+	(detected_or_t, is_detected_exact, is_detected_convertible): New.
+	* valid-expr.h (CHECK_VALID_EXPR_INT): Use gdb::is_detected_exact.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* eintr.h: New file.
+
+2020-08-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* selftest.h (run_tests): Change parameter to array_view.
+	* selftest.c (run_tests): Change parameter to array_view and use
+	it.
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.
+	* common.m4 (GDB_AC_COMMON): Use BFD_SYS_PROCFS_H to check for
+	<sys/procfs.h>.
+	* Makefile.in: Regenerate.
+	* configure, config.in: Regenerate.
+
+2020-07-28  Tom de Vries  <tdevries@suse.de>
+
+	PR build/26281
+	* gdb_optional.h (class optional): Add volatile member to union
+	contaning m_dummy and m_item.
+
+2020-07-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tdesc.h (struct target_desc_deleter): Moved here
+	from gdb/target-descriptions.h, extend comment.
+	(target_desc_up): Likewise.
+
 2020-06-30  Tom Tromey  <tromey@adacore.com>
 
 	PR build/26183:
@@ -253,4 +501,3 @@
 	* acinclude.m4, aclocal.m4, config.in, configure, configure.ac,
 	Makefile.am, Makefile.in, README: New files.
 	* Moved from ../gdb/gdbsupport/
-
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index fada4f8c94b..60ac669c466 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,1586 +1,107 @@
-2020-10-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26685
-	* i386-dis.c (mod_table): Replace Gv with Gdq on movdiri.
-
-2020-10-07  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (OP_E_memory): Revert previous change.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-08-19  Alan Modra  <amodra@gmail.com>
-	* ppc-opc.c (powerpc_opcodes): Replace OBF with BF for vcmpsq,
-	vcmpuq and xvtlsbb.
-
-	2020-08-10  Alan Modra  <amodra@gmail.com>
-	* ppc-opc.c (powerpc_opcodes): Add many mtspr and mfspr extended
-	instructions.
-
-	2020-08-10  Alan Modra  <amodra@gmail.com>
-	* ppc-opc.c (powerpc_opcodes): Add exser, msgsndu, msgclru.
-	Enable icbt for power5, miso for power8.
-
-	2020-08-10  Alan Modra  <amodra@gmail.com>
-	* ppc-opc.c (powerpc_opcodes): Prioritise mtfprd and mtvrd over
-	mtvsrd, and similarly for mfvsrd.
-
-2020-09-19  Nick Clifton  <nickc@redhat.com>
-
-	This is the 2.35.1 point release.
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
-	* po/opcodes.pot: Regenerate.
-
-2020-08-26  Jose E. Marchesi  <jemarch@gnu.org>
-
-	* disassemble.c (enum epbf_isa_attr): Add ISA_XBPFBE, ISA_EBPFMAX.
+	* po/opercodes.pot: Regenerate.
 
-2020-08-26  David Faust  <david.faust@oracle.com>
-
-	* bpf-desc.c: Regenerate.
-	* bpf-desc.h: Likewise.
-	* bpf-opc.c: Likewise.
-	* bpf-opc.h: Likewise.
-	* disassemble.c (disassemble_init_for_target): Set bits for xBPF
-	ISA when appropriate.
-
-2020-08-18  Peter Bergner  <bergner@linux.ibm.com>
-
-	Backported from master:
-	2020-08-18  Peter Bergner  <bergner@linux.ibm.com>
-
-	* ppc-opc.c (powerpc_opcodes) <xvcvbf16sp>: Rename from this...
-	<xvcvbf16spn>: ...to this.
-
-2020-08-12  Nick Clifton  <nickc@redhat.com>
-
-	* po/sr.po: Updated Serbian translation.
-
-2020-08-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26305
-	* i386-opc.h (Prefix_Disp8): New.
-	(Prefix_Disp16): Likewise.
-	(Prefix_Disp32): Likewise.
-	(Prefix_Load): Likewise.
-	(Prefix_Store): Likewise.
-	(Prefix_VEX): Likewise.
-	(Prefix_VEX3): Likewise.
-	(Prefix_EVEX): Likewise.
-	(Prefix_REX): Likewise.
-	(Prefix_NoOptimize): Likewise.
-	* i386-opc.tbl: Use Prefix_XXX on pseudo prefixes.  Add {disp16}.
-	* i386-tbl.h: Regenerated.
-
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
+	This is the 2.36 release.
 	* configure: Regenerate.
+	* po/opercodes.pot: Regenerate.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
-
-	2.35 Release:
-	* configure: Regenerate.
-	* po/opcodes.pot: Regenerate.
-
-2020-07-24  Nick Clifton  <nickc@redhat.com>
-
-	* po/de.po: Updated German translation.
-
-2020-07-15  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26237
-	* i386-dis.c (OP_E_memory): Don't display eiz with no scale
-	without base nor index registers.
-
-2020-07-15  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26237
-	* i386-dis.c (OP_E_memory): Without base nor index registers,
-	zero-extend lower 32-bit displacement to 64 bits.
-
-2020-07-06  Nick Clifton  <nickc@redhat.com>
-
-	* po/pt_BR.po: Updated Brazilian Portugugese translation.
-	* po/uk.po: Updated Ukranian translation.
-
-2020-07-04  Nick Clifton  <nickc@redhat.com>
-
-	* configure: Regenerate.
-	* po/opcodes.pot: Regenerate.
-
-2020-07-04  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.35 branch created.
-
-2020-07-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-gen.c (opcode_modifiers): Add VexSwapSources.
-	* i386-opc.h (VexSwapSources): New.
-	(i386_opcode_modifier): Add vexswapsources.
-	* i386-opc.tbl: Add VexSwapSources to BMI2 and BMI instructions
-	with two source operands swapped.
-	* i386-tbl.h: Regenerated.
-
-2020-06-30  Nelson Chu  <nelson.chu@sifive.com>
-
-	* riscv-dis.c (print_insn_args, case 'E'): Updated.  Let the
-	unprivileged CSR can also be initialized.
-
-2020-06-29  Alan Modra  <amodra@gmail.com>
-
-	* arm-dis.c: Use C style comments.
-	* cr16-opc.c: Likewise.
-	* ft32-dis.c: Likewise.
-	* moxie-opc.c: Likewise.
-	* tic54x-dis.c: Likewise.
-	* s12z-opc.c: Remove useless comment.
-	* xgate-dis.c: Likewise.
-
-2020-06-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-opc.tbl: Add a blank line.
-
-2020-06-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-gen.c (opcode_modifiers): Replace VecSIB with SIB.
-	(VecSIB128): Renamed to ...
-	(VECSIB128): This.
-	(VecSIB256): Renamed to ...
-	(VECSIB256): This.
-	(VecSIB512): Renamed to ...
-	(VECSIB512): This.
-	(VecSIB): Renamed to ...
-	(SIB): This.
-	(i386_opcode_modifier): Replace vecsib with sib.
-	* i386-opc.tbl (VecSIB128): New.
-	(VecSIB256): Likewise.
-	(VecSIB512): Likewise.
-	Replace VecSIB=1, VecSIB=2 and VecSIB=3 with VecSIB128, VecSIB256
-	and VecSIB512, respectively.
-
-2020-06-26  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c: Adjust description of I macro.
-	(x86_64_table): Drop use of I.
-	(float_mem): Replace use of I.
-	(putop): Remove handling of I. Adjust setting/clearing of "alt".
-
-2020-06-26  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c: (print_insn): Avoid straight assignment to
-	priv.orig_sizeflag when processing -M sub-options.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c: Adjust description of J macro.
-	(dis386, x86_64_table, mod_table): Replace J.
-	(putop): Remove handling of J.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c: (float_mem): Reduce alternatives for fstpt and fldpt.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c: Adjust description of "LQ" macro.
-	(dis386_twobyte): Use LQ for sysret.
-	(putop): Adjust handling of LQ.
-
-2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
-
-	* riscv-opc.c: Move the structures and functions to bfd/elfxx-riscv.c.
-	* riscv-dis.c: Include elfxx-riscv.h.
-
-2020-06-18  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-dis.c (prefix_table): Revert the last vmgexit change.
-
-2020-06-17  Lili Cui  <lili.cui@intel.com>
-
-	* i386-dis.c (prefix_table): Delete the incorrect vmgexit.
-
-2020-06-14  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26115
-	* i386-dis.c (prefix_table): Replace xsuspldtrk with xsusldtrk.
-	* i386-opc.tbl: Likewise.
-	* i386-tbl.h: Regenerated.
-
-2020-06-12  Nelson Chu  <nelson.chu@sifive.com>
-
-	* riscv-opc.c (priv_specs): Remove v1.9 and PRIV_SPEC_CLASS_1P9.
-
-2020-06-11  Alex Coplan  <alex.coplan@arm.com>
-
-	* aarch64-opc.c (SYSREG): New macro for describing system registers.
-	(SR_CORE): Likewise.
-	(SR_FEAT): Likewise.
-	(SR_RNG): Likewise.
-	(SR_V8_1): Likewise.
-	(SR_V8_2): Likewise.
-	(SR_V8_3): Likewise.
-	(SR_V8_4): Likewise.
-	(SR_PAN): Likewise.
-	(SR_RAS): Likewise.
-	(SR_SSBS): Likewise.
-	(SR_SVE): Likewise.
-	(SR_ID_PFR2): Likewise.
-	(SR_PROFILE): Likewise.
-	(SR_MEMTAG): Likewise.
-	(SR_SCXTNUM): Likewise.
-	(aarch64_sys_regs): Refactor to store feature information in the table.
-	(aarch64_sys_reg_supported_p): Collapse logic for system registers
-	that now describe their own features.
-	(aarch64_pstatefield_supported_p): Likewise.
-
-2020-06-09  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-dis.c (prefix_table): Fix a typo in comments.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (rex_ignored): Delete.
-	(ckprefix): Drop rex_ignored initialization.
-	(get_valid_dis386): Drop setting of rex_ignored.
-	(print_insn): Drop checking of rex_ignored. Don't record data
-	size prefix as used with VEX-and-alike encodings.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (MOD_0F12_PREFIX_2, MOD_0F16_PREFIX_2,
-	MOD_VEX_0F12_PREFIX_2, MOD_VEX_0F16_PREFIX_2): New enumerators.
-	(VEX_LEN_0F12_P_2, VEX_LEN_0F16_P_2): Delete.
-	(VEX_LEN_0F12_P_2_M_0, VEX_LEN_0F16_P_2_M_0): Define.
-	(prefix_table): Decode MOD for cases 2 of opcodes 0F12, 0F16,
-	VEX_0F12, and VEX_0F16.
-	(vex_len_table): Use X for vmovlp* and vmovh*s. Drop
-	VEX_LEN_0F12_P_2 and VEX_LEN_0F16_P_2 entries.
-	(mod_table): Use X for movlpX and movhpX. Drop PREFIX_OPCODE
-	from movlps and movhlps. New MOD_0F12_PREFIX_2,
-	MOD_0F16_PREFIX_2, MOD_VEX_0F12_PREFIX_2, and
-	MOD_VEX_0F16_PREFIX_2 entries.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (MOD_EVEX_0F12_PREFIX_2, MOD_EVEX_0F13,
-	MOD_EVEX_0F16_PREFIX_2, MOD_EVEX_0F17, MOD_EVEX_0F2B): New enumerators.
-	(PREFIX_EVEX_0F13, PREFIX_EVEX_0F14, PREFIX_EVEX_0F15,
-	PREFIX_EVEX_0F17, PREFIX_EVEX_0F28, PREFIX_EVEX_0F29,
-	PREFIX_EVEX_0F2B, PREFIX_EVEX_0F54, PREFIX_EVEX_0F55,
-	PREFIX_EVEX_0F56, PREFIX_EVEX_0F57, PREFIX_EVEX_0FC6,
-	EVEX_W_0F10_P_0, EVEX_W_0F10_P_2, EVEX_W_0F11_P_0,
-	EVEX_W_0F11_P_2, EVEX_W_0F12_P_0_M_0, EVEX_W_0F12_P_2,
-	EVEX_W_0F13_P_0, EVEX_W_0F13_P_2, EVEX_W_0F14_P_0,
-	EVEX_W_0F14_P_2, EVEX_W_0F15_P_0, EVEX_W_0F15_P_2,
-	EVEX_W_0F16_P_0_M_0, EVEX_W_0F16_P_2, EVEX_W_0F17_P_0,
-	EVEX_W_0F17_P_2, EVEX_W_0F28_P_0, EVEX_W_0F28_P_2,
-	EVEX_W_0F29_P_0, EVEX_W_0F29_P_2, EVEX_W_0F2B_P_0,
-	EVEX_W_0F2B_P_2, EVEX_W_0F2E_P_0, EVEX_W_0F2E_P_2,
-	EVEX_W_0F2F_P_0, EVEX_W_0F2F_P_2, EVEX_W_0F51_P_0,
-	EVEX_W_0F51_P_2, EVEX_W_0F54_P_0, EVEX_W_0F54_P_2,
-	EVEX_W_0F55_P_0, EVEX_W_0F55_P_2, EVEX_W_0F56_P_0,
-	EVEX_W_0F56_P_2, EVEX_W_0F57_P_0, EVEX_W_0F57_P_2,
-	EVEX_W_0F58_P_0, EVEX_W_0F58_P_2, EVEX_W_0F59_P_0,
-	EVEX_W_0F59_P_2, EVEX_W_0F5C_P_0, EVEX_W_0F5C_P_2,
-	EVEX_W_0F5D_P_0, EVEX_W_0F5D_P_2, EVEX_W_0F5E_P_0,
-	EVEX_W_0F5E_P_2, EVEX_W_0F5F_P_0, EVEX_W_0F5F_P_2,
-	EVEX_W_0FC2_P_0, EVEX_W_0FC2_P_2, EVEX_W_0FC6_P_0,
-	EVEX_W_0FC6_P_2): Delete.
-	(print_insn): Add EVEX.W vs embedded prefix consistency check
-	to prefix validation.
-	* i386-dis-evex.h (evex_table): Don't further descend for
-	vunpcklpX, vunpckhpX, vmovapX, vandpX, vandnpX, vorpX, vxorpX,
-	and vshufpX. Continue with MOD decoding for opcodes 0F13, 0F17,
-	and 0F2B.
-	* i386-dis-evex-mod.h: Add/adjust vmovlpX/vmovhpX entries.
-	* i386-dis-evex-prefix.h: Don't further descend for vmovupX,
-	vucomisX, vcomisX, vsqrtpX, vaddpX, vmulpX, vsubpX, vminpX,
-	vdivpX, vmaxpX, and vcmppX. Continue with MOD decoding for cases
-	2 of PREFIX_EVEX_0F12, PREFIX_EVEX_0F16, and PREFIX_EVEX_0F29.
-	Drop PREFIX_EVEX_0F13, PREFIX_EVEX_0F14, PREFIX_EVEX_0F15,
-	PREFIX_EVEX_0F17, PREFIX_EVEX_0F28, PREFIX_EVEX_0F2B,
-	PREFIX_EVEX_0F54, PREFIX_EVEX_0F55, PREFIX_EVEX_0F56,
-	PREFIX_EVEX_0F57, and PREFIX_EVEX_0FC6 entries.
-	* i386-dis-evex-w.h: Drop EVEX_W_0F10_P_0, EVEX_W_0F10_P_2,
-	EVEX_W_0F11_P_0, EVEX_W_0F11_P_2, EVEX_W_0F12_P_0_M_0,
-	EVEX_W_0F12_P_2, EVEX_W_0F12_P_3, EVEX_W_0F13_P_0,
-	EVEX_W_0F13_P_2, EVEX_W_0F14_P_0, EVEX_W_0F14_P_2,
-	EVEX_W_0F15_P_0, EVEX_W_0F15_P_2, EVEX_W_0F16_P_0_M_0,
-	EVEX_W_0F16_P_2, EVEX_W_0F17_P_0, EVEX_W_0F17_P_2,
-	EVEX_W_0F28_P_0, EVEX_W_0F28_P_2, EVEX_W_0F29_P_0,
-	EVEX_W_0F29_P_2, EVEX_W_0F2B_P_0, EVEX_W_0F2B_P_2,
-	EVEX_W_0F2E_P_0, EVEX_W_0F2E_P_2, EVEX_W_0F2F_P_0,
-	EVEX_W_0F2F_P_2, EVEX_W_0F51_P_0, EVEX_W_0F51_P_2,
-	EVEX_W_0F54_P_0, EVEX_W_0F54_P_2, EVEX_W_0F55_P_0,
-	EVEX_W_0F55_P_2, EVEX_W_0F56_P_0, EVEX_W_0F56_P_2,
-	EVEX_W_0F57_P_0, EVEX_W_0F57_P_2, EVEX_W_0F58_P_0,
-	EVEX_W_0F58_P_2, EVEX_W_0F59_P_0, EVEX_W_0F59_P_2,
-	EVEX_W_0F5C_P_0, EVEX_W_0F5C_P_2, EVEX_W_0F5D_P_0,
-	EVEX_W_0F5D_P_2, EVEX_W_0F5E_P_0, EVEX_W_0F5E_P_2,
-	EVEX_W_0F5F_P_0, EVEX_W_0F5F_P_2, EVEX_W_0FC2_P_0,
-	EVEX_W_0FC2_P_2, EVEX_W_0FC6_P_0, and EVEX_W_0FC6_P_2 entries.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (vex_table): Use PREFIX_OPCODE for vunpcklpX,
-	vunpckhpX, vmovapX, vandpX, vandnpX, vorpX, vxorpX and vshufpX.
-	(vex_len_table) : Likewise for vmovlpX, vmovhpX, vmovntpX, and
-	vmovmskpX.
-	(print_insn): Drop pointless check against bad_opcode. Split
-	prefix validation into legacy and VEX-and-alike parts.
-	(putop): Re-work 'X' macro handling.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (MOD_0F51): Rename to ...
-	(MOD_0F50): ... this.
-
-2020-06-08  Alex Coplan  <alex.coplan@arm.com>
-
-	* arm-dis.c (arm_opcodes): Add dfb.
-	(thumb32_opcodes): Add dfb.
-
-2020-06-08  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.h (reg_entry): Const-qualify reg_name field.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (ppc_opts): Accept -mpwr10/-Mpwr10.
-
-2020-06-05  Alan Modra  <amodra@gmail.com>
-
-	* cgen-dis.c (hash_insn_array): Increase size of buf.  Assert
-	size is large enough.
-
-2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* disassemble.c (disassemble_init_for_target): Set endian_code for
-	bpf targets.
-	* bpf-desc.c: Regenerate.
-	* bpf-opc.c: Likewise.
-	* bpf-dis.c: Likewise.
-
-2020-06-03  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* cgen-opc.c (cgen_get_insn_value): Get an `endian' argument.
-	(cgen_put_insn_value): Likewise.
-	(cgen_lookup_insn): Pass endianness to cgen_{get,put}_insn_value.
-	* cgen-dis.in (print_insn): Likewise.
-	* cgen-ibld.in (insert_1): Likewise.
-	(insert_1): Likewise.
-	(insert_insn_normal): Likewise.
-	(extract_1): Likewise.
-	* bpf-dis.c: Regenerate.
-	* bpf-ibld.c: Likewise.
-	* bpf-ibld.c: Likewise.
-	* cgen-dis.in: Likewise.
-	* cgen-ibld.in: Likewise.
-	* cgen-opc.c: Likewise.
-	* epiphany-dis.c: Likewise.
-	* epiphany-ibld.c: Likewise.
-	* fr30-dis.c: Likewise.
-	* fr30-ibld.c: Likewise.
-	* frv-dis.c: Likewise.
-	* frv-ibld.c: Likewise.
-	* ip2k-dis.c: Likewise.
-	* ip2k-ibld.c: Likewise.
-	* iq2000-dis.c: Likewise.
-	* iq2000-ibld.c: Likewise.
-	* lm32-dis.c: Likewise.
-	* lm32-ibld.c: Likewise.
-	* m32c-dis.c: Likewise.
-	* m32c-ibld.c: Likewise.
-	* m32r-dis.c: Likewise.
-	* m32r-ibld.c: Likewise.
-	* mep-dis.c: Likewise.
-	* mep-ibld.c: Likewise.
-	* mt-dis.c: Likewise.
-	* mt-ibld.c: Likewise.
-	* or1k-dis.c: Likewise.
-	* or1k-ibld.c: Likewise.
-	* xc16x-dis.c: Likewise.
-	* xc16x-ibld.c: Likewise.
-	* xstormy16-dis.c: Likewise.
-	* xstormy16-ibld.c: Likewise.
-
-2020-06-04  Jose E. Marchesi  <jemarch@gnu.org>
-
-	* cgen-dis.in (cpu_desc_list): New field `insn_endian'.
-	(print_insn_): Handle instruction endian.
-	* bpf-dis.c: Regenerate.
-	* bpf-desc.c: Regenerate.
-	* epiphany-dis.c: Likewise.
-	* epiphany-desc.c: Likewise.
-	* fr30-dis.c: Likewise.
-	* fr30-desc.c: Likewise.
-	* frv-dis.c: Likewise.
-	* frv-desc.c: Likewise.
-	* ip2k-dis.c: Likewise.
-	* ip2k-desc.c: Likewise.
-	* iq2000-dis.c: Likewise.
-	* iq2000-desc.c: Likewise.
-	* lm32-dis.c: Likewise.
-	* lm32-desc.c: Likewise.
-	* m32c-dis.c: Likewise.
-	* m32c-desc.c: Likewise.
-	* m32r-dis.c: Likewise.
-	* m32r-desc.c: Likewise.
-	* mep-dis.c: Likewise.
-	* mep-desc.c: Likewise.
-	* mt-dis.c: Likewise.
-	* mt-desc.c: Likewise.
-	* or1k-dis.c: Likewise.
-	* or1k-desc.c: Likewise.
-	* xc16x-dis.c: Likewise.
-	* xc16x-desc.c: Likewise.
-	* xstormy16-dis.c: Likewise.
-	* xstormy16-desc.c: Likewise.
-
-2020-06-03  Nick Clifton  <nickc@redhat.com>
+2021-01-12  Nick Clifton  <nickc@redhat.com>
 
 	* po/sr.po: Updated Serbian translation.
 
-2020-06-03  Nelson Chu  <nelson.chu@sifive.com>
-
-	* riscv-opc.c (riscv_get_isa_spec_class): Change bfd_boolean to int.
-	(riscv_get_priv_spec_class): Likewise.
-
-2020-06-01  Alan Modra  <amodra@gmail.com>
-
-	* bpf-desc.c: Regenerate.
-
-2020-05-28  Jose E. Marchesi  <jose.marchesi@oracle.com>
-	    David Faust <david.faust@oracle.com>
-
-	* bpf-desc.c: Regenerate.
-	* bpf-opc.h: Likewise.
-	* bpf-opc.c: Likewise.
-	* bpf-dis.c: Likewise.
-
-2020-05-28  Alan Modra  <amodra@gmail.com>
-
-	* nios2-dis.c (nios2_print_insn_arg): Avoid shift left of negative
-	values.
-
-2020-05-28  Alan Modra  <amodra@gmail.com>
-
-	* ns32k-dis.c (print_insn_arg): Handle d value of 'f' for
-	immediates.
-	(print_insn_ns32k): Revert last change.
-
-2020-05-28  Nick Clifton  <nickc@redhat.com>
-
-	* ns32k-dis.c (print_insn_ns32k): Change the arg_bufs array to
-	static.
-
-2020-05-26  Sandra Loosemore  <sandra@codesourcery.com>
-
-	Fix extraction of signed constants in nios2 disassembler (again).
-
-	* nios2-dis.c (nios2_print_insn_arg): Add explicit casts to
-	extractions of signed fields.
-
-2020-05-26  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>
-
-	* s390-opc.txt: Relocate vector load/store instructions with
-	additional alignment parameter and change architecture level
-	constraint from z14 to z13.
-
-2020-05-21  Alan Modra  <amodra@gmail.com>
-
-	* arc-ext.c: Replace "if (x) free (x)" with "free (x)" throughout.
-	* sparc-dis.c: Likewise.
-	* tic4x-dis.c: Likewise.
-	* xtensa-dis.c: Likewise.
-	* bpf-desc.c: Regenerate.
-	* epiphany-desc.c: Regenerate.
-	* fr30-desc.c: Regenerate.
-	* frv-desc.c: Regenerate.
-	* ip2k-desc.c: Regenerate.
-	* iq2000-desc.c: Regenerate.
-	* lm32-desc.c: Regenerate.
-	* m32c-desc.c: Regenerate.
-	* m32r-desc.c: Regenerate.
-	* mep-asm.c: Regenerate.
-	* mep-desc.c: Regenerate.
-	* mt-desc.c: Regenerate.
-	* or1k-desc.c: Regenerate.
-	* xc16x-desc.c: Regenerate.
-	* xstormy16-desc.c: Regenerate.
-
-2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* riscv-opc.c (riscv_ext_version_table): The table used to store
-	all information about the supported spec and the corresponding ISA
-	versions.  Currently, only Zicsr is supported to verify the
-	correctness of Z sub extension settings.  Others will be supported
-	in the future patches.
-	(struct isa_spec_t, isa_specs): List for all supported ISA spec
-	classes and the corresponding strings.
-	(riscv_get_isa_spec_class): New function.  Get the corresponding ISA
-	spec class by giving a ISA spec string.
-	* riscv-opc.c (struct priv_spec_t): New structure.
-	(struct priv_spec_t priv_specs): List for all supported privilege spec
-	classes and the corresponding strings.
-	(riscv_get_priv_spec_class): New function.  Get the corresponding
-	privilege spec class by giving a spec string.
-	(riscv_get_priv_spec_name): New function.  Get the corresponding
-	privilege spec string by giving a CSR version class.
-	* riscv-dis.c: Updated since DECLARE_CSR is changed.
-	* riscv-dis.c: Add new disassembler option -Mpriv-spec to dump the CSR
-	according to the chosen version.  Build a hash table riscv_csr_hash to
-	store the valid CSR for the chosen pirv verison.  Dump the direct
-	CSR address rather than it's name if it is invalid.
-	(parse_riscv_dis_option_without_args): New function.  Parse the options
-	without arguments.
-	(parse_riscv_dis_option): Call parse_riscv_dis_option_without_args to
-	parse the options without arguments first, and then handle the options
-	with arguments.  Add the new option -Mpriv-spec, which has argument.
-	* riscv-dis.c (print_riscv_disassembler_options): Add description
-	about the new OBJDUMP option.
-
-2020-05-19  Peter Bergner  <bergner@linux.ibm.com>
-
-	* ppc-opc.c (insert_ls, extract_ls): Handle 3-bit L fields and new
-	WC values on POWER10 sync, dcbf  and wait instructions.
-	(insert_pl, extract_pl): New functions.
-	(L2OPT, LS, WC): Use insert_ls and extract_ls.
-	(LS3): New , 3-bit L for sync.
-	(LS3, L3OPT): New, 3-bit L for sync and dcbf.
-	(SC2, PL): New, 2-bit SC and PL for sync and wait.
-	(XWCPL_MASK, XL3RT_MASK, XSYNCLS_MASK): New instruction masks.
-	(XOPL3, XWCPL, XSYNCLS): New opcode macros.
-	(powerpc_opcodes) <dcbflp, dcbfps, dcbstps pause_short, phwsync,
-	plwsync, stcisync, stncisync, stsync, waitrsv>: New extended mnemonics.
-	<wait>: Enable PL operand on POWER10.
-	<dcbf>: Enable L3OPT operand on POWER10.
-	<sync>: Enable SC2 operand on POWER10.
-
-2020-05-19  Stafford Horne  <shorne@gmail.com>
-
-	PR 25184
-	* or1k-asm.c: Regenerate.
-	* or1k-desc.c: Regenerate.
-	* or1k-desc.h: Regenerate.
-	* or1k-dis.c: Regenerate.
-	* or1k-ibld.c: Regenerate.
-	* or1k-opc.c: Regenerate.
-	* or1k-opc.h: Regenerate.
-	* or1k-opinst.c: Regenerate.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc (powerpc_opcodes): Add xscmpeqqp, xscmpgeqp, xscmpgtqp,
-	xsmaxcqp, xsmincqp.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (powerpc_opcodes): Add lxvrbx, lxvrhx, lxvrwx, lxvrdx,
-	stxvrbx, stxvrhx, stxvrwx, stxvrdx.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (powerpc_opcodes): Add xvtlsbb.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (powerpc_opcodes): Add vstribl, vstribr, vstrihl, vstrihr,
-	vclrlb, vclrrb, vstribl., vstribr., vstrihl., vstrihr..
-
-2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
-
-	* ppc-opc.c (powerpc_opcodes) <setbc, setbcr, setnbc, setnbcr>: New
-	mnemonics.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (UIM8, P_U8XX4_MASK): Define.
-	(powerpc_opcodes): Add vgnb, vcfuged, vpextd, vpdepd, vclzdm,
-	vctzdm, cntlzdm, pdepd, pextd, cfuged, cnttzdm.
-	(prefix_opcodes): Add xxeval.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (powerpc_opcodes): Add xxgenpcvbm, xxgenpcvhm,
-	xxgenpcvwm, xxgenpcvdm.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (MP, VXVAM_MASK): Define.
-	(VXVAPS_MASK): Use VXVA_MASK.
-	(powerpc_opcodes): Add mtvsrbmi, vexpandbm, vexpandhm, vexpandwm,
-	vexpanddm, vexpandqm, vextractbm, vextracthm, vextractwm,
-	vextractdm, vextractqm, mtvsrbm, mtvsrhm, mtvsrwm, mtvsrdm, mtvsrqm,
-	vcntmbb, vcntmbh, vcntmbw, vcntmbd.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-	    Peter Bergner  <bergner@linux.ibm.com>
-
-	* ppc-opc.c (insert_xa6a, extract_xa6a, insert_xb6a, extract_xb6a):
-	New functions.
-	(powerpc_operands): Define ACC, PMSK8, PMSK4, PMSK2, XMSK, YMSK,
-	YMSK2, XA6a, XA6ap, XB6a entries.
-	(PMMIRR, P_X_MASK, P_XX1_MASK, P_GER_MASK): Define
-	(P_GER2_MASK, P_GER4_MASK, P_GER8_MASK, P_GER64_MASK): Define.
-	(PPCVSX4): Define.
-	(powerpc_opcodes): Add xxmfacc, xxmtacc, xxsetaccz,
-	xvi8ger4pp, xvi8ger4, xvf16ger2pp, xvf16ger2, xvf32gerpp, xvf32ger,
-	xvi4ger8pp, xvi4ger8, xvi16ger2spp, xvi16ger2s, xvbf16ger2pp,
-	xvbf16ger2, xvf64gerpp, xvf64ger, xvi16ger2, xvf16ger2np,
-	xvf32gernp, xvi8ger4spp, xvi16ger2pp, xvbf16ger2np, xvf64gernp,
-	xvf16ger2pn, xvf32gerpn, xvbf16ger2pn, xvf64gerpn, xvf16ger2nn,
-	xvf32gernn, xvbf16ger2nn, xvf64gernn, xvcvbf16sp, xvcvspbf16.
-	(prefix_opcodes): Add pmxvi8ger4pp, pmxvi8ger4, pmxvf16ger2pp,
-	pmxvf16ger2, pmxvf32gerpp, pmxvf32ger, pmxvi4ger8pp, pmxvi4ger8,
-	pmxvi16ger2spp, pmxvi16ger2s, pmxvbf16ger2pp, pmxvbf16ger2,
-	pmxvf64gerpp, pmxvf64ger, pmxvi16ger2, pmxvf16ger2np, pmxvf32gernp,
-	pmxvi8ger4spp, pmxvi16ger2pp, pmxvbf16ger2np, pmxvf64gernp,
-	pmxvf16ger2pn, pmxvf32gerpn, pmxvbf16ger2pn, pmxvf64gerpn,
-	pmxvf16ger2nn, pmxvf32gernn, pmxvbf16ger2nn, pmxvf64gernn.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (insert_imm32, extract_imm32): New functions.
-	(insert_xts, extract_xts): New functions.
-	(IMM32, UIM3, IX, UIM5, SH3, XTS, P8RR): Define.
-	(P_XX4_MASK, P_UXX4_MASK, VSOP, P_VS_MASK, P_VSI_MASK): Define.
-	(VXRC_MASK, VXSH_MASK): Define.
-	(powerpc_opcodes): Add vinsbvlx, vsldbi, vextdubvlx, vextdubvrx,
-	vextduhvlx, vextduhvrx, vextduwvlx, vextduwvrx, vextddvlx,
-	vextddvrx, vinshvlx, vinswvlx, vinsw, vinsbvrx, vinshvrx,
-	vinswvrx, vinsd, vinsblx, vsrdbi, vinshlx, vinswlx, vinsdlx,
-	vinsbrx, vinshrx, vinswrx, vinsdrx, lxvkq.
-	(prefix_opcodes): Add xxsplti32dx, xxspltidp, xxspltiw, xxblendvb,
-	xxblendvh, xxblendvw, xxblendvd, xxpermx.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (powerpc_opcodes): Add vrlq, vdivuq, vmsumcud, vrlqmi,
-	vmuloud, vcmpuq, vslq, vdivsq, vcmpsq, vrlqnm, vcmpequq, vmulosd,
-	vsrq, vdiveuq, vcmpgtuq, vmuleud, vsraq, vdivesq, vcmpgtsq, vmulesd,
-	vcmpequq., vextsd2q, vmoduq, vcmpgtuq., vmodsq, vcmpgtsq., xscvqpuqz,
-	xscvuqqp, xscvqpsqz, xscvsqqp, dcffixqq, dctfixqq.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (insert_xtp, extract_xtp): New functions.
-	(XTP, DQXP, DQXP_MASK): Define.
-	(powerpc_opcodes): Add lxvp, stxvp, lxvpx, stxvpx.
-	(prefix_opcodes): Add plxvp and pstxvp.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-opc.c (powerpc_opcodes): Add vdivuw, vdivud, vdivsw, vmulld,
-	vdivsd, vmulhuw, vdiveuw, vmulhud, vdiveud, vmulhsw, vdivesw,
-	vmulhsd, vdivesd, vmoduw, vmodud, vmodsw, vmodsd.
-
-2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
-
-	* ppc-opc.c (powerpc_opcodes) <brd, brh, brw>: New mnemonics.
-
-2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
-
-	* ppc-opc.c (insert_l1opt, extract_l1opt): New functions.
-	(L1OPT): Define.
-	(powerpc_opcodes) <paste.>: Add L operand for cpu POWER10.
-
-2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
-
-	* ppc-opc.c (powerpc_opcodes) <slbiag>: Add variant with L operand.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (powerpc_init_dialect): Default to "power10".
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (ppc_opts): Add "power10" entry.
-	(print_insn_powerpc): Update for PPC_OPCODE_POWER10 renaming.
-	* ppc-opc.c (POWER10): Rename from POWERXX.  Update all uses.
-
-2020-05-11  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Updated French translation.
-
-2020-04-30  Alex Coplan  <alex.coplan@arm.com>
-
-	* aarch64-opc.h (enum aarch64_field_kind): Add FLD_imm16_2.
-	* aarch64-opc.c (fields): Add entry for FLD_imm16_2.
-	(operand_general_constraint_met_p): validate
-	AARCH64_OPND_UNDEFINED.
-	* aarch64-tbl.h (aarch64_opcode_table): Add udf instruction, entry
-	for FLD_imm16_2.
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-
-2020-04-29  Nick Clifton  <nickc@redhat.com>
-
-	PR 22699
-	* sh-opc.h: Also use unsigned 8-bit immediate values for the LDRC
-	and SETRC insns.
-
-2020-04-29  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Updated Swedish translation.
-
-2020-04-29  Nick Clifton  <nickc@redhat.com>
-
-	PR 22699
-	* sh-opc.h (IMM0_8): Replace with IMM0_8S and IMM0_8U.  Use
-	IMM0_8S for arithmetic insns and IMM0_8U for logical insns.
-	* sh-dis.c (print_insn_sh): Change IMM0_8 case to IMM0_8S and add
-	IMM0_8U case.
-
-2020-04-21  Andreas Schwab  <schwab@linux-m68k.org>
-
-	PR 25848
-	* m68k-opc.c (m68k_opcodes): Allow pc-rel for second operand of
-	cmpi only on m68020up and cpu32.
-
-2020-04-20  Sudakshina Das  <sudi.das@arm.com>
-
-	* aarch64-asm.c (aarch64_ins_none): New.
-	* aarch64-asm.h (ins_none): New declaration.
-	* aarch64-dis.c (aarch64_ext_none): New.
-	* aarch64-dis.h (ext_none): New declaration.
-	* aarch64-opc.c (aarch64_print_operand): Update case for
-	AARCH64_OPND_BARRIER_PSB.
-	* aarch64-tbl.h (aarch64_opcode_table): Add tsb.
-	(AARCH64_OPERANDS): Update inserter/extracter for
-	AARCH64_OPND_BARRIER_PSB to use new dummy functions.
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-
-2020-04-20  Sudakshina Das  <sudi.das@arm.com>
-
-	* aarch64-tbl.h (aarch64_feature_bti, BTI, BTI_INSN): Remove.
-	(aarch64_feature_ras, RAS): Likewise.
-	(aarch64_feature_stat_profile, STAT_PROFILE): Likewise.
-	(aarch64_opcode_table): Update bti, xpaclri, pacia1716, pacib1716,
-	autia1716, autib1716, esb, psb, dgh, paciaz, paciasp, pacibz, pacibsp,
-	autiaz, autiasp, autibz, autibsp to be CORE_INSN.
-	* aarch64-asm-2.c: Regenerated.
-	* aarch64-dis-2.c: Regenerated.
-	* aarch64-opc-2.c: Regenerated.
-
-2020-04-17  Fredrik Strupe  <fredrik@strupe.net>
-
-	* arm-dis.c (neon_opcodes): Fix VDUP instruction masks.
-	(print_insn_neon): Support disassembly of conditional
-	instructions.
-
-2020-02-16  David Faust  <david.faust@oracle.com>
-
-	* bpf-desc.c: Regenerate.
-	* bpf-desc.h: Likewise.
-	* bpf-opc.c: Regenerate.
-	* bpf-opc.h: Likewise.
-
-2020-04-07  Lili Cui  <lili.cui@intel.com>
-
-	* i386-dis.c (enum): Add PREFIX_0F01_REG_5_MOD_3_RM_1,
-	(prefix_table): New instructions (see prefixes above).
-	(rm_table): Likewise
-	* i386-gen.c (cpu_flag_init): Add CPU_TSXLDTRK_FLAGS,
-	CPU_ANY_TSXLDTRK_FLAGS.
-	(cpu_flags): Add CpuTSXLDTRK.
-	* i386-opc.h (enum): Add CpuTSXLDTRK.
-	(i386_cpu_flags): Add cputsxldtrk.
-	* i386-opc.tbl: Add XSUSPLDTRK insns.
-	* i386-init.h: Regenerate.
-	* i386-tbl.h: Likewise.
-
-2020-04-02  Lili Cui  <lili.cui@intel.com>
-
-	* i386-dis.c (prefix_table): New instructions serialize.
-	* i386-gen.c (cpu_flag_init): Add CPU_SERIALIZE_FLAGS,
-	CPU_ANY_SERIALIZE_FLAGS.
-	(cpu_flags): Add CpuSERIALIZE.
-	* i386-opc.h (enum): Add CpuSERIALIZE.
-	(i386_cpu_flags): Add cpuserialize.
-	* i386-opc.tbl: Add SERIALIZE insns.
-	* i386-init.h: Regenerate.
-	* i386-tbl.h: Likewise.
-
-2020-03-26  Alan Modra  <amodra@gmail.com>
-
-	* disassemble.h (opcodes_assert): Declare.
-	(OPCODES_ASSERT): Define.
-	* disassemble.c: Don't include assert.h.  Include opintl.h.
-	(opcodes_assert): New function.
-	* h8300-dis.c (bfd_h8_disassemble_init): Use OPCODES_ASSERT.
-	(bfd_h8_disassemble): Reduce size of data array.  Correctly
-	calculate maxlen.  Omit insn decoding when insn length exceeds
-	maxlen.  Exit from nibble loop when looking for E, before
-	accessing next data byte.  Move processing of E outside loop.
-	Replace tests of maxlen in loop with assertions.
-
-2020-03-26  Alan Modra  <amodra@gmail.com>
-
-	* arc-dis.c (find_format): Init needs_limm.  Simplify use of limm.
-
-2020-03-25  Alan Modra  <amodra@gmail.com>
-
-	* z80-dis.c (suffix): Init mybuf.
-
-2020-03-22  Alan Modra  <amodra@gmail.com>
-
-	* h8300-dis.c (bfd_h8_disassemble): Limit data[] access to that
-	successflly read from section.
+2021-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
 
-2020-03-22  Alan Modra  <amodra@gmail.com>
-
-	* arc-dis.c (find_format): Use ISO C string concatenation rather
-	than line continuation within a string.  Don't access needs_limm
-	before testing opcode != NULL.
-
-2020-03-22  Alan Modra  <amodra@gmail.com>
-
-	* ns32k-dis.c (print_insn_arg): Update comment.
-	(print_insn_ns32k): Reduce size of index_offset array, and
-	initialize, passing -1 to print_insn_arg for args that are not
-	an index.  Don't exit arg loop early.  Abort on bad arg number.
-
-2020-03-22  Alan Modra  <amodra@gmail.com>
-
-	* s12z-dis.c (abstract_read_memory): Don't print error on EOI.
-	* s12z-opc.c: Formatting.
-	(operands_f): Return an int.
-	(opr_n_bytes_p1): Return -1 on reaching buffer memory limit.
-	(opr_n_bytes2, bfextins_n_bytes, mul_n_bytes, bm_n_bytes),
-	(shift_n_bytes, mov_imm_opr_n_bytes, loop_prim_n_bytes),
-	(exg_sex_discrim): Likewise.
-	(create_immediate_operand, create_bitfield_operand),
-	(create_register_operand_with_size, create_register_all_operand),
-	(create_register_all16_operand, create_simple_memory_operand),
-	(create_memory_operand, create_memory_auto_operand): Don't
-	segfault on malloc failure.
-	(z_ext24_decode): Return an int status, negative on fail, zero
-	on success.
-	(x_imm1, imm1_decode, trap_decode, z_opr_decode, z_opr_decode2),
-	(imm1234, reg_s_imm, reg_s_opr, z_imm1234_8base, z_imm1234_0base),
-	(z_tfr, z_reg, reg_xy, lea_reg_xys_opr, lea_reg_xys, rel_15_7),
-	(decode_rel_15_7, cmp_xy, sub_d6_x_y, sub_d6_y_x),
-	(ld_18bit_decode, mul_decode, bm_decode, bm_rel_decode),
-	(mov_imm_opr, ld_18bit_decode, exg_sex_decode),
-	(loop_primitive_decode, shift_decode, psh_pul_decode),
-	(bit_field_decode): Similarly.
-	(z_decode_signed_value, decode_signed_value): Similarly.  Add arg
-	to return value, update callers.
-	(x_opr_decode_with_size): Check all reads, returning NULL on fail.
-	Don't segfault on NULL operand.
-	(decode_operation): Return OP_INVALID on first fail.
-	(decode_s12z): Check all reads, returning -1 on fail.
-
-2020-03-20  Alan Modra  <amodra@gmail.com>
-
-	* metag-dis.c (print_insn_metag): Don't ignore status from
-	read_memory_func.
-
-2020-03-20  Alan Modra  <amodra@gmail.com>
-
-	* nds32-dis.c (print_insn_nds32): Remove unnecessary casts.
-	Initialize parts of buffer not written when handling a possible
-	2-byte insn at end of section.  Don't attempt decoding of such
-	an insn by the 4-byte machinery.
-
-2020-03-20  Alan Modra  <amodra@gmail.com>
-
-	* ppc-dis.c (print_insn_powerpc): Only clear needed bytes of
-	partially filled buffer.  Prevent lookup of 4-byte insns when
-	only VLE 2-byte insns are possible due to section size.  Print
-	".word" rather than ".long" for 2-byte leftovers.
-
-2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25641
-	* z80-dis.c: Fix disassembling ED+A4/AC/B4/BC opcodes.
-
-2020-03-13  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (X86_64_0D): Rename to ...
-	(X86_64_0E): ... this.
-
-2020-03-09  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* Makefile.am ($(srcdir)/i386-init.h): Also pass -P to $(CPP).
-	* Makefile.in: Regenerated.
-
-2020-03-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (avx_irel): New. Use is for AVX512 vpcmp*
-	3-operand pseudos.
-	* i386-tbl.h: Re-generate.
-
-2020-03-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (xop_elem, xop_irel, xop_sign): New. Use them for XOP vpcom*,
-	vprot*, vpsha*, and vpshl*.
-	* i386-tbl.h: Re-generate.
-
-2020-03-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (avx_frel): New. Use it for AVX/AVX512 vcmpps,
-	vcmpss, vcmppd, and vcmpsd 3-operand pseudo-ops.
-	* i386-tbl.h: Re-generate.
-
-2020-03-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (set_bitfield): Ignore zero-length field names.
-	* i386-opc.tbl (sse_frel): New. Use it for SSE/SSE2 cmpps,
-	cmpss, cmppd, and cmpsd 2-operand pseudo-ops.
-	* i386-tbl.h: Re-generate.
-
-2020-03-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (struct template_arg, struct template_instance,
-	struct template_param, struct template, templates,
-	parse_template, expand_templates): New.
-	(process_i386_opcodes): Various local variables moved to
-	expand_templates. Call parse_template and expand_templates.
-	* i386-opc.tbl (cc): New. Use it for Jcc, SETcc, and CMOVcc.
-	* i386-tbl.h: Re-generate.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (vcvtdq2pd, vcvtps2pd, vcvtudq2pd, vcvtps2ph,
-	vcvtps2qq, vcvtps2uqq, vcvttps2qq, vcvttps2uqq): Fold separate
-	register and memory source templates. Replace VexW= by VexW*
-	where applicable.
-	* i386-tbl.h: Re-generate.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl: Drop IgnoreSize from various SIMD insns. Replace
-	VexW= by VexW* and VexVVVV=1 by just VexVVVV where applicable.
-	* i386-tbl.h: Re-generate.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (fildll, fistpll, fisttpll): Add ATTSyntax.
-	* i386-tbl.h: Re-generate.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (movq): Drop NoRex64 from XMM/XMM SSE2AVX variants.
-	(movmskps, pextrw, pinsrw, pmovmskb, movmskpd, extractps,
-	pextrb, pinsrb, roundsd): Drop NoRex64 and where applicable use
-	VexW0 on SSE2AVX variants.
-	(vmovq): Drop NoRex64 from XMM/XMM variants.
-	(vextractps, vmovmskpd, vmovmskps, vpextrb, vpextrw, vpinsrb,
-	vpinsrw, vpmovmskb, vroundsd, vpmovmskb): Drop NoRex64 and where
-	applicable use VexW0.
-	* i386-tbl.h: Re-generate.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (opcode_modifiers): Remove Rex64 field.
-	* i386-opc.h (Rex64): Delete.
-	(struct i386_opcode_modifier): Remove rex64 field.
-	* i386-opc.tbl (crc32): Drop Rex64.
-	Replace Rex64 with Size64 everywhere else.
-	* i386-tbl.h: Re-generate.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (OP_E_memory): Exclude recording of used address
-	prefix for "bnd" modes only in 64-bit mode. Don't decode 16-bit
-	addressed memory operands for MPX insns.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (movmskps, mwait, vmread, vmwrite, invept,
-	invvpid, invpcid, rdfsbase, rdgsbase, wrfsbase, wrgsbase, adcx,
-	adox, mwaitx, rdpid, movdiri): Add IgnoreSize.
-	(ptwrite): Split into non-64-bit and 64-bit forms.
-	* i386-tbl.h: Re-generate.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (tpause, umwait): Add IgnoreSize. Add 3-operand
-	template.
-	* i386-tbl.h: Re-generate.
-
-2020-03-04  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (PREFIX_0F01_REG_3_RM_1): New.
-	(prefix_table): Move vmmcall here. Add vmgexit.
-	(rm_table): Replace vmmcall entry by prefix_table[] escape.
-	* i386-gen.c (cpu_flag_init): Add CPU_SEV_ES_FLAGS entry.
-	(cpu_flags): Add CpuSEV_ES entry.
-	* i386-opc.h (CpuSEV_ES): New.
-	(union i386_cpu_flags): Add cpusev_es field.
-	* i386-opc.tbl (vmgexit): New.
-	* i386-init.h, i386-tbl.h: Re-generate.
-
-2020-03-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-gen.c (opcode_modifiers): Replace IgnoreSize/DefaultSize
-	with MnemonicSize.
-	* i386-opc.h (IGNORESIZE): New.
-	(DEFAULTSIZE): Likewise.
-	(IgnoreSize): Removed.
-	(DefaultSize): Likewise.
-	(MnemonicSize): New.
-	(i386_opcode_modifier): Replace ignoresize/defaultsize with
-	mnemonicsize.
-	* i386-opc.tbl (IgnoreSize): New.
-	(DefaultSize): Likewise.
-	* i386-tbl.h: Regenerated.
-
-2020-03-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25627
-	* z80-dis.c: Fix disassembly of LD IY,(HL) and D (HL),IX
-	instructions.
-
-2020-03-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25622
-	* i386-opc.tbl: Add IgnoreSize to cvtsi2sd, cvtsi2ss, vcvtsi2sd,
-	vcvtsi2ss, vcvtusi2sd and vcvtusi2ss for AT&T syntax.
-	* i386-tbl.h: Regenerated.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* aarch64-asm.c: Indent labels correctly.
-	* aarch64-dis.c: Likewise.
-	* aarch64-gen.c: Likewise.
-	* aarch64-opc.c: Likewise.
-	* alpha-dis.c: Likewise.
-	* i386-dis.c: Likewise.
-	* nds32-asm.c: Likewise.
-	* nfp-dis.c: Likewise.
-	* visium-dis.c: Likewise.
-
-2020-02-25  Claudiu Zissulescu <claziss@gmail.com>
-
-	* arc-regs.h (int_vector_base): Make it available for all ARC
-	CPUs.
-
-2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* riscv-dis.c (print_insn_args): Updated since the DECLARE_CSR is
-	changed.
-
-2020-02-19  Nelson Chu  <nelson.chu@sifive.com>
-
-	* riscv-opc.c (riscv_opcodes): Convert add/addi to the compressed
-	c.mv/c.li if rs1 is zero.
-
-2020-02-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-gen.c (cpu_flag_init): Replace CpuABM with
-	CpuLZCNT|CpuPOPCNT.  Add CpuPOPCNT to CPU_SSE4_2_FLAGS.  Add
-	CPU_POPCNT_FLAGS.
-	(cpu_flags): Remove CpuABM.  Add CpuPOPCNT.
-	* i386-opc.h (CpuABM): Removed.
-	(CpuPOPCNT): New.
-	(i386_cpu_flags): Remove cpuabm.  Add cpupopcnt.
-	* i386-opc.tbl: Replace CpuABM|CpuSSE4_2 with CpuPOPCNT on
-	popcnt.  Remove CpuABM from lzcnt.
-	* i386-init.h: Regenerated.
-	* i386-tbl.h: Likewise.
-
-2020-02-17  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (vcvtsi2sd, vcvtsi2ss, vcvtusi2sd, vcvtusi2ss):
-	Fold CpuNo64 and Cpu64 templates. Use VexLIG/EVexLIG and VexW0/
-	VexW1 instead of open-coding them.
-	* i386-tbl.h: Re-generate.
-
-2020-02-17  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (AddrPrefixOpReg): Define.
-	(monitor, invlpga, vmload, vmrun, vmsave, clzero, monitorx,
-	umonitor, movdir64b, enqcmd, enqcmds): Fold Cpu64 and CpuNo64
-	templates. Drop NoRex64.
-	* i386-tbl.h: Re-generate.
-
-2020-02-17  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/6518
-	* i386-opc.tbl (vcvtpd2dq, vcvtpd2ps, vcvttpd2dq, vcvtpd2udq,
-	vcvttpd2udq, vcvtqq2ps, vcvtuqq2ps): Split XMM/YMM source forms
-	into Intel syntax instance (with Unpsecified) and AT&T one
-	(without).
-	(vcvtneps2bf16): Likewise, along with folding the two so far
-	separate ones.
-	* i386-tbl.h: Re-generate.
-
-2020-02-16  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-gen.c (cpu_flag_init): Remove CPU_ANY_SSE3_FLAGS from
-	CPU_ANY_SSE4A_FLAGS.
-
-2020-02-17  Alan Modra  <amodra@gmail.com>
-
-	* i386-gen.c (cpu_flag_init): Correct last change.
-
-2020-02-16  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-gen.c (cpu_flag_init): Add CPU_ANY_SSE4A_FLAGS.  Remove
-	CPU_ANY_SSE4_FLAGS.
-
-2020-02-14  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-opc.tbl (movsx): Remove Intel syntax comments.
-	(movzx): Likewise.
-
-2020-02-14  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/25438
-	* i386-opc.tbl (movsx): Fold patterns. Also allow Reg32 as
-	destination for Cpu64-only variant.
-	(movzx): Fold patterns.
-	* i386-tbl.h: Re-generate.
-
-2020-02-13  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (cpu_flag_init): Move CpuSSE4a from
-	CPU_ANY_SSE_FLAGS entry to CPU_ANY_SSE3_FLAGS one. Add
-	CPU_ANY_SSE4_FLAGS entry.
-	* i386-init.h: Re-generate.
-
-2020-02-12  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (vfpclasspd, vfpclassps): Add Intel sytax form
-	with Unspecified, making the present one AT&T syntax only.
-	* i386-tbl.h: Re-generate.
-
-2020-02-12  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (jmp): Fold CpuNo64 and Amd64 direct variants.
-	* i386-tbl.h: Re-generate.
-
-2020-02-12  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/24546
-	* i386-dis.c (putop): Handle REX.W in '^' case for Intel64 mode.
-	* i386-opc.tbl (lfs, lgs, lss, lcall, ljmp): Split into
-	Amd64 and Intel64 templates.
-	(call, jmp): Likewise for far indirect variants. Dro
-	Unspecified.
-	* i386-tbl.h: Re-generate.
-
-2020-02-11  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-gen.c (opcode_modifiers): Remove ShortForm entry.
-	* i386-opc.h (ShortForm): Delete.
-	(struct i386_opcode_modifier): Remove shortform field.
-	* i386-opc.tbl (mov, movabs, push, pop, xchg, inc, dec, fld,
-	fst, fstp, fxch, fcom, fcomp, fucom, fucomp, fadd, faddp, fsub,
-	fsubp, fsubr, fsubrp, fmul, fmulp, fdiv, fdivp, fdivr, fdivrp,
-	ffreep, bswap, fcmov*, fcomi, fcomip, fucomi, fucomip, movq):
-	Drop ShortForm.
-	* i386-tbl.h: Re-generate.
-
-2020-02-11  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (fcomi, fucomi, fcomip, fcompi, fucomip,
-	fucompi): Drop ShortForm from operand-less templates.
-	* i386-tbl.h: Re-generate.
-
-2020-02-11  Alan Modra  <amodra@gmail.com>
-
-	* cgen-ibld.in (extract_normal): Set *valuep on all return paths.
-	* bpf-ibld.c, * epiphany-ibld.c, * fr30-ibld.c, * frv-ibld.c,
-	* ip2k-ibld.c, * iq2000-ibld.c, * lm32-ibld.c, * m32c-ibld.c,
-	* m32r-ibld.c, * mep-ibld.c, * mt-ibld.c, * or1k-ibld.c,
-	* xc16x-ibld.c, * xstormy16-ibld.c: Regenerate.
-
-2020-02-10  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* arm-dis.c (print_insn_cde): Define 'V' parse character.
-	(cde_opcodes): Add VCX* instructions.
-
-2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>
-	    Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* arm-dis.c (struct cdeopcode32): New.
-	(CDE_OPCODE): New macro.
-	(cde_opcodes): New disassembly table.
-	(regnames): New option to table.
-	(cde_coprocs): New global variable.
-	(print_insn_cde): New
-	(print_insn_thumb32): Use print_insn_cde.
-	(parse_arm_disassembler_options): Parse coprocN args.
-
-2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25516
-	* i386-gen.c (opcode_modifiers): Replace AMD64 and Intel64
-	with ISA64.
-	* i386-opc.h (AMD64): Removed.
-	(Intel64): Likewose.
-	(AMD64): New.
-	(INTEL64): Likewise.
-	(INTEL64ONLY): Likewise.
-	(i386_opcode_modifier): Replace amd64 and intel64 with isa64.
-	* i386-opc.tbl (Amd64): New.
-	(Intel64): Likewise.
-	(Intel64Only): Likewise.
-	Replace AMD64 with Amd64.  Update sysenter/sysenter with
-	Cpu64 and Intel64Only.  Remove AMD64 from sysenter/sysenter.
-	* i386-tbl.h: Regenerated.
-
-2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25469
-	* z80-dis.c: Add support for GBZ80 opcodes.
-
-2020-02-04  Alan Modra  <amodra@gmail.com>
-
-	* d30v-dis.c (print_insn): Make "val" and "opnum" unsigned.
-
-2020-02-03  Alan Modra  <amodra@gmail.com>
-
-	* m32c-ibld.c: Regenerate.
-
-2020-02-01  Alan Modra  <amodra@gmail.com>
-
-	* frv-ibld.c: Regenerate.
-
-2020-01-31  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (EXxmm_mdq, xmm_mdq_mode): Delete.
-	(intel_operand_size, OP_EX): Drop xmm_mdq_mode case label.
-	(OP_E_memory): Replace xmm_mdq_mode case label by
-	vex_scalar_w_dq_mode one.
-	* i386-dis-evex-prefix.h: Replace EXxmm_mdq by EXVexWdqScalar.
-
-2020-01-31  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (EXVexWdq, vex_w_dq_mode): Delete.
-	(vex_vsib_d_w_dq_mode, vex_vsib_q_w_dq_mode,
-	vex_scalar_w_dq_mode): Don't refer to vex_w_dq_mode in comments.
-	(intel_operand_size): Drop vex_w_dq_mode case label.
-
-2020-01-31  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* aarch64-tbl.h (aarch64_opcode): Set C_MAX_ELEM for SVE bfcvt.
-	Remove C_SCAN_MOVPRFX for SVE bfcvtnt.
-
-2020-01-30  Alan Modra  <amodra@gmail.com>
-
-	* m32c-ibld.c: Regenerate.
-
-2020-01-30  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* bpf-opc.c: Regenerate.
-
-2020-01-30  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (X86_64_C2, X86_64_C3): New enumerators.
-	(dis386): Use them to replace C2/C3 table entries.
-	(x86_64_table): Add X86_64_C2 and X86_64_C3 entries.
-	* i386-opc.tbl (ret): Split Cpu64 entries into AMD64 and Intel64
-	ones. Use Size64 instead of DefaultSize on Intel64 ones.
-	* i386-tbl.h: Re-generate.
-
-2020-01-30  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (call): Drop DefaultSize from Intel64 JumpDword
-	forms.
-	(fldenv, fnstenv, fstenv, fnsave, fsave, frstor): Drop
-	DefaultSize.
-	* i386-tbl.h: Re-generate.
-
-2020-01-30  Alan Modra  <amodra@gmail.com>
-
-	* tic4x-dis.c (tic4x_dp): Make unsigned.
-
-2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
-	    Jan Beulich  <jbeulich@suse.com>
-
-	PR binutils/25445
-	* i386-dis.c (MOVSXD_Fixup): New function.
-	(movsxd_mode): New enum.
-	(x86_64_table): Use MOVSXD_Fixup and movsxd_mode on movsxd.
-	(intel_operand_size): Handle movsxd_mode.
-	(OP_E_register): Likewise.
-	(OP_G): Likewise.
-	* i386-opc.tbl: Remove Rex64 and allow 32-bit destination
-	register on movsxd.  Add movsxd with 16-bit destination register
-	for AMD64 and Intel64 ISAs.
-	* i386-tbl.h: Regenerated.
-
-2020-01-27  Tamar Christina  <tamar.christina@arm.com>
-
-	PR 25403
-	* aarch64-tbl.h (struct aarch64_opcode): Re-order cfinv.
-	* aarch64-asm-2.c: Regenerate
+	* aarch64-asm-2.c: Regenerate.
 	* aarch64-dis-2.c: Likewise.
 	* aarch64-opc-2.c: Likewise.
+	* aarch64-opc.c (aarch64_print_operand):
+	Delete handling of AARCH64_OPND_CSRE_CSR.
+	* aarch64-tbl.h (aarch64_feature_csre): Delete.
+	(CSRE): Likewise.
+	(_CSRE_INSN): Likewise.
+	(aarch64_opcode_table): Delete csr.
 
-2020-01-21  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (sysret): Drop DefaultSize.
-	* i386-tbl.h: Re-generate.
-
-2020-01-21  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (vcvtneps2bf16x): Add Broadcast, Xmmword, and
-	Dword.
-	(vcvtneps2bf16y): Add Broadcast, Ymmword, and Dword.
-	* i386-tbl.h: Re-generate.
-
-2020-01-20  Nick Clifton  <nickc@redhat.com>
+2021-01-11  Nick Clifton  <nickc@redhat.com>
 
 	* po/de.po: Updated German translation.
+	* po/fr.po: Updated French translation.
 	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+	* po/sv.po: Updated Swedish translation.
 	* po/uk.po: Updated Ukranian translation.
 
-2020-01-20  Alan Modra  <amodra@gmail.com>
-
-	* hppa-dis.c (fput_const): Remove useless cast.
-
-2020-01-20  Alan Modra  <amodra@gmail.com>
-
-	* arm-dis.c (print_insn_arm): Wrap 'T' value.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
 	* po/opcodes.pot: Regenerate.
 
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.34 branch created.
-
-2020-01-17  Christian Biesinger  <cbiesinger@google.com>
-
-	* opintl.h: Fix spelling error (seperate).
-
-2020-01-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* i386-opc.tbl: Add {vex} pseudo prefix.
-	* i386-tbl.h: Regenerated.
-
-2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	PR 25376
-	* opcodes/arm-dis.c (coprocessor_opcodes): Use CORE_HIGH for MVE bits.
-	(neon_opcodes): Likewise.
-	(select_arm_features): Make sure we enable MVE bits when selecting
-	armv8.1-m.main.  Make sure we do not enable MVE bits when not selecting
-	any architecture.
-
-2020-01-16  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl: Drop stale comment from XOP section.
-
-2020-01-16  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-opc.tbl (movq): Add VexWIG to SSE2AVX XMM->XMM forms.
-	(extractps): Add VexWIG to SSE2AVX forms.
-	* i386-tbl.h: Re-generate.
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-2020-01-16  Jan Beulich  <jbeulich@suse.com>
+	* 2.36 release branch crated.
 
-	* i386-opc.tbl (pextrq, pinsrq): Drop IgnoreSize and Qword. Drop
-	Size64 from and use VexW1 on SSE2AVX forms.
-	(vpextrq, vpinsrq): Drop IgnoreSize and Qword. Drop Size64 from
-	VEX-encoded forms. Add Cpu64 to EVEX-encoded forms. Use VexW1.
-	* i386-tbl.h: Re-generate.
+2021-01-08  Peter Bergner  <bergner@linux.ibm.com>
 
-2020-01-15  Alan Modra  <amodra@gmail.com>
+	* ppc-opc.c (insert_dw, (extract_dw): New functions.
+	(DW, (XRC_MASK): Define.
+	(powerpc_opcodes) <hashchk, hashchkp, hashst, haststp>: New mnemonics.
 
-	* tic4x-dis.c (tic4x_version): Make unsigned long.
-	(optab, optab_special, registernames): New file scope vars.
-	(tic4x_print_register): Set up registernames rather than
-	malloc'd registertable.
-	(tic4x_disassemble): Delete optable and optable_special.  Use
-	optab and optab_special instead.  Throw away old optab,
-	optab_special and registernames when info->mach changes.
+2021-01-09  Alan Modra  <amodra@gmail.com>
 
-2020-01-14  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25377
-	* z80-dis.c (suffix): Use .db instruction to generate double
-	prefix.
-
-2020-01-14  Alan Modra  <amodra@gmail.com>
-
-	* z8k-dis.c (unpack_instr): Formatting.  Cast unsigned short
-	values to unsigned before shifting.
-
-2020-01-13  Thomas Troeger  <tstroege@gmx.de>
-
-	* arm-dis.c (print_insn_arm): Fill in insn info fields for control
-	flow instructions.
-	(print_insn_thumb16, print_insn_thumb32): Likewise.
-	(print_insn): Initialize the insn info.
-	* i386-dis.c (print_insn): Initialize the insn info fields, and
-	detect jumps.
-
-2012-01-13  Claudiu Zissulescu <claziss@gmail.com>
-
-	* arc-opc.c (C_NE): Make it required.
-
-2012-01-13  Claudiu Zissulescu <claziss@gmail.com>
-
-        * opcode/arc-dis.c (regnames): Correct ACCL/ACCH naming, fix typo
-	reserved register name.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* ns32k-dis.c (Is_gen): Use strchr, add 'f'.
-	(print_insn_ns32k): Adjust ioffset for 'f' index_offset.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* wasm32-dis.c (print_insn_wasm32): Localise variables.  Store
-	result of wasm_read_leb128 in a uint64_t and check that bits
-	are not lost when copying to other locals.  Use uint32_t for
-	most locals.  Use PRId64 when printing int64_t.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* score-dis.c: Formatting.
-	* score7-dis.c: Formatting.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* score-dis.c (print_insn_score48): Use unsigned variables for
-	unsigned values.  Don't left shift negative values.
-	(print_insn_score32): Likewise.
-	* score7-dis.c (print_insn_score32, print_insn_score16): Likewise.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* tic4x-dis.c (tic4x_print_register): Remove dead code.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* fr30-ibld.c: Regenerate.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* xgate-dis.c (print_insn): Don't left shift signed value.
-	(ripBits): Formatting, use 1u.
-
-2020-01-10  Alan Modra  <amodra@gmail.com>
-
-	* tilepro-opc.c (parse_insn_tilepro): Make opval unsigned.
-	* tilegx-opc.c (parse_insn_tilegx): Likewise.  Delete raw_opval.
-
-2020-01-10  Alan Modra  <amodra@gmail.com>
-
-	* m10300-dis.c (disassemble): Move extraction of DREG, AREG, RREG,
-	and XRREG value earlier to avoid a shift with negative exponent.
-	* m10200-dis.c (disassemble): Similarly.
-
-2020-01-09  Nick Clifton  <nickc@redhat.com>
-
-	PR 25224
-	* z80-dis.c (ld_ii_ii): Use correct cast.
-
-2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25224
-	* z80-dis.c (ld_ii_ii): Use character constant when checking
-	opcode byte value.
-
-2020-01-09  Jan Beulich  <jbeulich@suse.com>
-
-	* i386-dis.c (SEP_Fixup): New.
-	(SEP): Define.
-	(dis386_twobyte): Use it for sysenter/sysexit.
-	(enum x86_64_isa): Change amd64 enumerator to value 1.
-	(OP_J): Compare isa64 against intel64 instead of amd64.
-	* i386-opc.tbl (sysenter, sysexit): Split into AMD64 and Intel64
-	forms.
-	* i386-tbl.h: Re-generate.
-
-2020-01-08  Alan Modra  <amodra@gmail.com>
-
-	* z8k-dis.c: Include libiberty.h
-	(instr_data_s): Make max_fetched unsigned.
-	(z8k_lookup_instr): Make nibl_index and tabl_index unsigned.
-	Don't exceed byte_info bounds.
-	(output_instr): Make num_bytes unsigned.
-	(unpack_instr): Likewise for nibl_count and loop.
-	* z8kgen.c (gas <opcode_entry_type>): Make noperands, length and
-	idx unsigned.
-	* z8k-opc.h: Regenerate.
-
-2020-01-07  Shahab Vahedi  <shahab@synopsys.com>
-
-	* arc-tbl.h (llock): Use 'LLOCK' as class.
-	(llockd): Likewise.
-	(scond): Use 'SCOND' as class.
-	(scondd): Likewise.
-	(llockd): Set data_size_mode to 'C_ZZ_D' which is 64-bit.
-	(scondd): Likewise.
-
-2020-01-06  Alan Modra  <amodra@gmail.com>
-
-	* m32c-ibld.c: Regenerate.
-
-2020-01-06  Alan Modra  <amodra@gmail.com>
-
-	PR 25344
-	* z80-dis.c (suffix): Don't use a local struct buffer copy.
-	Peek at next byte to prevent recursion on repeated prefix bytes.
-	Ensure uninitialised "mybuf" is not accessed.
-	(print_insn_z80): Don't zero n_fetch and n_used here,..
-	(print_insn_z80_buf): ..do it here instead.
-
-2020-01-04  Alan Modra  <amodra@gmail.com>
-
-	* m32r-ibld.c: Regenerate.
-
-2020-01-04  Alan Modra  <amodra@gmail.com>
+	* configure: Regenerate.
 
-	* cr16-dis.c (cr16_match_opcode): Avoid shift left of signed value.
+2021-01-08  Nick Clifton  <nickc@redhat.com>
 
-2020-01-04  Alan Modra  <amodra@gmail.com>
+	* po/sv.po: Updated Swedish translation.
 
-	* crx-dis.c (match_opcode): Avoid shift left of signed value.
+2021-01-08  Nick Clifton  <nickc@redhat.com>
 
-2020-01-04  Alan Modra  <amodra@gmail.com>
+	PR 27129
+	* aarch64-dis.c (determine_disassembling_preference): Move call to
+	aarch64_match_operands_constraint outside of the assertion.
+	* aarch64-asm.c (aarch64_ins_limm_1): Remove call to assert.
+	Replace with a return of FALSE.
 
-	* d30v-dis.c (print_insn): Avoid signed overflow in left shift.
+	PR 27139
+	* aarch64-opc.c (aarch64_sys_regs): Treat id_aa64mmfr2_el1 as a
+	core system register.
 
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
+2021-01-07  Samuel Thibault  <samuel.thibault@gnu.org>
 
-	* aarch64-tbl.h (aarch64_opcode_table): Use
-	SVE_ADDR_RX_LSL{1,2,3} for LD1RO{H,W,D}.
+	* configure: Regenerate.
 
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
+2021-01-07  Nick Clifton  <nickc@redhat.com>
 
-	* aarch64-tbl.h (aarch64_opcode_table): Correct SIMD
-	forms of SUDOT and USDOT.
+	* po/fr.po: Updated French translation.
 
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
+2021-01-07  Fredrik Noring  <noring@nocrew.org>
 
-	* aarch64-tbl.h (aarch64_opcode_table): Drop 'i' from
-	uzip{1,2}.
-	* opcodes/aarch64-dis-2.c: Re-generate.
+	* m68k-opc.c (chkl): Change minimum architecture requirement to
+	m68020.
 
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
+2021-01-07  Philipp Tomsich  <prt@gnu.org>
 
-	* aarch64-tbl.h (aarch64_opcode_table): Correct 64-bit
-	FMMLA encoding.
-	* opcodes/aarch64-dis-2.c: Re-generate.
+	* riscv-opc.c (riscv_opcodes): Add pause hint instruction.
 
-2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+2021-01-07  Claire Xenia Wolf  <claire@symbioticeda.com>
+	    Jim Wilson  <jimw@sifive.com>
+	    Andrew Waterman  <andrew@sifive.com>
+	    Maxim Blinov  <maxim.blinov@embecosm.com>
+	    Kito Cheng  <kito.cheng@sifive.com>
+	    Nelson Chu  <nelson.chu@sifive.com>
 
-	* z80-dis.c: Add support for eZ80 and Z80 instructions.
+	* riscv-opc.c (riscv_opcodes): Add ZBA/ZBB/ZBC instructions.
+	(MASK_RVB_IMM): Used for rev8 and orc.b encoding.
 
-2020-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/etc/ChangeLog b/etc/ChangeLog
index 8742e2afc15..33abc09278b 100644
--- a/etc/ChangeLog
+++ b/etc/ChangeLog
@@ -1,3 +1,7 @@
+2021-01-01  Alan Modra  <amodra@gmail.com>
+
+	* update-copyright.py (BinutilsCmdLine.__init__): Add libctf.
+
 2020-01-15  Simon Marchi  <simon.marchi@polymtl.ca>
 
 	* texi2pod.pl: Handle @t{...} tags.
diff --git a/binutils/ChangeLog b/binutils/ChangeLog
index 4b6cd9f755e..4b3bee013a4 100644
--- a/binutils/ChangeLog
+++ b/binutils/ChangeLog
@@ -1,1306 +1,78 @@
-2021-01-01  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-12-31  Alan Modra  <amodra@gmail.com>
-	PR 27128
-	* nm.c (print_symname): Append version string to symbol name
-	before printing the lot under control of "form".  Append version
-	to demangled names too.
-
-	2020-08-22  H.J. Lu  <hongjiu.lu@intel.com>
-	PR ld/26382
-	* nm.c (print_symname): Display only one '@' for undefined
-	versioned symbols.
-	* doc/binutils.texi: Update nm version information.
-
-	2020-08-10  H.J. Lu  <hongjiu.lu@intel.com>
-	PR binutils/26302
-	* nm.c (with_symbol_versions): Removed.
-	(long_option_values): Add OPTION_WITH_SYMBOL_VERSIONS.
-	(long_options): Update --with-symbol-versions entry.
-	(print_symbol): Remove the with_symbol_versions check.
-	(main): Add OPTION_WITH_SYMBOL_VERSIONS for backward
-	compatibility.
-	* doc/binutils.texi: Remove --with-symbol-versions.
-
-2020-11-22  Alan Modra  <amodra@gmail.com>
-
-	PR 26929
-	Apply from mainline
-	2020-07-06  Alan Modra  <amodra@gmail.com>
-	* readelf.c (print_dynamic_symbol): Don't sprintf to buffer to
-	find string length.
-
-2020-11-16  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-10-29  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/26808
-	* dwarf.c (abbrev_list): Add abbrev_base.
-	(new_abbrev_list): Add an abbrev_base argument and record it.
-	(find_abbrev_list_by_abbrev_offset): Add an abbrev_base argument
-	and match it.
-	(process_debug_info): Pass abbrev_base to new_abbrev_list and
-	find_abbrev_list_by_abbrev_offset.
-	(display_debug_abbrev): Pass 0 abbrev_base to new_abbrev_list
-	and find_abbrev_list_by_abbrev_offset.
-	* testsuite/binutils-all/x86-64/pr26808.dump: New file.
-	* testsuite/binutils-all/x86-64/pr26808.dwp.bz2: Likewise.
-	* testsuite/binutils-all/x86-64/x86-64.exp: Run PR binutils/26808
-	test.
-
-2020-11-15  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-11-10  Nick Clifton  <nickc@redhat.com>
-
-	* dwarf.c (skip_attr_bytes): Correctly handle DW_FORM_ref8.
-	(get_type_abbrev_from_form): Accept DW_FORM_ref8.
-
-2020-11-15  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-10-27  Nick Clifton  <nickc@redhat.com>
-
-	* dwarf.c (struct abbrev_list): New structure.  Used to collect
-	lists of abbreviation sets.
-	(struct abbrev_map): New structure.  Used to map CU offsets to
-	abbreviation offsets.
-	(record_abbrev_list): New function.  A new entry to an
-	abbreviation list.
-	(free_all_abbrevs): Update to free abbreviation lists.
-	(new_abbrev_list): New function.  Start a new abbreviation
-	list.
-	(find_abbrev_list_by_abbrev_offset): New function.
-	(find_abbrev_map_by_offset): New function.
-	(add_abbrev): Add abbrev_list parameter.
-	(add_abbrev_attr): Likewise.
-	(process_abbrev_section): Rename to process_abbrev_set and add
-	list parameter.
-	(get_type_abbrev_from_form): New function.  Attempts to decode the
-	forms used by DW_AT_type attributes.
-	(get_type_signedness): Display type names if operating in wide
-	mode.  Use get_type_abbrev_from_form.
-	(read_and_display_attr_value): Use get_type_abbrev_from_form.
-	(process_debug_info): Pre-parse the CU headers to collate all the
-	abbrevs before starting the main scan.
-	(process_debug_abbrev): Do not free any loaded abbrevs.
-	(free_debug_memory): Free the abbrev maps.
-
-2020-11-15  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-10-21  Nick Clifton  <nickc@redhat.com>
-
-	* dwarf.c (skip_attr_bytes): Accept DWARF versions higher than 4
-	when processing the DW_FORM_ref_addr form.
-	Skip bytes in DW_FORM_block and DW_FORM_exprloc forms.
-	Handle DW_FORM_indirect.
-	(get_type_signedness): Allow a limited amount of recursion.
-	Do not attempt to decode types that use the DW_FORM_ref_addr form.
-	(read_and_display_attr_value): 	Do not attempt to decode types
-	that use the DW_FORM_ref_addr form.
-
-2020-11-15  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-11-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>
-
-	* dwarf.c (display_debug_rnglists_list): Only bias the
-	DW_RLS_offset_pair with the base address.
-
-2020-11-15  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-09-29  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf.c (display_loclists_list): Handle DW_LLE_start_end and
-	DW_LLE_start_length. Only add base_address for DW_LLE_offset_pair.
-
-2020-11-15  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-09-23  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf.c (process_debug_info): Print Unit Type for DWARF5.
-	* testsuite/binutils-all/dw5.W: Adjust expected output.
-	* testsuite/binutils-all/dwarf-attributes.W: Likewise.
-
-2020-11-15  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-09-23  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf.c (read_and_display_attr_value): Handle DW_FORM_ref_addr
-	for dwarf_version 5 just as version 3 and 4 (only 2 is
-	different).
-	(process_debug_info): Allow DW_UT_partial.
-
-2020-09-19  Nick Clifton  <nickc@redhat.com>
-
-	This is the 2.35.1 point release.
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
-	* po/binutils.pot: Regenerate.
 
-2020-09-03  Nick Clifton  <nickc@redhat.com>
-
-	Import from mainline:
-	2020-08-28  Nick Clifton  <nickc@redhat.com>
-
-	PR 26548
-	* dwarf.c (read_leb128): When checking for overflow of a signed
-	read, use a signed shift.
-
-2020-08-25  Nick Clifton  <nickc@redhat.com>
-
-	Backport from the mainline:
-	2020-08-21  Mark Wielaard  <mark@klomp.org>
-
-	* testsuite/binutils-all/readelf.exp (readelf_wi_test): Also
-	recognize DW_LANG_C11.
-
-2020-08-12  Nick Clifton  <nickc@redhat.com>
-
-	* po/sr.po: Updated Serbian translation.
-
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
+	This is the 2.36 release.
 	* configure: Regenerate.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-14  Nick Clifton  <nickc@redhat.com>
 
-	2.35 Release:
-	* configure: Regenerate.
-	* po/binutils.pot: Regenerate.
+	* po/sv.po: Updated Swedish translation.
 
-2020-07-13  Nick Clifton  <nickc@redhat.com>
+2021-01-12  Nick Clifton  <nickc@redhat.com>
 
 	* po/fr.po: Updated French translation.
 
-2020-07-06  Nick Clifton  <nickc@redhat.com>
+2021-01-11  Nick Clifton  <nickc@redhat.com>
 
-	* po/bg.po: Updated Bulgarian translation.
 	* po/pt.po: Updated Portuguese translation.
+	* po/sr.po: Updated Serbian translation.
 	* po/uk.po: Updated Ukranian translation.
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
 	* po/binutils.pot: Regenerate.
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.35 branch created.
-
-2020-07-02  Nick Clifton  <nickc@redhat.com>
-
-	PR 26028
-	* readelf.c (print_symbol): Handle truncation of symbol names.
-	(options): Add -T/--silent-truncation option.
-	(parse_args): Handle the option.
-	(print_dynamic_symbol): Correct calculation of width available to
-	display symbol name.
-	* doc/binutils.texi: Document the -T option to readelf.
-	* NEWS: Mention the new feature.
-
-2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* NEWS: Mention x86 NaCl target support removal.
-	* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): Remove
-	x86 NaCl target support.
-	* testsuite/binutils-all/elfedit-1.d: Likewise.
-	* testsuite/binutils-all/i386/i386.exp: Likewise.
-	* testsuite/binutils-all/x86-64/objects.exp: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.
-	* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.
-	* testsuite/binutils-all/x86-64/x86-64.exp: Likewise.
-
-2020-06-30  Nick Clifton  <nickc@redhat.com>
-
-	* dwarf.c (read_and_display_attr_value): Support
-	DW_FORM_GNU_strp_alt when used with DW_AT_dwo_name and
-	DW_AT_comp_dir.
-
-2020-06-30  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/readelf.exp (readelf_dump_test): Remove
-	xfail for nds32.
-
-2020-06-29  Hans-Peter Nilsson  <hp@bitrange.com>
-
-	* dwarf.c (display_debug_str_offsets): Rename local variable
-	index to idx.  Move to top of function.
-
-2020-06-29  Alan Modra  <amodra@gmail.com>
-
-	* dwarf.c: Use C style comments.
-	* resrc.c: Likewise.
-
-2020-06-27  Alan Modra  <amodra@gmail.com>
-
-	* elfcomm.c (setup_nested_archive): Set nested_arch->file to NULL
-	after freeing.
-	(release_archive): Set fields of arch to NULL after freeing.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* readelf.c (dump_section_as_ctf): Support .ctf archives using
-	ctf_arc_bufopen.  Automatically load the .ctf member of such
-	archives as the parent of all other members, unless specifically
-	overridden via --ctf-parent.  Split out dumping code into...
-	(dump_ctf_archive_member): ... here, as in objdump, and call
-	it once per archive member.
-	(dump_ctf_indent_lines): Code style fix.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* configure.ac [--enable-libctf]: New, default yes.
-	Set ENABLE_LIBCTF accordingly.
-	* Makefile.am [!ENABLE_LIBCTF]: Empty LIBCTF and LIBCTF_NOBFD.
-	* configure: Regenerate.
-	* config.in: Regenerate.
-	* Makefile.in: Regenerate.
-	* aclocal.m4: Regenerate.
-	* objdump.c (usage): Conditionalize portions on ENABLE_LIBCTF.
-	(option_values): Likewise.
-	(long_options): Likewise.
-	(main): Likewise.
-	(dump_ctf_indent_lines): Conditionalize out when !ENABLE_LIBCTF.
-	(make_ctfsect): Likewise.
-	(dump_ctf_archive_member): Likewise.
-	(dump_ctf) [ENABLE_LIBCTF]: Likewise.
-	(dump_ctf) [!ENABLE_LIBCTF]: New empty stub.
-	* readelf.c (options): Conditionalize portions on ENABLE_LIBCTF.
-	(usage): Likewise.
-	(process_section_contents): Likewise.
-	(shdr_to_ctf_sect): Conditionalize out when !ENABLE_LIBCTF.
-	(dump_ctf_indent_lines): Likewise.
-	(dump_section_as_ctf) [ENABLE_LIBCTF]: Likewise.
-
-2020-06-26  Jan Beulich  <jbeulich@suse.com>
-
-	* doc/binutils.texi: Adjust description of x86's -Msuffix. Drop
-	redundant text from x86 specific part of -M section.
-
-2020-06-26  Pat Bernardi  <bernardi@adacore.com>
-
-	* readelf.c (display_m68k_gnu_attribute): New function.
-	(process_arch_specific): Call display_m68k_gnu_attribute for EM_68K.
-
-2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/26160
-	* testsuite/binutils-all/pr26160.dwp.bz2: New file.
-	* testsuite/binutils-all/pr26160.r: Likewise.
-	* testsuite/binutils-all/readelf.exp: Run PR binutils/26160 test.
-
-2020-06-23  Nick Clifton  <nickc@redhat.com>
-
-	PR 26160
-	* dwarf.c (fetch_indexed_string): Detect and handle old style
-	.debug_str_offset tables.
-	(display_debug_str_offsets): Likewise.  Also add support for
-	.debug_str_offsets.dwo sections.
-
-2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/26112
-	* testsuite/binutils-all/pr26112.o.bz2: New file.
-	* testsuite/binutils-all/pr26112.r: Likewise.
-	* testsuite/binutils-all/readelf.exp: Run PR binutils/26112 test.
-
-2020-06-23  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/objdump.exp (bintest.a): Correct
-	remote_file delete command.
-
-2020-06-22  Nick Clifton  <nickc@redhat.com>
-
-	PR 26112
-	* dwarf.c (display_debug_str_offsets): Add code to display the
-	contents of the .debug_str_offsets section.
-	(display_debug_macro): Add support for DW_MACRO_define_strx and
-	DW_MACRO_undef_strx.
-
-2020-06-22  Saagar Jha  <saagar@saagarjha.com>
-
-	* od-macho.c: Dump linkedit data for new load commands.
-
-2020-06-19  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.
-	* testsuite/lib/binutils-common.exp (check_relro_support): New proc.
-	(run_dump_test): Use check_relro_support to decide whether to pass
-	extra ld option "-z norelro".
-
-2020-06-11  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_mips_specific): Don't alloc memory for
-	Elf_Internal_Options.
-
-2020-06-11  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_mips_specific): Assert size of internal
-	types match size of external types, and simplify allocation of
-	internal buffer.  Catch possible integer overflow when sanity
-	checking option size.  Don't assume options are a regular array.
-	Sanity check reginfo option against option size.  Use PRI macros
-	when printing.
-
-2020-06-10  Ralf Habacker  <ralf.habacker@freenet.de>
-
-	PR 26082
-	* mclex.c (yylex): Reject lines that reach end-of-file without a
-	terminating newline character.
-
-2020-06-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 26093
-	* doc/binutils.texi (strings): Fix typo.
-
-2020-06-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 26086
-	* dwarf.c (process_debug_info): Check that there is space in the
-	debug_information array before filling in an entry.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* doc/binutils.texi (PowerPC -M option): Mention power10 and pwr10.
-
-2020-06-05  Joel Anderson  <joelanderson333@gmail.com>
-
-	PR 26082
-	* mclex.c (yylex): Add test for an empty input stream.
-
-2020-06-04  Stephen Casner  <casner@acm.org>
-
-	* testsuite/binutils-all/pr25662-pdp11.s: Alternate source file
-	for test using section pseudo-ops compatible with pdp11.
-	* testsuite/binutils-all/objcopy.exp: Select alternate source.
-
-2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* objdump.c (disassemble_data): Set disasm_info.endian_code to
-	disasm_info.endian after the latter is initialized to the
-	endianness reported by BFD.
-
-2020-06-04  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/i386/i386.exp: Remove global directive
-	outside proc body.
-	* testsuite/binutils-all/x86-64/objects.exp: Likewise.
-	* testsuite/binutils-all/x86-64/x86-64.exp: Likewise.
-
-2020-06-03  Joel Anderson  <joelanderson333@gmail.com>
-
-	* windmc.h (struct mc_node): Add id_typecast field.
-	* mcparse.y (message): Initialise the id_typecast field.
-	* windmc.c (write_dbg): Use the id_typecast field as a parameter
-	when calling write_dbg_define.
-	(write_header): Likewise.
-
-2020-06-03  Alan Modra  <amodra@gmail.com>
-
-	PR 26069
-	* objcopy.c (copy_relocations_in_section): Free relpp on error.
-	Don't accidentally free isection->orelocation.
-
-2020-06-02  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/ar.exp (obj): Set up object file name
-	extension.  Use throughout.  Don't completely exclude non-ELF
-	alpha targets.  Run long_filenames test for tic30.  Exclude thin
-	archive tests for aix, ecoff and vms.
-	* estsuite/binutils-all/objdump.exp (obj): Set up object file name
-	extension.  Use throughout.  Don't exclude non-ELF alpha targets
-	from "bintest.a".
-
-2020-05-28  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* MAINTAINERS (Xtensa): Add myself as maintainer.
-
-2020-05-23  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/ar.exp (many_files): New test.
-
-2020-05-21  Alan Modra  <amodra@gmail.com>
-
-	* addr2line.c: Replace "if (x) free (x)" with "free (x)" throughout.
-	* dlltool.c: Likewise.
-	* elfcomm.c: Likewise.
-	* rddbg.c: Likewise.
-	* readelf.c: Likewise.
-	* stabs.c: Likewise.
-	* windmc.c: Likewise.
-	* windres.c: Likewise.
-	* wrstabs.c: Likewise.
-
-2020-05-21  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (get_num_dynamic_syms): Bounds check mipsxlat array
-	access.
-
-2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* dwarf.c: Updated since DECLARE_CSR is changed.
-
-2020-05-19  H.J. Lu  <hjl.tools@gmail.com>
-
-	PR binutils/25809
-	* readelf.c (process_program_headers): Warn if the PT_DYNAMIC
-	segment doesn't match the .dynamic section and checks are
-	enabled.
-	(struct filedata): Add dynamic_symtab_section and
-	dynamic_strtab_section fields.
-	(process_section_headers): Set dynamic_symtab_section to the
-	.dynsym section.  Set dynamic_strtab_section to the .dynstr
-	section.
-	(process_dynamic_section): Warn if the .dynsym section doesn't
-	match DT_SYMTAB and DT_SYMENT or the .dynstr section doesn't
-	DT_STRTAB and DT_STRSZ.  But only if checks are enabled.
-
-2020-05-19  Alan Modra  <amodra@gmail.com>
-
-	* ar.c (map_over_members, get_pos_bfd, delete_members, move_members),
-	(replace_members): Use bfd_get_filename rather than accessing
-	bfd->filename directly.
-	* arsup.c (map_over_list, ar_delete, ar_replace, ar_extract): Likewise.
-	* binemul.c (do_ar_emul_append): Likewise.
-	* coffgrok.c (coff_grok): Likewise.
-
-2020-05-18  Stafford Horne  <shorne@gmail.com>
-
-	* MAINTAINERS (OR1K): Add myself as maintainer.
-
-2020-05-07  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* doc/binutils.texi: Mention 'entry address' in the set-start and
-	adjust-start options descriptions.
-
-2020-05-05  Nick Clifton  <nickc@redhat.com>
-
-	* dwarf.c (do_checks): New global variable.
-	(display_formatted_table): Warn about an unexpected number of
-	columns in the table, if checks are enabled.  Do not complain
-	about the lack of data following the number of entries in the
-	table if the table is empty.
-	(display_debug_lines_decoded): Only warn about an unexpected
-	number of columns in a table if checks are enabled.
-	* dwarf.h (do_checks): Add a prototype.
-	* elfcomm.c (error): Remove weak attribute.
-	(warn): Likewise.
-	* readelf.c (do_checks): Delete.
-	(warn): Delete.
-	(process_section_headers): Only warn about empty sections if
-	checks are enabled.
-
-2020-05-04  Fangrui Song   <maskray@google.com>
-
-	* objcopy.c (copy_object): Allow empty section.
-	* testsuite/binutils-all/update-section.exp: Add test.
-
-2020-05-04  Nick Clifton  <nickc@redhat.com>
-
-	PR 25917
-	* dwarf.c (display_debug_lines_decoded): Warn if encountering a
-	supicious number of entries for DWARF-5 format directory and file
-	name tables.  Do not display file name table header if the table
-	is empty.  Do not allocate space for empty tables.
-
-2020-05-04  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_nds32_specific): Check size of .nds32_e_flags
-	section.  Don't assume endian of host matches nds32 target.  Free
-	buffer.
-
-2020-05-01  Alan Modra  <amodra@gmail.com>
-	    Haim Shimonovich  <Haim.Shimonovich@ceva-dsp.com>
-
-	* objdump.c (disassemble_bytes): Don't scan for zeros when
-	disassembling zeros.  Translate "resuming at file offset" message.
-	Formatting.  Replace some signed variables with unsigned.
-
-2020-04-30  Alex Coplan  <alex.coplan@arm.com>
-
-	* testsuite/binutils-all/aarch64/in-order-all.d: Update to use new
-	disassembly.
-	* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.
-
-2020-04-30  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/lib/binutils-common.exp (check_pie_support): New
-	proc.
-
-2020-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* dwarf.c (display_debug_ranges): Ignore duplicate entries in
-	range_entries for the same offset.
-
-2020-04-29  Nick Clifton  <nickc@redhat.com>
-
-	* readelf.c (warn): New function - like elfcomm.c version but only
-	produces output if warnings are enabled.
-	(struct options): Add --lint and --enable-checks.
-	(usage): Add entry for --lint.
-	(parse_args): Handle -L.  If checks are enabled but no dumps have
-	been selected then enable all dumps.
-	(process_section_headers): Replace long if-then-else sequence with
-	a switch.  Add warning messages for empty SHT_REL, SHT_RELA and
-	SHT_PROGBITS sections.
-	(process_file): Do not complain if the file is an archive and lint
-	mode has been enabled.
-	* elfcomm.c (error): Make the function weak.
-	(warn): Likewise.
-	* NEWS: Mention the new feature.
-	* doc/binutils.texi: Document the new feature.
-	* dwarf.h (report_leb_status): Add file name and line number
-	parameters.  Include them in the diagnostic output.
-	(READ_ULEB): Pass file and line number to report_leb_status.
-	(READ_SLEB): Likewise.
-	* dwarf.c (read_and_print_leb128): Pass file and line number to
-	report_leb_status.
-	* testsuite/binutils-all/readelf.exp: Add test of new feature.
-	* testsuite/binutils-all/zero-sec.s: New test source file.
-	* testsuite/binutils-all/zero-sec.r: Expected output from new
-	test.
-
-2020-04-29  Nick Clifton  <nickc@redhat.com>
-
-	* po/sr.po: Updated Serbian translation.
-
-2020-04-26  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (get_num_dynamic_syms): Check DT_MIPS_XHASH was
-	read before dereferencing, and gracefully return.  Remove
-	gnu_hash_error variable.  Free gnu hash arrays if number of
-	syms found is zero.
-
-2020-04-24  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (get_num_dynamic_syms): Check for nbuckets and nchains
-	non-zero.
-	(process_dynamic_section): Call get_num_dynamic_syms once rather
-	than in segment loop.  Break out of segment loop on a successful
-	load of dynamic symbols.  Formatting.
-	(process_object): Return error status from process_dynamic_section.
-
-2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>
-
-	* elf-bfd.h (elfcore_write_arc_v2): Add prototype.
-	* elf.c (elfcore_grok_arc_v2): New function.
-	(elfcore_grok_note): Call the new function to handle the corresponding
-	note.
-	(elfcore_write_arc_v2): New function.
-	(elfcore_write_register_note): Call the new function to handle the
-	corresponding pseudo-sections.
-
-2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
-
-	PR ld/25861
-	* readelf.c (is_none_reloc): Recognize
-	BFD_RELOC_XTENSA_PDIFF{8,16,32} and
-	BFD_RELOC_XTENSA_NDIFF{8,16,32}.
-
-2020-04-22  Nick Clifton  <nickc@redhat.com>
-
-	* MAINTAINERS: Remove Chris Faylor as the ix86 PE maintainer.
-
-2020-04-22  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (archive_file_offset, archive_file_size, dynamic_addr),
-	(dynamic_size, dynamic_nent, dynamic_strings, dynamic_strings_length),
-	(num_dynamic_syms, nbuckets, nchains, buckets, chains),
-	(ngnubuckets, gnubuckets, gnuchains, mipsxlat, ngnuchains),
-	(gnusymidx, dynamic_symbols, dynamic_syminfo, dynamic_syminfo_offset),
-	(dynamic_syminfo_nent, program_interpreter, dynamic_info),
-	(dynamic_info_DT_GNU_HASH, dynamic_info_DT_MIPS_XHASH, version_info),
-	(dynamic_section, symtab_shndx_list, group_count, section_groups),
-	(section_headers_groups): Move to struct filedata.  Update use
-	throughout file.
-
-2020-04-22  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (struct dump_data): New, used..
-	(cmdline): ..here, and..
-	(struct filedata): ..here.  Adjust all uses.
-	(request_dump_bynumber, request_dump, parse_args): Pass in a
-	struct dump_data* rather than Filedata*.  Adjust callers.
-	(main): Don't set cmdline.file_name.
-
-2020-04-20  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_symbol_table): Clear ngnuchains, ngnubuckets
-	and nbuckets.
-
-2020-04-20  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_section_headers): Free dynamic symbols etc.
-	earlier.
-
-2020-04-20  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (get_num_dynamic_syms): Formatting.  Don't return
-	on error without freeing.
-	(process_dynamic_section): Don't recreate dynamic symbols from
-	dynamic tag info when the dynamic symbols have already been
-	read via section headers.
-
-2020-04-17  Fredrik Strupe  <fredrik@strupe.net>
-
-	* testsuite/binutils-all/arm/vdup-cond.d: New test for testing that
-	conditional VDUP instructions are disassembled correctly.
-	* testsuite/binutils-all/arm/vdup-cond.s: New file used by
-	vdup-cond.d.
-	* testsuite/binutils-all/arm/vdup-thumb.d: New test for testing
-	that VDUP instructions (which are conditional in A32) can be
-	disassembled in thumb mode.
-	* testsuite/binutils-all/arm/vdup-cond.s: New file used by
-	vdup-thumb.d.
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-2020-04-17  Alan Modra  <amodra@gmail.com>
+	* 2.36 release branch crated.
 
-	PR 25840
-	* debug.c (debug_class_type_samep): Don't segfault on NULL type.
-
-2020-04-16  Alan Modra  <amodra@gmail.com>
-
-	* doc/binutils.texi: Mention --no-show-raw-insn in objdump
-	--no-addresses description.
-
-2020-04-15  Alan Modra  <amodra@gmail.com>
-
-	* objdump.c (no_addresses): New static var.
-	(usage): Print help for --no-addresses.
-	(long_options): Add --no-addresses entry.
-	(objdump_print_addr_with_sym, objdump_print_addr): Omit symbol address.
-	(disassemble_bytes): Don't print current line address, or reloc
-	address.
-	* doc/binutils.texi: Document objdump --no-addresses.
-
-2020-04-15  Alan Modra  <amodra@gmail.com>
-
-	PR 25822
-	* readelf.c (get_num_dynamic_syms): Don't set num_of_syms when
-	reading buckets or chains fails.
-
-2020-04-15  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_symbol_table): Zero gnubuckets, gnuchains
-	etc. after freeing.
-
-2020-04-15  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (get_group_flags): Translate text.
-	(get_file_type, get_symbol_binding, get_symbol_type),
-	(get_ppc64_symbol_other, get_symbol_other): Increase size of buffer.
-
-2020-04-15  Alan Modra  <amodra@gmail.com>
-
-	PR 25821
-	* readelf.c (get_num_dynamic_syms): Typo fix.
-
-2020-04-14  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_mips_specific): Free eopt and iopt.  Avoid
-	possibility of overflow when checking number of conflicts.
-
-2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25707
-	* readelf.c (nbuckets): New.
-	(nchains): Likewise.
-	(buckets): Likewise.
-	(chains): Likewise.
-	(ngnubuckets): Likewise.
-	(gnubuckets): Likewise.
-	(gnuchains): Likewise.
-	(mipsxlat): Likewise.
-	(ngnuchains): Likewise.
-	(gnusymidx): Likewise.
-	(VALID_SYMBOL_NAME): Likewise.
-	(VALID_DYNAMIC_NAME): Use it.
-	(get_dynamic_data): Moved before process_dynamic_section.
-	(get_num_dynamic_syms): New function.
-	(process_dynamic_section): Use DT_SYMTAB, DT_SYMENT, DT_HASH,
-	DT_GNU_HASH and DT_MIPS_XHASH to reconstruct dynamic symbol
-	table.  Use DT_STRTAB and DT_STRSZ to reconstruct dynamic string
-	table.
-	(get_symbol_index_type): Don't print "bad section index" when
-	there is no section header.
-	(print_dynamic_symbol): Rewrite.
-	(process_symbol_table): Call print_dynamic_symbol to dump dynamic
-	symbol table.
-
-2020-04-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* testsuite/lib/binutils-common.exp (supports_gnu_osabi): Don't
-	enable on *-*-solaris*.
-
-2020-03-30  Nick Clifton  <nickc@redhat.com>
-
-	PR binutils/25662
-	* objcopy.c (copy_object): When copying PE format files set the
-	timestamp field in the pe_data structure if the preserve_dates
-	flag is set.
-	* testsuite/binutils-all/objcopy.exp (objcopy_test) Use
-	--preserve-dates in place of the -p option, in order to make its
-	effect more obvious.
-
-2020-03-28  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/objcopy.exp (objcopy_test): Only
-	clear_xfail hppa*-*-*elf*.  Revert mips xfails.
-
-2020-03-28  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/binutils-all/objcopy.exp (objcopy_test): Move xfails
-	from here to calls.  Remove "m8*-*-*" entry.  Don't xfail tic54x
-	but do xfail spu, mipstx39 and mips-sgi-irix for the executable
-	test.  Pass "-p" to objcopy for the executable test.
-
-2020-03-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	PR binutils/25662
-	* testsuite/binutils-all/objcopy.exp (objcopy_test): Add argument to
-	specify whether an object file or executable should be built and tested.
-	Change test names to report whether an object file or executable is
-	being tested.
-	* testsuite/binutils-all/pr25662.ld: New test.
-	* testsuite/binutils-all/pr25662.s: New test.
-
-2020-03-27  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_archive): Don't double free qualified_name.
-	Don't break out of loop with "negative" archive_file_size, just
-	set file offset to max.
-
-2020-03-25  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_archive): Prevent endless loop.
-
-2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25708
-	* nm.c (print_symname): Replace _bfd_elf_get_symbol_version_name
-	with bfd_get_symbol_version_string.
-	(print_symbo): Pass TRUE to bfd_get_symbol_version_string.
-	* objdump.c (objdump_print_symname): Likewise.
-
-2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25708
-	* nm.c (SYM_NAME): Removed.
-	(print_symname): Add a pointer to struct extended_symbol_info
-	argument.  Call _bfd_elf_get_symbol_version_name to get symbol
-	version.
-	(print_symdef_entry): Pass NULL to print_symname.
-	(print_symbol_info_bsd): Update call to print_symname.
-	(print_symbol_info_sysv): Likewise.
-	(print_symbol_info_posix): Likewise.
-
-2020-03-24  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_mips_specific): Free iconf on error path.
-
-2020-03-23  Nick Clifton  <nickc@redhat.com>
-
-	PR 25714
-	* wrstabs.c (stab_pop_type): Replace assertion with error return.
-	* write_stabs_in_sections_debugging_info: Likewise.
-	* stab_enum_type: Likewise.
-	* stab_modify_type: Likewise.
-	* stab_struct_field: Likewise.
-	* stab_end_struct_type: Likewise.
-	* stab_start_class_type: Likewise.
-	* stab_class_static_member: Likewise.
-	* stab_class_baseclass: Likewise.
-	* stab_class_start_method: Likewise.
-	* stab_class_method_var: Likewise.
-	* stab_class_end_method: Likewise.
-	* stab_end_class_type: Likewise.
-	* stab_typedef_type: Likewise.
-	* stab_start_function: Likewise.
-	* stab_end_block: Likewise.
-	* stab_lineno: Likewise.
-
-2020-03-20  Nick Clifton  <nickc@redhat.com>
-
-	* readelf.c (get_compression_header): Add ATTRIBUTE_WARN_UNUSED_RESULT.
-	(process_section_headers): Check the return value from
-	get_compression_header.
-	(dump_section_as_strings): Likewise.
-	(dump_section_as_bytes): Likewise.
-	(load_specific_debug_section): Likewise.
-
-2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* ar.c (main): Update bfd_plugin_set_program_name call.
-	* nm.c (main): Likewise.
-
-2020-03-19  Nick Clifton  <nickc@redhat.com>
-
-	PR 25676
-	* testsuite/binutils-all/dw4.s: New test source file.
-	* testsuite/binutils-all/nm.exp: Run the new test.
-
-2020-03-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* readelf.c (process_symbol_table): Use unsigned long for si.
-
-2020-03-19  Alan Modra  <amodra@gmail.com>
-
-	* elfcomm.c: Don't include bfd.h or bucomm.h.
-	(program_name): Declare.
-	(process_archive_index_and_symbols): Replace bfd_boolean with int,
-	and substitute FALSE and TRUE.
-	(setup_archive, setup_nested_archive): Likewise.
-	* elfcomm.h: Likewise.
-
-2020-03-19  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_archive): Always return via path freeing
-	memory.  Formatting.
-
-2020-03-19  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_netbsd_elf_note): Validate descsz before
-	accessing descdata.  Formatting.
-
-2020-03-19  Alan Modra  <amodra@gmail.com>
-
-	* elfcomm.c (setup_archive): Make file_size an off_t.  Comment.
-	* elfcomm.h (setup_archive): Update prototype.
-
-2020-03-16  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (get_symbols): New function.
-	(process_relocs, ia64_process_unwind, hppa_process_unwind),
-	(arm_process_unwind, get_symbol_for_build_attribute): Use it.
-
-2020-03-16  Alan Modra  <amodra@gmail.com>
-
-	* unwind-ia64.c (unw_decode_uleb128): Prevent overlarge shifts.
-	Detect shift overflows and check that terminating byte is found.
-	Print an error on a bad uleb128.
-
-2020-03-14  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_file): Clean ba_cache.
-
-2020-03-14  Alan Modra  <amodra@gmail.com>
-
-	* elfcomm.h (setup_archive): Update prototype.
-	* elfcomm.c (setup_archive): Add file_size parameter and sanity
-	check longnames_size.
-	(setup_nested_archive): Get file size and pass to setup_archive.
-	* elfedit.c (process_archive): Likewise.
-	* readelf.c (process_archive): Pass filedata->file_size to
-	setup_archive.
-
-2020-03-14  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (dump_section_as_strings): Free memory on error exit.
-	(dump_section_as_bytes, process_notes_at): Likewise.
-	(get_build_id): Free enote.
-
-2020-03-13  Kamil Rytarowski  <n54@gmx.com>
-
-	* readelf.c (get_netbsd_elfcore_note_type): Add support for
-	NT_NETBSDCORE_LWPSTATUS notes.
-
-2020-03-13  Alan Modra  <amodra@gmail.com>
-
-	* elfcomm.c (get_archive_member_name): Always return malloc'd
-	string or NULL.
-	* elfedit.c (process_archive): Tidy memory on all return paths.
-	* readelf.c (process_archive): Likewise.
-	(process_symbol_table): Likewise.
-	(ba_cache): New, replacing ..
-	(get_symbol_for_build_attribute): ..static vars here.  Free
-	strtab and symtab before loading new ones.  Reject symtab without
-	valid strtab in loop, breaking out of loop on valid symtab.
-	(process_file): Free ba_cache symtab and strtab here, resetting
-	ba_cache.
-
-2020-03-12  Alan Modra  <amodra@gmail.com>
-
-	* readelf.c (process_section_headers): Don't just set
-	filedata->section_headers NULL, free it first.  Similarly for
-	dynamic_symbols, dynamic_strings, dynamic_syminfo and
-	symtab_shndx_list.  Zero associated counts too.
-	(process_object): Free symtab_shndx_list.
-	(process_file): Free various allocated filedata tables.
-
-2020-03-11  Nick Clifton  <nickc@redhat.com>
-
-	PR 25611
-	PR 25614
-	* dwarf.h (DWARF2_Internal_LineInfo): Add li_address_size and
-	li_segment_size fields.
-	* dwarf.c (read_debug_line_header): Record the address size and
-	segment selector size values (if present) in the lineinfo
-	structure.
-	(display_formatted_table): Warn if the format count is empty but
-	the table itself is not empty.
-	Display the format count and entry count at the start of the table
-	dump.
-	(display_debug_lines_raw): Display the address size and segement
-	selector size fields, if present.
-	* testsuite/binutils-all/dw5.W: Update expected output.
-
-2020-03-11  Alan Modra  <amodra@gmail.com>
-
-	PR 25651
-	* objcopy.c (copy_object): Test "gaps" not gap_fill_set or
-	pad_to_set on second block of code dealing with padding.
-	Replace "c" with "num_sec" and don't recalculate number of
-	sections on second block.  Size arrays using sizeof (element)
-	rather than sizeof (element type).
-
-2020-03-10  Alan Modra  <amodra@gmail.com>
-
-	* objdump.c (disassemble_section): Don't call qsort unless
-	sym count is at least two.
-	(disassemble_data): Don't call memcpy with NULL src.
-
-2020-03-09  Alan Modra  <amodra@gmail.com>
-
-	PR 25645
-	* readelf.c (dump_ia64_vms_dynamic_fixups): Pass size and nmemb
-	to get_data rather than multiplying.
-	(dump_ia64_vms_dynamic_relocs): Likewise.
-	(process_version_sections): Correct order of size and nmemb args
-	in get_data call.
-	(process_mips_specific): Likewise.
-
-2020-03-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* readelf.c (get_dynamic_data): Replace "memory chekers" with
-	"memory checkers" in comments.
-
-2020-03-06  Simon Marchi  <simon.marchi@efficios.com>
-
-	PR 25491
-	* doc/Makefile.am: Rename MOSTLYCLEANFILES to MAINTAINERCLEANFILES.
-	* doc/Makefile.in: Re-generate.
-
-2020-03-06  Nick Clifton  <nickc@redhat.com>
-
-	* objcopy.c (check_new_section_flags): New function.  Reject the
-	SEC_COFF_SHARED flag if the target is not a COFF binary.
-	(copy_object): Call check_new_section_flags.
-	(setup_section): Likewise.
-	* doc/binutils.texi (objcopy): Add a note that the 'share' section
-	flag cannot be applied to ELF binaries.
-
-2020-03-06  Alan Modra  <amodra@gmail.com>
-
-	PR 25637
-	* objcopy.c (filter_symbols): Correct rem_leading_char logic.
-
-2020-03-05  Alan Modra  <amodra@gmail.com>
-
-	PR 25629
-	* objcopy.c (filter_symbols): Don't segfault on NULL
-	prefix_symbols_string.
-
-2020-03-04  Christian Eggers  <ceggers@gmx.de>
-
-	* objcopy.c (copy_object): Convert from bytes to octets for
-	--gap-fill and --pad-to.
-
-2020-03-03  Nick Clifton  <nickc@redhat.com>
-
-	PR 25625
-	* prdbg.c (pr_tag_type): Remove call to abort.
-
-2020-03-02  Aaron Merey  <amerey@redhat.com>
-
-	* binutils/testsuite/binutils-all/debuginfod.exp: Improve port
-	selection.
-
-2020-03-02  Nick Clifton  <nickc@redhat.com>
-
-	PR 25543
-	* readelf.c (dump_section_as_strings): Display new-line characters
-	as \n and then insert a line break.
-	* testsuite/binutils-all/pr25543.s: New test.
-	* testsuite/binutils-all/pr25543.d: Test driver.
-	* testsuite/binutils-all/readelf.exp: Run the new test.
-
-2020-02-27  Nick Clifton  <nickc@redhat.com>
-
-	PR 25526
-	* readelf.c (process_ia64_vms_dynamic_relocs): Check to see if
-	get_data is unable to load the string table.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* elfedit.c: Indent labels correctly.
-	* readelf.c: Likewise.
-	* resres.c: Likewise.
-
-2020-02-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25584
-	* ar.c (main): Pass 0 to bfd_plugin_set_program_name.
-	* nm.c (main): Pass 1 to bfd_plugin_set_program_name.
-
-2020-02-24  Nick Clifton  <nickc@redhat.com>
-
-	PR 25499
-	* doc/binutils.texi (objdump): Fix typo in description of
-	objdump's -g option.
-
-2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* dwarf.c (regname_internal_riscv): Updated since the DECLARE_CSR
-	is changed.
-
-2020-02-19  Jordan Rupprecht  <rupprecht@google.com>
-
-	* objdump.c (show_line): call bfd_demangle when using do_demangle.
-
-2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+2021-01-09  Alan Modra  <amodra@gmail.com>
 
 	* configure: Regenerate.
 
-2020-02-10  Fangrui Song   <maskray@google.com>
-
-	* objcopy.c (parse_flags): Handle "exclude".
-	* doc/binutils.texi: Document the support.
-
-2020-02-10  Aaron Merey  <amerey@redhat.com>
-
-	* binutils/testsuite/binutils-all/debuginfod.exp:
-	Replace set ::env with setenv.
-	Start server before setting environment variable.
-	Specify tmpdir as the location of the server's
-	database.
-	Check additional server metrics at start-up.
-
-2020-02-07  Nick Clifton  <nickc@redhat.com>
-
-	* README-how-to-make-a-release: Add note about updating the
-	GAS/NEWS URL in the next release.
-
-2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25469
-	* readelf.c (get_machine_flags): Add support for Z80N machine
-	number.
-
-2020-02-07  Nick Clifton  <nickc@redhat.com>
-
-	* dwarf.c (display_debug_lines_decoded): Force a NUL termination
-	of the truncated file name.
-
-2020-02-06  Andrew Burgess  <andrew.burgess@embecosm.com>
-
-	* objdump.c (print_jump_visualisation): New function.
-	(disassemble_bytes): Call new function.
-
-2020-02-06  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/lib/binutils-common.exp (match_target): Accept '!' before
-	TCL procedure.
-	(supports_gnu_osabi): New procedure.
-	(is_generic): New, from ld-lib.exp.
-	(supports_gnu_unique): Use the above.
-
-2020-02-04  Alan Modra  <amodra@gmail.com>
-
-	* Makefile.am (CFILES): Add od-elf32_avr.c.
-	* Makefile.in: Regenerate.
-	* po/POTFILES.in: Regenerate.
-
-2020-02-03  Andreas Schwab  <schwab@linux-m68k.org>
-
-	* readelf.c (dump_relocations, dump_relocations)
-	(decode_arm_unwind_bytecode, process_dynamic_section)
-	(get_symbol_visibility, get_alpha_symbol_other): Add newline to
-	error message.
-
-2020-02-03  Sergei Trofimovich  <siarheit@google.com>
-
-	* coffdump.c (program_name): Drop redundant definition.
-	* srconv.c (program_name): Likewise
-	* sysdump.c (program_name): Likewise
-
-2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25380
-	* objdump.c (sym_ok): Return FALSE if 2 sections are in the
-	same file with different section pointers.
-
-2020-02-01  Nick Clifton  <nickc@redhat.com>
-
-	* README-how-to-make-a-release: Update with more details on the
-	release making process.
-
-2020-01-31  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Updated Swedish translation.
-
-2020-01-28  Nick Clifton  <nickc@redhat.com>
-
-	* readelf.c (get_build_id): Simplify warning message about corrupt
-	notes encountered whilst scanning for the build-id.
-
-2020-01-27  Roland McGrath  <mcgrathr@google.com>
-
-	* objcopy.c (compare_gnu_build_notes): Fix comparison results
-	for overlapping ranges so that (A == B) == (B == A) holds.
-
-2020-01-27  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/lib/binutils-common.exp (big_or_little_endian): Replace
-	case statement with switch statement.
-
-2020-01-24  Nick Clifton  <nickc@redhat.com>
-
-	* readelf.c (get_build_id): Fix warning messages about corrupt
-	notes.
-
-2020-01-23  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Updated French translation.
-
-2020-01-22  Yuri Chornoivan  <yurchor@mageia.org>
-
-	PR 25417
-	* readelf.c (get_alpha_symbol_other): Fix error message typo.
-
-2020-01-20  Nick Clifton  <nickc@redhat.com>
-
-	* po/pt.po: Updated Portuguese translation.
-	* po/uk.po: Updated Ukranian translation.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	* README-how-to-make-a-release: Update notes on how to cut a
-	branch for a release.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
+2021-01-07  Samuel Thibault  <samuel.thibault@gnu.org>
 
 	* configure: Regenerate.
-	* po/binutils.pot: Regenerate.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.34 branch created.
-
-2020-01-17  Thomas Troeger  <tstroege@gmx.de>
-
-	* objdump.c (jump_info_visualize_address): Discard jumps that are
-	no longer needed.
-	(disassemble_bytes): Only compute the maximum level if jumps were
-	detected.
-
-2020-01-13  Nick Clifton  <nickc@redhat.com>
 
-	* objdump.c (disassemble_bytes): Remove C99-ism.
-	* testsuite/binutils-all/debuginfod.exp: New tests.
+2021-01-07  H.J. Lu  <hongjiu.lu@intel.com>
 
-2020-01-13  Thomas Troeger  <tstroege@gmx.de>
+	PR 27109
+	* objcopy.c (copy_object): Handle section symbols for
+	non-relocatable inputs.
+	* testsuite/binutils-all/readelf.exp (readelf_test): Check
+	is_elf_unused_section_symbols.
+	* testsuite/binutils-all/readelf.s-64: Updated.
+	* testsuite/binutils-all/readelf.ss: Likewise.
+	* testsuite/binutils-all/readelf.ss-64: Likewise.
+	* testsuite/binutils-all/readelf.s-64-unused: New file.
+	* testsuite/binutils-all/readelf.ss-64-unused: Likewise.
+	* testsuite/binutils-all/readelf.ss-unused: Likewise.
+	* testsuite/lib/binutils-common.exp
+	(is_elf_unused_section_symbols): New proc.
 
-	* objdump.c (visualize_jumps, color_output, extended_color_output)
-	(detected_jumps): New variables.
-	(usage): Add the new jump visualization options.
-	(option_values): Add new option value.
-	(long_options): Add the new option.
-	(jump_info_new, jump_info_free): New functions.
-	(jump_info_min_address, jump_info_max_address): Likewise.
-	(jump_info_end_address, jump_info_is_start_address): Likewise.
-	(jump_info_is_end_address, jump_info_size): Likewise.
-	(jump_info_unlink, jump_info_insert): Likewise.
-	(jump_info_add_front, jump_info_move_linked): Likewise.
-	(jump_info_intersect, jump_info_merge): Likewise.
-	(jump_info_sort, jump_info_visualize_address): Likewise.
-	(disassemble_jumps): New function - used to locate jumps.
-	(disassemble_bytes): Add ascii art generation.
-	(disassemble_section): Add scan to locate jumps.
-	(main): Parse the new visualization option.
-	* doc/binutils.texi: Document the new feature.
-	* NEWS: Mention the new feature.
+2021-01-06  Reuben Thomas  <rrt@sc3d.org>
 
-2020-01-13  Alan Modra  <amodra@gmail.com>
+	* binutils/readelf.c: Correct grammar in comment.
 
-	PR 25360
-	PR 25361
-	* dwarf.c (display_debug_frames): Move fde_fc earlier.  Free
-	fde_fc col_type and col_offset.
-	* readelf.c (apply_relocations): Move symsec check earlier.
-	(free_debug_section): Free reloc_info.
-	(process_notes_at): Free pnotes on error path.
-	(process_object): Free dump_sects here..
-	(process_archive): ..not here.
+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>
 
-2020-01-13  Alan Modra  <amodra@gmail.com>
+	* coffgrok.c (do_type): Correct spelling of auxiliary in errors.
+	* doc/binutils.texi: Correct grammar.
+	* readelf.c (process_version_sections): Correct spelling of auxiliary
+	in warning.
+	* testsuite/binutils-all/vax/objdump.exp: Comment grammar fix.
 
-	PR 25362
-	* nm.c (display_rel_file): Free dyn_syms.
-
-2020-01-09  Nick Clifton  <nickc@redhat.com>
-
-	PR 25220
-	* objcopy.c (empty_name): New variable.
-	(need_sym_before): Prevent an attempt to free a static variable.
-	(filter_symbols): Avoid strcmp test by checking for pointer
-	equality.
-
-2020-01-09  Nick Clifton  <nickc@redhat.com>
-
-	* po/zh_TW.po: Updated Traditional Chinese translation.
-
-2020-01-09  Aaron Merey  <amerey@redhat.com>
-
-        * Makefile.am (readelf_LDADD, objdump_LDADD): Add libdebuginfod.
-        * Makefile.in: Regenerate.
-        * NEWS: Update.
-        * config.in: Regenerate.
-        * configure: Regenerate.
-        * configure.ac: Call AC_DEBUGINFOD.
-        * doc/Makefile.in: Regenerate.
-        * doc/binutils.texi: Add section on using binutils
-        with debuginfod.
-        * dwarf.c (debuginfod_fetch_separate_debug_info): New function.
-        Query debuginfod servers for the target debug file.
-        (load_separate_debug_info): Call
-        debuginfod_fetch_separate_debug_info if configured with
-        debuginfod.
-        (load_separate_debug_files): Add file argument to
-        load_separate_debug_info calls.
-        * dwarf.h (get_build_id): Add declaration.
-        * objdump.c (get_build_id): New function. Get build-id of file.
-        * readelf.c (get_build_id): Likewise.
-        * testsuite/binutils-all/debuginfod.exp: New tests.
-        * testsuite/binutils-all/linkdebug.s: Add .note.gnu.build-id
-        section.
-
-2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	* readelf.c: Add support for new Z*) relocations and machine
-	types.
-
-2020-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/elfcpp/ChangeLog b/elfcpp/ChangeLog
index fa1d20e5d9a..98283babd83 100644
--- a/elfcpp/ChangeLog
+++ b/elfcpp/ChangeLog
@@ -1,47 +1,18 @@
-2020-11-16  Mark Wielaard  <mark@klomp.org>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
-	Backport from the mainline:
-	2020-09-25  Alan Modra  <amodra@gmail.com>
+	This is the 2.36 release.
 
-	* dwarf.h (DW_FIRST_UT, DW_UT, DW_END_UT): Define.
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+	* 2.36 release branch crated.
 
-	Binutils 2.35 branch created.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* elfcpp_swap.h (bswap_16): Do not assume that presence of
-	<byteswap.h> means this is declared.  Make static inline, matching
-	recent change to libctf, since there is no non-inline definition
-	of these functions.
-	(bswap_32): Likewise.
-	(bswap_64): Likewise.
-
-2020-06-18  Fangrui Song  <i@maskray.me>
-
-	PR gold/26039
-	* elfcpp.h (enum DF_1): New enum member DF_1_PIE.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.h: Rename
-	R_PPC64_GOT_TLSGD34 to R_PPC64_GOT_TLSGD_PCREL34,
-	R_PPC64_GOT_TLSLD34 to R_PPC64_GOT_TLSLD_PCREL34,
-	R_PPC64_GOT_TPREL34 to R_PPC64_GOT_TPREL_PCREL34, and
-	R_PPC64_GOT_DTPREL34 to R_PPC64_GOT_DTPREL_PCREL34.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.34 branch created.
-
-2020-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/config/ChangeLog b/config/ChangeLog
index 12795fc4973..f2be3252dd8 100644
--- a/config/ChangeLog
+++ b/config/ChangeLog
@@ -1,3 +1,44 @@
+2021-01-09  Nick Clifton  <nickc@redhat.com>
+
+	* 2.36 release branch crated.
+
+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>
+
+	* override.m4: Correct comment grammar.
+
+2020-09-08  Alan Modra  <amodra@gmail.com>
+
+	Sync from gcc
+	2020-07-15  H.J. Lu  <hjl.tools@gmail.com>
+	PR bootstrap/96202
+	* cet.m4 (GCC_CET_HOST_FLAGS): Don't enable CET without CET
+	support in stage1 nor for build support.
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* largefile.m4 (ACX_LARGEFILE) <sparc-*-solaris*|i?86-*-solaris*>:
+	Check for <sys/procfs.h> incompatilibity with large-file support
+	on Solaris.
+	Only disable large-file support and perhaps plugins if needed.
+	Set, substitute LARGEFILE_CPPFLAGS if so.
+
+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26301
+	* pkg.m4 (PKG_CHECK_MODULES): Use AC_TRY_LINK only if
+	$pkg_failed = no.
+
+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26301
+	* pkg.m4 (PKG_CHECK_MODULES): Add AC_TRY_LINK to check if
+	$pkg_cv_[]$1[]_LIBS works.
+
+2020-07-24  Aaron Merey  <amerey@redhat.com>
+
+	* debuginfod.m4: use PKG_CHECK_MODULES.
+	* pkg.m4: New file.
+
 2020-07-04  Nick Clifton  <nickc@redhat.com>
 
 	Binutils 2.35 branch created.
diff --git a/gas/ChangeLog b/gas/ChangeLog
index 3ac2f7b72e2..d6eeb1eea8a 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3344 +1,242 @@
-2020-11-15  Mark Wielaard  <mark@klomp.org>
+2021-01-24  H.J. Lu  <hongjiu.lu@intel.com>
 
-	Backport from the mainline:
-	2020-10-16  H.J. Lu  <hongjiu.lu@intel.com>
+	PR gas/27228
+	* testsuite/gas/elf/elf.exp: Run pr27228.
+	* testsuite/gas/elf/pr27228.d: New file.
+	* testsuite/gas/elf/pr27228.s: Likewise.
 
-	PR gas/25878
-	PR gas/26740
-	* dwarf2dbg.c (file_entry): Remove auto_assigned.
-	(assign_file_to_slot): Remove the auto_assign argument.
-	(allocate_filenum): Updated.
-	(allocate_filename_to_slot): Reuse the input file entry in the
-	file table.
-	(dwarf2_where): Replace as_where with as_where_physical.
-	* testsuite/gas/i386/dwarf5-line-1.d: New file.
-	* testsuite/gas/i386/dwarf5-line-1.s: Likewise.
-	* testsuite/gas/i386/i386.exp: Run dwarf5-line-1.
-
-	2020-10-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25878
-	PR gas/26740
-	* dwarf2dbg.c (allocate_filename_to_slot): Don't reuse the slot 1
-	here.
-	(dwarf2_where): Restore as_where.
-	(dwarf2_directive_filename): Clear the slot 1 if it was assigned
-	to the input file.
-	* testsuite/gas/i386/dwarf5-line-2.d: New file.
-	* testsuite/gas/i386/dwarf5-line-2.s: Likewise.
-	* testsuite/gas/i386/dwarf5-line-3.d: Likewise.
-	* testsuite/gas/i386/dwarf5-line-3.s: Likewise.
-	* testsuite/gas/i386/i386.exp: Run dwarf5-line-2 and
-	dwarf5-line-3.
-
-	2020-10-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26778
-	* * dwarf2dbg.c (num_of_auto_assigned): New.
-	(allocate_filenum): Increment num_of_auto_assigned.
-	(dwarf2_directive_filename): Clear the slots auto-assigned
-	before the first .file <NUMBER> directive was seen.
-	* testsuite/gas/i386/dwarf4-line-1.d: New file.
-	* testsuite/gas/i386/dwarf4-line-1.s: Likewise.
-	* testsuite/gas/i386/i386.exp: Run dwarf4-line-1.
-
-2020-11-15  Mark Wielaard  <mark@klomp.org>
-
-	Backport from the mainline:
-	2020-09-23  Mark Wielaard  <mark@klomp.org>
-
-	* testsuite/gas/elf/dwarf-5-cu.d: Adjust expected output.
-
-2020-11-05  Alex Coplan  <alex.coplan@arm.com>
-
-	* config/tc-aarch64.c (aarch64_cpus): Add neoverse-n2.
-	* doc/c-aarch64.texi: Document support for Neoverse N2.
-
-2020-10-21  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	PR target/26763
-	* config/tc-arm.c (parse_address_main): Add new MVE addressing mode
-	check.
-	* testsuite/gas/arm/mve-vldr-vstr-bad.d: New test.
-	* testsuite/gas/arm/mve-vldr-vstr-bad.l: Likewise.
-	* testsuite/gas/arm/mve-vldr-vstr-bad.s: Likewise.
-
-2020-10-09  Alex Coplan  <alex.coplan@arm.com>
-
-	* config/tc-arm.c (arm_cpus): Add Neoverse N2.
-	* doc/c-arm.texi: Document -mcpu=neoverse-n2.
-
-2020-10-09  Alex Coplan  <alex.coplan@arm.com>
-
-	* config/tc-arm.c (arm_cpus): Add Neoverse V1.
-	* doc/c-arm.texi: Document Neoverse V1 support.
-
-2020-10-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26685
-	* config/tc-i386.c (process_suffix): Also check the register
-	operand for the address size prefix if the memory operand has
-	no real registers.
-	* testsuite/gas/i386/enqcmd-16bit.d: New file.
-	* testsuite/gas/i386/enqcmd-16bit.s: Likewise.
-	* testsuite/gas/i386/movdir-16bit.d: Likewise.
-	* testsuite/gas/i386/movdir-16bit.s: Likewise.
-	* testsuite/gas/i386/enqcmd.s: Add tests with symbol and DISP.
-	* testsuite/gas/i386/x86-64-enqcmd.s: Likewise.
-	* testsuite/gas/i386/x86-64-movdir.s: Likewise.
-	* testsuite/gas/i386/movdir.s: Add tests with symbol and DISP.
-	Remove the .code16 test.
-	* testsuite/gas/i386/i386.exp: Run movdir-16bit and enqcmd-16bit.
-	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Updated.
-	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
-	* testsuite/gas/i386/x86-64-movdir-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-movdir.d: Likewise.
-	* testsuite/gas/i386/enqcmd-intel.d: Likewise.
-	* testsuite/gas/i386/enqcmd.d: Likewise.
-	* testsuite/gas/i386/movdir-intel.d: Likewise.
-	* testsuite/gas/i386/movdir.d: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
-	* testsuite/gas/i386/x86-64-movdir-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-movdir.d: Likewise.
-
-2020-10-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26685
-	* config/tc-i386.c (process_suffix): Check the register operand
-	for the address size prefix if the memory operand is symbol(%rip).
-	* testsuite/gas/i386/x86-64-enqcmd.s: Add tests with RIP-relative
-	addressing.
-	* testsuite/gas/i386/x86-64-movdir.s: Likewise.
-	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Updated.
-	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
-	* testsuite/gas/i386/x86-64-movdir-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-movdir.d: Likewise.
-
-2020-10-07  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/evex-no-scale-64.d,
-	testsuite/gas/i386/addr32.d,
-	testsuite/gas/i386/x86-64-addr32-intel.d,
-	testsuite/gas/i386/x86-64-addr32.d: Adjust expectations.
-
-2020-10-06  Alex Coplan  <alex.coplan@arm.com>
-
-	PR 26699
-	* config/tc-aarch64.c (asm_barrier_opt): Delete.
-	(parse_barrier): Fix bogus type punning.
-	* testsuite/gas/aarch64/system.d: Update disassembly.
-	* testsuite/gas/aarch64/system.s: Add isb sy test.
-
-2020-10-02  Alex Coplan  <alex.coplan@arm.com>
-
-	* config/tc-aarch64.c (aarch64_cpus): Add Neoverse V1.
-	* doc/c-aarch64.texi: Document Neoverse V1 support.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-08-19  Alan Modra  <amodra@gmail.com>
-	* testsuite/gas/ppc/int128.s: Correct vcmpuq.
-	* testsuite/gas/ppc/int128.d: Update.
-	* testsuite/gas/ppc/xvtlsbb.d: Update.
-
-	2020-08-10  Alan Modra  <amodra@gmail.com>
-	* testsuite/gas/ppc/power8.d,
-	* testsuite/gas/ppc/power8.s: Add miso.
-	* testsuite/gas/ppc/power9.d,
-	* testsuite/gas/ppc/power8.s: Add exser, msgsndu, msgclru.
-
-	2020-08-10  Alan Modra  <amodra@gmail.com>
-	* testsuite/gas/ppc/power8.d: Update.
-	* testsuite/gas/ppc/vsx2.d: Update.
-
-	2020-08-10  Alan Modra  <amodra@gmail.com>
-	* config/tc-ppc.c (md_assemble): Error for lmw, stmw, lswi, lswx,
-	stswi, or stswx in little-endian mode.
-	* testsuite/gas/ppc/476.d,
-	* testsuite/gas/ppc/476.s: Delete lmw, stmw, lswi, lswx, stswi, stswx.
-	* testsuite/gas/ppc/a2.d,
-	* testsuite/gas/ppc/a2.s: Move lmw, stmw, lswi, lswx, stswi, stswx..
-	* testsuite/gas/ppc/be.d,
-	* testsuite/gas/ppc/be.s: ..to here, new big-endian only test.
-	* testsuite/gas/ppc/le_error.d,
-	* testsuite/gas/ppc/le_error.l: New little-endian test.
-	* testsuite/gas/ppc/ppc.exp: Run new tests.
-
-2020-09-19  Nick Clifton  <nickc@redhat.com>
-
-	This is the 2.35.1 point release.
-
-	* configure: Regenerate.
-	* po/gas.pot: Regenerate.
-
-2020-09-19  Nick Clifton  <nickc@redhat.com>
-
-	Import from mainline:
-	2020-09-15  Nick Clifton  <nickc@redhat.com>
-
-	* read.c (s_nop): Preserve the input_line_pointer around the call
-	to md_assemble.
-	* config/tc-s12z.c (md_assemble): Revert previous delta.
-
-2020-09-15  Nick Clifton  <nickc@redhat.com>
-
-	Import from mainline:
-	2020-09-15  David Faust  <david.faust@oracle.com>
-
-	* config/tc-bpf.h (md_single_noop_insn): Use 'ja 0' for no-op.
-
-2020-09-15  Nick Clifton  <nickc@redhat.com>
-
-	Import from mainline:
-	2020-09-14  Nick Clifton  <nickc@redhat.com>
-
-	* read.c (s_nop): New function.  Handles the .nop directive.
-	(potable): Add entry for "nop".
-	(s_nops): Code tidy.
-	* read.h (s_nop): Add prototype.
-	* config/tc-bpf.h (md_single_noop_insn): Define.
-	* config/tc-mmix.h (md_single_noop_insn): Define.
-	* config/tc-or1k.h (md_single_noop_insn): Define.
-	* config/tc-ia64.h (md_single_noop_insn): Define.
-	* write.c (relax_segment): Update error message regarding
-	non-absolute values passed to .fill and .nops.
-	* NEWS: Mention the new directive.
-	* doc/as.texi: Document the new directive.
-	* doc/internals.texi: Document the new internal macros used to
-	implement the new directive.
-	* testsuite/gas/all/nop.s: New test.
-	* testsuite/gas/all/nop.d: New test control file.
-	* testsuite/gas/all/gas.exp: Run the new test.
-	* testsuite/gas/elf/dwarf-5-nop-for-line-table.s: New test.
-	* testsuite/gas/elf/dwarf-5-nop-for-line-table.d: New test
-	control file.
-	* testsuite/gas/elf/elf.exp: Run the new test.
-	* testsuite/gas/i386/space1.l: Adjust expected output.
-
-2020-09-14  Mark Wielaard  <mark@klomp.org>
-
-	Backport from mainline:
-	2020-09-07  Mark Wielaard  <mark@klomp.org>
-
-	* as.texi (-g): Explicitly mention when .debug_info and .debug_line
-	are generated for the DWARF format.
-	(Loc): Add that it is an error to both use a .loc directive and
-	generate a .debug_line yourself.
-	* dwarf2dbg.c (dwarf2_any_loc_directive_seen): New static variable.
-	(dwarf2_directive_loc): Set dwarf2_any_loc_directive_seen to TRUE.
-	(dwarf2_finish): Check dwarf2_any_loc_directive_seen before emitting
-	an error. Only create .debug_line if it is empty (or doesn't exist).
-	* testsuite/gas/i386/i386.exp: Add dwarf2-line-{1,2,3,4} when testing
-	an elf target.
-	* testsuite/gas/i386/dwarf2-line-{1,2,3,4}.{s,d,l}: New test files.
-
-2020-09-14  Mark Wielaard  <mark@klomp.org>
-
-	Backport from mainline:
-	2020-09-07  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf2dbg.c (add_line_strp): New function.
-	(out_dir_and_file_list): Take line_seg and sizeof_offset as
-	arguments, Use DW_FORM_line_strp for dir and file. Call
-	add_line_strp and set symbol offset for DWARF2_LINE_VERSION 5.
-	(out_debug_line): Call out_dir_and_file_list with line_seg and
-	sizeof_offset.
-	* gas/testsuite/gas/elf/dwarf-5-file0.d: Expect indirect line
-	strings.
-
-2020-09-14  Mark Wielaard  <mark@klomp.org>
-
-	Backport from mainline:
-	2020-09-07  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf2dbg.c (DWARF2_RNGLISTS_VERSION): New constant.
-	(out_debug_ranges): Add ranges_sym argument and set it.
-	(out_debug_rnglists): New function.
-	(out_debug_info): Change ranges_seg argument to ranges_sym
-	and use it to set DW_AT_ranges value.
-	(dwarf2_finish): Remove ranges_seg, add ranges_sym. For
-	DWARF2_VERSION 5 call out_debug_rnglists.
-
-2020-09-14  Mark Wielaard  <mark@klomp.org>
-
-	Backport from mainline:
-	2020-08-28  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf2dbg.c (dwarf2_directive_filename): Initialize with_md5 to
-	FALSE.
-	* gas/testsuite/gas/elf/dwarf-5-file0.s: Add a random bignum.
-
-2020-09-14  Mark Wielaard  <mark@klomp.org>
-
-	Backport from mainline:
-	2020-09-01  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf2dbg.c (out_debug_abbrev): Use DW_FORM_sec_offset for DWARF
-	version 4 or higher.
-
-2020-09-14  Mark Wielaard  <mark@klomp.org>
-
-	Backport from mainline:
-	2020-08-26  Mark Wielaard  <mark@klomp.org>
-
-	* as.c (parse_args): Handle bad -gdwarf options.
-
-2020-08-26  David Faust  <david.faust@oracle.com>
-
-	* config/tc-bpf.c: Add option -mxbpf to select xbpf isa.
-	* testsuite/gas/bpf/indcall-1.d: New file.
-	* testsuite/gas/bpf/indcall-1.s: Likewise.
-	* testsuite/gas/bpf/indcall-bad-1.l: Likewise.
-	* testsuite/gas/bpf/indcall-bad-1.s: Likewise.
-	* testsuite/gas/bpf/bpf.exp: Run new tests.
-
-2020-08-25  Nick Clifton  <nickc@redhat.com>
-
-	Backport from mainline:
-	2020-08-04  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf2dbg.c (out_debug_abbrev): When DWARF2_VERSION >= 4, use
-	DW_FORM_udata for DW_AT_high_pc.
-	(out_debug_info): Use emit_leb128_expr for DW_AT_high_pc, when
-	DWARF2_VERSION >= 4.
-	* read.c (emit_leb128_exp): No longer static.
-	* read.h (emit_leb128_exp): Define.
-
-	2020-08-02  Mark Wielaard  <mark@klomp.org>
-
-	* gas/dwarf2dbg.c (out_dir_and_file_list): For DWARF5 emit at
-	least one directory if there is at least one file. Use dirs[1]
-	if dirs[0] is not set, or if there is no dirs[1] the current
-	working directory. Use files[1] filename, when files[0] filename
-	isn't set.
-
-	2020-08-02  Mark Wielaard  <mark@klomp.org>
-
-	* dwarf2dbg.c (out_debug_info): Emit unit type and abbrev offset
-	for DWARF5.
-	* gas/testsuite/gas/elf/dwarf-4-cu.d: New file.
-	* gas/testsuite/gas/elf/dwarf-4-cu.s: Likewise.
-	* gas/testsuite/gas/elf/dwarf-5-cu.d: Likewise.
-	* gas/testsuite/gas/elf/dwarf-5-cu.s: Likewise.
-	* testsuite/gas/elf/elf.exp: Run dwarf-4-cu and dwarf-5-cu.
-
-2020-08-18  Peter Bergner  <bergner@linux.ibm.com>
-
-	Backported from master:
-	2020-08-18  Peter Bergner  <bergner@linux.ibm.com>
-
-	* testsuite/gas/ppc/vsx4.s: Update test to use new mnemonic.
-	* testsuite/gas/ppc/vsx4.d: Likewise.
-
-2020-08-14  Joe Ramsay  <joe.ramsay@arm.com>
-
-	Backported from master
-	2020-08-04  Joe Ramsay <joe.ramsay@.arm.com>
-
-	* config/tc-arm.c (do_neon_cvt_1): Parse vcvtne as vcvt-ne for
-	NS_FD shape when MVE is present
-	* testsuite/gas/arm/mve-vcvtne-it-bad.d: New test.
-	* testsuite/gas/arm/mve-vcvtne-it-bad.l: New test.
-	* testsuite/gas/arm/mve-vcvtne-it-bad.s: New test.
-	* testsuite/gas/arm/mve-vcvtne-it.d: New test.
-	* testsuite/gas/arm/mve-vcvtne-it.s: New test.
-
-2020-08-12  Nick Clifton  <nickc@redhat.com>
-
-	* po/ru.po: Updated Russian translation.
-
-2020-08-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* NEWS: Mention {disp16} pseudo prefix.
-
-2020-08-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26305
-	* config/tc-i386.c (_i386_insn::disp_encoding): Add
-	disp_encoding_16bit.
-	(parse_insn): Check Prefix_XXX for pseudo prefixes.  Handle
-	{disp16}.
-	(build_modrm_byte): Handle {disp16}.
-	(i386_index_check): Check invalid {disp16} and {disp32} pseudo
-	prefixes.
-	* doc/c-i386.texi: Update {disp32} documentation and document
-	{disp16}.
-	* testsuite/gas/i386/i386.exp: Run x86-64-inval-pseudo.
-	* testsuite/gas/i386/inval-pseudo.s: Add {disp32}/{disp16}
-	tests.
-	* testsuite/gas/i386/pseudos.s: Add {disp8}/{disp32} vmovaps
-	tests with 128-byte displacement.  Add {disp16} tests.
-	* testsuite/gas/i386/x86-64-pseudos.s: Add {disp8}/{disp32}
-	vmovaps test.  Add (%r13)/(%r13d) tests.
-	* testsuite/gas/i386/x86-64-inval-pseudo.l: New file.
-	* testsuite/gas/i386/x86-64-inval-pseudo.s: Likewise.
-	* testsuite/gas/i386/inval-pseudo.l: Updated.
-	* testsuite/gas/i386/pseudos.d: Likewise.
-	* testsuite/gas/i386/x86-64-pseudos.d: Likewise.
-
-2020-07-30  Nick Clifton  <nickc@redhat.com>
-
-	* as.c (dwatf_level): Default to level 3 in case version is not
-	set on the command line.
-
-2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26305
-	* config/tc-i386.c (build_modrm_byte): Use disp32/disp16 on
-	(%bp)/(%ebp)/(%rbp) for {disp32}.
-	* doc/c-i386.texi: Update {disp32} documentation.
-	* testsuite/gas/i386/pseudos.s: Add (%bp)/(%ebp) tests.
-	* testsuite/gas/i386/x86-64-pseudos.s: Add (%ebp)/(%rbp) tests.
-	* testsuite/gas/i386/pseudos.d: Updated.
-	* testsuite/gas/i386/x86-64-pseudos.d: Likewise.
-
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
-	2.35 Release:
+	This is the 2.36 release.
 	* configure: Regenerate.
 	* po/gas.pot: Regenerate.
 
-2020-07-19  H.J. Lu  <hongjiu.lu@intel.com>
+2021-01-24  Alan Modra  <amodra@gmail.com>
 
-	PR gas/26263
-	* config/tc-i386.c (i386_validate_fix): Change PLT32 reloc
-	against section to PC32 reloc.
-	* testsuite/gas/i386/relax-5.d: Updated.
-	* testsuite/gas/i386/x86-64-relax-4.d: Likewise.
+	PR 27228
+	* write.c (resolve_reloc_expr_symbols): Don't assume local symbol
+	is defined.
 
-2020-07-15  H.J. Lu  <hongjiu.lu@intel.com>
+2021-01-21  Alan Modra  <amodra@gmail.com>
 
-	PR gas/26237
-	* testsuite/gas/i386/evex-no-scale-64.d: Updated.
-	* testsuite/gas/i386/addr32.d: Likewise.
-	* testsuite/gas/i386/x86-64-addr32-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-addr32.d: Likewise.
+	PR 27221
+	* dwarf2dbg.c (dwarf2_gen_line_info_1): Don't warn about ignored
+	line number info when gas is generating it.
+	* testsuite/gas/elf/dwarf2-20.d: Adjust to not expect warnings.
+	* testsuite/gas/m68hc11/indexed12.d: Likewise.
+	* testsuite/gas/elf/elf.exp: Don't run warn-2.
+	* gas/testsuite/gas/elf/warn-2.s: Delete.
 
-2020-07-15  H.J. Lu  <hongjiu.lu@intel.com>
+2021-01-21  Alan Modra  <amodra@gmail.com>
 
-	PR gas/26237
-	* testsuite/gas/i386/addr32.s: Add tests for 32-bit wrapped around
-	address.
-	* testsuite/gas/i386/x86-64-addr32.s: Likewise.
-	* testsuite/gas/i386/addr32.d: Updated.
-	* testsuite/gas/i386/x86-64-addr32-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-addr32.d: Likewise.
-	* testsuite/gas/i386/ilp32/x86-64-addr32-intel.d: Likewise.
-	* testsuite/gas/i386/ilp32/x86-64-addr32.d: Likewise.
+	PR 27218
+	* dwarf2dbg.c (dwarf2_gen_line_info): Correct setting of dwarf_level.
+	(dwarf2_directive_filename, dwarf2_directive_loc): Likewise, and
+	error for negative file numbers.
 
-2020-07-15  H.J. Lu  <hongjiu.lu@intel.com>
+2021-01-18  H.J. Lu  <hongjiu.lu@intel.com>
 
-	PR gas/26237
-	* config/tc-i386.c (offset_in_range): Remove 32-bit sign
-	extension.
+	PR gas/27195
+	* dwarf2dbg.c (dwarf2_gen_line_info): Set dwarf_level to 5 if
+	needed.
+	(dwarf2_directive_filename): Likewise.
+	(dwarf2_directive_loc): Likewise.
+	* testsuite/gas/elf/dwarf-5-file0.d: Pass --gdwarf-3.
+	* testsuite/gas/lns/lns-diag-1.l: Remove the
+	"Error: file number less than one" errors.
 
-2020-07-15  Nick Clifton  <nickc@redhat.com>
-
-	* write.c (create_note_reloc): Add desc2_size parameter.  Zero out
-	the addend field of REL relocations.  Store the full addend into
-	the note for REL relocations.
-
-2020-07-13  Nick Clifton  <nickc@redhat.com>
+2021-01-12  Nick Clifton  <nickc@redhat.com>
 
 	* po/fr.po: Updated French translation.
 
-2020-07-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26212
-	* doc/c-i386.texi: Remove an incorrect AVX2 entry.
-
-2020-07-06  Nick Clifton  <nickc@redhat.com>
+2021-10-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
+
+	* NEWS: Remove CSRE.
+	* config/tc-aarch64.c (parse_csr_operand): Delete.
+	(parse_operands): Delete handling of
+	AARCH64_OPND_CSRE_CSR.
+	(aarch64_features): Remove csre.
+	* doc/c-aarch64.texi: Remove CSRE.
+	* testsuite/gas/aarch64/csre.d: Delete.
+	* testsuite/gas/aarch64/csre-invalid.s: Likewise.
+	* testsuite/gas/aarch64/csre-invalid.d: Likewise.
+	* testsuite/gas/aarch64/csre_csr.s: Likewise.
+	* testsuite/gas/aarch64/csre_csr.d: Likewise.
+	* testsuite/gas/aarch64/csre_csr-invalid.s: Likewise.
+	* testsuite/gas/aarch64/csre_csr-invalid.l: Likewise.
+	* testsuite/gas/aarch64/csre_csr-invalid.d: Likewise.
+
+2021-01-11  Nick Clifton  <nickc@redhat.com>
 
 	* po/uk.po: Updated Ukranian translation.
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
 	* po/gas.pot: Regenerate.
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.35 branch created.
-
-2020-07-03  Alan Modra  <amodra@gmail.com>
-
-	PR 26028
-	* testsuite/gas/ia64/unwind-ilp32.d: Add -T to readelf options.
-
-2020-07-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (build_modrm_byte): Check vexswapsources to
-	swap two source operands.
-
-2020-07-02  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/gas/all/fill-1.d: Skip for MeP targets.
-
-2020-07-02  Alex Coplan  <alex.coplan@arm.com>
-
-	* config/tc-aarch64.c (reg_name_p): Fix cast so that we don't
-	segfault on negative chars.
-	* testsuite/gas/aarch64/reglike-label-unicode-segv.d: New test.
-	* testsuite/gas/aarch64/reglike-label-unicode-segv.s: Input.
-
-2020-07-02  Nick Clifton  <nickc@redhat.com>
-
-	PR 26028
-	* testsuite/gas/ia64/group-2.d: Add -T option to readelf
-	command line.
-	* testsuite/gas/ia64/unwind.d: Likewise.
-	* testsuite/gas/mmix/bspec-1.d: Likewise.
-	* testsuite/gas/mmix/bspec-2.d: Likewise.
-	* testsuite/gas/mmix/comment-1.d: Likewise.
-	* testsuite/gas/tic6x/scomm-directive-4.d: Likewise.
-
-2020-07-01  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-xc16x.c (md_apply_fix): Add FIXME.
-
-2020-07-01  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/all/eqv-dot.d: xfail targets that set linkrelax
-	in data sections, and mep.
-
-2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* NEWS: Mention x86 NaCl target support removal.
-	* config/tc-i386.c: Remove x86 NaCl target support.
-	* config/tc-i386.h: Likewise.
-	* configure.tgt: Likewise.
-	* testsuite/gas/i386/i386.exp: Likewise.
-	* testsuite/gas/i386/iamcu-1.d: Likewise.
-	* testsuite/gas/i386/iamcu-2.d: Likewise.
-	* testsuite/gas/i386/iamcu-3.d: Likewise.
-	* testsuite/gas/i386/iamcu-4.d: Likewise.
-	* testsuite/gas/i386/iamcu-5.d: Likewise.
-	* testsuite/gas/i386/k1om.d: Likewise.
-	* testsuite/gas/i386/l1om.d: Likewise.
-
-2020-06-30  Nelson Chu  <nelson.chu@sifive.com>
-
-	* config/tc-riscv.c (riscv_csr_class_check): Removed.  Move the
-	checking into riscv_csr_address.
-	(riscv_csr_version_check): Likewise.
-	(riscv_csr_address): New function.  Return the suitable CSR address
-	after checking the ISA dependency and versions.  Issue warnings if
-	we find any conflict and -mcsr-check is set.  CSR_CLASS_F and
-	CSR_CLASS_DEBUG are unprivileged CSR for now, so don't check the
-	priv spec versions for them.
-	(reg_csr_lookup_internal): Call riscv_csr_address to find the
-	suitable CSR address.
-	* testsuite/gas/riscv/priv-reg-fail-fext.d: Remove -mpriv-spec=1.11.
-	* testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-fext.l:  We don't care the
-	priv spec warnings here.  These warnings are added by accident.
-	Remove them and only focus on the ISA dependency warnings.
-	* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Updated since
-	dscratch0 and dscratch1 are regarded as the unprivileged CSR rather
-	than the privileged ones.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p10.l: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p11.l: Likewise.
-	* testsuite/gas/riscv/priv-reg.s: Likewise.  Add missing debug CSR.
-	* testsuite/gas/riscv/priv-reg-version-1p9.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-version-1p9p1.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-version-1p10.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-version-1p11.d: Likewise.
-	* testsuite/gas/riscv/csr-dw-regnums.d: Likewise.
-	* testsuite/gas/riscv/csr-dw-regnums.s: Likewise.
-
-2020-06-29  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* tc-i386.c (build_vex_prefix): Support VEX base opcode length > 1.
-	(md_assemble): Don't process ImmExt without operands.
-
-2020-06-29  Hans-Peter Nilsson  <hp@bitrange.com>
-
-	PR gas/25331
-	* config/tc-mmix.c (md_assemble) <fixup for
-	BFD_RELOC_MMIX_BASE_PLUS_OFFSET>: This fixup affects 1 byte, not 8.
-	Also, set its fx_no_overflow.
-	(md_convert_frag) <case ENCODE_RELAX (STATE_PUSHJSTUB, STATE_ZERO)>: 
-	Similarly this fixup affects 4 bytes, not 8 and needs its
-	fx_no_overflow set.
-	* config/tc-mmix.h (TC_FX_SIZE_SLACK): Don't define.
-	* testsuite/gas/mmix/pr25331.d, testsuite/gas/mmix/pr25331.s: New test.
-
-2020-06-29  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-s12z.c: Use C style comments.
-	* config/tc-z80.c: Likewise.
-	* config/tc-xtensa.c (emit_ld_r_n): Remove commented out code.
-
-2020-06-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (md_assemble): Process ImmExt without
-	operands.
-
-2020-06-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (check_VecOperands): Replace vecsib with sib.
-	Replace VecSIB128, VecSIB256 and VecSIB512 with VECSIB128,
-	VECSIB256 and VECSIB512, respectively.
-	(build_modrm_byte): Replace vecsib with sib.
-
-2020-06-26  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/nop-1-suffix.d: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
-
-2020-06-26  Pat Bernardi  <bernardi@adacore.com>
-
-	* config/tc-m68k.c (m68k_elf_gnu_attribute): New function.
-	(md_pseudo_table): Handle "gnu_attribute".
-	* doc/as.texi: Document GNU attribute for M68K.
-
-2020-06-25  Nick Clifton  <nickc@redhat.com>
-
-	PR 26141
-	* config/tc-arm.c (arm_force_relocation): Force resolution of
-	BFD_RELOC_THUMB_PCREL_BRANCH12 relocations.
-	* testsuite/gas/arm/plt-1.d: Adjust expected disassembly.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-	* config/tc-i386.c (md_assemble): Move call to process_immext()
-	...
-	(process_operands): ... here.
+	* 2.36 release branch crated.
 
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
+2021-01-08  Peter Bergner  <bergner@linux.ibm.com>
 
-	* config/tc-i386.c (process_suffix): Skip ambiguous operand size
-	diagnostic when there is a sizing prefix.  Switch to word/dword/
-	qword encoding when there is a sizing prefix and no (explicit or
-	derived) suffix.
-	(update_imm): Handle presence of a sizing prefix.
-	* testsuite/gas/i386/noreg16-data32.d,
-	testsuite/gas/i386/noreg32-data16.d,
-	testsuite/gas/i386/noreg32-data16.e,
-	testsuite/gas/i386/noreg64-data16.d,
-	testsuite/gas/i386/noreg64-data16.e,
-	testsuite/gas/i386/noreg64-rex64.d: New.
-	* testsuite/gas/i386/i386.exp: Run new tests.
-	* testsuite/gas/i386/noreg32.s, testsuite/gas/i386/noreg64.s:
-	Introduce and use pfx* macros.
-	* testsuite/gas/i386/noreg16.s: Likewise. Replace 32-bit
-	addressing.
-	* testsuite/gas/i386/noreg16.d: Adjust expectations.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/avx-16bit.d,
-	testsuite/gas/i386/avx-scalar.d, testsuite/gas/i386/avx.d,
-	testsuite/gas/i386/avx512f-16bit.d,
-	testsuite/gas/i386/avx512f.d,
-	testsuite/gas/i386/evex-lig256.d,
-	testsuite/gas/i386/evex-lig512.d
-	testsuite/gas/i386/evex-wig1.d, testsuite/gas/i386/katmai.d,
-	testsuite/gas/i386/noreg16.d, testsuite/gas/i386/noreg32.d,
-	testsuite/gas/i386/ptwrite.d, testsuite/gas/i386/simd.d,
-	testsuite/gas/i386/sse2-16bit.d,
-	testsuite/gas/i386/sse2.d, testsuite/gas/i386/sse2avx.d: Adjust
-	expectations.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (md_assemble): Also reject explicit REX
-	prefixes with VEX and alike encoded insns. Zap consumed bits
-	from i.rex.
-	(output_insn): Don't ignore REX prefix for VEX and alike
-	encodings; abort() instead if encountered.
-	* testsuite/gas/i386/x86-64-pseudos.s: Move REX-with-VEX cases
-	...
-	* testsuite/gas/i386/x86-64-pseudos-bad.s: ... here.
-	* testsuite/gas/i386/x86-64-pseudos.d,
-	testsuite/gas/i386/x86-64-pseudos-bad.l: Adjust expectations.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_operands): Translate explicit REX
-	prefix into i.rex for SSE2AVX templates.
-	(set_rex_vrex): New helper.
-	(build_modrm_byte): Use it.
-	* testsuite/gas/i386/x86-64-sse2avx.s: Add cases with explict
-	REX prefixes.
-	* testsuite/gas/i386/x86-64-sse2avx.d: Adjust expectations.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (cpu_flags_match): Only match SSE2AVX
-	templates when there's no data size prefix.
-	(md_assemble): Reject data size prefix also for legacy encoded
-	SIMD templates.
-	* testsuite/gas/i386/prefix32.s, testsuite/gas/i386/prefix64.s:
-	Uncomment previously not working line.
-	* testsuite/gas/i386/sse2avx.s: Add ldmxcsr/stmxcsr cases with
-	data16 prefix.
-	* testsuite/gas/i386/prefix32.l, testsuite/gas/i386/prefix64.l,
-	testsuite/gas/i386/sse2avx.d: Adjust expectations.
-
-2020-06-25  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (build_evex_prefix): Drop early setting of
-	vec_length.
-
-2020-06-23  Nelson Chu  <nelson.chu@sifive.com>
-
-	* config/tc-riscv.c (explicit_priv_attr): Rename explicit_csr to
-	explicit_priv_attr.  It used to indicate CSR or priv instructions are
-	explictly used.
-	(riscv_is_priv_insn): Return True if it is a privileged instruction.
-	(riscv_ip): Call riscv_is_priv_insn to check whether the instruction
-	is privileged or not.  If it is, then set explicit_priv_attr to TRUE.
-	(riscv_write_out_attrs): Clarification of when to generate the elf
-	priv spec attributes.
-	* testsuite/gas/riscv/attribute-11.s: Add comments.
-	* testsuite/gas/riscv/attribute-14.s: New testcase.  Use symbol
-	`priv_insn_<n>` to decide which priv instruction is expected to used.
-	(<n> is a to e.)
-	* testsuite/gas/riscv/attribute-14a.d: Likewise.
-	* testsuite/gas/riscv/attribute-14b.d: Likewise.
-	* testsuite/gas/riscv/attribute-14c.d: Likewise.
-	* testsuite/gas/riscv/attribute-14d.d: Likewise.
-	* testsuite/gas/riscv/attribute-14e.d: Likewise.
-
-2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
-
-	* config/tc-riscv.c (buf_size, buf): Remove the unused variables.
-	(riscv_set_default_priv_spec): Get the priv spec version from the
-	priv spec attributes by riscv_get_priv_spec_class_from_numbers.
-
-2020-06-20  Alan Modra  <amodra@gmail.com>
-
-	* configure.tgt: Set bfd_gas for all SH targets.
-
-2020-06-18  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/arch-13.s: Add alternative VMGEXIT case.
-	* testsuite/gas/i386/arch-13.d: Extend -march=. Adjust
-	expectations.
-
-2020-06-16  Lili Cui  <lili.cui@intel.com>
-
-	* config/tc-i386.c (cpu_arch): Correct noavx512_vp2intersect
-	cpu_arch to CPU_ANY_VP2INTERSECT_FLAGS.
-	* doc/c-i386.texi: Add avx512_vp2intersect.
-
-2020-06-16  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (md_assemble): Drop SSE4a from SSE check
-	conditional.
-	* testsuite/gas/i386/sse-check.s: Adjust comment.
-	* testsuite/gas/i386/sse-check-error.l,
-	testsuite/gas/i386/sse-check-warn.e,
-	testsuite/gas/i386/x86-64-sse-check-error.l: Adjust
-	expectations.
-
-2020-06-16  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-tic30.h: Remove OBJ_AOUT support.
-	* configure.tgt: Delete tic30-*-*aout* entry.
-
-2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* config/tc-xtensa.c (XTHAL_ABI_WINDOWED, XTHAL_ABI_CALL0): New
-	macros.
-	(elf32xtensa_abi): New declaration.
-	(option_abi_windowed, option_abi_call0): New enum constants.
-	(md_longopts): Add entries for --abi-windowed and --abi-call0.
-	(md_parse_option): Add handlers for --abi-windowed and
-	--abi-call0.
-	(xtensa_add_config_info): Use xtensa_abi_choice instead of
-	XSHAL_ABI to format ABI tag.
-	* doc/as.texi (Target Xtensa options): Add --abi-windowed and
-	--abi-call0 to the list of options.
-	* doc/c-xtensa.texi: Add description for options --abi-windowed
-	and --abi-call0.
-	* testsuite/gas/xtensa/abi-call0.d: New test definition.
-	* testsuite/gas/xtensa/abi-windowed.d: New test definition.
-	* testsuite/gas/xtensa/abi.s: New test source.
-
-2020-06-14  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26115
-	* testsuite/gas/i386/tsxldtrk.d: Replace xsuspldtrk with
-	xsusldtrk.
-	* testsuite/gas/i386/tsxldtrk.s: Likewise.
-	* testsuite/gas/i386/x86-64-tsxldtrk.d: Likewise.
-	* testsuite/gas/i386/x86-64-tsxldtrk.s: Likewise.
-
-2020-06-12  Nelson Chu  <nelson.chu@sifive.com>
-
-	* testsuite/gas/riscv/priv-reg-fail-version-1p9.d: Removed.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Likewise.
-	* testsuite/gas/riscv/priv-reg-version-1p9.d: Likewise.
-
-2020-06-09  Seth Girvan  <snth@snthhacks.com>
-
-	* doc/c-avr.texi: Improve wording.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/x86-64-pseudos-bad.s,
-	testsuite/gas/i386/x86-64-pseudos-bad.l: New.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/prefix.s: Add bogus prefix-with-VEX/EVEX
-	encoding tests.
-	* testsuite/gas/i386/prefix.d: Adjust expectations.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/prefix.s: Add bogus REP / EVEX.W prefix
-	with VEX/EVEX encoding tests.
-	* testsuite/gas/i386/prefix.d: Adjust expectations.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_suffix): Restrict defaulting to 'q'
-	suffix.
-	* testsuite/gas/i386/noreg64.s: Add lcall/ljmp cases.
-	* testsuite/gas/i386/noreg64.d: Adjust expectations.
-	* testsuite/gas/i386/noreg-intel64.d,
-	testsuite/gas/i386/noreg-intel64.l,
-	testsuite/gas/i386/noreg-intel64.s: New.
-	* testsuite/gas/i386/i386.exp: Run new tests.
-
-2020-06-09  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (vex_encoding_error): New enumerator.
-	(VEX_check_operands): Rename to VEX_check_encoding. Check
-	for vex_encoding_error. Move Imm4 handling ...
-	(check_VecOperands): ... here.
-	(match_template): Call VEX_check_encoding when there are no
-	operands. Split construct calling check_VecOperands and
-	VEX_check_encoding (when there are operands).
-	(check_register): Don't blindly set vex_encoding_evex.
-	* testsuite/gas/i386/pseudos-bad.s,
-	testsuite/gas/i386/pseudos-bad.l: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
-	* testsuite/gas/i386/xmmhi64.s: Drop {vex2}.
-
-2020-06-08  Alex Coplan  <alex.coplan@arm.com>
-
-	* config/tc-arm.c (insns): Add dfb.
-	* testsuite/gas/arm/dfb.d: New test.
-	* testsuite/gas/arm/dfb.s: Input for test.
-
-2020-06-08  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/gas/cfi/cfi-i386-2.d: Skip for PE based targets.
-
-2020-06-08  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (pi): Add checks for RegMask and RegBND.
-
-2020-06-08  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (check_byte_reg): Drop dead conditional
-	around as_bad().
-
-2020-06-08  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (check_register): Split RegTR handling, to
-	fail recognition also in 64-bit mode as well as with i586 or
-	i686 explicitly enabled.
-	* testsuite/gas/i386/x86_64.s: Add insns referencing tr<N>.
-	* testsuite/gas/i386/x86_64-intel.d,
-	testsuite/gas/i386/x86_64.d: Adjust expectations.
-
-2020-06-08  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/cfi/cfi-i386-2.d: Adjust expectations.
-	* testsuite/gas/cfi/cfi.exp: Run this test.
-
-2020-06-08  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (parse_real_register): Add allow_pseudo_reg
-	check to %st(N) parsing logic.
-	* testsuite/gas/cfi/cfi-i386.s: Set "generic32" arch.
-
-2020-06-08  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (bad_reg): New.
-	(check_VecOperations, i386_att_operand, i386_parse_name): Check
-	for it.
-	(check_register): New, broken out from ...
-	(parse_real_register): ... here. Call it.
-	(parse_register): Call it, and error upon failure.
-	* testsuite/gas/i386/equ-bad.s, testsuite/gas/i386/equ-bad.l,
-	testsuite/gas/i386/x86-64-equ-bad.s,
-	testsuite/gas/i386/x86-64-equ-bad.l: New.
-	* testsuite/gas/i386/i386.exp: Run new tests.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (md_show_usage): Mention -mpower10 and -mpwr10.
-	* doc/c-ppc.texi: Likewise.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c: Update throughout for reloc renaming.
-
-2020-06-05  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* config/tc-bpf.c (md_apply_fix): Avoid GCC 10 warning
-	stringop-overflow.
-
-2020-06-05  Nelson Chu  <nelson.chu@sifive.com>
-
-	* config/tc-riscv.c (explicit_csr): New static boolean.
-	Used to indicate CSR are explictly used.
-	(riscv_ip): Set explicit_csr to TRUE if any CSR is used.
-	(riscv_write_out_attrs): If we already have set elf priv
-	attributes, then generate them.  Otherwise, don't generate
-	them when no CSR are used.
-	* testsuite/gas/riscv/attribute-01.d: Remove the priv attributes.
-	* testsuite/gas/riscv/attribute-02.d: Likewise.
-	* testsuite/gas/riscv/attribute-03.d: Likewise.
-	* testsuite/gas/riscv/attribute-04.d: Likewise.
-	* testsuite/gas/riscv/attribute-05.d: Likewise.
-	* testsuite/gas/riscv/attribute-06.d: Likewise.
-	* testsuite/gas/riscv/attribute-07.d: Likewise.
-	* testsuite/gas/riscv/attribute-08.d: Likewise.
-	* testsuite/gas/riscv/attribute-09.d: Likewise.
-	* testsuite/gas/riscv/attribute-10.d: Likewise.
-	* testsuite/gas/riscv/attribute-unknown.d: Likewise.
-	* testsuite/gas/riscv/attribute-11.s: New testcase.
-	* testsuite/gas/riscv/attribute-11.d: New testcase.  The CSR is
-	used, so we should output the ELF priv attributes.
-	* testsuite/gas/riscv/attribute-12.d: New testcase.  The CSR is
-	used, so output the priv attributes according to the -mpriv-spec.
-	* testsuite/gas/riscv/attribute-13.d: New testcase.  The CSR isn't
-	used, so ignore the -mpriv-spec setting.
-
-2020-06-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-ip2k. (ip2k_apply_fix): Pass endianness to
-	cgen_get_insn_value.
-	* config/tc-xstormy16.c (xstormy16_md_apply_fix): Pass
-	endianness to cgen_get_insn_value and cgen_put_insn_value.
-
-2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* config/tc-bpf.c (md_apply_fix): Simplify and avoid using
-	cgen_put_insn_value.
-
-2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* config/tc-bpf.c (md_begin): Pass CGEN_CPU_OPEN_INSN_ENDIAN to
-	bpf_cgen_cpu_open.
-	(md_assemble): Remove no longer needed hack.
-
-2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* cgen.c (gas_cgen_finish_insn): Pass the endianness to
-	cgen_put_insn_value.
-	(gas_cgen_md_apply_fix): Likewise.
-	(gas_cgen_md_apply_fix): Likewise.
-	* config/tc-bpf.c (md_apply_fix): Pass data endianness to
-	cgen_put_insn_value.
-	* config/tc-mep.c (mep_check_ivc2_scheduling): Pass endianness to
-	cgen_put_insn_value.
+	* testsuite/gas/ppc/rop-checks.d,
+	* testsuite/gas/ppc/rop-checks.l,
+	* testsuite/gas/ppc/rop-checks.s,
+	* testsuite/gas/ppc/rop.d,
+	* testsuite/gas/ppc/rop.s: New tests.
+	* testsuite/gas/ppc/ppc.exp: Run them.
 
-2020-06-04  Alan Modra  <amodra@gmail.com>
+2021-01-09  Alan Modra  <amodra@gmail.com>
 
-	* testsuite/config/default.exp: Remove global directive outside
-	proc body.
-	* testsuite/gas/mep/complex-relocs.exp: Likewise.
-	* testsuite/gas/microblaze/relax_size.exp: Likewise.
-	* testsuite/gas/microblaze/reloc_sym.exp: Likewise.
-	* testsuite/gas/mt/relocs.exp: Likewise.
-	* testsuite/gas/rx/rx.exp: Likewise.
+	* configure: Regenerate.
 
-2020-06-03  Stephen Casner  <casner@acm.org>
+2021-01-07  Samuel Thibault  <samuel.thibault@gnu.org>
 
-	* doc/c-riscv.texi (RISC-V-Options): Fix non-ASCII apostrophe.
+	* configure: Regenerate.
 
-2020-06-02  Frédéric Pétrot  <frederic.petrot@univ-grenoble-alpes.fr>
+2021-01-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR 27109
+	* read.c (s_reloc): Call symbol_mark_used_in_reloc on the
+	section symbol.
+	* subsegs.c (subseg_set_rest): Set BSF_SECTION_SYM_USED if needed.
+	* write.c (adjust_reloc_syms): Call symbol_mark_used_in_reloc
+	on the section symbol.
+	(set_symtab): Don't generate unused section symbols.
+	(maybe_generate_build_notes): Call symbol_mark_used_in_reloc
+	on the section symbol.
+	* config/obj-elf.c (elf_adjust_symtab): Call
+	symbol_mark_used_in_reloc on the group signature symbol.
+	* testsuite/gas/cfi/cfi-label.d: Remove unused section symbols
+	from expected output.
+	* testsuite/gas/elf/elf.exp (run_elf_list_test): Check
+	is_elf_unused_section_symbols.
+	* testsuite/gas/elf/section2.e: Updated.
+	* testsuite/gas/elf/section2.e-unused: New file.
+	* testsuite/gas/elf/symver.d: Remove unused section symbols.
+	* testsuite/gas/i386/ilp32/elf/symver.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-size-1.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-size-3.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-size-5.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-unwind.d: Likewise.
+	* testsuite/gas/i386/size-1.d: Likewise.
+	* testsuite/gas/i386/size-3.d: Likewise.
+	* testsuite/gas/i386/svr4.d: Likewise.
+	* testsuite/gas/i386/x86-64-size-1.d: Likewise.
+	* testsuite/gas/i386/x86-64-size-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-size-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-unwind.d: Likewise.
+
+2021-01-07  Philipp Tomsich  <prt@gnu.org>
+
+	* config/tc-riscv.c (riscv_multi_subset_supports): Added
+	INSN_CLASS_ZIHINTPAUSE.
+	* testsuite/gas/riscv/pause.d: New testcase.  Adding coverage for
+	the pause hint instruction.
+	* testsuite/gas/riscv/pause.s: Likewise.
+
+2021-01-07  Claire Xenia Wolf  <claire@symbioticeda.com>
 	    Jim Wilson  <jimw@sifive.com>
+	    Andrew Waterman  <andrew@sifive.com>
+	    Maxim Blinov  <maxim.blinov@embecosm.com>
+	    Kito Cheng  <kito.cheng@sifive.com>
+	    Nelson Chu  <nelson.chu@sifive.com>
 
-	PR 26051
-	* doc/c-riscv.texi (RISC-V-Formats): Add missing I format using
-	simm12(rs1).  Correct S format to use simm12(rs1).  Drop SB and B
-	formats using simm12(rs1).  Correct SB and B to use rs1 and rs2.
-	Move B before SB.  Move J before UJ.
-
-2020-06-01  Alex Coplan  <alex.coplan@arm.com>
-
-	* write.c (relax_segment): Fix handling of negative offset when
-	relaxing an rs_org frag.
-	* testsuite/gas/aarch64/org-neg.d: New test.
-	* testsuite/gas/aarch64/org-neg.l: Error output for test.
-	* testsuite/gas/aarch64/org-neg.s: Input for test.
-	* testsuite/gas/arm/org-neg.d: New test.
-	* testsuite/gas/arm/org-neg.l: Error output for test.
-	* testsuite/gas/arm/org-neg.s: Input for test.
-
-2020-05-28  Stephen Casner  <casner@acm.org>
-
-	Fix unexpected failures in gas testsuite for pdp11-aout target.
-	These are caused by the PDP11's mix of little-endian octets in
-	shorts but shorts in big endian order for long or quad.
-
-	* config/tc-pdp11.c (md_number_to_chars): Implement .quad
-	* testsuite/gas/all/gas.exp: Select alternate test scripts for
-	pdp11, skip octa test completely.
-	* testsuite/gas/all/eqv-dot-pdp11.s: Identical to eqv-dot.s
-	* testsuite/gas/all/eqv-dot-pdp11.d: Match different octet order.
-	* testsuite/gas/all/cond-pdp11.l: Match different octet order.
-
-2020-05-28  Alex Coplan  <alex.coplan@arm.com>
-
-	* frags.c (frag_grow): Fix comment.
-
-2020-05-27  Stephen Casner  <casner@acm.org>
-
-	PR gas/26001
-	* config/tc-pdp11.c (parse_reg): Distinguish register names from
-	symbols that begin with a register name.
-	* testsuite/gas/pdp11/pdp11.exp: Add test of such symbols.
-	* testsuite/gas/pdp11/pr26001.s: Likewise.
-	* testsuite/gas/pdp11/pr26001.d: Likewise.
-
-2020-05-27  Simon Cook  <simon.cook@embecosm.com>
-
-        * config/tc-riscv.c (riscv_init_csr_hash): NULL initilize next
-        pointer when creating struct riscv_csr_extra.
-
-2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/gas/i386/align-branch-9.d: Updated for PECOFF.
-	* testsuite/gas/i386/inval-avx512f.s: Add .p2align for PECOFF.
-	* testsuite/gas/i386/inval-avx512f.l: Updated.
-
-2020-05-26  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>
-
-	* testsuite/gas/s390/zarch-z13.d: Add regexp checks for vector
-	load/store instruction variants with alignment hints.
-	* testsuite/gas/s390/zarch-z13.s: Emit new vector load/store
-	instruction variants with alignment hints.
-
-2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26044
-	* config/tc-xgate.c (md_apply_fix): Check BFD_RELOC_XGATE_PCREL_X
-	instead of R_XGATE_PCREL_X.
-	(xgate_parse_operand): Replace R_XGATE_PCREL_X with
-	BFD_RELOC_XGATE_PCREL_X.
-
-2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26044
-	* config/tc-visium.c (md_convert_frag): Replace fragP->fr_literal
-	with &fragP->fr_literal[0].
+	* config/tc-riscv.c (riscv_multi_subset_supports): Handle INSN_CLASS_ZB*.
+	(riscv_get_default_ext_version): Do not check the default_isa_spec when
+	the version defined in the riscv_opcodes table is ISA_SPEC_CLASS_DRAFT.
+	* testsuite/gas/riscv/bitmanip-insns-32.d: New testcase.
+	* testsuite/gas/riscv/bitmanip-insns-64.d: Likewise.
+	* testsuite/gas/riscv/bitmanip-insns.s: Likewise.
 
-2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+2021-01-06  Alan Modra  <amodra@gmail.com>
 
-	PR gas/26044
-	* config/tc-vax.c (md_estimate_size_before_relax): Replace
-	fragP->fr_literal with &fragP->fr_literal[0].
-	(md_convert_frag): Likewise.
+	* testsuite/gas/sparc/sparc.exp: Move 64-bit tests inside gas_64_check.
 
-2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+2021-01-06  Alan Modra  <amodra@gmail.com>
 
-	PR gas/26044
-	* config/tc-v850.c (md_convert_frag): Replace fragP->fr_literal
-	with &fragP->fr_literal[0].
-
-2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26044
-	* config/tc-crx.c (getreg_image): Change argument type to int.
-	(md_convert_frag): Replace fragP->fr_literal with
-	&fragP->fr_literal[0].
-
-2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26044
-	* onfig/tc-score.c (s3_do_macro_bcmp): Replace overlapping
-	sprintf with memmove.
-
-2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-mcore.c (md_convert_frag): Replace fragP->fr_literal
-	with &fragP->fr_literal[0].
-
-2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26041
-	* config/tc-cr16.c (md_assemble): Use memmove to concatenate
-	2 overlapping strings.
-
-2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-cr16.c (md_convert_frag): Replace fragP->fr_literal
-	with &fragP->fr_literal[0].
-
-2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-csky.c (md_convert_frag): Replace fragp->fr_literal
-	with &fragp->fr_literal[0].
-	* config/tc-microblaze.c (md_apply_fix): Likewise.
-	* config/tc-sh.c (md_convert_frag): Likewise.
-
-2020-05-24  Jim Wilson  <jimw@sifive.com>
-
-	PR 26025
-	* config/tc-riscv.c (riscv_pre_output_hook): Change s type from const
-	asection to segT.  New locals seg and subseg.  Call subseg_set before
-	fix_new_exp.  Call subseg_set after loop to restore original values.
-
-2020-05-21  Alan Modra  <amodra@gmail.com>
-
-	* atof-generic.c: Replace "if (x) free (x)" with "free (x)"
-	throughout.
-	* config/obj-elf.c: Likewise.
-	* config/tc-aarch64.c: Likewise.
-	* config/tc-arm.c: Likewise.
-	* config/tc-m68k.c: Likewise.
-	* config/tc-nios2.c: Likewise.
-	* config/tc-tic30.c: Likewise.
-	* ecoff.c: Likewise.
-	* read.c: Likewise.
-	* stabs.c: Likewise.
-	* symbols.c: Likewise.
-	* testsuite/gas/all/test-gen.c: Likewise.
+	* testsuite/gas/macros/app1.d: xfail tic30.
+	* testsuite/gas/macros/app2.d: Likewise.
+	* testsuite/gas/macros/app3.d: Likewise.
+	* testsuite/gas/macros/app4.d: Likewise.
 
-2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
+2021-01-06  Marcus Comstedt  <marcus@mc.pp.se>
 
-	* testsuite/gas/riscv/priv-reg-fail-read-only-01.s: Updated.
-	* config/tc-riscv.c (default_arch_with_ext, default_isa_spec):
-	Static variables which are used to set the ISA extensions. You can
-	use -march (or ELF build attributes) and -misa-spec to set them,
-	respectively.
-	(ext_version_hash): The hash table used to handle the extensions
-	with versions.
-	(init_ext_version_hash): Initialize the ext_version_hash according
-	to riscv_ext_version_table.
-	(riscv_get_default_ext_version): The callback function of
-	riscv_parse_subset_t.  According to the choosed ISA spec,
-	get the default version for the specific extension.
-	(riscv_set_arch): Set the callback function.
-	(enum options, struct option md_longopts): Add new option -misa-spec.
-	(md_parse_option): Do not call riscv_set_arch for -march.  We will
-	call it later in riscv_after_parse_args.  Call riscv_get_isa_spec_class
-	to set default_isa_spec class.
-	(riscv_after_parse_args): Call init_ext_version_hash to initialize the
-	ext_version_hash, and then call riscv_set_arch to set the architecture
-	with versions according to default_arch_with_ext.
-	* testsuite/gas/riscv/attribute-02.d: Set 0p0 as default version for
-	x extensions.
-	* testsuite/gas/riscv/attribute-03.d: Likewise.
-	* testsuite/gas/riscv/attribute-09.d: New testcase.  For i-ext, we
-	already set it's version to 2p1 by march, so no need to use the default
-	2p2 version.  For m-ext, we do not set the version by -march and ELF arch
-	attribute, so set the default 2p0 to it.  For zicsr, it is not defined in
-	ISA spec 2p2, so set 0p0 to it.
-	* testsuite/gas/riscv/attribute-10.d: New testcase.  The version of
-	zicsr is 2p0 according to ISA spec 20191213.
-	* config/tc-riscv.c (DEFAULT_RISCV_ARCH_WITH_EXT)
-	(DEFAULT_RISCV_ISA_SPEC): Default configure option settings.
-	You can set them by configure options --with-arch and
-	--with-isa-spec, respectively.
-	(riscv_set_default_isa_spec): New function used to set the
-	default ISA spec.
-	(md_parse_option): Call riscv_set_default_isa_spec rather than
-	call riscv_get_isa_spec_class directly.
-	(riscv_after_parse_args): If the -isa-spec is not set, then we
-	set the default ISA spec according to DEFAULT_RISCV_ISA_SPEC by
-	calling riscv_set_default_isa_spec.
-	* testsuite/gas/riscv/attribute-01.d: Add -misa-spec=2.2, since
-	the --with-isa-spec may be set to different ISA spec.
-	* testsuite/gas/riscv/attribute-02.d: Likewise.
-	* testsuite/gas/riscv/attribute-03.d: Likewise.
-	* testsuite/gas/riscv/attribute-04.d: Likewise.
-	* testsuite/gas/riscv/attribute-05.d: Likewise.
-	* testsuite/gas/riscv/attribute-06.d: Likewise.
-	* testsuite/gas/riscv/attribute-07.d: Likewise.
-	* configure.ac: Add configure options, --with-arch and
-	--with-isa-spec.
-	* configure: Regenerated.
-	* config.in: Regenerated.
-	* config/tc-riscv.c (default_priv_spec): Static variable which is
-	used to check if the CSR is valid for the chosen privilege spec. You
-	can use -mpriv-spec to set it.
-	(enum reg_class): We now get the CSR address from csr_extra_hash rather
-	than reg_names_hash.  Therefore, move RCLASS_CSR behind RCLASS_MAX.
-	(riscv_init_csr_hashes): Only need to initialize one hash table
-	csr_extra_hash.
-	(riscv_csr_class_check): Change the return type to void.  Don't check
-	the ISA dependency if -mcsr-check isn't set.
-	(riscv_csr_version_check): New function.  Check and find the CSR address
-	from csr_extra_hash, according to default_priv_spec.  Report warning
-	for the invalid CSR if -mcsr-check is set.
-	(reg_csr_lookup_internal): Updated.
-	(reg_lookup_internal): Likewise.
-	(md_begin): Updated since DECLARE_CSR and DECLARE_CSR_ALIAS are changed.
-	(enum options, struct option md_longopts): Add new GAS option -mpriv-spec.
-	(md_parse_option): Call riscv_set_default_priv_version to set
-	default_priv_spec.
-	(riscv_after_parse_args): If -mpriv-spec isn't set, then set the default
-	privilege spec to the newest one.
-	(enum riscv_csr_class, struct riscv_csr_extra): Move them to
-	include/opcode/riscv.h.
-	* testsuite/gas/riscv/priv-reg-fail-fext.d: This test case just want
-	to check the ISA dependency for CSR, so fix the spec version by adding
-	-mpriv-spec=1.11.
-	* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.  There are some
-	version warnings for the test case.
-	* gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.
-	* gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.
-	* gas/testsuite/gas/riscv/priv-reg-fail-read-only-02.d: Likewise.
-	* gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.
-	* gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.
-	* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.d: New test case.
-	Check whether the CSR is valid when privilege version 1.9 is choosed.
-	* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Likewise.
-	* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: New test case.
-	Check whether the CSR is valid when privilege version 1.9.1 is choosed.
-	* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l: Likewise.
-	* gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d: New test case.
-	Check whether the CSR is valid when privilege version 1.10 is choosed.
-	* gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.l: Likewise.
-	* gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d: New test case.
-	Check whether the CSR is valid when privilege version 1.11 is choosed.
-	* gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.l: Likewise.
-	* config/tc-riscv.c (DEFAULT_RISCV_ISA_SPEC): Default configure option
-	setting.  You can set it by configure option --with-priv-spec.
-	(riscv_set_default_priv_spec): New function used to set the default
-	privilege spec.
-	(md_parse_option): Call riscv_set_default_priv_spec rather than
-	call riscv_get_priv_spec_class directly.
-	(riscv_after_parse_args): If -mpriv-spec isn't set, then we set the
-	default privilege spec according to DEFAULT_RISCV_PRIV_SPEC by
-	calling riscv_set_default_priv_spec.
-	* testsuite/gas/riscv/csr-dw-regnums.d: Add -mpriv-spec=1.11, since
-	the --with-priv-spec may be set to different privilege spec.
-	* testsuite/gas/riscv/priv-reg.d: Likewise.
-	* configure.ac: Add configure option --with-priv-spec.
-	* configure: Regenerated.
-	* config.in: Regenerated.
-	* config/tc-riscv.c (explicit_attr): Rename explicit_arch_attr to
-	explicit_attr.  Set it to TRUE if any ELF attribute is found.
-	(riscv_set_default_priv_spec): Try to set the default_priv_spec if
-	the priv attributes are set.
-	(md_assemble): Set the default_priv_spec according to the priv
-	attributes when we start to assemble instruction.
-	(riscv_write_out_attrs): Rename riscv_write_out_arch_attr to
-	riscv_write_out_attrs.  Update the arch and priv attributes.  If we
-	don't set the corresponding ELF attributes, then try to output the
-	default ones.
-	(riscv_set_public_attributes): If any ELF attribute or -march-attr
-	options is set (explicit_attr is TRUE), then call riscv_write_out_attrs
-	to update the arch and priv attributes.
-	(s_riscv_attribute): Make sure all arch and priv attributes are set
-	before any instruction.
-	* testsuite/gas/riscv/attribute-01.d: Update the priv attributes if any
-	ELF attribute or -march-attr is set.  If the priv attributes are not
-	set, then try to update them by the default setting (-mpriv-spec or
-	--with-priv-spec).
-	* testsuite/gas/riscv/attribute-02.d: Likewise.
-	* testsuite/gas/riscv/attribute-03.d: Likewise.
-	* testsuite/gas/riscv/attribute-04.d: Likewise.
-	* testsuite/gas/riscv/attribute-06.d: Likewise.
-	* testsuite/gas/riscv/attribute-07.d: Likewise.
-	* testsuite/gas/riscv/attribute-08.d: Likewise.
-	* testsuite/gas/riscv/attribute-09.d: Likewise.
-	* testsuite/gas/riscv/attribute-10.d: Likewise.
-	* testsuite/gas/riscv/attribute-unknown.d: Likewise.
-	* testsuite/gas/riscv/attribute-05.d: Likewise.  Also, the priv spec
-	set by priv attributes must be supported.
-	* testsuite/gas/riscv/attribute-05.s: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p9.d: Likewise.  Updated
-	priv attributes according to the -mpriv-spec option.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p10.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-version-1p11.d: Likewise.
-	* testsuite/gas/riscv/priv-reg.d: Removed.
-	* testsuite/gas/riscv/priv-reg-version-1p9.d: New test case.  Dump the
-	CSR according to the priv spec 1.9.
-	* testsuite/gas/riscv/priv-reg-version-1p9p1.d: New test case.  Dump the
-	CSR according to the priv spec 1.9.1.
-	* testsuite/gas/riscv/priv-reg-version-1p10.d: New test case.  Dump the
-	CSR according to the priv spec 1.10.
-	* testsuite/gas/riscv/priv-reg-version-1p11.d: New test case.  Dump the
-	CSR according to the priv spec 1.11.
-	* config/tc-riscv.c (md_show_usage): Add descriptions about
-	the new GAS options.
+	* doc/as.texi: Add -mlittle-endian and -mbig-endian to docs.
 	* doc/c-riscv.texi: Likewise.
 
-2020-05-19  Peter Bergner  <bergner@linux.ibm.com>
-
-	* testsuite/gas/ppc/power9.s <dcbf, dcbfl, dcbflp>: Add tests.
-	* testsuite/gas/ppc/power9.d: Likewise.
-	* testsuite/gas/ppc/power10.s <dcbf, dcbfps, dcbstps, hwsync, lwsync,
-	pause_short, phwsync, plwsync, ptesync, stcisync, stncisync, stsync,
-	sync, wait, waitrsv>: Add tests.
-	* testsuite/gas/ppc/power10.d: Likewise.
-
-2020-05-19  Alexander Fedotov  <alfedotov@gmail.com>
-
-	PR 25992
-	* config/tc-arm.c : Add arm_ext_v8r feature.
-	(it_fsm_post_encode): Check arm_ext_v8r feature.
-	(get_aeabi_cpu_arch_from_fset): Check arm_ext_v8r feature.
-
-2020-05-19  Alan Modra  <amodra@gmail.com>
-
-	* write.c (write_contents): Use bfd_get_filename rather than
-	accessing bfd->filename directly.  Use bfd_section_name rather
-	than accessing section->name directly.
+2021-01-06  Marcus Comstedt  <marcus@mc.pp.se>
 
-2020-05-19  Alan Modra  <amodra@gmail.com>
+	* testsuite/gas/riscv/li32.d: Accept bigriscv in addition
+	to littleriscv.
+	* testsuite/gas/riscv/li64.d: Likewise.
+	* testsuite/gas/riscv/lla32.d: Likewise.
+	* testsuite/gas/riscv/lla64.d: Likewise.
+	* testsuite/gas/riscv/march-ok-g2.d: Likewise.
+	* testsuite/gas/riscv/march-ok-g2_p1.d: Likewise.
+	* testsuite/gas/riscv/march-ok-g2p0.d: Likewise.
+	* testsuite/gas/riscv/march-ok-i2p0.d: Likewise.
+	* testsuite/gas/riscv/march-ok-i2p0m2_a2f2.d: Likewise.
+	* testsuite/gas/riscv/march-ok-nse-with-version.d: Likewise.
+	* testsuite/gas/riscv/march-ok-two-nse.d: Likewise.
 
-	* symbols.c (local_symbol_make): Init all of lsy_flags.
+2021-01-06  Marcus Comstedt  <marcus@mc.pp.se>
 
-2020-05-18  Alan Modra  <amodra@gmail.com>
+	* config/tc-riscv.c (riscv_target_format): Add elf64-bigriscv and
+	elf32-bigriscv.
+	(install_insn): Always write instructions as little endian.
+	(riscv_make_nops): Likewise.
+	(md_convert_frag_branch): Likewise.
+	(md_number_to_chars): Write data in target endianness.
+	(options, md_longopts): Add -mbig-endian and -mlittle-endian options.
+	(md_parse_option): Handle the endian options.
+	* config/tc-riscv.h: Only define TARGET_BYTES_BIG_ENDIAN if not
+	already defined.
+	* configure.tgt: Added riscv64be*, riscv32be*, riscvbe*.
 
-	* symbols.c (resolve_symbol_value): Invoke LOCAL_SYMBOL_CHECK
-	before looking at add_symbol->sy_flags.
+2021-01-04  H.J. Lu  <hongjiu.lu@intel.com>
 
-2020-05-18  Hongtao Liu  <hongtao.liu@intel.com>
+	PR ld/26256
+	* config/obj-elf.c (obj_elf_change_section): Also filter out
+	SHF_LINK_ORDER.
 
-	* config/tc-i386.c: Not handle lret/iret.
-	* testsuite/gas/i386/lfence-ret-a.d: Adjust testcase.
-	* testsuite/gas/i386/lfence-ret-b.d: Ditto.
-	* testsuite/gas/i386/lfence-ret-c.d: Ditto.
-	* testsuite/gas/i386/lfence-ret-d.d: Ditto.
-	* testsuite/gas/i386/lfence-ret.s: Ditto.
-	* testsuite/gas/i386/x86-64-lfence-ret-a.d: Ditto.
-	* testsuite/gas/i386/x86-64-lfence-ret-b.d: Ditto.
-	* testsuite/gas/i386/x86-64-lfence-ret-c.d: Ditto.
-	* testsuite/gas/i386/x86-64-lfence-ret-d.d: Ditto.
-	* testsuite/gas/i386/x86-64-lfence-ret-e.d: Ditto.
-	* testsuite/gas/i386/x86-64-lfence-ret.s: Ditto.
-	* testsuite/gas/i386/x86-64-lfence-ret.e: Deleted.
+2021-01-04  Alan Modra  <amodra@gmail.com>
 
-2020-05-15  Alan Modra  <amodra@gmail.com>
-	    Alex Coplan  <alex.coplan@arm.com>
+	PR 27102
+	* symbols.c (S_SET_EXTERNAL): Revise section symbol warning
+	message and register symbol error message.
 
-	* symbols.c (struct local_symbol): Update comment.
-	(resolve_symbol_value): For resolved symbols equated to other
-	symbols, verify that the referenced symbol is not a local_symbol
-	before accessing sy_value.  Don't leave symbol loops during
-	finalize_syms resolution.
-	* testsuite/gas/all/assign-bad-recursive.d: New test.
-	* testsuite/gas/all/assign-bad-recursive.l: Error output for test.
-	* testsuite/gas/all/assign-bad-recursive.s: Assembly for test.
-	* testsuite/gas/all/gas.exp: Run it.
+2021-01-04  Alan Modra  <amodra@gmail.com>
 
-2020-05-14  Nick Clifton  <nickc@redhat.com>
+	PR 27101
+	* read.c (s_align): Use a large enough type for "align" to hold
+	the result of get_absolute_expression.
 
-	* po/sv.po: Updated Swedish translation.
+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>
 
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/scalarquad.d,
-	* testsuite/gas/ppc/scalarquad.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/rightmost.d,
-	* testsuite/gas/ppc/rightmost.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/xvtlsbb.d,
-	* testsuite/gas/ppc/xvtlsbb.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
+	* config/tc-i386.c: Correct comment spelling.
+	* config/tc-riscv.c: Likewise.
+	* config/tc-s390.c: Correct comment grammar.
+	* doc/c-i386.texi: Correct spelling.
+	* doc/c-s390.texi: Correct grammar.
 
-	* testsuite/gas/ppc/stringop.d,
-	* testsuite/gas/ppc/stringop.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
-2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+	Update year range in copyright notice of all files.
 
-	* testsuite/gas/ppc/set_bool.d,
-	* testsuite/gas/ppc/set_bool.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
+2021-01-01  Hans-Peter Nilsson  <hp@bitrange.com>
 
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/bitmanip.d,
-	* testsuite/gas/ppc/bitmanip.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/genpcv.d,
-	* testsuite/gas/ppc/genpcv.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/maskmanip.d,
-	* testsuite/gas/ppc/maskmanip.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-	    Peter Bergner  <bergner@linux.ibm.com>
-
-	* config/tc-ppc.c (pre_defined_registers): Add accumulators.
-	(md_assemble): Check acc specified in correct operand.
-	* testsuite/gas/ppc/outerprod.d,
-	* testsuite/gas/ppc/outerprod.s,
-	* testsuite/gas/ppc/vsx4.d,
-	* testsuite/gas/ppc/vsx4.s: New tests.
-	* testsuite/gas/ppc/ppc.exp: Run them.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/simd_perm.d,
-	* testsuite/gas/ppc/simd_perm.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/int128.d,
-	* testsuite/gas/ppc/int128.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/vsx_32byte.d,
-	* testsuite/gas/ppc/vsx_32byte.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/ppc/vec_mul.s,
-	* testsuite/gas/ppc/vec_mul.d: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
-
-	* testsuite/gas/ppc/byte_rev.d,
-	* testsuite/gas/ppc/byte_rev.s: New test.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
-
-	* testsuite/gas/ppc/power10.d: Add paste. tests.
-	* testsuite/gas/ppc/power10.s: Likewise.
-
-2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
-
-	* testsuite/gas/ppc/power10.s: New test.
-	* testsuite/gas/ppc/power10.d: Likewise.
-	* testsuite/gas/ppc/ppc.exp: Run it.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (md_assemble): Update for PPC_OPCODE_POWER10
-	renaming.
-	* testsuite/gas/ppc/prefix-align.d: Use -mpower10/-Mpower10 in
-	place of -mfuture/-Mfuture.
-	* testsuite/gas/ppc/prefix-pcrel.d: Likewise.
-	* testsuite/gas/ppc/prefix-reloc.d: Likewise.
-
-2020-05-06  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Updated Swedish translation.
-
-2020-05-06  Nick Clifton  <nickc@redhat.com>
-
-	PR 25927
-	* doc/as.texi (Preprocessing): Replace cross reference to not
-	existant document with a URL to the equivalent page in the GCC
-	manual.
-
-2020-05-05  Nick Clifton  <nickc@redhat.com>
-
-	* dwarf2dbg.c (out_dir_and_file_list): Add comments describing the
-	construction of a DWARF-5 directory name table.
-	* testsuite/gas/elf/pr25917.d: Update expected output.
-
-2020-05-05  Gunther Nikl <gnikl@justmail.de>
-
-	* config/tc-rx.c (elf_flags): Initialize for non-linux targets.
-	(md_parse_option): Remove initialization of elf_flags.
-
-2020-05-04  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	PR gas/25863
-	* config/tc-arm.c (do_mve_vmull): Fix scalar and NEON parsing of vmul.
-	* testsuite/gas/arm/mve-scalar-vmult-it.d: New test.
-	* testsuite/gas/arm/mve-scalar-vmult-it.s: New test.
-
-2020-05-04  Nick Clifton  <nickc@redhat.com>
-
-	PR 25917
-	* dwarf2dbg.c (out_dir_and_file_list): Check for the directory
-	table's existence before looking at its entries.
-	Also do not emit a default directory entry if there are no
-	directories in use.
-
-	* testsuite/gas/elf/pr25917.s: New test source file.
-	* testsuite/gas/elf/pr25917.d: New test driver.
-	* testsuite/gas/elf/elf.exp (run_elf_list_test): Run the new test.
-
-2020-04-30  Alex Coplan  <alex.coplan@arm.com>
-
-	* config/tc-aarch64.c (fix_insn): Implement for
-	AARCH64_OPND_UNDEFINED.
-	(parse_operands): Implement for AARCH64_OPND_UNDEFINED.
-	* testsuite/gas/aarch64/udf.s: New.
-	* testsuite/gas/aarch64/udf.d: New.
-	* testsuite/gas/aarch64/udf-invalid.s: New.
-	* testsuite/gas/aarch64/udf-invalid.l: New.
-	* testsuite/gas/aarch64/udf-invalid.d: New.
-
-2020-04-30  Yoshinori Sato <ysato@users.sourceforge.jp>
-
-	* config/tc-rx.c (elf_flags): Reset default value.
-	(md_parse_option): For rx-elf Initialize elf_flags with RX_ABI.
-
-2020-04-29  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* config/tc-xtensa.c (XTENSA_MARCH_EARLIEST): Define macro as 0
-	if it's not defined.
-	(microarch_earliest): New static variable.
-	(xg_translate_idioms): Translate "simcall" to "simcall 0" when
-	simcall opcode has mandatory parameter.
-	(xg_init_global_config): Initialize microarch_earliest.
-
-2020-04-29  Nick Clifton  <nickc@redhat.com>
-
-	PR 22699
-	* config/tc-sh.c (build_Mytes): Change operand type IMM0_8 to
-	IMM0_8S and add support for IMM0_8U.
-	* testsuite/gas/sh/sh4a.s: Add test of a logical insn using an
-	unsigned 8-bit immediate.
-	* testsuite/gas/sh/sh4a.d: Extended expected disassembly.
-	* testsuite/gas/sh/sh4al-dsp.d: Update expected disassembly.
-
-2020-04-27  Tamar Christina  <tamar.christina@arm.com>
-
-	* NEWS: Add news entry for big-obj.
-	* config/tc-i386.c (i386_target_format): Support new format.
-	* doc/c-i386.texi: Add i386 support.
-	* testsuite/gas/pe/big-obj.d: Rename test to not be x64 specific.
-	* testsuite/gas/pe/pe.exp (big-obj): Make test run on i386 as well.
-
-2020-04-27  Nick Clifton  <nickc@redhat.com>
-
-	PR 25878
-	* dwarf2dbg.c (struct file_entry): Add auto_assigned field.
-	(assign_file_to_slot): New function.  Fills in an entry in the
-	files table.
-	(allocate_filenum): Use new function.
-	(allocate_filename_to_slot): Use new function.  If the specified
-	slot entry is already in use, but was chosen automatically then
-	reassign the automatic entry.
-
-2020-04-26  Hongtao Liu  <hongtao.liu@intel.com
-
-	* config/tc-i386.c (lfence_before_ret_shl): New member.
-	(load_insn_p): implict load for POP/POPA/POPF/XLATB, no load
-	for Anysize insns.
-	(insert_after_load): Issue warning for REP CMPS/SCAS.
-	(insert_before_before): Handle iret, Handle
-	-mlfence-before-ret=shl, Adjust operand size of or/not/shl to ret's,
-	(md_parse_option): Change -mlfence-before-ret=[none|not|or] to
-	-mlfence-before-ret=[none/not/or/shl/yes].
-	Enable -mlfence-before-ret=shl when
-	-mlfence-beofre-indirect-branch=all and no explict -mlfence-before-ret option.
-	(md_show_usage): Ditto.
-	* doc/c-i386.texi: Ditto.
-	* testsuite/gas/i386/i386.exp: Add new testcases.
-	* testsuite/gas/i386/lfence-load-b.d: New.
-	* testsuite/gas/i386/lfence-load-b.e: New.
-	* testsuite/gas/i386/lfence-load.d: Modified.
-	* testsuite/gas/i386/lfence-load.e: New.
-	* testsuite/gas/i386/lfence-load.s: Modified.
-	* testsuite/gas/i386/lfence-ret-a.d: Modified.
-	* testsuite/gas/i386/lfence-ret-b.d: Modified.
-	* testsuite/gas/i386/lfence-ret-c.d: New.
-	* testsuite/gas/i386/lfence-ret-d.d: New.
-	* testsuite/gas/i386/lfence-ret.s: Modified.
-	* testsuite/gas/i386/x86-64-lfence-load-b.d: New.
-	* testsuite/gas/i386/x86-64-lfence-load.d: Modified.
-	* testsuite/gas/i386/x86-64-lfence-load.s: Modified.
-	* testsuite/gas/i386/x86-64-lfence-ret-a.d: Modified.
-	* testsuite/gas/i386/x86-64-lfence-ret-b.d: Modified.
-	* testsuite/gas/i386/x86-64-lfence-ret-c.d: New.
-	* testsuite/gas/i386/x86-64-lfence-ret-d.d: New
-	* testsuite/gas/i386/x86-64-lfence-ret-e.d: New.
-	* testsuite/gas/i386/x86-64-lfence-ret.e: New.
-	* testsuite/gas/i386/x86-64-lfence-ret.s: New.
-
-2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
-
-	PR ld/25861
-	* config/tc-xtensa.c (md_apply_fix): Replace
-	BFD_RELOC_XTENSA_DIFF{8,16,32} generation with
-	BFD_RELOC_XTENSA_PDIFF{8,16,32} and
-	BFD_RELOC_XTENSA_NDIFF{8,16,32} generation.
-	* testsuite/gas/xtensa/loc.d: Replace BFD_RELOC_XTENSA_DIFF16
-	with BFD_RELOC_XTENSA_PDIFF16 in the expected output.
-
-2020-04-22  Alan Modra  <amodra@gmail.com>
-
-	* config/obj-elf.c (elf_frob_symbol): Unconditionally remove
-	symbol for ".symver .. remove".
-	* doc/as.texi (.symver): Update.
-	* testsuite/gas/symver/symver11.s: Make foo weak.
-	* testsuite/gas/symver/symver11.d: Expect an error.
-	* testsuite/gas/symver/symver7.d: Allow other random symbols.
-
-2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/gas/symver/symver11.s: Add ".balign 8".
-
-2020-04-21  Andreas Schwab  <schwab@linux-m68k.org>
-
-	PR 25848
-	* testsuite/gas/m68k/operands.s: Add tests for cmpi.
-	* testsuite/gas/m68k/operands.d: Update.
-	* testsuite/gas/m68k/op68000.d: Update for new error messages.
-
-2020-04-21  Tamar Christina  <tamar.christina@arm.com>
-
-	PR binutils/24753
-	* testsuite/gas/arm/pr24753.d: New test.
-	* testsuite/gas/arm/pr24753.s: New test.
-
-2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/23840
-	PR gas/25295
-	* NEWS: Mention .symver extension.
-	* config/obj-elf.c (obj_elf_find_and_add_versioned_name): New
-	function.
-	(obj_elf_symver): Call obj_elf_find_and_add_versioned_name to
-	add a version name.  Add local, hidden and remove visibility
-	support.
-	(elf_frob_symbol): Handle the list of version names.  Update the
-	original symbol to local, hidden or remove it from the symbol
-	table.
-	(elf_frob_file_before_adjust): Handle the list of version names.
-	* config/obj-elf.h (elf_visibility): New.
-	(elf_versioned_name_list): Likewise.
-	(elf_obj_sy): Change local to bitfield. Add rename, bad_version
-	and visibility.  Change versioned_name pointer to struct
-	elf_versioned_name_list.
-	* doc/as.texi: Update .symver directive.
-	* testsuite/gas/symver/symver.exp: Run all *.d tests.  Add more
-	error checking tests.
-	* testsuite/gas/symver/symver6.d: New file.
-	* testsuite/gas/symver/symver7.d: Likewise.
-	* testsuite/gas/symver/symver7.s: Likewise.
-	* testsuite/gas/symver/symver8.d: Likewise.
-	* testsuite/gas/symver/symver8.s: Likewise.
-	* testsuite/gas/symver/symver9.s: Likewise.
-	* testsuite/gas/symver/symver9a.d: Likewise.
-	* testsuite/gas/symver/symver9b.d: Likewise.
-	* testsuite/gas/symver/symver10.s: Likewise.
-	* testsuite/gas/symver/symver10a.d: Likewise.
-	* testsuite/gas/symver/symver10b.d: Likewise.
-	* testsuite/gas/symver/symver11.d: Likewise.
-	* testsuite/gas/symver/symver11.s: Likewise.
-	* testsuite/gas/symver/symver12.d: Likewise.
-	* testsuite/gas/symver/symver12.s: Likewise.
-	* testsuite/gas/symver/symver13.d: Likewise.
-	* testsuite/gas/symver/symver13.s: Likewise.
-	* testsuite/gas/symver/symver14.d: Likewise.
-	* testsuite/gas/symver/symver14.l: Likewise.
-	* testsuite/gas/symver/symver15.d: Likewise.
-	* testsuite/gas/symver/symver15.l: Likewise.
-	* testsuite/gas/symver/symver6.l: Removed.
-	* testsuite/gas/symver/symver6.s: Updated.
-
-2020-04-20  Sudakshina Das  <sudi.das@arm.com>
-
-	* config/tc-aarch64.c (parse_barrier_psb): Update error messages
-	to include TSB.
-	* testsuite/gas/aarch64/system-2.d: Update -march and new tsb tests.
-	* testsuite/gas/aarch64/system-2.s: Add new tsb tests.
-	* testsuite/gas/aarch64/system.d: Update.
-
-2020-04-20  Sudakshina Das  <sudi.das@arm.com>
-
-	* testsuite/gas/aarch64/bti.d: Update -march option.
-	* testsuite/gas/aarch64/illegal-bti.d: Remove.
-	* testsuite/gas/aarch64/illegal-bti.l: Remove.
-	* testsuite/gas/aarch64/illegal-ras-1.l: Remove esb.
-	* testsuite/gas/aarch64/illegal-ras-1.s: Remove esb.
-
-2020-04-17  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-bfin.h (TC_EQUAL_IN_INSN): Allow assignment to dot.
-
-2020-04-16  Gagan Singh Sidhu  <broly@mac.com>
-	    Nick Clifton  <nickc@redhat.com>
-
-	PR 25803
-	* config/obj-elf.c (obj_elf_type): Reject ifunc symbols on MIPS
-	targets.
-	* testsuite/gas/elf/elf.exp: Add MIPS targets to the list to skip
-	for the type-2 test.
-	* testsuite/gas/elf/type-noifunc.e: Update to allow for MIPS
-	targets running this test.
-
-2020-02-16  David Faust  <david.faust@oracle.com>
-
-	* testsuite/gas/bpf/bpf.exp: Run jump32 tests.
-	* testsuite/gas/bpf/jump32.s: New file.
-	* testsuite/gas/bpf/jump32.d: Likewise.
-
-2020-04-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* doc/c-i386.texi: Correct -mlfence-before-indirect-branch=
-	documentation.
-
-2020-04-08  Gunther Nikl  <gnikl@justmail.de>
-
-	* config/tc-moxie.h (MD_PCREL_FROM_SECTION): Delete define.
-	(md_pcrel_from): Remove prototytpe.
-	* config/tc-m32c.h (MD_PCREL_FROM_SECTION): Delete duplicate
-	define.
-	(md_pcrel_from_section): Remove duplicate prototype.
-	* tc.h (md_pcrel_from_section): Add prototype.
-	* config/tc-aarch64.h (md_pcrel_from_section): Remove prototype.
-	* config/tc-arc.h (md_pcrel_from_section): Likewise.
-	* config/tc-arm.h (md_pcrel_from_section): Likewise.
-	* config/tc-avr.h (md_pcrel_from_section): Likewise.
-	* config/tc-bfin.h (md_pcrel_from_section): Likewise.
-	* config/tc-bpf.h (md_pcrel_from_section): Likewise.
-	* config/tc-csky.h (md_pcrel_from_section): Likewise.
-	* config/tc-d10v.h (md_pcrel_from_section): Likewise.
-	* config/tc-d30v.h (md_pcrel_from_section): Likewise.
-	* config/tc-epiphany.h (md_pcrel_from_section): Likewise.
-	* config/tc-fr30.h (md_pcrel_from_section): Likewise.
-	* config/tc-frv.h (md_pcrel_from_section): Likewise.
-	* config/tc-iq2000.h (md_pcrel_from_section): Likewise.
-	* config/tc-lm32.h (md_pcrel_from_section): Likewise.
-	* config/tc-m32c.h (md_pcrel_from_section): Likewise.
-	* config/tc-m32r.h (md_pcrel_from_section): Likewise.
-	* config/tc-mcore.h (md_pcrel_from_section): Likewise.
-	* config/tc-mep.h (md_pcrel_from_section): Likewise.
-	* config/tc-metag.h (md_pcrel_from_section): Likewise.
-	* config/tc-microblaze.h (md_pcrel_from_section): Likewise.
-	* config/tc-mmix.h (md_pcrel_from_section): Likewise.
-	* config/tc-moxie.h (md_pcrel_from_section): Likewise.
-	* config/tc-msp430.h (md_pcrel_from_section): Likewise.
-	* config/tc-mt.h (md_pcrel_from_section): Likewise.
-	* config/tc-or1k.h (md_pcrel_from_section): Likewise.
-	* config/tc-ppc.h (md_pcrel_from_section): Likewise.
-	* config/tc-rl78.h (md_pcrel_from_section): Likewise.
-	* config/tc-rx.h (md_pcrel_from_section): Likewise.
-	* config/tc-s390.h (md_pcrel_from_section): Likewise.
-	* config/tc-sh.h (md_pcrel_from_section): Likewise.
-	* config/tc-xc16x.h (md_pcrel_from_section): Likewise.
-	* config/tc-xstormy16.h (md_pcrel_from_section): Likewise.
-	* config/tc-microblaze.h (md_begin, md_assemble, md_undefined_symbol,
-	md_show_usage, md_convert_frag, md_operand, md_number_to_chars,
-	md_estimate_size_before_relax, md_section_align, tc_gen_reloc,
-	md_apply_fix3): Delete prototypes.
-
-2020-04-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* NEWS: Mention support for Intel SERIALIZE and TSXLDTRK
-	instructions.
-
-2020-04-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* doc/c-z80.texi: Fix @xref warnings.
-
-2020-04-07  Lili Cui  <lili.cui@intel.com>
-
-	* config/tc-i386.c (cpu_arch): Add .TSXLDTRK.
-	(cpu_noarch): Likewise.
-	* doc/c-i386.texi: Document TSXLDTRK.
-	* testsuite/gas/i386/i386.exp: Run TSXLDTRK tests.
-	* testsuite/gas/i386/tsxldtrk.d: Likewise.
-	* testsuite/gas/i386/tsxldtrk.s: Likewise.
-	* testsuite/gas/i386/x86-64-tsxldtrk.d: Likewise.
-
-2020-04-02  Lili Cui  <lili.cui@intel.com>
-
-	* config/tc-i386.c (cpu_arch): Add .serialize.
-	(cpu_noarch): Likewise.
-	* doc/c-i386.texi: Document serialize.
-	* testsuite/gas/i386/i386.exp: Run serialize tests
-	* testsuite/gas/i386/serialize.d: Likewise.
-	* testsuite/gas/i386/x86-64-serialize.d: Likewise.
-	* testsuite/gas/i386/serialize.s: Likewise.
-
-2020-04-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* testsuite/gas/elf/section12a.d: Use notarget instead of xfail.
-	* testsuite/gas/elf/section12b.d: Likewise.
-	* testsuite/gas/elf/section16a.d: Likewise.
-	* testsuite/gas/elf/section16b.d: Likewise.
-
-2020-04-02  Gunther Nikl  <gnikl@justmail.de>
-
-	* config/tc-m68k.c (m68k_ip): Fix range check for index register
-	with a suppressed address register.
-
-2020-04-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25756
-	* config/tc-i386.h (TC_FORCE_RELOCATION_ABS): New.
-	* testsuite/gas/i386/localpic.s: Add a test for relocation
-	against local absolute symbol.
-	* testsuite/gas/i386/x86-64-localpic.s: Likewise.
-	* testsuite/gas/i386/localpic.d: Updated.
-	* testsuite/gas/i386/x86-64-localpic.d: Likewise.
-	* testsuite/gas/i386/ilp32/x86-64-localpic.d: Likewise.
-
-2020-04-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	PR gas/25732
-	* testsuite/gas/i386/solaris/x86-64-branch-2.d: New file.
-	* testsuite/gas/i386/solaris/x86-64-branch-3.d: New file.
-	* testsuite/gas/i386/solaris/x86-64-jump.d: Incorporate changes to
-	testsuite/gas/i386/x86-64-jump.d.
-	* gas/testsuite/gas/i386/solaris/x86-64-mpx-branch-1.d:
-	Incorporate changes to
-	gas/testsuite/gas/i386/x86-64-mpx-branch-1.d.
-	* testsuite/gas/i386/solaris/x86-64-mpx-branch-2.d : Incorporate
-	changes to testsuite/gas/i386/x86-64-mpx-branch-2.d.
-	* testsuite/gas/i386/x86-64-branch-2.d: Skip on *-*-solaris*.
-	* testsuite/gas/i386/x86-64-branch-3.d: Likewise.
-
-2020-03-31  Maciej W. Rozycki  <macro@linux-mips.org>
-
-	PR 25611
-	PR 25614
-	* dwarf2dbg.c: Do not include "bignum.h".
-
-2020-03-30  Nelson Chu  <nelson.chu@sifive.com>
-
-	* testsuite/gas/riscv/alias-csr.d: Move this to priv-reg-pseudo.
-	* testsuite/gas/riscv/alias-csr.s: Likewise.
-	* testsuite/gas/riscv/no-aliases-csr.d: Move this
-	to priv-reg-pseudo-noalias.
-	* testsuite/gas/riscv/bad-csr.d: Rename to priv-reg-fail-nonexistent.
-	* testsuite/gas/riscv/bad-csr.l: Likewise.
-	* testsuite/gas/riscv/bad-csr.s: Likewise.
-	* testsuite/gas/riscv/satp.d: Removed.  Already included in priv-reg.
-	* testsuite/gas/riscv/satp.s: Likewise.
-	* testsuite/gas/riscv/priv-reg-pseudo.d: New testcase for all pseudo
-	csr instruction, including alias-csr testcase.
-	* testsuite/gas/riscv/priv-reg-pseudo.s: Likewise.
-	* testsuite/gas/riscv/priv-reg-pseudo-noalias.d: New testcase for all
-	pseudo instruction with objdump -Mno-aliases.
-	* testsuite/gas/riscv/priv-reg-fail-nonexistent.d: New testcase.
-	* testsuite/gas/riscv/priv-reg-fail-nonexistent.l: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-nonexistent.s: Likewise.
-	* testsuite/gas/riscv/priv-reg.d: Update CSR to 1.11.
-	* testsuite/gas/riscv/priv-reg.s: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.
-	* testsuite/gas/riscv/csr-dw-regnums.d: Likewise.
-	* testsuite/gas/riscv/csr-dw-regnums.s: Likewise.
-
-2020-03-25  J.W. Jagersma  <jwjagersma@gmail.com>
-
-	* config/obj-coff.c (obj_coff_section): Set the bss flag on
-	sections with the "b" attribute.
-
-2020-03-22  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/s12z/truncated.d: Update expected output.
-
-2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25690
-	* config/tc-z80.c (md_pseudo_table): Add xdef anf xref pseudo ops.
-	* doc/c-z80.texi: Update documentation.
-
-2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25641
-	PR 25668
-	PR 25633
-	Fix disassembling ED+A4/AC/B4/BC opcodes.
-	Fix assembling lines containing colonless label and instruction
-	with first operand inside parentheses.
-	Fix registration of unsupported by target CPU registers.
-	* config/tc-z80.c: See above.
-	* config/tc-z80.h: See above.
-	* testsuite/gas/z80/colonless.d: Update test.
-	* testsuite/gas/z80/colonless.s: Likewise.
-	* testsuite/gas/z80/ez80_adl_all.d: Likewise.
-	* testsuite/gas/z80/ez80_unsup_regs.d: Likewise.
-	* testsuite/gas/z80/ez80_z80_all.d: Likewise.
-	* testsuite/gas/z80/gbz80_unsup_regs.d: Likewise.
-	* testsuite/gas/z80/r800_unsup_regs.d: Likewise.
-	* testsuite/gas/z80/unsup_regs.s: Likewise.
-	* testsuite/gas/z80/z180_unsup_regs.d: Likewise.
-	* testsuite/gas/z80/z80.exp: Likewise.
-	* testsuite/gas/z80/z80_strict_unsup_regs.d: Likewise.
-	* testsuite/gas/z80/z80_unsup_regs.d: Likewise.
-	* testsuite/gas/z80/z80n_unsup_regs.d: Likewise.
-
-2020-03-13  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	PR 25660
-	*  config/tc-arm.c (operand_parse_code): Add OP_RNSDMQR and OP_oRNSDMQ.
-	(parse_operands): Handle new operand codes.
-	(do_neon_dyadic_long): Make shape check accept the scalar variants.
-	(asm_opcode_insns): Fix operand codes for vaddl and vsubl.
-	* testsuite/gas/arm/mve-vaddsub-it.s: New test.
-	* testsuite/gas/arm/mve-vaddsub-it.d: New test.
-	* testsuite/gas/arm/mve-vaddsub-it-bad.s: New test.
-	* testsuite/gas/arm/mve-vaddsub-it-bad.l: New test.
-	* testsuite/gas/arm/mve-vaddsub-it-bad.d: New test.
-	* testsuite/gas/arm/nomve-vaddsub-it.d: New test.
-
-2020-03-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* NEWS: Mention x86 assembler options for CVE-2020-0551.
-
-2020-03-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/gas/i386/i386.exp: Run new tests.
-	* testsuite/gas/i386/lfence-byte.d: New file.
-	* testsuite/gas/i386/lfence-byte.e: Likewise.
-	* testsuite/gas/i386/lfence-byte.s: Likewise.
-	* testsuite/gas/i386/lfence-indbr-a.d: Likewise.
-	* testsuite/gas/i386/lfence-indbr-b.d: Likewise.
-	* testsuite/gas/i386/lfence-indbr-c.d: Likewise.
-	* testsuite/gas/i386/lfence-indbr.e: Likewise.
-	* testsuite/gas/i386/lfence-indbr.s: Likewise.
-	* testsuite/gas/i386/lfence-load.d: Likewise.
-	* testsuite/gas/i386/lfence-load.s: Likewise.
-	* testsuite/gas/i386/lfence-ret-a.d: Likewise.
-	* testsuite/gas/i386/lfence-ret-b.d: Likewise.
-	* testsuite/gas/i386/lfence-ret.s: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-byte.d: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-byte.e: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-byte.s: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-indbr-a.d: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-indbr-b.d: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-indbr-c.d: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-indbr.e: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-indbr.s: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-load.d: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-load.s: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-ret-a.d: Likewise.
-	* testsuite/gas/i386/x86-64-lfence-ret-b.d: Likewise.
-
-2020-03-11  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (lfence_after_load): New.
-	(lfence_before_indirect_branch_kind): New.
-	(lfence_before_indirect_branch): New.
-	(lfence_before_ret_kind): New.
-	(lfence_before_ret): New.
-	(last_insn): New.
-	(load_insn_p): New.
-	(insert_lfence_after): New.
-	(insert_lfence_before): New.
-	(md_assemble): Call insert_lfence_before and insert_lfence_after.
-	Set last_insn.
-	(OPTION_MLFENCE_AFTER_LOAD): New.
-	(OPTION_MLFENCE_BEFORE_INDIRECT_BRANCH): New.
-	(OPTION_MLFENCE_BEFORE_RET): New.
-	(md_longopts): Add -mlfence-after-load=,
-	-mlfence-before-indirect-branch= and -mlfence-before-ret=.
-	(md_parse_option): Handle -mlfence-after-load=,
-	-mlfence-before-indirect-branch= and -mlfence-before-ret=.
-	(md_show_usage): Display -mlfence-after-load=,
-	-mlfence-before-indirect-branch= and -mlfence-before-ret=.
-	(i386_cons_align): New.
-	* config/tc-i386.h (i386_cons_align): New.
-	(md_cons_align): New.
-	* doc/c-i386.texi: Document -mlfence-after-load=,
-	-mlfence-before-indirect-branch= and -mlfence-before-ret=.
-
-2020-03-11  Nick Clifton  <nickc@redhat.com>
-
-	PR 25611
-	PR 25614
-	* dwarf2dbg.c (DWARF2_FILE_TIME_NAME): Default to -1.
-	(DWARF2_FILE_SIZE_NAME): Default to -1.
-	(DWARF2_LINE_VERSION): Default to the current dwarf level or 3,
-	whichever is higher.
-	(DWARF2_LINE_MAX_OPS_PER_INSN): Provide a default value of 1.
-	(NUM_MD5_BYTES): Define.
-	(struct file entry): Add md5 field.
-	(get_filenum): Delete and replace with...
-	(get_basename): New function.
-	(get_directory_table_entry): New function.
-	(allocate_filenum): New function.
-	(allocate_filename_to_slot): New function.
-	(dwarf2_where): Use new functions.
-	(dwarf2_directive_filename): Add support for extended .file
-	pseudo-op.
-	(dwarf2_directive_loc): Allow the use of file number zero with
-	DWARF 5 or higher.
-	(out_file_list): Rename to...
-	(out_dir_and_file_list): Add DWARF 5 support.
-	(out_debug_line): Emit extra values into the section header for
-	DWARF 5.
-	(out_debug_str): Allow for file 0 to be used with DWARF 5.
-	* doc/as.texi (.file): Update the description of this pseudo-op.
-	* testsuite/gas/elf-dwarf-5-file0.s: Add more lines.
-	* testsuite/gas/elf-dwarf-5-file0.d: Update expected dump output.
-	* testsuite/gas/lns/lns-diag-1.l: Update expected error message.
-	* NEWS: Mention the new feature.
-
-2020-03-10  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-csky.c (get_operand_value): Rewrite 1 << 31 expressions
-	to avoid signed overflow.
-	* config/tc-mcore.c (md_assemble): Likewise.
-	* config/tc-mips.c (gpr_read_mask, gpr_write_mask): Likewise.
-	* config/tc-nds32.c (SET_ADDEND): Likewise.
-	* config/tc-nios2.c (nios2_assemble_arg_R): Likewise.
-
-2020-03-09  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/avx.s: Add long-form VCMP[PS][SD] pseudos.
-	* testsuite/gas/i386/avx.d, testsuite/gas/i386/avx-16bit.d,
-	testsuite/gas/i386/avx-intel.d: Adjust expectations.
-
-2020-03-07  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/elf/dwarf-5-file0.s: Don't start directives in
-	first column.
-
-2020-03-06  Nick Clifton  <nickc@redhat.com>
-
-	PR 25614
-	* dwarf2dbg.c (dwarf2_directive_filename): Allow a file number of
-	0 if the dwarf_level is 5 or more.  Complain if a filename follows
-	a file 0.
-	* testsuite/gas/elf/dwarf-5-file0.s: New test.
-	* testsuite/gas/elf/dwarf-5-file0.d: New test driver.
-	* testsuite/gas/elf/elf.exp: Run the new test.
-
-	PR 25612
-	* config/tc-ia64.h (DWARF2_VERISION): Fix typo.
-	* doc/as.texi: Fix another typo.
-
-2020-03-06  Nick Clifton  <nickc@redhat.com>
-
-	PR 25612
-	* as.c (dwarf_level): Define.
-	(show_usage): Add --gdwarf-3, --gdwarf-4 and --gdwarf-5.
-	(parse_args): Add support for the new options.
-	as.h (dwarf_level): Prototype.
-	* dwarf2dbg.c (DWARF2_VERSION): Use dwarf_level as default version
-	value.
-	* config/tc-ia64.h (DWARF2_VERISION): Update definition.
-	(DWARF2_LINE_VERSION): Remove definition.
-	* doc/as.texi: Document the new options.
-
-2020-03-06  Nick Clifton  <nickc@redhat.com>
-
-	PR 25572
-	* as.c (main): Allow matching input and outputs when they are
-	not regular files.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (match_mem_size): Generalize broadcast special
-	casing.
-	(check_VecOperands): Zap xmmword/ymmword/zmmword when more than
-	one of byte/word/dword/qword is set alongside a SIMD register in
-	a template's operand.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (match_template): Extend code in logic
-	rejecting certain suffixes in certain modes to also cover mask
-	register use and VecSIB. Drop special casing of broadcast. Skip
-	immediates in the check.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (match_template): Fold duplicate code in
-	logic rejecting certain suffixes in certain modes. Drop
-	pointless "else".
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_suffix): Exlucde !vexw insns
-	alongside !norex64 ones.
-	* testsuite/gas/i386/x86-64-avx512bw.s: Test VPEXTR* and VPINSR*
-	with both 32- and 64-bit GPR operands.
-	* testsuite/gas/i386/x86-64-avx512f.s: Test VEXTRACTPS with both
-	32- and 64-bit GPR operands.
-	* testsuite/gas/i386/x86-64-avx512bw-intel.d,
-	testsuite/gas/i386/x86-64-avx512bw.d,
-	testsuite/gas/i386/x86-64-avx512f-intel.d,
-	testsuite/gas/i386/x86-64-avx512f.d: Adjust expectations.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (md_assemble): Drop use of rex64.
-	(process_suffix): For REX.W for 64-bit CRC32.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (i386_addressing_mode): For 32-bit
-	addressing for MPX insns without base/index.
-	* testsuite/gas/i386/mpx-16bit.s,
-	* testsuite/gas/i386/mpx-16bit.d: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/adx.s, testsuite/gas/i386/cet.s,
-	testsuite/gas/i386/ept.s, testsuite/gas/i386/fsgs.s,
-	testsuite/gas/i386/invpcid.s, testsuite/gas/i386/movdir.s,
-	testsuite/gas/i386/ptwrite.s, testsuite/gas/i386/vmx.s,
-	* testsuite/gas/i386/code16.s: Add CR, DR, and TR access cases
-	as well as a BSWAP one.
-	* testsuite/gas/i386/rdpid.s: Add 16-bit case.
-	* testsuite/gas/i386/sse2-16bit.s: Cover more insns.
-	* testsuite/gas/i386/adx-intel.d, testsuite/gas/i386/adx.d,
-	testsuite/gas/i386/cet-intel.d, testsuite/gas/i386/cet.d,
-	testsuite/gas/i386/code16.d, testsuite/gas/i386/ept-intel.d,
-	testsuite/gas/i386/ept.d, testsuite/gas/i386/fsgs-intel.d,
-	testsuite/gas/i386/fsgs.d, testsuite/gas/i386/invpcid-intel.d,
-	testsuite/gas/i386/invpcid.d, testsuite/gas/i386/movdir-intel.d,
-	testsuite/gas/i386/movdir.d, testsuite/gas/i386/ptwrite-intel.d,
-	testsuite/gas/i386/ptwrite.d, testsuite/gas/i386/rdpid-intel.d,
-	testsuite/gas/i386/rdpid.d, testsuite/gas/i386/sse2-16bit.d,
-	testsuite/gas/i386/vmx.d: Adjust expectations.
-
-2020-03-06  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (md_assemble): Also exclude tpause and umwait
-	from having their operands swapped.
-	* testsuite/gas/i386/waitpkg.s,
-	testsuite/gas/i386/x86-64-waitpkg.s: Add tpause and umwait
-	3-operand cases as well as testing of 16-bit code generation.
-	* testsuite/gas/i386/waitpkg.d,
-	testsuite/gas/i386/waitpkg-intel.d,
-	testsuite/gas/i386/x86-64-waitpkg.d,
-	testsuite/gas/i386/x86-64-waitpkg-intel.d: Adjust expectations.
-
-2020-03-04  Nelson Chu  <nelson.chu@sifive.com>
-
-	* config/tc-riscv.c (percent_op_utype): Support the modifier
-	%got_pcrel_hi.
-	* doc/c-riscv.texi: Add documentation.
-	* testsuite/gas/riscv/no-relax-reloc.d: Add test case for the new
-	modifier %got_pcrel_hi.
-	* testsuite/gas/riscv/no-relax-reloc.s: Likewise.
-	* testsuite/gas/riscv/relax-reloc.d: Likewise.
-	* testsuite/gas/riscv/relax-reloc.s: Likewise.
-
-	* doc/c-riscv.texi (relocation modifiers): Add documentation.
-	(RISC-V-Formats): Update the section name from "Instruction Formats"
-	to "RISC-V Instruction Formats".
-
-2020-03-04  Alexandre Oliva  <oliva@adacore.com>
-
-	* config/tc-arm.c (md_apply_fix): Warn if a PC-relative load is
-	detected in a section which does not have at least 4 byte
-	alignment.
-	* testsuite/gas/arm/armv8-ar-it-bad.s: Add alignment directive.
-	* testsuite/gas/arm/ldr-t.s: Likewise.
-	* testsuite/gas/arm/sp-pc-usage-t.s: Likewise.
-	* testsuite/gas/arm/sp-pc-usage-t.d: Finish test at end of
-	disassembly, ignoring any NOPs that may have been inserted because
-	of section alignment.
-	* testsuite/gas/arm/ldr-t.d: Likewise.
-
-2020-03-04  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (cpu_arch): Add .sev_es entry.
-	* doc/c-i386.texi: Mention sev_es.
-	* testsuite/gas/i386/arch-13.s: Add SEV-ES case.
-	* testsuite/gas/i386/arch-13.d: Extend -march=. Adjust
-	expectations.
-	* testsuite/gas/i386/arch-13-znver1.d,
-	testsuite/gas/i386/arch-13-znver2.d: Extend -march=.
-
-2020-03-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (match_template): Replace ignoresize and
-	defaultsize with mnemonicsize.
-	(process_suffix): Likewise.
-
-2020-03-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25627
-	* config/tc-z80.c (emit_ld_rr_m): Fix invalid compilation of
-	instruction LD IY,(HL).
-	* testsuite/gas/z80/ez80_adl_all.d: Update expected disassembly.
-	* testsuite/gas/z80/ez80_adl_all.s: Add tests of the instruction.
-	* testsuite/gas/z80/ez80_z80_all.d: Update expected disassembly.
-	* testsuite/gas/z80/ez80_z80_all.s: Add tests of the instruction.
-
-2020-03-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25622
-	* testsuite/gas/i386/i386.exp: Run x86-64-default-suffix and
-	x86-64-default-suffix-avx.
-	* testsuite/gas/i386/noreg64.s: Remove cvtsi2sd, cvtsi2ss,
-	vcvtsi2sd, vcvtsi2ss, vcvtusi2sd and vcvtusi2ss entries.
-	* testsuite/gas/i386/noreg64.d: Updated.
-	* testsuite/gas/i386/noreg64.l: Likewise.
-	* testsuite/gas/i386/x86-64-default-suffix-avx.d: New file.
-	* testsuite/gas/i386/x86-64-default-suffix.d: Likewise.
-	* testsuite/gas/i386/x86-64-default-suffix.s: Likewise.
-
-2020-03-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25604
-	* config/tc-z80.c (contains_register): Prevent an illegal memory
-	access when checking an expression for a register name.
-
-2020-03-03  Alan Modra  <amodra@gmail.com>
-
-	* config/obj-coff.h: Remove vestiges of coff-m68k and pe-mips
-	support.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-m32r.c (md_begin): Set SEC_SMALL_DATA on .scommon section.
-	* config/tc-mips.c (s_change_sec): Set SEC_SMALL_DATA for .sdata
-	and .sbss sections.
-	* config/tc-score.c: Delete !BFD_ASSEMBLER code throughout.
-	(s3_s_change_sec): Set SEC_SMALL_DATA for .sbss section.
-	(s3_s_score_lcomm): Likewise.
-	* config/tc-score7.c: Similarly.
-	* read.c (bss_alloc): Set SEC_SMALL_DATA for .sbss section.
-
-2020-02-28  YunQiang Su  <syq@debian.org>
-
-	PR gas/25539
-	* config/tc-mips.c (fix_loongson3_llsc): Compare label value
-	to handle multi-labels.
-	(has_label_name): New.
-
-2020-02-26  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-arm.c (enum pred_instruction_type): Remove
-	NEUTRAL_IT_NO_VPT_INSN predication type.
-	(cxn_handle_predication): Modify to require condition suffixes.
-	(handle_pred_state): Remove NEUTRAL_IT_NO_VPT_INSN cases.
-	* testsuite/gas/arm/cde-scalar.s: Update test.
-	* testsuite/gas/arm/cde-warnings.l: Update test.
-	* testsuite/gas/arm/cde-warnings.s: Update test.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-arm.c (reg_expected_msgs[REG_TYPE_RNB]): Don't use
-	N_() on empty string.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* read.c (read_a_source_file): Call strncpy with length one
-	less than size of original_case_string.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* config/obj-elf.c: Indent labels correctly.
-	* config/obj-macho.c: Likewise.
-	* config/tc-aarch64.c: Likewise.
-	* config/tc-alpha.c: Likewise.
-	* config/tc-arm.c: Likewise.
-	* config/tc-cr16.c: Likewise.
-	* config/tc-crx.c: Likewise.
-	* config/tc-frv.c: Likewise.
-	* config/tc-i386-intel.c: Likewise.
-	* config/tc-i386.c: Likewise.
-	* config/tc-ia64.c: Likewise.
-	* config/tc-mn10200.c: Likewise.
-	* config/tc-mn10300.c: Likewise.
-	* config/tc-nds32.c: Likewise.
-	* config/tc-riscv.c: Likewise.
-	* config/tc-s12z.c: Likewise.
-	* config/tc-xtensa.c: Likewise.
-	* config/tc-z80.c: Likewise.
-	* read.c: Likewise.
-	* symbols.c: Likewise.
-	* write.c: Likewise.
-
-2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* config/tc-riscv.c (riscv_ip): New boolean insn_with_csr to indicate
-	we are assembling instruction with CSR.  Call riscv_csr_read_only_check
-	after parsing all arguments.
-	(enum csr_insn_type): New enum is used to classify the CSR instruction.
-	(riscv_csr_insn_type, riscv_csr_read_only_check): New functions.  These
-	are used to check if we write a read-only CSR by the CSR instruction.
-	* testsuite/gas/riscv/priv-reg-fail-read-only-01.s: New testcase.  Test
-	all CSR for the read-only CSR checking.
-	* testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-read-only-02.s: New testcase.  Test
-	all CSR instructions for the read-only CSR checking.
-	* testsuite/gas/riscv/priv-reg-fail-read-only-02.d: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-read-only-02.l: Likewise.
-
-	* config/tc-riscv.c (struct riscv_set_options): New field csr_check.
-	(riscv_opts): Initialize it.
-	(reg_lookup_internal): Check the `riscv_opts.csr_check`
-	before doing the CSR checking.
-	(enum options): Add OPTION_CSR_CHECK and OPTION_NO_CSR_CHECK.
-	(md_longopts): Add mcsr-check and mno-csr-check.
-	(md_parse_option): Handle new enum option values.
-	(s_riscv_option): Handle new long options.
-	* doc/c-riscv.texi: Add description for the new .option and assembler
-	options.
-	* testsuite/gas/riscv/priv-reg-fail-fext.d: Add `-mcsr-check` to enable
-	the CSR checking.
-	* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.
-
-	* config/tc-riscv.c (csr_extra_hash): New.
-	(enum riscv_csr_class): New enum.  Used to decide
-	whether or not this CSR is legal in the current ISA string.
-	(struct riscv_csr_extra): New structure to hold all extra information
-	of CSR.
-	(riscv_init_csr_hashes): New.  According to the DECLARE_CSR and
-	DECLARE_CSR_ALIAS, insert CSR extra information into csr_extra_hash.
-	Call hash_reg_name to insert CSR address into reg_names_hash.
-	(reg_csr_lookup_internal, riscv_csr_class_check): New functions.
-	Decide whether the CSR is valid according to the csr_extra_hash.
-	(reg_lookup_internal): Call reg_csr_lookup_internal for CSRs.
-	(init_opcode_hash): Update 'if (hash_error != NULL)' as hash_error is
-	not a boolean.  This is same as riscv_init_csr_hash, so keep the
-	consistent usage.
-	(md_begin): Call riscv_init_csr_hashes for each DECLARE_CSR.
-	* testsuite/gas/riscv/csr-dw-regnums.d: Add -march=rv32if option.
-	* testsuite/gas/riscv/priv-reg.d: Add f-ext by -march option.
-	* testsuite/gas/riscv/priv-reg-fail-fext.d: New testcase.  The source
-	file is `priv-reg.s`, and the ISA is rv32i without f-ext, so the
-	f-ext CSR are not allowed.
-	* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.
-	* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: New testcase.  The
-	source file is `priv-reg.s`, and the ISA is rv64if, so the
-	rv32-only CSR are not allowed.
-	* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.
-
-2020-02-21  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-pdp11.c (md_apply_fix): Handle BFD_RELOC_32.
-	(tc_gen_reloc): Only give a BAD_CASE assertion on pcrel relocs.
-
-2020-02-21  Alan Modra  <amodra@gmail.com>
-
-	PR 25569
-	* config/obj-aout.c (obj_aout_frob_file_before_fix): Don't loop
-	on section size adjustment, instead perform another write if
-	exec header size is larger than section size.
-
-2020-02-19  Nelson Chu  <nelson.chu@sifive.com>
-
-	* doc/c-riscv.texi: Add the doc entries for -march-attr/
-	-mno-arch-attr command line options.
-
-2020-02-19  Nelson Chu  <nelson.chu@sifive.com>
-
-	* testsuite/gas/riscv/c-add-addi.d: New testcase.
-	* testsuite/gas/riscv/c-add-addi.s: Likewise.
-
-2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25576
-	* config/tc-z80.c (md_parse_option): Do not use an underscore
-	prefix for local labels in SDCC compatability mode.
-	(z80_start_line_hook): Remove SDCC dollar label support.
-	* testsuite/gas/z80/sdcc.d: Update expected disassembly.
-	* testsuite/gas/z80/sdcc.s: Likewise.
-
-2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25517
-	* config/tc-z80.c: Add -march option.
-	* doc/as.texi: Update Z80 documentation.
-	* doc/c-z80.texi: Likewise.
-	* testsuite/gas/z80/ez80_adl_all.d: Update command line.
-	* testsuite/gas/z80/ez80_adl_suf.d: Likewise.
-	* testsuite/gas/z80/ez80_pref_dis.d: Likewise.
-	* testsuite/gas/z80/ez80_z80_all.d: Likewise.
-	* testsuite/gas/z80/ez80_z80_suf.d: Likewise.
-	* testsuite/gas/z80/gbz80_all.d: Likewise.
-	* testsuite/gas/z80/r800_extra.d: Likewise.
-	* testsuite/gas/z80/r800_ii8.d: Likewise.
-	* testsuite/gas/z80/r800_z80_doc.d: Likewise.
-	* testsuite/gas/z80/sdcc.d: Likewise.
-	* testsuite/gas/z80/z180.d: Likewise.
-	* testsuite/gas/z80/z180_z80_doc.d: Likewise.
-	* testsuite/gas/z80/z80_doc.d: Likewise.
-	* testsuite/gas/z80/z80_ii8.d: Likewise.
-	* testsuite/gas/z80/z80_in_f_c.d: Likewise.
-	* testsuite/gas/z80/z80_op_ii_ld.d: Likewise.
-	* testsuite/gas/z80/z80_out_c_0.d: Likewise.
-	* testsuite/gas/z80/z80_sli.d: Likewise.
-	* testsuite/gas/z80/z80n_all.d: Likewise.
-	* testsuite/gas/z80/z80n_reloc.d: Likewise.
-
-2020-02-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (output_insn): Mark cvtpi2ps and cvtpi2pd
-	with GNU_PROPERTY_X86_FEATURE_2_MMX.
-	* testsuite/gas/i386/i386.exp: Run property-3 and
-	x86-64-property-3.
-	* testsuite/gas/i386/property-3.d: New file.
-	* testsuite/gas/i386/property-3.s: Likewise.
-	* testsuite/gas/i386/x86-64-property-3.d: Likewise.
-
-2020-02-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (cpu_arch): Add .popcnt.
-	* doc/c-i386.texi: Remove abm and .abm.  Add popcnt and .popcnt.
-	Add a tab before @samp{.sse4a}.
-
-2020-02-17  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_suffix): Don't try to guess a suffix
-	for AddrPrefixOpReg templates. Combine the two pieces of
-	addrprefixopreg handling. Reject 16-bit address reg in 64-bit
-	mode.
-
-2020-02-17  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/14439
-	* config/tc-i386.c (md_assemble): Also suppress operand
-	swapping for MONITOR{,X} and MWAIT{,X}.
-	* testsuite/gas/i386/sse3.s, testsuite/gas/i386/x86-64-sse3.s:
-	Add Intel syntax monitor/mwait tests.
-	* testsuite/gas/i386/sse3.d, testsuite/gas/i386/x86-64-sse3.d:
-	Adjust expectations.
-	*testsuite/gas/i386/sse3-intel.d,
-	testsuite/gas/i386/x86-64-sse3-intel.d: New.
-	* testsuite/gas/i386/i386.exp: Run new tests.
-
-2020-02-17  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/6518
-	* config/tc-i386.c (process_suffix): Re-work Intel-syntax
-	[XYZ]MMWord memory operand ambiguity recognition logic (largely
-	re-indentation).
-	* testsuite/gas/i386/avx512dq-inval.s: Add vcvtqq2ps/vcvtuqq2ps
-	cases.
-	* testsuite/gas/i386/inval-avx512f.s: Also test vcvtneps2bf16.
-	* testsuite/gas/i386/avx512dq-inval.l,
-	testsuite/gas/i386/inval-avx.l,
-	testsuite/gas/i386/inval-avx512f.l: Adjust expectations.
-	* testsuite/gas/i386/avx512vl-ambig.s,
-	testsuite/gas/i386/avx512vl-ambig.l: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
-
-2020-02-16  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (cpu_arch): Add .sse4a and nosse4a.  Restore
-	nosse4.
-	* doc/c-i386.texi: Document sse4a and nosse4a.
-
-2020-02-14  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* doc/c-i386.texi: Remove the old movsx and movzx documentation
-	for AT&T syntax.
-
-2020-02-14  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/25438
-	* config/tc-i386.c (md_assemble): Move movsx/movzx special
-	casing ...
-	(process_suffix): ... here. Consider just the first operand
-	initially.
-	(check_long_reg): Drop opcode 0x63 special case again.
-	* testsuite/gas/i386/i386.s, testsuite/gas/i386/iamcu-1.s,
-	testsuite/gas/i386/ilp32/x86-64.s, testsuite/gas/i386/x86_64.s:
-	Move ambiguous operand size tests ...
-	* testsuite/gas/i386/noreg16.s, testsuite/gas/i386/noreg32.s,
-	testsuite/gas/i386/noreg64.s: ... here.
-	* testsuite/gas/i386/i386.d, testsuite/gas/i386/i386-intel.d
-	testsuite/gas/i386/iamcu-1.d, testsuite/gas/i386/ilp32/x86-64.d,
-	testsuite/gas/i386/k1om.d, testsuite/gas/i386/l1om.d,
-	testsuite/gas/i386/movx16.l, testsuite/gas/i386/movx32.l,
-	testsuite/gas/i386/movx64.l, testsuite/gas/i386/noreg16.d,
-	testsuite/gas/i386/noreg32.d, testsuite/gas/i386/noreg64.d,
-	testsuite/gas/i386/x86-64-movsxd.d,
-	testsuite/gas/i386/x86-64-movsxd-intel.d,
-	testsuite/gas/i386/x86_64.d, testsuite/gas/i386/x86_64-intel.d:
-	Adjust expectations.	
-	* testsuite/gas/i386/movx16.s, testsuite/gas/i386/movx16.l,
-	testsuite/gas/i386/movx32.s, testsuite/gas/i386/movx32.l,
-	testsuite/gas/i386/movx64.s, testsuite/gas/i386/movx64.l: New.
-	* testsuite/gas/i386/i386.exp: Run new tests.
-
-2020-02-14  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_operands): Also skip segment
-	override prefix emission if it matches an already present one.
-	* testsuite/gas/i386/prefix32.s: Add double segment override
-	cases.
-	* testsuite/gas/i386/prefix32.l: Adjust expectations.
-
-2020-02-14  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_operands): Drop ineffectual segment
-	overrides when optimizing.
-	* testsuite/gas/i386/lea-optimize.d: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
-
-2020-02-14  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_operands): Also check insn prefix
-	for ineffectual segment override warning. Don't cover possible
-	VEX/EVEX encoded insns there.
-	* testsuite/gas/i386/lea.s, testsuite/gas/i386/lea.d,
-	testsuite/gas/i386/lea.e: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
-
-2020-02-14  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25438
-	* doc/c-i386.texi: Document movsx, movsxd and movzx for AT&T
-	syntax.
-
-2020-02-13  Fangrui Song   <maskray@google.com>
-	    H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25551
-	* config/tc-i386.c (tc_i386_fix_adjustable): Don't check
-	BFD_RELOC_386_PLT32 nor BFD_RELOC_X86_64_PLT32.
-	* testsuite/gas/i386/i386.exp: Run relax-5 and x86-64-relax-4.
-	* testsuite/gas/i386/relax-5.d: New file.
-	* testsuite/gas/i386/relax-5.s: Likewise.
-	* testsuite/gas/i386/x86-64-relax-4.d: Likewise.
-	* testsuite/gas/i386/x86-64-relax-4.s: Likewise.
-
-2020-02-13  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (cpu_noarch): Use CPU_ANY_SSE4_FLAGS in
-	"nosse4" entry.
-
-2020-02-12  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (avx512): New (at file scope), moved from
-	(check_VecOperands): ... here.
-	(process_suffix): Add [XYZ]MMword operand size handling.
-	* testsuite/gas/i386/avx512dq-inval.s: Add VFPCLASS tests.
-	* testsuite/gas/i386/noavx512-2.s: Add Intel syntax VFPCLASS
-	tests.
-	* testsuite/gas/i386/avx512dq-inval.l,
-	testsuite/gas/i386/noavx512-2.l: Adjust expectations.
-
-2020-02-12  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/24546
-	* config/tc-i386.c (match_template): Apply AMD64 check to 64-bit
-	code only.
-	* config/tc-i386-intel.c (i386_intel_operand): Also handle
-	CALL/JMP in O_tbyte_ptr case.
-	* doc/c-i386.texi: Mention far call and full pointer load ISA
-	differences.
-	* testsuite/gas/i386/x86-64-branch-3.s,
-	testsuite/gas/i386/x86-64-intel64.s: Add 64-bit far call cases.
-	* testsuite/gas/i386/x86-64-branch-3.d,
-	testsuite/gas/i386/x86-64-intel64.d: Adjust expectations.
-	* testsuite/gas/i386/x86-64-branch-5.l,
-	testsuite/gas/i386/x86-64-branch-5.s: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
-
-2020-02-12  Jan Beulich  <jbeulich@suse.com>
-
-	PR gas/25438
-	* config/tc-i386.c (REGISTER_WARNINGS): Delete.
-	(check_byte_reg): Skip only source operand of CRC32. Drop Non-
-	64-bit-only warning.
-	(check_word_reg): Consistently error on mismatching register
-	size and suffix.
-	* testsuite/gas/i386/general.s: Replace dword GPR with word one
-	for movw. Replace suffix / GPR for orb.
-	* testsuite/gas/i386/inval.s: Add tests for movw with dword and
-	byte GPRs as well as ones for inb/outb with a word accumulator.
-	* testsuite/gas/i386/general.l, testsuite/gas/i386/intelbad.l,
-	testsuite/gas/i386/inval.l: Adjust expectations.
-
-2020-02-12  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (operand_type_register_match): Also fall
-	through initial two if()-s when the template allows for a GPR
-	operand. Adjust comment.
-
-2020-02-11  Jan Beulich  <jbeulich@suse.com>
-
-	(struct _i386_insn): New field "short_form".
-	(optimize_encoding): Drop setting of shortform field.
-	(process_suffix): Set i.short_form. Replace shortform use.
-	(process_operands): Replace shortform use.
-
-2020-02-11  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-arm.c (vcx_handle_register_arguments): Remove `for`
-	loop initial declaration.
-
-2020-02-10  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-arm.c (NEON_MAX_TYPE_ELS): Increment to account for
-	instructions that can have 5 arguments.
-	(enum operand_parse_code): Add new operands.
-	(parse_operands): Account for new operands.
-	(S5): New macro.
-	(enum neon_shape_el): Introduce P suffixes for coprocessor.
-	(neon_select_shape): Account for P suffix.
-	(LOW1): Move macro to global position.
-	(HI4): Move macro to global position.
-	(vcx_assign_vec_d): New.
-	(vcx_assign_vec_m): New.
-	(vcx_assign_vec_n): New.
-	(enum vcx_reg_type): New.
-	(vcx_get_reg_type): New.
-	(vcx_size_pos): New.
-	(vcx_vec_pos): New.
-	(vcx_handle_shape): New.
-	(vcx_ensure_register_in_range): New.
-	(vcx_handle_register_arguments): New.
-	(vcx_handle_insn_block): New.
-	(vcx_handle_common_checks): New.
-	(do_vcx1): New.
-	(do_vcx2): New.
-	(do_vcx3): New.
-	* testsuite/gas/arm/cde-missing-fp.d: New test.
-	* testsuite/gas/arm/cde-missing-fp.l: New test.
-	* testsuite/gas/arm/cde-missing-mve.d: New test.
-	* testsuite/gas/arm/cde-missing-mve.l: New test.
-	* testsuite/gas/arm/cde-mve-or-neon.d: New test.
-	* testsuite/gas/arm/cde-mve-or-neon.s: New test.
-	* testsuite/gas/arm/cde-mve.s: New test.
-	* testsuite/gas/arm/cde-warnings.l:
-	* testsuite/gas/arm/cde-warnings.s:
-	* testsuite/gas/arm/cde.d:
-	* testsuite/gas/arm/cde.s:
-
-2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>
-	    Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-arm.c (arm_ext_cde*): New feature sets for each
-	CDE coprocessor that can be enabled.
-	(enum pred_instruction_type): New pred type.
-	(BAD_NO_VPT): New error message.
-	(BAD_CDE): New error message.
-	(BAD_CDE_COPROC): New error message.
-	(enum operand_parse_code): Add new immediate operands.
-	(parse_operands): Account for new immediate operands.
-	(check_cde_operand): New.
-	(cde_coproc_enabled): New.
-	(cde_coproc_pos): New.
-	(cde_handle_coproc): New.
-	(cxn_handle_predication): New.
-	(do_custom_instruction_1): New.
-	(do_custom_instruction_2): New.
-	(do_custom_instruction_3): New.
-	(do_cx1): New.
-	(do_cx1a): New.
-	(do_cx1d): New.
-	(do_cx1da): New.
-	(do_cx2): New.
-	(do_cx2a): New.
-	(do_cx2d): New.
-	(do_cx2da): New.
-	(do_cx3): New.
-	(do_cx3a): New.
-	(do_cx3d): New.
-	(do_cx3da): New.
-	(handle_pred_state): Define new IT block behaviour.
-	(insns): Add newn CX*{,d}{,a} instructions.
-	(CDE_EXTENSIONS,armv8m_main_ext_table,armv8_1m_main_ext_table):
-	Define new cdecp extension strings.
-	* doc/c-arm.texi: Document new cdecp extension arguments.
-	* testsuite/gas/arm/cde-scalar.d: New test.
-	* testsuite/gas/arm/cde-scalar.s: New test.
-	* testsuite/gas/arm/cde-warnings.d: New test.
-	* testsuite/gas/arm/cde-warnings.l: New test.
-	* testsuite/gas/arm/cde-warnings.s: New test.
-	* testsuite/gas/arm/cde.d: New test.
-	* testsuite/gas/arm/cde.s: New test.
-
-2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25516
-	* config/tc-i386.c (intel64): Renamed to ...
-	(isa64): This.
-	(match_template): Accept Intel64 only instruction by default.
-	(i386_displacement): Updated.
-	(md_parse_option): Updated.
-	* c-i386.texi: Update -mamd64/-mintel64 documentation.
-	* testsuite/gas/i386/i386.exp: Run x86-64-sysenter.  Pass
-	-mamd64 to x86-64-sysenter-amd.
-	* testsuite/gas/i386/x86-64-sysenter.d: New file.
-
-2020-02-10  Alan Modra  <amodra@gmail.com>
-
-	* config/obj-elf.c (obj_elf_change_section): Error for section
-	type, attr or entsize changes in assembly.
-	* testsuite/gas/elf/elf.exp: Pass -Z to gas for section5 test.
-	* testsuite/gas/elf/section5.l: Update.
-
-2020-02-10  Alan Modra  <amodra@gmail.com>
-
-	* output-file.c (output_file_close): Do a normal close when
-	flag_always_generate_output.
-	* write.c (write_object_file): Don't stop output when
-	flag_always_generate_output.
-
-2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25469
-	* config/tc-z80.c: Add -gbz80 command line option to generate code
-	for the GameBoy Z80.  Add support for generating DWARF.
-	* config/tc-z80.h: Add support for DWARF debug information
-	generation.
-	* doc/c-z80.texi: Document new command line option.
-	* testsuite/gas/z80/gbz80_all.d: New file.
-	* testsuite/gas/z80/gbz80_all.s: New file.
-	* testsuite/gas/z80/z80.exp: Run the new tests.
-	* testsuite/gas/z80/z80n_all.d: New file.
-	* testsuite/gas/z80/z80n_all.s: New file.
-	* testsuite/gas/z80/z80n_reloc.d: New file.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25381
-	* config/obj-elf.c (get_section): Also check
-	linked_to_symbol_name.
-	(obj_elf_change_section): Also set map_head.linked_to_symbol_name.
-	(obj_elf_parse_section_letters): Handle the 'o' flag.
-	(build_group_lists): Renamed to ...
-	(build_additional_section_info): This.  Set elf_linked_to_section
-	from map_head.linked_to_symbol_name.
-	(elf_adjust_symtab): Updated.
-	* config/obj-elf.h (elf_section_match): Add linked_to_symbol_name.
-	* doc/as.texi: Document the 'o' flag.
-	* testsuite/gas/elf/elf.exp: Run PR gas/25381 tests.
-	* testsuite/gas/elf/section18.d: New file.
-	* testsuite/gas/elf/section18.s: Likewise.
-	* testsuite/gas/elf/section19.d: Likewise.
-	* testsuite/gas/elf/section19.s: Likewise.
-	* testsuite/gas/elf/section20.d: Likewise.
-	* testsuite/gas/elf/section20.s: Likewise.
-	* testsuite/gas/elf/section21.d: Likewise.
-	* testsuite/gas/elf/section21.l: Likewise.
-	* testsuite/gas/elf/section21.s: Likewise.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* NEWS: Mention x86 assembler options to align branches for
-	binutils 2.34.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/gas/i386/i386.exp: Run unique and x86-64-unique
-	only for ELF targets.
-	* testsuite/gas/i386/unique.d: Don't xfail.
-	* testsuite/gas/i386/x86-64-unique.d: Likewise.
-
-2020-02-06  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/i386/unique.d: xfail for non-elf targets.
-	* testsuite/gas/i386/x86-64-unique.d: Likewise.
-
-2020-02-06  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/elf/section12a.d: Use supports_gnu_osabi in
-	xfail, and rename test.
-	* testsuite/gas/elf/section12b.d: Likewise.
-	* testsuite/gas/elf/section16a.d: Likewise.
-	* testsuite/gas/elf/section16b.d: Likewise.
-
-2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25380
-	* config/obj-elf.c (section_match): Removed.
-	(get_section): Also match SEC_ASSEMBLER_SECTION_ID and
-	section_id.
-	(obj_elf_change_section): Replace info and group_name arguments
-	with match_p.  Also update the section ID and flags from match_p.
-	(obj_elf_section): Handle "unique,N".  Update call to
-	obj_elf_change_section.
-	* config/obj-elf.h (elf_section_match): New.
-	(obj_elf_change_section): Updated.
-	* config/tc-arm.c (start_unwind_section): Update call to
-	obj_elf_change_section.
-	* config/tc-ia64.c (obj_elf_vms_common): Likewise.
-	* config/tc-microblaze.c (microblaze_s_data): Likewise.
-	(microblaze_s_sdata): Likewise.
-	(microblaze_s_rdata): Likewise.
-	(microblaze_s_bss): Likewise.
-	* config/tc-mips.c (s_change_section): Likewise.
-	* config/tc-msp430.c (msp430_profiler): Likewise.
-	* config/tc-rx.c (parse_rx_section): Likewise.
-	* config/tc-tic6x.c (tic6x_start_unwind_section): Likewise.
-	* doc/as.texi: Document "unique,N" in .section directive.
-	* testsuite/gas/elf/elf.exp: Run "unique,N" tests.
-	* testsuite/gas/elf/section15.d: New file.
-	* testsuite/gas/elf/section15.s: Likewise.
-	* testsuite/gas/elf/section16.s: Likewise.
-	* testsuite/gas/elf/section16a.d: Likewise.
-	* testsuite/gas/elf/section16b.d: Likewise.
-	* testsuite/gas/elf/section17.d: Likewise.
-	* testsuite/gas/elf/section17.l: Likewise.
-	* testsuite/gas/elf/section17.s: Likewise.
-	* testsuite/gas/i386/unique.d: Likewise.
-	* testsuite/gas/i386/unique.s: Likewise.
-	* testsuite/gas/i386/x86-64-unique.d: Likewise.
-	* testsuite/gas/i386/i386.exp: Run unique and x86-64-unique.
-
-2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/gas/elf/section13.s: Replace @nobits with %nobits.
-
-2020-02-01  Anthony Green  <green@moxielogic.com>
-
-       * config/tc-moxie.c (md_begin): Don't force big-endian mode.
-
-2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>
-
-	* config/tc-nios2.c (nios2_cons): Handle %gotoff as well as
-	%tls_ldo.
-
-2020-01-31  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	PR gas/25472
-	* config/tc-arm.c (armv8m_main_ext_table): Refactored +dsp adding.
-	(armv8_1m_main_ext_table): Refactored +dsp adding and enabled dsp for
-	+mve.
-	* testsuite/gas/arm/mve_dsp.d: New test.
-
-2020-01-31  Nick Clifton  <nickc@redhat.com>
-
-	* config/tc-s390.c (s390_elf_suffix): Return ELF_SUFFIX_NONE
-	rather than BFD_RELOC_NONE.
-
-2020-01-31  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
-
-	* config/tc-arm.c (fldmias): Moved inside "THUMB_VARIANT & arm_ext_v6t2"
-	to support VLDMIA instruction for MVE.
-	(fldmdbs): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VLDMDB
-	instruction for MVE.
-	(fstmias): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VSTMIA
-	instruction for MVE.
-	(fstmdbs): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VSTMDB
-	instruction for MVE.
-	* testsuite/gas/arm/mve-ldst.d: New test.
-	* testsuite/gas/arm/mve-ldst.s: Likewise.
-
-2020-01-31  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Updated French translation.
-	* po/ru.po: Updated Russian translation.
-
-2020-01-31  Richard Sandiford  <richard.sandiford@arm.com>
-
-	* testsuite/gas/aarch64/sve-bfloat-movprfx.s: Use .h rather than
-	.s for the movprfx.
-	* testsuite/gas/aarch64/sve-bfloat-movprfx.d: Update accordingly.
-	* testsuite/gas/aarch64/sve-movprfx_28.d,
-	* testsuite/gas/aarch64/sve-movprfx_28.l,
-	* testsuite/gas/aarch64/sve-movprfx_28.s: New test.
-
-2020-01-30  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (output_disp): Tighten base_opcode check.
-	* testsuite/gas/i386/got.s: Add LSL, MOVLPS, and BNDCN cases.
-	* testsuite/gas/i386/got-no-relax.d, testsuite/gas/i386/got.d:
-	Adjust expectations.
-
-2020-01-30  Jose E. Marchesi  <jose.marchesi@oracle.com>
-
-	* testsuite/gas/bpf/alu.d: Update expected opcode for `neg'.
-	* testsuite/gas/bpf/alu-be.d: Likewise.
-	* testsuite/gas/bpf/alu32.d: Likewise for `neg32'.
-	* testsuite/gas/bpf/alu32-be.d: Likewise.
-
-2020-01-30  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/x86-64-branch-2.s,
-	testsuite/gas/i386/x86-64-branch-4.s,
-	testsuite/gas/i386/x86-64-branch.s: Add RETW cases.
-	* testsuite/gas/i386/ilp32/x86-64-branch.d,
-	testsuite/gas/i386/x86-64-branch-2.d,
-	testsuite/gas/i386/x86-64-branch-4.l,
-	testsuite/gas/i386/x86-64-branch.d: Adjust expectations.
-
-2020-01-30  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_suffix): .
-	testsuite/gas/i386/noreg64.s: Add IRET and LRET cases.
-	testsuite/gas/i386/x86-64-opcode.s: Add suffix to IRET and LRET.
-	Add LRETQ case.
-	testsuite/gas/i386/x86-64-suffix.s: Drop IRET case without
-	suffix.
-	testsuite/gas/i386/x86_64.s: Add RETF cases.
-	* testsuite/gas/i386/k1om.d, testsuite/gas/i386/l1om.d,
-	testsuite/gas/i386/noreg64.d, testsuite/gas/i386/noreg64.l,
-	testsuite/gas/i386/x86-64-opcode.d,
-	testsuite/gas/i386/x86-64-suffix-intel.d,
-	testsuite/gas/i386/x86-64-suffix.d,
-	testsuite/gas/i386/x86_64-intel.d
-	testsuite/gas/i386/x86_64.d: Adjust expectations.
-	* testsuite/gas/i386/x86-64-suffix.e,
-	testsuite/gas/i386/x86_64.e: New.
-
-2020-01-30  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_suffix): Redo and move FLDENV et al
-	special case.
-
-2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25445
-	* config/tc-i386.c (check_long_reg): Also convert to QWORD for
-	movsxd.
-	* doc/c-i386.texi: Add a node for AMD64 vs. Intel64 ISA
-	differences.  Document movslq and movsxd.
-	* testsuite/gas/i386/i386.exp: Run PR binutils/25445 tests.
-	* testsuite/gas/i386/x86-64-movsxd-intel.d: New file.
-	* testsuite/gas/i386/x86-64-movsxd-intel64-intel.d: Likewise.
-	* testsuite/gas/i386/x86-64-movsxd-intel64-inval.l: Likewise.
-	* testsuite/gas/i386/x86-64-movsxd-intel64-inval.s: Likewise.
-	* testsuite/gas/i386/x86-64-movsxd-intel64.d: Likewise.
-	* testsuite/gas/i386/x86-64-movsxd-intel64.s: Likewise.
-	* testsuite/gas/i386/x86-64-movsxd-inval.l: Likewise.
-	* testsuite/gas/i386/x86-64-movsxd-inval.s: Likewise.
-	* testsuite/gas/i386/x86-64-movsxd.d: Likewise.
-	* testsuite/gas/i386/x86-64-movsxd.s: Likewise.
-
-2020-01-27  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/all/gas.exp: Replace case statements with switch
-	statements.
-	* testsuite/gas/elf/elf.exp: Likewise.
-	* testsuite/gas/macros/macros.exp: Likewise.
-	* testsuite/lib/gas-defs.exp: Likewise.
-
-2020-01-27  Tamar Christina  <tamar.christina@arm.com>
-
-	PR 25403
-	* testsuite/gas/aarch64/armv8_4-a.d: Add cfinv.
-	* testsuite/gas/aarch64/armv8_4-a.s: Likewise.
-
-2020-01-22  Maxim Blinov  <maxim.blinov@embecosm.com>
-
-	* testsuite/gas/riscv/march-ok-s.d: sx is no longer valid and
-	s exts must be known, so rename *ok* to *fail*.
-	* testsuite/gas/riscv/march-ok-sx.d: Likewise.
-	* testsuite/gas/riscv/march-ok-s-with-version: Likewise.
-	* testsuite/gas/riscv/march-fail-s.l: Expected error messages for
-	above change.
-	* testsuite/gas/riscv/march-fail-sx.l: Likewise.
-	* testsuite/gas/riscv/march-fail-sx-with-version.l: Likewise.
-
-2020-01-22  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25438
-	* config/tc-i386.c (check_long_reg): Always disallow double word
-	suffix in mnemonic with word general register.
-	* testsuite/gas/i386/general.s: Replace word general register
-	with double word general register for movl.
-	* testsuite/gas/i386/inval.s: Add tests for movl with word general
-	register.
-	* testsuite/gas/i386/general.l: Updated.
-	* testsuite/gas/i386/inval.l: Likewise.
-
-2020-01-22  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-ppc.c (parse_tls_arg): Handle tls arg for
-	__tls_get_addr_desc and __tls_get_addr_opt.
-
-2020-01-21  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/inval-crc32.s,
-	testsuite/gas/i386/x86-64-inval-crc32.s: Add alignment directive.
-	* testsuite/gas/i386/inval-crc32.l,
-	testsuite/gas/i386/x86-64-inval-crc32.l: Adjust expectations.
-
-2020-01-21  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_suffix): Merge CRC32 handling into
-	generic code path. Deal with No_lSuf being set in a template.
-	* testsuite/gas/i386/inval-crc32.l,
-	testsuite/gas/i386/x86-64-inval-crc32.l: Expect warning(s)
-	instead of error(s) when operand size is ambiguous.
-	* testsuite/gas/i386/noreg16.s, testsuite/gas/i386/noreg32.s,
-	testsuite/gas/i386/noreg64.s: Add CRC32 tests.
-	* testsuite/gas/i386/noreg16.d, testsuite/gas/i386/noreg16.l,
-	testsuite/gas/i386/noreg32.d, testsuite/gas/i386/noreg32.l,
-	testsuite/gas/i386/noreg64.d, testsuite/gas/i386/noreg64.l:
-	Adjust expectations.
-
-2020-01-21  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (process_suffix): Drop SYSRET special case
-	and an intel_syntax check. Re-write lack-of-suffix processing
-	logic.
-	* doc/c-i386.texi: Document operand size defaults for suffix-
-	less AT&T syntax insns.
-	* testsuite/gas/i386/bundle.s, testsuite/gas/i386/lock-1.s,
-	testsuite/gas/i386/opcode.s, testsuite/gas/i386/sse3.s,
-	testsuite/gas/i386/x86-64-avx-scalar.s,
-	testsuite/gas/i386/x86-64-avx.s,
-	testsuite/gas/i386/x86-64-bundle.s,
-	testsuite/gas/i386/x86-64-intel64.s,
-	testsuite/gas/i386/x86-64-lock-1.s,
-	testsuite/gas/i386/x86-64-opcode.s,
-	testsuite/gas/i386/x86-64-sse2avx.s,
-	testsuite/gas/i386/x86-64-sse3.s: Add missing suffixes.
-	* testsuite/gas/i386/nops.s, testsuite/gas/i386/sse-noavx.s,
-	testsuite/gas/i386/x86-64-nops.s,
-	testsuite/gas/i386/x86-64-ptwrite.s,
-	testsuite/gas/i386/x86-64-simd.s,
-	testsuite/gas/i386/x86-64-sse-noavx.s,
-	testsuite/gas/i386/x86-64-suffix.s: Drop bogus suffix-less
-	insns.
-	* testsuite/gas/i386/noreg16.s, testsuite/gas/i386/noreg32.s,
-	testsuite/gas/i386/noreg64.s: Add further tests.
-	* testsuite/gas/i386/ilp32/x86-64-nops.d,
-	testsuite/gas/i386/nops.d, testsuite/gas/i386/noreg16.d,
-	testsuite/gas/i386/noreg32.d, testsuite/gas/i386/noreg64.d,
-	testsuite/gas/i386/sse-noavx.d,
-	testsuite/gas/i386/x86-64-intel64.d,
-	testsuite/gas/i386/x86-64-nops.d,
-	testsuite/gas/i386/x86-64-opcode.d,
-	testsuite/gas/i386/x86-64-ptwrite-intel.d,
-	testsuite/gas/i386/x86-64-ptwrite.d,
-	testsuite/gas/i386/x86-64-simd-intel.d,
-	testsuite/gas/i386/x86-64-simd-suffix.d,
-	testsuite/gas/i386/x86-64-simd.d,
-	testsuite/gas/i386/x86-64-sse-noavx.d
-	testsuite/gas/i386/x86-64-suffix.d,
-	testsuite/gas/i386/x86-64-suffix-intel.d: Adjust expectations.
-	* testsuite/gas/i386/noreg16.l, testsuite/gas/i386/noreg32.l,
-	testsuite/gas/i386/noreg64.l: New.
-	* testsuite/gas/i386/i386.exp: Run new tests.
-
-2020-01-21  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/avx512_bf16_vl.s,
-	testsuite/gas/i386/x86-64-avx512_bf16_vl.s: Add broadcast forms
-	of VCVTNEPS2BF16{X,Y}. Add operand-size less Intel syntax
-	broadcast forms of VCVTNEPS2BF16.
-	* testsuite/gas/i386/avx512_bf16_vl.d,
-	testsuite/gas/i386/x86-64-avx512_bf16_vl.d: Adjust expectations.
-
-2020-01-20  Nick Clifton  <nickc@redhat.com>
-
-	* po/uk.po: Updated Ukranian translation.
-
-2020-01-20  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25416
-	* config/tc-i386.c (output_insn): Add a dummy REX_OPCODE prefix
-	for lea with R_X86_64_GOTPC32_TLSDESC relocation when generating
-	x32 object.
-	* testsuite/gas/i386/ilp32/x32-tls.d: Updated.
-	* testsuite/gas/i386/ilp32/x32-tls.s: Add tests for lea with
-	R_X86_64_GOTPC32_TLSDESC relocation.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	* configure: Regenerate.
-	* po/gas.pot: Regenerate.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.34 branch created.
-
-2020-01-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* config/tc-i386.c (_i386_insn): Replace vex_encoding_vex2
-	with vex_encoding_vex.
-	(parse_insn): Likewise.
-	* doc/c-i386.texi: Replace {vex2} with {vex}.  Update {vex}
-	and {vex3} documentation.
-	* testsuite/gas/i386/pseudos.s: Replace 3 {vex2} tests with
-	{vex}.
-	* testsuite/gas/i386/x86-64-pseudos.s: Likewise.
-
-2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
-
-	PR 25376
-	* config/tc-arm.c (mve_ext, mve_fp_ext): Use CORE_HIGH.
-	(armv8_1m_main_ext_table): Use CORE_HIGH for mve.
-	* testsuite/arm/armv8_1-m-fpu-mve-1.s: New.
-	* testsuite/arm/armv8_1-m-fpu-mve-1.d: New.
-	* testsuite/arm/armv8_1-m-fpu-mve-2.s: New.
-	* testsuite/arm/armv8_1-m-fpu-mve-2.d: New.
-
-2020-01-16  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (match_template): Drop found_cpu_match local
-	variable.
-
-2020-01-16  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/avx512dq-inval.l,
-	testsuite/gas/i386/avx512dq-inval.s: New.
-	* testsuite/gas/i386/i386.exp: Run new test.
-
-2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* config/tc-msp430.c (CHECK_RELOC_MSP430): Always generate 430X
-	relocations when the target is 430X, except when extracting part of an
-	expression.
-	(msp430_srcoperand): Adjust comment.
-	Initialize the expp member of the msp430_operand_s struct as
-	appropriate.
-	(msp430_dstoperand): Likewise.
-	* testsuite/gas/msp430/msp430.exp: Run new test.
-	* testsuite/gas/msp430/reloc-lo-430x.d: New test.
-	* testsuite/gas/msp430/reloc-lo-430x.s: New test.
-
-2020-01-15  Alan Modra  <amodra@gmail.com>
-
-	* configure.tgt: Add sparc-*-freebsd case.
-
-2020-01-14  Lili Cui <lili.cui@intel.com>
-
-	* testsuite/gas/i386/align-branch-1a.d: Updated for Darwin.
-	* testsuite/gas/i386/align-branch-1b.d: Likewise.
-	* testsuite/gas/i386/align-branch-1c.d: Likewise.
-	* testsuite/gas/i386/align-branch-1d.d: Likewise.
-	* testsuite/gas/i386/align-branch-1e.d: Likewise.
-	* testsuite/gas/i386/align-branch-1f.d: Likewise.
-	* testsuite/gas/i386/align-branch-1g.d: Likewise.
-	* testsuite/gas/i386/align-branch-1h.d: Likewise.
-	* testsuite/gas/i386/align-branch-1i.d: Likewise.
-	* testsuite/gas/i386/align-branch-5.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1a.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1b.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1c.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1d.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1e.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1f.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1g.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1h.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-1i.d: Likewise.
-	* testsuite/gas/i386/x86-64-align-branch-5.d: Likewise.
-	* testsuite/gas/i386/i386.exp: Skip x86-64-align-branch-2a,
-	x86-64-align-branch-2b and x86-64-align-branch-2c on Darwin.
-
-2020-01-14  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25377
-	* config/tc-z80.c: Add support for half precision, single
-	precision and double precision floating point values.
-	* config/tc-z80.h b/gas/config/tc-z80.h: Disable string escapes.
-	* doc/as.texi: Add new z80 command line options.
-	* doc/c-z80.texi: Document new z80 command line options.
-	* testsuite/gas/z80/ez80_pref_dis.s: New test.
-	* testsuite/gas/z80/ez80_pref_dis.d: New test driver.
-	* testsuite/gas/z80/z80.exp: Run the new test.
-	* testsuite/gas/z80/fp_math48.d: Use correct command line option.
-	* testsuite/gas/z80/fp_zeda32.d: Likewise.
-	* testsuite/gas/z80/strings.d: Update expected output.
-
-2020-01-13  Matthew Malcomson  <matthew.malcomson@arm.com>
-
-	* config/tc-aarch64.c (f64mm, f32mm): Add sve as a feature
-	dependency.
-
-2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
-
-	* config/tc-arc.c (arc_select_cpu): Re-init the bfd if we change
-	the CPU.
-	* config/tc-arc.h: Add header if/defs.
-	* testsuite/gas/arc/pseudos.d: Improve matching pattern.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/wasm32/allinsn.d: Update expected output.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-tic4x.c (tic4x_operands_match): Correct tic3x trap
-	insertion.
-
-2020-01-10  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/gas/elf/pr14891.s: Don't start directives in first column.
-	* testsuite/gas/elf/pr21661.d: Don't run on hpux.
-
-2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25224
-	* config/tc-z80.c (emit_ld_m_rr): Use integer types when checking
-	opcode byte values.
-	(emit_ld_r_r): Likewise.
-	(emit_ld_rr_m): Likewise.
-	(emit_ld_rr_nn): Likewise.
-
-2020-01-09  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (optimize_encoding): Add
-	is_any_vex_encoding() invocations. Drop respective
-	i.tm.extension_opcode == None checks.
-
-2020-01-09  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (md_assemble): Check RegRex is clear during
-	REX transformations. Correct comment indentation.
-
-2020-01-09  Jan Beulich  <jbeulich@suse.com>
-
-	* config/tc-i386.c (optimize_encoding): Generalize register
-	transformation for TEST optimization.
-
-2020-01-09  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/i386/x86-64-sysenter-amd.s,
-	testsuite/gas/i386/x86-64-sysenter-amd.d,
-	testsuite/gas/i386/x86-64-sysenter-amd.l,
-	testsuite/gas/i386/x86-64-sysenter-intel.d,
-	testsuite/gas/i386/x86-64-sysenter-mixed.d: New.
-	* testsuite/gas/i386/i386.exp: Run new tests.
-
-2020-01-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 25284
-	* doc/as.texi (Align): Document the fact that all arguments can be
-	omitted.
-	(Balign): Likewise.
-	(P2align): Likewise.
-
-2020-01-08  Nick Clifton  <nickc@redhat.com>
-
-	PR 14891
-	* config/obj-elf.c (obj_elf_section): Fail if the section name is
-	already defined as a different symbol type.
-	* testsuite/gas/elf/pr14891.s: New test source file.
-	* testsuite/gas/elf/pr14891.d: New test driver.
-	* testsuite/gas/elf/pr14891.s: New test expected error output.
-	* testsuite/gas/elf/elf.exp: Run the new test.
-
-2020-01-08  Alan Modra  <amodra@gmail.com>
-
-	* config/tc-z8k.c (md_begin): Make idx unsigned.
-	(get_specific): Likewise for this_index.
-
-2020-01-07  Claudiu Zissulescu  <claziss@synopsys.com>
-
-	* onfig/tc-arc.c (parse_reloc_symbol): New function.
-	(tokenize_arguments): Clean up, use parse_reloc_symbol function.
-	(md_operand): Set X_md to absent.
-	(arc_parse_name): Check for X_md.
-
-2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25311
-	* as.h (TC_STRING_ESCAPES): Provide a default definition.
-	* app.c (do_scrub_chars): Use TC_STRING_ESCAPES instead of
-	NO_STRING_ESCAPES.
-	* read.c (next_char_of_string): Likewise.
-	* config/tc-ppc.h (TC_STRING_ESCAPES): Define.
-	* config/tc-z80.h (TC_STRING_ESCAPES): Define.
-
-2020-01-03  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Updated Swedish translation.
-
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/aarch64/f64mm.s: Scale index of LD1RO{H,W,D}.
-	* testsuite/gas/aarch64/f64mm.d: Adjust expectations.
-
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/aarch64/i8mm.s: Add 128-bit form tests for
-	by-element usdot. Add 64-bit form tests for by-element sudot.
-	* testsuite/gas/aarch64/i8mm.d: Adjust expectations.
-
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/aarch64/f64mm.s: Drop 'i' from uzip<n>.
-	* testsuite/gas/aarch64/f64mm.d: Adjust expectations.
-
-2020-01-03  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/gas/aarch64/f64mm.d,
-	testsuite/gas/aarch64/sve-movprfx-mm.d: Adjust expectations.
-
-2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	* config/tc-z80.c: Add new architectures: Z180 and eZ80. Add
-	support for assembler code generated by SDCC. Add new relocation
-	types. Add z80-elf target support.
-	* config/tc-z80.h: Add z80-elf target support. Enable dollar local
-	labels. Local labels starts from ".L".
-	* NEWS: Mention the new support.
-	* testsuite/gas/all/fwdexp.d: Fix failure due to symbol conflict.
-	* testsuite/gas/all/fwdexp.s: Likewise.
-	* testsuite/gas/all/cond.l: Likewise.
-	* testsuite/gas/all/cond.s: Likewise.
-	* testsuite/gas/all/fwdexp.d: Likewise.
-	* testsuite/gas/all/fwdexp.s: Likewise.
-	* testsuite/gas/elf/section2.e-mips: Likewise.
-	* testsuite/gas/elf/section2.l: Likewise.
-	* testsuite/gas/elf/section2.s: Likewise.
-	* testsuite/gas/macros/app1.d: Likewise.
-	* testsuite/gas/macros/app1.s: Likewise.
-	* testsuite/gas/macros/app2.d: Likewise.
-	* testsuite/gas/macros/app2.s: Likewise.
-	* testsuite/gas/macros/app3.d: Likewise.
-	* testsuite/gas/macros/app3.s: Likewise.
-	* testsuite/gas/macros/app4.d: Likewise.
-	* testsuite/gas/macros/app4.s: Likewise.
-	* testsuite/gas/macros/app4b.s: Likewise.
-	* testsuite/gas/z80/suffix.d: Fix failure on ELF target.
-	* testsuite/gas/z80/z80.exp: Add new tests
-	* testsuite/gas/z80/dollar.d: New file.
-	* testsuite/gas/z80/dollar.s: New file.
-	* testsuite/gas/z80/ez80_adl_all.d: New file.
-	* testsuite/gas/z80/ez80_adl_all.s: New file.
-	* testsuite/gas/z80/ez80_adl_suf.d: New file.
-	* testsuite/gas/z80/ez80_isuf.s: New file.
-	* testsuite/gas/z80/ez80_z80_all.d: New file.
-	* testsuite/gas/z80/ez80_z80_all.s: New file.
-	* testsuite/gas/z80/ez80_z80_suf.d: New file.
-	* testsuite/gas/z80/r800_extra.d: New file.
-	* testsuite/gas/z80/r800_extra.s: New file.
-	* testsuite/gas/z80/r800_ii8.d: New file.
-	* testsuite/gas/z80/r800_z80_doc.d: New file.
-	* testsuite/gas/z80/z180.d: New file.
-	* testsuite/gas/z80/z180.s: New file.
-	* testsuite/gas/z80/z180_z80_doc.d: New file.
-	* testsuite/gas/z80/z80_doc.d: New file.
-	* testsuite/gas/z80/z80_doc.s: New file.
-	* testsuite/gas/z80/z80_ii8.d: New file.
-	* testsuite/gas/z80/z80_ii8.s: New file.
-	* testsuite/gas/z80/z80_in_f_c.d: New file.
-	* testsuite/gas/z80/z80_in_f_c.s: New file.
-	* testsuite/gas/z80/z80_op_ii_ld.d: New file.
-	* testsuite/gas/z80/z80_op_ii_ld.s: New file.
-	* testsuite/gas/z80/z80_out_c_0.d: New file.
-	* testsuite/gas/z80/z80_out_c_0.s: New file.
-	* testsuite/gas/z80/z80_reloc.d: New file.
-	* testsuite/gas/z80/z80_reloc.s: New file.
-	* testsuite/gas/z80/z80_sli.d: New file.
-	* testsuite/gas/z80/z80_sli.s: New file.
-
-2020-01-02  Szabolcs Nagy  <szabolcs.nagy@arm.com>
-
-	* config/tc-arm.c (parse_reg_list): Use REG_TYPE_RN instead of
-	REGLIST_RN.
-
-2020-01-01  Alan Modra  <amodra@gmail.com>
-
-	Update year range in copyright notice of all files.
+	* config/tc-mmix.h (md_single_noop_insn): Change to "swym 0".
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/contrib/ChangeLog b/contrib/ChangeLog
index b2867e67b4b..87526afc787 100644
--- a/contrib/ChangeLog
+++ b/contrib/ChangeLog
@@ -1,3 +1,7 @@
+2020-09-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* mklog.py: New file, imported from gcc.
+
 2020-05-15  Andrew Burgess  <andrew.burgess@embecosm.com>
 
 	* dg-extract-results.py: Update from gcc repo.
diff --git a/gdbserver/ChangeLog b/gdbserver/ChangeLog
index 4ed5d610161..3323ecfbf89 100644
--- a/gdbserver/ChangeLog
+++ b/gdbserver/ChangeLog
@@ -1,3 +1,314 @@
+2021-01-07  Tom de Vries  <tdevries@suse.de>
+
+	* Makefile.in (LIBIBERTY_NORMAL, LIBIBERTY_NOASAN, LIBIBERTY_PIC):
+	(LIBIBERTY_FOR_SHLIB): New var.
+	(LIBIBERTY): Set using $(LIBIBERTY_NORMAL).
+	(IPA_LIB): Use LIBIBERTY_FOR_SHLIB instead of LIBIBERTY in target rule.
+
+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* debug.cc (debug_print_depth): New.
+
+2021-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* server.cc (gdbserver_version): Update copyright year.
+	* gdbreplay.cc (gdbreplay_version): Likewise.
+
+2020-12-16  Luis Machado  <luis.machado@linaro.org>
+
+	* linux-aarch64-low.cc (address_significant): New function.
+	(aarch64_target::low_stopped_data_address): Handle the TBI.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in (IPA_LIB): Include libiberty library.
+
+2020-11-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* server.cc (gdbserver_usage): Add missing option to usage text.
+	(gdbserver_show_disableable): Likewise.
+
+2020-11-02  Simon Marchi  <simon.marchi@efficios.com>
+
+	* ax.cc: Fix indentation.
+	* dll.cc: Fix indentation.
+	* inferiors.h: Fix indentation.
+	* linux-low.cc: Fix indentation.
+	* linux-nios2-low.cc: Fix indentation.
+	* linux-ppc-ipa.cc: Fix indentation.
+	* linux-ppc-low.cc: Fix indentation.
+	* linux-x86-low.cc: Fix indentation.
+	* linux-xtensa-low.cc: Fix indentation.
+	* regcache.cc: Fix indentation.
+	* server.cc: Fix indentation.
+	* tracepoint.cc: Fix indentation.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* acinclude.m4: Replace AC_TRY_COMPILE with AC_COMPILE_IFELSE +
+	AC_LANG_PROGRAM.
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure.ac: Modernize.
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure.ac: Use AC_CANONICAL_{BUILD,HOST,TARGET} instead of
+	AC_CANONICAL_SYSTEM.
+	* configure: Re-generate.
+
+2020-10-26  Pedro Alves  <pedro@palves.net>
+
+	* netbsd-low.cc (netbsd_waitpid, netbsd_process_target::kill)
+	(netbsd_qxfer_libraries_svr4): Use gdb::handle_eintr without
+	explicit type.
+
+2020-10-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* acinclude.m4: Update ptrace.m4 path.
+
+2020-10-24  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* config.in: Re-generate.
+	* configure: Re-generate.
+
+2020-10-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* server.cc (handle_general_set): Don't use sprintf with
+	argument overlapping buffer.
+
+2020-10-20  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/26742:
+	* inferiors.cc (remove_thread): Clear current_thread before
+	freeing the thread.
+
+2020-10-13  Kamil Rytarowski  <n54@gmx.com>x
+
+	* netbsd-low.cc (netbsd_tdesc): Remove.
+	(netbsd_add_process): Likewise.
+	(netbsd_process_target::create_inferior): Update.
+
+2020-10-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-arc-low.cc (arc_linux_read_description): Release the
+	unique_ptr returned from arc_create_target_description.
+
+2020-10-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in: Include Makefile.gnulib.inc.  Don't define LIBGNU
+	or INCGNU.  Make use of LIBGNU_EXTRA_LIBS when linking.
+
+2020-10-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* linux-low.cc (linux_process_target::handle_extended_wait):
+	Release the unique_ptr returned from allocate_target_description.
+	* linux-riscv-low.cc (riscv_target::low_arch_setup): Likewise.
+	* linux-x86-low.cc (tdesc_amd64_linux_no_xml): Change type.
+	(tdesc_i386_linux_no_xml): Change type.
+	(x86_linux_read_description): Borrow pointer from unique_ptr
+	object.
+	(x86_target::get_ipa_tdesc_idx): Likewise.
+	(initialize_low_arch): Likewise.
+	* tdesc.cc (allocate_target_description): Update return type.
+
+2020-10-07  Tom Tromey  <tromey@adacore.com>
+
+	* server.cc (handle_search_memory): Remove dead code.
+
+2020-10-07  Tom Tromey  <tromey@adacore.com>
+
+	* server.cc (handle_search_memory_1): Remove.
+	(handle_search_memory): Use simple_search_memory.
+
+2020-10-07  Simon Marchi  <simon.marchi@efficios.com>
+
+	* Makefile.in (COMPILE): Add CXXFLAGS.
+	(INTERNAL_CFLAGS_BASE): Remove CXXFLAGS.
+	(gdbserver$(EXEEXT)): Add CXXFLAGS.
+	(gdbreplay$(EXEEXT)): Add CXXFLAGS.
+	($(IPA_LIB)): Add CXXFLAGS.
+	(IPAGENT_COMPILE): Add CXXFLAGS.
+
+2020-10-07  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* configure.srv: Support ARC architecture.
+	* Makefile.in: Add linux-arc-low.cc and arch/arc.o.
+	* linux-arc-low.cc: New file.
+
+2020-10-07  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-low.cc (get_dynamic, get_r_debug, read_one_ptr)
+	(netbsd_qxfer_libraries_svr4): Remove "target" argument and update.
+	(netbsd_process_target::qxfer_libraries_svr4): Update.
+
+2020-10-07  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-low.cc: Fix whitespace formatting.
+	* netbsd-amd64-low.cc: Likewise.
+
+2020-10-07  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-low.cc (netbsd_process_target::read_memory)
+	(netbsd_process_target::write_memory): Update.
+
+2020-10-07  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-aarch64-low.cc: Add.
+	* Makefile.in (SFILES): Register "netbsd-aarch64-low.c".
+	* configure.srv: Add aarch64*-*-netbsd*.
+
+2020-10-06  Shahab Vahedi  <shahab@synopsys.com>
+
+	* regcache.cc (register_data): Remove unused "fetch" argument.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* server.cc (handle_monitor_command): Handle "set
+	debug-event-loop".
+	(captured_main): Handle "--debug-event-loop".
+	(monitor_show_help): Mention new setting.
+	(gdbserver_usage): Mention new flag.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* linux-low.cc (linux_process_target::async): Pass name to
+	add_file_handler.
+	* remote-utils.cc (handle_accept_event): Likewise.
+	(remote_open): Likewise.
+
+2020-10-01  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-i386-low.cc: Add.
+	* Makefile.in (SFILES): Register "netbsd-i386-low.c".
+	* configure.srv: Add i[34567]86-*-netbsd*.
+
+2020-10-01  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-amd64-low.cc (netbsd_x86_64_arch_setup): Remove.
+	(netbsd_target_regsets): Now const.
+	(the_low_target): Remove.
+	(class netbsd_amd64_target, the_netbsd_amd64_target)
+	(the_netbsd_target): Add.
+	* netbsd-low.cc (netbsd_process_target::post_create_inferior): Call
+	low_arch_setup ().
+	(netbsd_process_target::fetch_registers)
+	(netbsd_process_target::store_registers, initialize_low): Update.
+	(the_netbsd_target): Remove.
+	* netbsd-low.h (netbsd_target_regsets, netbsd_target_ops)
+	(the_low_target, netbsd_tdesc): Remove.
+	(netbsd_process_target::get_regs_info)
+	(netbsd_process_target::low_arch_setup): Add.
+
+2020-09-23  Hannes Domani  <ssbssa@yahoo.de>
+
+	* win32-low.cc: Remove local wow64_process variable.
+	* win32-low.h: Remove local wow64_process variable.
+
+2020-09-18  Tom Tromey  <tromey@adacore.com>
+
+	* netbsd-low.h (class netbsd_process_target) <wait>: Update.
+	* netbsd-low.cc (netbsd_waitpid, netbsd_wait)
+	(netbsd_process_target::wait): Change type of target_options.
+	* win32-low.h (class win32_process_target) <wait>: Update.
+	* win32-low.cc (win32_process_target::wait): Update.
+	* target.h (class process_stratum_target) <wait>: Update.
+	(mywait): Update.
+	* target.cc (mywait, target_wait): Change type of "options".
+	* linux-low.h (class linux_process_target) <wait, wait_1>:
+	Update.
+	* linux-low.cc (linux_process_target::wait)
+	(linux_process_target::wait_1): Update.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* linux-x86-low.cc (xmltarget_i386_linux_no_xml)
+	(xmltarget_amd64_linux_no_xml): Now arrays.
+
+2020-09-14  Tom Tromey  <tromey@adacore.com>
+
+	* tracepoint.cc (eval_result_names): Now const.
+	* ax.cc (gdb_agent_op_names): Now const.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-low.cc: Add.
+	* netbsd-low.h: Likewise.
+	* netbsd-amd64-low.cc: Likewise.
+	* Makefile.in (SFILES): Register "netbsd-low.cc", "netbsd-low.h",
+	"netbsd-amd64-low.cc".
+	* configure.srv: Add x86_64-*-netbsd*.
+
+2020-08-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* server.cc (captured_main): Accept multiple `--selftest=`
+	options.  Pass all `--selftest=` arguments to run_tests.
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* configure, config.in: Regenerate.
+
+2020-07-26  Eli Zaretskii  <eliz@gnu.org>
+
+	* configure.ac (AC_CHECK_HEADERS): Add ws2tcpip.h.
+	When checking whether socklen_t type is defined, use ws2tcpip.h if
+	it is available and sys/socket.h isn't.
+	* configure: Regenerate.
+	* config.in: Regenerate.
+
+2020-07-22  Pedro Alves  <pedro@palves.net>
+
+	* inferiors.cc (switch_to_process): New, moved here from
+	thread-db.cc, and made extern.
+	* inferiors.h (switch_to_process): Declare.
+	* server.cc: Include "gdbsupport/scoped_restore.h".
+	(handle_qxfer_threads_proper): Now returns bool.  Prepare to
+	access memory around target calls.
+	(handle_qxfer_threads): Handle errors.
+	* thread-db.cc (switch_to_process): Moved to inferiors.cc.
+
+2020-07-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* linux-low.cc (stopped_pids): Make static.
+
+2020-07-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tdesc.cc (allocate_target_description): Add header comment.
+	(target_desc_deleter::operator()): New function.
+	* tdesc.h (struct target_desc): Declare as final.
+
+2020-07-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* server.cc (handle_query): Use std::vector of
+	std::string for `qsupported` vector.  Use separate
+	vector for unknowns.
+	* target.h (class process_stratum_target) <process_qsupported>:
+	Change parameters to array_view of const char *.
+	(target_process_qsupported): Remove `count` parameter.
+	* target.cc (process_stratum_target::process_qsupported): Change
+	parameters to array_view of const char *.
+	* linux-x86-low.cc (class x86_target) <process_qsupported>:
+	Likewise.
+
 2020-06-29  Tom de Vries  <tdevries@suse.de>
 
 	* ax.h: Include gdbsupport/debug_agent.h.
diff --git a/gnulib/ChangeLog b/gnulib/ChangeLog
index 6dcf93a446f..909df781797 100644
--- a/gnulib/ChangeLog
+++ b/gnulib/ChangeLog
@@ -1,3 +1,271 @@
+2020-10-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.gnulib.inc.in: New file.
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+	* configure.ac: Install the new file.
+
+2020-09-08  Tom Tromey  <tromey@adacore.com>
+
+	PR win32/25302:
+	* update-gnulib.sh: Apply stat patch.
+	* patches/0001-use-windows-stat: New file.
+	* import/m4/stat.m4: Update.
+	* configure: Rebuild.
+
+2020-08-26  Christian Biesinger  <cbiesinger@google.com>
+	    Pedro Alves  <palves@redhat.com>
+	    Joel Brobecker  <brobecker@adacore.com>
+
+	* Makefile.in: Regenerate.
+	* aclocal.m4: Regenerate.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* import/Makefile.am: Update.
+	* import/Makefile.in: Regenerate.
+	* import/alloca.in.h (if): Update.
+	* import/assure.h (affirm): Update.
+	* import/at-func.c: Update.
+	* import/attribute.h: New file.
+	* import/btowc.c: New file.
+	* import/canonicalize-lgpl.c: Update.
+	* import/count-one-bits.h (COUNT_ONE_BITS_GENERIC): Update.
+	(COUNT_ONE_BITS): Update.
+	(intrinsic): Update.
+	(__popcnt64): Update.
+	(popcount_supported): Update.
+	* import/ctype.in.h: New file.
+	* import/dirent-private.h (WIN32_FIND_DATA): Update.
+	* import/dirent.in.h (_GL_ATTRIBUTE_PURE): Update.
+	* import/dirname.h: Update.
+	* import/dosname.h: Remove.
+	* import/error.h (_GL_ATTRIBUTE_FORMAT): Update.
+	* import/extra/update-copyright: Update.
+	* import/fchdir.c: Update.
+	* import/fcntl.in.h (GNULIB_defined_rpl_fcntl): Update.
+	(GNULIB_defined_fcntl): Update.
+	* import/filename.h (HAS_DEVICE): Update.
+	(IS_ABSOLUTE_PATH): Update.
+	(IS_PATH_WITH_DIR): Update.
+	(FILE_SYSTEM_PREFIX_LEN): Update.
+	(_IS_DRIVE_LETTER): Update.
+	(FILE_SYSTEM_DRIVE_PREFIX_CAN_BE_RELATIVE): Update.
+	(IS_ABSOLUTE_FILE_NAME): Update.
+	(IS_RELATIVE_FILE_NAME): Update.
+	(IS_FILE_NAME_WITH_DIR): Update.
+	* import/filenamecat-lgpl.c (mfile_name_concat): Update.
+	* import/fnmatch.c (WIDE_CHAR_SUPPORT): Update.
+	(btowc): Update.
+	(iswctype): Update.
+	(mempcpy): Update.
+	(strnlen): Update.
+	(towlower): Update.
+	(wcscat): Update.
+	(wcslen): Update.
+	(wctype): Update.
+	(wmemchr): Update.
+	(wmempcpy): Update.
+	(SIZE_MAX): Update.
+	(isblank): Update.
+	(__libc_use_alloca): Update.
+	(alloca): Update.
+	(alloca_account): Update.
+	(STREQ): Update.
+	(CHAR_CLASS_MAX_LENGTH): Update.
+	(IS_CHAR_CLASS): Update.
+	(ISWCTYPE): Update.
+	(if): Update.
+	(HANDLE_MULTIBYTE): Update.
+	(internal_function): Update.
+	(FOLD): Update.
+	(CHAR): Update.
+	(UCHAR): Update.
+	(INT): Update.
+	(FCT): Update.
+	(EXT): Update.
+	(END): Update.
+	(L_): Update.
+	(BTOWC): Update.
+	(STRLEN): Update.
+	(STRCAT): Update.
+	(MEMPCPY): Update.
+	(MEMCHR): Update.
+	(WIDE_CHAR_VERSION): Update.
+	(STRUCT): Update.
+	(FINDIDX): Update.
+	(findidx): Update.
+	(ALLOCA_LIMIT): Update.
+	(SHLIB_COMPAT): Update.
+	* import/fnmatch_loop.c (struct STRUCT): Update.
+	(FCT): Update.
+	(EXT): Update.
+	(END): Update.
+	(str): Update.
+	(NEW_PATTERN): Update.
+	* import/getcwd.c: Update.
+	* import/getlogin_r.c (GetUserName): Update.
+	* import/getprogname.c (getprogname): Update.
+	* import/getrandom.c: New file.
+	* import/gettimeofday.c: Remove.
+	* import/glob.in.h (_Restrict_): Update.
+	* import/inttypes.in.h (_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	* import/isblank.c: New file.
+	* import/isnanl-nolibm.h (__has_builtin): Update.
+	* import/libc-config.h (versioned_symbol): Update.
+	(compat_symbol): Update.
+	* import/limits.in.h (_GL_ALREADY_INCLUDING_LIMITS_H): Update.
+	* import/m4/btowc.m4: New file.
+	* import/m4/ctype.m4: New file.
+	* import/m4/exponentl.m4: Update.
+	* import/m4/fnmatch.m4: Update.
+	* import/m4/getrandom.m4: New file.
+	* import/m4/glob.m4: Update.
+	* import/m4/gnulib-cache.m4: Update.
+	* import/m4/gnulib-common.m4: Update.
+	* import/m4/gnulib-comp.m4: Update.
+	* import/m4/inttypes.m4: Update.
+	* import/m4/isblank.m4: New file.
+	* import/m4/isnanl.m4: Update.
+	* import/m4/largefile.m4: Update.
+	* import/m4/mbtowc.m4: New file.
+	* import/m4/memmem.m4: Update.
+	* import/m4/minmax.m4: New file.
+	* import/m4/signal_h.m4: Update.
+	* import/m4/stdio_h.m4: Update.
+	* import/m4/stdlib_h.m4: Update.
+	* import/m4/string_h.m4: Update.
+	* import/m4/strnlen.m4: New file.
+	* import/m4/sys_random_h.m4: New file.
+	* import/m4/sys_socket_h.m4: Update.
+	* import/m4/sys_stat_h.m4: Update.
+	* import/m4/time_h.m4: Update.
+	* import/m4/unistd_h.m4: Update.
+	* import/m4/wchar_h.m4: Update.
+	* import/m4/wint_t.m4: Update.
+	* import/m4/wmemchr.m4: New file.
+	* import/m4/wmempcpy.m4: New file.
+	* import/math.in.h (__has_builtin): Update.
+	* import/mbrtowc.c (FALLTHROUGH): Update.
+	* import/mbtowc-impl.h: New file.
+	* import/mbtowc.c: New file.
+	* import/minmax.h: New file.
+	* import/open.c (open): Update.
+	* import/openat-proc.c (openat_proc_name): Update.
+	* import/openat.c (rpl_openat): Update.
+	(openat_needs_fchdir): Update.
+	* import/openat.h (FCHOWNAT_INLINE): Update.
+	(CHOWNAT_INLINE): Update.
+	(FCHMODAT_INLINE): Update.
+	(CHMODAT_INLINE): Update.
+	* import/opendir.c (WIN32_FIND_DATA): Update.
+	(GetFullPathName): Update.
+	(FindFirstFile): Update.
+	* import/readdir.c (FindNextFile): Update.
+	* import/rename.c (MoveFileEx): Update.
+	* import/rewinddir.c (FindFirstFile): Update.
+	* import/rmdir.c: Update.
+	* import/signal.in.h (_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	* import/stat-w32.c (_WIN32_WINNT): Update.
+	(LoadLibrary): Update.
+	(GetFinalPathNameByHandle): Update.
+	(GetProcAddress): Update.
+	(DWORD): Update.
+	(GetFileInformationByHandleExFunc): Update.
+	(GetFinalPathNameByHandleFunc): Update.
+	* import/stat.c (WIN32_FIND_DATA): Update.
+	(CreateFile): Update.
+	(FindFirstFile): Update.
+	* import/stdio.in.h (_GL_ATTRIBUTE_FORMAT): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_FUNCDECL_RPL_1): Update.
+	(_GL_CXXALIAS_RPL_1): Update.
+	(_GL_CXXALIAS_SYS_CAST): Update.
+	* import/stdlib.in.h (_GL_ATTRIBUTE_PURE): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	* import/string.in.h (_GL_ATTRIBUTE_PURE): Update.
+	(_GL_WARN_ON_USE): Update.
+	(_GL_WARN_ON_USE_CXX): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(mbstok_r): Update.
+	* import/strnlen.c: New file.
+	* import/sys_random.in.h: New file.
+	* import/sys_socket.in.h (GNULIB_defined_socklen_t): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_CXXALIAS_SYS_CAST): Update.
+	* import/sys_stat.in.h (_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(lchmod): Update.
+	(_GL_CXXALIAS_RPL_1): Update.
+	(stat): Update.
+	* import/tempname.c (__set_errno): Update.
+	(__secure_getenv): Update.
+	(__try_tempname): Update.
+	(__getpid): Update.
+	(__gettimeofday): Update.
+	(RANDOM_BITS): Update.
+	(uint64_t): Update.
+	(RANDOM_VALUE_MAX): Update.
+	(BASE_62_DIGITS): Update.
+	(BASE_62_POWER): Update.
+	(try_tempname_len): Update.
+	(try_file): Update.
+	(try_dir): Update.
+	(try_nocreate): Update.
+	(gen_tempname_len): Update.
+	(__gen_tempname): Update.
+	(try_tempname): Update.
+	* import/tempname.h (gen_tempname_len): Update.
+	(try_tempname_len): Update.
+	* import/time.in.h (_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	* import/unistd.in.h (if): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(_GL_WARN_ON_USE): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	* import/verify.h: Update.
+	* import/warn-on-use.h (_GL_WARN_ON_USE_CXX): Update.
+	* import/wchar.in.h (_GL_ATTRIBUTE_PURE): Update.
+	(_GL_FUNCDECL_RPL): Update.
+	(_GL_CXXALIAS_RPL): Update.
+	(_GL_FUNCDECL_SYS): Update.
+	(_GL_CXXALIAS_SYS): Update.
+	(_GL_CXXALIASWARN): Update.
+	(_GL_WARN_ON_USE): Update.
+	(_GL_CXXALIAS_SYS_CAST2): Update.
+	(_GL_CXXALIASWARN1): Update.
+	* import/windows-rwlock.c (CreateEvent): Update.
+	* import/wmemchr-impl.h: New file.
+	* import/wmemchr.c: New file.
+	* import/wmempcpy.c: New file.
+	* update-gnulib.sh (IMPORTED_GNULIB_MODULES): Add gettimeofday.
+	(GNULIB_COMMIT_SHA1): Update gnulib revision.
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* configure.ac: Run ACX_LARGEFILE before gl_EARLY.
+	* configure: Regenerate.
+
 2020-02-22  Simon Marchi  <simon.marchi@efficios.com>
 
 	* update-gnulib.sh (GNULIB_COMMIT_SHA1): Bump to
diff --git a/cpu/ChangeLog b/cpu/ChangeLog
index f8102484825..638450610af 100644
--- a/cpu/ChangeLog
+++ b/cpu/ChangeLog
@@ -1,3 +1,29 @@
+2021-01-09  Nick Clifton  <nickc@redhat.com>
+
+	* 2.36 release branch crated.
+
+2020-10-05  Samanta Navarro  <ferivoz@riseup.net>
+
+	* m32r.cpu: Fix spelling mistakes.
+
+2020-09-18  David Faust  <david.faust@oracle.com>
+
+	* bpf.cpu (insn-op-code-alu): Add SDIV and SMOD.
+	(define-alu-insn-bin, daib): Take ISAs as an argument.
+	(define-alu-instructions): Update calls to daib pmacro with
+	ISAs; add sdiv and smod.
+
+2020-09-08  David Faust  <david.faust@oracle.com>
+
+	* bpf.cpu (define-alu-instructions): Correct semantic operators
+	for div, mod to unsigned versions.
+
+2020-09-01  Alan Modra  <amodra@gmail.com>
+
+	* mep-core.cpu (f-8s8a2, f-12s4a2, f-17s16a2): Multiply signed
+	value by two rather than shifting left.
+	(f-24s5a2n): Similarly multiply signed f-24s5a2n-hi to extract.
+
 2020-08-26  David Faust  <david.faust@oracle.com>
 
 	* bpf.cpu (arch bpf): Add xbpf mach and isas.
diff --git a/ChangeLog b/ChangeLog
index 49e9cf6148e..185bde7efbd 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,142 @@
+2021-01-09  Nick Clifton  <nickc@redhat.com>
+
+	* 2.36 release branch crated.
+
+2021-01-07  Samuel Thibault  <samuel.thibault@gnu.org>
+
+	* libtool.m4: Match gnu* along with other GNU systems.
+
+2021-01-07  Alan Modra  <amodra@gmail.com>
+
+	* config.sub: Accept OS of eabi* and gnueabi*.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.def (libctf): No longer no_check.  Checking depends on
+	all-ld.
+	* Makefile.in: Regenerated.
+
+2021-01-05  Nick Clifton  <nickc@redhat.com>
+
+	* libiberty: Sync with gcc.  Bring in:
+	2021-01-04  Martin Liska  <mliska@suse.cz>
+
+	* strverscmp.c: Convert to utf8 from iso8859.
+
+	2020-12-22  Jason Merrill  <jason@redhat.com>
+
+	PR c++/67343
+	* cp-demangle.h (struct d_info): Add unresolved_name_state.
+	* cp-demangle.c (d_prefix): Add subst parm.
+	(d_nested_name): Pass it.
+	(d_unresolved_name): Split out from...
+	(d_expression_1): ...here.
+	(d_demangle_callback): Maybe retry with old sr mangling.
+	* testsuite/demangle-expected: Add test.
+
+	2020-12-21  Jason Merrill  <jason@redhat.com>
+
+	* cp-demangle.c (d_expression_1): Recognize qualified-id
+	on RHS of dt/pt.
+	* testsuite/demangle-expected: Add test.
+
+	2020-12-21  Jason Merrill  <jason@redhat.com>
+
+	* cp-demangle.c (d_unqualified_name): Clear is_expression.
+	* testsuite/demangle-expected: Add tests.
+
+	2020-11-25  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* configure: Regenerate.
+	* configure.ac: Avoid using sanitizer.
+
+	2020-11-13  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
+
+	* rust-demangle.c (struct rust_demangler): Add
+	skipping_printing and bound_lifetime_depth fields.
+	(eat): Add (v0-only).
+	(parse_integer_62): Add (v0-only).
+	(parse_opt_integer_62): Add (v0-only).
+	(parse_disambiguator): Add (v0-only).
+	(struct rust_mangled_ident): Add punycode{,_len} fields.
+	(parse_ident): Support v0 identifiers.
+	(print_str): Respect skipping_printing.
+	(print_uint64): Add (v0-only).
+	(print_uint64_hex): Add (v0-only).
+	(print_ident): Respect skipping_printing,
+	Support v0 identifiers.
+	(print_lifetime_from_index): Add (v0-only).
+	(demangle_binder): Add (v0-only).
+	(demangle_path): Add (v0-only).
+	(demangle_generic_arg): Add (v0-only).
+	(demangle_type): Add (v0-only).
+	(demangle_path_maybe_open_generics): Add (v0-only).
+	(demangle_dyn_trait): Add (v0-only).
+	(demangle_const): Add (v0-only).
+	(demangle_const_uint): Add (v0-only).
+	(basic_type): Add (v0-only).
+	(rust_demangle_callback): Support v0 symbols.
+	* testsuite/rust-demangle-expected: Add v0 testcases.
+
+	2020-11-13  Seija Kijin  <doremylover456@gmail.com>
+
+	* strstr.c (strstr): Make implementation ANSI/POSIX compliant.
+
+	2020-11-11  Patrick Palka  <ppalka@redhat.com>
+
+	PR c++/88115
+	* cp-demangle.c (d_print_comp_inner)
+	<case DEMANGLE_COMPONENT_EXTENDED_OPERATOR>: Don't print the
+	"operator " prefix for __alignof__.
+	<case DEMANGLE_COMPONENT_UNARY>: Always print parens around the
+	operand of __alignof__.
+	* testsuite/demangle-expected: Test demangling for __alignof__.
+
+	2020-11-09  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* pex-win32.c (pex_win32_exec_child): Initialize orig_err.
+
+	2020-10-06  Martin Liska  <mliska@suse.cz>
+
+	PR lto/97290
+	* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):
+	Use sh_link of a .symtab_shndx section.
+
+2021-01-05  Alan Modra  <amodra@gmail.com>
+
+	* config.guess: Import from upstream.
+	* config.sub: Likewise.
+
+2020-12-16  Martin Liska  <mliska@suse.cz>
+	    Tom de Vries  <tdevries@suse.de>
+
+	* gdb/debuginfod-support.c (struct user_data): Remove has_printed
+	field.  Add meter field.
+	(progressfn): Print progress using meter.
+
+2020-12-02  Enze Li  <lienze2010@hotmail.com>
+
+	* .gitignore: Add gnu global outputs.
+
+2020-12-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* .gitignore: Sync with gcc.
+
+2020-10-26  Andreas Rammhold <andreas@rammhold.de>
+
+	* src-release.sh: Use sha256sum instead of md5sum.
+
+2020-10-14  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in: Rebuild.
+	* Makefile.def: Make distclean-gnulib depend on distclean-gdb and
+	distclean-gdbserver.
+
+2020-07-24  Aaron Merey  <amerey@redhat.com>
+
+	* configure: Rebuild.
+	* configure.ac: Remove AC_DEBUGINFOD.
+
 2020-07-04  Nick Clifton  <nickc@redhat.com>
 
 	Binutils 2.35 branch created.
diff --git a/ld/ChangeLog b/ld/ChangeLog
index d8abc62717c..6d36101b0d1 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,553 +1,417 @@
-2021-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
 
-	Apply from master
-	2020-12-31  H.J. Lu  <hongjiu.lu@intel.com>
-		    Alan Modra  <amodra@gmail.com>
-	PR 27128
-	* testsuite/ld-elf/pr27128.s: New file.
-	* testsuite/ld-elf/pr27128.t: Likewise.
-	* testsuite/ld-elf/pr27128a.d: Likewise.
-	* testsuite/ld-elf/pr27128b.d: Likewise.
-	* testsuite/ld-elf/pr27128c.d: Likewise.
-	* testsuite/ld-elf/pr27128d.d: Likewise.
-	* testsuite/ld-elf/pr27128e.d: Likewise.
-
-	2020-08-24  Alan Modra  <amodra@gmail.com>
-	* testsuite/ld-sparc/tlssunbin32.rd: Update for new readelf output.
-	* testsuite/ld-sparc/tlssunbin64.rd: Likewise.
-
-	2020-08-22  H.J. Lu  <hongjiu.lu@intel.com>
-	PR ld/26382
-	* testsuite/ld-elf/pr26302.nd: Updated.
-	* testsuite/ld-elf/pr26302.rd: New file.
-	* testsuite/ld-elf/shared.exp: Add a test for readelf -sW.
-
-	2020-08-10  H.J. Lu  <hongjiu.lu@intel.com>
-	PR binutils/26302
-	* testsuite/ld-elf/pr26302.nd: New file.
-	* testsuite/ld-elf/pr26302.ver: Likewise.
-	* testsuite/ld-elf/pr26302a.c: Likewise.
-	* testsuite/ld-elf/pr26302b.c: Likewise.
-	* testsuite/ld-elf/shared.exp: Run binutils/26302 tests.
-
-2020-12-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/27016
-	* testsuite/ld-x86-64/x86-64.exp: Run pr27016a and pr27016b.
-	* testsuite/ld-x86-64/pr27016a.d: New file.
-	* testsuite/ld-x86-64/pr27016a.s: Likewise.
-	* testsuite/ld-x86-64/pr27016b.d: Likewise.
-	* testsuite/ld-x86-64/pr27016b.s: Likewise.
-
-2020-11-16  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26869
-	* ldelf.c (ldelf_before_allocation): Set rel_from_abs to 1 for
-	__ehdr_start.
-	* testsuite/ld-i386/i386.exp: Run pr26869.
-	* testsuite/ld-i386/pr26869.d: New file.
-	* testsuite/ld-i386/pr26869.s: Likewise.
-
-2020-10-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-i386/property-3.r: Updated for Fedora binary
-	annotation plugin for GCC.
-	* testsuite/ld-i386/property-4.r: Likewise.
-	* testsuite/ld-i386/property-5.r: Likewise.
-	* testsuite/ld-x86-64/property-3.r: Likewise.
-	* testsuite/ld-x86-64/property-4.r: Likewise.
-	* testsuite/ld-x86-64/property-5.r: Likewise.
-
-2020-10-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26711
-	* testsuite/ld-i386/i386.exp: Run ld/26711 tests.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-i386/pr26711-1.d: Likewise.
-	* testsuite/ld-i386/pr26711-2.d: Likewise.
-	* testsuite/ld-i386/pr26711-3.d: Likewise.
-	* testsuite/ld-x86-64/pr26711-1-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr26711-1.d: Likewise.
-	* testsuite/ld-x86-64/pr26711-2-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr26711-2.d: Likewise.
-	* testsuite/ld-x86-64/pr26711-3-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr26711-3.d: Likewise.
-	* testsuite/ld-x86-64/pr26711.s: Likewise.
-
-2020-09-26  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/elfv2so.d,
-	* testsuite/ld-powerpc/notoc2.d,
-	* testsuite/ld-powerpc/tlsdesc.wf,
-	* testsuite/ld-powerpc/tlsdesc2.d,
-	* testsuite/ld-powerpc/tlsdesc2.wf,
-	* testsuite/ld-powerpc/tlsopt5.d,
-	* testsuite/ld-powerpc/tlsopt5.wf,
-	* testsuite/ld-powerpc/tlsopt6.d,
-	* testsuite/ld-powerpc/tlsopt6.wf: Update __glink_PLTresolve.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	PR 26655
-	* emultempl/ppc64elf.em (params): Add ppc_edit.
-	(ppc_before_allocation): Split off some edit functions to..
-	(ppc_edit): ..this, new function.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-08-13  Alan Modra  <amodra@gmail.com>
-	* emultempl/ppc64elf.em (params): Init new field.
-	(enum ppc64_opt): Add OPTION_NO_PCREL_OPT.
-	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS),
-	(PARSE_AND_LIST_ARGS_CASES): Support --no-pcrel-optimize.
-
-2020-09-19  Nick Clifton  <nickc@redhat.com>
-
-	This is the 2.35.1 point release.
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
+	This is the 2.36 release.
 	* configure: Regenerate.
 	* po/ld.pot: Regenerate.
 
-2020-09-15  Hans-Peter Nilsson  <hp@axis.com>
-
-	Backport from mainline:
-	PR ld/26589
-	* testsuite/ld-elf/pr26589.d, testsuite/ld-elf/locref3.s: New test.
+2021-01-21  Alan Modra  <amodra@gmail.com>
 
-2020-09-10  Alan Modra  <amodra@gmail.com>
+	* testsuite/ld-elf/pr26936.d: No longer xfail mips.
 
-	Apply from master
-	2020-08-24  Alan Modra  <amodra@gmail.com>
-	* testsuite/ld-powerpc/tls32.d: Update for TPREL_HA/LO optimisation.
-	* testsuite/ld-powerpc/tlsexe32.d: Likewise.
-	* testsuite/ld-powerpc/tlsldopt32.d: Likewise.
-	* testsuite/ld-powerpc/tlsmark32.d: Likewise.
-	* testsuite/ld-powerpc/tlsopt4_32.d: Likewise.
-	* testsuite/ld-powerpc/tprel.s,
-	* testsuite/ld-powerpc/tprel.d,
-	* testsuite/ld-powerpc/tprel32.d: New tests.
-	* testsuite/ld-powerpc/tprelbad.s,
-	* testsuite/ld-powerpc/tprelbad.d: New test.
-	* testsuite/ld-powerpc/powerpc.exp: Run them.
+2021-01-19  Nelson Chu  <nelson.chu@sifive.com>
 
-2020-08-16  H.J. Lu  <hongjiu.lu@intel.com>
+	* testsuite/ld-elf/elf.exp (riscv_little_endian): Added.  Return true
+	if target is riscv little endian.  Otherwise, return false.
+	* testsuite/ld-elf/compressed1d.d: Only xfail the riscv little endian
+	targets by [riscv_little_endian].
 
-	PR binutils/26389
-	* testsuite/ld-plugin/lto.exp: Run PR binutils/26389 test.
-	* testsuite/ld-plugin/pr26389.c: New file.
-	* testsuite/ld-plugin/pr26389.d: Likewise.
+2021-01-18  H.J. Lu  <hongjiu.lu@intel.com>
 
-2020-08-14  Tamar Christina  <tamar.christina@arm.com>
+	PR ld/27193
+	* testsuite/ld-i386/i386.exp: Run PR ld/27193 test.
+	* testsuite/ld-i386/pr27193.dd: New file.
+	* testsuite/ld-i386/pr27193a.o.bz2: Likewise.
+	* testsuite/ld-i386/pr27193b.s: Likewise.
 
-	Backport from master.
-	2020-08-14  Tamar Christina  <tamar.christina@arm.com>
+2021-01-18  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* testsuite/ld-arm/thumb-plt-got.d: Relax regexpr.
-	* testsuite/ld-arm/thumb-plt.d: Likewise.
+	PR ld/23169
+	* testsuite/ld-ifunc/ifunc.exp: Replace pr23169c.rd with
+	pr23169a.rd for pr23169c and pr23169f.  Remove pr23169e tests.
+	* testsuite/ld-ifunc/pr23169a.c (foo): Don't compare function
+	address.
 
-2020-08-07  David Faust  <david.faust@oracle.com>
+2021-01-14  Nick Clifton  <nickc@redhat.com>
 
-	* testsuite/ld-bpf/call-3.s: New file.
-	* testsuite/ld-bpf/call-3.d: Likewise.
+	* po/fr.po: Updated French translation.
 
-2020-08-05  David Faust  <david.faust@oracle.com>
+2021-01-12  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* testsuite/ld-bpf/call-2.s: New file.
-	* testsuite/ld-bpf/call-2.d: Likewise.
-	* testsuite/ld-bpf/reloc-data-be.d: Likewise.
-	* testsuite/ld-bpf/reloc-data-le.d: Likewise.
-	* testsuite/ld-bpf/reloc-data.s: Likewise.
-	* testsuite/ld-bpf/reloc-insn-external-be.d: Likewise.
-	* testsuite/ld-bpf/reloc-insn-external-le.d: Likewise.
-	* testsuite/ld-bpf/reloc-insn-external.s: Likewise.
-	* testsuite/ld-bpf/reloc-insn32-be.d: Likewise.
-	* testsuite/ld-bpf/reloc-insn32-le.d: Likewise.
-	* testsuite/ld-bpf/reloc-insn32.s: Likewise.
-	* testsuite/ld-bpf/reloc-insn64-be.d: Likewise.
-	* testsuite/ld-bpf/reloc-insn64-le.d: Likewise.
-	* testsuite/ld-bpf/reloc-insn64.s: Likewise.
+	PR ld/27171
+	* testsuite/ld-x86-64/pe-x86-64-5.obj.bz2: New file.
+	* testsuite/ld-x86-64/pe-x86-64-5.od: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-5.rd: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64.exp: Run PR ld/27171 test.
 
-2020-08-03  Alan Modra  <amodra@gmail.com>
+2021-01-11  Matt Jenkins  <matt@majenko.co.uk>
 
-	* ldlex.l (yy_create_string_buffer): Use xmalloc rather than malloc.
-	* lexsup.c (parse_args): Likewise.
+	PR ld/27167
+	* ldmain.c (get_emulation): Add mipsmips32r3, mips32r5, mips64r3
+	and mips64r5 to list of known mips targets.
 
-2020-08-03  Alan Modra  <amodra@gmail.com>
+2021-01-11  Nick Clifton  <nickc@redhat.com>
 
-	PR 26328
-	* configure.ac: AC_CHECK_DECLS asprintf.
-	* configure: Regenerate.
-	* config.in: Regenerate.
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+`	* po/uk.po: Updated Ukranian translation.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-09  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* configure: Regenerate.
+	PR ld/27166
+	* testsuite/ld-x86-64/lam-u48.rd: New file.
+	* testsuite/ld-x86-64/lam-u57.rd: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Add PR ld/27166 tests.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-	2.35 Release:
 	* configure: Regenerate.
 	* po/ld.pot: Regenerate.
 
-2020-07-23  Maciej W. Rozycki  <macro@wdc.com>
-
-	PR ld/26288
-	* ldelf.c (ldelf_after_open): Do not reject ET_EXEC input
-	supplied with `--just-symbols'.
-	* testsuite/ld-misc/just-symbols.exp: New test script.
-	* testsuite/ld-misc/just-symbols-1.dd: New test dump.
-	* testsuite/ld-misc/just-symbols.ld: New test linker script.
-	* testsuite/ld-misc/just-symbols-0.s: New test source.
-	* testsuite/ld-misc/just-symbols-1.s: New test source.
-
-2020-07-23  Maciej W. Rozycki  <macro@wdc.com>
-
-	PR ld/26288
-
-	Revert:
-	PR 26047
-	* ldelf.c (ldelf_after_open): Fail if attempting to link one
-	executable into another.
-
-2020-07-22  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26262
-	PR ld/26267
-	* ldlang.c (lang_process): Set lto_all_symbols_read after all
-	LTO IR symbols have been read.
-	* plugin.c (plugin_notice): Override the IR definition only if
-	all LTO IR symbols have been read or the new definition is
-	non-weak and the the IR definition is weak
-	* testsuite/ld-plugin/lto.exp: Run PR ld/26262 and ld/26267
-	tests.
-	* testsuite/ld-plugin/pr26262a.c: New file.
-	* testsuite/ld-plugin/pr26262b.c: Likewise.
-	* testsuite/ld-plugin/pr26262c.c: Likewise.
-	* testsuite/ld-plugin/pr26267.err: Likewise.
-	* testsuite/ld-plugin/pr26267a.c: Likewise.
-	* testsuite/ld-plugin/pr26267b.c: Likewise.
-	* testsuite/ld-plugin/pr26267c.c: Likewise.
-
-2020-07-20  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/ld-powerpc/powerpc.exp (ppcelftests): Use section name
-	.PPC.EMB.apuinfo instead of section number 2 in apuinfo tests.
-
-2020-07-20  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26263
-	* testsuite/ld-i386/pr26263.d: Updated.
-	* testsuite/ld-x86-64/pr26263.d: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Run gas/26263 test for all ELF
-	targets.
-
-2020-07-19  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/26263
-	* testsuite/ld-i386/i386.exp: Run PR gas/26263 test.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-i386/pr26263.d: New file.
-	* testsuite/ld-x86-64/pr26263.d: Likewise.
-	* testsuite/ld-x86-64/pr26263.s: Likewise.
-
-2020-07-19  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/ppc64elf.em (power10-stubs): Accept optional "auto" arg.
-	* ld.texi (power10-stubs): Update.
-	* testsuite/ld-powerpc/callstub-1.d: Force --power10-stubs.
-	* testsuite/ld-powerpc/callstub-2.d: Relax branch offset comparison.
-	* testsuite/ld-powerpc/callstub-4.d: New test.
-	* testsuite/ld-powerpc/notoc.d: Force --no-power10-stubs.
-	* testsuite/ld-powerpc/notoc3.d,
-	* testsuite/ld-powerpc/notoc3.s,
-	* testsuite/ld-powerpc/notoc3.wf: New test.
-	* testsuite/ld-powerpc/powerpc.exp: Run new tests.  Pass
-	--no-power10-stubs for notoc link.
-
-2020-07-15  Hans-Peter Nilsson  <hp@bitrange.com>
-
-	* testsuite/ld-mmix/undef-1.d, testsuite/ld-mmix/undef-1m.d,
-	testsuite/ld-mmix/undef-2.d, testsuite/ld-mmix/undef-2m.d: Add
-	start- and end-anchors to error-string to match just a
-	single-line error-message.
-
-2020-07-13  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-07-09  Alan Modra  <amodra@gmail.com>
-	* testsuite/ld-gc/gc.exp: Don't set -mminimal-toc for powerpc64,
-	and remove powerpc64 xfail.  Use -fno-PIE for ppc32.
-
-	2020-07-09  Alan Modra  <amodra@gmail.com>
-	PR 18841
-	* testsuite/ld-ifunc/ifunc.exp: Run pr18841 tests non-pie.
-
-2020-07-13  Nick Clifton  <nickc@redhat.com>
-
-	* ldelf.c (ldelf_after_open): Change fatal errors about linking in
-	executable files to simple warnings.
-
-2020-07-10  Alan Modra  <amodra@gmail.com>
-
-	* ld.texi (PowerPC64 ELF64): Document --no-inline-optimize,
-	--power10-stubs and --no-power10-stubs.
-
-2020-07-10  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/ppc64elf.em (params): Init new field.
-	(enum ppc64_opt): Add OPTION_POWER10_STUBS and OPTION_NO_POWER10_STUBS.
-	(PARSE_AND_LIST_LONGOPTS): Support --power10-stubs and
-	--no-power10-stubs.
-	(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Likewise.
-	* testsuite/ld-powerpc/callstub-3.d: New test.
-	* testsuite/ld-powerpc/powerpc.exp: Run it.
-
-2020-07-06  Nick Clifton  <nickc@redhat.com>
-
-	* po/bg.po: Updated Bulgarian translation.
-	* po/fr.po: Updated French translation.
-	* po/pt_BR.po: Updated Brazilian Portuguese translation.
-	* po/uk.po: Updated Ukranian translation.
+2021-01-09  Nick Clifton  <nickc@redhat.com>
+
+	* 2.36 release branch crated.
+
+2021-01-08  H.J. Lu  <hongjiu.lu@intel.com>
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+	* ld-x86-64/property-x86-lam-u48-4.d: Updated.
+	* ld-x86-64/property-x86-lam-u48-5.d: Likewise.
+
+2021-01-09  Alan Modra  <amodra@gmail.com>
 
 	* configure: Regenerate.
-	* po/ld.pot: Regenerate.
+	* Makefile.in: Regenerate.
+
+2021-01-07  Samuel Thibault  <samuel.thibault@gnu.org>
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.35 branch created.
-
-2020-07-03  Alan Modra  <amodra@gmail.com>
-
-	PR 26028
-	* testsuite/ld-arm/arm-elf.exp (vxworks1): Pass --wide to readelf
-	when dumping relocs.
-	* testsuite/ld-i386/i386.exp (vxworks1): Likewise.
-	* testsuite/ld-sh/sh-vxworks.exp (vxworks1): Likewise.
-	* testsuite/ld-sparc/sparc.exp (vxworks1): Likewise.
-	* testsuite/ld-arm/vxworks1.rd: Adjust to suit.
-	* testsuite/ld-i386/vxworks1.rd: Adjust.
-	* testsuite/ld-sh/vxworks1.rd: Adjust.
-	* testsuite/ld-sparc/vxworks1.rd: Adjust.
-
-2020-07-02  Nick Clifton  <nickc@redhat.com>
-
-	PR 26028
-	* testsuite/ld-powerpc/powerpc.exp: Add -T option to readelf
-	command line when running some tests.
-	* testsuite/ld-arm/arm-elf.exp: Likewise.
-	* testsuite/ld-mips-elf/mips-elf.exp: Likewise.
-	* testsuite/ld-mmix/local1.d: Likewise.
-	* testsuite/ld-mmix/local3.d: Likewise.
-	* testsuite/ld-mmix/local5.d: Likewise.
-	* testsuite/ld-mmix/local7.d: Likewise.
-	* testsuite/ld-powerpc/powerpc.exp: Likewise.
-
-2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* Makefile.am (ALL_EMULATION_SOURCES): Remove eelf_i386_nacl.c,
-	eelf32_x86_64_nacl.c, eelf_x86_64_nacl.c.
-	Remove x86 NaCl dep files.
-	* NEWS: Mention x86 NaCl target support removal.
-	* configure.tgt: Remove x86 NaCl target support.
-	* testsuite/ld-elf/binutils.exp: Likewise.
-	* testsuite/ld-elf/elf.exp: Likewise.
-	* testsuite/ld-elfvers/vers.exp: Likewise.
-	* testsuite/ld-i386/align-branch-1.d: Likewise.
-	* testsuite/ld-i386/export-class.exp: Likewise.
-	* testsuite/ld-i386/i386.exp: Likewise.
-	* testsuite/ld-i386/load1.d: Likewise.
-	* testsuite/ld-i386/pie1.d: Likewise.
-	* testsuite/ld-i386/pr12570a.d: Likewise.
-	* testsuite/ld-i386/pr12570b.d: Likewise.
+	* configure: Regenerate.
+
+2021-01-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR 27109
+	* testsuite/ld-elf/export-class.sd: Adjust the expected output.
+	* testsuite/ld-elf/loadaddr3b.d: Likewise.
+	* testsuite/ld-i386/ibt-plt-1.d: Likewise.
+	* testsuite/ld-i386/ibt-plt-2a.d: Likewise.
+	* testsuite/ld-i386/ibt-plt-2c.d: Likewise.
+	* testsuite/ld-i386/ibt-plt-3a.d: Likewise.
+	* testsuite/ld-i386/ibt-plt-3c.d: Likewise.
 	* testsuite/ld-i386/pr19636-1d.d: Likewise.
 	* testsuite/ld-i386/pr19636-1l.d: Likewise.
 	* testsuite/ld-i386/pr19636-2c.d: Likewise.
-	* testsuite/ld-i386/pr19636-2d.d: Likewise.
-	* testsuite/ld-i386/pr19636-2e.d: Likewise.
-	* testsuite/ld-i386/pr20244-1a.d: Likewise.
-	* testsuite/ld-i386/pr20244-1b.d: Likewise.
-	* testsuite/ld-i386/pr20244-2a.d: Likewise.
-	* testsuite/ld-i386/pr20244-2b.d: Likewise.
-	* testsuite/ld-i386/pr20244-2c.d: Likewise.
-	* testsuite/ld-i386/pr20244-4a.d: Likewise.
-	* testsuite/ld-i386/pr20244-4b.d: Likewise.
-	* testsuite/ld-i386/pr21884.d: Likewise.
-	* testsuite/ld-ifunc/binutils.exp: Likewise.
-	* testsuite/ld-ifunc/ifunc-10-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-10-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-11-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-11-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-12-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-12-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-13-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-13-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14a-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14a-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14b-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14b-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14c-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14c-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14d-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14d-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14e-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14e-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14f-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-14f-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-15-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-15-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-16-i386-now.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-16-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-16-x86-64-now.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-16-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-17a-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-17a-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-17b-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-17b-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-18a-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-18a-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-18b-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-18b-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-19a-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-19a-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-19b-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-19b-x86-64.d: Likewise.
 	* testsuite/ld-ifunc/ifunc-2-i386-now.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-2-i386.d: Likewise.
 	* testsuite/ld-ifunc/ifunc-2-local-i386-now.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-2-local-i386.d: Likewise.
 	* testsuite/ld-ifunc/ifunc-2-local-x86-64-now.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-2-local-x86-64.d: Likewise.
 	* testsuite/ld-ifunc/ifunc-2-x86-64-now.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-2-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-20-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-20-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-21-i386.d: Likewise.
 	* testsuite/ld-ifunc/ifunc-21-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-22-i386.d: Likewise.
 	* testsuite/ld-ifunc/ifunc-22-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5a-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5a-local-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5a-local-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5a-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5b-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5b-local-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5b-local-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5b-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5r-local-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-5r-local-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-6a-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-6a-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-6b-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-6b-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-7a-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-7a-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-7b-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-7b-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-8-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-8-x86-64.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-9-i386.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-9-x86-64.d: Likewise.
 	* testsuite/ld-ifunc/pr17154-i386-now.d: Likewise.
 	* testsuite/ld-ifunc/pr17154-i386.d: Likewise.
 	* testsuite/ld-ifunc/pr17154-x86-64-now.d: Likewise.
 	* testsuite/ld-ifunc/pr17154-x86-64.d: Likewise.
-	* testsuite/ld-plugin/lto.exp: Likewise.
-	* testsuite/ld-x86-64/align-branch-1.d: Likewise.
-	* testsuite/ld-x86-64/dwarfreloc.exp: Likewise.
-	* testsuite/ld-x86-64/line.exp: Likewise.
-	* testsuite/ld-x86-64/load1a.d: Likewise.
-	* testsuite/ld-x86-64/load1b.d: Likewise.
-	* testsuite/ld-x86-64/load1c.d: Likewise.
-	* testsuite/ld-x86-64/load1d.d: Likewise.
-	* testsuite/ld-x86-64/pie3.d: Likewise.
-	* testsuite/ld-x86-64/pr18160.d: Likewise.
-	* testsuite/ld-x86-64/pr19013-x32.d: Likewise.
-	* testsuite/ld-x86-64/pr19013.d: Likewise.
-	* testsuite/ld-x86-64/pr19636-2d.d: Likewise.
+	* testsuite/ld-x86-64/bnd-branch-1-now.d: Likewise.
+	* testsuite/ld-x86-64/bnd-ifunc-1-now.d: Likewise.
+	* testsuite/ld-x86-64/bnd-ifunc-2-now.d: Likewise.
+	* testsuite/ld-x86-64/bnd-ifunc-2.d: Likewise.
+	* testsuite/ld-x86-64/bnd-plt-1-now.d: Likewise.
+	* testsuite/ld-x86-64/bnd-plt-1.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-1-x32.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-1.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-2a-x32.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-2a.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-2c-x32.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-2c.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-3a-x32.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-3a.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-3c-x32.d: Likewise.
+	* testsuite/ld-x86-64/ibt-plt-3c.d: Likewise.
+	* testsuite/ld-x86-64/pr19609-4e.d: Likewise.
+	* testsuite/ld-x86-64/pr19609-6a.d: Likewise.
+	* testsuite/ld-x86-64/pr19609-6b.d: Likewise.
+	* testsuite/ld-x86-64/pr19609-7b.d: Likewise.
+	* testsuite/ld-x86-64/pr19609-7d.d: Likewise.
 	* testsuite/ld-x86-64/pr19636-2l.d: Likewise.
-	* testsuite/ld-x86-64/pr20253-1b.d: Likewise.
 	* testsuite/ld-x86-64/pr20253-1d.d: Likewise.
-	* testsuite/ld-x86-64/pr20253-1f.d: Likewise.
 	* testsuite/ld-x86-64/pr20253-1h.d: Likewise.
-	* testsuite/ld-x86-64/pr20253-1j.d: Likewise.
-	* testsuite/ld-x86-64/pr20253-1l.d: Likewise.
-	* testsuite/ld-x86-64/pr21884.d: Likewise.
-	* testsuite/ld-x86-64/pr22393-3a.rd: Likewise.
-	* testsuite/ld-x86-64/pr22393-3b.rd: Likewise.
-	* testsuite/ld-x86-64/tlsgd10.dd: Likewise.
-	* testsuite/ld-x86-64/tlsgd5.dd: Likewise.
-	* testsuite/ld-x86-64/tlsgd8.dd: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* emulparams/elf32_x86_64_nacl.sh: Removed.
-	* emulparams/elf_i386_nacl.sh: Likewise.
-	* emulparams/elf_x86_64_nacl.sh: Likewise.
-	* testsuite/ld-i386/emit-relocs-nacl.rd: Likewise.
-	* testsuite/ld-i386/load1-nacl.d: Likewise.
-	* testsuite/ld-i386/pie1-nacl.d: Likewise.
-	* testsuite/ld-i386/plt-nacl.pd: Likewise.
-	* testsuite/ld-i386/plt-pic-nacl.pd: Likewise.
-	* testsuite/ld-i386/pr17709-nacl.rd: Likewise.
-	* testsuite/ld-i386/pr19636-1d-nacl.d: Likewise.
-	* testsuite/ld-i386/pr19636-2c-nacl.d: Likewise.
-	* testsuite/ld-i386/pr19636-2d-nacl.d: Likewise.
-	* testsuite/ld-i386/pr19636-2e-nacl.d: Likewise.
-	* testsuite/ld-i386/pr19827-nacl.rd: Likewise.
-	* testsuite/ld-i386/pr21884-nacl.d: Likewise.
-	* testsuite/ld-i386/pr21884-nacl.t: Likewise.
-	* testsuite/ld-i386/tlsbin-nacl.rd: Likewise.
-	* testsuite/ld-i386/tlsbin2-nacl.rd: Likewise.
-	* testsuite/ld-i386/tlsbindesc-nacl.rd: Likewise.
-	* testsuite/ld-i386/tlsdesc-nacl.rd: Likewise.
-	* testsuite/ld-i386/tlsgdesc-nacl.rd: Likewise.
-	* testsuite/ld-i386/tlsnopic-nacl.rd: Likewise.
-	* testsuite/ld-i386/tlspic-nacl.rd: Likewise.
-	* testsuite/ld-i386/tlspic2-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/ilp32-4-nacl.d: Likewise.
-	* testsuite/ld-x86-64/load1a-nacl.d: Likewise.
-	* testsuite/ld-x86-64/load1b-nacl.d: Likewise.
-	* testsuite/ld-x86-64/load1c-nacl.d: Likewise.
-	* testsuite/ld-x86-64/load1d-nacl.d: Likewise.
-	* testsuite/ld-x86-64/pie3-nacl.d: Likewise.
-	* testsuite/ld-x86-64/plt-nacl.pd: Likewise.
-	* testsuite/ld-x86-64/pr17709-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/pr19013-nacl.d: Likewise.
-	* testsuite/ld-x86-64/pr19636-2d-nacl.d: Likewise.
-	* testsuite/ld-x86-64/pr19827-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/pr21884-nacl.d: Likewise.
-	* testsuite/ld-x86-64/pr21884-nacl.t: Likewise.
-	* testsuite/ld-x86-64/split-by-file-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/tlsbin-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/tlsbin2-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/tlsbindesc-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/tlsdesc-nacl.pd: Likewise.
-	* testsuite/ld-x86-64/tlsdesc-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/tlsgdesc-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/tlspic-nacl.rd: Likewise.
-	* testsuite/ld-x86-64/tlspic2-nacl.rd: Likewise.
-	* Makefile.in: Regenerated.
-	* po/BLD-POTFILES.in: Likewise.
-
-2020-06-30  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/group1.d: Don't xfail all solaris targets, just
-	ix86 and x86_64.
-
-2020-06-30  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/reloc-discard.d: Don't xfail nds32.
-
-2020-06-30  Alan Modra  <amodra@gmail.com>
-
-	* scripttempl/elfmicroblaze.sc (.data): Add .data.* entry.
-	* testsuite/ld-elf/var1.d: Don't xfail microblaze.
-
-2020-06-29  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-tic6x/shlib-1.rd: Move C6000_DSBT_BASE,
-	C6000_DSBT_SIZE and C6000_DSBT_INDEX dynamic tags to the last.
+	* testsuite/ld-x86-64/pr21038b-now.d: Likewise.
+	* testsuite/ld-x86-64/pr21038b.d: Likewise.
+	* testsuite/ld-x86-64/pr21038c-now.d: Likewise.
+	* testsuite/ld-x86-64/pr21038c.d: Likewise.
+	* testsuite/ld-x86-64/pr23854.d: Likewise.
+	* testsuite/ld-x86-64/pr25416-3.d: Likewise.
+	* testsuite/ld-x86-64/pr25416-4.d: Likewise.
+	* testsuite/ld-i386/plt-pic.pd: Likewise.
+	* testsuite/ld-i386/plt-pic2.dd: Likewise.
+	* testsuite/ld-i386/plt.pd: Likewise.
+	* testsuite/ld-i386/plt2.dd: Likewise.
+	* testsuite/ld-i386/tlsbin.rd: Likewise.
+	* testsuite/ld-i386/tlsbin2.rd: Likewise.
+	* testsuite/ld-i386/tlsbindesc.rd: Likewise.
+	* testsuite/ld-i386/tlsdesc.rd: Likewise.
+	* testsuite/ld-i386/tlsgdesc.rd: Likewise.
+	* testsuite/ld-i386/tlsnopic.rd: Likewise.
+	* testsuite/ld-i386/tlspic.rd: Likewise.
+	* testsuite/ld-i386/tlspic2.rd: Likewise.
+	* testsuite/ld-x86-64/mpx3.dd: Likewise.
+	* testsuite/ld-x86-64/mpx3n.dd: Likewise.
+	* testsuite/ld-x86-64/mpx4.dd: Likewise.
+	* testsuite/ld-x86-64/mpx4n.dd: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-1.od: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-2.od: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-3.od: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-4.od: Likewise.
+	* testsuite/ld-x86-64/plt.pd: Likewise.
+	* testsuite/ld-x86-64/plt2.dd: Likewise.
+	* testsuite/ld-x86-64/tlsbin.rd: Likewise.
+	* testsuite/ld-x86-64/tlsbin2.rd: Likewise.
+	* testsuite/ld-x86-64/tlsbindesc.rd: Likewise.
+	* testsuite/ld-x86-64/tlsdesc.rd: Likewise.
+	* testsuite/ld-x86-64/tlsgdesc.rd: Likewise.
+	* testsuite/ld-x86-64/tlspic.rd: Likewise.
+	* testsuite/ld-x86-64/tlspic2.rd: Likewise.
+	* testsuite/ld-elf/sec64k.exp: Check
+	is_elf_unused_section_symbols.
+
+2021-01-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/fill.d: Skip sh-*-pe rather than xfail.
+	* testsuite/ld-scripts/fill16.d: Don't xfail sh-*-pe.
+	* testsuite/ld-scripts/segment-start.d: Likewise.
+
+2021-01-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/comm-data5.d: xfail targets that complain
+	about dynamic relocations in read-only sections.
+	* testsuite/ld-elf/ehdr_start-shared.d: Likewise.
+	* testsuite/ld-elf/ehdr_start.d: Likewise.
+	* testsuite/ld-scripts/pr22267.d: Likewise.
+	* testsuite/ld-elf/shared.exp: Likewise for DT_TEXTREL tests and
+	pr20995 text.
+	* testsuite/ld-elf/sec64k.exp: Don't run 64ksec on lm32-linux.
+
+2021-01-07  Marcus Comstedt  <marcus@mc.pp.se>
+
+	* testsuite/ld-scripts/empty-address-2a.d: xfail riscv64*-*-*.
+	* testsuite/ld-scripts/empty-address-2b.d: Likewise.
+
+2021-01-07  Alan Modra  <amodra@gmail.com>
+
+	* po/BLD-POTFILES.in: Regenerate.
+
+2021-01-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/shared.exp: xfail pr22471 for targets that
+	complain about relocs in read-only sections.  Tidy ASFLAGS append.
+
+2021-01-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-sparc/sparc.exp (sparc64tests): Set text-segment
+	base for some tests.
+	* testsuite/ld-sparc/gotop32.dd: Match solaris output.
+	* testsuite/ld-sparc/gotop32.sd: Likewise.
+	* testsuite/ld-sparc/gotop32.td: Likewise.
+	* testsuite/ld-sparc/gotop64.dd: Likewise.
+	* testsuite/ld-sparc/gotop64.sd: Likewise.
+	* testsuite/ld-sparc/gotop64.td: Likewise.
+	* testsuite/ld-sparc/tlsg32.sd: Likewise.
+	* testsuite/ld-sparc/tlsg64.sd: Likewise.
+	* testsuite/ld-sparc/tlspie32.dd: Likewise.
+	* testsuite/ld-sparc/tlspie64.dd: Likewise.
+	* testsuite/ld-sparc/tlssunbin32.dd: Likewise.
+	* testsuite/ld-sparc/tlssunbin32.sd: Likewise.
+	* testsuite/ld-sparc/tlssunbin32.td: Likewise.
+	* testsuite/ld-sparc/tlssunbin64.dd: Likewise.
+	* testsuite/ld-sparc/tlssunbin64.sd: Likewise.
+	* testsuite/ld-sparc/tlssunbin64.td: Likewise.
+	* testsuite/ld-sparc/tlssunnopic32.dd: Likewise.
+	* testsuite/ld-sparc/tlssunnopic32.sd: Likewise.
+	* testsuite/ld-sparc/tlssunnopic64.dd: Likewise.
+	* testsuite/ld-sparc/tlssunnopic64.sd: Likewise.
+	* testsuite/ld-sparc/tlssunpic32.dd: Likewise.
+	* testsuite/ld-sparc/tlssunpic32.sd: Likewise.
+	* testsuite/ld-sparc/tlssunpic32.td: Likewise.
+	* testsuite/ld-sparc/tlssunpic64.dd: Likewise.
+	* testsuite/ld-sparc/tlssunpic64.sd: Likewise.
+	* testsuite/ld-sparc/tlssunpic64.td: Likewise.
+	* testsuite/ld-sparc/wdispcall.dd: Likewise.
+
+2021-01-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/rgn-at10.d: xfail v850.
+	* testsuite/ld-scripts/rgn-at11.d: Likewise.
+
+2021-01-06  Marcus Comstedt  <marcus@mc.pp.se>
+
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Added
+	riscv_choose_[ilp32|lp64]_emul to choose the correct linker script.
+	* testsuite/ld-riscv-elf/attr-merge-arch-01.d: Call
+	riscv_choose_[ilp32|lp64]_emul instead of hardcoding elf[32|64]lriscv.
+	* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-02.d: Likewise.
+	* testsuite/ld-riscv-elf/c-lui-2.d: Likewise.
+	* testsuite/ld-riscv-elf/c-lui.d: Likewise.
+	* testsuite/ld-riscv-elf/call-relax.d: Likewise.
+	* testsuite/ld-riscv-elf/pcrel-lo-addend-2.d: Likewise.
+	* testsuite/ld-riscv-elf/pcrel-lo-addend.d: Likewise.
+	* testsuite/ld-riscv-elf/weakref32.d: Accept bigriscv in addition
+	to littleriscv.
+	* testsuite/ld-riscv-elf/weakref64.d: Likewise.
+
+2021-01-06  Marcus Comstedt  <marcus@mc.pp.se>
+
+	* configure.tgt: Added riscvbe-*-*, riscv32be*-*-*, riscv64be*-*-*,
+	riscv32be*-*-linux*, and riscv64be*-*-linux*.
+	* Makefile.am: Added eelf32briscv.c, eelf32briscv_ilp32f.c and
+	eelf32briscv_ilp32.c.
+	* Makefile.in: Regenerate.
+	* emulparams/elf32briscv.sh: Added.
+	* emulparams/elf32briscv_ilp32.sh: Likewise.
+	* emulparams/elf32briscv_ilp32f.sh: Likewise.
+	* emulparams/elf64briscv.sh: Likewise.
+	* emulparams/elf64briscv_lp64.sh: Likewise.
+	* emulparams/elf64briscv_lp64f.sh: Likewise.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/ld-ctf/enum-forward.c: New test.
+	* testsuite/ld-ctf/enum-forward.c: New results.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/ld-ctf/array.d: Adjust for dumper changes.
+	* testsuite/ld-ctf/conflicting-cycle-1.B-1.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-1.B-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-1.parent.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.A-1.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.A-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.parent.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.C-1.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.C-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.parent.d: Likewise.
+	* testsuite/ld-ctf/conflicting-enums.d: Likewise.
+	* testsuite/ld-ctf/conflicting-typedefs.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-cyclic-conflicting.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-into-cycle.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-noncyclic.d: Likewise.
+	* testsuite/ld-ctf/cycle-1.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.A.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.B.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.C.d: Likewise.
+	* testsuite/ld-ctf/data-func-conflicted.d: Likewise.
+	* testsuite/ld-ctf/diag-cttname-null.d: Likewise.
+	* testsuite/ld-ctf/diag-cuname.d: Likewise.
+	* testsuite/ld-ctf/diag-parlabel.d: Likewise.
+	* testsuite/ld-ctf/diag-wrong-magic-number-mixed.d: Likewise.
+	* testsuite/ld-ctf/forward.d: Likewise.
+	* testsuite/ld-ctf/function.d: Likewise.
+	* testsuite/ld-ctf/slice.d: Likewise.
+	* testsuite/ld-ctf/super-sub-cycles.d: Likewise.
+	* testsuite/ld-ctf/enums.c: New test.
+	* testsuite/ld-ctf/enums.d: New test.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/ld-ctf/conflicting-cycle-1.parent.d: Adjust for dumper
+	changes.
+	* testsuite/ld-ctf/cross-tu-cyclic-conflicting.d: Likewise.
+	* testsuite/ld-ctf/forward.c: New test...
+	* testsuite/ld-ctf/forward.d: ... and results.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/ld-ctf/array.d: Adjust for dumper changes.
+	* testsuite/ld-ctf/data-func-conflicted.d: Likewise.
+	* testsuite/ld-ctf/diag-cttname-null.d: Likewise.
+	* testsuite/ld-ctf/diag-cuname.d: Likewise.
+	* testsuite/ld-ctf/diag-parlabel.d: Likewise.
+	* testsuite/ld-ctf/function.d: Likewise.
+	* testsuite/ld-ctf/slice.d: Likewise.
+
+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/ld-ctf/array.d: Adjust for dumper changes.
+	* testsuite/ld-ctf/conflicting-cycle-1.B-1.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-1.B-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-1.parent.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.A-1.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.A-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.parent.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.C-1.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.C-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.parent.d: Likewise.
+	* testsuite/ld-ctf/conflicting-enums.d: Likewise.
+	* testsuite/ld-ctf/conflicting-typedefs.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-cyclic-conflicting.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-into-cycle.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-noncyclic.d: Likewise.
+	* testsuite/ld-ctf/cycle-1.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.A.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.B.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.C.d: Likewise.
+	* testsuite/ld-ctf/data-func-conflicted.d: Likewise.
+	* testsuite/ld-ctf/diag-cttname-null.d: Likewise.
+	* testsuite/ld-ctf/diag-cuname.d: Likewise.
+	* testsuite/ld-ctf/diag-parlabel.d: Likewise.
+	* testsuite/ld-ctf/diag-wrong-magic-number-mixed.d: Likewise.
+	* testsuite/ld-ctf/function.d: Likewise.
+	* testsuite/ld-ctf/slice.d: Likewise.
+	* testsuite/ld-ctf/super-sub-cycles.d: Likewise.
+
+2021-01-05  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/sysroot-prefix.exp: Exclude some targets.
+
+2021-01-05  Alan Modra  <amodra@gmail.com>
+
+	PR ld/26256
+	* testsuite/ld-elf/pr26256-1b.d: xfail s12z.
+	* testsuite/ld-scripts/crossref.exp (cross1): Don't xfail ia64.
+
+2021-01-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26256
+	* ldlang.c (gc_section_callback): Set pattern.
+	* testsuite/ld-elf/pr26256-1.s: New file.
+	* testsuite/ld-elf/pr26256-1.t: Likewise.
+	* testsuite/ld-elf/pr26256-1a.d: Likewise.
+	* testsuite/ld-elf/pr26256-1b.d: Likewise.
+	* testsuite/ld-elf/pr26256-2.s: Likewise.
+	* testsuite/ld-elf/pr26256-2.t: Likewise.
+	* testsuite/ld-elf/pr26256-2a.d: Likewise.
+	* testsuite/ld-elf/pr26256-2b-alt.d: Likewise.
+	* testsuite/ld-elf/pr26256-2b.d: Likewise.
+	* testsuite/ld-elf/pr26256-3.s: Likewise.
+	* testsuite/ld-elf/pr26256-3a.d: Likewise.
+	* testsuite/ld-elf/pr26256-3a.t: Likewise.
+	* testsuite/ld-elf/pr26256-3b.d: Likewise.
+	* testsuite/ld-elf/pr26256-3b.t: Likewise.
+
+2021-01-04  Alan Modra  <amodra@gmail.com>
+
+	PR 26822
+	* testsuite/ld-arm/non-contiguous-arm2.d: Adjust STT_FILE symbol match.
+	* testsuite/ld-arm/non-contiguous-arm3.d: Likewise.
+	* testsuite/ld-arm/non-contiguous-arm5.d: Likewise.
+	* testsuite/ld-arm/non-contiguous-arm6.d: Likewise.
+	* testsuite/ld-i386/tlsbin.rd: Likewise.
+	* testsuite/ld-i386/tlsbin2.rd: Likewise.
+	* testsuite/ld-i386/tlsbindesc.rd: Likewise.
+	* testsuite/ld-i386/tlsdesc.rd: Likewise.
+	* testsuite/ld-i386/tlsnopic.rd: Likewise.
+	* testsuite/ld-i386/tlspic.rd: Likewise.
+	* testsuite/ld-i386/tlspic2.rd: Likewise.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-n64.d: Likewise.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-n64t.d: Likewise.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-o32.d: Likewise.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-o32t.d: Likewise.
+	* testsuite/ld-plugin/pr17973.d: Likewise.
+	* testsuite/ld-tic6x/shlib-1.rd: Likewise.
 	* testsuite/ld-tic6x/shlib-1b.rd: Likewise.
 	* testsuite/ld-tic6x/shlib-1r.rd: Likewise.
 	* testsuite/ld-tic6x/shlib-1rb.rd: Likewise.
@@ -560,2099 +424,28 @@
 	* testsuite/ld-tic6x/static-app-1b.rd: Likewise.
 	* testsuite/ld-tic6x/static-app-1r.rd: Likewise.
 	* testsuite/ld-tic6x/static-app-1rb.rd: Likewise.
+	* testsuite/ld-x86-64/tlsbin.rd: Likewise.
+	* testsuite/ld-x86-64/tlsbin2.rd: Likewise.
+	* testsuite/ld-x86-64/tlsbindesc.rd: Likewise.
+	* testsuite/ld-x86-64/tlsdesc.rd: Likewise.
+	* testsuite/ld-x86-64/tlspic.rd: Likewise.
+	* testsuite/ld-x86-64/tlspic2.rd: Likewise.
+	* testsuite/ld-xtensa/tlsbin.rd: Likewise.
+	* testsuite/ld-xtensa/tlspic.rd: Likewise.
 
-2020-06-29  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-x86-64/abs-k1om.d: Run only on x86_64-*-linux*.
-	* testsuite/ld-x86-64/protected2-k1om.d: Likewise.
-	* testsuite/ld-x86-64/protected3-k1om.d: Likewise.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* configure.ac [--enable-libctf]: New, default yes.
-	Set ENABLE_LIBCTF accordingly.
-	* Makefile.am [!ENABLE_LIBCTF]: Empty LIBCTF.
-	* configure: Regenerate.
-	* config.in: Regenerate.
-	* Makefile.in: Regenerate.
-	* aclocal.m4: Regenerate.
-	* ldlang.c (ctf_output): Conditionalize on ENABLE_LIBCTF.
-	(ldlang_open_ctf): Likewise.
-	(lang_merge_ctf): Likewise.
-	(ldlang_ctf_apply_strsym): Likewise.
-	(lang_write_ctf): Likewise.
-	(ldlang_write_ctf_late): Likewise.
-	(ldlang_open_ctf) [!ENABLE_LIBCTF]: Warn about the presence of CTF
-	sections.
-	(lang_merge_ctf) [!ENABLE_LIBCTF]: New stub.
-	(ldlang_ctf_apply_strsym) [!ENABLE_LIBCTF]: Likewise.
-	(lang_write_ctf) [!ENABLE_LIBCTF]: Likewise.
-	(ldlang_write_ctf_late) [!ENABLE_LIBCTF]: Likewise.
-	* ldelfgen.c (ldelf_emit_ctf_early): Conditionalize on
-	ENABLE_LIBCTF.
-	(struct ctf_strsym_iter_cb_arg): Likewise.
-	(ldelf_ctf_strtab_iter_cb): Likewise.
-	(ldelf_ctf_symbols_iter_cb): Likewise.
-	(ldelf_examine_strtab_for_ctf): Likewise.
-	(ldelf_emit_ctf_early) [!ENABLE_LIBCTF]: New stub.
-	(ldelf_examine_strtab_for_ctf) [!ENABLE_LIBCTF]: New stub.
-
-2020-06-26  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/ld-x86-64/x86-64.exp: Run K1OM tests.
-
-2020-06-26  Pat Bernardi  <bernardi@adacore.com>
-
-	* testsuite/ld-m68k/attr-gnu-4-0.s: New file.
-	* testsuite/ld-m68k/attr-gnu-4-1.s: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-2.s: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-00.d: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-01.d: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-02.d: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-10.d: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-11.d: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-12.d: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-20.d: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-21.d: Likewise.
-	* testsuite/ld-m68k/attr-gnu-4-22.d: Likewise.
-	* testsuite/ld-m68k/m68k.exp: Run the new tests.
-
-2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26165
-	* lexsup.c (ld_options): Correct --dependency-file order.
-
-2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26083
-	* testsuite/ld-csky/tls-ie-v1.d: Updated.
-	* testsuite/ld-csky/tls-ie.d: Likewise.
-
-2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26083
-	* testsuite/ld-cris/libdso-15b.d: Updated.
-	* testsuite/ld-cris/libdso-1c.d: Likewise.
-	* testsuite/ld-cris/libdso-1d.d: Likewise.
-	* testsuite/ld-cris/libdso-15c.d: New file.
-
-2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26163
-	* ldexp.c (exp_fold_tree_1): Set non_ir_ref_regular on the source
-	for assignment.
-	* testsuite/ld-plugin/lto.exp: Run ld/26163 test.
-	* testsuite/ld-plugin/pr26163a.c: New file.
-	* testsuite/ld-plugin/pr26163b.c: Likewise.
-
-2020-06-24  Alan Modra  <amodra@gmail.com>
-
-	* lexsup.c (elf_shlib_list_options): Properly format help message.
-	(elf_plt_unwind_list_options): Likewise.
-	* emultempl/cskyelf.em (PARSE_AND_LIST_OPTIONS): Likewise.
-
-2020-06-23  Roland McGrath  <mcgrathr@google.com>
-
-	PR 22843
-	* NEWS: Note --dependency-file.
-	* ld.texi (Options): Document --dependency-file.
-	* ldlex.h (enum option_values): Add OPTION_DEPENDENCY_FILE.
-	* ld.h (ld_config_type): New member dependency_file.
-	* lexsup.c (ld_options, parse_args): Parse --dependency-file.
-	* ldmain.c (struct dependency_file): New type.
-	(dependency_files, dependency_files_tail): New static variables.
-	(track_dependency_files): New function.
-	(write_dependency_file): New function.
-	(main): Call it when --dependency-file was passed.
-	* ldfile.c (ldfile_try_open_bfd): Call track_dependency_files.
-	(ldfile_open_command_file_1): Likewise.
-	* ldelf.c (ldelf_try_needed): Likewise.
-	* pe-dll.c (pe_implied_import_dll): Likewise.
-
-2020-06-23  Alan Modra  <amodra@gmail.com>
-
-	PR 26150
-	* ldlang.c (ldlang_add_file): Assert that we aren't adding the
-	current end of link.next list again too.
-	* ldmain.c (add_archive_element): Don't load archive elements
-	again that have already been loaded.
-
-2020-06-23  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/shared.exp (pr14170): Clear xfail for
-	bfin-*-linux*.
-	(pr17068, symbolic-func.so, pr22374): Likewise.
-
-2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
-
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-01.d: Updated.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-02.d: Updated.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-03.d: Updated.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-04.d: Updated.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-05.d: Updated.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-06.d: Updated.
-
-2020-06-21  Alan Modra  <amodra@gmail.com>
-
-	* ldfile.c: Replace uses of ENABLE_PLUGINS with BFD_SUPPORTS_PLUGINS.
-	* ldlang.c: Likewise.
-	* ldlang.h: Likewise.
-	* ldlex.h: Likewise.
-	* ldmain.c: Likewise.
-	* lexsup.c: Likewise.
-	* plugin.c: Wrap body of file in #if BFD_SUPPORTS_PLUGINS.
-	* testplug.c: Likewise.
-	* testplug2.c: Likewise.
-	* testplug3.c: Likewise.
-	* testplug4.c: Likewise.
-	* configure.ac (ENABLE_PLUGINS): Don't define AM_CONTITIONAL.
-	* Makefile.am: Remove ENABLE_PLUGINS conditionals.
-	(PLUGIN_CFLAGS): Don't define.
-	(PLUGIN_C, PLUGIN_H, PLUGIN_OBJECT): Likewise.  Substitute all
-	uses with plugin file name.
-	* configure: Regenerate.
-	* Makefile.in: Regenerate.
-
-2020-06-20  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/lib/ld-lib.exp (default_ld_compile): Don't perror on
-	a compiler error.
-	(default_ld_assemble): Similarly for an assembler error.
-	(default_ld_nm): Similarly for an nm error.
-	(run_ld_link_tests): Report ld_assemble errors as a fail.
-	(check_as_cfi): Remove now unnecessary perror substitution.
-	* testsuite/ld-elf/exclude.exp: Report ld_nm error return as test
-	fails rather then unresolved.
-	* testsuite/ld-gc/gc.exp: Likewise.
-	* testsuite/ld-scripts/alignof.exp: Likewise.
-	* testsuite/ld-scripts/defined.exp: Likewise.
-	* testsuite/ld-scripts/script.exp: Likewise.
-	* testsuite/ld-scripts/sizeof.exp: Likewise.
-	* testsuite/ld-selective/selective.exp: Likewise.
-	* testsuite/ld-scripts/extern.exp: Likewise.  Return on ld_link
-	failure.
-	* testsuite/ld-elfweak/elfweak.exp: Report compiler errors as
-	test unresolved.
-	* testsuite/ld-fastcall/fastcall.exp: Report assember errors as
-	test fails.
-	* testsuite/ld-i386/i386.exp (iamcu_tests): Likewise.
-	* testsuite/ld-ia64/line.exp: Likewise.
-	* testsuite/ld-mep/mep.exp: Likewise.
-	* testsuite/ld-mips-elf/mips-elf-flags.exp: Likewise.
-	* testsuite/ld-nios2/nios2.exp: Likewise.
-	* testsuite/ld-scripts/alignof.exp: Likewise.
-	* testsuite/ld-x86-64/line.exp: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-scripts/log2.exp: Formatting.
-	* testsuite/ld-tic6x/tic6x.exp: Report ld_link errors as a test fail.
-
-2020-06-20  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-alpha/alpha.exp: Exclude *ecoff targets.
-	* testsuite/ld-elf/binutils.exp: Likewise.
-	* testsuite/ld-elf/tls.exp: Likewise.
-	* testsuite/ld-elf/tls_common.exp: Likewise.
-	* testsuite/ld-scripts/phdrs2.exp: Likewise.
-
-2020-06-20  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-sh/sh.exp: Don't run relax tests for non-ELF.
-	Fail when ld_assemble fails.  Use elseif to reduce indentation.
-
-2020-06-19  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/dynamic-1.rd: Accept st_other notations.
-	* testsuite/ld-elf/rdynamic-1.rd: Likewise.
-	* testsuite/ld-elf/pr9676.rd: Likewise.
-	* testsuite/ld-elf/pr9679.rd: Likewise.
-	* testsuite/ld-elfvers/vers30.dsym: Likewise.
-	* testsuite/ld-elfvers/vers31.dsym: Likewise.
-	* testsuite/ld-plugin/pr22983.1.d: Likewise.
-	* testsuite/ld-plugin/pr22983.2.d: Likewise.
-	* testsuite/ld-plugin/pr22983.3.d: Likewise.
-	* testsuite/ld-plugin/pr22983.4.d: Likewise.
-	* testsuite/ld-ifunc/ifunc.exp: Exclude alpha.
-
-2020-06-19  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/elf.em (gld${EMULATION_NAME}_handle_option): Omit
-	-z relro and -z norelro when target support for GNU_RELRO is lacking.
-	(gld${EMULATION_NAME}_before_parse): Ignore RELRO default too.
-	* emultempl/aarch64elf.em (gld${EMULATION_NAME}_before_parse): Ignore
-	RELRO default when target support for GNU_RELRO is lacking.
-	* emultempl/armelf.em (gld${EMULATION_NAME}_before_parse): Likewise.
-	* emultempl/linux.em (gld${EMULATION_NAME}_before_parse): Likewise.
-	* emultempl/scoreelf.em (gld${EMULATION_NAME}_before_parse): Likewise.
-	* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.
-	* testsuite/ld-elf/pr16322.d: xfail when no relro support.
-	* testsuite/ld-elf/pr22393-1a.d: Likewise.
-	* testsuite/ld-elf/pr22393-1b.d: Likewise.
-	* testsuite/ld-elf/shared.exp (pr20995-2.so, pr20995-2): Likewise.
-	* testsuite/lib/ld-lib.exp (run_ld_link_tests): Use check_relro_support
-	to decide whether to pass extra ld option "-z norelro".
-
-2020-06-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/linux-x86.exp (check_pr25749a): Append "-w"
-	to cflags.
-
-2020-06-17  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/linux-x86.exp: Require GCC 5 for Build
-	pr25749-1b (-pie -fPIE).
-
-2020-06-16  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/pr23428.c: Define _DEFAULT_SOURCE.
-	* testsuite/ld-elf/indirect1b.c: Replace asm with __asm__.
-	* testsuite/ld-elf/indirect2.c: Likewise.
-	* testsuite/ld-elf/indirect3b.c: Likewise.
-	* testsuite/ld-elf/indirect4b.c: Likewise.
-	* testsuite/ld-elf/pr14323-2.c: Likewise.
-	* testsuite/ld-elf/pr18720b.c: Likewise.
-	* testsuite/ld-elf/pr19553c.c: Likewise.
-	* testsuite/ld-elf/pr23428.c: Likewise.
-	* testsuite/ld-elfvers/vers27b.c: Likewise.
-	* testsuite/ld-elfvsb/common.c: Likewise.
-	* testsuite/ld-elfvsb/main.c: Likewise.
-	* testsuite/ld-elfvsb/sh1.c: Likewise.
-	* testsuite/ld-elfvsb/test.c: Likewise.
-	* testsuite/ld-pe/aligncomm-1.c: Likewise.
-	* testsuite/ld-pe/aligncomm-2.c: Likewise.
-	* testsuite/ld-pe/aligncomm-3.c: Likewise.
-	* testsuite/ld-pe/aligncomm-4.c: Likewise.
-	* testsuite/ld-plugin/pr23958.c: Likewise.
-	* testsuite/ld-size/size-1b.c: Likewise.
-	* testsuite/ld-size/size-2b.c: Likewise.
-	* testsuite/ld-size/size-3a.c: Likewise.
-	* testsuite/ld-size/size-3b.c: Likewise.
-	* testsuite/ld-size/size-3c.c: Likewise.
-	* testsuite/ld-size/size-4b.c: Likewise.
-	* testsuite/ld-size/size-5b.c: Likewise.
-	* testsuite/ld-size/size-6a.c: Likewise.
-	* testsuite/ld-size/size-7a.c: Likewise.
-	* testsuite/ld-size/size-8a.c: Likewise.
-	* testsuite/ld-size/size-9b.c: Likewise.
-	* testsuite/ld-size/size-10b.c: Likewise.
-
-2020-06-16  Alan Modra  <amodra@gmail.com>
-
-	* emulparams/tic30aout.sh: Delete file.
-	* scripttempl/tic30aout.sc: Delete file.
-	* Makefile.am: Remove etic30aout.c from ALL_EMULATION_SOURCES and
-	delete dependency.
-	* configure.tgt: Delete tic30-*-*aout* entry.
-	* testsuite/ld-scripts/sane1.d: Delete tic30-*-aout mention.
-	* testsuite/ld-scripts/segment-start.d: Likewise.
-	* Makefile.in: Regenerate.
-	* po/BLD-POTFILES.in: Regenerate.
-
-2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* emultempl/xtensaelf.em (XSHAL_ABI): Remove macro definition.
-	(XTHAL_ABI_UNDEFINED, XTHAL_ABI_WINDOWED, XTHAL_ABI_CALL0): New
-	macros.
-	(elf32xtensa_abi): New declaration.
-	(xt_config_info_unpack_and_check): Set elf32xtensa_abi if it is
-	undefined.  Use xtensa_abi_choice instead of XSHAL_ABI to test
-	ABI tag consistency.
-	(xtensa_add_config_info): Use xtensa_abi_choice instead of
-	XSHAL_ABI to format ABI tag.
-	(PARSE_AND_LIST_PROLOGUE): Define OPTION_ABI_WINDOWED,
-	OPTION_ABI_CALL0 and declare elf32xtensa_abi.
-	(PARSE_AND_LIST_LONGOPTS): Add entries for --abi-windowed and
-	--abi-call0.
-	(PARSE_AND_LIST_OPTIONS): Add help text for --abi-windowed and
-	--abi-call0.
-	(PARSE_AND_LIST_ARGS_CASES): Add handlers for --abi-windowed and
-	--abi-call0.
-	* ld.texi: Add description for options --abi-windowed and
-	--abi-call0.
-
-2020-06-15  Roland McGrath  <mcgrathr@google.com>
-
-	* NEWS: Mention -z start-stop-visibility=... option for ELF.
-	* ld.texi (Options): Document -z start-stop-visibility=... option.
-	* ldmain.c (main): Initialize link_info.start_stop_visibility.
-	* emultempl/elf.em (gld${EMULATION_NAME}_handle_option):
-	Parse -z start-stop-visibility=... option.
-
-2020-06-15  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-scripts/include.exp: Don't load ld-lib.exp.
-	* testsuite/ld-scripts/phdrs3.exp: Likewise.
-	* testsuite/ld-scripts/rgn-at.exp: Likewise.
-	* testsuite/ld-scripts/rgn-over.exp: Likewise.
-	* testsuite/ld-scripts/sort.exp: Likewise.
-	* testsuite/ld-discard/discard.exp: Likewise.  Use is_elf_format.
-
-2020-06-15  Alan Modra  <amodra@gmail.com>
-
-	PR 26103
-	* testsuite/ld-linkonce/ref1.s,
-	* testsuite/ld-linkonce/ref2.s,
-	* testsuite/ld-linkonce/sym1.s,
-	* testsuite/ld-linkonce/sym2.s,
-	* testsuite/ld-linkonce/sym3.s: New test files.
-	* testsuite/ld-linkonce/linkonce.exp: Run tests for PE too.
-	Add pr26103 test.  Remove unnecessary load_lib.
-
-2020-06-15  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-linkonce/zeroeh_x.s: Rename from x.s.
-	* testsuite/ld-linkonce/zeroeh_y.s: Rename from y.s.
-	* testsuite/ld-linkonce/zeroehl32.d: Adjust for renaming.  Support
-	big-endian output.  Run for powerpc.
-
-2020-06-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-plugin/lto.exp (lto_link_tests): Move lto-6,
-	pr12760, pr23818 and pr23958 tests to..
-	(lto_link_elf_tests): ..here.
-
-2020-06-11  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/ld-elf/pr26094-1b.c (main): Change return type to
-	int.
-
-2020-06-10  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/linux-x86.exp: Build tests when non-native.
-	(check_pr25749b): Add optional args.  Set expected pass file
-	from args.  Run -1b and -2a tests with passall.out.
-	* testsuite/ld-elf/passall.out: New file.
-	* testsuite/ld-elf/pr25749-1.c: Adjust to pass with older glibc.
-	* testsuite/ld-elf/pr25749-2.c: Likewise.
-	* testsuite/lib/ld-lib.exp (run_ld_link_exec_tests): Use
-	regexp_diff to compare expected output from running binary.
-
-2020-06-10  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26094
-	* testsuite/ld-elf/pr26094-1.ver: New fike.
-	* testsuite/ld-elf/pr26094-1a.c: Likewise.
-	* testsuite/ld-elf/pr26094-1a.rd: Likewise.
-	* testsuite/ld-elf/pr26094-1b.c: Likewise.
-	* testsuite/ld-elf/pr26094-1b.rd: Likewise.
-	* testsuite/ld-elf/pr26094-1c.c: Likewise.
-	* testsuite/ld-elf/shared.exp: Run ld/26094 tests.
-
-2020-06-09  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/18801
-	* testsuite/ld-i386/i386.exp: Run ifunc-textrel-1a,
-	ifunc-textrel-1b, ifunc-textrel-2a and ifunc-textrel-2b.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-i386/ifunc-textrel-1a.d: Likewise.
-	* testsuite/ld-i386/ifunc-textrel-1b.d: Likewise.
-	* testsuite/ld-i386/ifunc-textrel-2a.d: Likewise.
-	* testsuite/ld-i386/ifunc-textrel-2b.d: Likewise.
-	* testsuite/ld-x86-64/ifunc-textrel-1.s: Likewise.
-	* testsuite/ld-x86-64/ifunc-textrel-1a.d: Likewise.
-	* testsuite/ld-x86-64/ifunc-textrel-1b.d: Likewise.
-	* testsuite/ld-x86-64/ifunc-textrel-2.s: Likewise.
-	* testsuite/ld-x86-64/ifunc-textrel-2a.d: Likewise.
-	* testsuite/ld-x86-64/ifunc-textrel-2b.d: Likewise.
-	* testsuite/ld-i386/pr18801a.d: Expect warning for IFUNC
-	resolvers.
-	* testsuite/ld-i386/pr18801b.d: Likewise.
-	* estsuite/ld-x86-64/pr18801a.d: Likewise.
-	* estsuite/ld-x86-64/pr18801b.d: Likewise.
-
-2020-06-09  Alan Modra  <amodra@gmail.com>
-
-	PR 26065
-	* testsuite/ld-elf/shared.exp: Compile dl4main.c -fPIC.
-	(dl4e, dl4f): Expect dl4a.out.
-	* testsuite/ld-elf/dl4e.out: Delete.
-
-2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/shared.exp: Pass $LFLAGS to PR ld/21703
-	shared test.
-
-2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/shared.exp: Xfail pr20995/pr20995-2 for
-	tic6x-*-*.
-
-2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/pr11304.d: Skip tic6x-*-elf.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/comm-data.exp: Don't xfail arm or bfin-linux.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* lexsup.c (ld_options): Accept -plugin and -plugin-opt when
-	!ENABLE_PLUGINS.
-	* testsuite/lib/ld-lib.exp (check_plugin_api_available): Adjust.
-
-2020-06-05  Nelson Chu  <nelson.chu@sifive.com>
-
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec.d: Rename to
-	attr-merge-priv-spec-01.d.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-c.s: Set spec to 1.11.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-d.s: Empty priv spec set.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-02.d: New testcase.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-03.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-02.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-03.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-04.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-05.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-06.d: Likewise.
-	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Updated.
-
-2020-06-05  Nelson Chu  <nelson.chu@sifive.com>
-
-	* testsuite/ld-riscv-elf/attr-merge-arch-01.d: The CSR isn't used,
-	so ignore the -mpriv-spec setting.
-	* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-stack-align.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-01.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-02.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-03.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-04.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-05.d: Likewise.
-	* testsuite/ld-riscv-elf/call-relax.d: Add -mno-arch-attr.
-
-2020-06-04  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26080
-	* testsuite/ld-elf/comm-data.exp: Remove copy_reloc.
-	* testsuite/ld-elf/comm-data2r.rd: Removed.
-	* testsuite/ld-elf/comm-data2r.sd: Likewise.
-	* testsuite/ld-elf/comm-data2r.xd: Likewise.
-
-2020-06-04  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/config/default.exp: Remove global directive outside
-	proc body.
-	* testsuite/ld-bootstrap/bootstrap.exp: Likewise.
-	* testsuite/ld-elf/compress.exp: Likewise.
-	* testsuite/ld-elf/elf.exp: Likewise.
-	* testsuite/ld-elf/exclude.exp: Likewise.
-	* testsuite/ld-elf/frame.exp: Likewise.
-	* testsuite/ld-elf/indirect.exp: Likewise.
-	* testsuite/ld-elf/linux-x86.exp: Likewise.
-	* testsuite/ld-elf/shared.exp: Likewise.
-	* testsuite/ld-elf/tls.exp: Likewise.
-	* testsuite/ld-elf/tls_common.exp: Likewise.
-	* testsuite/ld-elfcomm/elfcomm.exp: Likewise.
-	* testsuite/ld-elfweak/elfweak.exp: Likewise.
-	* testsuite/ld-frv/fdpic.exp: Likewise.
-	* testsuite/ld-frv/tls.exp: Likewise.
-	* testsuite/ld-gc/gc.exp: Likewise.
-	* testsuite/ld-i386/i386.exp: Likewise.
-	* testsuite/ld-i386/no-plt.exp: Likewise.
-	* testsuite/ld-ifunc/ifunc.exp: Likewise.
-	* testsuite/ld-mips-elf/mips-elf-flags.exp: Likewise.
-	* testsuite/ld-nios2/nios2.exp: Likewise.
-	* testsuite/ld-plugin/lto.exp: Likewise.
-	* testsuite/ld-plugin/plugin.exp: Likewise.
-	* testsuite/ld-powerpc/export-class.exp: Likewise.
-	* testsuite/ld-scripts/align.exp: Likewise.
-	* testsuite/ld-scripts/crossref.exp: Likewise.
-	* testsuite/ld-scripts/defined.exp: Likewise.
-	* testsuite/ld-scripts/overlay-size.exp: Likewise.
-	* testsuite/ld-scripts/provide.exp: Likewise.
-	* testsuite/ld-scripts/weak.exp: Likewise.
-	* testsuite/ld-selective/selective.exp: Likewise.
-	* testsuite/ld-sh/rd-sh.exp: Likewise.
-	* testsuite/ld-size/size.exp: Likewise.
-	* testsuite/ld-srec/srec.exp: Likewise.
-	* testsuite/ld-x86-64/mpx.exp: Likewise.
-	* testsuite/ld-x86-64/no-plt.exp: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-
-2020-06-04  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-dynamic/export-dynamic-symbol-2.d: Match output for
-	mips-sgi-irix6.
-	* testsuite/ld-dynamic/export-dynamic-symbol-glob.d: Likewise.
-	* testsuite/ld-dynamic/export-dynamic-symbol-list-2.d: Likewise.
-	* testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d: Likewise.
-	* testsuite/ld-dynamic/export-dynamic-symbol.exp: Exclude targets
-	with poor PIE support.
-
-2020-06-04  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-plugin/lto.exp (pr12758.exe): Add NOPIE_LDFLAGS.
-	* testsuite/ld-unique/unique.exp: Add NOPIE_LDFLAGS to unique
-	executable and dynamic executable tests.
-
-2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/config/default.exp (NOSANTIZE_CFLAGS): New.
-	* testsuite/ld-elf/linux-x86.exp: Add $NOSANTIZE_CFLAGS to
-	tests with run_ld_link_exec_tests.
-	* testsuite/ld-elf/shared.exp: Add $NOSANTIZE_CFLAGS to tests
-	with run_ld_link_tests.
-	* testsuite/ld-elf/tls.exp: Likewise.
-	* testsuite/ld-elfweak/elfweak.exp: Add $NOSANTIZE_CFLAGS to
-	tests with ld_link.
-	* testsuite/ld-gc/gc.exp: Add $NOSANTIZE_CFLAGS to cflags.
-	* testsuite/ld-plugin/lto.exp: Add $NOSANTIZE_CFLAGS to tests
-	with run_ld_link_tests.a
-	* testsuite/ld-plugin/plugin.exp: Append $NOSANTIZE_CFLAGS to
-	CFLAGS.
-	* testsuite/ld-selective/selective.exp: Add $NOSANTIZE_CFLAGS
-	to cflags and cxxflags.
-	* testsuite/ld-srec/srec.exp: Append $NOSANTIZE_CFLAGS to CC
-	and CXX.
-	* testsuite/ld-x86-64/plt-main-ibt-x32.dd: Updated for
-	-fsanitize=undefined.
-	* testsuite/ld-x86-64/plt-main-ibt.dd: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Add $NOSANTIZE_CFLAGS to
-	tests with run_cc_link_tests and run_ld_link_tests.
-
-2020-06-03  Fangrui Song  <maskray@google.com>
-	    H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25910
-	* NEWS: Mention --export-dynamic-symbol[-list].
-	* ld.texi: Document --export-dynamic-symbol[-list].
-	* ldgram.y: Pass current_dynamic_list_p to
-	lang_append_dynamic_list.
-	* ldlang.c (current_dynamic_list_p): New.
-	(ang_append_dynamic_list): Updated to take a pointer to
-	struct bfd_elf_dynamic_list * argument instead of using
-	link_info.dynamic_list.
-	(lang_append_dynamic_list_cpp_typeinfo): Pass
-	&link_info.dynamic_list to ang_append_dynamic_list.
-	(lang_append_dynamic_list_cpp_new): Likewise.
-	* ldlang.h (current_dynamic_list_p): New.
-	(lang_append_dynamic_list): Add a pointer to
-	struct bfd_elf_dynamic_list * argument.
-	* ldlex.h (option_values): Add OPTION_EXPORT_DYNAMIC_SYMBOL and
-	OPTION_EXPORT_DYNAMIC_SYMBOL_LIST.
-	* lexsup.c (ld_options): Add entries for
-	OPTION_EXPORT_DYNAMIC_SYMBOL and
-	OPTION_EXPORT_DYNAMIC_SYMBOL_LIST.
-	(parse_args): Handle --export-dynamic-symbol and
-	--export-dynamic-symbol-list.
-	* testsuite/ld-dynamic/export-dynamic-symbol-1.d: New.
-	* testsuite/ld-dynamic/export-dynamic-symbol-2.d: New.
-	* testsuite/ld-dynamic/export-dynamic-symbol-glob.d: New.
-	* testsuite/ld-dynamic/export-dynamic-symbol-list-1.d: New.
-	* testsuite/ld-dynamic/export-dynamic-symbol-list-2.d: New.
-	* testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d: New.
-	* testsuite/ld-dynamic/export-dynamic-symbol.exp: New.
-	* testsuite/ld-dynamic/export-dynamic-symbol.s: New.
-	* testsuite/ld-dynamic/foo-bar.list: New.
-	* testsuite/ld-dynamic/foo.list: New.
-	* testsuite/ld-dynamic/foo.s: New.
-	* testsuite/ld-dynamic/fstar.list: New.
-	* testsuite/ld-elf/dlempty.list: New.
-	* testsuite/ld-elf/shared.exp: Add tests for
-	--export-dynamic-symbol and --export-dynamic-symbol-list.
-
-2020-06-03  Jan Beulich  <jbeulich@suse.com>
-
-	* testsuite/ld-elf/linux-x86.exp: Make copied source files
-	writeable.
-
-2020-05-28  Nick Clifton  <nickc@redhat.com>
-
-	PR 26047
-	* ldelf.c (ldelf_after_open): Fail if attempting to link one
-	executable into another.  Ensure that the test is made for all
-	forms of linking.
-
-2020-05-28  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* NEWS: Mention --enable-textrel-check=yes is default for
-	Linux/x86 targets.
-	* configure.tgt (ac_default_ld_textrel_check): Set to yes if
-	unset for Linux/x86 targets.
-
-2020-05-28  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/20824
-	* NEWS: Mention --enable-textrel-check=[no|yes|warning|error].
-	* configure.ac: Add --enable-textrel-check=[no|yes|warning|error].
-	(DEFAULT_LD_TEXTREL_CHECK): New AC_DEFINE_UNQUOTED.
-	(DEFAULT_LD_TEXTREL_CHECK_WARNING): Likewise.
-	* ldmain.c (main): Initialize link_info.textrel_check to
-	DEFAULT_LD_TEXTREL_CHECK.
-	* lexsup.c (ld_options): Check DEFAULT_LD_TEXTREL_CHECK_WARNING.
-	* config.in: Regenerated.
-	* configure: Likewise.
-
-2020-05-28  Nick Clifton  <nickc@redhat.com>
-
-	* lexsup.c (parse_args): Generate an error if a name is not
-	provided to the -Map option.
-	(ld_options): Mention that the -Map option supports a directory
-	name as an argument.
-	* NEWS: Remove mention of support for an empty string as an
-	argument to -Map.
-	* ld.texi: Likewise.
-
-2020-05-27  Hans-Peter Nilsson  <hp@axis.com>
-
-	PR ld/22909
-	* testsuite/ld-elf/pr19539.d: Don't xfail for cris*-*-*.
-
-2020-05-27  Rasmus Villemoes <rv@rasmusvillemoes.dk>
-	    Nick Clifton  <nickc@redhat.com>
-
-	* lexsup.c (parse_args): If the map filename is defined but empty
-	create a name based upon the output file name.  If the name is
-	defined but refers to a directory create a file inside the
-	directory based on the output file name.
-	* ld.texi: Document the new feature.
-	* testsuite/ld-script/map-address.exp: Add test of new feature.
-	* NEWS: Mention the new feature.
-
-2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/22909
-	* NEWS: Mention --warn-textrel.
-	* ld.texi: Update -z text/notext/textoff.  Add --warn-textrel.
-	Remove --warn-shared-textrel.
-	* ldlex.h (option_values): Rename OPTION_WARN_SHARED_TEXTREL to
-	OPTION_WARN_TEXTREL.
-	* lexsup.c (ld_options): Add --warn-textrel.  Obsolete
-	--warn-shared-textrel.
-	(parse_args): Updated.
-	(elf_shlib_list_options): Check link_info.textrel_check.
-	* emultempl/elf.em: Updated.
-	* testsuite/ld-elf/pr19539.d: Replace -z notext with
-	--warn-textrel.  Expect a warning.
-	* testsuite/ld-i386/warn1.d: Update expected warning.
-
-2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-ifunc/ifunc-23a-x86.d: Skip *-*-lynxos *-*-nto*.
-	* testsuite/ld-ifunc/ifunc-24a-x86.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-25a-x86.d: Likewise.
-
-2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-x86-64/x86-64.exp: Pass -z notext to linker.
-
-2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/eh6.d: Pass -z notext to linker.
-	* testsuite/ld-elf/ehdr_start-shared.d: Likewise.
-	* testsuite/ld-elf/pr19539.d: Likewise.
-	* testsuite/ld-elfvers/vers.exp: Likewise.
-	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
-	* testsuite/ld-i386/i386.exp: Likewise.
-	* testsuite/ld-i386/nogot1.d: Likewise.
-	* testsuite/ld-i386/pr19539.d: Likewise.
-	* testsuite/ld-i386/pr19636-2a.d: Likewise.
-	* testsuite/ld-i386/pr19636-2b.d: Likewise.
-	* testsuite/ld-i386/pr19636-2c.d: Likewise.
-	* testsuite/ld-i386/pr19636-2d.d: Likewise.
-	* testsuite/ld-i386/pr19636-2e.d: Likewise.
-	* testsuite/ld-i386/pr19636-3d.d: Likewise.
-	* testsuite/ld-i386/pr19636-3e.d: Likewise.
-	* testsuite/ld-i386/pr19939b.d: Likewise.
-	* testsuite/ld-i386/undefweaka.d: Likewise.
-	* testsuite/ld-i386/undefweakb.d: Likewise.
-	* testsuite/ld-shared/shared.exp: Likewise.
-	* testsuite/ld-size/size.exp: Likewise.
-	* testsuite/ld-unique/unique.exp: Likewise.
-	* testsuite/ld-x86-64/pie1.d: Likewise.
-	* testsuite/ld-x86-64/pr19539a.d: Likewise.
-	* testsuite/ld-x86-64/pr19539b.d: Likewise.
-	* testsuite/ld-x86-64/pr19636-1d.d: Likewise.
-	* testsuite/ld-x86-64/pr19636-1e.d: Likewise.
-	* testsuite/ld-x86-64/pr19807-1a.d: Likewise.
-	* testsuite/ld-x86-64/pr19807-1b.d: Likewise.
-	* testsuite/ld-x86-64/pr19807-2b.d: Likewise.
-	* testsuite/ld-x86-64/pr19807-2c.d: Likewise.
-	* testsuite/ld-x86-64/pr19807-2d.d: Likewise.
-	* testsuite/ld-x86-64/pr19807-2e.d: Likewise.
-	* testsuite/ld-x86-64/pr19939b.d: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-
-2020-05-24  Fangrui Song <maskray@google.com>
-
-	PR ld/26018
-	* lexsup.c (parse_args): Simplify.
-	* testsuite/ld-elf/dl4e.out: New.
-	* testsuite/ld-elf/shared.exp: Updated for PR ld/26018 tests.
-
-2020-05-23  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/26018
-	* testsuite/ld-i386/i386.exp: Add a -Bsymbolic-functions test.
-	* testsuite/ld-x86-64/x86-64.exp: Likewise.
-	* testsuite/ld-i386/pr26018.d: New file.
-	* testsuite/ld-x86-64/pr26018.d: Likewise.
-	* testsuite/ld-x86-64/pr26018.s: Likewise.
-
-2020-05-21  Alan Modra  <amodra@gmail.com>
-
-	* deffilep.y: Replace "if (x) free (x)" with "free (x)" thoughout.
-	* emultempl/elf.em: Likewise.
-	* emultempl/msp430.em: Likewise.
-	* emultempl/pe.em: Likewise.
-	* emultempl/pep.em: Likewise.
-	* emultempl/ppc64elf.em: Likewise.
-	* emultempl/xtensaelf.em: Likewise.
-	* ldelf.c: Likewise.
-	* ldfile.c: Likewise.
-	* ldmain.c: Likewise.
-	* ldmisc.c: Likewise.
-	* lexsup.c: Likewise.
-	* pe-dll.c: Likewise.
-
-2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
-
-	* testsuite/ld-riscv-elf/attr-merge-arch-01.d: Updated
-        priv attributes according to the -mpriv-spec option.
-	* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-priv-spec.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-stack-align.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-01.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-02.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-03.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-04.d: Likewise.
-	* testsuite/ld-riscv-elf/attr-merge-strict-align-05.d: Likewise.
-
-2020-05-20  Alan Modra  <amodra@gmail.com>
-
-	PR 25993
-	* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Don't copy
-	other_bfd_filename for bfd_set_filename, and test result of
-	bfd_set_filename call.  Don't create a new is->filename, simply
-	copy from bfd filename.  Free new_name after bfd_set_filename.
-	* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.
-
-2020-05-19  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>
-
-	* testsuite/ld-aarch64/aarch64-elf.exp: New test
-	emit-relocs-560.
-	* testsuite/ld-aarch64/emit-relocs-560.d: New file.
-	* testsuite/ld-aarch64/emit-relocs-560.s: New file.
-
-2020-05-19  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/beos.em (sort_by_file_name): Use bfd_get_filename
-	rather than accessing bfd->filename directly.
-	* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Likewise.
-	* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.
-	* emultempl/spuelf.em (embedded_spu_file): Likewise.
-	* ldlang.c (input_statement_is_archive_path, wild_sort),
-	(check_excluded_libs): Likewise.
-	* ldmain.c (add_archive_element): Likewise.
-	* ldmisc.c (vfinfo): Likewise.
-	* pe-dll.c (auto_export, generate_edata, pe_create_import_fixup),
-	(pe_dll_generate_implib, pe_process_import_defs): Likewise.
-	* plugin.c (plugin_object_p): Likewise.
-
-2020-05-18  Douglas B Rupp  <rupp@adacore.com>
-
-	* ldemul.h (ldemul_print_symbol): New.
-	(ld_emulation_xfer_type) <print_symbol): Likewise.
-	* ldemul.c (ldemul_print_symbol): New.
-	* ldlang.c (SECTION_NAME_MAP_LANGTH): Move to ...
-	(print_one_symbol): Make global and move declaration to ...
-	(print_all_symbols): Rename print_one_symbol to ldemul_print_symbol
-	(print_input_section): Likewise
-	* ldlang.h: ... here.
-	* emultempl/aix.em (gld${EMULATION_NAME}_print_symbol): New.
-	(ld_emulation_xfer_struct): Use it.
-	* emultempl/armcoff.em (ld_emulation_xfer_struct): Add print_symbol
-	and default to NULL.
-	* emultempl/beos.em (ld_emulation_xfer_struct): Likewise
-	* emultempl/elf.em (ld_emulation_xfer_struct): Likewise
-	* emultempl/generic.em (ld_emulation_xfer_struct): Likewise
-	* emultempl/linux.em (ld_emulation_xfer_struct): Likewise
-	* emultempl/msp430.em (ld_emulation_xfer_struct): Likewise
-	* emultempl/pe.em (ld_emulation_xfer_struct): Likewise
-	* emultempl/pep.em (ld_emulation_xfer_struct): Likewise
-	* emultempl/ticoff.em (ld_emulation_xfer_struct): Likewise
-	* emultempl/vanilla.em (ld_emulation_xfer_struct): Likewise
-
-2020-05-18  Sergei Trofimovich  <siarheit@google.com>
-
-	* ldmain.c (add_archive_element): Fix s/claimi/claim/ typo
-	in info message.
-
-2020-05-18  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Update Swedish translation.
-
-2020-05-18  Nick Clifton  <nickc@redhat.com>
-
-	PR 25993
-	* emultempl/pe.em (_after_open): Check for duplicate filename
-	pointers before renaming the dll.
-	* emultempl/pep.em (_after_open): Likewise.
-
-2020-05-13  Nick Clifton  <nickc@redhat.com>
-
-	PR 25979
-	* lexsup.c (elf_shlib_list_options): Include the default value for
-	the hash style in the output text.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/pcrelopt.s: Add lxvp and stxvp.
-	* testsuite/ld-powerpc/pcrelopt.d: Update.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/callstub-1.d: Use -mpower10/-Mpower10 in
-	place of -mfuture/-Mfuture.
-	* testsuite/ld-powerpc/notoc2.d: Likewise.
-	* testsuite/ld-powerpc/powerpc.exp: Likewise.
-	* testsuite/ld-powerpc/tlsgd.d: Likewise.
-	* testsuite/ld-powerpc/tlsie.d: Likewise.
-	* testsuite/ld-powerpc/tlsld.d: Likewise.
-
-2020-05-11  Nick Clifton  <nickc@redhat.com>
-
-	* po/es.po: Updated Spanish translation.
-
-2020-05-01  Wilco Dijkstra  <wdijkstr@arm.com>
-
-	PR ld/25665
-	* testsuite/ld-aarch64/farcall-group.s: New large group test.
-	* testsuite/ld-aarch64/farcall-group.d: New test driver.
-	* testsuite/ld-aarch64/aarch64-elf.exp: Run the new test.
-
-2020-05-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>
 
-	PR 25882
-	* ldlang.c (lang_check): Call bfd_merge_private_bfd_data for
-	shared libraries.
-
-2020-05-01  Alan Modra  <amodra@gmail.com>
-
-	* po/BLD-POTFILES.in: Regenerate.
-
-2020-04-30  Alex Coplan  <alex.coplan@arm.com>
-
-	* testsuite/ld-aarch64/erratum843419_tls_ie.d: Use udf in disassembly.
-	* testsuite/ld-aarch64/farcall-b-section.d: Likewise.
-	* testsuite/ld-aarch64/farcall-back.d: Likewise.
-	* testsuite/ld-aarch64/farcall-bl-section.d: Likewise.
-
-2020-04-30  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/ld-elf/compress1c.d: XFAIL if thet target linker does
-	not support the -shared command line option.
-	* /ld-elf/compressed1c.d: Likewise.
-	* /ld-elf/compressed1e.d: Likewise.
-	* /ld-elf/dynamic1.d: Likewise.
-	* /ld-elf/dynsym1.d: Likewise.
-	* /ld-elf/ehdr_start-shared.d: Likewise.
-	* /ld-elf/exclude3b.d: Likewise.
-	* /ld-elf/global1.d: Likewise.
-	* /ld-elf/hash.d: Likewise.
-	* /ld-elf/local1.d: Likewise.
-	* /ld-elf/mbind1b.d: Likewise.
-	* /ld-elf/now-1.d: Likewise.
-	* /ld-elf/now-2.d: Likewise.
-	* /ld-elf/now-3.d: Likewise.
-	* /ld-elf/now-4.d: Likewise.
-	* /ld-elf/pr12975.d: Likewise.
-	* /ld-elf/pr13177.d: Likewise.
-	* /ld-elf/pr13195.d: Likewise.
-	* /ld-elf/pr16322.d: Likewise.
-	* /ld-elf/pr16498a.d: Likewise.
-	* /ld-elf/pr16498b.d: Likewise.
-	* /ld-elf/pr17615.d: Likewise.
-	* /ld-elf/pr19162.d: Likewise.
-	* /ld-elf/pr19698.d: Likewise.
-	* /ld-elf/pr20513c.d: Likewise.
-	* /ld-elf/pr20513d.d: Likewise.
-	* /ld-elf/pr21389a.d: Likewise.
-	* /ld-elf/pr21389b.d: Likewise.
-	* /ld-elf/pr21389c.d: Likewise.
-	* /ld-elf/pr21562a.d: Likewise.
-	* /ld-elf/pr21562b.d: Likewise.
-	* /ld-elf/pr21562c.d: Likewise.
-	* /ld-elf/pr21562d.d: Likewise.
-	* /ld-elf/pr21562e.d: Likewise.
-	* /ld-elf/pr21562f.d: Likewise.
-	* /ld-elf/pr21562g.d: Likewise.
-	* /ld-elf/pr21562h.d: Likewise.
-	* /ld-elf/pr21562i.d: Likewise.
-	* /ld-elf/pr21562j.d: Likewise.
-	* /ld-elf/pr21562k.d: Likewise.
-	* /ld-elf/pr21562l.d: Likewise.
-	* /ld-elf/pr21562m.d: Likewise.
-	* /ld-elf/pr21562n.d: Likewise.
-	* /ld-elf/pr21903a.d: Likewise.
-	* /ld-elf/pr21903b.d: Likewise.
-	* /ld-elf/pr22269b.d: Likewise.
-	* /ld-elf/pr22393-1a.d: Likewise.
-	* /ld-elf/pr22393-1b.d: Likewise.
-	* /ld-elf/pr23658-1c.d: Likewise.
-	* /ld-elf/pr25708.d: Likewise.
-	* /ld-elf/rpath-1.d: Likewise.
-	* /ld-elf/rpath-2.d: Likewise.
-	* /ld-elf/runpath-1.d: Likewise.
-	* /ld-elf/runpath-2.d: Likewise.
-	* /ld-elf/sizeofb.d: Likewise.
-	* /ld-elf/startofb.d: Likewise.
-	* /ld-elf/strtab.d: Likewise.
-	* /ld-elf/textaddr2.d: Likewise.
-	* /ld-elf/textaddr5.d: Likewise.
-	* /ld-elf/textaddr6.d: Likewise.
-	* /ld-elf/unknown2.d: Likewise.
-	* /ld-undefined/entry-3.d: Likewise.
-	* /ld-undefined/entry-4.d: Likewise.
-	* /ld-elf/mbind1c.d: XFAIL if the target linker does not support
-	the -pie option.
-	* /ld-elf/pie.d: Likewise.
-	* /ld-elf/pr19539.d: Likewise.
-	* /ld-elf/pr21903d.d: Likewise.
-	* /ld-elf/pr22269a.d: Likewise.
-	* /ld-elf/pr22393-1c.d: Likewise.
-	* /ld-elf/pr22393-1d.d: Likewise.
-	* /ld-elf/pr22423.d: Likewise.
-	* /ld-elf/loadaddr1.d: Expect to fail on the rx-linux target.
-	* /ld-elf/loadaddr2.d: Likewise.
-	* /ld-elf/pr22393-1e.d: Likewise.
-	* /ld-elf/pr22393-1f.d: Likewise.
-	* /ld-elf/textaddr1.d: Likewise.
-	* /ld-elf/textaddr4.d: Likewise.
-
-2020-04-30  Yoshinori Sato <ysato@users.sourceforge.jp>
-
-	* emulparams/elf32rx_linux.sh: New rx-linux emulation.
-	* emultempl/rxlinux.em: New.
-	* configure.tgt: Add rx-linux.
-	* Makefile.am: Add eelf32rx_linux.c
-	* Makefile.in: Regenerate.
-
-2020-04-29  Max Filippov  <jcmvbkbc@gmail.com>
-
-	* testsuite/ld-xtensa/relax-diff1.d: New test definition.
-	* testsuite/ld-xtensa/relax-diff1.s: New test source.
-	* testsuite/ld-xtensa/relax-ndiff.d: New test definition.
-	* testsuite/ld-xtensa/relax-ndiff.s: New test source.
-	* testsuite/ld-xtensa/xtensa.exp: (relax-diff1)
-	(relax-ndiff): New tests.
-
-2020-04-29  Stephen Casner  <casner@acm.org>
-
-	PR 25829
-	* testsuite/ld-scripts/default-script.exp: Add --image-base=0 to
-	LDFLAGS for targets *-*-mingw64 x86_64-*-cygwin.
-	* testsuite/ld-scripts/default-script1.d: No longer have to skip
-	test for those targets.
-	* testsuite/ld-scripts/default-script2.d: Likewise.
-	* testsuite/ld-scripts/default-script3.d: Likewise.
-	* testsuite/ld-scripts/default-script4.d: Likewise.
-
-2020-04-27  Tamar Christina  <tamar.christina@arm.com>
-
-	* pe-dll.c (pe_detail_list):  Add pe-bigobj-i386.
-
-2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
-
-	PR ld/25861
-	* testsuite/ld-xtensa/relax-loc.d: New test definition.
-	* testsuite/ld-xtensa/relax-loc.s: New test source.
-	* testsuite/ld-xtensa/xtensa.exp (relax-loc): New test.
-
-2020-04-22  Fangrui Song <maskray@google.com>
-
-	PR ld/25806
-	* ldlang.h (struct lang_input_statement_struct): Add extra_search_path.
-	* ldlang.c (current_input_file): New.
-	(ldirname): New.
-	(new_afile): Add from_filename parameter.  Set extra_search_path.
-	(lang_add_input_file): Pass current_input_file to new_afile.
-	(load_symbols): Set current_input_file.
-	* ldfile.c (ldfile_open_file): If extra_search_path has been set
-	then scan it for the file that needs to be opened.
-	* ld.texi: Document the new behaviour.
-	* NEWS: Mention the new feature.
-
-2020-04-22  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-scripts/default-script1.d: Correct mingw skip.
-	* testsuite/ld-scripts/default-script2.d: Likewise.
-	* testsuite/ld-scripts/default-script3.d: Likewise.
-	* testsuite/ld-scripts/default-script4.d: Likewise.
-
-2020-04-21  Stephen Casner  <casner@acm.org>
-
-	PR 25829
-	* testsuite/ld-scripts/script.exp (check_script)
-	(extract_symbol_test): Make test addresses fit in 16 bits.
-	* testsuite/ld-scripts/memory.t: Likewise.
-	* testsuite/ld-scripts/memory_sym.t (TXT_LENGTH): Likewise.
-	* testsuite/ld-scripts/default-script.t (_START): Likewise.
-	* testsuite/ld-scripts/default-script1.d: Likewise.
-	* testsuite/ld-scripts/default-script2.d: Likewise.
-	* testsuite/ld-scripts/default-script3.d: Likewise.
-	* testsuite/ld-scripts/default-script4.d: Likewise.
-	* testsuite/ld-scripts/empty-address-1.t: Likewise.
-	* testsuite/ld-scripts/empty-address-1.d: Likewise.
-	* testsuite/ld-scripts/empty-address-2a.d: Likewise.
-	* testsuite/ld-scripts/empty-address-2b.d: Likewise.
-	* testsuite/ld-misc/start.s: .long -> .dc.a to allow relocation to
-	fit target address size.
-	* testsuite/ld-scripts/empty-address-1.s: Likewise.
-	* testsuite/ld-scripts/empty-address-2.s: Likewise.
-
-2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25849
-	* ldelfgen.c (ldelf_map_segments): Call
-	elf_backend_strip_zero_sized_dynamic_sections.
-	* testsuite/ld-alpha/tlsbinr.rd: Updated.
-
-2020-04-20  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/tlsopt5.s: Rename foo to aaaaa.
-	* testsuite/ld-powerpc/tlsopt5.d: Adjust to suit.
-	* testsuite/ld-powerpc/tlsopt6.d: Likewise.
-
-2020-04-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* testsuite/ld-elf/warn1.d: Don't xfail on 64-bit Solaris/SPARC.
-	* testsuite/ld-elf/warn2.d: Likewise.
-
-2020-04-18  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/elf.exp (ASFLAGS): Add "--defsym NO_SET=1" for
-	alpha target.
-	* testsuite/ld-elf/pr19789.s: Use "=" if NO_SET is defined.
-
-2020-04-16  Stephen Casner  <casner@acm.org>
+	* configure.tgt: Correct comment grammar.
+	* emultempl/m68hc1xelf.em: Likewise.
+	* ld.texi: Correct grammar.
 
-	PR 18963
-	* testsuite/ld-scripts/pr18963.t: Reduce section sizes to fit in
-	16-bit address space.
-	* testsuite/ld-scripts/pr18963.d: Likewise.
-
-2020-04-17  Juan Manuel Guerrero  <juan.guerrero@gmx.de>
-            Jan W. Jagersma  <jwjagersma@gmail.com>
-
-	* scripttempl/i386go32.sc: Provide symbol _environ.  Link in
-	.ctors and .dtors.  Discard LTO sections.
-
-2020-04-17  Nick Clifton  <nickc@redhat.com>
-
-	* testsuite/config/default.exp: If not already set then create the
-	CCC_OVERRIDE_OPTIONS environment variable to help when running the
-	testsuite with clang.
-	* testsuite/ld-elf/pr22269-1.c: Add a missing return statement.
-	* testsuite/ld-elfvers/vers.exp: Add checks to detect if files
-	were built before attempting to copy them.
-
-2020-04-15  Fangrui Song <maskray@google.com>
-
-	PR binutils/24613
-	* lexsup.c (parse_args): Change RM_GENERATE_WARNING and
-	RM_GENERATE_ERROR to RM_DIAGNOSE.
-	* emultempl/aix.em (ld_${EMULATION_NAME}_emulation): Change
-	RM_GENERATE_ERROR to RM_DIAGNOSE.
-	* emultempl/elf.em (ld_${EMULATION_NAME}_emulation): Likewise.
-
-2020-04-14  Stephen Casner  <casner@acm.org>
-
-	PR ld/25677
-	* emulparams/pdp11.sh (SCRIPT_NAME): Change to pdp11.
-	(EXTRA_EM_FILE): New, add emulation file pdp11.
-	* scripttempl/pdp11.sc: New, derived from aout.sc without
-	irrelevant input sections.
-	* emultempl/pdp11.em (_add_options, _handle_option)
-	(_list_options): New. Add options -z, --imagic for pdp11-aout.
-	(_before_parse): Make --omagic be default instead of --nmagic.
-	(_get_script): Modify special-case linker script for --imagic.
-	* lexsup.c (parse_args): Explictly set config.text_read_only for -n.
-	* ld.texi (Options): Add documentation of PDP11-specific options.
-	(Options): Fix unrelated typo to --no-compact-branches.
-	* gen-doc.texi: @set PDP11.
-	* testsuite/ld-pdp11/pdp11.exp: New, start pdp11 testing.
-	* testsuite/ld-pdp11/sections.s: New, source for options tests.
-	* testsuite/ld-pdp11/imagic.d: New, test --imagic format.
-	* testsuite/ld-pdp11/imagicz.d: New, test -z (imagic) format.
-	* testsuite/ld-pdp11/nmagic.d: New, test --nmagic format.
-	* testsuite/ld-pdp11/omagic.d: New, test --omagic format.
-
-2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25707
-	* testsuite/ld-arm/armthumb-lib.sym: Updated.
-	* testsuite/ld-arm/farcall-mixed-app.sym: Likewise.
-	* testsuite/ld-arm/farcall-mixed-app2.sym: Likewise.
-	* testsuite/ld-arm/fdpic-main-m.sym: Likewise.
-	* testsuite/ld-arm/fdpic-main.sym: Likewise.
-	* testsuite/ld-arm/fdpic-shared-m.sym: Likewise.
-	* testsuite/ld-arm/fdpic-shared.sym: Likewise.
-	* testsuite/ld-arm/mixed-app.sym: Likewise.
-	* testsuite/ld-arm/mixed-lib.sym: Likewise.
-	* testsuite/ld-arm/preempt-app.sym: Likewise.
-	* testsuite/ld-elf/hash.d: Likewise.
-	* testsuite/ld-elf/pr13195.d: Likewise.
-	* testsuite/ld-elfvsb/hidden2.d: Likewise.
-	* testsuite/ld-mips-elf/hash2.d: Likewise.
-
-2020-04-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* testsuite/ld-shared/shared.exp: Remove dangling comments.
-	xfail shared non PIC tests on Solaris.
-
-2020-04-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* testsuite/ld-elf/shared.exp: Add -Av9 to AFLAGS_PIC on sparc*-*-*.
-
-2020-04-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/config/default.exp (NOCF_PROTECTION_CFLAGS): Replace
-	nopie with available.
-
-2020-04-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/config/default.exp (NOCF_PROTECTION_CFLAGS): New.
-	Set to "-fcf-protection=none" if target compiler supports it.
-	* testsuite/ld-srec/srec.exp: Add $NOCF_PROTECTION_CFLAGS to
-	CC and CXX.
-	* testsuite/ld-x86-64/x86-64.exp: Add $NOCF_PROTECTION_CFLAGS
-	to PLT BND tests.
-
-2020-04-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/linux-x86.exp (check_pr25749a): Compile with
-	-I../bfd.
-	(check_pr25749b): Likewise.
-
-2020-04-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
-
-	* testsuite/ld-ifunc/ifunc-10-i386.d: Remove *-*-solaris2* from
-	notarget.
-	* ifunc-11-i386.d: Likewise.
-	* ifunc-12-i386.d: Likewise.
-	* ifunc-13-i386.d: Likewise.
-	* ifunc-14a-i386.d: Likewise.
-	* ifunc-14b-i386.d: Likewise.
-	* ifunc-14c-i386.d: Likewise.
-	* ifunc-14d-i386.d: Likewise.
-	* ifunc-14e-i386.d: Likewise.
-	* ifunc-14f-i386.d: Likewise.
-	* ifunc-15-i386.d: Likewise.
-	* ifunc-16-i386-now.d: Likewise.
-	* ifunc-16-i386.d: Likewise.
-	* ifunc-17a-i386.d: Likewise.
-	* ifunc-17b-i386.d: Likewise.
-	* ifunc-18a-i386.d: Likewise.
-	* ifunc-18b-i386.d: Likewise.
-	* ifunc-19a-i386.d: Likewise.
-	* ifunc-19b-i386.d: Likewise.
-	* ifunc-2-i386-now.d: Likewise.
-	* ifunc-2-i386.d: Likewise.
-	* ifunc-2-local-i386-now.d: Likewise.
-	* ifunc-2-local-i386.d: Likewise.
-	* ifunc-20-i386.d: Likewise.
-	* ifunc-21-i386.d: Likewise.
-	* ifunc-22-i386.d: Likewise.
-	* ifunc-5a-i386.d: Likewise.
-	* ifunc-5a-local-i386.d: Likewise.
-	* ifunc-5b-i386.d: Likewise.
-	* ifunc-5b-local-i386.d: Likewise.
-	* ifunc-5r-local-i386.d: Likewise.
-	* ifunc-6a-i386.d: Likewise.
-	* ifunc-6b-i386.d: Likewise.
-	* ifunc-7a-i386.d: Likewise.
-	* ifunc-7b-i386.d: Likewise.
-	* ifunc-8-i386.d: Likewise.
-	* ifunc-9-i386.d: Likewise.
-	* pr17154-i386-now.d: Likewise.
-	* pr17154-i386.d: Likewise.
-
-	* ifunc-23a-x86.d: Remove notarget.
-	* ifunc-24a-x86.d: Likewise.
-	* ifunc-25a-x86.d: Likewise.
-
-2020-04-02  Nick Clifton  <nickc@redhat.com>
-
-	PR ld/25747
-	* ldfile.c (ldfile_open_file): Fix typo in warning message.
-
-2020-04-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25749
-	PR ld/25754
-	* testsuite/ld-elf/linux-x86.exp: Run ld/25749 tests.
-	* testsuite/ld-elf/pr25749-1.c: New file.
-	* testsuite/ld-elf/pr25749-1a.c: Likewise.
-	* testsuite/ld-elf/pr25749-1b.c: Likewise.
-	* testsuite/ld-elf/pr25749-1b.err: Likewise.
-	* testsuite/ld-elf/pr25749-1c.c: Likewise.
-	* testsuite/ld-elf/pr25749-1d.c: Likewise.
-	* testsuite/ld-elf/pr25749-2.c: Likewise.
-	* testsuite/ld-elf/pr25749-2a.s: Likewise.
-	* testsuite/ld-elf/pr25749-2b.s: Likewise.
-	* testsuite/ld-elf/pr25749.rd: Likewise.
-	* testsuite/ld-elf/pr25754-1a.c: Likewise.
-	* testsuite/ld-elf/pr25754-1b.s: Likewise.
-	* testsuite/ld-elf/pr25754-2a.c: Likewise.
-	* testsuite/ld-elf/pr25754-2b.err: Likewise.
-	* testsuite/ld-elf/pr25754-2b.s: Likewise.
-	* testsuite/ld-elf/pr25754-3a.c: Likewise.
-	* testsuite/ld-elf/pr25754-3b.s: Likewise.
-	* testsuite/ld-elf/pr25754-4a.c: Likewise.
-	* testsuite/ld-elf/pr25754-4b.s: Likewise.
-	* testsuite/ld-elf/pr25754-4c.s: Likewise.
-	* testsuite/ld-elf/pr25754-5a.c: Likewise.
-	* testsuite/ld-elf/pr25754-5b.s: Likewise.
-	* testsuite/ld-elf/pr25754-5c.s: Likewise.
-	* testsuite/ld-elf/pr25754-6a.c: Likewise.
-	* testsuite/ld-elf/pr25754-6b.s: Likewise.
-	* testsuite/ld-x86-64/pr19609-6a.d: Don't expect linker error.
-
-2020-04-01  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/16017
-	* testsuite/ld-arm/arm-elf.exp (thumb-plt, thumb-plt-got): Skip for NaCL.
-
-2020-04-01  Nick Clifton  <nickc@redhat.com>
-
-	PR ld/25747
-	* ldfile.c (ldfile_open_file): If a search for a library fails,
-	but there is a file that would match if it had a "lib" prefix to
-	its name, then tell the user.
-
-2020-04-01  Tamar Christina  <tamar.christina@arm.com>
-
-	PR ld/16017
-	* testsuite/ld-arm/arm-elf.exp (thumb-plt-got): New.
-	* testsuite/ld-arm/thumb-plt-got.d: New test.
-
-2020-04-01  Tamar Christina  <tamar.christina@arm.com>
-
-	* testsuite/ld-arm/arm-elf.exp (thumb-plt): New.
-	* testsuite/ld-arm/thumb-plt.d: New test.
-	* testsuite/ld-arm/thumb-plt.s: New test.
-
-2020-04-01  Hans-Peter Nilsson  <hp@bitrange.com>
-
-	* testsuite/ld-scripts/defined4.d: Don't xfail mmix-*-*.
-
-2020-03-30  Nick Clifton  <nickc@redhat.com>
-
-	PR binutils/25662
-	* emultempl/pe.em (after_open): Replace initialisation of the
-	insert_timestamp field in the pe_data structure with an
-	initialisation of the timestamp field.
-	* emultemp/pep.em: Likewise.
-	* pe-dll.c (fill_edata): Use the timestamp field in the pe_data
-	structure instead of the insert_timestamp field.
-
-2020-03-28  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR 25732
-	* emulparams/elf_i386_ldso.sh (COMMONPAGESIZE): New.
-	* testsuite/ld-elf/shared.exp:Don't xfail pr20995-2 tests for
-	Solaris.
-
-2020-03-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR 25732
-	* testsuite/ld-elf/shared.exp: Xfail pr20995-2 tests for Solaris.
-
-2020-03-27  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR 25732
-	* testsuite/ld-ifunc/ifunc-23a-x86.d: Add notarget for Solaris.
-	* testsuite/ld-ifunc/ifunc-24a-x86.d: Likewise.
-	* testsuite/ld-ifunc/ifunc-25a-x86.d: Likewise.
-
-2020-03-25  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/compress1c.d: xfail h8300.
-	* testsuite/ld-elf/compressed1c.d: Likewise.
-	* testsuite/ld-elf/compressed1e.d: Likewise.
-	* testsuite/ld-elf/dynamic1.d: Likewise.
-	* testsuite/ld-elf/dynsym1.d: Likewise.
-	* testsuite/ld-elf/ehdr_start-shared.d: Likewise.
-	* testsuite/ld-elf/exclude3b.d: Likewise.
-	* testsuite/ld-elf/export-class.exp: Don't run without -shared support.
-	* testsuite/ld-elf/global1.d: xfail h8300.
-	* testsuite/ld-elf/hash.d: Likewise.
-	* testsuite/ld-elf/loadaddr1.d: Likewise.
-	* testsuite/ld-elf/loadaddr2.d: Likewise.
-	* testsuite/ld-elf/local1.d: Likewise.
-	* testsuite/ld-elf/mbind1b.d: Likewise.
-	* testsuite/ld-elf/mbind1c.d: Likewise.
-	* testsuite/ld-elf/now-1.d: Likewise.
-	* testsuite/ld-elf/now-2.d: Likewise.
-	* testsuite/ld-elf/now-3.d: Likewise.
-	* testsuite/ld-elf/now-4.d: Likewise.
-	* testsuite/ld-elf/pie.d: Likewise.
-	* testsuite/ld-elf/pr12975.d: Likewise.
-	* testsuite/ld-elf/pr13177.d: Likewise.
-	* testsuite/ld-elf/pr13195.d: Likewise.
-	* testsuite/ld-elf/pr16322.d: Likewise.
-	* testsuite/ld-elf/pr16498a.d: Likewise.
-	* testsuite/ld-elf/pr16498b.d: Likewise.
-	* testsuite/ld-elf/pr17615.d: Likewise.
-	* testsuite/ld-elf/pr19162.d: Likewise.
-	* testsuite/ld-elf/pr19539.d: Likewise.
-	* testsuite/ld-elf/pr19617a.d: Likewise.
-	* testsuite/ld-elf/pr19698.d: Likewise.
-	* testsuite/ld-elf/pr20513c.d: Likewise.
-	* testsuite/ld-elf/pr20513d.d: Likewise.
-	* testsuite/ld-elf/pr21389a.d: Likewise.
-	* testsuite/ld-elf/pr21389b.d: Likewise.
-	* testsuite/ld-elf/pr21389c.d: Likewise.
-	* testsuite/ld-elf/pr21562a.d: Likewise.
-	* testsuite/ld-elf/pr21562b.d: Likewise.
-	* testsuite/ld-elf/pr21562c.d: Likewise.
-	* testsuite/ld-elf/pr21562d.d: Likewise.
-	* testsuite/ld-elf/pr21562e.d: Likewise.
-	* testsuite/ld-elf/pr21562f.d: Likewise.
-	* testsuite/ld-elf/pr21562g.d: Likewise.
-	* testsuite/ld-elf/pr21562h.d: Likewise.
-	* testsuite/ld-elf/pr21562i.d: Likewise.
-	* testsuite/ld-elf/pr21562j.d: Likewise.
-	* testsuite/ld-elf/pr21562k.d: Likewise.
-	* testsuite/ld-elf/pr21562l.d: Likewise.
-	* testsuite/ld-elf/pr21562m.d: Likewise.
-	* testsuite/ld-elf/pr21562n.d: Likewise.
-	* testsuite/ld-elf/pr21903a.d: Likewise.
-	* testsuite/ld-elf/pr21903b.d: Likewise.
-	* testsuite/ld-elf/pr21903d.d: Likewise.
-	* testsuite/ld-elf/pr22269a.d: Likewise.
-	* testsuite/ld-elf/pr22269b.d: Likewise.
-	* testsuite/ld-elf/pr22393-1a.d: Likewise.
-	* testsuite/ld-elf/pr22393-1b.d: Likewise.
-	* testsuite/ld-elf/pr22393-1c.d: Likewise.
-	* testsuite/ld-elf/pr22393-1d.d: Likewise.
-	* testsuite/ld-elf/pr22393-1e.d: Likewise.
-	* testsuite/ld-elf/pr22393-1f.d: Likewise.
-	* testsuite/ld-elf/pr22423.d: Likewise.
-	* testsuite/ld-elf/pr22450.d: xfail avr, crx, h8300, ip2k, m68hc11,
-	and xc16x.
-	* testsuite/ld-elf/pr23658-1c.d: xfail h8300.
-	* testsuite/ld-elf/pr25708.d: xfail h8300 and hppa64.
-	* testsuite/ld-elf/rpath-1.d: xfail h8300.
-	* testsuite/ld-elf/rpath-2.d: Likewise.
-	* testsuite/ld-elf/runpath-1.d: Likewise.
-	* testsuite/ld-elf/runpath-2.d: Likewise.
-	* testsuite/ld-elf/sizeofb.d: Likewise.
-	* testsuite/ld-elf/startofb.d: Likewise.
-	* testsuite/ld-elf/strtab.d: Likewise.
-	* testsuite/ld-elf/textaddr1.d: Likewise.
-	* testsuite/ld-elf/textaddr2.d: Likewise.
-	* testsuite/ld-elf/textaddr4.d: Likewise.
-	* testsuite/ld-elf/textaddr5.d: Likewise.
-	* testsuite/ld-elf/textaddr6.d: Likewise.
-	* testsuite/ld-elf/unknown2.d: Likewise.
-	* testsuite/ld-undefined/entry-3.d: Likewise.
-	* testsuite/ld-undefined/entry-4.d: Likewise.
-	* testsuite/ld-h8300/h8300.exp: Pass appropriate ld -m option.
-	* testsuite/ld-h8300/gcsection.d: Remove ld -m option and relax
-	file format match.
-	* testsuite/ld-h8300/relax-2.d: Likewise.
-	* testsuite/ld-h8300/relax-3.d: Likewise.
-	* testsuite/ld-h8300/relax-4.d: Likewise.
-	* testsuite/ld-h8300/relax-5.d: Likewise.
-	* testsuite/ld-h8300/relax-6.d: Likewise.
-	* testsuite/ld-h8300/relax-7.d: Likewise.
-	* testsuite/ld-h8300/relax.d: Relax file format match.
-
-2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25708
-	* testsuite/ld-elf/pr25708.d: New file.
-
-2020-03-23  Alan Modra  <amodra@gmail.com>
-
-	* Makefile.am (ALL_EMULATION_SOURCES): Reinstate ei386aout.c.
-	Include ei386aout dep file.
-	* Makefile.in: Regenerate.
-	* po/BLD-POTFILES.in: Regenerate.
-
-2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-plugin/lto.exp (lto_link_tests): Run PR ld/25355
-	test only for GCC 10 or newer.
-
-2020-03-20  Alan Modra  <amodra@gmail.com>
-
-	* testplug.c (parse_symdefstr): Use %hhi to read sym->def, and
-	clear new fields.
-	* testplug2.c (parse_symdefstr): Likewise.
-	* testplug3.c (parse_symdefstr): Likewise.
-	* testplug4.c (parse_symdefstr): Likewise.
-
-2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
-
-	* testsuite/ld-arm/non-contiguous-arm4.d: Fix expected output.
-	* testsuite/ld-powerpc/non-contiguous-powerpc.d: Likewise.
-
-2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
-
-	* emultempl/xtensaelf.em: Emit a fatal error message
-	instead of calling abort.
-	* ldlang.c: Likewise.
-
-2020-03-14  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elf/non-contiguous.d: Don't xfail generic ELF
-	targets.  Don't skip xtensa, xfail instead.
-
-2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>
-
-	* ldlang.c (lang_add_section): Add support for
-	non_contiguous_regions.
-	(size_input_section): Likewise.
-	(lang_size_sections_1): Likewise.
-	(process_insert_statements): Likewise.
-	* ldlex.h (option_values): Add OPTION_NON_CONTIGUOUS_REGIONS and
-	OPTION_NON_CONTIGUOUS_REGIONS_WARNINGS.
-	* lexsup.c (ld_options): Add entries for
-	--enable-non-contiguous-regions and
-	--enable-non-contiguous-regions-warnings.
-	(parse_args): Handle it.
-	* NEWS: Add --enable-non-contiguous-regions and
-	--enable-non-contiguous-regions-warnings.
-	* ld.texi: Add --enable-non-contiguous-regions and
-	--enable-non-contiguous-regions-warnings documentation.
-	* emultempl/armelf.em (elf32_arm_add_stub_section): Add
-	SEC_LINKER_CREATED flag.
-	* emultempl/xtensaelf.em (ld_build_required_section_dependence):
-	Emit an error when --enable-non-contiguous-regions is used.
-	* testsuite/ld-elf/non-contiguous.d: New.
-	* testsuite/ld-elf/non-contiguous.ld: New.
-	* testsuite/ld-elf/non-contiguous.s: New.
-	* testsuite/ld-arm/arm-elf.exp: Run the new tests.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm.s: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm.d: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm.ld: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm2.d: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.ld: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.d: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.ld: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm4.d: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm4.ld: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm5.d: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm5.ld: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm6.d: New.
-	* testsuite/ld-arm/arm-elf/non-contiguous-arm6.ld: New.
-	* testsuite/ld-powerpc/powerpc.exp: Run new tests.
-	* testsuite/ld-powerpc/non-contiguous-powerpc.d: New.
-	* testsuite/ld-powerpc/non-contiguous-powerpc.ld: New.
-	* testsuite/ld-powerpc/non-contiguous-powerpc.sd: New.
-	* testsuite/ld-powerpc/non-contiguous-powerpc64.d: New.
-
-2020-03-13  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24920
-	* emulparams/elf32_x86_64.sh: Use static.sh.
-	* emulparams/elf_i386.sh: Likewise.
-	* emulparams/elf_x86_64.sh: Likewise.
-	* emulparams/static.sh: New file.
-	* emultempl/elf-x86.em: Include "ldlex.h".
-	* testsuite/ld-elf/pr24920.err: New file.
-	* testsuite/ld-elf/linux-x86.exp: Run ld/24920 tests.
-
-2020-03-13  Christian Eggers  <ceggers@gmx.de>
-
-	* ldexp.c (fold_name): Return SIZEOF_HEADERS in bytes.
-
-2020-03-11  Alan Modra  <amodra@gmail.com>
-
-	* ldelf.c (elf_orphan_compatible): Return false when two sections
-	have differing SHF_MASKPROC or SHF_MASKOS flags.
-
-2020-03-05  Alan Modra  <amodra@gmail.com>
-
-	PR 25570
-	* ldlang.c (lang_size_sections_1): Don't report changes on
-	second and subsequent iterations that make no change in
-	alignment from that already reported.
-
-2020-03-05  Alan Modra  <amodra@gmail.com>
-
-	PR 25570
-	* ldlang.c (lang_sizing_iteration): New static var.
-	(lang_size_sections_1): Warn about no memory region only on first
-	iteration.  Warn about changing start address on first iteration
-	then any delta from that on subsequent iterations.  Report a signed
-	delta.
-	(one_lang_size_sections_pass): Increment lang_sizing_iteration.
-
-2020-03-03  Nick Clifton  <nickc@redhat.com>
-
-	PR 25588
-	* ld.texi (Options): Update the description of the --rpath-link
-	option.
-
-2020-03-02  Alan Modra  <amodra@gmail.com>
-
-	* plugin.c (plugin_object_p): Return a bfd_cleanup.
-	(plugin_cleanup): New function.
-
-2020-03-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25618
-	* plugin.c (plugin_object_p): Copy the no_export field to the IR
-	dummy object.
-	* testsuite/ld-plugin/lto.exp (lto_link_elf_tests): Add
-	PR ld/25618 tests.
-	* testsuite/ld-plugin/pr25618.d: New file.
-	* testsuite/ld-plugin/pr25618a.cc: Likewise.
-	* testsuite/ld-plugin/pr25618a.h: Likewise.
-	* testsuite/ld-plugin/pr25618b.cc: Likewise.
-	* testsuite/ld-plugin/pr25618b.h: Likewise.
-
-2020-02-27  Alan Modra  <amodra@gmail.com>
-
-	PR 24511
-	* testsuite/ld-mmix/b-fixo2.d: Adjust for .data change.
-	* testsuite/ld-mmix/sec-2.d: Likewise.
-	* testsuite/ld-mmix/sec-3.d: Likewise.
-	* testsuite/ld-mmix/sec-4.d: Likewise.
-	* testsuite/ld-mmix/spec802.d: Likewise.
-	* testsuite/ld-mmix/spec803.d: Likewise.
-	* testsuite/ld-mmix/spec804.d: Likewise.
-	* testsuite/ld-mmix/spec805.d: Likewise.
-	* testsuite/ld-mmix/spec806.d: Likewise.
-	* testsuite/ld-mmix/spec807.d: Likewise.
-	* testsuite/ld-mmix/spec808.d: Likewise.
-
-2020-02-26  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25593
-	* testsuite/ld-plugin/lto.exp: Run PR ld/25593 tests.
-	* testsuite/ld-plugin/pr25593.d: New file.
-	* testsuite/ld-plugin/pr25593a-1.c: Likewise.
-	* testsuite/ld-plugin/pr25593a-2.c: Likewise.
-	* testsuite/ld-plugin/pr25593b.c: Likewise.
-	* testsuite/ld-plugin/pr25593c.c: Likewise.
-	* testsuite/ld-plugin/pr25593d.c: Likewise.
-	* testsuite/ld-plugin/pr25593e.c: Likewise.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/cskyelf.em: Indent labels correctly.
-	* ldfile.c: Likewise.
-	* ldlang.c: Likewise.
-	* plugin.c: Likewise.
-
-2020-02-26  Alan Modra  <amodra@gmail.com>
-
-	PR 25593
-	* ldelf.c (ldelf_try_needed): Add DT_NEEDED lib to input_bfds.
-	(ldelf_after_open): Save state of input_bfds list before loading
-	DT_NEEDED libs.  Traverse input_bfds list adding DT_NEEDED tags.
-	Restore input_bfds list.
-	* testsuite/ld-cris/gotplt1.d: Adjust for changed .dynstr order.
-
-2020-02-24  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Update French translation.
-
-2020-02-22  Alan Modra  <amodra@gmail.com>
-
-	PR 25585
-	* NEWS: Mention better "PHDR segment not covered by LOAD segment"
-	checking.
-
-2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25537
-	* emultempl/z80.em: Remove machine compatability checking.
-
-2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25517
-	* testsuite/ld-z80/arch_ez80_adl.d: Update command line.
-	* testsuite/ld-z80/arch_ez80_z80.d: Likewise.
-	* testsuite/ld-z80/arch_r800.d: Likewise.
-	* testsuite/ld-z80/arch_z180.d: Likewise.
-	* testsuite/ld-z80/arch_z80n.d: Likewise.
-	* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.
-	* testsuite/ld-z80/comb_arch_z180_z80.d: Likewise.
-	* testsuite/ld-z80/comb_arch_z80_ez80.d: Likewise.
-	* testsuite/ld-z80/comb_arch_z80_z180.d: Likewise.
-	* testsuite/ld-z80/comb_arch_z80_z80n.d: Likewise.
-	* testsuite/ld-z80/relocs_b_ez80.d: Likewise.
-	* testsuite/ld-z80/relocs_b_z80.d: Likewise.
-	* testsuite/ld-z80/relocs_f_ez80.d: Likewise.
-	* testsuite/ld-z80/relocs_f_z80.d: Likewise.
-	* testsuite/ld-z80/relocs_f_z80n.d: Likewise.
-
-2020-02-19  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-plugin/pr25355.d: Allow alpha-linux nm result.
-
-2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR binutils/25355
-	* testsuite/ld-plugin/lto.exp: Run PR binutils/25355 test.
-	* testsuite/ld-plugin/pr25355.c: New file.
-	* testsuite/ld-plugin/pr25355.d: Likewise.
-	* testsuite/lib/ld-lib.exp (run_cc_link_tests): Support compile
-	only dump.
-
-2020-02-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-unique/unique.exp (contains_unique_symbol): Updated.
-
-2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	PR 25469
-	* emulparams/elf32z80.sh: Use z80 emulation.
-	* emultempl/z80.em: Make generic to both COFF and ELF Z80 emulations.
-	* emultempl/z80elf.em: Delete.
-	* testsuite/ld-elf/pr22450.d: Expect to fail for the Z80.
-	* testsuite/ld-elf/sec64k.exp: Fix Z80 assembly.
-	* testsuite/ld-unique/pr21529.s: Avoid register name conflict.
-	* testsuite/ld-unique/unique.s: Likewise.
-	* testsuite/ld-unique/unique_empty.s: Likewise.
-	* testsuite/ld-unique/unique_shared.s: Likewise.
-	* testsuite/ld-unique/unique.d: Updated expected output.
-	* testsuite/ld-z80/arch_z80n.d: New file.
-	* testsuite/ld-z80/comb_arch_z80_z80n.d: New file.
-	* testsuite/ld-z80/labels.s: Add more labels.
-	* testsuite/ld-z80/relocs.s: Add more reloc tests.
-	* testsuite/ld-z80/relocs_f_z80n.d: New file
-
-2020-02-07  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25022
-	* testsuite/ld-elf/pr25022.d: Xfail more targets which don't use
-	ldelf_before_place_orphans.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25022
-	* emultempl/aix.em (ld_${EMULATION_NAME}_emulation): Add
-	before_place_orphans_default.
-	* emultempl/armcoff.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/beos.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/generic.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/linux.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/msp430.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/pe.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/pep.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/ticoff.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/vanilla.em (ld_${EMULATION_NAME}_emulation): Likewise.
-	* emultempl/elf.em (ld_${EMULATION_NAME}_emulation): Use
-	ldelf_before_place_orphans.
-	* ldelf.c (ldelf_before_place_orphans): New.
-	* ldelf.h (ldelf_before_place_orphans): Likewise.
-	* ldemul.c (ldemul_before_place_orphans): Likewise.
-	(before_place_orphans_default): Likewise.
-	* ldemul.h (ldemul_before_place_orphans): Likewise.
-	(before_place_orphans_default): Likewise.
-	(ld_emulation_xfer_struct): Add before_place_orphans.
-	* ldlang.c (lang_process): Call ldemul_before_place_orphans
-	before lang_place_orphans.
-	* testsuite/ld-elf/pr25022.d: New file.
-	* testsuite/ld-elf/pr25022.s: Likewise.
-	* testsuite/ld-elf/pr25022.t: Likewise.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25490
-	* testsuite/ld-elf/pr25490-1.d: New file.
-	* testsuite/ld-elf/pr25490-1.s: Likewise.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/24526
-	PR ld/25021
-	PR ld/25490
-	* testsuite/ld-elf/elf.exp: Run PR ld/25490 tests.
-	* testsuite/ld-elf/pr24526.d: New file.
-	* testsuite/ld-elf/pr24526.s: Likewise.
-	* testsuite/ld-elf/pr25021.d: Likewise.
-	* testsuite/ld-elf/pr25021.s: Likewise.
-	* testsuite/ld-elf/pr25490-2-16.rd: Likewise.
-	* testsuite/ld-elf/pr25490-2-32.rd: Likewise.
-	* testsuite/ld-elf/pr25490-2-64.rd: Likewise.
-	* testsuite/ld-elf/pr25490-2.s: Likewise.
-	* testsuite/ld-elf/pr25490-3-16.rd: Likewise.
-	* testsuite/ld-elf/pr25490-3-32.rd: Likewise.
-	* testsuite/ld-elf/pr25490-3-64.rd: Likewise.
-	* testsuite/ld-elf/pr25490-3.s: Likewise.
-	* testsuite/ld-elf/pr25490-4-16.rd: Likewise.
-	* testsuite/ld-elf/pr25490-4-32.rd: Likewise.
-	* testsuite/ld-elf/pr25490-4-64.rd: Likewise.
-	* testsuite/ld-elf/pr25490-4.s: Likewise.
-	* testsuite/ld-elf/pr25490-5-16.rd: Likewise.
-	* testsuite/ld-elf/pr25490-5-32.rd: Likewise.
-	* testsuite/ld-elf/pr25490-5-64.rd: Likewise.
-	* testsuite/ld-elf/pr25490-5.s: Likewise.
-	* testsuite/ld-elf/pr25490-6-16.rd: Likewise.
-	* testsuite/ld-elf/pr25490-6-32.rd: Likewise.
-	* testsuite/ld-elf/pr25490-6-64.rd: Likewise.
-	* testsuite/ld-elf/pr25490-6.s: Likewise.
-
-2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/lib/ld-lib.exp (check_gc_sections_available): Mark
-	z80 as not supported.
-
-2020-02-06  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-ifunc/ifunc.exp: Enable for more targets, specifying
-	targets that don't support ifunc rather than ones that do.
-	(contains_irelative_reloc): Match R_PARISC_IPLT.
-	* testsuite/ld-ifunc/lib.c: Don't use .set in asm.
-	* testsuite/ld-ifunc/ifunc-23-x86.s,
-	* testsuite/ld-ifunc/ifunc-24-x86.s,
-	* testsuite/ld-ifunc/ifunc-25-x86.s,
-	* testsuite/ld-ifunc/ifunc-4-local-x86.s,
-	* testsuite/ld-ifunc/ifunc-4-x86.s: Define _main.
-	* testsuite/ld-ifunc/ifunc-10-i386.d,
-	* testsuite/ld-ifunc/ifunc-11-i386.d,
-	* testsuite/ld-ifunc/ifunc-12-i386.d,
-	* testsuite/ld-ifunc/ifunc-13-i386.d,
-	* testsuite/ld-ifunc/ifunc-14a-i386.d,
-	* testsuite/ld-ifunc/ifunc-14b-i386.d,
-	* testsuite/ld-ifunc/ifunc-14c-i386.d,
-	* testsuite/ld-ifunc/ifunc-14d-i386.d,
-	* testsuite/ld-ifunc/ifunc-14e-i386.d,
-	* testsuite/ld-ifunc/ifunc-14f-i386.d,
-	* testsuite/ld-ifunc/ifunc-15-i386.d,
-	* testsuite/ld-ifunc/ifunc-16-i386-now.d,
-	* testsuite/ld-ifunc/ifunc-16-i386.d,
-	* testsuite/ld-ifunc/ifunc-17a-i386.d,
-	* testsuite/ld-ifunc/ifunc-17b-i386.d,
-	* testsuite/ld-ifunc/ifunc-18a-i386.d,
-	* testsuite/ld-ifunc/ifunc-18b-i386.d,
-	* testsuite/ld-ifunc/ifunc-19a-i386.d,
-	* testsuite/ld-ifunc/ifunc-19b-i386.d,
-	* testsuite/ld-ifunc/ifunc-2-i386-now.d,
-	* testsuite/ld-ifunc/ifunc-2-i386.d,
-	* testsuite/ld-ifunc/ifunc-2-local-i386-now.d,
-	* testsuite/ld-ifunc/ifunc-2-local-i386.d,
-	* testsuite/ld-ifunc/ifunc-20-i386.d,
-	* testsuite/ld-ifunc/ifunc-21-i386.d,
-	* testsuite/ld-ifunc/ifunc-22-i386.d,
-	* testsuite/ld-ifunc/ifunc-26.d,
-	* testsuite/ld-ifunc/ifunc-5a-i386.d,
-	* testsuite/ld-ifunc/ifunc-5a-local-i386.d,
-	* testsuite/ld-ifunc/ifunc-5b-i386.d,
-	* testsuite/ld-ifunc/ifunc-5b-local-i386.d,
-	* testsuite/ld-ifunc/ifunc-5r-local-i386.d,
-	* testsuite/ld-ifunc/ifunc-6a-i386.d,
-	* testsuite/ld-ifunc/ifunc-6b-i386.d,
-	* testsuite/ld-ifunc/ifunc-7a-i386.d,
-	* testsuite/ld-ifunc/ifunc-7b-i386.d,
-	* testsuite/ld-ifunc/ifunc-8-i386.d,
-	* testsuite/ld-ifunc/ifunc-9-i386.d,
-	* testsuite/ld-ifunc/pr17154-i386-now.d,
-	* testsuite/ld-ifunc/pr17154-i386.d: xfail lynxos, nto, and solaris.
-
-2020-02-06  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/lib/ld-lib.exp (is_generic): Delete.
-	* testsuite/ld-unique/unique.exp: Exclude tic6x.
-
-2020-02-06  Alan Modra  <amodra@gmail.com>
-
-	* configure.tgt (i[3-7]86-*-moss*): Don't clear targ_extra_ofiles.
-	(i[3-7]86-*-openbsd*, x86_64-*-openbsd*): Add.
-
-2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gas/25380
-	* testsuite/ld-i386/pr22001-1c.S: Use "unique,N" in .section
-	directives.
-	* testsuite/ld-i386/tls-gd1.S: Likewise.
-	* testsuite/ld-x86-64/pr21481b.S: Likewise.
-
-2020-01-30  Jan Beulich  <jbeulich@suse.com>
-
-	* ld.texi: Remove space between @option and brace.
-
-2020-01-29  Alan Modra  <amodra@gmail.com>
-
-	PR 25477
-	* ldelf.c (ldelf_check_ld_so_conf): Add prefix parameter and
-	correct concat.
-	(ldelf_after_open): Add prefix parameter.
-	* ldelf.h (ldelf_after_open): Update prototype.
-	* emultempl/elf.em (gld${EMULATION_NAME}_after_open): Pass $prefix
-	to ldelf_after_open.
-	* Makefile.am: Correct z80 dependencies.
-	* Makefile.in: Regenerate.
-
-2020-01-28  Alan Modra  <amodra@gmail.com>
-
-	* ldexp.c (fold_name): Don't print bfd_link_hash_lookup failed
-	in first phase.
-
-2020-01-27  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-elfvers/vers.exp: Replace case statements with
-	switch statements.
-	* testsuite/ld-ifunc/ifunc.exp: Likewise.
-	* testsuite/ld-unique/unique.exp: Likewise.
-
-2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
-	    Alan Modra  <amodra@gmail.com>
-
-	PR ld/25458
-	* testsuite/ld-elf/pr25458.map: New file.
-	* testsuite/ld-elf/pr25458.rd: Likewise.
-	* testsuite/ld-elf/pr25458a.s: Likewise.
-	* testsuite/ld-elf/pr25458b.s: Likewise.
-	* testsuite/ld-elf/shared.exp: Run PR ld/25458 test.
-
-2020-01-22  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25416
-	* testsuite/ld-x86-64/tls.exp: Skip GNU2 TLS tests only without
-	compiler support.
-
-2020-01-22  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/tlsdesc3.d,
-	* testsuite/ld-powerpc/tlsdesc3.wf,
-	* testsuite/ld-powerpc/tlsdesc4.d,
-	* testsuite/ld-powerpc/tlsdesc4.s,
-	* testsuite/ld-powerpc/tlsdesc4.wf: New tests.
-	* testsuite/ld-powerpc/powerpc.exp: Run them.
-
-2020-01-22  Alan Modra  <amodra@gmail.com>
-
-	* emultempl/ppc64elf.em (ppc64_opt, PARSE_AND_LIST_LONGOPTS),
-	(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Support
-	--tls-get-addr-regsave and --no-tls-get-addr-regsave.
-	(params): Init new field.
-	* ld.texi (--tls-get-addr-regsave, --no-tls-get-addr-regsave):
-	Document.
-	* testsuite/ld-powerpc/tlsdesc.s,
-	* testsuite/ld-powerpc/tlsdesc.d,
-	* testsuite/ld-powerpc/tlsdesc.wf,
-	* testsuite/ld-powerpc/tlsdesc2.d,
-	* testsuite/ld-powerpc/tlsdesc2.wf,
-	* testsuite/ld-powerpc/tlsexenors.d,
-	* testsuite/ld-powerpc/tlsexenors.r,
-	* testsuite/ld-powerpc/tlsexers.d,
-	* testsuite/ld-powerpc/tlsexers.r,
-	* testsuite/ld-powerpc/tlsexetocnors.d,
-	* testsuite/ld-powerpc/tlsexetocrs.d,
-	* testsuite/ld-powerpc/tlsexetocrs.r,
-	* testsuite/ld-powerpc/tlsopt6.d,
-	* testsuite/ld-powerpc/tlsopt6.wf: New.
-	* testsuite/ld-powerpc/powerpc.exp: Run new tests.
-
-2020-01-22  Yuri Chornoivan  <yurchor@mageia.org>
-
-	PR 25417
-	* ldlang.c (ldlang_open_ctf): Fix error message typo.
-	* emultempl/z80elf.em (z80_elf_after_open): Likewise.
-
-2020-01-21  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/pr23900-1.d: Adjusted.
-
-2020-01-21  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ld-elf/pr23900-1.d: Also pass -l to readelf.
-
-2020-01-20  Nick Clifton  <nickc@redhat.com>
-
-	* po/pt_BR.po: Updated Brazilian Portuguese translation.
-	* po/uk.po: Updated Ukranian translation.
-
-2020-01-20  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR ld/25416
-	* testsuite/ld-x86-64/pr25416-1.s: New file
-	* testsuite/ld-x86-64/pr25416-1a.d: Likewise.
-	* testsuite/ld-x86-64/pr25416-1b.d: Likewise.
-	* testsuite/ld-x86-64/pr25416-1.s: Likewise.
-	* testsuite/ld-x86-64/pr25416-2.s: Likewise.
-	* testsuite/ld-x86-64/pr25416-2a.d: Likewise.
-	* testsuite/ld-x86-64/pr25416-2b.d: Likewise.
-	* testsuite/ld-x86-64/pr25416-3.d: Likewise.
-	* testsuite/ld-x86-64/pr25416-3.s: Likewise.
-	* testsuite/ld-x86-64/pr25416-4.d: Likewise.
-	* testsuite/ld-x86-64/pr25416-4.s: Likewise.
-	* testsuite/ld-x86-64/pr25416-5a.c: Likewise.
-	* testsuite/ld-x86-64/pr25416-5b.s: Likewise.
-	* testsuite/ld-x86-64/pr25416-5c.s: Likewise.
-	* testsuite/ld-x86-64/pr25416-5d.s: Likewise.
-	* testsuite/ld-x86-64/pr25416-5e.s: Likewise.
-	* testsuite/ld-x86-64/x86-64.exp: Run PR ld/25416 tests.
-
-2020-01-20  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/tlsexe.d: Match new __tls_get_addr stub.
-	* testsuite/ld-powerpc/tlsexeno.d: Likewise.
-	* testsuite/ld-powerpc/tlsexetoc.d: Likewise.
-	* testsuite/ld-powerpc/tlsexetocno.d: Likewise.
-	* testsuite/ld-powerpc/tlsopt5.d: Likewise.
-
-2020-01-18  Roland McGrath  <mcgrathr@google.com>
-
-	* testsuite/ld-x86-64/align-branch-1.d: Loosen instruction regexps
-	to admit whatever absolute address.  The label-relative address is
-	what the test needs to verify.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	* configure: Regenerate.
-	* po/ld.pot: Regenerate.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.34 branch created.
-
-2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* scripttempl/elf32msp430_3.sc: Remove.
-
-2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* scripttempl/elf32msp430.sc: Add input section rules for
-	.upper.{text,data,rodata,bss}.
-	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.
-	* testsuite/ld-msp430-elf/upper-input-sections.s: New test.
-
-2020-01-15  Lars Brinkhoff  <lars@nocrew.org>
-
-	PR 20694
-	* temulparams/pdp11.sh (TARGET_PAGE_SIZE): Set to 8192.
-
-2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
-
-	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.
-	* testsuite/ld-msp430-elf/reloc-lo-430x.s: New test.
-
-2020-01-15  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-powerpc/ambiguousv1b.d: Adjust expected output.
-	* testsuite/ld-powerpc/funref.s: Align func_tab.
-	* testsuite/ld-powerpc/funref2.s: Likewise.
-	* testsuite/ld-powerpc/funv1.s: Add dot symbols.
-
-2020-01-14  Lili Cui <lili.cui@intel.com>
-
-	* testsuite/ld-i386/align-branch-1.d: Updated for i686-pc-elf.
-
-2020-01-13  Alan Modra  <amodra@gmail.com>
-
-	* po/BLD-POTFILES.in: Regenerate.
-
-2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
-
-	* testsuite/ld-arc/relax-local-pic.d: Improve matching patterns.
-
-2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
-
-	* Makefile.am: Remove earcelf_prof.c and earclinux_prof.c
-	emulations.
-	* configure.tgt: Likewise.
-	* Makefile.in: Regenerate.
-	* emulparams/arcelf_prof.sh: Remove file.
-	* emulparams/arclinux_prof.sh: Likewise.
-
-2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
-
-	* scripttempl/elfarcv2.sc : Allow interrupt vector table to be
-	located at an arbitrary address.  Use DWARF.sc file.
-	* scripttempl/elfarc.sc: Use DWARF.sc file.
-
-2020-01-07  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/ld-mips-elf/eh-frame5.s,
-	* testsuite/ld-mips-elf/ehdr_start-new.s,
-	* testsuite/ld-mips-elf/ehdr_start-o32.s,
-	* testsuite/ld-mips-elf/mips16-call-global-1.s,
-	* testsuite/ld-mips-elf/mips16-intermix-1.s,
-	* testsuite/ld-mips-elf/mips16-pic-1b.s,
-	* testsuite/ld-mips-elf/mips16-pic-4c.s,
-	* testsuite/ld-mips-elf/no-shared-1-n64.s,
-	* testsuite/ld-mips-elf/no-shared-1-o32.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-1b-micromips.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-1b.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-2a.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-3b.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-4b.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-5a.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-6-n32c.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-6-n64c.s,
-	* testsuite/ld-mips-elf/pic-and-nonpic-6-o32c.s,
-	* testsuite/ld-mips-elf/pie.s,
-	* testsuite/ld-mips-elf/relax-jalr.s: Revert 2019-12-17 change.
-
-2020-01-06  Nick Clifton  <nickc@redhat.com>
-
-	PR 25327
-	* testsuite/ld-elf/shared.exp: Add -fcommon option to compiler
-	command line when building libcomm1.o and pr13250 tests.
-	* testsuite/ld-plugin/lto.exp: Likewise for pr20267 tests.
-
-2020-01-06  Nick Clifton  <nickc@redhat.com>
-
-	PR 25326
-	* testsuite/ld-elf/shared.exp: Add -fcommon option to compiler
-	command line when building pr19579 binaries.
-
-2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
-
-	* emultempl/pe.em: Add new option --enable-reloc-section.
-	* emultempl/pep.em: Likewise.
-	* ld.texi: Document --enable-reloc-section.
-	* pe-dll.c (pe_dll_build_sections): Use pe_dll_enable_reloc_section.
-	(pe_dll_fill_sections): Simplify by calling pe_exe_fill_sections.
-	* pe-dll.h: Add extern declaration of option flag.
-	* pep-dll.c (pe_dll_enable_reloc_section):
-	Add alias define for pep_dll_enable_reloc_section.
-	* pep-dll.h: Add extern declaration of option flag.
-
-2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
-
-	* Makefile.am: Add new target z80-elf
-	* configure.tgt: Likewise.
-	* Makefile.in: Regenerate.
-	* emultempl/z80.em: Add support for eZ80 and Z180 architectures.
-	* emulparams/elf32z80.sh: New file.
-	* emultempl/z80elf.em: Likewise.
-	* testsuite/ld-elf/comm-data4.s: Fix for Z80.
-	* testsuite/ld-elf/comm-data5.s: Fix for Z80.
-	* testsuite/ld-scripts/fill16.d: Fix for Z80.
-	* testsuite/ld-z80/arch_ez80_adl.d: Likewise.
-	* testsuite/ld-z80/arch_ez80_z80.d: Likewise.
-	* testsuite/ld-z80/arch_r800.d: Likewise.
-	* testsuite/ld-z80/arch_z180.d: Likewise.
-	* testsuite/ld-z80/arch_z80.d: Likewise.
-	* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.
-	* testsuite/ld-z80/comb_arch_z180.d: Likewise.
-	* testsuite/ld-z80/labels.s: Likewise.
-	* testsuite/ld-z80/relocs.s: Likewise.
-	* testsuite/ld-z80/relocs_b_ez80.d: Likewise.
-	* testsuite/ld-z80/relocs_b_z80.d: Likewise.
-	* testsuite/ld-z80/relocs_f_z80.d: Likewise.
-	* testsuite/ld-z80/z80.exp: Likewise.
-	* NEWS: Mention the new support.
-
-2020-01-02  Tamar Christina  <tamar.christina@arm.com>
-
-	PR 25210
-	PR 24753
-	* emultempl/aarch64elf.em (elf${ELFSIZE}_aarch64_add_stub_section):
-	Remove SEC_LINKER_CREATED.
-	* testsuite/ld-aarch64/aarch64-elf.exp: Add erratum835769-843419.
-	* testsuite/ld-aarch64/erratum835769-843419.d: New test.
-
-2020-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/gold/ChangeLog b/gold/ChangeLog
index ea4927330e2..94443eeaaa4 100644
--- a/gold/ChangeLog
+++ b/gold/ChangeLog
@@ -1,337 +1,55 @@
-2021-01-03  Alan Modra  <amodra@gmail.com>
-
-	PR 27140
-	* powerpc.cc (Target_powerpc::Branch_info::make_stub): Only access
-	object->st_other() when 64-bit.
-	(Stub_table::add_long_branch_entry): Ignore "other" when 32-bit.
-
-2020-11-17  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Target_powerpc::no_tprel_opt_): Rename from tprel_opt_.
-	Init to false.
-	(Target_powerpc::tprel_opt): Test parameters->options().tls_optimize().
-	(Target_powerpc::set_tprel_opt): Delete.
-	(Target_powerpc::set_no_tprel_opt): New function.  Update all uses
-	of set_tprel_opt.
-
-2020-11-16  Michael Hudson-Doyle  <michael.hudson@canonical.com>
-
-	PR 26902
-	* powerpc.cc (Relocate::relocate): Do not include local entry
-	offset of target function when computing the address of a stub.
-
-2020-10-09  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Powerpc_relobj::do_relocate_sections): Don't do
-	local entry offset optimisation for lplt_section.
-	(Target_powerpc::Branch_info::make_stub): Don't add local
-	entry offset to long branch dest passed to
-	add_long_branch_entry.  Do pass st_other bits.
-	(Stub_table::Branch_stub_ent): Add "other_" field.
-	(Stub_table::add_long_branch_entry): Add "other" param, and
-	save.
-	(Stub_table::branch_stub_size): Adjust long branch offset.
-	(Stub_table::do_write): Likewise.
-	(Target_powerpc::Relocate::relocate): Likewise.
-
-2020-10-09  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (is_got_reloc): New function.
-	(Target_powerpc::Relocate::relocate): Use it here, exclude GOT
-	relocs when looking for stubs.
-
-2020-10-08  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/split_i386.sh: Updated for --split-stack-adjust-size
-	default change.
-	* testsuite/split_x86_64.sh: Likewise.
-
-2020-10-08  Alan Modra  <amodra@gmail.com>
-
-	* options.h (split_stack_adjust_size): Default to 0x100000.
-
-2020-09-26  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Target_powerpc): Rename power10_stubs_ to
-	power10_relocs_.
-	(Target_powerpc::set_power10_relocs): New accessor.
-	(Target_powerpc::set_power10_stubs): Delete.
-	(Target_powerpc::power10_stubs): Adjust.
-	(Target_powerpc::has_localentry0): New accessor.
-	(ld_0_11): New constant.
-	(glink_eh_frame_fde_64v1, glink_eh_frame_fde_64v2): Adjust.
-	(glink_eh_frame_fde_64v2_localentry0): New.
-	(Output_data_glink::pltresolve_size): Update.
-	(Output_data_glink::add_eh_frame): Use localentry0 version eh_frame.
-	(Output_data_glink::do_write): Move r2 save to start of ELFv2 stub
-	and only emit for has_localentry0.  Don't use r2 in the stub.
-	(Target_powerpc::Scan::local, global): Adjust for
-	set_power10_relocs renaming.
-	(Target_powerpc::scan_relocs): Warn and reset plt_localentry0_.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc (Target_powerpc::Relocate::relocate): Don't skip
-	first insn of __tls_get_addr_opt stub.
-
-2020-09-24  Alan Modra  <amodra@gmail.com>
-
-	Apply from master
-	2020-07-27  Alan Modra  <amodra@gmail.com>
-	* options.h (DEFINE_enum): Add optional_arg__ param, adjust
-	all uses.
-	(General_options): Add --power10-stubs and --no-power10-stubs.
-	* options.cc (General_options::parse_no_power10_stubs): New.
-	(General_options::finalize): Handle --power10-stubs.
-	* powerpc.cc (set_power10_stubs): Don't set when --power10-stubs=no.
-	(power10_stubs_auto): New.
-	(struct Plt_stub_ent): Add toc_ and tocoff_.  Don't use a bitfield
-	for indx_.
-	(struct Branch_stub_ent): Add toc_and tocoff_.  Use bitfields for
-	iter_, notoc_ and save_res_.
-	(add_plt_call_entry): Set toc_.  Adjust resizing conditions for
-	--power10-stubs=auto.
-	(add_long_branch_entry): Set toc_.
-	(add_eh_frame, define_stub_syms): No longer use const_iterators
-	for plt and long branch stub iteration.
-	(build_tls_opt_head, build_tls_opt_tail): Change parameters and
-	return value.  Move tests for __tls_get_addr to callers.
-	(plt_call_size): Handle --power10-stubs=auto.
-	(branch_stub_size): Likewise.
-	(Stub_table::do_write): Likewise.
-	(relocate): Likewise.
-
-2020-09-19  Nick Clifton  <nickc@redhat.com>
-
-	This is the 2.35.1 point release.
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
+	This is the 2.36 release.
 	* po/gold.pot: Regenerate.
 
-2020-09-10  Alan Modra  <amodra@gmail.com>
+2021-01-19  Alan Modra  <amodra@gmail.com>
 
-	Apply from master
-	2020-08-24  Alan Modra  <amodra@gmail.com>
-	* powerpc.cc (Target_powerpc): Add tprel_opt_ and accessors.
-	(Target_powerpc::Scan::local): Sanity check tprel high relocs.
-	(Target_powerpc::Scan::global): Likewise.
-	(Target_powerpc::Relocate::relocate): Control tprel optimisation
-	with tprel_opt_ and enable for 32-bit.
+	PR 27203
+	* powerpc.cc (do_plt_fde_location): Remove doing_static_link
+	assertion.
 
-2020-08-12  Nick Clifton  <nickc@redhat.com>
+2021-01-18  H.J. Lu  <hongjiu.lu@intel.com>
 
-	* po/sr.po: Updated Serbian translation.
+	* testsuite/ifuncmain6pie.c: Remove non-JUMP_SLOT relocations
+	against foo in ifuncmod6.so.
+	* testsuite/ifuncmod6.c: Likewise.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-14  Nick Clifton  <nickc@redhat.com>
 
-	2.35 Release:
-	* po/gold.pot: Regenerate.
-
-2020-07-06  Nick Clifton  <nickc@redhat.com>
-
-	* target-reloc.h (Default_comdat_behaviour:get): Ignore discarded
-	relocs that refer to the .gnu.build.attributes section.
-	* testsuite/script_test_7.sh: Adjust expected address of the .bss
-	section.
-	* testsuite/script_test_9.sh: Do not expect the .init section to
-	immediately follow the .text section in the mapping of sections to
-	segments.
+	* po/fr.po: Updated French translation.
 
-2020-07-06  Nick Clifton  <nickc@redhat.com>
+2021-01-11  Nick Clifton  <nickc@redhat.com>
 
-	* po/fr.po: Updated French translation.
+	* po/sr.po: Updated Serbian translation.
 	* po/uk.po: Updated Ukranian translation.
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
 	* po/gold.pot: Regenerate.
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.35 branch created.
-
-2020-07-03  Alan Modra  <amodra@gmail.com>
-
-	PR 26028
-	* testsuite/Makefile.am (file_in_many_sections.stdout): Add -W
-	to readelf options.
-	* testsuite/Makefile.in: Regenerate.
-
-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
-
-	* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.
-	* configure: Regenerated.
-	* config.h.in: Likewise.
-
-2020-06-24  Nick Clifton  <nickc@redhat.com>
-
-	* target-reloc.h (issue_discarded_error): Initialise the
-	key_symndx variable.
-
-2020-06-23  Roland McGrath  <mcgrathr@google.com>
-
-	PR 22843
-	* options.h (class General_options): Add --dependency-file option.
-	* fileread.cc (File_read::files_read): New static variable.
-	(File_read::open): Add the file to the files_read list.
-	(File_read::record_file_read): New static member function.
-	(File_read::write_dependency_file): New static member function.
-	* fileread.h (class File_read): Declare them.
-	* layout.cc (Layout::read_layout_from_file): Call record_file_read.
-	(Close_task_runner::run): Call write_dependency_file if
-	--dependency-file was passed.
-
-2020-06-18  Fangrui Song  <i@maskray.me>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-	PR gold/26039
-	* layout.cc (Layout::finish_dynamic_section): Set DF_1_PIE.
+	* 2.36 release branch crated.
 
-2020-06-16  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/discard_locals_test.c: Replace uses of asm with __asm__.
-	* testsuite/discard_locals_relocatable_test.c: Likewise.
-
-2020-06-16  Alan Modra  <amodra@gmail.com>
-
-	* testsuite/Makefile.am (export_dynamic_plugin.o): Use CXXCOMPILE.
-	(plugin_test_wrap_symbols_1.o): Likewise.
-	(plugin_test_wrap_symbols_2.o): Likewise.
-	* testsuite/Makefile.in: Regenerate.
-
-2020-06-15  Roland McGrath  <mcgrathr@google.com>
-
-	Implement -z start-stop-visibility=... option.
-	* options.h (class General_options): Handle -z start-stop-visibility=.
-	(General_options::start_stop_visibility_enum): New public method.
-	(General_options::set_start_stop_visibility_enum): New private method.
-	(General_options::start_stop_visibility_enum_): New private member.
-	* options.cc (General_options::General_options): Add initializer.
-	(General_options::finalize): Set this->start_stop_visibility_enum_
-	from string value.
-	* layout.cc (Layout::define_section_symbols): Use option setting.
-
-2020-06-06  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc: Update throughout for reloc renaming.
-
-2020-05-22  Alan Modra  <amodra@gmail.com>
-
-	PR 25882
-	* powerpc.cc (merge_object_attributes): Replace name param with
-	obj param.  Update callers.  Don't init FP attributes from shared
-	libraries, and do not emit an error if they don't match.
-
-2020-05-15  Nikita Ermakov  <coffe92@gmail.com>
-
-	* powerpc.cc (do_gc_mark_symbol): Don't segfault on plugin symbols.
-
-2020-05-14  Nick Clifton  <nickc@redhat.com>
-
-	* po/sr.po: New Serbian translation.
-
-2020-05-11  Alan Modra  <amodra@gmail.com>
-
-	* powerpc.cc: Rename powerxx to power10 throughout.
-
-2020-05-02  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gold/25904
-	* testsuite/Makefile.am (COMMON_TEST_C_CFLAGS): New.
-	(common_test_1.o): New rule.
-	(common_test_2.o): Likewise.
-	(common_test_3.o): Likewise.
-	(plugin_common_test_1.o): Likewise.
-	(plugin_common_test_2.o): Likewise.
-	(common_test_1_v1.o): Likewise.
-	(common_test_1_v2.o): Likewise.
-	(common_test_2_pic.o): Compile with $(COMMON_TEST_C_CFLAGS).
-	(common_test_3_pic.o): Likewise.
-	* testsuite/Makefile.in: Regenerated.
-
-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gold/25426
-	* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):
-	For x32, relax "rex leal foo@tlsdesc(%rip), %reg" to
-	"rex movl foo@gottpoff(%rip), %eax" and relax ""call *(%eax)"
-	to "nopl (%rax)".
-	(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): For x32,
-	relax "rex leal foo@tlsdesc(%rip), %reg" to
-	"rex movl foo@tpoff, %eax" and relax "call *foo@tlscall(%eax)"
-	to "nopl (%rax)".
-	* testsuite/Makefile.am (tls_test_gnu2.o): Depend on
-	gcctestdir/as.
-	(tls_test_file2_gnu2.o): Likewise.
-	(tls_test_c_gnu2.o): Likewise.
-	* testsuite/Makefile.in: Regenerated.
-
-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gold/25473
-	* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):
-	Properly check r8 - r15 in "lea foo@TLSDESC(%rip), %reg".
-	(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): Properly
-	relax r8 - r15 in "lea foo@TLSDESC(%rip), %reg".
-	* testsuite/Makefile.am (check_SCRIPTS): Add x86_64_gd_to_le.sh.
-	(check_DATA): Add x86_64_gd_to_le.stdout.
-	(MOSTLYCLEANFILES): Add x86_64_gd_to_le.
-	(x86_64_gd_to_le.o): New target.
-	(x86_64_gd_to_le): Likewise.
-	(x86_64_gd_to_le.stdout): Likewise.
-	* testsuite/Makefile.in: Regenerated.
-	* testsuite/x86_64_gd_to_le.s: New file.
-	* testsuite/x86_64_gd_to_le.sh: Likewise.
-
-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/odr_violation2.cc (Ordering::operator()): Make
-	expression even more complex.
-
-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	* testsuite/ver_test_pr16504.sh: Updated.
-
-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gold/25872
-	* x86_64.cc (Output_data_plt_x86_64_bnd::do_write): Increment
-	plt_offset after setting the reserved TLSDESC PLT entry.
-	(Output_data_plt_x86_64_ibt<size>::do_write): Likewise.
-
-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
-
-	PR gold/25872
-	* x86_64.cc (Output_data_plt_x86_64_bnd::do_address_for_local):
-	Handle local IFUNC symbol.
-	(Output_data_plt_x86_64_ibt::do_address_for_local): Likewise.
-
-2020-03-19  Fangrui Song  <maskray@google.com>
-
-    * options.h (General_options): Add --no-rosegment option.
-
-2020-02-24  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Update French translation.
-
-2020-01-20  Nick Clifton  <nickc@redhat.com>
-
-	* po/uk.po: Updated Ukranian translation.
-
-2020-01-18  Nick Clifton  <nickc@redhat.com>
+2021-01-03  Alan Modra  <amodra@gmail.com>
 
-	* configure: Regenerate.
-	* po/gold.pot: Regenerate.
+	PR 27140
+	* powerpc.cc (Target_powerpc::Branch_info::make_stub): Only access
+	object->st_other() when 64-bit.
+	(Stub_table::add_long_branch_entry): Ignore "other" when 32-bit.
 
-2020-01-18  Nick Clifton  <nickc@redhat.com>
+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>
 
-	Binutils 2.34 branch created.
+	* tilegx.cc: Correct comment spelling.
 
-2020-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/libiberty/ChangeLog b/libiberty/ChangeLog
index 42daff15948..a6f82ef6ec9 100644
--- a/libiberty/ChangeLog
+++ b/libiberty/ChangeLog
@@ -1,12 +1,161 @@
-2020-11-15  Mark Wielaard  <mark@klomp.org>
+2021-01-04  Martin Liska  <mliska@suse.cz>
 
-	Backport from the mainline:
-	2020-09-23  Mark Wielaard  <mark@klomp.org>
+	* strverscmp.c: Convert to utf8 from iso8859.
+
+2020-12-22  Jason Merrill  <jason@redhat.com>
+
+	PR c++/67343
+	* cp-demangle.h (struct d_info): Add unresolved_name_state.
+	* cp-demangle.c (d_prefix): Add subst parm.
+	(d_nested_name): Pass it.
+	(d_unresolved_name): Split out from...
+	(d_expression_1): ...here.
+	(d_demangle_callback): Maybe retry with old sr mangling.
+	* testsuite/demangle-expected: Add test.
+
+2020-12-21  Jason Merrill  <jason@redhat.com>
+
+	* cp-demangle.c (d_expression_1): Recognize qualified-id
+	on RHS of dt/pt.
+	* testsuite/demangle-expected: Add test.
+
+2020-12-21  Jason Merrill  <jason@redhat.com>
+
+	* cp-demangle.c (d_unqualified_name): Clear is_expression.
+	* testsuite/demangle-expected: Add tests.
+
+2020-11-25  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* configure: Regenerate.
+	* configure.ac: Avoid using sanitizer.
+
+2020-11-13  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
+
+	* rust-demangle.c (struct rust_demangler): Add
+	skipping_printing and bound_lifetime_depth fields.
+	(eat): Add (v0-only).
+	(parse_integer_62): Add (v0-only).
+	(parse_opt_integer_62): Add (v0-only).
+	(parse_disambiguator): Add (v0-only).
+	(struct rust_mangled_ident): Add punycode{,_len} fields.
+	(parse_ident): Support v0 identifiers.
+	(print_str): Respect skipping_printing.
+	(print_uint64): Add (v0-only).
+	(print_uint64_hex): Add (v0-only).
+	(print_ident): Respect skipping_printing,
+	Support v0 identifiers.
+	(print_lifetime_from_index): Add (v0-only).
+	(demangle_binder): Add (v0-only).
+	(demangle_path): Add (v0-only).
+	(demangle_generic_arg): Add (v0-only).
+	(demangle_type): Add (v0-only).
+	(demangle_path_maybe_open_generics): Add (v0-only).
+	(demangle_dyn_trait): Add (v0-only).
+	(demangle_const): Add (v0-only).
+	(demangle_const_uint): Add (v0-only).
+	(basic_type): Add (v0-only).
+	(rust_demangle_callback): Support v0 symbols.
+	* testsuite/rust-demangle-expected: Add v0 testcases.
+
+2020-11-13  Seija Kijin  <doremylover456@gmail.com>
+
+	* strstr.c (strstr): Make implementation ANSI/POSIX compliant.
+
+2020-11-11  Patrick Palka  <ppalka@redhat.com>
+
+	PR c++/88115
+	* cp-demangle.c (d_print_comp_inner)
+	<case DEMANGLE_COMPONENT_EXTENDED_OPERATOR>: Don't print the
+	"operator " prefix for __alignof__.
+	<case DEMANGLE_COMPONENT_UNARY>: Always print parens around the
+	operand of __alignof__.
+	* testsuite/demangle-expected: Test demangling for __alignof__.
+
+2020-11-09  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* pex-win32.c (pex_win32_exec_child): Initialize orig_err.
+
+2020-10-06  Martin Liska  <mliska@suse.cz>
+
+	PR lto/97290
+	* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):
+	Use sh_link of a .symtab_shndx section.
+
+2020-09-24  Mark Wielaard  <mark@klomp.org>
 
-	Sync with GCC
 	* dwarfnames.c (get_DW_UT_name): Define using DW_UT_FIRST, DW_UT
 	and DW_UT_END.
 
+2020-09-08  Felix Willgerodt  <felix.willgerodt@intel.com>
+
+	* floatformat.c (floatformat_bfloat16_big): New.
+	(floatformat_bfloat16_little): New.
+
+2020-09-08  Alan Modra  <amodra@gmail.com>
+
+	* d-demangle.c: Include limits.h.
+	(ULONG_MAX, UINT_MAX): Provide fall-back definition.
+	(dlang_number): Simplify and correct overflow test.  Only
+	write *ret on returning non-NULL.  Make "ret" an unsigned long*.
+	Only succeed for result of [0,UINT_MAX].
+	(dlang_decode_backref): Simplify and correct overflow test.
+	Only write *ret on returning non-NULL.  Only succeed for
+	result [1,MAX_LONG].
+	(dlang_backref): Remove now unnecessary range check.
+	(dlang_symbol_name_p): Likewise.
+	(string_need): Take a size_t n arg, and use size_t tem.
+	(string_append): Use size_t n.
+	(string_appendn, string_prependn): Take a size_t n arg.
+	(TEMPLATE_LENGTH_UNKNOWN): Define as -1UL.
+	(dlang_lname, dlang_parse_template): Take an unsigned long len
+	arg.
+	(dlang_symbol_backref, dlang_identifier, dlang_parse_integer),
+	(dlang_parse_integer, dlang_parse_string),
+	(dlang_parse_arrayliteral, dlang_parse_assocarray),
+	(dlang_parse_structlit, dlang_parse_tuple),
+	(dlang_template_symbol_param, dlang_template_args): Use
+	unsigned long variables.
+	* testsuite/d-demangle-expected: Add new tests.
+
+2020-08-26  Iain Buclaw  <ibuclaw@gdcproject.org>
+
+	* d-demangle.c (dlang_function_args): Handle 'in' and 'in ref'
+	parameter storage classes.
+	(dlang_type): Remove identifier type.
+	* testsuite/d-demangle-expected: Update tests.
+
+2020-08-03  Richard Biener  <rguenther@suse.de>
+
+	PR lto/96385
+	* simple-object-elf.c
+	(simple_object_elf_copy_lto_debug_sections): Localize global
+	UNDEFs and reuse the prevailing name.
+
+2020-07-30  H.J. Lu  <hjl.tools@gmail.com>
+
+	PR bootstrap/96202
+	* configure: Regenerated.
+
+2020-07-14  Ian Lance Taylor  <iant@golang.org>
+
+	PR demangler/96143
+	* cp-demangle.c (d_lambda): Don't add substitution candidate.
+	* testsuite/demangle-expected: Update a few existing test cases
+	accordingly, and add a new test case.
+
+2020-07-10  Jason Merrill  <jason@redhat.com>
+
+	* cp-demangle.c (cplus_demangle_operators): Add di, dx, dX.
+	(d_expression_1): Handle di and dX.
+	(is_designated_init, d_maybe_print_designated_init): New.
+	(d_print_comp_inner): Use d_maybe_print_designated_init.
+	* testsuite/demangle-expected: Add designator tests.
+
+2020-06-26  Nick Clifton  <nickc@redhat.com>
+
+	* bsearch.c (bsearch): Remove use of register keyword.
+	* bsearch_r.c (bsearch_r): Likewise.
+
 2020-06-23  Nick Alcock  <nick.alcock@oracle.com>
 
 	* bsearch_r.c: New file.
diff --git a/gprof/ChangeLog b/gprof/ChangeLog
index 511e9ee8480..843d784f818 100644
--- a/gprof/ChangeLog
+++ b/gprof/ChangeLog
@@ -1,89 +1,41 @@
-2020-09-19  Nick Clifton  <nickc@redhat.com>
-
-	This is the 2.35.1 point release.
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
 	* configure: Regenerate.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-24  Nick Clifton  <nickc@redhat.com>
 
+	This is the 2.36 release.
 	* configure: Regenerate.
 
-2020-07-24  Nick Clifton  <nickc@redhat.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-	2.35 Release:
 	* configure: Regenerate.
 	* po/gprof.pot: Regenerate.
 
-2020-07-09  Nick Clifton  <nickc@redhat.com>
-
-	* po/tr.po: Updated Turkish translation.
-
-2020-07-06  Nick Clifton  <nickc@redhat.com>
+2021-01-09  Nick Clifton  <nickc@redhat.com>
 
-	* po/bg.po: Updated Bulgarian translation.
+	* 2.36 release branch crated.
 
-2020-07-04  Nick Clifton  <nickc@redhat.com>
+2021-01-09  Alan Modra  <amodra@gmail.com>
 
 	* configure: Regenerate.
-	* po/gprof.pot: Regenerate.
-
-2020-07-04  Nick Clifton  <nickc@redhat.com>
-
-	Binutils 2.35 branch created.
-
-2020-06-25  Nick Clifton  <nickc@redhat.com>
-
-	* po/sv.po: Updated Swedish translation.
-
-2020-05-21  Alan Modra  <amodra@gmail.com>
-
-	* utils.c (print_name_only): Free demangled without checking
-	first for non-NULL.
-
-2020-05-18  Nick Clifton  <nickc@redhat.com>
-
-	* po/es.po: Update Spanish translation.
-
-2020-05-07  Nick Clifton  <nickc@redhat.com>
-
-	* po/fr.po: Updated French translation.
-
-2020-04-01  Nick Clifton  <nickc@redhat.com>
-
-	* po/sr.po: Updated Serbian translation.
-
-2020-02-24  Nick Clifton  <nickc@redhat.com>
-
-	* po/ms.po: Update Malasian translation.
-
-2020-01-23  Nick Clifton  <nickc@redhat.com>
-
-	* po/es.po: Updated Esperanto translation.
-	* po/fi.po: Updated Finish translation.
-
-2020-01-20  Nick Clifton  <nickc@redhat.com>
-
-	* po/de.po: Updated German translation.
-	* po/pt_BR.po: Updated Brazilian Portuguese translation.
-	* po/ru.po: Updated Russian translation.
-	* po/tr.po: Updated Turkish translation.
-	* po/uk.po: Updated Ukranian translation.
 
-2020-01-18  Nick Clifton  <nickc@redhat.com>
+2021-01-07  Samuel Thibault  <samuel.thibault@gnu.org>
 
 	* configure: Regenerate.
 
-2020-01-18  Nick Clifton  <nickc@redhat.com>
+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>
 
-	Binutils 2.34 branch created.
+	* README: Correct grammar.
+	* gprof.texi: Likewise.
 
-2020-01-01  Alan Modra  <amodra@gmail.com>
+2021-01-01  Alan Modra  <amodra@gmail.com>
 
 	Update year range in copyright notice of all files.
 
-For older changes see ChangeLog-2019
+For older changes see ChangeLog-2020
 
-Copyright (C) 2020 Free Software Foundation, Inc.
+Copyright (C) 2021 Free Software Foundation, Inc.
 
 Copying and distribution of this file, with or without modification,
 are permitted in any medium without royalty provided the copyright
diff --git a/include/ChangeLog-2020 b/include/ChangeLog-2020
new file mode 100644
index 00000000000..976b36105e3
--- /dev/null
+++ b/include/ChangeLog-2020
@@ -0,0 +1,1020 @@
+2020-12-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf/common.h (GNU_PROPERTY_X86_FEATURE_1_LAM_U48): New.
+	(GNU_PROPERTY_X86_FEATURE_1_LAM_U57): Likewise.
+
+2020-12-18  Alan Modra  <amodra@gmail.com>
+
+	* xtensa-isa-internal.h (xtisa_errno, xtisa_error_msg): Delete.
+
+2020-12-18  Alan Modra  <amodra@gmail.com>
+
+	* opcode/arc-attrs.h (CONFLICT_LIST): Make const.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* bfdlink.h (struct bfd_link_info): Add maxpagesize and
+	commonpagesize.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* xtensa-isa-internal.h (xtensa_format_internal),
+	(xtensa_slot_internal, xtensa_operand_internal),
+	(xtensa_arg_internal, xtensa_iclass_internal),
+	(xtensa_opcode_internal, xtensa_regfile_internal),
+	(xtensa_interface_internal, xtensa_funcUnit_internal),
+	(xtensa_state_internal, xtensa_sysreg_internal): Constify.
+
+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>
+
+	* elf/common.h (DT_GNU_FLAGS_1, DF_GNU_1_UNIQUE): Define.
+	* bfdlink.h (struct bfd_link_info): New field gnu_flags_1.
+
+2020-12-11  Cary Coutant  <ccoutant@gmail.com>
+
+	* elf/common.h: Update list of e_machine values.
+
+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv.h (M_ZEXTH, M_ZEXTW, M_SEXTB, M_SEXTH.): Added.
+
+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv.h: Add INSN_CLASS_ZICSR and INSN_CLASS_ZIFENCEI.
+
+2020-12-07  Nick Clifton  <nickc@redhat.com>
+
+	* elf/common.h (SHF_GNU_BUILD_NOTE): Delete.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv.h (RISCV_UNKNOWN_VERSION): added.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv.h (riscv_ext_version):
+	Change the version type from unsigned to int.
+
+2020-11-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h: Style nit: remove () on function names in comments.
+	(ctf_sect_t): Mention endianness concerns.
+	(ctf_symsect_endianness): New declaration.
+	(ctf_arc_symsect_endianness): Likewise.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_getsymsect): New.
+	(ctf_getstrsect): Likewise.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_arc_lookup_symbol): New.
+	(ctf_arc_flush_caches): Likewise.
+	* ctf.h: Document new auto-ctf_import behaviour.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_symbol_next): New.
+	(ctf_add_objt_sym): Likewise.
+	(ctf_add_func_sym): Likewise.
+	* ctf.h: Document new function info section format.
+	(CTF_F_NEWFUNCINFO): New.
+	(CTF_F_IDXSORTED): New.
+	(CTF_F_MAX): Adjust accordingly.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* bfdlink.h (struct elf_sym_strtab): Replace with...
+	(struct elf_internal_sym): ... this.
+	(struct bfd_link_callbacks) <examine_strtab>: Take only a
+	symstrtab argument.
+	<ctf_new_symbol>: New.
+	<ctf_new_dynsym>: Likewise.
+	* ctf-api.h (struct ctf_link_sym) <st_symidx>: New.
+	<st_nameidx>: Likewise.
+	<st_nameidx_set>: Likewise.
+	(ctf_link_iter_symbol_f): Removed.
+	(ctf_link_shuffle_syms): Remove most parameters, just takes a
+	ctf_dict_t now.
+	(ctf_link_add_linker_symbol): New, split from
+	ctf_link_shuffle_syms.
+	* ctf.h (CTF_F_DYNSTR): New.
+	(CTF_F_MAX): Adjust.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_arc_open_by_name): Rename to...
+	(ctf_dict_open): ... this, keeping compatibility function.
+	(ctf_arc_open_by_name_sections): Rename to...
+	(ctf_dict_open_sections): ... this, keeping compatibility function.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_file_t): Rename to...
+	(ctf_dict_t): ... this.  Keep ctf_file_t around for compatibility.
+	(struct ctf_file): Likewise rename to...
+	(struct ctf_dict): ... this.
+	(ctf_file_close): Rename to...
+	(ctf_dict_close): ... this, keeping compatibility function.
+	(ctf_parent_file): Rename to...
+	(ctf_parent_dict): ... this, keeping compatibility function.
+	All callers adjusted.
+	* ctf.h: Rename references to ctf_file_t to ctf_dict_t.
+	(struct ctf_archive) <ctfa_nfiles>: Rename to...
+	<ctfa_ndicts>: ... this.
+
+2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* elf/common.h (SHF_GNU_RETAIN): Define.
+
+2020-11-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_FLAGM): Add new feature.
+	(AARCH64_FEATURE_FLAGMANIP): Update comment.
+	(AARCH64_ARCH_V8_4): Add back FLAGM to Armv8.4-A.
+
+2020-11-09  Spencer E. Olson  <olsonse@umich.edu>
+
+	* opcode/pru.h: Add LMBD (left-most bit detect) opcode index.
+
+2020-11-09  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): Add new operand AARCH64_OPND_Rt_LS64.
+
+2020-11-06  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_PAC): Add new feature.
+	(AARCH64_ARCH_V8_3): Add back PAC to Armv8.3-A.
+
+2020-11-04  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (AARCH64_ARCH_V8): Add RAS to Armv8-A.
+	(AARCH64_ARCH_V8_2): Remove RAS from Armv8.2-A set.
+
+2020-11-03  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_LS64): New +ls64 feature flag.
+	(AARCH64_ARCH_V8_7): Add LS64 as part of Armv8.7-a.
+
+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* elf/common.h (GNU_PROPERTY_X86_ISA_1_BASELINE): New.
+	(GNU_PROPERTY_X86_ISA_1_V2): Uppdated.
+	(GNU_PROPERTY_X86_ISA_1_V3): Likewise.
+	(GNU_PROPERTY_X86_ISA_1_V4): Likewise.
+
+2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_CSRE): New -march feature.
+(enum aarch64_opnd): New CSR instruction field AARCH64_OPND_CSRE_CSR.
+
+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* opcode/csky.h (CSKY_VERSION_V1): New, currently used.
+	(CSKY_VERSION_V2): New.
+	(CSKY_VERSION_V3): New.
+
+2020-10-23  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): New operand
+	AARCH64_OPND_BARRIER_DSB_NXS.
+	(aarch64_barrier_dsb_nxs_options): Declare DSB nXS options.
+
+2020-10-21  Tom Tromey  <tromey@adacore.com>
+
+	* ctf-api.h (_CTF_ERRORS): New macro.
+
+2020-10-16  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elf/riscv.h: Add R_RISCV_IRELATIVE to 58.
+
+2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_V8_7): New feature bitmask.
+	(AARCH64_ARCH_V8_7): New arch feature set.
+
+2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* elf/common.h (GNU_PROPERTY_X86_ISA_1_USED): Renamed to ...
+	(GNU_PROPERTY_X86_COMPAT_2_ISA_1_USED): This.
+	(GNU_PROPERTY_X86_ISA_1_NEEDED): Renamed to ...
+	(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): This.
+	(GNU_PROPERTY_X86_ISA_1_XXX): Renamed to ...
+	(GNU_PROPERTY_X86_COMPAT_2_ISA_1_XXX): This.
+	(GNU_PROPERTY_X86_ISA_1_NEEDED): New.
+	(GNU_PROPERTY_X86_ISA_1_USED): Likewise.
+	(GNU_PROPERTY_X86_ISA_1_V2): Likewise.
+	(GNU_PROPERTY_X86_ISA_1_V3): Likewise.
+	(GNU_PROPERTY_X86_ISA_1_V4): Likewise.
+	(GNU_PROPERTY_X86_FEATURE_2_MASK): Likewise.
+
+2020-09-23  Mark Wielaard  <mark@klomp.org>
+
+	Sync with GCC
+	* dwarf2.def: Add DWARF5 Unit type header encoding macros
+	DW_UT_FIRST, DW_UT and DW_UT_END.
+	* dwarf2.h (enum dwarf_unit_type): Removed and define using
+	DW_UT_FIRST, DW_UT and DW_UT_END macros.
+	(get_DW_UT_name): New function declaration.
+
+2020-09-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26391
+	* bfdlink.h (bfd_link_info): Add unique_symbol.
+
+2020-09-11  Felix Willgerodt  <felix.willgerodt@intel.com>
+
+	Sync with GCC
+	2020-09-08  Felix Willgerodt  <felix.willgerodt@intel.com>
+
+	* floatformat.h (floatformat_bfloat16_big): New.
+	(floatformat_bfloat16_little): New.
+
+2020-09-12 Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* opcode/csky.h (CSKYV1_ISA_E1): Convert to bfd_uint64_t type.
+	(CSKYV2_ISA_E1): Likewise.
+	(CSKYV2_ISA_1E2>): Likewise.
+	(CSKYV2_ISA_2E3>): Likewise.
+	(CSKYV2_ISA_3E7>): Likewise.
+	(CSKYV2_ISA_7E10): Likewise.
+	(CSKYV2_ISA_3E3R1): Likewise.
+	(CSKYV2_ISA_3E3R2): Likewise.
+	(CSKYV2_ISA_10E60): Likewise.
+	(CSKYV2_ISA_3E3R3): Likewise.
+	(CSKY_ISA_TRUST): Likewise.
+	(CSKY_ISA_CACHE): Likewise.
+	(CSKY_ISA_NVIC): Likewise.
+	(CSKY_ISA_CP): Likewise.
+	(CSKY_ISA_MP): Likewise.
+	(CSKY_ISA_MP_1E2): Likewise.
+	(CSKY_ISA_JAVA): Likewise.
+	(CSKY_ISA_MAC): Likewise.
+	(CSKY_ISA_MAC_DSP): Likewise.
+	(CSKY_ISA_DSP): Likewise.
+	(CSKY_ISA_DSP_1E2): Likewise.
+	(CSKY_ISA_DSP_ENHANCE): Likewise.
+	(CSKY_ISA_DSPE60): Likewise.
+	(CSKY_ISA_FLOAT_E1): Likewise.
+	(CSKY_ISA_FLOAT_1E2): Likewise.
+	(CSKY_ISA_FLOAT_1E3): Likewise.
+	(CSKY_ISA_FLOAT_3E4): Likewise.
+	(CSKY_ISA_FLOAT_7E60): Likewise.
+	(CSKY_ISA_VDSP): Likewise.
+	(CSKY_ISA_VDSP_2): Likewise.
+	(CSKY_ARCH_804): Define.
+	(CSKY_ARCH_805): Define.
+	(CSKY_ARCH_800): Define.
+
+2020-09-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf/common.h (NT_X86_CET): New.
+
+2020-09-10  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* opcode/csky.h (CSKY_ARCH_804): Define.
+	(CSKY_ARCH_805): Define.
+	(CSKY_ARCH_800): Define.
+
+2020-09-10  Nick Clifton  <nickc@redhat.com>
+
+	* opcode/csky.h (CSKY_ISA_FLOAT_7E60): Use a long long type for
+	this value.
+
+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* opcode/csky.h (CSKY_ISA_DSPE60): Define.
+
+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* opcode/csky.h (CSKY_ISA_FLOAT_7E60): Define.
+
+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+	Kuan-Lin Chen  <kuanlinchentw@gmail.com>
+
+	* elf/msp430.h (elf_msp430_reloc_type): Add
+	R_MSP430_GNU_{SET,SUB}_ULEB128.
+	(elf_msp430x_reloc_type): Add R_MSP430X_GNU_{SET,SUB}_ULEB128.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* opcode/aarch64.h (aarch64_sys_ins_reg_supported_p): Also take
+	system register name in order to simplify validation for v8-R.
+	(aarch64_print_operand): Also take CPU feature set, as disassembly for
+	system registers now depends on arch variant.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_V8_A): New.
+	(AARCH64_FEATURE_V8_R): New.
+	(AARCH64_ARCH_V8): Include new A-profile feature bit.
+	(AARCH64_ARCH_V8_R): New.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* opcode/v850.h (struct v850_operand <insert>): Make param op an
+	unsigned long.
+
+2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* opcode/csky.h (CSKYV2_ISA_3E3R3): Define.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26493
+	* opcode/riscv.h (OP_MASK_CSR, OP_MASK_CUSTOM_IMM)
+	(OP_MASK_FUNCT7, OP_MASK_RS3): Make unsigned.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26457
+	* som/aout.h (SOM_SUBSPACE_ACCESS_CONTROL_BITS_MASK): Make unsigned.
+	(SOM_SUBSPACE_MEMORY_RESIDENT, SOM_SUBSPACE_DUP_COMMON)
+	(SOM_SUBSPACE_IS_COMMON, SOM_SUBSPACE_IS_LOADABLE)
+	(SOM_SUBSPACE_QUADRANT_MASK, SOM_SUBSPACE_INITIALLY_FROZEN)
+	(SOM_SUBSPACE_IS_FIRST, SOM_SUBSPACE_CODE_ONLY)
+	(SOM_SUBSPACE_SORT_KEY_MASK, SOM_SUBSPACE_REPLICATE_INIT)
+	(SOM_SUBSPACE_CONTINUATION, SOM_SUBSPACE_IS_TSPECIFIC)
+	(SOM_SUBSPACE_IS_COMDAT): Likewise.
+
+2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* elf/csky.h (SHT_CSKY_ATTRIBUTES): Define.
+	(Tag_CSKY_ARCH_NAME): New enum constant.
+	(Tag_CSKY_CPU_NAME): Likewise.
+	(Tag_CSKY_ISA_FLAGS): Likewise.
+	(Tag_CSKY_DSP_VERSION): Likewise.
+	(Tag_CSKY_VDSP_VERSION): Likewise.
+	(Tag_CSKY_FPU_VERSION): Likewise.
+	(Tag_CSKY_FPU_ABI): Likewise.
+	(Tag_CSKY_FPU_ROUNDING): Likewise.
+	(Tag_CSKY_FPU_DENORMAL): Likewise.
+	(Tag_CSKY_FPU_Exception): Likewise.
+	(Tag_CSKY_FPU_NUMBER_MODULE): Likewise.
+	(Tag_CSKY_FPU_HARDFP): Likewise.
+	(Tag_CSKY_MAX): Likewise.
+	(VAL_CSKY_DSP_VERSION_EXTENSION): Likewise.
+	(VAL_CSKY_DSP_VERSION_2): Likewise.
+	(VAL_CSKY_VDSP_VERSION_1): Likewise.
+	(VAL_CSKY_VDSP_VERSION_2): Likewise.
+	(VAL_CSKY_FPU_ABI_SOFT): Likewise.
+	(VAL_CSKY_FPU_ABI_SOFTFP): Likewise.
+	(VAL_CSKY_FPU_ABI_HARD): Likewise.
+	(VAL_CSKY_FPU_HARDFP_HALF): Likewise.
+	(VAL_CSKY_FPU_HARDFP_SINGLE): Likewise.
+	(VAL_CSKY_FPU_HARDFP_DOUBLE): Likewise.
+	* opcode/csky.h (CSKY_ISA_VDSP_V2): Define.
+	CSKYV1_ISA_E1: Change to long constant type.
+	CSKYV2_ISA_E1: Likewise.
+	CSKYV2_ISA_1E2: Likewise.
+	CSKYV2_ISA_2E3: Likewise.
+	CSKYV2_ISA_3E7: Likewise.
+	CSKYV2_ISA_7E10: Likewise.
+	CSKYV2_ISA_3E3R1: Likewise.
+	CSKYV2_ISA_3E3R2: Likewise.
+	CSKYV2_ISA_10E60: Likewise.
+	CSKY_ISA_TRUST: Likewise.
+	CSKY_ISA_CACHE: Likewise.
+	CSKY_ISA_NVIC: Likewise.
+	CSKY_ISA_CP: Likewise.
+	CSKY_ISA_MP: Likewise.
+	CSKY_ISA_MP_1E2: Likewise.
+	CSKY_ISA_JAVA: Likewise.
+	CSKY_ISA_MAC: Likewise.
+	CSKY_ISA_MAC_DSP: Likewise.
+	CSKY_ISA_DSP: Likewise.
+	CSKY_ISA_DSP_1E2: Likewise.
+	CSKY_ISA_DSP_ENHANCE: Likewise.
+	CSKY_ISA_FLOAT_E1: Likewise.
+	CSKY_ISA_FLOAT_1E2: Likewise.
+	CSKY_ISA_FLOAT_1E3: Likewise.
+	CSKY_ISA_FLOAT_3E4: Likewise.
+	CSKY_ISA_VDSP: Likewise.
+
+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_errwarning_next): New err parameter.
+
+2020-08-26  Nick Clifton  <nickc@redhat.com>
+
+	PR 26405
+	* elf/common.h (PT_OPENBSD_BOOTDATA): Define.
+	(PT_OPENBSD_RANDOMIZE): Define.
+	(PT_OPENBSD_WXNEEDED): Define.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26458
+	* elf/common.h (ELF32_R_INFO): Cast symbol index to unsigned.
+
+2020-08-24  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* opcode/csky.h (CSKYV2_ISA_10E60): New.
+	(CSKY_ARCH_860): New.
+
+2020-08-21  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky.h (CSKYV2_ISA_3E3R2): New.
+
+2020-08-21  Mark Wielaard  <mark@klomp.org>
+
+	* diagnostics.h (DIAGNOSTIC_IGNORE_DEPRECATED_REGISTER): Also define
+	for GCC 7.0 or higher.
+
+2020-08-10  Alex Coplan  <alex.coplan@arm.com>
+
+	* opcode/aarch64.h (AARCH64_MAX_SYSREG_NAME_LEN): New.
+
+2020-08-10  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* opcode/aarch64.h (aarch64_sys_reg_deprecated_p): Functions
+	paramaters changed.
+	(aarch64_sys_reg_supported_p): Function removed.
+	(aarch64_sys_ins_reg_supported_p): Functions paramaters changed.
+
+2020-07-28  Caroline Tice  <cmtice@google.com>
+
+        * dwarf2.h (enum dwarf_sect_v5): A new enum section for	the
+	sections in a DWARF 5 DWP file (DWP version 5).
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (CTF_LINK_NONDEDUP): New, turn off the
+	deduplicator.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (CTF_LINK_OMIT_VARIABLES_SECTION): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (CTF_LINK_SHARE_DUPLICATED): No longer unimplemented.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_link_variable_filter_t): New.
+	(ctf_link_set_variable_filter): Likewise.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (CTF_LINK_EMPTY_CU_MAPPINGS): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ECTF_NEEDSBFD): New.
+	(ECTF_NERR): Adjust.
+	(ctf_link): Rename share_mode arg to flags.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ECTF_INTERNAL): Adjust error text.
+	(ctf_errwarning_next): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ECTF_FLAGS): New.
+	(ECTF_NERR): Adjust.
+	* ctf.h (CTF_F_MAX): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ECTF_NEXT_END): New error.
+	(ECTF_NEXT_WRONGFUN): Likewise.
+	(ECTF_NEXT_WRONGFP): Likewise.
+	(ECTF_NERR): Adjust.
+	(ctf_next_t): New.
+	(ctf_next_create): New prototype.
+	(ctf_next_destroy): Likewise.
+	(ctf_next_copy): Likewise.
+	(ctf_member_next): Likewise.
+	(ctf_enum_next): Likewise.
+	(ctf_type_next): Likewise.
+	(ctf_label_next): Likewise.
+	(ctf_variable_next): Likewise.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_ref): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_archive_count): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_member_count): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_type_kind_forwarded): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.c (ctf_type_name_raw): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ECTF_*): Improve comments.
+	(ECTF_NERR): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h: Fix typos in comments.
+
+2020-07-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26262
+	PR ld/26267
+	* bfdlink.h (bfd_link_info): Add lto_all_symbols_read.
+
+2020-07-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf/common.h (GNU_PROPERTY_X86_FEATURE_2_TMM): New.
+
+2020-07-09  John Baldwin  <jhb@FreeBSD.org>
+
+	* elf/common.h (AT_FREEBSD_ARGC, AT_FREEBSD_ARGV, AT_FREEBSD_ENVC)
+	(AT_FREEBSD_ENVV, AT_FREEBSD_PS_STRINGS): Define.
+
+2020-07-09  Alan Modra  <amodra@gmail.com>
+
+	* coff/powerpc.h: Delete.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-06-30  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv-opc.h: Support the unprivileged CSR.  The versions
+	of the unprivileged CSR should be PRIV_SPEC_CLASS_NONE for now.
+	* opcode/riscv.h (enum riscv_csr_class): Add CSR_CLASS_DEBUG.
+
+2020-06-30  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv-opc.h: Cleanup and remove the unused macros.
+
+2020-06-29  Alan Modra  <amodra@gmail.com>
+
+	* coff/internal.h: Use C style comments.
+	* coff/pe.h: Likewise.
+	* elf/ppc64.h: Likewise.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-api.h (ctf_arc_bufopen): New.
+
+2020-06-26  Pat Bernardi  <bernardi@adacore.com>
+
+	* elf/m68k.h: Add enum for GNU object attribute with floating point
+	tag name and values.
+
+2020-06-25  Nick Clifton  <nickc@redhat.com>
+
+	* libiberty.h (bsearch_r): Remove use of the register keyword from
+	the prototype.
+
+2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	Sync with GCC
+	2020-06-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* libiberty.h (bsearch_r): New.
+
+	2020-04-17  Martin Liska  <mliska@suse.cz>
+		    Jonathan Yong <10walls@gmail.com>
+
+	PR gcov-profile/94570
+	* filenames.h (defined): Do not define HAVE_DOS_BASED_FILE_SYSTEM
+	for CYGWIN.
+
+2020-06-22  Alex Coplan  <alex.coplan@arm.com>
+
+	* opcode/aarch64.h (AARCH64_FEATURE_SHA2): Normalize.
+	(AARCH64_FEATURE_AES): Likewise.
+	(AARCH64_FEATURE_V8_4): Likewise.
+	(AARCH64_FEATURE_SM4): Likewise.
+	(AARCH64_FEATURE_SHA3): Likewise.
+	(AARCH64_FEATURE_V8): Likewise.
+	(AARCH64_FEATURE_V8_2): Likewise.
+	(AARCH64_FEATURE_V8_3): Likewise.
+	(AARCH64_FEATURE_FP): Likewise.
+	(AARCH64_FEATURE_SIMD): Likewise.
+	(AARCH64_FEATURE_CRC): Likewise.
+	(AARCH64_FEATURE_LSE): Likewise.
+	(AARCH64_FEATURE_PAN): Likewise.
+	(AARCH64_FEATURE_LOR): Likewise.
+	(AARCH64_FEATURE_RDMA): Likewise.
+	(AARCH64_FEATURE_V8_1): Likewise.
+	(AARCH64_FEATURE_F16): Likewise.
+	(AARCH64_FEATURE_RAS): Likewise.
+	(AARCH64_FEATURE_PROFILE): Likewise.
+	(AARCH64_FEATURE_SVE): Likewise.
+	(AARCH64_FEATURE_RCPC): Likewise.
+	(AARCH64_FEATURE_COMPNUM): Likewise.
+	(AARCH64_FEATURE_DOTPROD): Likewise.
+	(AARCH64_FEATURE_F16_FML): Likewise.
+	(AARCH64_FEATURE_V8_5): Likewise.
+	(AARCH64_FEATURE_V8_6): Likewise.
+	(AARCH64_FEATURE_BFLOAT16): Likewise.
+	(AARCH64_FEATURE_FLAGMANIP): Likewise.
+	(AARCH64_FEATURE_FRINTTS): Likewise.
+	(AARCH64_FEATURE_SB): Likewise.
+	(AARCH64_FEATURE_PREDRES): Likewise.
+	(AARCH64_FEATURE_CVADP): Likewise.
+	(AARCH64_FEATURE_RNG): Likewise.
+	(AARCH64_FEATURE_BTI): Likewise.
+	(AARCH64_FEATURE_SCXTNUM): Likewise.
+	(AARCH64_FEATURE_ID_PFR2): Likewise.
+	(AARCH64_FEATURE_SSBS): Likewise.
+	(AARCH64_FEATURE_MEMTAG): Likewise.
+	(AARCH64_FEATURE_TME): Likewise.
+	(AARCH64_FEATURE_I8MM): Likewise.
+	(AARCH64_FEATURE_F32MM): Likewise.
+	(AARCH64_FEATURE_F64MM): Likewise.
+	(AARCH64_FEATURE_SVE2): Likewise.
+	(AARCH64_FEATURE_SVE2_AES): Likewise.
+	(AARCH64_FEATURE_SVE2_BITPERM): Likewise.
+	(AARCH64_FEATURE_SVE2_SM4): Likewise.
+	(AARCH64_FEATURE_SVE2_SHA3): Likewise.
+
+2020-06-22  Saagar Jha  <saagar@saagarjha.com>
+
+	* mach-o/loader.h: Add declarations of two new Mach-O load
+	commands.
+
+2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv.h (riscv_get_priv_spec_class): Move the function
+	forward declarations to bfd/elfxx-riscv.h.
+	(riscv_get_priv_spec_name): Likewise.
+
+2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* elf/xtensa.h (xtensa_abi_choice): New declaration.
+
+2020-06-12  Roland McGrath  <mcgrathr@google.com>
+
+	* bfdlink.h (struct bfd_link_info): New field start_stop_visibility.
+
+2020-06-12  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv-opc.h: Update the defined versions of CSR from
+	PRIV_SPEC_CLASS_1P9 to PRIV_SPEC_CLASS_1P9P1.  Also, drop the
+	MISA DECLARE_CSR_ALIAS since it's aborted version is v1.9.
+	* opcode/riscv.h (enum riscv_priv_spec_class): Remove
+	PRIV_SPEC_CLASS_1P9.
+
+2020-06-11  Alex Coplan  <alex.coplan@arm.com>
+
+	* opcode/aarch64.h (aarch64_sys_reg): Add required features to struct
+	describing system registers.
+
+2020-06-11  Alan Modra  <amodra@gmail.com>
+
+	* elf/mips.h (Elf32_RegInfo): Use fixed width integer types.
+	(Elf64_Internal_RegInfo, Elf_Internal_Options): Likewise.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* elf/ppc64.h (elf_ppc64_reloc_type): Rename
+	R_PPC64_GOT_TLSGD34 to R_PPC64_GOT_TLSGD_PCREL34,
+	R_PPC64_GOT_TLSLD34 to R_PPC64_GOT_TLSLD_PCREL34,
+	R_PPC64_GOT_TPREL34 to R_PPC64_GOT_TPREL_PCREL34, and
+	R_PPC64_GOT_DTPREL34 to R_PPC64_GOT_DTPREL_PCREL34.
+
+2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* opcode/cgen.h: Get an `endian' argument in both
+	cgen_get_insn_value and cgen_put_insn_value.
+
+2020-06-04  Jose E. Marchesi  <jemarch@gnu.org>
+
+	* opcode/cgen.h (enum cgen_cpu_open_arg): New value
+	CGEN_CPU_OPEN_INSN_ENDIAN.
+
+2020-06-03  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv.h: Remove #include "bfd.h".  And change the return
+	types of riscv_get_isa_spec_class and riscv_get_priv_spec_class
+	from bfd_boolean to int.
+
+2020-05-28  Alan Modra  <amodra@gmail.com>
+
+	PR 26044
+	* opcode/tilepro.h (TILEPRO_NUM_PIPELINE_ENCODINGS): Move to
+	tilepro_pipeline enum.
+
+2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/22909
+	* bfdlink.h (textrel_check_method): New enum.
+	(bfd_link_textrel_check): New.
+	(bfd_link_info): Replace warn_shared_textrel and error_textrel
+	with textrel_check.
+
+2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf/common.h: Update comments for ET_EXEC and ET_DYN.
+
+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv.h: Include "bfd.h" to support bfd_boolean.
+	(enum riscv_isa_spec_class): New enum class.  All supported ISA spec
+	belong to one of the class
+	(struct riscv_ext_version): New structure holds version information
+	for the specific ISA.
+	* opcode/riscv-opc.h (DECLARE_CSR): There are two version information,
+	define_version and abort_version.  The define_version means which
+	privilege spec is started to define the CSR, and the abort_version
+	means which privilege spec is started to abort the CSR.  If the CSR is
+	valid for the newest spec, then the abort_version should be
+	PRIV_SPEC_CLASS_DRAFT.
+	(DECLARE_CSR_ALIAS): Same as DECLARE_CSR, but only for the obselete CSR.
+	* opcode/riscv.h (enum riscv_priv_spec_class): New enum class.  Define
+	the current supported privilege spec versions.
+	(struct riscv_csr_extra): Add new fields to store more information
+	about the CSR.  We use these information to find the suitable CSR
+	address when user choosing a specific privilege spec.
+
+2020-05-19  Alexander Fedotov  <alfedotov@gmail.com>
+
+	PR 25992
+	* opcode/arm.h (ARM_EXT2_V8R): Define. Modified ARM_AEXT2_V8R.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* opcode/ppc.h (PPC_OPERAND_ACC): Define.  Renumber following
+	PPC_OPERAND defines.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* elf/ppc64.h: Update comment.
+	* opcode/ppc.h (PPC_OPCODE_POWER10): Rename from PPC_OPCODE_POWERXX.
+
+2020-04-30  Alex Coplan  <alex.coplan@arm.com>
+
+	* opcode/aarch64.h (enum aarch64_opnd): Add
+	AARCH64_OPND_UNDEFINED.
+
+2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* elf/common.h (NT_ARC_V2): New macro definitions.
+
+2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
+
+	PR ld/25861
+	* elf/xtensa.h (elf_xtensa_reloc_type): New entries for
+	R_XTENSA_PDIFF{8,16,32} and R_XTENSA_NDIFF{8,16,32}.
+
+2020-04-21  Alan Modra  <amodra@gmail.com>
+
+	* elf/sh.h (STO_SH5_ISA32, SHF_SH5_ISA32, SHF_SH5_ISA32_MIXED),
+	(SHT_SH5_CR_SORTED, STT_DATALABEL): Delete.
+
+2020-04-10  Fangrui Song <maskray@google.com>
+
+	PR binutils/24613
+	* bfdlink.h (enum report_method): Delete RM_GENERATE_WARNING and
+	RM_GENERATE_ERROR. Add RM_DIAGNOSE.
+	(struct bfd_link_info): Add warn_unresolved_syms.
+
+2020-04-14  Stephen Casner  <casner@acm.org>
+
+	PR ld/25677
+	* aout/aout64.h (N_DATADDR): Add IMAGIC case.
+
+2020-04-02  Jan W. Jagersma  <jwjagersma@gmail.com>
+
+	* coff/go32exe.h: Remove file.
+	* coff/internal.h (struct internal_filehdr): Remove field
+	go32stub.  Remove flag F_GO32STUB.
+
+2020-04-01  Martin Liska  <mliska@suse.cz>
+	    Maciej W. Rozycki <macro@linux-mips.org>
+
+	PR lto/94249
+	* plugin-api.h: Fix a typo.
+
+2020-03-30  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv-opc.h: Update CSR to 1.11.
+
+2020-03-26  John Baldwin  <jhb@FreeBSD.org>
+
+	* elf/common.h (AT_FREEBSD_BSDFLAGS): Define.
+
+2020-03-24  Martin Liska  <mliska@suse.cz>
+
+	PR lto/94249
+	* plugin-api.h: Add more robust endianess detection.
+
+2020-03-21  Martin Liska  <mliska@suse.cz>
+
+	* plugin-api.h (enum ld_plugin_symbol_type): Remove
+	comma after last value of an enum.
+	* lto-symtab.h (enum gcc_plugin_symbol_type): Likewise.
+
+2020-03-19  Martin Liska  <mliska@suse.cz>
+
+	* lto-symtab.h (enum gcc_plugin_symbol_type): New.
+	(enum gcc_plugin_symbol_section_kind): Likewise.
+
+2020-03-19  Martin Liska  <mliska@suse.cz>
+
+	* plugin-api.h (struct ld_plugin_symbol): Split
+	int def into 4 char fields.
+	(enum ld_plugin_symbol_type): New.
+	(enum ld_plugin_symbol_section_kind): New.
+	(enum ld_plugin_tag): Add LDPT_ADD_SYMBOLS_V2.
+
+2020-03-13  Kamil Rytarowski  <n54@gmx.com>
+
+	* elf/common.h (NT_NETBSDCORE_LWPSTATUS): New define.
+
+2020-03-13  Kamil Rytarowski  <n54@gmx.com>
+
+	* elf/common.h (NT_NETBSDCORE_AUXV): New define.
+
+2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* bfdlink.h (bfd_link_info): Add non_contiguous_regions and
+	non_contiguous_regions_warnings fields.
+
+2020-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* bfdlink.h (struct bfd_link_order): Add unit (bytes/octets) to
+	offset and size members.
+	* elf/internal.h (struct elf_internal_phdr): Likewise for
+	p_align member.
+	(struct elf_segment_map): Likewise for p_paddr and p_size
+	members
+
+2020-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* elf/internal.h (struct elf_internal_phdr): Add unit (octets)
+	to several member field comments.
+	(Elf_Internal_Shdr): likewise.
+
+2020-03-10  Alan Modra  <amodra@gmail.com>
+
+	* som/aout.h (SOM_AUX_ID_MANDATORY, SOM_SPACE_IS_LOADABLE),
+	(SOM_SYMBOL_HIDDEN, SOM_SYMBOL_HAS_LONG_RETURN): Use 1u << 31.
+	* som/lst.h (LST_SYMBOL_HIDDEN): Likewise.
+
+2020-03-03  Luis Machado  <luis.machado@linaro.org>
+
+	* elf/common.h (AT_L1I_CACHESIZE, AT_L1I_CACHEGEOMETRY)
+	(AT_L1D_CACHESIZE, AT_L1D_CACHEGEOMETRY, AT_L2_CACHESIZE)
+	(AT_L2_CACHEGEOMETRY, AT_L3_CACHESIZE, AT_L3_CACHEGEOMETRY)
+	(AT_MINSIGSTKSZ): New defines, imported from glibc.
+
+2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	Import from gcc mainline:
+	2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* hashtab.h (htab_remove_elt): Make a parameter const.
+	(htab_remove_elt_with_hash): Likewise.
+
+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* opcode/riscv-opc.h: Extend DECLARE_CSR and DECLARE_CSR_ALIAS to
+	record riscv_csr_class.
+
+2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>
+	    Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* opcode/arm.h (ARM_EXT2_CDE): New extension macro.
+	(ARM_EXT2_CDE0): New extension macro.
+	(ARM_EXT2_CDE1): New extension macro.
+	(ARM_EXT2_CDE2): New extension macro.
+	(ARM_EXT2_CDE3): New extension macro.
+	(ARM_EXT2_CDE4): New extension macro.
+	(ARM_EXT2_CDE5): New extension macro.
+	(ARM_EXT2_CDE6): New extension macro.
+	(ARM_EXT2_CDE7): New extension macro.
+
+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25469
+	* coff/internal.h (R_IMM16BE): Define.
+	* elf/z80.h (EF_Z80_MACH_Z80N): Define.
+	(R_Z80_16_BE): New reloc.
+
+2020-02-04  Alan Modra  <amodra@gmail.com>
+
+	* opcode/d30v.h (struct pd_reg): Make value field unsigned.
+
+2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* coff/internal.h (PE_IMAGE_DEBUG_TYPE_VC_FEATURE)
+	(PE_IMAGE_DEBUG_TYPE_POGO, PE_IMAGE_DEBUG_TYPE_ILTCG)
+	(PE_IMAGE_DEBUG_TYPE_MPX, PE_IMAGE_DEBUG_TYPE_REPRO): Add.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-17  Nick Clifton  <nickc@redhat.com>
+
+	* Import from gcc mainline:
+	2019-06-10  Martin Liska  <mliska@suse.cz>
+
+	* ansidecl.h (ATTRIBUTE_WARN_UNUSED_RESULT): New macro.
+	* libiberty.h (xmalloc): Use it.
+	(xrealloc): Likewise.
+	(xcalloc): Likewise.
+	(xstrdup): Likewise.
+	(xstrndup): Likewise.
+	(xmemdup): Likewise.
+
+	2019-06-10  Martin Liska  <mliska@suse.cz>
+
+	* ansidecl.h:
+	(ATTRIBUTE_RESULT_SIZE_1): Define new macro.
+	(ATTRIBUTE_RESULT_SIZE_2): Likewise.
+	(ATTRIBUTE_RESULT_SIZE_1_2): Likewise.
+	* libiberty.h (xmalloc): Add RESULT_SIZE attribute.
+	(xrealloc): Likewise.
+	(xcalloc): Likewise.
+
+	2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>
+
+	* demangle.h (struct demangle_component): Add member
+	d_counting.
+
+	2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
+
+	* demangle.h (rust_demangle_callback): Add.
+
+	2019-07-18  Eduard-Mihai Burtescu  <eddyb@lyken.rs>
+
+	* demangle.h (rust_is_mangled): Move to libiberty/rust-demangle.h.
+	(rust_demangle_sym): Move to libiberty/rust-demangle.h.
+
+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	PR 25376
+	* opcodes/arm.h (FPU_MVE, FPU_MVE_FPU): Move these features to...
+	(ARM_EXT2_MVE, ARM_EXT2_MVE_FP): ... the CORE_HIGH space.
+	(ARM_ANY): Redefine to not include any MVE bits.
+	(ARM_FEATURE_ALL): Removed.
+
+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* opcode/msp430.h (enum msp430_expp_e): New.
+	(struct msp430_operand_s): Add expp member to struct.
+
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
+
+	* elf/arc-cpu.def: Update ARC cpu list.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* opcode/tic4x.h (EXTR): Delete.
+	(EXTRU, EXTRS, INSERTU, INSERTS): Rewrite without zero/sign
+	extension using shifts.  Do trim INSERTU value to specified bitfield.
+
+2020-01-10  Alan Modra  <amodra@gmail.com>
+
+	* opcode/spu.h: Formatting.
+	(UNSIGNED_EXTRACT): Use 1u.
+	(SIGNED_EXTRACT): Don't sign extend with shifts.
+	(DECODE_INSN_I9a, DECODE_INSN_I9b): Avoid left shift of signed value.
+	Keep result signed.
+	(DECODE_INSN_U9a, DECODE_INSN_U9b): Delete.
+
+2020-01-07  Shahab Vahedi  <shahab@synopsys.com>
+
+	* opcode/arc.h (insn_class_t): Add 'LLOCK' and 'SCOND'.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* coff/internal.h: Add defintions of Z80 reloc names.
+
+2020-01-02  Christian Biesinger  <cbiesinger@google.com>
+
+	* opcode/s12z.h: Undef REG_Y.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/libctf/ChangeLog-2020 b/libctf/ChangeLog-2020
new file mode 100644
index 00000000000..7c4e3e4d990
--- /dev/null
+++ b/libctf/ChangeLog-2020
@@ -0,0 +1,1954 @@
+2020-09-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR libctf/26934
+	* ctf-dump.c (ctf_dump_objts): Pass format argument to asprintf.
+
+2020-11-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_dict_t) <ctf_symtab_little_endian>: New.
+	(struct ctf_archive_internal) <ctfi_symsect_little_endian>: Likewise.
+	* ctf-create.c (ctf_serialize): Adjust for new field.
+	* ctf-open.c (init_symtab): Note the semantics of repeated calls.
+	(ctf_symsect_endianness): New.
+	(ctf_bufopen_internal): Set ctf_symtab_little_endian suitably for
+	the native endianness.
+	(_Static_assert): Moved...
+	(swap_thing): ... with this...
+	* swap.h: ... to here.
+	* ctf-util.c (ctf_elf32_to_link_sym): Use it, byteswapping the
+	Elf32_Sym if the ctf_symtab_little_endian demands it.
+	(ctf_elf64_to_link_sym): Likewise swap the Elf64_Sym if needed.
+	* ctf-archive.c (ctf_arc_symsect_endianness): New, set the
+	endianness of the symtab used by the dicts in an archive.
+	(ctf_archive_iter_internal): Initialize to unknown (assumed native,
+	do not call ctf_symsect_endianness).
+	(ctf_dict_open_by_offset): Call ctf_symsect_endianness if need be.
+	(ctf_dict_open_internal): Propagate the endianness down.
+	(ctf_dict_open_sections): Likewise.
+	* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Get the endianness from the
+	struct bfd and pass it down to the archive.
+	* libctf.ver: Add ctf_symsect_endianness and
+	ctf_arc_symsect_endianness.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c (ctf_link_deduplicating): Clean up the ctf_link_outputs
+	hash on error.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_dtd_insert): Set ENOMEM on the dict if out of memory.
+	(ctf_dvd_insert): Likewise.
+	(ctf_add_function): Report ECTF_RDONLY if this dict is not writable.
+	* ctf-subr.c (ctf_err_warn): Only debug-dump passed-in warnings if
+	the passed-in error code is nonzero: the error on the dict for
+	warnings may relate to a previous error.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (ctf_getsymsect): New.
+	(ctf_getstrsect): Likewise.
+	* libctf.ver: Add them.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (struct ctf_archive_internal) <ctfi_dicts>: New, dicts
+	the archive machinery has opened and cached.
+	<ctfi_symdicts>: New, cache of dicts containing symbols looked up.
+	<ctfi_syms>: New, cache of types of symbols looked up.
+	* ctf-archive.c (ctf_arc_close): Free them on close.
+	(enosym): New, flag entry for 'symbol not present'.
+	(ctf_arc_import_parent): New, automatically import the parent from
+	".ctf" if this is a child in an archive and ".ctf" is present.
+	(ctf_dict_open_sections): Use it.
+	(ctf_archive_iter_internal): Likewise.
+	(ctf_cached_dict_close): New, thunk around ctf_dict_close.
+	(ctf_dict_open_cached): New, open and cache a dict.
+	(ctf_arc_flush_caches): New, flush the caches.
+	(ctf_arc_lookup_symbol): New, look up a symbol in (all members of)
+	an archive, and cache the lookup.
+	(ctf_archive_iter): Note the new caching behaviour.
+	(ctf_archive_next): Use ctf_dict_open_cached.
+	* libctf.ver: Add ctf_arc_lookup_symbol and ctf_arc_flush_caches.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dedup.c (ctf_dedup_rhash_type): Null out the names of nameless
+	type kinds, just in case the input has named them.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_header): Dump the new flags bits and the index
+	section lengths.
+	(ctf_dump_objts): Report indexed sections.  Also dump functions.  Use
+	ctf_symbol_next, not manual looping.
+	(ctf_dump_funcs): Delete.
+	(ctf_dump): Use ctf_dump_objts, not ctf_dump_funcs.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (CTF_INDEX_PAD_THRESHOLD): New.
+	(_libctf_nonnull_): Likewise.
+	(ctf_in_flight_dynsym_t): New.
+	(ctf_dict_t) <ctf_funcidx_names>: Likewise.
+	<ctf_objtidx_names>: Likewise.
+	<ctf_nfuncidx>: Likewise.
+	<ctf_nobjtidx>: Likewise.
+	<ctf_funcidx_sxlate>: Likewise.
+	<ctf_objtidx_sxlate>: Likewise.
+	<ctf_objthash>: Likewise.
+	<ctf_funchash>: Likewise.
+	<ctf_dynsyms>: Likewise.
+	<ctf_dynsymidx>: Likewise.
+	<ctf_dynsymmax>: Likewise.
+	<ctf_in_flight_dynsym>: Likewise.
+	(struct ctf_next) <u.ctn_next>: Likewise.
+	(ctf_symtab_skippable): New prototype.
+	(ctf_add_funcobjt_sym): Likewise.
+	(ctf_dynhash_sort_by_name): Likewise.
+	(ctf_sym_to_elf64): Rename to...
+	(ctf_elf32_to_link_sym): ... this, and...
+	(ctf_elf64_to_link_sym): ... this.
+	* ctf-open.c (init_symtab): Check for lack of CTF_F_NEWFUNCINFO
+	flag, and presence of index sections.  Refactor out
+	ctf_symtab_skippable and ctf_elf*_to_link_sym, and use them.  Use
+	ctf_link_sym_t, not Elf64_Sym.  Skip initializing objt or func
+	sxlate sections if corresponding index section is present.  Adjust
+	for new func info section format.
+	(ctf_bufopen_internal): Add ctf_err_warn to corrupt-file error
+	handling.  Report incorrect-length index sections.  Always do an
+	init_symtab, even if there is no symtab section (there may be index
+	sections still).
+	(flip_objts): Adjust comment: func and objt sections are actually
+	identical in structure now, no need to caveat.
+	(ctf_dict_close):  Free newly-added data structures.
+	* ctf-create.c (ctf_create): Initialize them.
+	(ctf_symtab_skippable): New, refactored out of
+	init_symtab, with st_nameidx_set check added.
+	(ctf_add_funcobjt_sym): New, add a function or object symbol to the
+	ctf_objthash or ctf_funchash, by name.
+	(ctf_add_objt_sym): Call it.
+	(ctf_add_func_sym): Likewise.
+	(symtypetab_delete_nonstatic_vars): New, delete vars also present as
+	data objects.
+	(CTF_SYMTYPETAB_EMIT_FUNCTION): New flag to symtypetab emitters:
+	this is a function emission, not a data object emission.
+	(CTF_SYMTYPETAB_EMIT_PAD): New flag to symtypetab emitters: emit
+	pads for symbols with no type (only set for unindexed sections).
+	(CTF_SYMTYPETAB_FORCE_INDEXED): New flag to symtypetab emitters:
+	always emit indexed.
+	(symtypetab_density): New, figure out section sizes.
+	(emit_symtypetab): New, emit a symtypetab.
+	(emit_symtypetab_index): New, emit a symtypetab index.
+	(ctf_serialize): Call them, emitting suitably sorted symtypetab
+	sections and indexes.  Set suitable header flags.  Copy over new
+	fields.
+	* ctf-hash.c (ctf_dynhash_sort_by_name): New, used to impose an
+	order on symtypetab index sections.
+	* ctf-link.c (ctf_add_type_mapping): Delete erroneous comment
+	relating to code that was never committed.
+	(ctf_link_one_variable): Improve variable name.
+	(check_sym): New, symtypetab analogue of check_variable.
+	(ctf_link_deduplicating_one_symtypetab): New.
+	(ctf_link_deduplicating_syms): Likewise.
+	(ctf_link_deduplicating): Call them.
+	(ctf_link_deduplicating_per_cu): Note that we don't call them in
+	this case (yet).
+	(ctf_link_add_strtab): Set the error on the fp correctly.
+	(ctf_link_add_linker_symbol): New (no longer a do-nothing stub), add
+	a linker symbol to the in-flight list.
+	(ctf_link_shuffle_syms): New (no longer a do-nothing stub), turn the
+	in-flight list into a mapping we can use, now its names are
+	resolvable in the external strtab.
+	* ctf-string.c (ctf_str_rollback_atom): Don't roll back atoms with
+	external strtab offsets.
+	(ctf_str_rollback): Adjust comment.
+	(ctf_str_write_strtab): Migrate ctf_syn_ext_strtab population from
+	writeout time...
+	(ctf_str_add_external): ... to string addition time.
+	* ctf-lookup.c (ctf_lookup_var_key_t): Rename to...
+	(ctf_lookup_idx_key_t): ... this, now we use it for syms too.
+	<clik_names>: New member, a name table.
+	(ctf_lookup_var): Adjust accordingly.
+	(ctf_lookup_variable): Likewise.
+	(ctf_lookup_by_id): Shuffle further up in the file.
+	(ctf_symidx_sort_arg_cb): New, callback for...
+	(sort_symidx_by_name): ... this new function to sort a symidx
+	found to be unsorted (likely originating from the compiler).
+	(ctf_symidx_sort): New, sort a symidx.
+	(ctf_lookup_symbol_name): Support dynamic symbols with indexes
+	provided by the linker.  Use ctf_link_sym_t, not Elf64_Sym.
+	Check the parent if a child lookup fails.
+	(ctf_lookup_by_symbol): Likewise.  Work for function symbols too.
+	(ctf_symbol_next): New, iterate over symbols with types (without
+	sorting).
+	(ctf_lookup_idx_name): New, bsearch for symbol names in indexes.
+	(ctf_try_lookup_indexed): New, attempt an indexed lookup.
+	(ctf_func_info): Reimplement in terms of ctf_lookup_by_symbol.
+	(ctf_func_args): Likewise.
+	(ctf_get_dict): Move...
+	* ctf-types.c (ctf_get_dict): ... here.
+	* ctf-util.c (ctf_sym_to_elf64): Re-express as...
+	(ctf_elf64_to_link_sym): ... this.  Add new st_symidx field, and
+	st_nameidx_set (always 0, so st_nameidx can be ignored).  Look in
+	the ELF strtab for names.
+	(ctf_elf32_to_link_sym): Likewise, for Elf32_Sym.
+	(ctf_next_destroy): Destroy ctf_next_t.u.ctn_next if need be.
+	* libctf.ver: Add ctf_symbol_next, ctf_add_objt_sym and
+	ctf_add_func_sym.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c (ctf_link_shuffle_syms): Adjust.
+	(ctf_link_add_linker_symbol): New, unimplemented stub.
+	* libctf.ver: Add it.
+	* ctf-create.c (ctf_serialize): Set CTF_F_DYNSTR on newly-serialized
+	dicts.
+	* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Check for the flag: open the
+	symtab/strtab if not present, dynsym/dynstr otherwise.
+	* ctf-archive.c (ctf_arc_bufpreamble): New, get the preamble from
+	some arbitrary member of a CTF archive.
+	* ctf-impl.h (ctf_arc_bufpreamble): Declare it.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_arc_open_by_offset): Rename to...
+	(ctf_dict_open_by_offset): ... this.  Adjust callers.
+	(ctf_arc_open_by_name_internal): Rename to...
+	(ctf_dict_open_internal): ... this.  Adjust callers.
+	(ctf_arc_open_by_name_sections): Rename to...
+	(ctf_dict_open_sections): ... this, keeping compatibility function.
+	(ctf_arc_open_by_name): Rename to...
+	(ctf_dict_open): ... this, keeping compatibility function.
+	* libctf.ver: New functions added.
+	* ctf-link.c (ctf_link_one_input_archive): Adjusted accordingly.
+	(ctf_link_deduplicating_open_inputs): Likewise.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h: Rename ctf_file_t to ctf_dict_t: all declarations
+	adjusted.
+	(ctf_fileops): Rename to...
+	(ctf_dictops): ... this.
+	(ctf_dedup_t) <cd_id_to_file_t>: Rename to...
+	<cd_id_to_dict_t>: ... this.
+	(ctf_file_t): Fix outdated comment.
+	<ctf_fileops>: Rename to...
+	<ctf_dictops>: ... this.
+	(struct ctf_archive_internal) <ctfi_file>: Rename to...
+	<ctfi_dict>: ... this.
+	* ctf-archive.c: Rename ctf_file_t to ctf_dict_t.
+	Rename ctf_archive.ctfa_nfiles to ctfa_ndicts.
+	Rename ctf_file_close to ctf_dict_close.  All users adjusted.
+	* ctf-create.c: Likewise.  Refer to CTF dicts, not CTF containers.
+	(ctf_bundle_t) <ctb_file>: Rename to...
+	<ctb_dict): ... this.
+	* ctf-decl.c: Rename ctf_file_t to ctf_dict_t.
+	* ctf-dedup.c: Likewise.  Rename ctf_file_close to
+	ctf_dict_close. Refer to CTF dicts, not CTF containers.
+	* ctf-dump.c: Likewise.
+	* ctf-error.c: Likewise.
+	* ctf-hash.c: Likewise.
+	* ctf-inlines.h: Likewise.
+	* ctf-labels.c: Likewise.
+	* ctf-link.c: Likewise.
+	* ctf-lookup.c: Likewise.
+	* ctf-open-bfd.c: Likewise.
+	* ctf-string.c: Likewise.
+	* ctf-subr.c: Likewise.
+	* ctf-types.c: Likewise.
+	* ctf-util.c: Likewise.
+	* ctf-open.c: Likewise.
+	(ctf_file_close): Rename to...
+	(ctf_dict_close): ...this.
+	(ctf_file_close): New trivial wrapper around ctf_dict_close, for
+	compatibility.
+	(ctf_parent_file): Rename to...
+	(ctf_parent_dict): ... this.
+	(ctf_parent_file): New trivial wrapper around ctf_parent_dict, for
+	compatibility.
+	* libctf.ver: Add ctf_dict_close and ctf_parent_dict.
+
+2020-10-21  Tom Tromey  <tromey@adacore.com>
+
+	* mkerrors.sed: Remove.
+	* ctf-error.c (_CTF_FIRST): New define.
+	(_CTF_ITEM): Define this, not _CTF_STR.
+	(_ctf_errlist, _ctf_erridx): Use _CTF_ERRORS.
+	(ERRSTRFIELD): Rewrite.
+	(ERRSTRFIELD1): Remove.
+	* Makefile.in: Rebuild.
+	* Makefile.am (BUILT_SOURCES): Remove.
+	(ctf-error.h): Remove.
+
+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-subr.c (open_errors): New list.
+	(ctf_err_warn): Calls with NULL fp append to open_errors.  Add err
+	parameter, and use it to decorate the debug stream with errmsgs.
+	(ctf_err_warn_to_open): Splice errors from a CTF dict into the
+	open_errors.
+	(ctf_errwarning_next): Calls with NULL fp report from open_errors.
+	New err param to report iteration errors (including end-of-iteration)
+	when fp is NULL.
+	(ctf_assert_fail_internal): Adjust ctf_err_warn call for new err
+	parameter: gettextize.
+	* ctf-impl.h (ctfo_get_vbytes): Add ctf_file_t parameter.
+	(LCTF_VBYTES): Adjust.
+	(ctf_err_warn_to_open): New.
+	(ctf_err_warn): Adjust.
+	(ctf_bundle): Used in only one place: move...
+	* ctf-create.c: ... here.
+	(enumcmp): Use ctf_err_warn, not ctf_dprintf, passing the err number
+	down as needed.  Don't emit the errmsg.  Gettextize.
+	(membcmp): Likewise.
+	(ctf_add_type_internal): Likewise.
+	(ctf_write_mem): Likewise.
+	(ctf_compress_write): Likewise.  Report errors writing the header or
+	body.
+	(ctf_write): Likewise.
+	* ctf-archive.c (ctf_arc_write_fd): Use ctf_err_warn, not
+	ctf_dprintf, and gettextize, as above.
+	(ctf_arc_write): Likewise.
+	(ctf_arc_bufopen): Likewise.
+	(ctf_arc_open_internal): Likewise.
+	* ctf-labels.c (ctf_label_iter): Likewise.
+	* ctf-open-bfd.c (ctf_bfdclose): Likewise.
+	(ctf_bfdopen): Likewise.
+	(ctf_bfdopen_ctfsect): Likewise.
+	(ctf_fdopen): Likewise.
+	* ctf-string.c (ctf_str_write_strtab): Likewise.
+	* ctf-types.c (ctf_type_resolve): Likewise.
+	* ctf-open.c (get_vbytes_common): Likewise. Pass down the ctf dict.
+	(get_vbytes_v1): Pass down the ctf dict.
+	(get_vbytes_v2): Likewise.
+	(flip_ctf): Likewise.
+	(flip_types): Likewise. Use ctf_err_warn, not ctf_dprintf, and
+	gettextize, as above.
+	(upgrade_types_v1): Adjust calls.
+	(init_types): Use ctf_err_warn, not ctf_dprintf, as above.
+	(ctf_bufopen_internal): Likewise. Adjust calls. Transplant errors
+	emitted into individual dicts into the open errors if this turns
+	out to be a failed open in the end.
+	* ctf-dump.c (ctf_dump_format_type): Adjust ctf_err_warn for new err
+	argument.  Gettextize.  Don't emit the errmsg.
+	(ctf_dump_funcs): Likewise.  Collapse err label into its only case.
+	(ctf_dump_type): Likewise.
+	* ctf-link.c (ctf_create_per_cu): Adjust ctf_err_warn for new err
+	argument.  Gettextize.  Don't emit the errmsg.
+	(ctf_link_one_type): Likewise.
+	(ctf_link_lazy_open): Likewise.
+	(ctf_link_one_input_archive): Likewise.
+	(ctf_link_deduplicating_count_inputs): Likewise.
+	(ctf_link_deduplicating_open_inputs): Likewise.
+	(ctf_link_deduplicating_close_inputs): Likewise.
+	(ctf_link_deduplicating): Likewise.
+	(ctf_link): Likewise.
+	(ctf_link_deduplicating_per_cu): Likewise. Add some missed
+	ctf_set_errnos to obscure error cases.
+	* ctf-dedup.c (ctf_dedup_rhash_type): Adjust ctf_err_warn for new
+	err argument.  Gettextize.  Don't emit the errmsg.
+	(ctf_dedup_populate_mappings): Likewise.
+	(ctf_dedup_detect_name_ambiguity): Likewise.
+	(ctf_dedup_init): Likewise.
+	(ctf_dedup_multiple_input_dicts): Likewise.
+	(ctf_dedup_conflictify_unshared): Likewise.
+	(ctf_dedup): Likewise.
+	(ctf_dedup_rwalk_one_output_mapping): Likewise.
+	(ctf_dedup_id_to_target): Likewise.
+	(ctf_dedup_emit_type): Likewise.
+	(ctf_dedup_emit_struct_members): Likewise.
+	(ctf_dedup_populate_type_mapping): Likewise.
+	(ctf_dedup_populate_type_mappings): Likewise.
+	(ctf_dedup_emit): Likewise.
+	(ctf_dedup_hash_type): Likewise. Fix a bit of messed-up error
+	status setting.
+	(ctf_dedup_rwalk_one_output_mapping): Likewise. Don't hide
+	unknown-type-kind messages (which signify file corruption).
+
+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac: Adjust package name to simply 'libctf': arbitrarily
+	declare this to be version 1.2.0.
+	* Makefile.am (AM_CPPFLAGS): Add @INCINTL@.
+	* Makefile.in: Regenerated.
+	* configure: Regenerated.
+	* ctf-intl.h: New file, lightly modified from opcodes/opintl.h.
+	* ctf-impl.h: Include it.
+	* ctf-error.r (_ctf_errlist_t): Mark strings as noop-translatable.
+	(ctf_errmsg): Actually translate them.
+
+2020-07-26  Eli Zaretskii  <eliz@gnu.org>
+
+	PR binutils/25155:
+	* ctf-create.c (EOVERFLOW): If not defined by system header,
+	redirect to ERANGE as a poor man's substitute.
+	* ctf-subr.c (ENOTSUP): If not defined, use ENOSYS instead.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_dtd_insert): Add uintptr_t casts.
+	(ctf_dtd_delete): Likewise.
+	(ctf_dtd_lookup): Likewise.
+	(ctf_rollback): Likewise.
+	* ctf-hash.c (ctf_hash_lookup_type): Likewise.
+	* ctf-types.c (ctf_lookup_by_rawhash): Likewise.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-lookup.c (ctf_lookup_by_name): Adjust.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_arc_bufopen): Endian-swap the archive magic
+	number if needed.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_list_splice): New.
+	* ctf-util.h (ctf_list_splice): Likewise.
+	* ctf-link.c (link_sort_inputs_cb_arg_t): Likewise.
+	(ctf_link_sort_inputs): Likewise.
+	(ctf_link_deduplicating_count_inputs): Likewise.
+	(ctf_link_deduplicating_open_inputs): Likewise.
+	(ctf_link_deduplicating_close_inputs): Likewise.
+	(ctf_link_deduplicating_variables): Likewise.
+	(ctf_link_deduplicating_per_cu): Likewise.
+	(ctf_link_deduplicating): Likewise.
+	(ctf_link): Call it.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c (ctf_link_one_input_archive_member): Check
+	CTF_LINK_OMIT_VARIABLES_SECTION.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_type_id_key): New, the key in the
+	cd_id_to_file_t.
+	(ctf_dedup): New, core deduplicator state.
+	(ctf_file_t) <ctf_dedup>: New.
+	<ctf_dedup_atoms>: New.
+	<ctf_dedup_atoms_alloc>: New.
+	(ctf_hash_type_id_key): New prototype.
+	(ctf_hash_eq_type_id_key): Likewise.
+	(ctf_dedup_atoms_init): Likewise.
+	* ctf-hash.c (ctf_hash_eq_type_id_key): New.
+	(ctf_dedup_atoms_init): Likewise.
+	* ctf-create.c (ctf_serialize): Adjusted.
+	(ctf_add_encoded): No longer static.
+	(ctf_add_reftype): Likewise.
+	* ctf-open.c (ctf_file_close): Destroy the
+	ctf_dedup_atoms_alloc.
+	* ctf-dedup.c: New file.
+        * ctf-decls.h [!HAVE_DECL_STPCPY]: Add prototype.
+	* configure.ac: Check for stpcpy.
+	* Makefile.am: Add it.
+	* Makefile.in: Regenerate.
+        * config.h.in: Regenerate.
+        * configure: Regenerate.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac: Add --enable-libctf-hash-debugging.
+	* aclocal.m4: Pull in enable.m4, for GCC_ENABLE.
+	* Makefile.in: Regenerated.
+	* configure: Likewise.
+	* config.h.in: Likewise.
+	* ctf-impl.h [ENABLE_LIBCTF_HASH_DEBUGGING]
+	(ctf_assert): Define to assert.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-sha1.h: New, inline wrappers around sha1_init_ctx and
+	sha1_process_bytes.
+	* ctf-impl.h: Include it.
+	(ctf_sha1_init): New.
+	(ctf_sha1_add): Likewise.
+	(ctf_sha1_fini): Likewise.
+	* ctf-sha1.c: New, non-inline wrapper around sha1_finish_ctx
+	producing strings.
+	* Makefile.am: Add file.
+	* Makefile.in: Regenerate.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* libctf.ver (ctf_link_set_variable_filter): Add.
+	* ctf-impl.h (ctf_file_t) <ctf_link_variable_filter>: New.
+	<ctf_link_variable_filter_arg>: Likewise.
+	* ctf-create.c (ctf_serialize): Adjust.
+	* ctf-link.c (ctf_link_set_variable_filter): New, set it.
+	(ctf_link_one_variable): Call it if set.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c (ctf_link_one_variable): Check the dst_type for
+	conflicts, not the source type.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t): Improve comments.
+	<ctf_link_cu_mapping>: Split into...
+	<ctf_link_in_cu_mapping>: ... this...
+	<ctf_link_out_cu_mapping>: ... and this.
+	* ctf-create.c (ctf_serialize): Adjust.
+	* ctf-open.c (ctf_file_close): Likewise.
+	* ctf-link.c (ctf_create_per_cu): Look things up in the
+	in_cu_mapping instead of the cu_mapping.
+	(ctf_link_add_cu_mapping): The deduplicating link will define
+	what happens if many FROMs share a TO.
+	(ctf_link_add_cu_mapping): Create in_cu_mapping and
+	out_cu_mapping. Do not create ctf_link_outputs here any more, or
+	create per-CU dicts here: they are already created when needed.
+	(ctf_link_one_variable): Log a debug message if we skip a
+	variable due to its type being concealed in a CU-mapped link.
+	(This is probably too common a case to make into a warning.)
+	(ctf_link): Create empty per-CU dicts if requested.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c (ctf_link_write): Close the fd.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.am: Set -DNOBFD=1 in libctf-nobfd, and =0 elsewhere.
+	* Makefile.in: Regenerated.
+	* ctf-impl.h (ctf_link_input_name): New.
+	(ctf_file_t) <ctf_link_flags>: New.
+	* ctf-create.c (ctf_serialize): Adjust accordingly.
+	* ctf-link.c: Define ctf_open as weak when PIC.
+	(ctf_arc_close_thunk): Remove unnecessary thunk.
+	(ctf_file_close_thunk): Likewise.
+	(ctf_link_input_name): New.
+	(ctf_link_input_t): New value of the ctf_file_t.ctf_link_input.
+	(ctf_link_input_close): Adjust accordingly.
+	(ctf_link_add_ctf_internal): New, split from...
+	(ctf_link_add_ctf): ... here.  Return error if lazy loading of
+	CTF is not possible.  Change to just call...
+	(ctf_link_add): ... this new function.
+	(ctf_link_add_cu_mapping): Transition to ctf_err_warn.  Drop the
+	ctf_file_close_thunk.
+	(ctf_link_in_member_cb_arg_t) <file_name> Rename to...
+	<in_file_name>: ... this.
+	<arcname>: Drop.
+	<share_mode>: Likewise (migrated to ctf_link_flags).
+	<done_main_member>: Rename to...
+	<done_parent>: ... this.
+	<main_input_fp>: Rename to...
+	<in_fp_parent>: ... this.
+	<cu_mapped>: New.
+	(ctf_link_one_type): Adjuwt accordingly.  Transition to
+	ctf_err_warn, removing a TODO.
+	(ctf_link_one_variable): Note a case too common to warn about.
+	Report in the debug stream if a cu-mapped link prevents addition
+	of a conflicting variable.
+	(ctf_link_one_input_archive_member): Adjust.
+	(ctf_link_lazy_open): New, open a CTF archive for linking when
+	needed.
+	(ctf_link_close_one_input_archive): New, close it again.
+	(ctf_link_one_input_archive): Adjust for lazy opening, member
+	renames, and ctf_err_warn transition.  Move the
+	empty_link_type_mapping call to...
+	(ctf_link): ... here.  Adjut for renamings and thunk removal.
+	Don't spuriously fail if some input contains no CTF data.
+	(ctf_link_write): ctf_err_warn transition.
+	* libctf.ver: Remove not-yet-stable comment.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_strerror): Delete.
+	* ctf-subr.c (ctf_strerror): Likewise.
+	* ctf-error.c (ctf_errmsg): Stop using ctf_strerror: just use
+	strerror directly.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.c (ctf_file_t) <ctf_parent_unreffed>: New.
+	(ctf_import_unref): New.
+	* ctf-open.c (ctf_file_close) Drop the refcount all the way to
+	zero.  Don't recurse back in if the refcount is already zero.
+	(ctf_import): Check ctf_parent_unreffed before deciding whether
+	to close a pre-existing parent.  Set it to zero.
+	(ctf_import_unreffed): New, as above, setting
+	ctf_parent_unreffed to 1.
+	* ctf-create.c (ctf_serialize): Do not ctf_import into the new
+	child: use direct assignment, and set unreffed on the new and
+	old children.
+	* ctf-link.c (ctf_create_per_cu): Import the parent using
+	ctf_import_unreffed.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_link_type_mapping_key): Rename to...
+	(ctf_link_type_key): ... this, adjusting member prefixes to
+	match.
+	(ctf_hash_type_mapping_key): Rename to...
+	(ctf_hash_type_key): ... this.
+	(ctf_hash_eq_type_mapping_key): Rename to...
+	(ctf_hash_eq_type_key): ... this.
+	* ctf-hash.c (ctf_hash_type_mapping_key): Rename to...
+	(ctf_hash_type_key): ... this, and adjust for member name
+	changes.
+	(ctf_hash_eq_type_mapping_key): Rename to...
+	(ctf_hash_eq_type_key): ... this, and adjust for member name
+	changes.
+	* ctf-link.c (ctf_add_type_mapping): Adjust.  Note the lack of
+	need for out-of-memory checking in this code.
+	(ctf_type_mapping): Adjust.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	configure.ac: Check for vasprintf.
+	configure: Regenerated.
+	config.h.in: Likewise.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_arc_bufopen): Fix message.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (struct ctf_archive_internal) <ctfi_free_strsect>
+	New.
+	* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Explicitly open a strtab
+	if the input has no symtab, rather than dividing by
+	zero. Arrange to free it later via ctfi_free_ctfsect.
+	* ctf-archive.c (ctf_new_archive_internal): Do not
+	ctfi_free_strsect by default.
+	(ctf_arc_close): Possibly free it here.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_is_slice): Delete, unnecessary.
+	(ctf_dump_format_type): improve slice formatting.  Always print
+	the type size, even of slices.
+	(ctf_dump_member): Print slices (-> bitfields) differently from
+	non-slices.  Failure to format a type is not an OOM.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_format_type): Emit a warning.
+	(ctf_dump_label): Swallow errors from ctf_dump_format_type.
+	(ctf_dump_objts): Likewise.
+	(ctf_dump_var): Likewise.
+	(ctf_dump_type): Do not emit a duplicate message.  Move to
+	ctf_err_warning, and swallow all errors.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-decl.c (ctf_decl_fini): Free the cd_buf.
+	(ctf_decl_buf): Once it escapes, don't try to free it later.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_aname): Print arg types here...
+	* ctf-dump.c (ctf_dump_funcs): ... not here: but do substitute
+	in the type name here.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_assert): New.
+	(ctf_err_warning_t): Likewise.
+	(ctf_file_t) <ctf_errs_warnings>: Likewise.
+	(ctf_err_warn): New prototype.
+	(ctf_assert_fail_internal): Likewise.
+	* ctf-inlines.h (ctf_assert_internal): Likewise.
+	* ctf-open.c (ctf_file_close): Free ctf_errs_warnings.
+	* ctf-create.c (ctf_serialize): Copy it on serialization.
+	* ctf-subr.c (ctf_err_warn): New, add an error/warning.
+	(ctf_errwarning_next): New iterator, free and pass back
+	errors/warnings in succession.
+	* libctf.ver (ctf_errwarning_next): Add.
+
+2020-07-22  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>
+
+	* ctf-types.c (ctf_variable_iter): Fix error return.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (ctf_bufopen_internal): Diagnose invalid flags.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	ctf-decls.h (ctf_qsort_compar_thunk): Fix arg passing.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_next_hkv_t): New, kv-pairs passed to
+	sorting functions.
+	(ctf_next_t) <u.ctn_sorted_hkv>: New, sorted kv-pairs for
+	ctf_dynhash_next_sorted.
+	<cu.ctn_h>: New, pointer to the dynhash under iteration.
+	<cu.ctn_s>: New, pointer to the dynset under iteration.
+	(ctf_hash_sort_f): Sorting function passed to...
+	(ctf_dynhash_next_sorted): ... this new function.
+	(ctf_dynhash_next): New.
+	(ctf_dynset_next): New.
+	* ctf-inlines.h (ctf_dynhash_cnext_sorted): New.
+	(ctf_dynhash_cnext): New.
+	(ctf_dynset_cnext): New.
+	* ctf-hash.c (ctf_dynhash_next_sorted): New.
+	(ctf_dynhash_next): New.
+	(ctf_dynset_next): New.
+	* ctf-util.c (ctf_next_destroy): Free the u.ctn_sorted_hkv if
+	needed.
+	(ctf_next_copy): Alloc-and-copy the u.ctn_sorted_hkv if needed.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_next): New.
+	(ctf_get_dict): New prototype.
+	* ctf-lookup.c (ctf_get_dict): New, split out of...
+	(ctf_lookup_by_id): ... here.
+	* ctf-util.c (ctf_next_create): New.
+	(ctf_next_destroy): New.
+	(ctf_next_copy): New.
+	* ctf-types.c (includes): Add <assert.h>.
+	(ctf_member_next): New.
+	(ctf_enum_next): New.
+	(ctf_type_iter): Document the lack of iteration over parent
+	types.
+	(ctf_type_next): New.
+	(ctf_variable_next): New.
+	* ctf-archive.c (ctf_archive_next): New.
+	* libctf.ver: Add new public functions.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* libctf.ver (ctf_ref): New.
+	* ctf-open.c (ctf_ref): Implement it.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-inlines.h (ctf_forwardable_kind): New.
+	* ctf-create.c (ctf_add_forward): Use it.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_get_ctt_size): Move definition from here...
+	* ctf-inlines.h (ctf_get_ctt_size): ... to here.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-hash.c (ctf_dynset_eq_string): New.
+	(ctf_dynset_create): New.
+	(DYNSET_EMPTY_ENTRY_REPLACEMENT): New.
+	(DYNSET_DELETED_ENTRY_REPLACEMENT): New.
+	(key_to_internal): New.
+	(internal_to_key): New.
+	(ctf_dynset_insert): New.
+	(ctf_dynset_remove): New.
+	(ctf_dynset_destroy): New.
+	(ctf_dynset_lookup): New.
+	(ctf_dynset_exists): New.
+	(ctf_dynset_lookup_any): New.
+	(ctf_hash_insert_type): Coding style.
+	(ctf_hash_define_type): Likewise.
+	* ctf-impl.h (ctf_dynset_t): New.
+	(ctf_dynset_eq_string): New.
+	(ctf_dynset_create): New.
+	(ctf_dynset_insert): New.
+	(ctf_dynset_remove): New.
+	(ctf_dynset_destroy): New.
+	(ctf_dynset_lookup): New.
+	(ctf_dynset_exists): New.
+	(ctf_dynset_lookup_any): New.
+	* ctf-inlines.h (ctf_dynset_cinsert): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-hash.c (ctf_helem_t) <key_free>: Remove.
+	<value_free>: Likewise.
+	<owner>: New.
+	(ctf_dynhash_item_free): Indirect through the owner.
+	(ctf_dynhash_create): Only pass in ctf_dynhash_item_free and
+	allocate space for the key_free and value_free fields fields
+	if necessary.
+	(ctf_hashtab_insert): Likewise.  Fix OOM errno value.
+	(ctf_dynhash_insert): Only access ctf_hashtab's key_free and
+	value_free if they will exist.  Set the slot's owner, but only
+	if it exists.
+	(ctf_dynhash_remove): Adjust.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-hash.c (ctf_hashtab_insert): Free the key passed in if
+	there is a key-freeing function and the key already exists.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-inlines.h: New file.
+	* ctf-impl.h: Include it.
+	(ctf_hash_iter_find_f): New typedef.
+	(ctf_dynhash_elements): New.
+	(ctf_dynhash_lookup_kv): New.
+	(ctf_dynhash_iter_find): New.
+	* ctf-hash.c (ctf_dynhash_lookup_kv): New.
+	(ctf_traverse_find_cb_arg_t): New.
+	(ctf_hashtab_traverse_find): New.
+	(ctf_dynhash_iter_find): New.
+	(ctf_dynhash_elements): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h [!__GNUC__] (__extension__): Define to nothing.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_archive_count): New.
+	* libctf.ver: New public function.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_member_count): New.
+	* libctf.ver: New public function.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_kind_forwarded): New.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_name_raw): New.
+	(ctf_type_aname_raw): Reimplement accordingly.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-subr.c (ctf_dprintf): _libctf_debug is unlikely to be set.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (struct ctf_archive_internal)
+	<ctfi_unmap_on_close>: New.
+	(ctf_new_archive_internal): Adjust.
+	* ctf-archive.c (ctf_new_archive_internal): Likewise.
+	Initialize ctfi_unmap_on_close.  Adjust error path.
+	(ctf_arc_bufopen): Adjust ctf_new_archive_internal call
+	(unmap_on_close is 0).
+	(ctf_arc_close): Only unmap if ctfi_unmap_on_close.
+	* ctf-open-bfd.c (ctf_fdopen): Adjust.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_aname): Return ECTF_CORRUPT if
+	ints, floats or typedefs have no name.  Fix comment typo.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_add_slice): Support slices of any kind that
+	resolves to an integral type.
+	* ctf-types.c (ctf_type_encoding): Resolve the type before
+	fishing its encoding out.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_create): Mark dirty.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (membcmp)  Skip nameless members.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_add_member_offset): Support names of ""
+	as if they were the null pointer.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (init_types): Remove typeless CTF_K_FORWARD
+	special-casing.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_reference): Add support for dynamic slices.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_serialize): Add cast.
+	(ctf_add_slice): Likewise.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_dtdef_t) <dtu_argv>: Fix type.
+	* ctf-create.c (ctf_add_function): Check for unimplemented type
+	and populate at the same time.  Populate one-by-one, not via
+	memcpy.
+	(ctf_serialize): Remove unnecessary cast.
+	* ctf-types.c (ctf_func_type_info): Likewise.
+	(ctf_func_type_args): Likewise.  Fix comment typo.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_add_reftype): Support refs to type zero.
+	(ctf_add_array): Support array contents of type zero.
+	(ctf_add_function): Support arguments and return types of
+	type zero.
+	(ctf_add_typedef): Support typedefs to type zero.
+	(ctf_add_member_offset): Support members of type zero,
+	unless added at unspecified (naturally-aligned) offset.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-error.c: Include <stddef.h>, for offsetof.
+	(_ctf_errlist): Migrate to...
+	(_ctf_errlist_t): ... this.
+	(_ctf_erridx): New, indexes into _ctf_errlist_t.
+	(_ctf_nerr): Remove.
+	(ctf_errmsg): Adjust accordingly.
+	* Makefile.am (BUILT_SOURCES): Note...
+	(ctf-error.h): ... this new rule.
+	* Makefile.in: Regenerate.
+	* mkerrors.sed: New, process ctf-api.h to generate ctf-error.h.
+	* .gitignore: New, ignore ctf-error.h.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h: Fix typos in comments.
+
+2020-07-22  Nick Clifton  <nickc@redhat.com>
+
+	* ctf-archive.c (ctf_arc_write): Avoid calling close twice on the
+	same file descriptor.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* aclocal.m4: Add config/gettext-sister.m4: Shuffle into
+	alphabetical order.
+	* configure.ac: Add ZW_GNU_GETTEXT_SISTER_DIR.
+	* config.h.in: Regenerated.
+	* Makefile.in: Likewise.
+	* configure: Likewise.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c: Include <unistd.h>.
+	* ctf-open-bfd.c: Likewise.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	PR libctf/25120
+	* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.
+	* swap.h (bswap_16): Do not assume that presence of <byteswap.h>
+	means this is declared.
+	(bswap_32): Likewise.
+	(bswap_64): Likewise.
+	(bswap_identity_64): Remove, unused.
+	* configure: Regenerated.
+	* config.h.in: Likewise.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	PR libctf/25120
+	* ctf-impl.h (_libctf_printflike_): Add non-GNU-C fallback.
+	(_libctf_unlikely_): Likewise.
+	(_libctf_unused): Likewise.
+	(_libctf_malloc_): Likewise.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	PR libctf/25120
+	* ctf-archive.c (search_nametbl): No longer global: declare...
+	(ctf_arc_open_by_name_internal): ... here. Use bsearch_r.
+	(search_modent_by_name): Take and use ARG for the nametbl.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_new_archive_internal): Declare.
+	(ctf_arc_bufopen): Remove.
+	(ctf_archive_internal) <ctfi_free_symsect>: New.
+	* ctf-archive.c (ctf_arc_close): Use it.
+	(ctf_arc_bufopen): Fuse into...
+	(ctf_new_archive_internal): ... this, moved across from...
+	* ctf-open-bfd.c: ... here.
+	(ctf_bfdopen_ctfsect): Use ctf_arc_bufopen.
+	* libctf.ver: Add it.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_add_forward): Intern in the right namespace.
+	(ctf_dtd_delete): Remove correspondingly.
+	(ctf_rollback): Likewise.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_add_type_internal): Hand back existing types
+	unchanged.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_add_forward): Don't add forwards to
+	types that already exist.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (init_types): Only intern root-visible types.
+	* ctf-create.c (ctf_dtd_insert): Likewise.
+	(ctf_dtd_delete): Only remove root-visible types.
+	(ctf_rollback): Likewise.
+	(ctf_add_generic): Adjust.
+	(ctf_add_struct_sized): Adjust comment.
+	(ctf_add_union_sized): Likewise.
+	(ctf_add_enum): Likewise.
+	* ctf-impl.h (ctf_dtd_insert): Adjust prototype.
+
+2020-03-11  John Baldwin  <jhb@FreeBSD.org>
+
+	* swap.h (bswap_identity_64): Make static.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-05  Joel Brobecker  <brobecker@adacore.com>
+
+	PR binutils/25155:
+	* configure.ac: Add AC_CHECK_DECLS([asprintf]).
+	* configure, config.h.in: Regenerate.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+2019-10-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* swap.h (bswap_16, bswap_32, bswap_64): Make static.
+
+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (ctf_bufopen_internal): Fix tabdamage.
+	* ctf-types.c (ctf_type_lname): Likewise.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (ctf_import): Do not leak a ctf_file_t ref on every
+	ctf_import after the first for a given file.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_str_append_noerr): Declare.
+	* ctf-util.c (ctf_str_append_noerr): Define in terms of
+	ctf_str_append.
+	* ctf-dump.c (str_append): New, call it.
+	(ctf_dump_format_type): Use str_append, not ctf_str_append.
+	(ctf_dump_label): Likewise.
+	(ctf_dump_objts): Likewise.
+	(ctf_dump_funcs): Likewise.
+	(ctf_dump_var): Likewise.
+	(ctf_dump_member): Likewise.
+	(ctf_dump_type): Likewise.
+	(ctf_dump): Likewise.
+
+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_alloc): Remove.
+	(ctf_free): Likewise.
+	(ctf_strdup): Likewise.
+	* ctf-subr.c (ctf_alloc): Remove.
+	(ctf_free): Likewise.
+	* ctf-util.c (ctf_strdup): Remove.
+
+	* ctf-create.c (ctf_serialize): Use malloc, not ctf_alloc; free, not
+	ctf_free; strdup, not ctf_strdup.
+	(ctf_dtd_delete): Likewise.
+	(ctf_dvd_delete): Likewise.
+	(ctf_add_generic): Likewise.
+	(ctf_add_function): Likewise.
+	(ctf_add_enumerator): Likewise.
+	(ctf_add_member_offset): Likewise.
+	(ctf_add_variable): Likewise.
+	(membadd): Likewise.
+	(ctf_compress_write): Likewise.
+	(ctf_write_mem): Likewise.
+	* ctf-decl.c (ctf_decl_push): Likewise.
+	(ctf_decl_fini): Likewise.
+	(ctf_decl_sprintf): Likewise.  Check for OOM.
+	* ctf-dump.c (ctf_dump_append): Use malloc, not ctf_alloc; free, not
+	ctf_free; strdup, not ctf_strdup.
+	(ctf_dump_free): Likewise.
+	(ctf_dump): Likewise.
+	* ctf-open.c (upgrade_types_v1): Likewise.
+	(init_types): Likewise.
+	(ctf_file_close): Likewise.
+	(ctf_bufopen_internal): Likewise.  Check for OOM.
+	(ctf_parent_name_set): Likewise: report the OOM to the caller.
+	(ctf_cuname_set): Likewise.
+	(ctf_import): Likewise.
+	* ctf-string.c (ctf_str_purge_atom_refs): Use malloc, not ctf_alloc;
+	free, not ctf_free; strdup, not ctf_strdup.
+	(ctf_str_free_atom): Likewise.
+	(ctf_str_create_atoms): Likewise.
+	(ctf_str_add_ref_internal): Likewise.
+	(ctf_str_remove_ref): Likewise.
+	(ctf_str_write_strtab): Likewise.
+
+2019-08-09  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_encoding): Fix the dynamic case to
+	work right for non-int/fps.
+
+2019-08-08  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_name): Don't strlen a potentially-
+	null pointer.
+
+2019-08-07  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t) <ctf_add_processing>: New.
+	* ctf-open.c (ctf_file_close): Free it.
+	* ctf-create.c (ctf_serialize): Adjust.
+	(membcmp): When reporting a conflict due to an error, report the
+	error.
+	(ctf_add_type): Turn into a ctf_add_processing wrapper.  Rename to...
+	(ctf_add_type_internal): ... this.  Hand back types we are already
+	in the middle of adding immediately.  Hand back structs/unions with
+	the same number of members immediately.  Do not walk the dynamic
+	list.  Call ctf_add_type_internal, not ctf_add_type.  Handle
+	forwards promoted to other types and the inverse case identically.
+	Add structs to the mapping as soon as we intern them, before they
+	gain any members.
+
+2019-08-09  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_names_t): New.
+	(ctf_lookup_t) <ctf_hash>: Now a ctf_names_t, not a ctf_hash_t.
+	(ctf_file_t) <ctf_structs>: Likewise.
+	<ctf_unions>: Likewise.
+	<ctf_enums>: Likewise.
+	<ctf_names>: Likewise.
+	<ctf_lookups>: Improve comment.
+	<ctf_ptrtab_len>: New.
+	<ctf_prov_strtab>: New.
+	<ctf_str_prov_offset>: New.
+	<ctf_dtbyname>: Remove, redundant to the names hashes.
+	<ctf_dtnextid>: Remove, redundant to ctf_typemax.
+	(ctf_dtdef_t) <dtd_name>: Remove.
+	<dtd_data>: Note that the ctt_name is now populated.
+	(ctf_str_atom_t) <csa_offset>: This is now the strtab
+	offset for internal strings too.
+	<csa_external_offset>: New, the external strtab offset.
+	(CTF_INDEX_TO_TYPEPTR): Handle the LCTF_RDWR case.
+	(ctf_name_table): New declaration.
+	(ctf_lookup_by_rawname): Likewise.
+	(ctf_lookup_by_rawhash): Likewise.
+	(ctf_set_ctl_hashes): Likewise.
+	(ctf_serialize): Likewise.
+	(ctf_dtd_insert): Adjust.
+	(ctf_simple_open_internal): Likewise.
+	(ctf_bufopen_internal): Likewise.
+	(ctf_list_empty_p): Likewise.
+	(ctf_str_remove_ref): Likewise.
+	(ctf_str_add): Returns uint32_t now.
+	(ctf_str_add_ref): Likewise.
+	(ctf_str_add_external): Now returns a boolean (int).
+	* ctf-string.c (ctf_strraw_explicit): Check the ctf_prov_strtab
+	for strings in the appropriate range.
+	(ctf_str_create_atoms): Create the ctf_prov_strtab.  Detect OOM
+	when adding the null string to the new strtab.
+	(ctf_str_free_atoms): Destroy the ctf_prov_strtab.
+	(ctf_str_add_ref_internal): Add make_provisional argument.  If
+	make_provisional, populate the offset and fill in the
+	ctf_prov_strtab accordingly.
+	(ctf_str_add): Return the offset, not the string.
+	(ctf_str_add_ref): Likewise.
+	(ctf_str_add_external): Return a success integer.
+	(ctf_str_remove_ref): New, remove a single ref.
+	(ctf_str_count_strtab): Do not count the initial null string's
+	length or the existence or length of any unreferenced internal
+	atoms.
+	(ctf_str_populate_sorttab): Skip atoms with no refs.
+	(ctf_str_write_strtab): Populate the nullstr earlier.  Add one
+	to the cts_len for the null string, since it is no longer done
+	in ctf_str_count_strtab.  Adjust for csa_external_offset rename.
+	Populate the csa_offset for both internal and external cases.
+	Flush the ctf_prov_strtab afterwards, and reset the
+	ctf_str_prov_offset.
+	* ctf-create.c (ctf_grow_ptrtab): New.
+	(ctf_create): Call it.	Initialize new fields rather than old
+	ones.  Tell ctf_bufopen_internal that this is a writable dictionary.
+	Set the ctl hashes and data model.
+	(ctf_update): Rename to...
+	(ctf_serialize): ... this.  Leave a compatibility function behind.
+	Tell ctf_simple_open_internal that this is a writable dictionary.
+	Pass the new fields along from the old dictionary.  Drop
+	ctf_dtnextid and ctf_dtbyname.	Use ctf_strraw, not dtd_name.
+	Do not zero out the DTD's ctt_name.
+	(ctf_prefixed_name): Rename to...
+	(ctf_name_table): ... this.  No longer return a prefixed name: return
+	the applicable name table instead.
+	(ctf_dtd_insert): Use it, and use the right name table.	 Pass in the
+	kind we're adding.  Migrate away from dtd_name.
+	(ctf_dtd_delete): Adjust similarly.  Remove the ref to the
+	deleted ctt_name.
+	(ctf_dtd_lookup_type_by_name): Remove.
+	(ctf_dynamic_type): Always return NULL on read-only dictionaries.
+	No longer check ctf_dtnextid: check ctf_typemax instead.
+	(ctf_snapshot): No longer use ctf_dtnextid: use ctf_typemax instead.
+	(ctf_rollback): Likewise.  No longer fail with ECTF_OVERROLLBACK. Use
+	ctf_name_table and the right name table, and migrate away from
+	dtd_name as in ctf_dtd_delete.
+	(ctf_add_generic): Pass in the kind explicitly and pass it to
+	ctf_dtd_insert. Use ctf_typemax, not ctf_dtnextid.  Migrate away
+	from dtd_name to using ctf_str_add_ref to populate the ctt_name.
+	Grow the ptrtab if needed.
+	(ctf_add_encoded): Pass in the kind.
+	(ctf_add_slice): Likewise.
+	(ctf_add_array): Likewise.
+	(ctf_add_function): Likewise.
+	(ctf_add_typedef): Likewise.
+	(ctf_add_reftype): Likewise. Initialize the ctf_ptrtab, checking
+	ctt_name rather than dtd_name.
+	(ctf_add_struct_sized): Pass in the kind.  Use
+	ctf_lookup_by_rawname, not ctf_hash_lookup_type /
+	ctf_dtd_lookup_type_by_name.
+	(ctf_add_union_sized): Likewise.
+	(ctf_add_enum): Likewise.
+	(ctf_add_enum_encoded): Likewise.
+	(ctf_add_forward): Likewise.
+	(ctf_add_type): Likewise.
+	(ctf_compress_write): Call ctf_serialize: adjust for ctf_size not
+	being initialized until after the call.
+	(ctf_write_mem): Likewise.
+	(ctf_write): Likewise.
+	* ctf-archive.c (arc_write_one_ctf): Likewise.
+	* ctf-lookup.c (ctf_lookup_by_name): Use ctf_lookuup_by_rawhash, not
+	ctf_hash_lookup_type.
+	(ctf_lookup_by_id): No longer check the readonly types if the
+	dictionary is writable.
+	* ctf-open.c (init_types): Assert that this dictionary is not
+	writable.  Adjust to use the new name hashes, ctf_name_table,
+	and ctf_ptrtab_len.  GNU style fix for the final ptrtab scan.
+	(ctf_bufopen_internal): New 'writable' parameter.  Flip on LCTF_RDWR
+	if set.	 Drop out early when dictionary is writable.  Split the
+	ctf_lookups initialization into...
+	(ctf_set_cth_hashes): ... this new function.
+	(ctf_simple_open_internal): Adjust.  New 'writable' parameter.
+	(ctf_simple_open): Adjust accordingly.
+	(ctf_bufopen): Likewise.
+	(ctf_file_close): Destroy the appropriate name hashes.	No longer
+	destroy ctf_dtbyname, which is gone.
+	(ctf_getdatasect): Remove spurious "extern".
+	* ctf-types.c (ctf_lookup_by_rawname): New, look up types in the
+	specified name table, given a kind.
+	(ctf_lookup_by_rawhash): Likewise, given a ctf_names_t *.
+	(ctf_member_iter): Add support for iterating over the
+	dynamic type list.
+	(ctf_enum_iter): Likewise.
+	(ctf_variable_iter): Likewise.
+	(ctf_type_rvisit): Likewise.
+	(ctf_member_info): Add support for types in the dynamic type list.
+	(ctf_enum_name): Likewise.
+	(ctf_enum_value): Likewise.
+	(ctf_func_type_info): Likewise.
+	(ctf_func_type_args): Likewise.
+	* ctf-link.c (ctf_accumulate_archive_names): No longer call
+	ctf_update.
+	(ctf_link_write): Likewise.
+	(ctf_link_intern_extern_string): Adjust for new
+	ctf_str_add_external return value.
+	(ctf_link_add_strtab): Likewise.
+	* ctf-util.c (ctf_list_empty_p): New.
+
+2019-08-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_resolve): Return ECTF_NONREPRESENTABLE on
+	type zero.
+	* ctf-create.c (ctf_add_type): Detect and skip nonrepresentable
+	members and types.
+	(ctf_add_variable): Likewise for variables pointing to them.
+	* ctf-link.c (ctf_link_one_type): Do not warn for nonrepresentable
+	type link failure, but do warn for others.
+	* ctf-dump.c (ctf_dump_format_type): Likewise.  Do not assume all
+	errors to be ENOMEM.
+	(ctf_dump_member): Likewise.
+	(ctf_dump_type): Likewise.
+	(ctf_dump_header_strfield): Do not assume all errors to be ENOMEM.
+	(ctf_dump_header_sectfield): Do not assume all errors to be ENOMEM.
+	(ctf_dump_header): Likewise.
+	(ctf_dump_label): likewise.
+	(ctf_dump_objts): likewise.
+	(ctf_dump_funcs): likewise.
+	(ctf_dump_var): likewise.
+	(ctf_dump_str): Likewise.
+
+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac (AC_DISABLE_SHARED): New, like opcodes/.
+	(LT_INIT): Likewise.
+	(AM_INSTALL_LIBBFD): Likewise.
+	(dlopen): Note why this is necessary in a comment.
+	(SHARED_LIBADD): Initialize for possibly-PIC libiberty: derived from
+	opcodes/.
+	(SHARED_LDFLAGS): Likewise.
+	(BFD_LIBADD): Likewise, for libbfd.
+	(BFD_DEPENDENCIES): Likewise.
+	(VERSION_FLAGS): Initialize, using a version script if ld supports
+	one, or libtool -export-symbols-regex otherwise.
+	(AC_CONFIG_MACRO_DIR): Add ../BFD.
+	* Makefile.am (ACLOCAL_AMFLAGS): Likewise.
+	(INCDIR): New.
+	(AM_CPPFLAGS): Use $(srcdir), not $(top_srcdir).
+	(noinst_LIBRARIES): Replace with...
+	[INSTALL_LIBBFD] (lib_LTLIBRARIES): This, or...
+	[!INSTALL_LIBBFD] (noinst_LTLIBRARIES): ... this, mentioning new
+	libctf-nobfd.la as well.
+	[INSTALL_LIBCTF] (include_HEADERS): Add the CTF headers.
+	[!INSTALL_LIBCTF] (include_HEADERS): New, empty.
+	(libctf_a_SOURCES): Rename to...
+	(libctf_nobfd_la_SOURCES): ... this, all of libctf other than
+	ctf-open-bfd.c.
+	(libctf_la_SOURCES): Now derived from libctf_nobfd_la_SOURCES,
+	with ctf-open-bfd.c added.
+	(libctf_nobfd_la_LIBADD): New, using @SHARED_LIBADD@.
+	(libctf_la_LIBADD): New, using @BFD_LIBADD@ as well.
+	(libctf_la_DEPENDENCIES): New, using @BFD_DEPENDENCIES@.
+	* Makefile.am [INSTALL_LIBCTF]: Use it.
+	* aclocal.m4: Add ../bfd/acinclude.m4, ../config/acx.m4, and the
+	libtool macros.
+	* libctf.ver: New, everything is version LIBCTF_1.0 currently (even
+	the unstable components).
+	* Makefile.in: Regenerated.
+	* config.h.in: Likewise.
+	* configure: Likewise.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac (INSTALL_LIBCTF): New, controlled by
+	--enable-install-libctf.
+	[INSTALL_LIBCTF] (lib_LIBRARIES): Add libctf.a.
+	* Makefile.in: Regenerated.
+	* configure: Regenerated.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_arc_close): Call ctfi_bfd_close if set.
+	* ctf-open-bfd.c (ctf_bfdclose): Fix comment.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open-bfd.c (ctf_fdopen): Call bfd_set_cacheable.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (includes): Include <sys/param.h> here.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (flip_lbls): Eschew for-loop initial declarations.
+	(flip_objts): Likewise.
+	(flip_vars): Likewise.
+	(flip_types): Likewise.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-hash.c (ctf_hashtab_insert): Pass in the key and value
+	freeing functions: if set, free the key and value if the slot
+	already exists.  Always reassign the key.
+	(ctf_dynhash_insert): Adjust call appropriately.
+	(ctf_hash_insert_type): Likewise.
+
+2019-08-03  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_add_type): Look up and use the forwarded-to
+	type kind.  Allow forwards to unify with pre-existing structs/
+	unions/enums.
+
+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t) <ctf_link_cu_mappping>: New.
+	<ctf_link_memb_name_changer>: Likewise.
+	<ctf_link_memb_name_changer_arg>: Likewise.
+	* ctf-create.c (ctf_update): Update accordingly.
+	* ctf-open.c (ctf_file_close): Likewise.
+	* ctf-link.c (ctf_create_per_cu): Apply the cu mapping.
+	(ctf_link_add_cu_mapping): New.
+	(ctf_link_set_memb_name_changer): Likewise.
+	(ctf_change_parent_name): New.
+	(ctf_name_list_accum_cb_arg_t) <dynames>: New, storage for names
+	allocated by the caller's ctf_link_memb_name_changer.
+	<ndynames>: Likewise.
+	(ctf_accumulate_archive_names): Call the ctf_link_memb_name_changer.
+	(ctf_link_write): Likewise (for _CTF_SECTION only): also call
+	ctf_change_parent_name.  Free any resulting names.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c (ctf_create_per_cu): New, refactored out of...
+	(ctf_link_one_type): ... here, with parent-name setting added.
+	(check_variable): New.
+	(ctf_link_one_variable): Likewise.
+	(ctf_link_one_input_archive_member): Call it.
+	* ctf-error.c (_ctf_errlist): Updated with new errors.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t): New field ctf_link_type_mapping.
+	(struct ctf_link_type_mapping_key): New.
+	(ctf_hash_type_mapping_key): Likewise.
+	(ctf_hash_eq_type_mapping_key): Likewise.
+	(ctf_add_type_mapping): Likewise.
+	(ctf_type_mapping): Likewise.
+	(ctf_dynhash_empty): Likewise.
+	* ctf-open.c (ctf_file_close): Update accordingly.
+	* ctf-create.c (ctf_update): Likewise.
+	(ctf_add_type): Populate the mapping.
+	* ctf-hash.c (ctf_hash_type_mapping_key): Hash a type mapping key.
+	(ctf_hash_eq_type_mapping_key): Check the key for equality.
+	(ctf_dynhash_insert): Fix comment typo.
+	(ctf_dynhash_empty): New.
+	* ctf-link.c (ctf_add_type_mapping): New.
+	(ctf_type_mapping): Likewise.
+	(empty_link_type_mapping): New.
+	(ctf_link_one_input_archive): Call it.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-link.c: New file, linking of the string and type sections.
+	* Makefile.am (libctf_a_SOURCES): Add it.
+	* Makefile.in: Regenerate.
+
+	* ctf-impl.h (ctf_file_t): New fields ctf_link_inputs,
+	ctf_link_outputs.
+	* ctf-create.c (ctf_update): Update accordingly.
+	* ctf-open.c (ctf_file_close): Likewise.
+	* ctf-error.c (_ctf_errlist): Updated with new errors.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_funcs): Check the right error value.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump): Use ctf_type_iter_all to dump types, not
+	ctf_type_iter.
+	(ctf_dump_type): Pass down the flag from ctf_type_iter_all.
+	(ctf_dump_format_type): Add non-root-type { } notation.
+	Add root flag to prototype.
+	(ctf_dump_label): Adjust accordingly.
+	(ctf_dump_objts): Likewise.
+	(ctf_dump_var): Likewise.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_compress_write): Fix double-free.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_arc_write): Split off, and reimplement in terms
+	of...
+	(ctf_arc_write_fd): ... this new function.
+	* ctf-create.c (ctf_write_mem): New.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_str_atom_t) <csa_offset>: New field.
+	(ctf_file_t) <ctf_syn_ext_strtab>: Likewise.
+	(ctf_str_add_ref): Name the last arg.
+	(ctf_str_add_external) New.
+	(ctf_str_add_strraw_explicit): Likewise.
+	(ctf_simple_open_internal): Likewise.
+	(ctf_bufopen_internal): Likewise.
+
+	* ctf-string.c (ctf_strraw_explicit): Split from...
+	(ctf_strraw): ... here, with new support for ctf_syn_ext_strtab.
+	(ctf_str_add_ref_internal): Return the atom, not the
+	string.
+	(ctf_str_add): Adjust accordingly.
+	(ctf_str_add_ref): Likewise.  Move up in the file.
+	(ctf_str_add_external): New: update the csa_offset.
+	(ctf_str_count_strtab): Only account for strings with no csa_offset
+	in the internal strtab length.
+	(ctf_str_write_strtab): If the csa_offset is set, update the
+	string's refs without writing the string out, and update the
+	ctf_syn_ext_strtab.  Make OOM handling less ugly.
+	* ctf-create.c (struct ctf_sort_var_arg_cb): New.
+	(ctf_update): Handle failure to populate the strtab.  Pass in the
+	new ctf_sort_var arg.  Adjust for ctf_syn_ext_strtab addition.
+	Call ctf_simple_open_internal, not ctf_simple_open.
+	(ctf_sort_var): Call ctf_strraw_explicit rather than looking up
+	strings by hand.
+	* ctf-hash.c (ctf_hash_insert_type): Likewise (but using
+	ctf_strraw).  Adjust to diagnose ECTF_STRTAB nonetheless.
+	* ctf-open.c (init_types): No longer filter out ECTF_STRTAB.
+	(ctf_file_close): Destroy the ctf_syn_ext_strtab.
+	(ctf_simple_open): Rename to, and reimplement as a wrapper around...
+	(ctf_simple_open_internal): ... this new function, which calls
+	ctf_bufopen_internal.
+	(ctf_bufopen): Rename to, and reimplement as a wrapper around...
+	(ctf_bufopen_internal): ... this new function, which sets
+	ctf_syn_ext_strtab.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf_types.c (ctf_type_iter_all): New.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (init_symtab): Check for overflow against the right
+	section.
+	(upgrade_header): Set cth_objtidxoff, cth_funcidxoff to zero-length.
+	(upgrade_types_v1): Note that these sections are not checked.
+	(flip_header): Endian-swap the header fields.
+	(flip_ctf): Endian-swap the sections.
+	(flip_objts): Update comment.
+	(ctf_bufopen): Check header offsets and alignment for validity.
+
+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open-bfd.c: Add <assert.h>.
+	(ctf_bfdopen_ctfsect): Open string and symbol tables using
+	techniques borrowed from bfd_elf_sym_name.
+	(ctf_new_archive_internal): Improve comment.
+	* ctf-archive.c (ctf_arc_close): Do not free the ctfi_strsect.
+	* ctf-open.c (ctf_bufopen): Allow opening with a string section but
+	no symbol section, but not vice versa.
+
+2019-07-08  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t): New field ctf_openflags.
+	* ctf-open.c (ctf_bufopen): Set it.  No longer dump header offsets.
+	* ctf-dump.c (dump_header): New function, dump the CTF header.
+	(ctf_dump): Call it.
+	(ctf_dump_header_strfield): New function.
+	(ctf_dump_header_sectfield): Likewise.
+
+2019-07-06  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_file_t): New fields ctf_header, ctf_dynbase,
+	ctf_cuname, ctf_dyncuname: ctf_base and ctf_buf are no longer const.
+	* ctf-open.c (ctf_set_base): Preserve the gap between ctf_buf and
+	ctf_base: do not assume that it is always sizeof (ctf_header_t).
+	Print out ctf_cuname: only print out ctf_parname if set.
+	(ctf_free_base): Removed, ctf_base is no longer freed: free
+	ctf_dynbase instead.
+	(ctf_set_version): Fix spacing.
+	(upgrade_header): New, in-place header upgrading.
+	(upgrade_types): Rename to...
+	(upgrade_types_v1): ... this.  Free ctf_dynbase, not ctf_base.  No
+	longer track old and new headers separately.  No longer allow for
+	header sizes explicitly: squeeze the headers out on upgrade (they
+	are preserved in fp->ctf_header).  Set ctf_dynbase, ctf_base and
+	ctf_buf explicitly.  Use ctf_free, not ctf_free_base.
+	(upgrade_types): New, also handle ctf_parmax updating.
+	(flip_header): Flip ctf_cuname.
+	(flip_types): Flip BUF explicitly rather than deriving BUF from
+	BASE.
+	(ctf_bufopen): Store the header in fp->ctf_header.  Correct minimum
+	required alignment of objtoff and funcoff.  No longer store it in
+	the ctf_buf unless that buf is derived unmodified from the input.
+	Set ctf_dynbase where ctf_base is dynamically allocated. Drop locals
+	that duplicate fields in ctf_file: move allocation of ctf_file
+	further up instead.  Call upgrade_header as needed.  Move
+	version-specific ctf_parmax initialization into upgrade_types.  More
+	concise error handling.
+	(ctf_file_close): No longer test for null pointers before freeing.
+	Free ctf_dyncuname, ctf_dynbase, and ctf_header.  Do not call
+	ctf_free_base.
+	(ctf_cuname): New.
+	(ctf_cuname_set): New.
+	* ctf-create.c (ctf_update): Populate ctf_cuname.
+	(ctf_gzwrite): Write out the header explicitly.  Remove obsolescent
+	comment.
+	(ctf_write): Likewise.
+	(ctf_compress_write): Get the header from ctf_header, not ctf_base.
+	Fix the compression length: fp->ctf_size never counted the CTF
+	header.  Simplify the compress call accordingly.
+
+2019-07-11  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* ctf-endian.h: Don't assume htole64 and le64toh are always
+	present if HAVE_ENDIAN_H; also check if htole64 is defined.
+	[!WORDS_BIGENDIAN] (htole64, le64toh): Define as identity,
+	not bswap_identity_64.
+
+2019-09-18  Alan Modra  <amodra@gmail.com>
+
+	* ctf-open-bfd.c: Update throughout for bfd section macro changes.
+
+2019-09-09  Phil Blundell  <pb@pbcl.net>
+
+	binutils 2.33 branch created.
+
+2019-07-18  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-types.c (ctf_type_aname_raw): New.
+	(ctf_func_type_info): Likewise.
+	(ctf_func_type_args): Likewise.
+	* ctf-error.c (_ctf_errlist): Fix description.
+	* ctf-lookup.c: Fix file description.
+
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_create): Fix off-by-one error.
+
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h: (struct ctf_strs_writable): New, non-const version of
+	struct ctf_strs.
+	(struct ctf_dtdef): Note that dtd_data.ctt_name is unpopulated.
+	(struct ctf_str_atom): New, disambiguated single string.
+	(struct ctf_str_atom_ref): New, points to some other location that
+	references this string's offset.
+	(struct ctf_file): New members ctf_str_atoms and ctf_str_num_refs.
+	Remove member ctf_dtvstrlen: we no longer track the total strlen
+	as we add strings.
+	(ctf_str_create_atoms): Declare new function in ctf-string.c.
+	(ctf_str_free_atoms): Likewise.
+	(ctf_str_add): Likewise.
+	(ctf_str_add_ref): Likewise.
+	(ctf_str_rollback): Likewise.
+	(ctf_str_purge_refs): Likewise.
+	(ctf_str_write_strtab): Likewise.
+	(ctf_realloc): Declare new function in ctf-util.c.
+
+	* ctf-open.c (ctf_bufopen): Create the atoms table.
+	(ctf_file_close): Destroy it.
+	* ctf-create.c (ctf_update): Copy-and-free it on update.  No longer
+	special-case the position of the parname string.  Construct the
+	strtab by calling ctf_str_add_ref and ctf_str_write_strtab after the
+	rest of each buffer element is constructed, not via open-coding:
+	realloc the CTF buffer and append the strtab to it.  No longer
+	maintain ctf_dtvstrlen.  Sort the variable entry table later, after
+	strtab construction.
+	(ctf_copy_membnames): Remove: integrated into ctf_copy_{s,l,e}members.
+	(ctf_copy_smembers): Drop the string offset: call ctf_str_add_ref
+	after buffer element construction instead.
+	(ctf_copy_lmembers): Likewise.
+	(ctf_copy_emembers): Likewise.
+	(ctf_create): No longer maintain the ctf_dtvstrlen.
+	(ctf_dtd_delete): Likewise.
+	(ctf_dvd_delete): Likewise.
+	(ctf_add_generic): Likewise.
+	(ctf_add_enumerator): Likewise.
+	(ctf_add_member_offset): Likewise.
+	(ctf_add_variable): Likewise.
+	(membadd): Likewise.
+	* ctf-util.c (ctf_realloc): New, wrapper around realloc that aborts
+	if there are active ctf_str_num_refs.
+	(ctf_strraw): Move to ctf-string.c.
+	(ctf_strptr): Likewise.
+	* ctf-string.c: New file, strtab manipulation.
+
+	* Makefile.am (libctf_a_SOURCES): Add it.
+	* Makefile.in: Regenerate.
+
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (ctf_hash_iter_f): New.
+	(ctf_dynhash_iter): New declaration.
+	(ctf_dynhash_iter_remove): New declaration.
+	* ctf-hash.c (ctf_dynhash_iter): Define.
+	(ctf_dynhash_iter_remove): Likewise.
+	(ctf_hashtab_traverse): New.
+	(ctf_hashtab_traverse_remove): Likewise.
+	(struct ctf_traverse_cb_arg): Likewise.
+	(struct ctf_traverse_remove_cb_arg): Likewise.
+
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-hash.c (ctf_dynhash_remove): Call with a mocked-up element.
+
+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_format_type): Prefix hex strings with 0x.
+	(ctf_dump_funcs): Likewise.
+
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open-bfd.c: Add swap.h and ctf-endian.h.
+	(ctf_fdopen): Check for endian-swapped raw CTF magic, and
+	little-endian CTF archive magic.  Do not check the CTF version:
+	ctf_simple_open does that in endian-safe ways.  Do not dereference
+	null pointers on open failure.
+
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (get_vbytes_common): Return the new slice size.
+	(ctf_bufopen): Flip the endianness of the CTF-section header copy.
+	Remember to copy in the CTF data when opening an uncompressed
+	foreign-endian CTF file.  Prune useless variable manipulation.
+
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (ctf_types): Fail when unidentified type kinds are
+	seen.
+
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c (ctf_bufopen): Dump header offsets into the debugging
+	output.
+
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-subr.c (_PAGESIZE): Remove.
+	(ctf_data_alloc): Likewise.
+	(ctf_data_free): Likewise.
+	(ctf_data_protect): Likewise.
+	* ctf-impl.h: Remove declarations.
+	* ctf-create.c (ctf_update): No longer call ctf_data_protect: use
+	ctf_free, not ctf_data_free.
+	(ctf_compress_write): Use ctf_data_alloc, not ctf_alloc.  Free
+	the buffer again on compression error.
+	* ctf-open.c (ctf_set_base): No longer track the size: call
+	ctf_free, not ctf_data_free.
+	(upgrade_types): Likewise.  Call ctf_alloc, not ctf_data_alloc.
+	(ctf_bufopen): Likewise.  No longer call ctf_data_protect.
+
+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (ctf_dtd_insert): Pass on error returns from
+	ctf_dynhash_insert.
+	(ctf_dvd_insert): Likewise.
+	(ctf_add_generic): Likewise.
+	(ctf_add_variable): Likewise.
+	* ctf-impl.h: Adjust declarations.
+
+2019-06-14  Alan Modra  <amodra@gmail.com>
+
+	* configure: Regenerate.
+
+2019-06-06  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-decls.h: Include <libiberty.h>.
+	* ctf-lookup.c (ctf_lookup_by_name): Call xstrndup(), not strndup().
+
+2019-06-06  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_format_type): Cast size_t's used in printf()s.
+	(ctf_dump_objts): Likewise.
+	(ctf_dump_funcs): Likewise.
+	(ctf_dump_member): Likewise.
+	(ctf_dump_str): Likewise.
+
+2019-06-06  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (arc_mmap_header): Mark fd as potentially unused.
+	* ctf-subr.c (ctf_data_protect): Mark both args as potentially unused.
+
+2019-06-05  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c (ctf_arc_write): Eschew %zi format specifier.
+	(ctf_arc_open_by_offset): Likewise.
+	* ctf-create.c (ctf_add_type): Likewise.
+
+2019-06-04  Tom Tromey  <tromey@adacore.com>
+
+	* ctf-create.c (ctf_add_encoded, ctf_add_slice)
+	(ctf_add_member_offset): Use CHAR_BIT, not NBBY.
+
+2019-06-04  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac: Check for O_CLOEXEC.
+	* ctf-decls.h (O_CLOEXEC): Define (to 0), if need be.
+	* config.h.in: Regenerate.
+	* configure: Likewise.
+
+2019-06-04  Nick Alcock  <nick.alcock@oracle.com>
+
+	* qsort_r.c: Rename to...
+	* ctf-qsort_r.c: ... this.
+	(_quicksort): Define to ctf_qsort_r.
+	* ctf-decls.h (qsort_r): Remove.
+	(ctf_qsort_r): Add.
+	(struct ctf_qsort_arg): New, transport the real ARG and COMPAR.
+	(ctf_qsort_compar_thunk): Rearrange the arguments to COMPAR.
+	* Makefile.am (libctf_a_LIBADD): Remove.
+	(libctf_a_SOURCES): New, add ctf-qsort_r.c.
+	* ctf-archive.c (ctf_arc_write): Call ctf_qsort_r, not qsort_r.
+	* ctf-create.c (ctf_update): Likewise.
+	* configure.ac: Check for BSD versus GNU qsort_r signature.
+	* Makefile.in: Regenerate.
+	* config.h.in: Likewise.
+	* configure: Likewise.
+
+2019-06-03  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c (ctf_dump_funcs): Free in the right place.
+
+2019-05-29  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.am (ZLIB): New.
+	(ZLIBINC): Likewise.
+	(AM_CFLAGS): Use them.
+	(libctf_a_LIBADD): New, for LIBOBJS.
+	* configure.ac: Check for zlib, endian.h, and qsort_r.
+	* ctf-endian.h: New, providing htole64 and le64toh.
+	* swap.h: Code style fixes.
+	(bswap_identity_64): New.
+	* qsort_r.c: New, from gnulib (with one added #include).
+	* ctf-decls.h: New, providing a conditional qsort_r declaration,
+	and unconditional definitions of MIN and MAX.
+	* ctf-impl.h: Use it.  Do not use <sys/errno.h>.
+	(ctf_set_errno): Now returns unsigned long.
+	* ctf-util.c (ctf_set_errno): Adjust here too.
+	* ctf-archive.c: Use ctf-endian.h.
+	(ctf_arc_open_by_offset): Use memset, not bzero.  Drop cts_type,
+	cts_flags and cts_offset.
+	(ctf_arc_write): Drop debugging dependent on the size of off_t.
+	* ctf-create.c: Provide a definition of roundup if not defined.
+	(ctf_create): Drop cts_type, cts_flags and cts_offset.
+	(ctf_add_reftype): Do not check if type IDs are below zero.
+	(ctf_add_slice): Likewise.
+	(ctf_add_typedef): Likewise.
+	(ctf_add_member_offset): Cast error-returning ssize_t's to size_t
+	when known error-free.  Drop CTF_ERR usage for functions returning
+	int.
+	(ctf_add_member_encoded): Drop CTF_ERR usage for functions returning
+	int.
+	(ctf_add_variable): Likewise.
+	(enumcmp): Likewise.
+	(enumadd): Likewise.
+	(membcmp): Likewise.
+	(ctf_add_type): Likewise.  Cast error-returning ssize_t's to size_t
+	when known error-free.
+	* ctf-dump.c (ctf_is_slice): Drop CTF_ERR usage for functions
+	returning int: use CTF_ERR for functions returning ctf_type_id.
+	(ctf_dump_label): Likewise.
+	(ctf_dump_objts): Likewise.
+	* ctf-labels.c (ctf_label_topmost): Likewise.
+	(ctf_label_iter): Likewise.
+	(ctf_label_info): Likewise.
+	* ctf-lookup.c (ctf_func_args): Likewise.
+	* ctf-open.c (upgrade_types): Cast to size_t where appropriate.
+	(ctf_bufopen): Likewise.  Use zlib types as needed.
+	* ctf-types.c (ctf_member_iter): Drop CTF_ERR usage for functions
+	returning int.
+	(ctf_enum_iter): Likewise.
+	(ctf_type_size): Likewise.
+	(ctf_type_align): Likewise.  Cast to size_t where appropriate.
+	(ctf_type_kind_unsliced): Likewise.
+	(ctf_type_kind): Likewise.
+	(ctf_type_encoding): Likewise.
+	(ctf_member_info): Likewise.
+	(ctf_array_info): Likewise.
+	(ctf_enum_value): Likewise.
+	(ctf_type_rvisit): Likewise.
+	* ctf-open-bfd.c (ctf_bfdopen): Drop cts_type, cts_flags and
+	cts_offset.
+	(ctf_simple_open): Likewise.
+	(ctf_bfdopen_ctfsect): Likewise.  Set cts_size properly.
+	* Makefile.in: Regenerate.
+	* aclocal.m4: Likewise.
+	* config.h: Likewise.
+	* configure: Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.in: Check for bfd_section_from_elf_index.
+	* configure: Regenerate.
+	* config.h.in [HAVE_BFD_ELF]: Likewise.
+	* libctf/ctf-open-bfd.c (ctf_bfdopen_ctfsect): Use it.
+	abfd is potentially unused now.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.am: New.
+	* Makefile.in: Regenerated.
+	* config.h.in: Likewise.
+	* aclocal.m4: Likewise.
+	* configure: Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-dump.c: New.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-labels.c: New.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h (_libctf_version): New declaration.
+	* ctf-subr.c (_libctf_version): Define it.
+	(ctf_version): New.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c (enumcmp): New.
+	(enumadd): Likewise.
+	(membcmp): Likewise.
+	(membadd): Likewise.
+	(ctf_add_type): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-lookup.c (isqualifier): New.
+	(ctf_lookup_by_name): Likewise.
+	(struct ctf_lookup_var_key): Likewise.
+	(ctf_lookup_var): Likewise.
+	(ctf_lookup_variable): Likewise.
+	(ctf_lookup_symbol_name): Likewise.
+	(ctf_lookup_by_symbol): Likewise.
+	(ctf_func_info): Likewise.
+	(ctf_func_args): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-decl.c: New file.
+	* ctf-types.c: Likewise.
+	* ctf-impl.h: New declarations.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open-bfd.c: New file.
+	* ctf-open.c (ctf_close): New.
+	* ctf-impl.h: Include bfd.h.
+	(ctf_file): New members ctf_data_mmapped, ctf_data_mmapped_len.
+	(ctf_archive_internal): New members ctfi_abfd, ctfi_data,
+	ctfi_bfd_close.
+	(ctf_bfdopen_ctfsect): New declaration.
+	(_CTF_SECTION): likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-archive.c: New.
+	* ctf-impl.h (ctf_archive_internal): New type.
+	(ctf_arc_open_internal): New declaration.
+	(ctf_arc_bufopen): Likewise.
+	(ctf_arc_close_internal): Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-open.c: New file.
+	* swap.h: Likewise.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-create.c: New file.
+	* ctf-lookup.c: New file.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h: New definitions and declarations for type creation
+	and lookup.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-hash.c: New file.
+	* ctf-impl.h: New declarations.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-error.c: New file.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-util.c: New file.
+	* elf.h: Likewise.
+	* ctf-impl.h: Include it, and add declarations.
+
+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctf-impl.h: New file.
+	* ctf-subr.c: New file.
+
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 76
+version-control: never
+End:
diff --git a/gdb/testsuite/ChangeLog-1993-2013 b/gdb/testsuite/ChangeLog-1993-2013
index e3b022418b0..ae75ddb99a3 100644
--- a/gdb/testsuite/ChangeLog-1993-2013
+++ b/gdb/testsuite/ChangeLog-1993-2013
@@ -33699,6 +33699,6 @@ Sun Feb 21 10:55:55 1993  Mike Werner  (mtw@poseidon.cygnus.com)
 ;; version-control: never
 ;; End:
 
-    Copyright 1993-2020 Free Software Foundation, Inc.
+    Copyright 1993-2021 Free Software Foundation, Inc.
   Copying and distribution of this file, with or without modification,
   are permitted provided the copyright notice and this notice are preserved.
diff --git a/gdb/ChangeLog-2020 b/gdb/ChangeLog-2020
new file mode 100644
index 00000000000..449afdc31db
--- /dev/null
+++ b/gdb/ChangeLog-2020
@@ -0,0 +1,18751 @@
+2020-12-27  Tom Tromey  <tom@tromey.com>
+
+	* eval.c (evaluate_subexp_standard) <case MULTI_SUBSCRIPT>:
+	Simplify.
+
+2020-12-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR gdb/27059
+	* eval.c (evaluate_subexp_for_sizeof): Handle not allocated and
+	not associated arrays.
+	* f-lang.c (fortran_adjust_dynamic_array_base_address_hack): Don't
+	adjust arrays that are not allocated/associated.
+	* gdbtypes.c (resolve_dynamic_range): Update header comment.  Add
+	new parameter which is used to sometimes set dynamic properties to
+	undefined.
+	(resolve_dynamic_array_or_string): Update header comment.  Add new
+	parameter which is used to guard evaluating dynamic properties.
+	Resolve allocated/associated properties first.
+
+2020-12-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbtypes (recursive_dump_type): Include allocated and associated
+	properties.
+
+2020-12-24  Lancelot SIX  <lsix@lancelotsix.com>
+
+	* gdbtypes.c (is_scalar_type_recursive): Prevent comparison
+	between uninitialized values.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* expprint.c (print_subexp_standard): Replace uses of
+	LA_PRINT_STRING.
+	* f-valprint.c (f_language::value_print_inner): Likewise.
+	* guile/scm-pretty-print.c (ppscm_print_string_repr): Likewise.
+	* p-valprint.c (pascal_language::value_print_inner): Likewise.
+	* python/py-prettyprint.c (print_string_repr): Likewise.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* rust-exp.y (rust_parse): Rename to...
+	(rust_language::parser): ...this.
+	* rust-lang.c (-rust_printstr): Rename to...
+	(rust_language::printstr): ...this.
+	(rust_value_print_inner): Delete declaration.
+	(val_print_struct): Rename to...
+	(rust_language::val_print_struct): ...this.  Update calls to
+	member functions.
+	(rust_print_enum): Rename to...
+	(rust_language::print_enum): ...this.  Update calls to member
+	functions.
+	(rust_value_print_inner): Rename to...
+	(rust_language::value_print_inner): ...this.  Update calls to
+	member functions.
+	(exp_descriptor_rust): Rename to...
+	(rust_language::exp_descriptor_tab): ...this.
+	(class rust_language): Move to rust-lang.h.
+	(rust_language::language_arch_info): Implementation moved to here
+	from class declaration.
+	(rust_language::print_type): Likewise.
+	(rust_language::emitchar): Likewise.
+	(rust_language::is_string_type_p): Likewise.
+	* rust-lang.h: Add 'demangle.h', 'language.h', 'value.h', and
+	'c-lang.h' includes.
+	(rust_parse): Delete declaration.
+	(class rust_language): Class declaration moved here from
+	rust-lang.c.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* objc-lang.c (objc_language::opcode_print_table): Return
+	objc_op_print_tab.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* p-exp.y (exp): Update call to pascal_is_string_type.
+	(pascal_parse): Rename to...
+	(pascal_language::parser): ...this.
+	* p-lang.c (is_pascal_string_type): Rename to...
+	(pascal_is_string_type): ...this.
+	(pascal_one_char): Rename to...
+	(pascal_language::print_one_char): ...this.
+	(pascal_printchar): Rename to...
+	(pascal_language::printchar): ...this.  Update call to
+	print_one_char member function.
+	(pascal_op_print_tab): Rename to...
+	(pascal_language::op_print_tab): ...this.
+	(class pascal_language): Moved to p-lang.h.
+	(pascal_language::language_arch_info): Function implementation
+	moved out of class declaration.
+	(pascal_language::printstr): Likewise.
+	* p-lang.h (pascal_parse): Delete declaration.
+	(pascal_is_string_type): Declare.
+	(pascal_print_type): Delete declaration.
+	(pascal_print_typedef): Delete declaration.
+	(pascal_value_print_inner): Delete declaration.
+	(pascal_value_print): Delete declaration.
+	(pascal_type_print_method_args): Delete declaration.
+	(is_pascal_string_type): Delete declaration.
+	(pascal_printchar): Delete declaration.
+	(pascal_builtin_types): Delete declaration.
+	(pascal_type_print_base): Delete declaration.
+	(pascal_type_print_varspec_prefix): Delete declaration.
+	(class pascal_language): Moved here from p-lang.c.
+	* p-typeprint.c (pascal_type_print_varspec_suffix): Delete
+	declaration.
+	(pascal_type_print_derivation_info): Delete declaration.
+	(pascal_print_type): Rename to...
+	(pascal_language::print_type): ...this.  Update calls to member
+	functions.
+	(pascal_print_typedef): Rename to...
+	(pascal_language::print_typedef): ...this.  Update calls to member
+	functions.
+	(pascal_type_print_derivation_info): Rename to...
+	(pascal_language::type_print_derivation_info): ...this.
+	(pascal_type_print_method_args): Rename to...
+	(pascal_language::type_print_method_args): ...this.
+	(pascal_type_print_varspec_prefix): Rename to...
+	(pascal_language::type_print_varspec_prefix): ...this.  Update
+	calls to member functions.
+	(pascal_print_func_args): Rename to...
+	(pascal_language::print_func_args): ...this.  Update calls to
+	member functions.
+	(pascal_type_print_func_varspec_suffix): Rename to...
+	(pascal_language::type_print_func_varspec_suffix): ...this.
+	Update calls to member functions.
+	(pascal_type_print_varspec_suffix): Rename to...
+	(pascal_language::type_print_varspec_suffix): ...this.  Update
+	calls to member functions.
+	(pascal_type_print_base): Rename to...
+	(pascal_language::type_print_base): ...this.  Update calls to
+	member functions.
+	* p-valprint.c (pascal_value_print_inner): Rename to...
+	(pascal_language::value_print_inner): ...this.  Update calls to
+	member functions.
+	(pascal_value_print): Rename to...
+	(pascal_language::value_print): ...this.  Update calls to member
+	functions.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* go-exp.y (go_parse): Rename to...
+	(go_language::parser): ...this.
+	* go-lang.c (go_demangle): Rename to...
+	(go_language::demangle_symbol): ...this.
+	(go_language::expression_ops): Implementation moved here out of
+	class declaration.
+	(go_op_print_tab): Rename to...
+	(go_language::op_print_tab): ...this, update comment.
+	(class go_language): Declaration moved to go-lang.h.
+	(go_language::language_arch_info): Implementation moved here out
+	of class declaration.
+	* go-lang.h (go_parse): Delete declaration.
+	(go_demangle): Delete declaration.
+	(go_print_type): Delete declaration.
+	(go_value_print_inner): Delete declaration.
+	(class go_language): Declaration moved here from go-lang.c.
+	* go-typeprint.c (go_print_type): Rename to...
+	(go_language::print_type): ...this.
+	* go-valprint.c (go_value_print_inner): Rename to...
+	(go_language::value_print_inner): ...this.
+	* symtab.c (demangle_for_lookup): Call demangle_symbol method on
+	the go_language object.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* c-lang.c (language_defn::printchar): Call emitchar, not
+	LA_EMIT_CHAR.
+	* f-lang.h (f_language::printchar): Likewise.
+	* language.h (LA_EMIT_CHAR): Delete macro.
+	* rust-lang.c (rust_language::printchar): Call emitchar, not
+	LA_EMIT_CHAR.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* c-lang.c (c_printchar): Rename to...
+	(language_defn::printchar): ...this.
+	* c-lang.h (c_printchar): Delete declaration.
+	* language.c (language_defn::printchar): Delete this
+	implementation.  Is now implemented in c-lang.c.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2/read.c (dwarf2_compute_name): Call methods on C++
+	language object instead of calling global functions directly.
+
+2020-12-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* valprint.c (print_char_chars): Delete definition.
+	* valprint.h (print_char_chars): Delete declaration.
+
+2020-12-23  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* i386-gnu-tdep.c (I386_GNU_UCONTEXT_T_THREAD_STATE_OFFSET): New
+	macro.
+	(i386_gnu_sigcontext_addr): Detect between legacy and siginfo from the
+	second parameter, which is a small sigcode in the legacy case, and a
+	pointer in the siginfo case.
+
+	* MAINTAINERS (Write After Approval): Add myself.
+
+2020-12-22  Shahab Vahedi  <shahab@synopsys.com>
+
+	* frame.c: Remove trailing white spaces.
+	* frame.h: Likewise.
+
+2020-12-22  Shahab Vahedi  <shahab@synopsys.com>
+
+	* arc-linux-tdep.c: Replace "regnum" with "REGNUM" in comments.
+
+2020-12-22  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* Makefile.in (ALLDEPFILES): Add arc-linux-nat.c.
+	* configure.host (host to gdb names): Add arc*-*-linux*.
+	* configure.nat (gdb_host_cpu): Add arc.
+	* arc-linux-nat.c: New.
+
+2020-12-22  Shahab Vahedi  <shahab@synopsys.com>
+
+	* arc-linux-tdep.c (supply_register): New.
+	(arc_linux_supply_gregset, arc_linux_supply_v2_regset,
+	arc_linux_collect_v2_regset): Consider REGNUM.
+
+2020-12-22  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* arc-linux-tdep.c (arc_linux_sc_reg_offsets): New static variable.
+	(arc_linux_is_sigtramp): New function.
+	(arc_linux_sigcontext_addr): Likewise.
+	(arc_linux_init_osabi): Use them.
+
+2020-12-22  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* arc-tdep.c (arc_make_sigtramp_frame_cache): New function.
+	(arc_sigtramp_frame_this_id): Likewise.
+	(arc_sigtramp_frame_prev_register): Likewise.
+	(arc_sigtramp_frame_sniffer): Likewise.
+	(arc_siftramp_frame_unwind): New global variable.
+	(arc_gdbarch_init): Use sigtramp capabilities.
+	(arc_dump_tdep): Print sigtramp fields.
+	* arc-tdep.h (gdbarch_tdep): Add sigtramp fields.
+
+2020-12-21  Tom Tromey  <tom@tromey.com>
+
+	* expression.h (enum noside): Move earlier.
+
+2020-12-21  Peter Waller  <p@pwaller.net>
+
+	* interps.c (interpreter_exec_cmd): Restore streams pointers.
+
+2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* record.c (require_record_target): Rephrase error message.
+	(info_record_command): Likewise.
+
+2020-12-19  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR exp/27070
+	* gdbtypes.c (check_types_equal): Don't compare types of enum fields.
+
+2020-12-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* configure.ac: Move the static libs vs. source-highlight
+	error message to a better place.
+	* configure: Regenerate.
+
+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>
+
+	* gdb-gdb.py.in: Fix main_type field name.
+
+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>
+
+	* python/py-value.c (valpy_format_string): Implement address keyword.
+
+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>
+
+	* python/py-type.c (typy_get_composite): Add TYPE_CODE_METHOD.
+
+2020-12-18  Jameson Nash  <vtjnash@gmail.com>
+
+	* coffread.c (linetab_offset): Change type to file_ptr.
+	(linetab_size): Likewise.
+	(enter_linenos): Change parameter type to file_ptr.
+	(init_lineno): Likewise.
+	(init_stringtab): Likewise.
+	(coff_symtab_read): Likewise.
+	(coff_symfile_read): Change variable types to file_ptr.
+
+2020-12-17  Tom Tromey  <tromey@adacore.com>
+
+	* printcmd.c (print_variable_and_value): Don't use n_spaces.
+
+2020-12-17  Tom Tromey  <tromey@adacore.com>
+
+	* gdbtypes.c (print_args, dump_fn_fieldlists, print_cplus_stuff)
+	(print_gnat_stuff, print_fixed_point_type_info)
+	(recursive_dump_type): Update.
+	* go32-nat.c (go32_sysinfo, display_descriptor): Update.
+	* c-typeprint.c (c_type_print_base_struct_union)
+	(c_type_print_base_1): Update.
+	* rust-lang.c (rust_internal_print_type): Update.
+	* f-typeprint.c (f_language::f_type_print_base): Update.
+	* utils.h (fprintfi_filtered, printfi_filtered): Remove.
+	* m2-typeprint.c (m2_record_fields): Update.
+	* p-typeprint.c (pascal_type_print_base): Update.
+	* compile/compile-loc2c.c (push, pushf, unary, binary)
+	(do_compile_dwarf_expr_to_c): Update.
+	* utils.c (fprintfi_filtered, printfi_filtered): Remove.
+
+2020-12-16  Tom Tromey  <tom@tromey.com>
+
+	* rust-exp.y (rust_lex_tests): Update.
+	* parser-defs.h (parser_state): Add void_p parameter.
+	<void_context_p>: New member.
+	* parse.c (parse_exp_in_context): Update.
+	* language.h (language_defn::post_parser): Remove void_context_p,
+	completing, tracker parameters.  Add parser state.
+	* ada-lang.c (ada_language::post_parser): Update.
+
+2020-12-16  Tom Tromey  <tom@tromey.com>
+
+	* parse.c (parse_exp_1, parse_expression_for_completion): Update.
+	(parse_exp_in_context): Change void_context_p to bool.
+	* language.h (struct language_defn) <post_parser>: Change
+	void_context_p to bool.
+	* ada-lang.c (class ada_language) <post_parser>: Update.
+
+2020-12-16  Tom Tromey  <tom@tromey.com>
+	    Tom Tromey  <tromey@redhat.com>
+	    Tom de Vries  <tdevries@suse.de>
+
+	* utils.h (get_chars_per_line): Declare.
+	* utils.c (get_chars_per_line): New function.
+	(fputs_maybe_filtered): Handle '\r'.
+	* ui-out.h (ui_out::progress_meter): New class.
+	(ui_out::progress, ui_out::do_progress_start)
+	(ui_out::do_progress_notify, ui_out::do_progress_end): New
+	methods.
+	* ui-out.c (do_progress_end)
+	(make_cleanup_ui_out_progress_begin_end, ui_out_progress): New
+	functions.
+	* mi/mi-out.h (mi_ui_out::do_progress_start)
+	(mi_ui_out::do_progress_notify, mi_ui_out::do_progress_end): New
+	methods.
+	* cli-out.h (struct cli_ui_out) <do_progress_start,
+	do_progress_notify, do_progress_end>: New methods.
+	<enum meter_stat, struct cli_progress_info>: New.
+	<m_meters>: New member.
+	* cli-out.c (cli_ui_out::do_progress_start)
+	(cli_ui_out::do_progress_notify, cli_ui_out::do_progress_end): New
+	methods.
+
+2020-12-16  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-tdep.c (aarch64_record_data_proc_simd_fp): Record FPSR.
+
+2020-12-16  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-linux-nat.c
+	(aarch64_linux_nat_target::stopped_data_address): Handle the TBI.
+
+2020-12-15  Rae Kim  <rae.kim@gmail.com>
+
+	* cli/cli-script.c (do_document_command): Rename from
+	document_command. Handle multi-line input.
+	(multi_line_command_p): Handle document_control.
+	(build_command_line): Likewise.
+	(execute_control_command_1): Likewise.
+	(process_next_line): Likewise.
+	(document_command): Call do_document_command.
+	* cli/cli-script.h (enum command_control_type): Add
+	document_control.
+
+2020-12-15  Tom Tromey  <tom@tromey.com>
+
+	* stap-probe.c (stap_probe::evaluate_argument): Use
+	evaluate_expression.
+	* dtrace-probe.c (dtrace_probe::evaluate_argument): Use
+	evaluate_expression.
+	* value.h (evaluate_expression): Add expect_type parameter.
+	* objc-lang.c (print_object_command): Call evaluate_expression.
+	* eval.c (evaluate_expression): Add expect_type parameter.
+
+2020-12-15  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (varobj_create): Use first_opcode.
+	* value.c (init_if_undefined_command): Use first_opcode.
+	* typeprint.c (whatis_exp): Use first_opcode.
+	* tracepoint.c (validate_actionline): Use first_opcode.
+	(encode_actions_1): Use first_opcode.
+	* stack.c (return_command): Use first_opcode.
+	* expression.h (struct expression) <first_opcode>: New method.
+	* eval.c (parse_and_eval_type): Use first_opcode.
+	* dtrace-probe.c (dtrace_process_dof_probe): Use first_opcode.
+
+2020-12-15  Tom Tromey  <tom@tromey.com>
+
+	* f-lang.c (evaluate_subexp_f): Update.
+	* expression.h (evaluate_subexp_do_call): Update.
+	* eval.c (evaluate_subexp_do_call): Add callee parameter.  Replace
+	nargs, argvec with array_view.
+	(evaluate_funcall): Update.
+
+2020-12-15  Tom Tromey  <tom@tromey.com>
+
+	* ada-lang.c (num_component_specs): Remove.
+	(assign_aggregate): Update.
+	(aggregate_assign_positional, aggregate_assign_from_choices)
+	(aggregate_assign_others, add_component_interval): Change
+	arguments.
+
+2020-12-15  Tom Tromey  <tromey@adacore.com>
+
+	* cli/cli-decode.c (deprecated_cmd_warning): Use title style for
+	command names.
+
+2020-12-14  Tom Tromey  <tom@tromey.com>
+
+	* dtrace-probe.c (dtrace_process_dof_probe): Use value_type.
+	* typeprint.c (whatis_exp): Always use evaluate_type.
+	(maintenance_print_type): Likewise.  Simplify.
+
+2020-12-14  Tom Tromey  <tromey@adacore.com>
+
+	* dictionary.c (language_defn::search_name_hash): Ignore "B".
+	* ada-lang.c (advance_wild_match): Ignore "B".
+	(full_match): Remove.
+	(do_full_match): Rewrite.
+
+2020-12-14  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (get_var_value): Only consider exact matches.
+
+2020-12-14  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (rewrite_array_type): New function.
+        (quirk_ada_thick_pointer_struct): Use rewrite_array_type.
+
+2020-12-14  Tom Tromey  <tromey@adacore.com>
+
+	* valarith.c (fixed_point_binop): Call error on division by zero.
+
+2020-12-13  Tom Tromey  <tom@tromey.com>
+
+	* gdbtypes.c (safe_parse_type): Make argument const.
+	* value.h (parse_and_eval_type): Make argument const.
+	* eval.c (parse_and_eval_type): Make argument const.
+
+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention new commands.
+	* target-dcache.c: Add 'cli/cli-cmds.h' include.
+	(maint_flush_dcache_command): New function.
+	(_initialize_target_dcache): Create new 'maint flush dcache'
+	command.
+
+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention new commands, and that the old commands are now
+	deprecated.
+	* cli/cli-cmds.c (maintenanceflushlist): Define.
+	* cli/cli-cmds.h (maintenanceflushlist): Declare.
+	* maint.c (_initialize_maint_cmds): Initialise
+	maintenanceflushlist.
+	* regcache.c: Add 'cli/cli-cmds.h' include.
+	(reg_flush_command): Add header comment.
+	(_initialize_regcache): Create new 'maint flush register-cache'
+	command, make 'flushregs' an alias.
+	* symtab.c: Add 'cli/cli-cmds.h' include.
+	(_initialize_symtab): Create new 'maint flush symbol-cache'
+	command, make old command an alias.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cli/cli-decode.c (deprecated_cmd_warning): Ignore the prefix
+	result from lookup_cmd_composition_1, use the prefixes from both
+	the command and the alias instead.
+	(lookup_cmd_composition_1): Initial prefix command is the based on
+	the search list being passed in.  Simplify the logic for tracking
+	the prefix command.  Replace a use of alloca with a local
+	std::string.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cli/cli-decode.c (deprecated_cmd_warning): Use nullptr instead
+	of NULL.  Don't print message piece by piece, but sentence at a
+	time to allow internationalisation.  Some whitespace cleanup.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR cli/15104
+	* cli/cli-decode.c (lookup_cmd_1): Pass command list to
+	deprecated_cmd_warning.
+	(deprecated_cmd_warning): Take extra parameter, call
+	lookup_cmd_composition_1 and pass new parameter through.
+	(lookup_cmd_composition_1): New function, takes implementation of
+	lookup_cmd_composition but with extra parameter.
+	(lookup_cmd_composition): Now calls lookup_cmd_composition_1
+	passing in cmdlist.
+	* command.h (deprecated_cmd_warning): Add extra parameter to
+	declaration.
+	* top.c (execute_command): Pass cmdlist to deprecated_cmd_warning.
+
+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cli/cli-decode.c (lookup_cmd_1): Move header comment into
+	command.h, add extra parameter, and use this to guard giving a
+	warning.
+	* command.h (lookup_cmd_1): Add comment from cli/cli-decode.c,
+	include argument names in declaration, add new argument.
+	* completer.c (complete_line_internal_1): Remove unneeded
+	brackets, pass extra argument to lookup_cmd_1.
+
+2020-12-11  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infrun.h (debug_infrun): Make a bool.
+	* infrun.c (debug_infrun): Make a bool.
+	(_initialize_infrun): Use add_setshow_boolean_cmd to define "set
+	debug infrun".
+
+2020-12-11  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* displaced-stepping.h (displaced_debug_printf): Use
+	debug_prefixed_printf_cond.
+	* dwarf2/read.c (dwarf_read_debug_printf): Likewise.
+	(dwarf_read_debug_printf_v): Likewise.
+	* infrun.h (infrun_debug_printf): Likewise.
+	* linux-nat.c (linux_nat_debug_printf): Likewise.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* p-exp.y (intvar): Remove global.
+	(DOLLAR_VARIABLE): Change type.
+	(start): Update.
+	(exp): Call write_dollar_variable here...
+	(yylex): ... not here.
+	* m2-exp.y (DOLLAR_VARIABLE): Change type.
+	(variable): Call write_dollar_variable here...
+	(yylex): ... not here.
+	* f-exp.y (DOLLAR_VARIABLE): Change type.
+	(exp): Call write_dollar_variable here...
+	(yylex): ... not here.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (varobj_create): Update.
+	(install_variable): Return void.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (instantiate_pretty_printer): Use gdbpy_ref.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (varobj_clear_saved_item): Remove.
+	(update_dynamic_varobj_children): Update.
+	(varobj::~varobj): Don't call varobj_clear_saved_item.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (install_dynamic_child, varobj_clear_saved_item)
+	(update_dynamic_varobj_children, create_child)
+	(create_child_with_value): Update.
+	* varobj-iter.h (struct varobj_item) <value>: Now a
+	value_ref_ptr.
+	* python/py-varobj.c (py_varobj_iter::next): Call release_value.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (struct varobj_dynamic) <child_iter>: Now unique_ptr.
+	(varobj_get_iterator): Return unique_ptr.
+	(update_dynamic_varobj_children, install_visualizer)
+	(varobj::~varobj): Update.
+	* python/python-internal.h (py_varobj_get_iterator): Return
+	unique_ptr.
+	* python/py-varobj.c (py_varobj_get_iterator): Return unique_ptr.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (struct varobj_dynamic) <saved_item>: Now unique_ptr.
+	(varobj_clear_saved_item, update_dynamic_varobj_children):
+	Update.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (update_dynamic_varobj_children): Update.
+	* varobj-iter.h (struct varobj_iter) <next>: Change return type.
+	* python/py-varobj.c (struct py_varobj_iter) <next>: Change return
+	type.
+	(py_varobj_iter::next): Likewise.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (update_dynamic_varobj_children, install_visualizer)
+	(varobj::~varobj): Update.
+	* varobj-iter.h (struct varobj_iter): Change to interface class.
+	(struct varobj_iter_ops): Remove.
+	(varobj_iter_next, varobj_iter_delete): Remove.
+	* python/py-varobj.c (struct py_varobj_iter): Derive from
+	varobj_iter.  Add constructor, destructor.  Rename members.
+	(py_varobj_iter::~py_varobj_iter): Rename from
+	py_varobj_iter_dtor.
+	(py_varobj_iter::next): Rename from py_varobj_iter_next.
+	(py_varobj_iter_ops): Remove.
+	(py_varobj_iter): Rename from py_varobj_iter_ctor.
+	(py_varobj_iter_new): Remove.
+	(py_varobj_get_iterator): Update.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.h (all_root_varobjs): Take a function_view.
+	* varobj.c (all_root_varobjs): Take a function_view.
+	(varobj_invalidate_iter): Remove unused parameter.
+	(varobj_invalidate): Update.
+	* mi/mi-cmd-var.c (struct mi_cmd_var_update): Remove.
+	(mi_cmd_var_update_iter): Change parameters.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (struct varobj_root) <next>: Remove.
+	(struct vlist): Remove.
+	(rootlist): Now a std::list.
+	(install_variable, uninstall_variable, all_root_varobjs): Update.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* varobj.c (VAROBJ_TABLE_SIZE): Remove.
+	(varobj_table): Now htab_t.
+	(varobj_get_handle, install_variable, uninstall_variable):
+	Update.
+	(hash_varobj, eq_varobj_and_string): New functions.
+	(hash_varobj): Update.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* inline-frame.c (stopped_by_user_bp_inline_frame): Update.
+	* ada-lang.c (check_status_exception): Update.
+	* breakpoint.c (free_bp_location): Remove.
+	(decref_bp_location): Use bp_location_ref_policy.
+	(bpstats::bpstats): Don't call incref_bp_location.
+	(bpstats::~bpstats): Remove.
+	(bpstats::bpstats): Update.
+	(bpstat_check_watchpoint, bpstat_check_breakpoint_conditions)
+	(bp_location::bp_location): Update.
+	(incref_bp_location): Remove.
+	(bkpt_print_it): Update.
+	* breakpoint.h (class bp_location): Derive from
+	refcounted_object.
+	(struct bpstats): Remove destructor.
+	<bp_location_at>: Now a bp_location_ref_ptr.
+	<refc>: Remove.
+	(bp_location_ref_ptr): New typedef.
+	(struct bp_location_ref_policy): New.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* thread.c (class scoped_inc_dec_ref): Remove.
+	(tp_array_compar_ascending, tp_array_compar_descending): Change
+	parameter types.
+	(thread_apply_all_command): Use thread_info_ref.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* infrun.c (struct stop_context) <thread>: Now a thread_info_ref.
+	(stop_context::stop_context): Update.
+	(stop_context::~stop_context): Remove.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* inferior.c (current_inferior_): Change type.
+	(current_inferior, set_current_inferior, initialize_inferiors):
+	Update.
+
+2020-12-11  Tom Tromey  <tom@tromey.com>
+
+	* gdbthread.h (class enable_thread_stack_temporaries) <m_thr>:
+	Change type.
+
+2020-12-11  Tom Tromey  <tromey@adacore.com>
+
+	* ada-tasks.c (struct ada_tasks_pspace_data) <cpu_id_offset>: New
+	field.
+	(ada_get_tcb_types_info): Look for __gnat_gdb_cpu_first_id.
+	(read_atcb): Use cpu_id_offset.
+
+2020-12-10  Kevin Buettner  <kevinb@redhat.com>
+
+	* ada-lang.c (ada_fold_name): Fix off-by-one error.
+
+2020-12-10  Luis Machado  <luis.machado@linaro.org>
+
+	* breakpoint.c (should_be_inserted): Don't output newline.
+
+2020-12-10  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-linux-tdep.c (aarch64_linux_restore_vreg) New function.
+	(aarch64_linux_sigframe_init): Call aarch64_linux_restore_vreg.
+	* aarch64-tdep.h (V_REGISTER_SIZE): Move to ...
+	* arch/aarch64.h: ... here.
+	* nat/aarch64-sve-linux-ptrace.c: Include endian.h.
+	(aarch64_maybe_swab128): New function.
+	(aarch64_sve_regs_copy_to_reg_buf)
+	(aarch64_sve_regs_copy_from_reg_buf): Adjust FPSIMD entries.
+	* trad-frame.c (trad_frame_reset_saved_regs): Initialize
+	the data field.
+	(TF_REG_VALUE_BYTES): New enum value.
+	(trad_frame_value_bytes_p): New function.
+	(trad_frame_set_value_bytes): New function.
+	(trad_frame_set_reg_value_bytes): New function.
+	(trad_frame_get_prev_register): Handle register values saved as bytes.
+	* trad-frame.h (trad_frame_set_reg_value_bytes): New prototype.
+	(struct trad_frame_saved_reg) <data>: New field.
+	(trad_frame_set_value_bytes): New prototype.
+	(trad_frame_value_bytes_p): New prototype.
+
+2020-12-07  Mihails Strasuns  <mihails.strasuns@intel.com>
+
+	* jit.c (mem_bfd*, bfd_open_from_target_memory): Removed.
+	* gdb_bfd.h (gdb_bfd_open_from_target_memory): New function.
+	* gdb_bfd.c (mem_bfd*, gdb_bfd_open_from_target_memory): New functions.	
+
+2020-12-09  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_lookup_encoded_symbol): Use add_angle_brackets.
+
+2020-12-09  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (get_dwarf2_rational_constant): Change "numerator"
+	and "denominator" to gdb_mpz.  Handle block forms.
+	(get_dwarf2_unsigned_rational_constant): Change "numerator" and
+	"denominator" to gdb_mpz.
+	(finish_fixed_point_type): Update.
+	(has_zero_over_zero_small_attribute): Update.
+
+2020-12-09  Tom Tromey  <tromey@adacore.com>
+
+	* expprint.c (op_name): Update.
+	* expression.h (enum exp_opcode): Update.
+	* std-operator.def: Add more opcodes.
+	* ada-operator.def, fortran-operator.def: Remove, moving contents
+	into std-operator.def.
+
+2020-12-09  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.c (get_discrete_low_bound, get_discrete_high_bound):
+	Return {} instead of false.
+	(get_discrete_bounds): Compute high bound only if low bound is
+	valid.
+
+2020-12-09  Simon Marchi  <simon.marchi@efficios.com>
+
+	PR 26875, PR 26901
+	* gdbtypes.c (get_discrete_low_bound): Make non-static.
+	(get_discrete_high_bound): Make non-static.
+	* gdbtypes.h (get_discrete_low_bound): New declaration.
+	(get_discrete_high_bound): New declaration.
+	* valarith.c (value_subscript): Only fetch high bound if
+	necessary.
+
+2020-12-09  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (get_discrete_bounds): Implement with
+	get_discrete_low_bound and get_discrete_high_bound.
+	(get_discrete_low_bound): New.
+	(get_discrete_high_bound): New.
+
+2020-12-09  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (get_discrete_bounds): Return bool, adjust all
+	callers.
+	* gdbtypes.c (get_discrete_bounds): Return bool.
+
+2020-12-09  Simon Marchi  <simon.marchi@efficios.com>
+
+	* ada-lang.c (ada_value_slice_from_ptr): Adjust.
+	(ada_value_slice): Adjust.
+	(pos_atr): Adjust.
+	* gdbtypes.c (get_discrete_bounds): Adjust.
+	(discrete_position): Return optional.
+	* gdbtypes.h (discrete_position): Return optional.
+
+2020-12-07  Tom Tromey  <tromey@adacore.com>
+
+	* maint.c (_initialize_maint_cmds): Use expression command
+	completer for "maint print type".
+
+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* completer.c (complete_explicit_location): Also add keywords
+	that start with '-' to the completion list.
+
+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* linespec.c (linespec_lexer_lex_keyword): The "-force-condition"
+	keyword may be followed by any keyword.
+	* breakpoint.c (find_condition_and_thread): Advance 'tok' by
+	'toklen' in the case for "-force-condition".
+
+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* main.c (catch_command_errors): Add a flag parameter; invoke
+	`bpstat_do_actions` if the flag is set.
+	(execute_cmdargs): Update a call to `catch_command_errors`.
+
+2020-12-07  Tom de Vries  <tdevries@suse.de>
+
+	* ada-lang.c (replace_operator_with_call): Handle shrink resize.
+
+2020-12-06  Tom Tromey  <tom@tromey.com>
+
+	PR ada/26999
+	* ada-lang.c (replace_operator_with_call): Rewrite.
+
+2020-12-06  Giancarlo Frix  <gfrix@rocketsoftware.com>  (tiny change)
+
+	PR breakpoints/27009
+	* s390-tdep.h (op_bc): Correct BC opcode value.
+
+2020-12-06  Joel Brobecker  <brobecker@adacore.com>
+
+	* gmp-utils.h (gdb_mpz::safe_export): New private method.
+	(gdb_mpz::as_integer): Reimplement using gdb_mpz::safe_export.
+	* gmp-utils.c (gdb_mpz::write): Rewrite using gdb_mpz::safe_export.
+	(gdb_mpz::safe_export): New method.
+	* unittests/gmp-utils-selftests .c (gdb_mpz_as_integer):
+	Update function description.
+	(check_as_integer_raises_out_of_range_error): New function.
+	(gdb_mpz_as_integer_out_of_range): New function.
+	(_initialize_gmp_utils_selftests): Register
+	gdb_mpz_as_integer_out_of_range as a selftest.
+
+2020-12-05  Joel Brobecker  <brobecker@adacore.com>
+
+	* gmp-utils.c (gdb_mpz::read): Use HOST_CHAR_BIT instead of
+	TARGET_CHAR_BIT.
+	(gdb_mpz::write): Likewise.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* amd64-linux-tdep.c (amd64_linux_init_abi): Pass 2 as the
+	number of displaced step buffers.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* displaced-stepping.h (struct displaced_step_buffer): Rename
+	to...
+	(struct displaced_step_buffers): ... this.
+	<m_addr, m_current_thread, m_copy_insn_closure>: Remove.
+	<struct displaced_step_buffer>: New inner class.
+	<m_buffers>: New.
+	* displaced-stepping.c (displaced_step_buffer::prepare): Rename
+	to...
+	(displaced_step_buffers::prepare): ... this, adjust for multiple
+	buffers.
+	(displaced_step_buffer::finish):  Rename to...
+	(displaced_step_buffers::finish): ... this, adjust for multiple
+	buffers.
+	(displaced_step_buffer::copy_insn_closure_by_addr): Rename to...
+	(displaced_step_buffers::copy_insn_closure_by_addr): ... this,
+	adjust for multiple buffers.
+	(displaced_step_buffer::restore_in_ptid): Rename to...
+	(displaced_step_buffers::restore_in_ptid): ... this, adjust for
+	multiple buffers.
+	* linux-tdep.h (linux_init_abi): Change supports_displaced_step
+	for num_disp_step_buffers.
+	* linux-tdep.c (struct linux_gdbarch_data)
+	<num_disp_step_buffers>: New field.
+	(struct linux_info) <disp_step_buf>: Rename to...
+	<disp_step_bufs>: ... this, change type to
+	displaced_step_buffers.
+	(linux_displaced_step_prepare): Use
+	linux_gdbarch_data::num_disp_step_buffers to create that number
+	of buffers.
+	(linux_displaced_step_finish): Adjust.
+	(linux_displaced_step_copy_insn_closure_by_addr): Adjust.
+	(linux_displaced_step_restore_all_in_ptid): Adjust.
+	(linux_init_abi): Change supports_displaced_step parameter for
+	num_disp_step_buffers, save it in linux_gdbarch_data.
+	* aarch64-linux-tdep.c (aarch64_linux_init_abi): Adjust.
+	* alpha-linux-tdep.c (alpha_linux_init_abi): Adjust.
+	* amd64-linux-tdep.c (amd64_linux_init_abi_common): Change
+	supports_displaced_step parameter for num_disp_step_buffers.
+	(amd64_linux_init_abi): Adjust.
+	(amd64_x32_linux_init_abi): Adjust.
+	* arc-linux-tdep.c (arc_linux_init_osabi): Adjust.
+	* arm-linux-tdep.c (arm_linux_init_abi): Adjust.
+	* bfin-linux-tdep.c (bfin_linux_init_abi): Adjust.
+	* cris-linux-tdep.c (cris_linux_init_abi): Adjust.
+	* csky-linux-tdep.c (csky_linux_init_abi): Adjust.
+	* frv-linux-tdep.c (frv_linux_init_abi): Adjust.
+	* hppa-linux-tdep.c (hppa_linux_init_abi): Adjust.
+	* i386-linux-tdep.c (i386_linux_init_abi): Adjust.
+	* ia64-linux-tdep.c (ia64_linux_init_abi): Adjust.
+	* m32r-linux-tdep.c (m32r_linux_init_abi): Adjust.
+	* m68k-linux-tdep.c (m68k_linux_init_abi):
+	* microblaze-linux-tdep.c (microblaze_linux_init_abi):
+	* mips-linux-tdep.c (mips_linux_init_abi): Adjust.
+	* mn10300-linux-tdep.c (am33_linux_init_osabi): Adjust.
+	* nios2-linux-tdep.c (nios2_linux_init_abi): Adjust.
+	* or1k-linux-tdep.c (or1k_linux_init_abi): Adjust.
+	* ppc-linux-tdep.c (ppc_linux_init_abi): Adjust.
+	* riscv-linux-tdep.c (riscv_linux_init_abi): Adjust.
+	* rs6000-tdep.c (struct ppc_inferior_data) <disp_step_buf>:
+	Change type to displaced_step_buffers.
+	* s390-linux-tdep.c (s390_linux_init_abi_any): Adjust.
+	* sh-linux-tdep.c (sh_linux_init_abi): Adjust.
+	* sparc-linux-tdep.c (sparc32_linux_init_abi): Adjust.
+	* sparc64-linux-tdep.c (sparc64_linux_init_abi): Adjust.
+	* tic6x-linux-tdep.c (tic6x_uclinux_init_abi): Adjust.
+	* tilegx-linux-tdep.c (tilegx_linux_init_abi): Adjust.
+	* xtensa-linux-tdep.c (xtensa_linux_init_abi): Adjust.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* linux-tdep.c (init_linux_gdbarch_data): Change parameter to
+	obkstack.
+	(_initialize_linux_tdep): Register pre-init gdb data instead of
+	post-init.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* displaced-stepping.h (struct
+	displaced_step_copy_insn_closure): Adjust comments.
+	(struct displaced_step_inferior_state) <step_thread,
+	step_gdbarch, step_closure, step_original, step_copy,
+	step_saved_copy>: Remove fields.
+	(struct displaced_step_thread_state): New.
+	(struct displaced_step_buffer): New.
+	* displaced-stepping.c (displaced_step_buffer::prepare): New.
+	(write_memory_ptid): Move from infrun.c.
+	(displaced_step_instruction_executed_successfully): New,
+	factored out of displaced_step_finish.
+	(displaced_step_buffer::finish): New.
+	(displaced_step_buffer::copy_insn_closure_by_addr): New.
+	(displaced_step_buffer::restore_in_ptid): New.
+	* gdbarch.sh (displaced_step_location): Remove.
+	(displaced_step_prepare, displaced_step_finish,
+	displaced_step_copy_insn_closure_by_addr,
+	displaced_step_restore_all_in_ptid): New.
+	* gdbarch.c: Re-generate.
+	* gdbarch.h: Re-generate.
+	* gdbthread.h (class thread_info) <displaced_step_state>: New
+	field.
+	(thread_step_over_chain_remove): New declaration.
+	(thread_step_over_chain_next): New declaration.
+	(thread_step_over_chain_length): New declaration.
+	* thread.c (thread_step_over_chain_remove): Make non-static.
+	(thread_step_over_chain_next): New.
+	(global_thread_step_over_chain_next): Use
+	thread_step_over_chain_next.
+	(thread_step_over_chain_length): New.
+	(global_thread_step_over_chain_enqueue): Add debug print.
+	(global_thread_step_over_chain_remove): Add debug print.
+	* infrun.h (get_displaced_step_copy_insn_closure_by_addr):
+	Remove.
+	* infrun.c (get_displaced_stepping_state): New.
+	(displaced_step_in_progress_any_inferior): Remove.
+	(displaced_step_in_progress_thread): Adjust.
+	(displaced_step_in_progress): Adjust.
+	(displaced_step_in_progress_any_thread): New.
+	(get_displaced_step_copy_insn_closure_by_addr): Remove.
+	(gdbarch_supports_displaced_stepping): Use
+	gdbarch_displaced_step_prepare_p.
+	(displaced_step_reset): Change parameter from inferior to
+	thread.
+	(displaced_step_prepare_throw): Implement using
+	gdbarch_displaced_step_prepare.
+	(write_memory_ptid): Move to displaced-step.c.
+	(displaced_step_restore): Remove.
+	(displaced_step_finish): Implement using
+	gdbarch_displaced_step_finish.
+	(start_step_over): Allow starting more than one displaced step.
+	(prepare_for_detach): Handle possibly multiple threads doing
+	displaced steps.
+	(handle_inferior_event): Handle possibility that fork event
+	happens while another thread displaced steps.
+	* linux-tdep.h (linux_displaced_step_prepare): New.
+	(linux_displaced_step_finish): New.
+	(linux_displaced_step_copy_insn_closure_by_addr): New.
+	(linux_displaced_step_restore_all_in_ptid): New.
+	(linux_init_abi): Add supports_displaced_step parameter.
+	* linux-tdep.c (struct linux_info) <disp_step_buf>: New field.
+	(linux_displaced_step_prepare): New.
+	(linux_displaced_step_finish): New.
+	(linux_displaced_step_copy_insn_closure_by_addr): New.
+	(linux_displaced_step_restore_all_in_ptid): New.
+	(linux_init_abi): Add supports_displaced_step parameter,
+	register displaced step methods if true.
+	(_initialize_linux_tdep): Register inferior_execd observer.
+	* amd64-linux-tdep.c (amd64_linux_init_abi_common): Add
+	supports_displaced_step parameter, adjust call to
+	linux_init_abi.  Remove call to
+	set_gdbarch_displaced_step_location.
+	(amd64_linux_init_abi): Adjust call to
+	amd64_linux_init_abi_common.
+	(amd64_x32_linux_init_abi): Likewise.
+	* aarch64-linux-tdep.c (aarch64_linux_init_abi): Adjust call to
+	linux_init_abi.  Remove call to
+	set_gdbarch_displaced_step_location.
+	* arm-linux-tdep.c (arm_linux_init_abi): Likewise.
+	* i386-linux-tdep.c (i386_linux_init_abi): Likewise.
+	* alpha-linux-tdep.c (alpha_linux_init_abi): Adjust call to
+	linux_init_abi.
+	* arc-linux-tdep.c (arc_linux_init_osabi): Likewise.
+	* bfin-linux-tdep.c (bfin_linux_init_abi): Likewise.
+	* cris-linux-tdep.c (cris_linux_init_abi): Likewise.
+	* csky-linux-tdep.c (csky_linux_init_abi): Likewise.
+	* frv-linux-tdep.c (frv_linux_init_abi): Likewise.
+	* hppa-linux-tdep.c (hppa_linux_init_abi): Likewise.
+	* ia64-linux-tdep.c (ia64_linux_init_abi): Likewise.
+	* m32r-linux-tdep.c (m32r_linux_init_abi): Likewise.
+	* m68k-linux-tdep.c (m68k_linux_init_abi): Likewise.
+	* microblaze-linux-tdep.c (microblaze_linux_init_abi): Likewise.
+	* mips-linux-tdep.c (mips_linux_init_abi): Likewise.
+	* mn10300-linux-tdep.c (am33_linux_init_osabi): Likewise.
+	* nios2-linux-tdep.c (nios2_linux_init_abi): Likewise.
+	* or1k-linux-tdep.c (or1k_linux_init_abi): Likewise.
+	* riscv-linux-tdep.c (riscv_linux_init_abi): Likewise.
+	* s390-linux-tdep.c (s390_linux_init_abi_any): Likewise.
+	* sh-linux-tdep.c (sh_linux_init_abi): Likewise.
+	* sparc-linux-tdep.c (sparc32_linux_init_abi): Likewise.
+	* sparc64-linux-tdep.c (sparc64_linux_init_abi): Likewise.
+	* tic6x-linux-tdep.c (tic6x_uclinux_init_abi): Likewise.
+	* tilegx-linux-tdep.c (tilegx_linux_init_abi): Likewise.
+	* xtensa-linux-tdep.c (xtensa_linux_init_abi): Likewise.
+	* ppc-linux-tdep.c (ppc_linux_init_abi): Adjust call to
+	linux_init_abi.  Remove call to
+	set_gdbarch_displaced_step_location.
+	* arm-tdep.c (arm_pc_is_thumb): Call
+	gdbarch_displaced_step_copy_insn_closure_by_addr instead of
+	get_displaced_step_copy_insn_closure_by_addr.
+	* rs6000-aix-tdep.c (rs6000_aix_init_osabi): Adjust calls to
+	clear gdbarch methods.
+	* rs6000-tdep.c (struct ppc_inferior_data): New structure.
+	(get_ppc_per_inferior): New function.
+	(ppc_displaced_step_prepare): New function.
+	(ppc_displaced_step_finish): New function.
+	(ppc_displaced_step_restore_all_in_ptid): New function.
+	(rs6000_gdbarch_init): Register new gdbarch methods.
+	* s390-tdep.c (s390_gdbarch_init): Don't call
+	set_gdbarch_displaced_step_location, set new gdbarch methods.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* Makefile.in (COMMON_SFILES): Add displaced-stepping.c.
+	* aarch64-tdep.h: Include displaced-stepping.h.
+	* displaced-stepping.h (struct displaced_step_copy_insn_closure):
+	Move here.
+	(displaced_step_copy_insn_closure_up): Move here.
+	(struct buf_displaced_step_copy_insn_closure): Move here.
+	(struct displaced_step_inferior_state): Move here.
+	(debug_displaced): Move here.
+	(displaced_debug_printf_1): Move here.
+	(displaced_debug_printf): Move here.
+	* displaced-stepping.c: New file.
+	* gdbarch.sh: Include displaced-stepping.h in gdbarch.h.
+	* gdbarch.h: Re-generate.
+	* inferior.h: Include displaced-stepping.h.
+	* infrun.h (debug_displaced): Move to displaced-stepping.h.
+	(displaced_debug_printf_1): Likewise.
+	(displaced_debug_printf): Likewise.
+	(struct displaced_step_copy_insn_closure): Likewise.
+	(displaced_step_copy_insn_closure_up): Likewise.
+	(struct buf_displaced_step_copy_insn_closure): Likewise.
+	(struct displaced_step_inferior_state): Likewise.
+	* infrun.c (show_debug_displaced): Move to displaced-stepping.c.
+	(displaced_debug_printf_1): Likewise.
+	(displaced_step_copy_insn_closure::~displaced_step_copy_insn_closure):
+	Likewise.
+	(_initialize_infrun): Don't register "set/show debug displaced".
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* linux-tdep.c (get_linux_inferior_data): Add inferior
+	parameter.
+	(linux_vsyscall_range): Pass current inferior.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.c (displaced_step_prepare_throw): Change return type to
+	displaced_step_prepare_status.
+	(displaced_step_prepare): Likewise.
+	(displaced_step_finish): Change return type to
+	displaced_step_finish_status.
+	(resume_1): Adjust.
+	(stop_all_threads): Adjust.
+	* displaced-stepping.h: New file.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.c (displaced_step_fixup): Rename to...
+	(displaced_step_finish): ... this, update all callers.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.h (get_displaced_step_closure_by_addr): Rename to...
+	(get_displaced_step_copy_insn_closure_by_addr): ... this.
+	Update all users.
+	(displaced_step_closure): Rename to...
+	(displaced_step_copy_insn_closure): ... this.  Update all users.
+	(displaced_step_closure_up): Rename to...
+	(displaced_step_copy_insn_closure_up). ... this.  Update all
+	users.
+	(buf_displaced_step_closure): Rename to...
+	(buf_displaced_step_copy_insn_closure): ... this.  Update all
+	users.
+	* infrun.c (get_displaced_step_closure_by_addr): Rename to...
+	(get_displaced_step_copy_insn_closure_by_addr): ... this.
+	Update all users.
+	* aarch64-tdep.c (aarch64_displaced_step_closure): Rename to...
+	(aarch64_displaced_step_copy_insn_closure): ... this.  Update
+	all users.
+	* amd64-tdep.c (amd64_displaced_step_closure): Rename to...
+	(amd64_displaced_step_copy_insn_closure): ... this.  Update all
+	users.
+	* arm-tdep.h (arm_displaced_step_closure): Rename to...
+	(arm_displaced_step_copy_insn_closure): ... this.  Update all
+	users.
+	* i386-tdep.h (i386_displaced_step_closure): Rename to...
+	(i386_displaced_step_copy_insn_closure): ... this.  Update all
+	users.
+	* rs6000-tdep.c (ppc_displaced_step_closure): Rename to...
+	(ppc_displaced_step_copy_insn_closure): ... this.  Update all
+	users.
+	* s390-tdep.c (s390_displaced_step_closure): Rename to...
+	(s390_displaced_step_copy_insn_closure): ... this.  Update all
+	users.
+	* gdbarch.h: Re-generate.
+	* gdbarch.c: Re-generate.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbthread.h (thread_step_over_chain_enqueue): Rename to...
+	(global_thread_step_over_chain_enqueue): ... this.  Update all
+	users.
+	(thread_step_over_chain_remove): Rename to...
+	(global_thread_step_over_chain_remove): ... this.  Update all
+	users.
+	(thread_step_over_chain_next): Rename to...
+	(global_thread_step_over_chain_next): ... this.  Update all
+	users.
+	* infrun.h (step_over_queue_head): Rename to...
+	(global_thread_step_over_chain_head): ... this.  Update all
+	users.
+	* infrun.c (step_over_queue_head): Rename to...
+	(global_thread_step_over_chain_head): ... this.  Update all
+	users.
+	* thread.c (step_over_chain_remove): Rename to...
+	(thread_step_over_chain_remove): ... this.  Update all users.
+	(thread_step_over_chain_next): Rename to...
+	(global_thread_step_over_chain_next): ... this.  Update all
+	users.
+	(thread_step_over_chain_enqueue): Rename to...
+	(global_thread_step_over_chain_enqueue): ... this.  Update all
+	users.
+	(thread_step_over_chain_remove): Rename to...
+	(global_thread_step_over_chain_remove): ... this.  Update all
+	users.
+
+2020-12-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infrun.c (get_displaced_stepping_state): Remove, change
+	callers to access the field directly.
+
+2020-12-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infrun.c (handle_inferior_event): Restore displaced step
+	buffer bytes in child process when handling fork, even if fork
+	happened in another thread than the displaced-stepping one.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.c (infrun_inferior_execd): New function.
+	(_initialize_infrun): Attach inferior_execd observer.
+
+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* observable.h (inferior_execd): Declare new observable.
+	* observable.c (inferior_execd): Declare new observable.
+	* infrun.c (follow_exec): Notify inferior_execd observer.
+	* jit.c (jit_inferior_created_hook): Make static.
+	(_initialize_jit): Register inferior_execd observer.
+	* jit.h (jit_inferior_created_hook): Remove declaration.
+	* solib.c (_initialize_solib): Register inferior_execd observer.
+
+2020-12-04  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/27003
+	* completer.c (completion_tracker::build_completion_result): Don't
+	access match_list[0][-1].
+
+2020-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* linespec.c (struct linespec_token): Rename; remove typedef.
+	* guile/scm-block.c (struct block_smob): Remove typedef.
+	(struct block_syms_progress_smob): Likewise.
+	* guile/scm-symbol.c (struct symbol_smob): Remove typedef.
+	* guile/scm-symtab.c (symtab_smob): Remove typedef.
+	(struct sal_smob): Remove typedef.
+	* guile/scm-param.c (struct param_smob): Remove typedef.
+	* guile/scm-progspace.c (struct pspace_smob): Rename.
+	* guile/scm-objfile.c (struct objfile_smob): Rename.
+	* guile/scm-iterator.c (struct iterator_smob): Rename.
+	* guile/scm-frame.c (struct frame_smob): Rename.
+	* guile/scm-arch.c (struct arch_smob): Rename.
+	* guile/scm-type.c (struct field_smob): Remove typedef.
+	(struct type_smob): Rename.
+	* guile/scm-cmd.c (struct command_smob): Remove typedef.
+	* guile/scm-ports.c (struct ioscm_memory_port): Remove typedef.
+	* guile/scm-value.c (struct value_smob): Remove typedef.
+	* guile/scm-lazy-string.c (lazy_string_smob): Remove typedef.
+	* guile/guile-internal.h (struct scheme_variable)
+	(struct scheme_function, struct scheme_integer_constant)
+	(struct gdb_smob, struct chained_gdb_smob)
+	(struct eqable_gdb_smob, arch_smob, frame_smob, iterator_smob)
+	(objfile_smob, pspace_smob, type_smob): Remove typedef.
+	* guile/scm-pretty-print.c (pretty_printer_smob): Remove typedef.
+	(struct pretty_printer_worker_smob): Remove typedef.
+	* guile/scm-exception.c (struct exception_smob): Remove typedef.
+	* python/py-block.c (struct block_object): Remove typedef.
+	(block_syms_iterator_object): Update.
+	(set_block): Update.
+	(block_syms_iterator_object): Remove typedef.
+	* python/py-inferior.c (struct membuf_object): Remove typedef.
+	* python/py-symtab.c (struct symtab_object): Remove typedef.
+	(set_symtab): Update.
+	(sal_object): Remove typedef.
+	(set_sal): Update.
+	* python/py-frame.c (frame_object): Remove typedef.
+	* python/py-record-btrace.c (struct btpy_list_object): Remove
+	typedef.
+	* python/py-arch.c (struct arch_object): Remove typedef.
+	* python/py-linetable.c (struct linetable_entry_object)
+	(linetable_object, struct ltpy_iterator_object): Remove typedef.
+	* python/py-events.h (eventregistry_object): Remove typedef.
+	(struct events_object): Remove typedef.
+	* python/python-internal.h (gdbpy_breakpoint_object): Remove
+	typedef.
+	(thread_object): Remove typedef.
+	* python/py-progspace.c (pspace_object): Remove typedef.
+	* python/py-value.c (struct value_object): Remove typedef.
+	* python/py-record.h (recpy_record_object): Remove typedef.
+	(struct recpy_element_object): Remove typedef.
+	* python/py-lazy-string.c (lazy_string_object): Remove typedef.
+	* python/py-objfile.c (objfile_object): Remove typedef.
+	* python/py-cmd.c (struct cmdpy_object): Remove typedef.
+	* python/py-type.c (type_object): Remove typedef.
+	(typy_iterator_object): Update.
+	(set_type): Update.
+	(field_object): Remove typedef.
+	(typy_iterator_object): Remove typedef.
+	* python/py-registers.c (register_descriptor_iterator_object):
+	Remove typedef.
+	(struct register_descriptor_object)
+	(struct reggroup_iterator_object, struct reggroup_object): Remove
+	typedef.
+	* python/py-record.c (recpy_gap_object): Remove typedef.
+	* python/py-symbol.c (symbol_object): Remove typedef.
+	(set_symbol): Update.
+	* python/py-event.h (event_object): Remove typedef.
+	* python/py-param.c (parmpy_object): Remove typedef.
+	* python/py-instruction.c (struct py_insn_obj): Remove typedef.
+	* python/py-unwind.c (struct pending_frame_object): Remove typedef.
+	(unwind_info_object, struct cached_frame_info): Likewise.
+
+2020-12-04  Tom Tromey  <tromey@adacore.com>
+
+	* value.c (value_internal_function_name): Make return type const.
+	* value.h (value_internal_function_name): Make return type const.
+
+2020-12-04  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-tdep.c (submask, bit, bits): Remove.
+	* arch/aarch64-insn.c (extract_signed_bitfield): Remove.
+	(aarch64_decode_adr, aarch64_decode_b aarch64_decode_bcond)
+	(aarch64_decode_cb, aarch64_decode_tb)
+	(aarch64_decode_ldr_literal): Use sbits to extract a signed
+	immediate.
+	* arch/aarch64-insn.h (submask, bits, bit, sbits): New macros.
+
+2020-12-04  Tom de Vries  <tdevries@suse.de>
+
+	PR tdep/27007
+	* i386-tdep.c (i386_16_byte_align_p): Skip static fields.
+
+2020-12-03  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/26876
+	* dwarf2/frame.c (find_comp_unit, set_comp_unit): Reverse use of
+	dwarf2_frame_bfd_data and dwarf2_frame_objfile_data.
+
+2020-12-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arch/riscv.c: Include 'rv32e-xregs.c'.
+	(riscv_create_target_description): Update to handle rv32e.
+	* arch/riscv.h (struct riscv_gdbarch_features) <embedded>: New
+	member variable.
+	<operator==>: Update to account for new field.
+	<hash>: Likewise.
+	* features/Makefile (FEATURE_XMLFILES): Add riscv/rv32e-xregs.xml.
+	* features/riscv/rv32e-xregs.c: Generated.
+	* features/riscv/rv32e-xregs.xml: New file.
+	* riscv-tdep.c (riscv_debug_breakpoints): Move from later in the
+	file.
+	(riscv_debug_infcall): Likewise.
+	(riscv_debug_unwinder): Likewise.
+	(riscv_debug_gdbarch): Likewise.
+	(enum riscv_register_required_status): Delete.
+	(struct riscv_register_feature): Add constructor, delete default
+	constructor, copy, and assign constructors.
+	(struct riscv_register_feature::register_info) <required>: Delete.
+	<check>: Update comment and arguments.
+	(struct riscv_register_feature) <name>: Change to member function.
+	<prefer_first_name>: Delete.
+	<tdesc_feature>: New member function.
+	<registers>: Rename to...
+	<m_registers>: ...this.
+	<m_feature_name>: New member variable.
+	(riscv_register_feature::register_info::check): Update arguments.
+	(riscv_xreg_feature): Rewrite as class, create a single static
+	instance of the class.
+	(riscv_freg_feature): Likewise.
+	(riscv_virtual_feature): Likewise.
+	(riscv_csr_feature): Likewise.
+	(riscv_create_csr_aliases): Has become a member function inside
+	riscv_csr_feature class.
+	(riscv_abi_embedded): New function definition.
+	(riscv_register_name): Adjust to use new feature objects.
+	(struct riscv_call_info) <riscv_call_info>: Check for rv32e abi,
+	and adjust available argument registers.
+	(riscv_features_from_gdbarch_info): Check for EF_RISCV_RVE flag.
+	(riscv_check_tdesc_feature): Delete.
+	(riscv_tdesc_unknown_reg): Adjust to use new feature objects.
+	(riscv_gdbarch_init): Delete target description checking code, and
+	instead call to the new feature objects to perform the checks.
+	Reorder handling of no abi information case, allows small code
+	simplification.
+	(_initialize_riscv_tdep): Remove call, this is now done in the
+	riscv_csr_feature constructor.
+	* riscv-tdep.h (riscv_abi_embedded): Declare.
+
+2020-12-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_create_csr_aliases): Remove use of
+	DECLARE_CSR_ALIAS.
+
+2020-12-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_is_unknown_csr): New function,
+	implementation moved from riscv_register_reggroup_p.
+	(riscv_register_reggroup_p): Update group handling for unknown
+	CSRs.
+
+2020-12-01  Sergio Durigan Junior  <sergiodj@sergiodj.net>
+
+	* dwarf2/read.c (dwz_search_other_debugdirs): New function.
+	(dwarf2_get_dwz_file): Convert 'filename' to a
+	std::string.  Use dwz_search_other_debugdirs to search for DWZ
+	files in the debug-file-directories provided by the user as well.
+
+2020-12-01  Tom Tromey  <tom@tromey.com>
+
+	* parse.c (expr_builder::expr_builder): Initialize expout.
+	(expr_builder::release): Use expression::resize.
+	(expression::expression, expression::~expression)
+	(expression::resize): New methods.
+	(write_exp_elt): Use expression::resize.
+	(prefixify_expression): Update.
+	(increase_expout_size): Use expression::resize.
+	* expression.h (struct expression): Add constructor, destructor.
+	<resize>: New method.
+	(expression_up): Change type.
+
+2020-12-01  Rogerio A. Cardoso  <rcardoso@linux.ibm.com>
+	* ppc-linux-nat.c: (PPC_DEBUG_FEATURE_DATA_BP_ARCH_31): New define.
+	(region_ok_for_hw_watchpoint): Check if 2nd DAWR is avaliable before
+	set region.
+
+2020-11-30  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26905
+	* dwarf2/loc.c (dwarf2_locexpr_baton_eval): Add and handle
+	is_reference parameter.
+	(dwarf2_evaluate_property): Update dwarf2_locexpr_baton_eval call.
+
+2020-11-30  Tom Tromey  <tom@tromey.com>
+
+	* rust-lang.c (rust_op_name): Remove.
+	(exp_descriptor_rust): Update.
+	* parser-defs.h (op_name_standard): Don't declare.
+	(struct exp_descriptor) <op_name>: Remove.
+	* parse.c (exp_descriptor_standard): Update.
+	* opencl-lang.c (exp_descriptor_opencl): Update.
+	* m2-lang.c (m2_language::exp_descriptor_modula2): Update.
+	* f-lang.c (op_name_f): Remove.
+	(f_language::exp_descriptor_tab): Update.
+	* expression.h (op_name): Update.
+	* expprint.c (op_name): Rewrite.
+	(op_name_standard): Remove.
+	(dump_raw_expression, dump_subexp): Update.
+	* c-lang.c (exp_descriptor_c): Update.
+	* ax-gdb.c (gen_expr): Update.
+	* ada-lang.c (ada_op_name): Remove.
+	(ada_exp_descriptor): Update.
+
+2020-11-30  Tom Tromey  <tom@tromey.com>
+
+	* eval.c (init_array_element): Remove.
+	(evaluate_subexp_standard) <OP_ARRAY>: Remove "index_pc".
+
+2020-11-29  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR tui/26973
+	* tui/tui-layout.c (tui_apply_current_layout): Don't delete the
+	static locator win info.
+
+2020-11-28  Alex Richardson  <Alexander.Richardson@cl.cam.ac.uk>
+
+	* acincludde.m4 (GDB_AC_CHECK_BFD): Include string.h in the test
+	program.
+
+2020-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* printcmd.c (skip_over_slash_fmt): Reorder code to ensure in_fmt
+	is always initialized.
+
+2020-11-26  Rogerio Alves <rcardoso@linux.ibm.com>
+	* MAINTAINERS (Write After Approval): Add myself.
+
+2020-11-26  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* features/aarch64-fpu.c (create_feature_aarch64_fpu): Regenerate.
+	* features/aarch64-fpu.xml: Add named FPCR and FPSR register bit-fields.
+
+2020-11-25  Tom Tromey  <tom@tromey.com>
+
+	* eval.c (evaluate_subexp_standard): Remove unnecessary
+	variables.
+
+2020-11-25  Tom Tromey  <tom@tromey.com>
+
+	* d-lang.c: Include parser-defs.h.
+	* rust-lang.c: Include parser-defs.h.
+	* c-lang.h: Do not include parser-defs.h.
+
+2020-11-24  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regcache.h (struct cached_reg): Remove typedef.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* README: Fix the URL of the MPFR library.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* README: Document the --with-libgmp-prefix configure option.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* NEWS: Add entry documenting support for DWARF-based fixed
+	point types.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* NEWS: Document that building GDB now requires GMP.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* typeprint.c (print_type_scalar): Add handling of
+	TYPE_CODE_FIXED_POINT.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* valarith.c (fixed_point_binop): Replace the
+	INIT_VAL_WITH_FIXED_POINT_VAL macro by a lambda.  Update all
+	users accordingly.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdbtypes.h (struct type) <fixed_point_scaling_factor>: New method,
+	replacing fixed_point_scaling_factor.  All callers updated
+	throughout this project.
+	(fixed_point_scaling_factor): Delete declaration.
+	* gdbtypes.c (type::fixed_point_scaling_factor): Replaces
+	fixed_point_scaling_factor.  Adjust implementation accordingly.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdbtypes.h (struct type) <fixed_point_type_base_type> New method,
+	replacing the fixed_point_type_base_type function. All callers
+	updated throughout this project.
+	(fixed_point_type_base_type): Remove declaration.
+	* gdbtypes.c (type::fixed_point_type_base_type): Replaces
+	fixed_point_type_base_type.  Adjust implementation accordingly.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdbtypes.h (struct type) <fixed_point_info, set_fixed_point_info>:
+	New methods.
+	(INIT_FIXED_POINT_SPECIFIC): Adjust.
+	(TYPE_FIXED_POINT_INFO): Delete macro.
+	(allocate_fixed_point_type_info): Change return type to void.
+	* gdbtypes.c (copy_type_recursive): Replace the use of
+	TYPE_FIXED_POINT_INFO by a call to the fixed_point_info method.
+	(fixed_point_scaling_factor): Likewise.
+	(allocate_fixed_point_type_info): Change return type to void.
+	Adjust implementation accordingly.
+	* dwarf2/read.c (finish_fixed_point_type): Replace the use of
+	TYPE_FIXED_POINT_INFO by a call to the fixed_point_info method.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* gmp-utils.h (gdb_mpz::read): Change buf and len parameters
+	into one single gdb::array_view parameter.
+	(gdb_mpz::write): Likewise.
+	(gdb_mpq::read_fixed_point, gdb_mpq::write_fixed_point): Likewise.
+	* gmp-utils.c (gdb_mpz::read): Change buf and len parameters
+	into one single gdb::array_view parameter.
+	Adjust implementation accordingly.
+	(gdb_mpz::write): Likewise.
+	(gdb_mpq::read_fixed_point, gdb_mpq::write_fixed_point): Likewise.
+	* unittests/gmp-utils-selftests.c: Adapt following changes above.
+	* valarith.c, valops.c, valprint.c, value.c: Likewise.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* gmp-utils.h (gmp_string_printf): Rename from gmp_string_asprintf.
+	Change return type to std::string. Update all callers.
+	* gmp-utils.c (gmp_string_printf): Likewise.
+
+2020-11-24  Joel Brobecker  <brobecker@adacore.com>
+
+	* unittests/gmp-utils-selftests.c (write_fp_test): Use mpq_set_si
+	instead of mpq_set_ui to initialize our GMP rational.
+
+2020-11-23  Tom de Vries  <tdevries@suse.de>
+
+	* debuginfod-support.c (debuginfod_source_query)
+	(debuginfod_debuginfo_query): Only set DESTNAME if successful.
+
+2020-11-21  Tom Tromey  <tom@tromey.com>
+
+	* breakpoint.c (watchpoint_exp_is_const): Return bool.
+
+2020-11-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* unittests/gmp-utils-selftests.c (gdb_mpz_read_all_from_small):
+	Pass 2.0 to pow.
+	(gdb_mpz_write_all_from_small): Likewise.
+
+2020-11-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (finish_fixed_point_type): Use std::abs instead
+	of abs.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctfread.c (elfctf_build_psymtabs): Use ctf_dict_open, not
+	ctf_arc_open_by_name.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ctfread.c: Change uses of ctf_file_t to ctf_dict_t.
+	(ctf_fp_info::~ctf_fp_info): Call ctf_dict_close, not ctf_file_close.
+
+2020-11-20  Pedro Alves  <pedro@palves.net>
+
+	* language.c (language_arch_info::lookup_primitive_type): Use
+	gdb::function_view instead of gdb::function.
+	(template language_lookup_primitive_type): Rename to ...
+	(language_lookup_primitive_type_1): ... this, and make static.
+	(language_lookup_primitive_type(const struct language_defn *,
+	struct gdbarch *, const char *): Make non-template.
+	(language_lookup_primitive_type(const struct language_defn *,
+	struct gdbarch *, std::function<bool (struct type *)>): Make
+	non-template and use gdb::function_view.
+	* language.h (language_arch_info::lookup_primitive_type): Use
+	gdb::function_view instead of std::function.
+	(language_lookup_primitive_type): No longer template.
+	* opencl-lang.c (lookup_opencl_vector_type): 'filter' is now a
+	lambda instead of a std::function.
+
+2020-11-19  Andreas Arnez  <arnez@linux.ibm.com>
+
+	PR tdep/26916
+	* s390-tdep.c (s390_process_record): Fix recording of STOC, STOCG,
+	and STOCFH.
+
+2020-11-19  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* f-lang.c (fortran_value_subarray): Use plongest/pulongest.
+
+2020-11-19  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbarch.sh (read_core_file_mappings): Remove `other` parameter
+	in `loop_cb` parameter.
+	* gdbarch.c: Re-generate.
+	* gdbarch.h: Re-generate.
+	* arch-utils.c (default_read_core_file_mappings): Remove `other`
+	parameter.
+	* arch-utils.h (default_read_core_file_mappings): Likewise.
+	* corelow.c (core_target::build_file_mappings): Likewise.
+	* linux-tdep.c (linux_read_core_file_mappings): Likewise.
+	(linux_core_info_proc_mappings): Likewise.
+
+2020-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in (HFILES_NO_SRCDIR): Add f-array-walker.h.
+	* NEWS: Mention new options.
+	* f-array-walker.h: New file.
+	* f-lang.c: Include 'gdbcmd.h' and 'f-array-walker.h'.
+	(repack_array_slices): New static global.
+	(show_repack_array_slices): New function.
+	(fortran_array_slicing_debug): New static global.
+	(show_fortran_array_slicing_debug): New function.
+	(value_f90_subarray): Delete.
+	(skip_undetermined_arglist): Delete.
+	(class fortran_array_repacker_base_impl): New class.
+	(class fortran_lazy_array_repacker_impl): New class.
+	(class fortran_array_repacker_impl): New class.
+	(fortran_value_subarray): Complete rewrite.
+	(set_fortran_list): New static global.
+	(show_fortran_list): Likewise.
+	(_initialize_f_language): Register new commands.
+	(fortran_adjust_dynamic_array_base_address_hack): New function.
+	* f-lang.h (fortran_adjust_dynamic_array_base_address_hack):
+	Declare.
+	* f-valprint.c: Include 'f-array-walker.h'.
+	(class fortran_array_printer_impl): New class.
+	(f77_print_array_1): Delete.
+	(f77_print_array): Delete.
+	(fortran_print_array): New.
+	(f_value_print_inner): Update to call fortran_print_array.
+	* gdbtypes.c: Include 'f-lang.h'.
+	(resolve_dynamic_type_internal): Call
+	fortran_adjust_dynamic_array_base_address_hack.
+
+2020-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* breakpoint.c (struct watch_options): New struct.
+	(watch_option_defs): New static global.
+	(make_watch_options_def_group): New function.
+	(watch_maybe_just_location): Convert option parsing.
+	(watch_command_completer): New function.
+	(_initialize_breakpoint): Build help text using options mechanism.
+
+2020-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* breakpoint.c (update_watchpoint): Pass 'false' not '0'.
+	(watch_command_1): Update parameter types.  Convert locals to
+	bool.
+	(watch_command_wrapper): Change parameter type.
+	(watch_maybe_just_location): Change locals to bool.
+	(rwatch_command_wrapper): Update parameter type.
+	(awatch_command_wrapper): Update parameter type.
+	* breakpoint.h (watch_command_wrapper): Change parameter type.
+	(rwatch_command_wrapper): Update parameter type.
+	(awatch_command_wrapper): Update parameter type.
+	* eval.c (fetch_subexp_value): Change parameter type.
+	* ppc-linux-nat.c (ppc_linux_nat_target::check_condition): Pass
+	'false' not '0'.
+	* value.h (fetch_subexp_value): Change parameter type in
+	declaration.
+
+2020-11-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* printcmd.c (skip_over_slash_fmt): Make use of skip_to_space and
+	skip_spaces.
+
+2020-11-18  Keith Seitz  <keiths@redhat.com>
+
+	* linux-tdep.c (dump_note_entry_p): Return true instead of
+	checking `filename'.
+
+2020-11-18  Tom de Vries  <tdevries@suse.de>
+
+	* debuginfod-support.c (debuginfod_source_query)
+	(debuginfod_debuginfo_query): Also do early exit if
+	"(getenv (DEBUGINFOD_URLS_ENV_VAR))[0] == '\0'".
+
+2020-11-18  Tom de Vries  <tdevries@suse.de>
+
+	* gdbtypes.c (update_static_array_size): Fix -Werror=bool-compare
+	warning.
+
+2020-11-17  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.h (get_array_bounds): Return bool, adjust some
+	callers.  Move doc here.
+	* gdbtypes.c (get_array_bounds): Return bool
+
+2020-11-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arc-linux-tdep.c (arc_linux_sw_breakpoint_from_kind): Add an
+	assert.
+	* arc-tdep.c (arc_breakpoint_kind_from_pc): Likewise.
+	* disasm-selftests.c (print_one_insn_test): Fall throough from ARC
+	case to the default.
+
+2020-11-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* printcmd.c: Include 'safe-ctype.c'.
+	(skip_over_slash_fmt): New function.
+	(print_command_completer): Call skip_over_slash_fmt.
+	(display_and_x_command_completer): New function.
+	(_initialize_printcmd): Add command completion for 'x' and
+	'display'.
+
+2020-11-16  Pedro Alves  <pedro@palves.net>
+
+	* frame.c (get_prev_frame): Move get_frame_id call from here ...
+	(get_prev_frame_always_1): ... to here.
+	* inline-frame.c (inline_frame_this_id): Mention
+	get_prev_frame_always_1 in comment.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* valarith.c (fixed_point_binop): Add BINOP_EQUAL and BINOP_LESS
+	handling.
+	(value_less): Add fixed-point handling.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* eval.c (binop_promote): Add fixed-point type handling.
+	* valarith.c (fixed_point_binop): New function.
+	(scalar_binop): Add fixed-point type handling.
+	(value_neg): Add fixed-point type handling.
+	* valops.c (value_cast_to_fixed_point): New function.
+	(value_cast): Add fixed-point type handling.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-typeprint.c (ada_print_type): Add handing of fixed-point
+	range types.
+	* c-typeprint.c (c_type_print_varspec_prefix)
+	(c_type_print_varspec_suffix, c_type_print_base_1): Add
+	TYPE_CODE_FIXED_POINT handling.
+	* p-typeprint.c (pascal_type_print_varspec_prefix)
+	(pascal_type_print_varspec_suffix): Likewise.
+	* typeprint.c (print_type_fixed_point): New function.
+	* typeprint.h (print_type_fixed_point): Add declaration.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* printcmd.c (print_scalar_formatted): Add fixed-point type
+	handling when options->format is set.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-valprint.c (ada_value_print_1): Add fixed-point type handling.
+	* dwarf2/read.c (get_dwarf2_rational_constant)
+	(get_dwarf2_unsigned_rational_constant, finish_fixed_point_type)
+	(has_zero_over_zero_small_attribute): New functions.
+	read_base_type, set_die_type): Add fixed-point type handling.
+	* gdb-gdb.py.in: Add fixed-point type handling.
+	* gdbtypes.c: #include "gmp-utils.h".
+	(create_range_type, set_type_code): Add fixed-point type handling.
+	(init_fixed_point_type): New function.
+	(is_integral_type, is_scalar_type): Add fixed-point type handling.
+	(print_fixed_point_type_info): New function.
+	(recursive_dump_type, copy_type_recursive): Add fixed-point type
+	handling.
+	(fixed_point_type_storage): New typedef.
+	(fixed_point_objfile_key): New static global.
+	(allocate_fixed_point_type_info, is_fixed_point_type): New functions.
+	(fixed_point_type_base_type, fixed_point_scaling_factor): New
+	functions.
+	* gdbtypes.h: #include "gmp-utils.h".
+	(enum type_code) <TYPE_SPECIFIC_FIXED_POINT>: New enum.
+	(union type_specific) <fixed_point_info>: New field.
+	(struct fixed_point_type_info): New struct.
+	(INIT_FIXED_POINT_SPECIFIC, TYPE_FIXED_POINT_INFO): New macros.
+	(init_fixed_point_type, is_fixed_point_type)
+	(fixed_point_type_base_type, fixed_point_scaling_factor)
+	(allocate_fixed_point_type_info): Add declarations.
+	* valprint.c (generic_val_print_fixed_point): New function.
+	(generic_value_print): Add fixed-point type handling.
+	* value.c (value_as_address, unpack_long): Add fixed-point type
+	handling.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* utils.h (uinteger_pow): Add declaration.
+	* utils.c (uinteger_pow): Moved here (without changes)...
+	* valarith.c (uinteger_pow): ... from here.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* gmp-utils.h,  gmp-utils.c: New file.
+	* unittests/gmp-utils-selftests.c: New file.
+	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add
+	unittests/gmp-utils-selftests.c.
+	(COMMON_SFILES) Add gmp-utils.c.
+	(HFILES_NO_SRCDIR): Add gmp-utils.h.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* configure.ac: Generate an error if a usable GMP library
+	could not be found.
+	* configure: Regenerate.
+
+2020-11-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* configure.ac: Add support for --with-libgmp-prefix.
+	* Makefile.in (LIBGMP): New variable.
+	(CLIBS): Include $(LIBGMP).
+	* configure, config.in: Regenerate
+
+2020-11-14  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR cli/26879
+	* f-exp.y (COMPLETE): New token.
+	(exp): Two new rules for tab-completion.
+	(saw_name_at_eof): New static global.
+	(last_was_structop): Likewise.
+	(yylex): Set new variables, and return COMPLETE token at the end
+	of the input stream in some cases.
+
+2020-11-14  Tom Tromey  <tom@tromey.com>
+
+	* infrun.c (fetch_inferior_event): Use "bool" for should_stop.
+
+2020-11-14  Tom Tromey  <tom@tromey.com>
+
+	* opencl-lang.c (opencl_component_ref): Make "comps" const.
+
+2020-11-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* arm-tdep.c (class arm_instruction_reader) <read>: Fix comment.
+
+2020-11-13  Tom Tromey  <tom@tromey.com>
+
+	* c-lang.c (convert_ucn, convert_octal, convert_hex)
+	(convert_escape, parse_one_string): Constify.
+
+2020-11-13  Keith Seitz  <keiths@redhat.com>
+
+	https://bugzilla.redhat.com/show_bug.cgi?id=1553086
+	* elfread.c (elf_symfile_segments): Omit "Loadable section ...
+	outside of ELF segments" warning for debugin
+
+2020-11-13  Keith Seitz  <keiths@redhat.com>
+
+	PR gdb/23034
+	* elfread.c (elf_symfile_segments): Output a BFD file name
+	for the "Loadable section ... outside of ELF segments" warning.
+
+2020-11-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/26835
+	* arm-tdep.c (class arm_instruction_reader): New.
+	(target_arm_instruction_reader): New.
+	(arm_analyze_prologue): Add instruction reader parameter and use
+	it.  Use arm_expand_immediate.
+	(class target_arm_instruction_reader): Adjust.
+	(arm_skip_prologue): Adjust.
+	(arm_expand_immediate): New.
+	(arm_scan_prologue): Adjust.
+	(arm_analyze_prologue_test): New.
+	(class test_arm_instruction_reader): New.
+
+2020-11-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-lang.c (fortran_argument_convert): Add declaration.  Add
+	header comment, taken from f-lang.h.  Make static.
+	* f-lang.h (f77_get_dynamic_array_length): Delete declaration.
+	(fortran_argument_convert): Delete declaration.
+
+2020-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-exp.y (find_primitive_type): Make parameter const.
+	* ada-lang.c (enum ada_primitive_types): Delete.
+	(ada_language::language_arch_info): Update.
+	* c-lang.c (enum c_primitive_types): Delete.
+	(c_language_arch_info): Update.
+	(enum cplus_primitive_types): Delete.
+	(cplus_language::language_arch_info): Update.
+	* d-lang.c (enum d_primitive_types): Delete.
+	(d_language::language_arch_info): Update.
+	* f-lang.c (enum f_primitive_types): Delete.
+	(f_language::language_arch_info): Update.
+	* go-lang.c (enum go_primitive_types): Delete.
+	(go_language::language_arch_info): Update.
+	* language.c (auto_or_unknown_language::language_arch_info):
+	Update.
+	(language_gdbarch_post_init): Use obstack_new, use array indexing.
+	(language_string_char_type): Add header comment, call function in
+	language_arch_info.
+	(language_bool_type): Likewise
+	(language_arch_info::bool_type): Define.
+	(language_lookup_primitive_type_1): Delete.
+	(language_lookup_primitive_type): Rewrite as a templated function
+	to call function in language_arch_info, then instantiate twice.
+	(language_arch_info::type_and_symbol::alloc_type_symbol): Define.
+	(language_arch_info::lookup_primitive_type_and_symbol): Define.
+	(language_arch_info::lookup_primitive_type): Define twice with
+	different signatures.
+	(language_arch_info::lookup_primitive_type_as_symbol): Define.
+	(language_lookup_primitive_type_as_symbol): Rewrite to call a
+	member function in language_arch_info.
+	* language.h (language_arch_info): Complete rewrite.
+	(language_lookup_primitive_type): Make templated.
+	* m2-lang.c (enum m2_primitive_types): Delete.
+	(m2_language::language_arch_info): Update.
+	* opencl-lang.c (OCL_P_TYPE): Delete.
+	(enum opencl_primitive_types): Delete.
+	(opencl_type_data): Delete.
+	(builtin_opencl_type): Delete.
+	(lookup_opencl_vector_type): Update.
+	(opencl_language::language_arch_info): Update, lots of content
+	moved from...
+	(build_opencl_types): ...here.  This function is now deleted.
+	(_initialize_opencl_language): Delete.
+	* p-lang.c (enum pascal_primitive_types): Delete.
+	(pascal_language::language_arch_info): Update.
+	* rust-lang.c (enum rust_primitive_types): Delete.
+	(rust_language::language_arch_info): Update.
+
+2020-11-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (dw2_do_instantiate_symtab): Fix call to
+	dwarf2_queue_guard.
+
+2020-11-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (dw2_do_instantiate_symtab): Fix typo in
+	comment.
+
+2020-11-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (dwarf_read_debug_printf,
+	dwarf_read_debug_printf_v): New macros, use throughout the file.
+
+2020-11-12  Shahab Vahedi  <shahab@synopsys.com>
+
+	PR tdep/27015
+	* arc-linux-tdep.c (collect_register): Populate "eret" by
+	"pc" value from the regcache when asked for "pc" value.
+
+2020-11-12  Tom Tromey  <tom@tromey.com>
+
+	PR rust/26799:
+	* symtab.c (find_symbol_at_address): Search symtabs if no psymtabs
+	exist.
+
+2020-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* features/Makefile (XMLTOC): Add rx.xml.
+	(FEATURE_XMLFILES): Remove rx.xml.
+	(FEATURE_CFILES rule): Pass '-single-feature' flag.
+	* features/rx.c: Regenerate.
+	* features/rx.xml: Wrap in `target` tags, and reindent.
+	* target-descriptions.c (struct maint_print_c_tdesc_options): New
+	structure.
+	(maint_print_c_tdesc_opt_def): New typedef.
+	(maint_print_c_tdesc_opt_defs): New static global.
+	(make_maint_print_c_tdesc_options_def_group): New function.
+	(maint_print_c_tdesc_cmd): Make use of command line flags, only
+	print single feature C file for target descriptions containing a
+	single feature.
+	(maint_print_c_tdesc_cmd_completer): New function.
+	(_initialize_target_descriptions): Update call to register command
+	completer, and include command line flag in help text.
+
+2020-11-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_dwarf_reg_to_regnum): Decode DWARF CSR
+	numbers.
+	* riscv-tdep.h (RISCV_DWARF_FIRST_CSR, RISCV_DWARF_LAST_CSR): New
+	enum values.
+
+2020-11-10  Tom Tromey  <tom@tromey.com>
+
+	* value.h (internalvar_name): Update.
+	* value.c (internalvar_name): Make return type const.
+
+2020-11-10  Tom Tromey  <tom@tromey.com>
+
+	* ax-gdb.c (gen_struct_elt_for_reference, gen_namespace_elt)
+	(gen_maybe_namespace_elt, gen_aggregate_elt_ref, gen_expr): Use
+	const.
+
+2020-11-10  Tom Tromey  <tom@tromey.com>
+
+	* objc-lang.h (value_nsstring): Update.
+	* objc-lang.c (value_nsstring): Make "ptr" const.
+
+2020-11-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* expprint.c (print_subexp_funcall): Increment expression position
+	after reading argument count.
+	* f-lang.c (print_subexp_f): Skip over opcode before calling
+	common function.
+	(dump_subexp_body_f): Likewise.
+
+2020-11-06  Romain Geissler  <romain.geissler@amadeus.com>
+
+	PR python/26832
+	* configure: Regenerate.
+	* configure.ac: Check for python modules ctypes instead of
+	itertools.
+
+2020-11-06  Pedro Alves  <pedro@palves.net>
+
+	* macroexp.c (struct macro_buffer): Split in two classes.  Add
+	uses adjusted.
+	(struct shared_macro_buffer): New, factored out from struct
+	macro_buffer.
+	(struct growable_macro_buffer): New, factored out from struct
+	macro_buffer.
+	(set_token, get_comment, get_identifier, get_pp_number)
+	(get_character_constant, get_string_literal, get_punctuator)
+	(get_next_token_for_substitution): Constify parameters.
+	(substitute_args): Constify locals.
+
+2020-11-05  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_cutu_die_from_dwo)
+	(cutu_reader::cutu_reader, cutu_reader::cutu_reader)
+	(build_type_psymtabs_1): Update.
+	* dwarf2/abbrev.h (struct abbrev_table): Remove objfile
+	parameter.
+	* dwarf2/abbrev.c (abbrev_table::read): Remove objfile parameter.
+	Don't read section.  Add assert.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* ada-typeprint.c (ada_print_type): Handle __XVL fields.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* ada-typeprint.c (ada_print_type): Handle __T types.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (add_partial_symbol, process_die):
+	Handle DW_TAG_array_type.
+	(is_type_tag_for_partial): Add "lang" parameter.
+	(load_partial_dies, new_symbol): Handle DW_TAG_array_type.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_value_slice_from_ptr): Use bit size.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (read_array_type): Only apply stride to innermost
+	array.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* gdbtypes.c (update_static_array_size): Handle bit stride.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_value_struct_elt): Resolve dynamic type.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_is_any_packed_array_type): New function.
+	(ada_evaluate_subexp) <case TERNOP_SLICE>: Use it.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (recognize_bound_expression)
+	(quirk_ada_thick_pointer): New functions.
+	(read_array_type): Call quirk_ada_thick_pointer.
+	(set_die_type): Add "skip_data_location" parameter.
+	(quirk_ada_thick_pointer): New function.
+	(process_structure_scope): Call quirk_ada_thick_pointer.
+	* ada-lang.c (ada_is_unconstrained_packed_array_type)
+	(decode_packed_array_bitsize): Handle thick pointers without
+	parallel types.
+	(ada_is_gnat_encoded_packed_array_type): Rename from
+	ada_is_packed_array_type.
+	(ada_is_constrained_packed_array_type): Update.
+	* ada-valprint.c (ada_val_print_gnat_array): Remove.
+	(ada_value_print_1): Use ada_get_decoded_value.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (recursively_update_array_bitsize): New function.
+	(decode_constrained_packed_array_type): Call it.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (to_fixed_array_type): Error if
+	decode_constrained_packed_array_type returns NULL.
+
+2020-11-04  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/leb.h (read_3_bytes): Use bfd_get_24.
+
+2020-11-02  Tom Tromey  <tromey@adacore.com>
+
+	* Makefile.in (ALL_64_TARGET_OBS): Add amd64-ravenscar-thread.o.
+	(ALLDEPFILES): Add amd64-ravenscar-thread.c.
+	(HFILES_NO_SRCDIR): Add amd64-ravenscar-thread.h.
+	* amd64-ravenscar-thread.c: New file.
+	* amd64-ravenscar-thread.h: New file.
+	* amd64-tdep.c (amd64_init_abi): Register ravenscar ops.
+	* configure.tgt (amd64_tobjs): Add ravenscar objects.
+
+2020-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* main.c (execute_cmdargs): New function.
+	(captured_main_1): Make use of execute_cmdargs.
+
+2020-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention changes to config file search path.
+	* main.c
+
+2020-11-02  Tom Tromey  <tromey@adacore.com>
+
+	* python/python.c: Consolidate two HAVE_PYTHON blocks.
+	(python_GdbModuleDef): Move earlier.  Now static.
+	(do_start_initialization): Consolidate some IS_PY3K blocks.
+
+2020-11-02  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aarch64-linux-tdep.c: Fix indentation.
+	* aarch64-ravenscar-thread.c: Fix indentation.
+	* aarch64-tdep.c: Fix indentation.
+	* aarch64-tdep.h: Fix indentation.
+	* ada-lang.c: Fix indentation.
+	* ada-lang.h: Fix indentation.
+	* ada-tasks.c: Fix indentation.
+	* ada-typeprint.c: Fix indentation.
+	* ada-valprint.c: Fix indentation.
+	* ada-varobj.c: Fix indentation.
+	* addrmap.c: Fix indentation.
+	* addrmap.h: Fix indentation.
+	* agent.c: Fix indentation.
+	* aix-thread.c: Fix indentation.
+	* alpha-bsd-nat.c: Fix indentation.
+	* alpha-linux-tdep.c: Fix indentation.
+	* alpha-mdebug-tdep.c: Fix indentation.
+	* alpha-nbsd-tdep.c: Fix indentation.
+	* alpha-obsd-tdep.c: Fix indentation.
+	* alpha-tdep.c: Fix indentation.
+	* amd64-bsd-nat.c: Fix indentation.
+	* amd64-darwin-tdep.c: Fix indentation.
+	* amd64-linux-nat.c: Fix indentation.
+	* amd64-linux-tdep.c: Fix indentation.
+	* amd64-nat.c: Fix indentation.
+	* amd64-obsd-tdep.c: Fix indentation.
+	* amd64-tdep.c: Fix indentation.
+	* amd64-windows-tdep.c: Fix indentation.
+	* annotate.c: Fix indentation.
+	* arc-tdep.c: Fix indentation.
+	* arch-utils.c: Fix indentation.
+	* arch/arm-get-next-pcs.c: Fix indentation.
+	* arch/arm.c: Fix indentation.
+	* arm-linux-nat.c: Fix indentation.
+	* arm-linux-tdep.c: Fix indentation.
+	* arm-nbsd-tdep.c: Fix indentation.
+	* arm-pikeos-tdep.c: Fix indentation.
+	* arm-tdep.c: Fix indentation.
+	* arm-tdep.h: Fix indentation.
+	* arm-wince-tdep.c: Fix indentation.
+	* auto-load.c: Fix indentation.
+	* auxv.c: Fix indentation.
+	* avr-tdep.c: Fix indentation.
+	* ax-gdb.c: Fix indentation.
+	* ax-general.c: Fix indentation.
+	* bfin-linux-tdep.c: Fix indentation.
+	* block.c: Fix indentation.
+	* block.h: Fix indentation.
+	* blockframe.c: Fix indentation.
+	* bpf-tdep.c: Fix indentation.
+	* break-catch-sig.c: Fix indentation.
+	* break-catch-syscall.c: Fix indentation.
+	* break-catch-throw.c: Fix indentation.
+	* breakpoint.c: Fix indentation.
+	* breakpoint.h: Fix indentation.
+	* bsd-uthread.c: Fix indentation.
+	* btrace.c: Fix indentation.
+	* build-id.c: Fix indentation.
+	* buildsym-legacy.h: Fix indentation.
+	* buildsym.c: Fix indentation.
+	* c-typeprint.c: Fix indentation.
+	* c-valprint.c: Fix indentation.
+	* c-varobj.c: Fix indentation.
+	* charset.c: Fix indentation.
+	* cli/cli-cmds.c: Fix indentation.
+	* cli/cli-decode.c: Fix indentation.
+	* cli/cli-decode.h: Fix indentation.
+	* cli/cli-script.c: Fix indentation.
+	* cli/cli-setshow.c: Fix indentation.
+	* coff-pe-read.c: Fix indentation.
+	* coffread.c: Fix indentation.
+	* compile/compile-cplus-types.c: Fix indentation.
+	* compile/compile-object-load.c: Fix indentation.
+	* compile/compile-object-run.c: Fix indentation.
+	* completer.c: Fix indentation.
+	* corefile.c: Fix indentation.
+	* corelow.c: Fix indentation.
+	* cp-abi.h: Fix indentation.
+	* cp-namespace.c: Fix indentation.
+	* cp-support.c: Fix indentation.
+	* cp-valprint.c: Fix indentation.
+	* cris-linux-tdep.c: Fix indentation.
+	* cris-tdep.c: Fix indentation.
+	* darwin-nat-info.c: Fix indentation.
+	* darwin-nat.c: Fix indentation.
+	* darwin-nat.h: Fix indentation.
+	* dbxread.c: Fix indentation.
+	* dcache.c: Fix indentation.
+	* disasm.c: Fix indentation.
+	* dtrace-probe.c: Fix indentation.
+	* dwarf2/abbrev.c: Fix indentation.
+	* dwarf2/attribute.c: Fix indentation.
+	* dwarf2/expr.c: Fix indentation.
+	* dwarf2/frame.c: Fix indentation.
+	* dwarf2/index-cache.c: Fix indentation.
+	* dwarf2/index-write.c: Fix indentation.
+	* dwarf2/line-header.c: Fix indentation.
+	* dwarf2/loc.c: Fix indentation.
+	* dwarf2/macro.c: Fix indentation.
+	* dwarf2/read.c: Fix indentation.
+	* dwarf2/read.h: Fix indentation.
+	* elfread.c: Fix indentation.
+	* eval.c: Fix indentation.
+	* event-top.c: Fix indentation.
+	* exec.c: Fix indentation.
+	* exec.h: Fix indentation.
+	* expprint.c: Fix indentation.
+	* f-lang.c: Fix indentation.
+	* f-typeprint.c: Fix indentation.
+	* f-valprint.c: Fix indentation.
+	* fbsd-nat.c: Fix indentation.
+	* fbsd-tdep.c: Fix indentation.
+	* findvar.c: Fix indentation.
+	* fork-child.c: Fix indentation.
+	* frame-unwind.c: Fix indentation.
+	* frame-unwind.h: Fix indentation.
+	* frame.c: Fix indentation.
+	* frv-linux-tdep.c: Fix indentation.
+	* frv-tdep.c: Fix indentation.
+	* frv-tdep.h: Fix indentation.
+	* ft32-tdep.c: Fix indentation.
+	* gcore.c: Fix indentation.
+	* gdb_bfd.c: Fix indentation.
+	* gdbarch.sh: Fix indentation.
+	* gdbarch.c: Re-generate
+	* gdbarch.h: Re-generate.
+	* gdbcore.h: Fix indentation.
+	* gdbthread.h: Fix indentation.
+	* gdbtypes.c: Fix indentation.
+	* gdbtypes.h: Fix indentation.
+	* glibc-tdep.c: Fix indentation.
+	* gnu-nat.c: Fix indentation.
+	* gnu-nat.h: Fix indentation.
+	* gnu-v2-abi.c: Fix indentation.
+	* gnu-v3-abi.c: Fix indentation.
+	* go32-nat.c: Fix indentation.
+	* guile/guile-internal.h: Fix indentation.
+	* guile/scm-cmd.c: Fix indentation.
+	* guile/scm-frame.c: Fix indentation.
+	* guile/scm-iterator.c: Fix indentation.
+	* guile/scm-math.c: Fix indentation.
+	* guile/scm-ports.c: Fix indentation.
+	* guile/scm-pretty-print.c: Fix indentation.
+	* guile/scm-value.c: Fix indentation.
+	* h8300-tdep.c: Fix indentation.
+	* hppa-linux-nat.c: Fix indentation.
+	* hppa-linux-tdep.c: Fix indentation.
+	* hppa-nbsd-nat.c: Fix indentation.
+	* hppa-nbsd-tdep.c: Fix indentation.
+	* hppa-obsd-nat.c: Fix indentation.
+	* hppa-tdep.c: Fix indentation.
+	* hppa-tdep.h: Fix indentation.
+	* i386-bsd-nat.c: Fix indentation.
+	* i386-darwin-nat.c: Fix indentation.
+	* i386-darwin-tdep.c: Fix indentation.
+	* i386-dicos-tdep.c: Fix indentation.
+	* i386-gnu-nat.c: Fix indentation.
+	* i386-linux-nat.c: Fix indentation.
+	* i386-linux-tdep.c: Fix indentation.
+	* i386-nto-tdep.c: Fix indentation.
+	* i386-obsd-tdep.c: Fix indentation.
+	* i386-sol2-nat.c: Fix indentation.
+	* i386-tdep.c: Fix indentation.
+	* i386-tdep.h: Fix indentation.
+	* i386-windows-tdep.c: Fix indentation.
+	* i387-tdep.c: Fix indentation.
+	* i387-tdep.h: Fix indentation.
+	* ia64-libunwind-tdep.c: Fix indentation.
+	* ia64-libunwind-tdep.h: Fix indentation.
+	* ia64-linux-nat.c: Fix indentation.
+	* ia64-linux-tdep.c: Fix indentation.
+	* ia64-tdep.c: Fix indentation.
+	* ia64-tdep.h: Fix indentation.
+	* ia64-vms-tdep.c: Fix indentation.
+	* infcall.c: Fix indentation.
+	* infcmd.c: Fix indentation.
+	* inferior.c: Fix indentation.
+	* infrun.c: Fix indentation.
+	* iq2000-tdep.c: Fix indentation.
+	* language.c: Fix indentation.
+	* linespec.c: Fix indentation.
+	* linux-fork.c: Fix indentation.
+	* linux-nat.c: Fix indentation.
+	* linux-tdep.c: Fix indentation.
+	* linux-thread-db.c: Fix indentation.
+	* lm32-tdep.c: Fix indentation.
+	* m2-lang.c: Fix indentation.
+	* m2-typeprint.c: Fix indentation.
+	* m2-valprint.c: Fix indentation.
+	* m32c-tdep.c: Fix indentation.
+	* m32r-linux-tdep.c: Fix indentation.
+	* m32r-tdep.c: Fix indentation.
+	* m68hc11-tdep.c: Fix indentation.
+	* m68k-bsd-nat.c: Fix indentation.
+	* m68k-linux-nat.c: Fix indentation.
+	* m68k-linux-tdep.c: Fix indentation.
+	* m68k-tdep.c: Fix indentation.
+	* machoread.c: Fix indentation.
+	* macrocmd.c: Fix indentation.
+	* macroexp.c: Fix indentation.
+	* macroscope.c: Fix indentation.
+	* macrotab.c: Fix indentation.
+	* macrotab.h: Fix indentation.
+	* main.c: Fix indentation.
+	* mdebugread.c: Fix indentation.
+	* mep-tdep.c: Fix indentation.
+	* mi/mi-cmd-catch.c: Fix indentation.
+	* mi/mi-cmd-disas.c: Fix indentation.
+	* mi/mi-cmd-env.c: Fix indentation.
+	* mi/mi-cmd-stack.c: Fix indentation.
+	* mi/mi-cmd-var.c: Fix indentation.
+	* mi/mi-cmds.c: Fix indentation.
+	* mi/mi-main.c: Fix indentation.
+	* mi/mi-parse.c: Fix indentation.
+	* microblaze-tdep.c: Fix indentation.
+	* minidebug.c: Fix indentation.
+	* minsyms.c: Fix indentation.
+	* mips-linux-nat.c: Fix indentation.
+	* mips-linux-tdep.c: Fix indentation.
+	* mips-nbsd-tdep.c: Fix indentation.
+	* mips-tdep.c: Fix indentation.
+	* mn10300-linux-tdep.c: Fix indentation.
+	* mn10300-tdep.c: Fix indentation.
+	* moxie-tdep.c: Fix indentation.
+	* msp430-tdep.c: Fix indentation.
+	* namespace.h: Fix indentation.
+	* nat/fork-inferior.c: Fix indentation.
+	* nat/gdb_ptrace.h: Fix indentation.
+	* nat/linux-namespaces.c: Fix indentation.
+	* nat/linux-osdata.c: Fix indentation.
+	* nat/netbsd-nat.c: Fix indentation.
+	* nat/x86-dregs.c: Fix indentation.
+	* nbsd-nat.c: Fix indentation.
+	* nbsd-tdep.c: Fix indentation.
+	* nios2-linux-tdep.c: Fix indentation.
+	* nios2-tdep.c: Fix indentation.
+	* nto-procfs.c: Fix indentation.
+	* nto-tdep.c: Fix indentation.
+	* objfiles.c: Fix indentation.
+	* objfiles.h: Fix indentation.
+	* opencl-lang.c: Fix indentation.
+	* or1k-tdep.c: Fix indentation.
+	* osabi.c: Fix indentation.
+	* osabi.h: Fix indentation.
+	* osdata.c: Fix indentation.
+	* p-lang.c: Fix indentation.
+	* p-typeprint.c: Fix indentation.
+	* p-valprint.c: Fix indentation.
+	* parse.c: Fix indentation.
+	* ppc-linux-nat.c: Fix indentation.
+	* ppc-linux-tdep.c: Fix indentation.
+	* ppc-nbsd-nat.c: Fix indentation.
+	* ppc-nbsd-tdep.c: Fix indentation.
+	* ppc-obsd-nat.c: Fix indentation.
+	* ppc-ravenscar-thread.c: Fix indentation.
+	* ppc-sysv-tdep.c: Fix indentation.
+	* ppc64-tdep.c: Fix indentation.
+	* printcmd.c: Fix indentation.
+	* proc-api.c: Fix indentation.
+	* producer.c: Fix indentation.
+	* producer.h: Fix indentation.
+	* prologue-value.c: Fix indentation.
+	* prologue-value.h: Fix indentation.
+	* psymtab.c: Fix indentation.
+	* python/py-arch.c: Fix indentation.
+	* python/py-bpevent.c: Fix indentation.
+	* python/py-event.c: Fix indentation.
+	* python/py-event.h: Fix indentation.
+	* python/py-finishbreakpoint.c: Fix indentation.
+	* python/py-frame.c: Fix indentation.
+	* python/py-framefilter.c: Fix indentation.
+	* python/py-inferior.c: Fix indentation.
+	* python/py-infthread.c: Fix indentation.
+	* python/py-objfile.c: Fix indentation.
+	* python/py-prettyprint.c: Fix indentation.
+	* python/py-registers.c: Fix indentation.
+	* python/py-signalevent.c: Fix indentation.
+	* python/py-stopevent.c: Fix indentation.
+	* python/py-stopevent.h: Fix indentation.
+	* python/py-threadevent.c: Fix indentation.
+	* python/py-tui.c: Fix indentation.
+	* python/py-unwind.c: Fix indentation.
+	* python/py-value.c: Fix indentation.
+	* python/py-xmethods.c: Fix indentation.
+	* python/python-internal.h: Fix indentation.
+	* python/python.c: Fix indentation.
+	* ravenscar-thread.c: Fix indentation.
+	* record-btrace.c: Fix indentation.
+	* record-full.c: Fix indentation.
+	* record.c: Fix indentation.
+	* reggroups.c: Fix indentation.
+	* regset.h: Fix indentation.
+	* remote-fileio.c: Fix indentation.
+	* remote.c: Fix indentation.
+	* reverse.c: Fix indentation.
+	* riscv-linux-tdep.c: Fix indentation.
+	* riscv-ravenscar-thread.c: Fix indentation.
+	* riscv-tdep.c: Fix indentation.
+	* rl78-tdep.c: Fix indentation.
+	* rs6000-aix-tdep.c: Fix indentation.
+	* rs6000-lynx178-tdep.c: Fix indentation.
+	* rs6000-nat.c: Fix indentation.
+	* rs6000-tdep.c: Fix indentation.
+	* rust-lang.c: Fix indentation.
+	* rx-tdep.c: Fix indentation.
+	* s12z-tdep.c: Fix indentation.
+	* s390-linux-tdep.c: Fix indentation.
+	* score-tdep.c: Fix indentation.
+	* ser-base.c: Fix indentation.
+	* ser-mingw.c: Fix indentation.
+	* ser-uds.c: Fix indentation.
+	* ser-unix.c: Fix indentation.
+	* serial.c: Fix indentation.
+	* sh-linux-tdep.c: Fix indentation.
+	* sh-nbsd-tdep.c: Fix indentation.
+	* sh-tdep.c: Fix indentation.
+	* skip.c: Fix indentation.
+	* sol-thread.c: Fix indentation.
+	* solib-aix.c: Fix indentation.
+	* solib-darwin.c: Fix indentation.
+	* solib-frv.c: Fix indentation.
+	* solib-svr4.c: Fix indentation.
+	* solib.c: Fix indentation.
+	* source.c: Fix indentation.
+	* sparc-linux-tdep.c: Fix indentation.
+	* sparc-nbsd-tdep.c: Fix indentation.
+	* sparc-obsd-tdep.c: Fix indentation.
+	* sparc-ravenscar-thread.c: Fix indentation.
+	* sparc-tdep.c: Fix indentation.
+	* sparc64-linux-tdep.c: Fix indentation.
+	* sparc64-nbsd-tdep.c: Fix indentation.
+	* sparc64-obsd-tdep.c: Fix indentation.
+	* sparc64-tdep.c: Fix indentation.
+	* stabsread.c: Fix indentation.
+	* stack.c: Fix indentation.
+	* stap-probe.c: Fix indentation.
+	* stubs/ia64vms-stub.c: Fix indentation.
+	* stubs/m32r-stub.c: Fix indentation.
+	* stubs/m68k-stub.c: Fix indentation.
+	* stubs/sh-stub.c: Fix indentation.
+	* stubs/sparc-stub.c: Fix indentation.
+	* symfile-mem.c: Fix indentation.
+	* symfile.c: Fix indentation.
+	* symfile.h: Fix indentation.
+	* symmisc.c: Fix indentation.
+	* symtab.c: Fix indentation.
+	* symtab.h: Fix indentation.
+	* target-float.c: Fix indentation.
+	* target.c: Fix indentation.
+	* target.h: Fix indentation.
+	* tic6x-tdep.c: Fix indentation.
+	* tilegx-linux-tdep.c: Fix indentation.
+	* tilegx-tdep.c: Fix indentation.
+	* top.c: Fix indentation.
+	* tracefile-tfile.c: Fix indentation.
+	* tracepoint.c: Fix indentation.
+	* tui/tui-disasm.c: Fix indentation.
+	* tui/tui-io.c: Fix indentation.
+	* tui/tui-regs.c: Fix indentation.
+	* tui/tui-stack.c: Fix indentation.
+	* tui/tui-win.c: Fix indentation.
+	* tui/tui-winsource.c: Fix indentation.
+	* tui/tui.c: Fix indentation.
+	* typeprint.c: Fix indentation.
+	* ui-out.h: Fix indentation.
+	* unittests/copy_bitwise-selftests.c: Fix indentation.
+	* unittests/memory-map-selftests.c: Fix indentation.
+	* utils.c: Fix indentation.
+	* v850-tdep.c: Fix indentation.
+	* valarith.c: Fix indentation.
+	* valops.c: Fix indentation.
+	* valprint.c: Fix indentation.
+	* valprint.h: Fix indentation.
+	* value.c: Fix indentation.
+	* value.h: Fix indentation.
+	* varobj.c: Fix indentation.
+	* vax-tdep.c: Fix indentation.
+	* windows-nat.c: Fix indentation.
+	* windows-tdep.c: Fix indentation.
+	* xcoffread.c: Fix indentation.
+	* xml-syscall.c: Fix indentation.
+	* xml-tdesc.c: Fix indentation.
+	* xstormy16-tdep.c: Fix indentation.
+	* xtensa-config.c: Fix indentation.
+	* xtensa-linux-nat.c: Fix indentation.
+	* xtensa-linux-tdep.c: Fix indentation.
+	* xtensa-tdep.c: Fix indentation.
+
+2020-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Craig Blackmore   <craig.blackmore@embecosm.com>
+
+	* riscv-tdep.c (riscv_frame_cache): Read the frame base register
+	as an unsigned value.
+
+2020-11-01  Tom Tromey  <tom@tromey.com>
+
+	* dbxread.c (dbx_end_psymtab): Update.
+	* dwarf2/read.c (process_psymtab_comp_unit_reader)
+	(build_type_psymtabs_reader): Update.
+	* xcoffread.c (xcoff_end_psymtab): Update.
+	* ctfread.c (scan_partial_symbols): Update.
+	* psymtab.c (sort_pst_symbols): Remove.
+	(partial_symtab::end): Rename from end_psymtab_common.  Inline
+	sort_pst_symbols.
+	* psympriv.h (struct partial_symtab) <end>: New method.
+	(end_psymtab_common): Don't declare.
+
+2020-11-01  Tom Tromey  <tom@tromey.com>
+
+	* symmisc.c (count_psyms): New function.
+	(print_objfile_statistics): Use it.
+	* psymtab.c (append_psymbol_to_list): Remove.
+	(partial_symtab::add_psymbol): Inline append_psymbol_to_list.
+	* objfiles.h (struct objstats) <n_psyms>: Remove.
+
+2020-11-01  Tom Tromey  <tom@tromey.com>
+
+	* dbxread.c (dbx_end_psymtab): Update.
+	* dwarf2/read.c (process_psymtab_comp_unit_reader): Update.
+	(build_type_psymtabs_reader): Update.
+	* xcoffread.c (xcoff_end_psymtab): Update.
+	* ctfread.c (scan_partial_symbols): Update.
+	* psympriv.h (end_psymtab_common): Update.
+	* psymtab.c (end_psymtab_common): Remove objfile parameter.
+	(sort_pst_symbols): Likewise.
+
+2020-11-01  Tom Tromey  <tom@tromey.com>
+
+	* dbxread.c (dbx_symfile_read): Update.
+	* dwarf2/read.c (dwarf2_build_psymtabs): Update.
+	* xcoffread.c (xcoff_initial_scan): Update.
+	* psympriv.h (init_psymbol_list): Don't declare.
+	* psymtab.c (init_psymbol_list): Remove.
+
+2020-11-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-lang.c (gnat_encoded_fixed_point_type_info): Renames
+	gnat_encoded_fixed_type_info.  Update all callers.
+
+2020-11-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-lang.c (cast_from_gnat_encoded_fixed_point_type): Split
+	line too long.
+
+2020-11-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-lang.c (cast_from_gnat_encoded_fixed_point_type): Renames
+	cast_from_fixed.  Update all callers.
+	(cast_to_gnat_encoded_fixed_point_type): Renames cast_to_fixed.
+	Update all callers.
+	(gnat_encoded_fixed_point_scaling_factor): Renames ada_scaling_factor.
+	Update all callers.
+	* ada-lang.h (gnat_encoded_fixed_point_scaling_factor): Renames
+	ada_scaling_factor.
+	* ada-typeprint.c: Replace call to ada_scaling_factor by call
+	to print_gnat_encoded_fixed_point_type.
+	* ada-valprint.c: Likewise.
+
+2020-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* infrun.h (infrun_debug_printf): Add check of debug_infrun flag.
+	(debug_prefixed_printf): Add check of debug_displaced flag.
+	* linux-nat.c (linux_nat_debug_printf): Add check of
+	debug_linux_nat flag.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infrun.c (infrun_debug_printf_1): Remove.
+	(displaced_debug_printf_1): Remove.
+	(stop_all_threads): Use debug_prefixed_printf.
+	* infrun.h (infrun_debug_printf_1): Remove.
+	(infrun_debug_printf): Use debug_prefixed_printf.
+	(displaced_debug_printf_1): Remove.
+	(displaced_debug_printf): Use debug_prefixed_printf.
+	* linux-nat.c (linux_nat_debug_printf_1): Remove.
+	(linux_nat_debug_printf): Use debug_prefixed_printf.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+	* sanitize.m4: Replace AC_TRY_LINK with AC_LINK_IFELSE +
+	AC_LANG_PROGRAM.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* acinclude.m4: Modernize.
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure.ac: Modernize.
+	* configure: Re-generate.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* acinclude.m4 (AM_PROG_CC_STDC): Remove.
+	* configure: Re-generate.
+	* configure.ac: Remove AM_PROG_CC_STDC.
+
+2020-10-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* configure.ac: Use AC_CANONICAL_{BUILD,HOST,TARGET} instead of
+	AC_CANONICAL_SYSTEM.
+	* configure: Re-generate.
+
+2020-10-30  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.h (displaced_debug_printf): New macro.  Replace
+	displaced debug prints throughout to use it.
+	(displaced_debug_printf_1): New declaration.
+	(displaced_step_dump_bytes): Return string, remove ui_file
+	parameter, update all callers.
+	* infrun.c (displaced_debug_printf_1): New function.
+	(displaced_step_dump_bytes): Return string, remove ui_file
+	parameter
+
+2020-10-30  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* rs6000-tdep.c (rs6000_dwarf2_reg_to_regnum): Return -1 for
+
+2020-10-30  Tom Tromey  <tromey@adacore.com>
+
+	* Makefile.in (stamp-init): Depend on config.status.
+
+2020-10-30  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infrun.c (fetch_inferior_event): Temporarily disable pagination.
+
+2020-10-30  Pedro Alves  <pedro@palves.net>
+
+	* thread.c (lookup_selected_frame): Move ...
+	* frame.c (lookup_selected_frame): ... here.
+
+2020-10-30  Pedro Alves  <pedro@palves.net>
+
+	* blockframe.c (block_innermost_frame): Use get_selected_frame.
+	* frame.c
+	(scoped_restore_selected_frame::scoped_restore_selected_frame):
+	Use save_selected_frame.  Save language as well.
+	(scoped_restore_selected_frame::~scoped_restore_selected_frame):
+	Use restore_selected_frame, and restore language as well.
+	(selected_frame_id, selected_frame_level): New.
+	(selected_frame): Update comments.
+	(save_selected_frame, restore_selected_frame): New.
+	(get_selected_frame): Use lookup_selected_frame.
+	(get_selected_frame_if_set): Delete.
+	(select_frame): Record selected_frame_level and selected_frame_id.
+	* frame.h (scoped_restore_selected_frame) <m_level, m_lang>: New
+	fields.
+	(get_selected_frame): Make 'message' parameter optional.
+	(get_selected_frame_if_set): Delete declaration.
+	(select_frame): Update comments.
+	(save_selected_frame, restore_selected_frame)
+	(lookup_selected_frame): Declare.
+	* gdbthread.h (scoped_restore_current_thread) <m_lang>: New field.
+	* infrun.c (struct infcall_control_state) <selected_frame_level>:
+	New field.
+	(save_infcall_control_state): Use save_selected_frame.
+	(restore_selected_frame): Delete.
+	(restore_infcall_control_state): Use restore_selected_frame.
+	* stack.c (select_frame_command_core, frame_command_core): Use
+	get_selected_frame.
+	* thread.c (restore_selected_frame): Rename to ...
+	(lookup_selected_frame): ... this and make extern.  Select the
+	current frame if the frame level is -1.
+	(scoped_restore_current_thread::restore): Also restore the
+	language.
+	(scoped_restore_current_thread::~scoped_restore_current_thread):
+	Don't try/catch.
+	(scoped_restore_current_thread::scoped_restore_current_thread):
+	Save the language as well.  Use save_selected_frame.
+
+2020-10-29  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbarch.sh (displaced_step_hw_singlestep): Adjust
+	documentation.
+	* gdbarch.h: Re-generate.
+
+2020-10-29  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbarch.sh (displaced_step_hw_singlestep): Remove closure
+	parameter.
+	* aarch64-tdep.c (aarch64_displaced_step_hw_singlestep):
+	Likewise.
+	* aarch64-tdep.h (aarch64_displaced_step_hw_singlestep):
+	Likewise.
+	* arch-utils.c (default_displaced_step_hw_singlestep):
+	Likewise.
+	* arch-utils.h (default_displaced_step_hw_singlestep):
+	Likewise.
+	* rs6000-tdep.c (ppc_displaced_step_hw_singlestep):
+	Likewise.
+	* s390-tdep.c (s390_displaced_step_hw_singlestep):
+	Likewise.
+	* gdbarch.c: Re-generate.
+	* gdbarch.h: Re-generate.
+	* infrun.c (resume_1): Adjust.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* progspace.c (program_space::~program_space): Don't call
+	exec_close.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* exec.c (exec_target::close): Don't change current program
+	space.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (add_symbol_file_command): Update.
+	* exec.c (program_space::add_target_sections): Rename.
+	* symfile-mem.c (symbol_file_add_from_memory): Update.
+	* progspace.h (struct program_space) <add_target_sections>:
+	Declare new overload.
+	* exec.h (add_target_sections_of_objfile): Don't declare.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* solib.c (solib_map_sections): Update.
+	* exec.c (program_space::add_target_sections): Now a method.
+	(exec_file_attach): Update.
+	* exec.h (add_target_sections): Don't declare.
+	* progspace.h (struct program_space) <add_target_sections>:
+	Declare.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* progspace.h (struct program_space) <remove_target_sections>:
+	Declare.
+	* exec.c (program_space::remove_target_sections): Now a method.
+	* exec.h (remove_target_sections): Don't declare.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* inferior.c (delete_inferior): Update.
+	* progspace.c (program_space::empty): Rename from
+	program_space_empty_p.  Return bool.
+	* progspace.h (struct program_space) <empty>: New method.
+	(program_space_empty_p): Don't declare.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* progspace.c (program_space::~program_space): Don't call
+	clear_program_space_solib_cache.
+	(program_space::clear_solib_cache): Rename from
+	clear_solib_cache.
+	* solib.c (handle_solib_event): Update.
+	* progspace.h (struct program_space) <clear_solib_cache>: New
+	method.
+	(clear_program_space_solib_cache): Don't declare.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* windows-tdep.c (windows_solib_create_inferior_hook): Update.
+	* target.c (info_target_command): Update.
+	* symfile.c (syms_from_objfile_1, finish_new_objfile)
+	(symbol_file_clear, reread_symbols): Update.
+	* symfile-mem.c (add_symbol_file_from_memory_command): Update.
+	* stabsread.c (scan_file_globals): Update.
+	* solib.c (update_solib_list): Update.
+	* solib-svr4.c (elf_locate_base, open_symbol_file_object)
+	(svr4_fetch_objfile_link_map, enable_break)
+	(svr4_relocate_main_executable)
+	(svr4_iterate_over_objfiles_in_search_order): Update.
+	* solib-frv.c (lm_base, enable_break)
+	(frv_relocate_main_executable): Update.
+	(main_got, frv_fdpic_find_canonical_descriptor): Update.
+	(frv_fetch_objfile_link_map): Update.
+	* solib-dsbt.c (lm_base, dsbt_relocate_main_executable): Update.
+	* solib-darwin.c (darwin_solib_create_inferior_hook): Update.
+	* solib-aix.c (solib_aix_solib_create_inferior_hook): Update.
+	* remote.c (remote_target::get_offsets): Update.
+	(remote_target::start_remote)
+	(extended_remote_target::post_attach): Update.
+	* objfiles.c (entry_point_address_query): Update.
+	* nto-procfs.c (nto_procfs_target::create_inferior): Update.
+	* minsyms.c (get_symbol_leading_char): Update.
+	* frame.c (inside_main_func): Update.
+	* progspace.h (symfile_objfile): Remove macro.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* exec.c (exec_file_attach): Update.
+	* progspace.c (program_space::exec_close): Update.
+	* progspace.h (struct program_space) <ebfd>: Now a
+	gdb_bfd_ref_ptr.
+	<set_exec_bfd>: Change argument type.
+	<exec_bfd>: Update.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* windows-tdep.c (windows_solib_create_inferior_hook): Update.
+	* symfile.c (reread_symbols): Update.
+	* symfile-mem.c (add_symbol_file_from_memory_command)
+	(add_vsyscall_page): Update.
+	* source-cache.c (source_cache::get_plain_source_lines): Update.
+	* solib-svr4.c (find_program_interpreter, elf_locate_base)
+	(svr4_current_sos_direct, svr4_exec_displacement)
+	(svr4_relocate_main_executable): Update.
+	(svr4_iterate_over_objfiles_in_search_order): Update.
+	* solib-frv.c (enable_break2, enable_break): Update.
+	* solib-dsbt.c (lm_base, enable_break): Update.
+	* solib-darwin.c (find_program_interpreter)
+	(darwin_solib_create_inferior_hook): Update.
+	* sol-thread.c (rw_common, ps_pdmodel): Update.
+	* rs6000-nat.c (rs6000_nat_target::create_inferior): Update.
+	* remote.c (compare_sections_command)
+	(remote_target::trace_set_readonly_regions): Update.
+	* remote-sim.c (get_sim_inferior_data)
+	(gdbsim_target::create_inferior, gdbsim_target::create_inferior): Update.
+	(gdbsim_target_open, gdbsim_target::files_info): Update.
+	* exec.h (exec_bfd): Remove macro.
+	* progspace.c (initialize_progspace): Update.
+	* proc-service.c (ps_addr_to_core_addr, core_addr_to_ps_addr):
+	Update.
+	* nto-procfs.c (nto_procfs_target::post_attach)
+	(nto_procfs_target::create_inferior): Update.
+	* maint.c (maintenance_info_sections): Update.
+	* linux-thread-db.c (thread_db_target::get_thread_local_address):
+	Update.
+	* infcmd.c (post_create_inferior): Update.
+	* gcore.c (default_gcore_arch, default_gcore_target): Update.
+	(objfile_find_memory_regions): Update.
+	* exec.c (validate_exec_file, exec_file_attach)
+	(exec_read_partial_read_only, print_section_info): Update.
+	* corelow.c (core_target_open): Update.
+	* corefile.c (reopen_exec_file, validate_files): Update.
+	* arm-tdep.c (gdb_print_insn_arm): Update.
+	* arch-utils.c (gdbarch_update_p, default_print_insn): Update.
+	* progspace.h (struct program_space) <exec_bfd, set_exec_bfd>: New
+	methods.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* progspace.h (current_target_sections): Remove macro.
+	* solib-svr4.c (scan_dyntag): Update.
+	* solib-dsbt.c (scan_dyntag): Update.
+	* exec.c (exec_target::close): Update.
+	(add_target_sections, add_target_sections_of_objfile)
+	(remove_target_sections, exec_target::get_section_table)
+	(exec_target::files_info, set_section_command)
+	(exec_set_section_address, exec_target::has_memory)
+	(exec_target::has_memory): Update.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* source-cache.c (source_cache::get_plain_source_lines): Use
+	current_program_space.
+	* corefile.c (reopen_exec_file): Use current_program_space.
+	* exec.c (exec_file_attach): Use current_program_space.
+	* exec.h (exec_bfd_mtime): Remove.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* gcore.c (default_gcore_mach): Remove.
+	(create_gcore_bfd): Update.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* progspace.c (program_space::exec_close): New method, from
+	exec_close in exec.c.
+	* exec.c (exec_close): Move to progspace.c.
+	(exec_target::close, exec_file_attach): Update.
+	* progspace.h (struct program_space) <exec_close>: Declare
+	method.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* progspace.h (struct program_space) <exec_filename>: Rename from
+	pspace_exec_filename.  Now a unique_xmalloc_ptr.
+	* inferior.c (print_selected_inferior): Update.
+	(print_inferior): Update.
+	* mi/mi-main.c (print_one_inferior): Update.
+	* exec.h (exec_filename): Remove macro.
+	* corefile.c (get_exec_file): Update.
+	* exec.c (exec_close): Update.
+	(exec_file_attach): Update.
+	* progspace.c (clone_program_space): Update.
+	(print_program_space): Update.
+
+2020-10-29  Tom Tromey  <tom@tromey.com>
+
+	* target-section.h (struct target_section): Add constructor.
+	* exec.c (build_section_table, add_target_sections_of_objfile):
+	Update.
+	* corelow.c (core_target::build_file_mappings): Update.
+
+2020-10-29  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	PR gdb/19318
+	* inferior.c (detach_inferior_command): Restore the current thread.
+	(kill_inferior_command): Ditto.
+
+2020-10-28  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26772
+	* symtab.c (find_pc_sect_compunit_symtab): In case there's an address
+	map, check it in the "best match" loop.
+
+2020-10-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* m32c-tdep.c: Remove unused includes.
+
+2020-10-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* xtensa-tdep.c: Remove includes.
+
+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* breakpoint.c (struct condition_command_opts): New struct.
+	(condition_command_option_defs): New static global.
+	(make_condition_command_options_def_group): New function.
+	(condition_completer): Update to consider the '-force' flag.
+	(condition_command): Use gdb::option for the '-force' flag.
+
+2020-10-27  Tom de Vries  <tdevries@suse.de>
+
+	* symtab.c (find_pc_sect_compunit_symtab): Include STATIC_BLOCK
+	symbols in section check.
+
+2020-10-27  Tom de Vries  <tdevries@suse.de>
+
+	* symtab.c (find_pc_sect_compunit_symtab): Use early continue.
+
+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* breakpoint.h (set_breakpoint_condition): Add a new bool parameter.
+	* breakpoint.c: Update the help text of the 'condition' and 'break'
+	commands.
+	(set_breakpoint_condition): Take a new bool parameter
+	to control whether condition definition should be forced even when
+	the condition expression is invalid in all of the current locations.
+	(condition_command): Update the call to 'set_breakpoint_condition'.
+	(find_condition_and_thread): Take the "-force-condition" flag into
+	account.
+	* linespec.c (linespec_keywords): Add "-force-condition" as an
+	element.
+	(FORCE_KEYWORD_INDEX): New #define.
+	(linespec_lexer_lex_keyword): Update to consider "-force-condition"
+	as a keyword.
+	* ada-lang.c (create_ada_exception_catchpoint): Ditto.
+	* guile/scm-breakpoint.c (gdbscm_set_breakpoint_condition_x): Ditto.
+	* python/py-breakpoint.c (bppy_set_condition): Ditto.
+	* NEWS: Mention the changes to the 'break' and 'condition' commands.
+
+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* breakpoint.h (class bp_location) <disabled_by_cond>: New field.
+	* breakpoint.c (set_breakpoint_location_condition): New function.
+	(set_breakpoint_condition): Disable a breakpoint location if parsing
+	the condition string gives an error.
+	(should_be_inserted): Update to consider the 'disabled_by_cond' field.
+	(build_target_condition_list): Ditto.
+	(build_target_command_list): Ditto.
+	(build_bpstat_chain): Ditto.
+	(print_one_breakpoint_location): Ditto.
+	(print_one_breakpoint): Ditto.
+	(breakpoint_1): Ditto.
+	(bp_location::bp_location): Ditto.
+	(locations_are_equal): Ditto.
+	(update_breakpoint_locations): Ditto.
+	(enable_disable_bp_num_loc): Ditto.
+	(init_breakpoint_sal): Use set_breakpoint_location_condition.
+	(find_condition_and_thread_for_sals): New static function.
+	(create_breakpoint): Call find_condition_and_thread_for_sals.
+	(location_to_sals): Call find_condition_and_thread_for_sals instead
+	of find_condition_and_thread.
+
+2020-10-26  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/read.c (process_full_comp_unit): Call
+	dwarf2_find_base_address.
+
+2020-10-26  Tom Tromey  <tromey@adacore.com>
+
+	* gdbtypes.c (create_range_type): Revert previous patch.  Add
+	comment.
+
+2020-10-26  Pedro Alves  <pedro@palves.net>
+
+	* nat/linux-waitpid.c: Include "gdbsupport/eintr.h".
+	(my_waitpid): Use gdb::handle_eintr.
+
+2020-10-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* acinclude.m4: Update ptrace.m4 path.
+	* ptrace.m4: Moved to gdbsupport.
+
+2020-10-24  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* symfile-mem.c (add_vsyscall_page): Use inferior parameter
+	instead of target_gdbarch.
+
+2020-10-24  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c (jit_reader_load_command): Pass current inferior.
+	(jit_inferior_init): Change parameter type to inferior, use it.
+	(jit_inferior_created): Remove.
+	(jit_inferior_created_hook): Pass inferior parameter down.
+	(_initialize_jit): Use jit_inferior_created_hook instead of
+	jit_inferior_created.
+	* jit.h (jit_inferior_created_hook): Add inferior parameter.
+	* infrun.c (follow_exec): Pass inferior to
+	jit_inferior_created_hook.
+
+2020-10-24  Simon Marchi  <simon.marchi@efficios.com>
+
+	* linux-thread-db.c (check_pid_namespace_match): Add inferior
+	parameter and use it.
+	(thread_db_inferior_created): Pass inferior argument.
+
+2020-10-24  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aix-thread.c (aix_thread_inferior_created): Add inferior
+	parameter.
+	* bsd-uthread.c (bsd_uthread_inferior_created): Likewise.
+	* dummy-frame.c (cleanup_dummy_frames): Likewise.
+	* jit.c (jit_inferior_created): Likewise.
+	* linux-thread-db.c (thread_db_inferior_created): Likewise.
+	* m68k-linux-tdep.c (m68k_linux_inferior_created): Likewise.
+	* observable.h (inferior_created): Likewise.
+	* ravenscar-thread.c (ravenscar_inferior_created): Likewise.
+	* symfile-mem.c (add_vsyscall_page): Likewise.
+	* infcmd.c (post_create_inferior): Pass inferior argument.
+
+2020-10-24  Joel Brobecker  <brobecker@adacore.com>
+
+	GDB 10.1 released.
+
+2020-10-23  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-typeprint.c (ada_print_type): Remove superfluous second call
+	to ada_check_typedef.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-exp.y (f_parse): Rename to...
+	(f_language::parser): ...this.
+	* f-lang.c (f_get_encoding): Rename to...
+	(f_language::get_encoding): ...this.
+	(f_op_print_tab): Rename to...
+	(f_language::op_print_tab): ...this.
+	(exp_descriptor_f): Rename to...
+	(f_language::exp_descriptor_tab): ...this.
+	(class f_language): Moved to f-lang.h.
+	(f_language::language_arch_info): New function, moved out of class
+	declaration.
+	(f_language::search_name_hash): Likewise.
+	(f_language::lookup_symbol_nonlocal): Likewise.
+	(f_language::get_symbol_name_matcher_inner): Likewise.
+	* f-lang.h: Add 'valprint.h' include.
+	(class f_language): Moved here from f-lang.c.
+	* f-typeprint.c (f_type_print_args): Delete commented out
+	declaration.
+	(f_print_typedef): Rename to...
+	(f_language::print_typedef): ...this.
+	(f_print_type): Rename to...
+	(f_language::print_type): ...this.
+	(f_type_print_varspec_prefix): Delete declaration and rename to...
+	(f_language::f_type_print_varspec_prefix): ...this.
+	(f_type_print_varspec_suffix): Delete declaration and rename to...
+	(f_language::f_type_print_varspec_suffix): ...this.
+	(f_type_print_base): Delete declaration and rename to...
+	(f_language::f_type_print_base): ...this.
+	* f-valprint.c (f_value_print_inner): Rename to...
+	(f_language::value_print_inner): ...this.
+	* parse.c: Delete 'f-lang.h' include.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* language.h (language_defn::print_type): Add variable names in
+	declaration, and update header comment.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language::demangle): Rename to...
+	(ada_language::demangle_symbol): ...this.
+	* c-lang.c (cplus_language::demangle): Rename to...
+	(cplus_language::demangle_symbol): ...this.
+	* d-lang.c (d_language::demangle): Rename to...
+	(d_language::demangle_symbol): ...this.
+	* f-lang.c (f_language::demangle): Rename to...
+	(f_language::demangle_symbol): ...this.
+	* go-lang.c (go_language::demangle): Rename to...
+	(go_language::demangle_symbol): ...this.
+	* language.c (language_demangle): Update call to demangle_symbol.
+	(auto_or_unknown_language::demangle): Rename to...
+	(auto_or_unknown_language::demangle_symbol): ...this.
+	* language.h (language_defn::demangle): Rename to...
+	(language_defn::demangle_symbol): ...this.
+	* objc-lang.c (objc_language::demangle): Rename to...
+	(objc_language::demangle_symbol): ...this.
+	* rust-lang.c (rust_language::demangle): Rename to...
+	(rust_language::demangle_symbol): ...this.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* language.h (LA_ITERATE_OVER_SYMBOLS): Delete.
+	(iterate_over_file_blocks): Replace use of macro with the macros
+	definition.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* language.h (LA_PRINT_ARRAY_INDEX): Delete.
+	* valprint.c (maybe_print_array_index): Replace use of macro with
+	the macros definition.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language::print_array_index): Call value_print
+	directly.
+	* language.c (language_defn::print_array_index): Likewise.
+	* language.h (LA_VALUE_PRINT): Delete.
+	* valprint.c (value_print): Call value_print on the
+	current_language directly.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* language.h (LA_PRINT_TYPEDEF): Delete.
+	* typeprint.c (typedef_print): Call print_typedef directly on the
+	current_language object.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* m2-exp.y (m2_parse): Rename to...
+	(m2_language::parser): ...this.  Update function signature.
+	* m2-lang.c (m2_printchar): Renamed to m2_language::printchar.
+	(m2_op_print): Rename to...
+	(m2_language::op_print_tab): ...this, and make const.
+	(exp_descriptor_modula2): Rename to...
+	(m2_language::exp_descriptor_modula2): ...this.
+	(class m2_language): Move to m2-lang.h.
+	(m2_language::language_arch_info): New function, moved out of
+	class declaration.
+	(m2_language::printchar): New function, body from m2_printchar.
+	(m2_language::printstr): New function, moved out of class
+	declaration.
+	(m2_language::emitchar): Likewise.
+	* m2-lang.h (m2_parse): Delete declaration.
+	(m2_print_typedef): Delete declaration.
+	(m2_value_print_inner): Delete declaration.
+	(class m2_language): Class declaration moved from m2-lang.c,
+	larger functions are left in m2-lang.c.
+	* m2-typeprint.c (m2_print_typedef): Rename to...
+	(m2_language::print_typedef): ...this, and update function
+	signature.
+	* m2-valprint.c (m2_value_print_inner): Rename to...
+	(m2_language::value_print_inner): ...this, replace use of
+	LA_PRINT_STRING with a direct call to printstr member function,
+	and update recursive call.
+
+2020-10-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* language.c (default_is_string_type_p): Delete, implementation
+	moved into auto_or_unknown_language::is_string_type_p.
+	(unk_op_print_tab): Moved into
+	auto_or_unknown_language::opcode_print_table.
+	(unknown_language_arch_info): Delete, implementation moved into
+	auto_or_unknown_language::language_arch_info.
+	(class auto_or_unknown_language): New class, member functions
+	copied from unknown_language class, with some updates.
+	(class unknown_language): Most member functions moved into
+	auto_or_unknown_language class.  Inherit from
+	auto_or_unknown_language class.
+	(class auto_language): Inherit from auto_or_unknown_language.
+	Delete most member functions.
+
+2020-10-22  Hannes Domani  <ssbssa@yahoo.de>
+
+	* stabsread.c (read_member_functions): Remove gdb_assert.
+
+2020-10-22  Hannes Domani  <ssbssa@yahoo.de>
+
+	* gdbtypes.c (init_complex_type): Check target type name.
+
+2020-10-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* target-debug.h (target_debug_print_struct_target_ops_p):
+	Remove.
+	(target_debug_print_async_callback_ftype_p): Remove.
+	(target_debug_print_struct_trace_state_variable_p): Remove.
+	(target_debug_print_struct_traceframe_info_p): Remove.
+	(target_debug_print_VEC__btrace_block_s__pp): Remove.
+	(target_debug_print_enum_btrace_format): Remove.
+	(target_debug_print_enum_info_proc_what): Remove.
+	(target_debug_print_thread_info_pp): Remove.
+
+2020-10-22  Simon Marchi  <simon.marchi@efficios.com>
+
+	* target.h (struct target_ops) <make_corefile_notes>:
+	Change return type to unique pointer.
+	* target.c (dummy_make_corefile_notes): Likewise.
+	* exec.c (struct exec_target) <make_corefile_notes>:
+	Likewise.
+	(exec_target::make_corefile_notes): Likewise.
+	* procfs.c (class procfs_target) <make_corefile_notes>:
+	Likewise.
+	(procfs_do_thread_registers): Adjust to unique pointer.
+	(struct procfs_corefile_thread_data): Add constructor.
+	<note_data>: Change type to unique pointer.
+	(procfs_corefile_thread_callback): Adjust to unique pointer.
+	(procfs_target::make_corefile_notes): Change return type to
+	unique pointer.
+	* target-delegates.c: Re-generate.
+	* gcore.c (write_gcore_file_1): Adjust.
+	* target-debug.h (target_debug_print_gdb_unique_xmalloc_ptr_char):
+	New.
+
+2020-10-22  Tom de Vries  <tdevries@suse.de>
+
+	* block.c (find_block_in_blockvector): Make sure the returned block
+	contains pc.
+
+2020-10-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/26693
+	* dwarf2/read.c (load_full_comp_unit): Add existing_cu
+	parameter.
+	(load_cu): Pass existing CU.
+	(process_imported_unit_die): Likewise.
+	(follow_die_offset): Likewise.
+
+2020-10-22  Luis Machado  <luis.machado@linaro.org>
+
+	* corelow.c (core_target::xfer_partial): Also check for an empty
+	m_core_unavailable_mappings vector.
+
+2020-10-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* expprint.c (dump_subexp_body_standard): Print RANGE_HAS_STRIDE.
+	* expression.h (enum range_type): Add RANGE_HAS_STRIDE.
+	* f-exp.y (arglist): Allow for a series of subranges.
+	(subrange): Add cases for subranges with strides.
+	* f-lang.c (value_f90_subarray): Catch use of array strides and
+	throw an error.
+	* parse.c (operator_length_standard): Handle RANGE_HAS_STRIDE.
+
+2020-10-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* expprint.c (print_subexp_standard): Change enum range_type to
+	range_flag and rename variables to match.
+	(dump_subexp_body_standard): Likewise.
+	* expression.h (enum range_type): Rename to...
+	(enum range_flag): ...this.
+	(range_types): Rename to...
+	(range_flags): ...this.
+	* f-lang.c (value_f90_subarray): Change enum range_type to
+	range_flag and rename variables to match.
+	* parse.c (operator_length_standard): Likewise.
+	* rust-exp.y (rust_parser::convert_ast_to_expression): Change enum
+	range_type to range_flag.
+	* rust-lang.c (rust_evaluate_funcall): Likewise.
+	(rust_range): Likewise.
+	(rust_compute_range): Likewise.
+	(rust_subscript): Likewise.
+
+2020-10-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* expprint.c (print_subexp_standard): Update to reflect changes to
+	enum range_type.
+	(dump_subexp_body_standard): Likewise.
+	* expression.h (enum range_type): Convert to a bit field enum, and
+	make the enum unsigned.
+	* f-exp.y (subrange): Update to reflect changes to enum
+	range_type.
+	* f-lang.c (value_f90_subarray): Likewise.
+	* parse.c (operator_length_standard): Likewise.
+	* rust-exp.y (rust_parser::convert_ast_to_expression): Likewise.
+	* rust-lang.c (rust_range): Likewise.
+	(rust_compute_range): Likewise.
+	(rust_subscript): Likewise.
+
+2020-10-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.c (displaced_step_in_progress_thread): Fix comment.
+	(displaced_step_in_progress): Fix comment.
+
+2020-10-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbarch.sh (make_corefile_notes): Return unique pointer.
+	* gdbarch.c: Re-generate.
+	* gdbarch.h: Re-generate.
+	* gcore.c (write_gcore_file_1): Adjust.
+	* fbsd-tdep.c (struct fbsd_collect_regset_section_cb_data): Add
+	constructor.
+	<note_data>: Change type to unique pointer.
+	<abort_iteration>: Change type to bool.
+	(fbsd_collect_regset_section_cb): Adjust to unique pointer.
+	(fbsd_collect_thread_registers): Return void, adjust.
+	(struct fbsd_corefile_thread_data): Add construtor.
+	<note_data>: Change type to unique pointer.
+	(fbsd_corefile_thread): Adjust.
+	(fbsd_make_corefile_notes): Return unique pointer, adjust.
+	* linux-tdep.c (linux_make_mappings_corefile_notes): Change type
+	to unique pointer, adjust.
+	(struct linux_collect_regset_section_cb_data): Add constructor.
+	<note_data>: Change type to unique pointer.
+	<abort_iteration>: Change type to bool.
+	(linux_collect_thread_registers): Return void, adjust.
+	(struct linux_corefile_thread_data): Add constructor.
+	<note_data>: Change type to unique pointer.
+	(linux_corefile_thread): Adjust.
+	(linux_make_corefile_notes): Return unique pointer, adjust.
+
+2020-10-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbarch.sh (displaced_step_hw_singlestep): Return bool.
+	* gdbarch.c: Re-generate.
+	* gdbarch.h: Re-generate.
+	* aarch64-tdep.c (aarch64_displaced_step_hw_singlestep): Return
+	bool.
+	* aarch64-tdep.h (aarch64_displaced_step_hw_singlestep):
+	Likewise.
+	* arch-utils.h (default_displaced_step_hw_singlestep): Likewise.
+	* arch-utils.c (default_displaced_step_hw_singlestep): Likewise.
+	* rs6000-tdep.c (ppc_displaced_step_hw_singlestep): Likewise.
+	* s390-tdep.c (s390_displaced_step_hw_singlestep): Likewise.
+
+2020-10-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbarch.sh: Make generated predicates return bool.
+	* gdbarch.c: Re-generate.
+	* gdbarch.h: Re-generate.
+
+2020-10-20  Tom Tromey  <tom@tromey.com>
+
+	* varobj-iter.h (struct varobj_item): Remove typedef.
+
+2020-10-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infrun.c (currently_stepping): Change int to bool
+	(maybe_software_singlestep): Likewise.
+	(show_stop_on_solib_events): Likewise.
+	(stepping_past_nonsteppable_watchpoint): Likewise.
+	(displaced_step_in_progress_any_inferior): Likewise.
+	(displaced_step_in_progress_thread): Likewise.
+	(keep_going_stepped_thread): Likewise.
+	(thread_still_needs_step_over): Likewise.
+	(start_step_over): Likewise.
+	(do_target_resume): Likewise.
+	(resume_1): Likewise.
+	(clear_proceed_status): Likewise.
+	(thread_still_needs_step_over_bp): Likewise.
+	(proceed): Likewise.
+	(switch_back_to_stepped_thread): Likewise.
+	(adjust_pc_after_break): Likewise.
+	(stepped_in_from): Likewise.
+	(handle_stop_requested): Likewise.
+	(handle_syscall_event): Likewise.
+	(handle_no_resumed): Likewise.
+	(handle_inferior_event): Likewise.
+	(finish_step_over): Likewise.
+	(handle_signal_stop): Likewise.
+	(process_event_stop_test): Likewise.
+
+2020-10-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infrun.c (get_displaced_stepping_state): Fix comment.
+
+2020-10-20  Andreas Schwab  <schwab@linux-m68k.org>
+
+	* cli/cli-cmds.c (_initialize_cli_cmds): Fix alias command help.
+
+2020-10-19  Tom Tromey  <tromey@adacore.com>
+
+	PR tui/26719
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<refresh_window>: Rename from refresh_pad.
+	* tui/tui-winsource.c (tui_source_window_base::refresh_window):
+	Rename from refresh_pad.
+	(tui_source_window_base::show_source_content)
+	(tui_source_window_base::do_scroll_horizontal): Update.
+
+2020-10-19  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* thread.c (_initialize_thread): Fine-tune the help text of
+	'info threads'.
+
+2020-10-19  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* frame.c: Remove the unused 'uinteger_option_def' type alias.
+
+2020-10-14  Mihails Strasuns  <mihails.strasuns@intel.com>
+
+	* breakpoint.c (handle_jit_event): Add an argument, change how
+	`jit_event_handler` is called.
+
+2020-10-17  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_end_psymtab): Use partial_symtab::empty.
+	(scan_xcoff_symtab): Update.
+	* psymtab.h (class psymtab_storage) <global_psymbols,
+	static_psymbols, current_global_psymbols,
+	current_static_psymbols>: Remove.
+	* psymtab.c (require_partial_symbols, find_pc_sect_psymbol)
+	(match_partial_symbol, lookup_partial_symbol): Update.
+	(print_partial_symbols): Change parameters.
+	(dump_psymtab, recursively_search_psymtabs)
+	(psym_fill_psymbol_map, psym_find_compunit_symtab_by_address)
+	(sort_pst_symbols, partial_symtab::partial_symtab): Update.
+	(concat): Remove.
+	(end_psymtab_common): Simplify.
+	(append_psymbol_to_list): Change parameters.
+	(partial_symtabs::add_psymbol): Rename from add_psymbol_to_list.
+	(init_psymbol_list): Simplify.
+	(maintenance_info_psymtabs, maintenance_check_psymtabs): Update.
+	* psympriv.h (struct partial_symtab) <empty>: New method.
+	<globals_offset, n_global_syms, statics_offset, n_static_syms>:
+	Remove.
+	<global_psymbols, static_psymbols>: New members.
+	<add_psymbol>: New methods.
+	(add_psymbol_to_list): Don't declare.
+	(psymbol_placement): Move earlier.
+	* mdebugread.c (parse_partial_symbols): Update.
+	(handle_psymbol_enumerators): Change parameters.
+	(mdebug_expand_psymtab): Update.
+	* dwarf2/read.c (process_psymtab_comp_unit_reader)
+	(add_partial_symbol): Update.
+	* dwarf2/index-write.c (write_psymbols): Change parameters.
+	(write_one_signatured_type): Update.
+	(recursively_count_psymbols): Update.
+	(recursively_write_psymbols): Update.
+	(class debug_names) <recursively_write_psymbols>: Update.
+	<write_psymbols>: Change parameters.
+	<write_one_signatured_type>: Update.
+	* dbxread.c (read_dbx_symtab): Update.
+	(dbx_end_psymtab): Use partial_symtab::empty.
+	* ctfread.c (struct ctf_context) <pst>: New member.
+	(create_partial_symtab): Set it.
+	(ctf_psymtab_type_cb, ctf_psymtab_var_cb): Update.
+	(scan_partial_symbols): Use the psymtab's context.  Update.
+
+2020-10-17  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_value_print): Remove comment.
+	* m2-valprint.c (m2_value_print_inner): Remove comment.
+	* gdbtypes.c (create_range_type): Set TYPE_UNSIGNED from base
+	type.
+
+2020-10-17  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26317
+	* source.c (select_source_symtab): Handling sal.symtab == NULL for
+	symbol main.
+
+2020-10-14  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/26733
+	* solib.c (solib_contains_address_p): Handle
+	'solib->sections == nullptr'.
+
+2020-10-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR gdb/26642
+	* infrun.c (do_target_wait_1): Clear TARGET_WNOHANG if the
+	target can't do async.
+	* target.c (target_wait): Assert that we don't pass
+	TARGET_WNOHANG to a target that can't async.
+
+2020-10-13  Kamil Rytarowski  <n54@gmx.com>
+
+	* Makefile.in (ALL_64_TARGET_OBS, ALL_TARGET_OBS)
+	HFILES_NO_SRCDIR, ALLDEPFILES): Rename files.
+	* alpha-bsd-nat.c: Adjust include.
+	* alpha-bsd-tdep.h: Adjust comment.
+	* alpha-nbsd-tdep.c: Rename to ...
+	* alpha-netbsd-tdep.c: ... this, adjust include.
+	* amd64-nbsd-nat.c: Rename to ...
+	* amd64-netbsd-nat.c: ... this, adjust include.
+	* amd64-nbsd-tdep.c: Rename to ...
+	* amd64-netbsd-tdep.c: ... this, adjust include.
+	* amd64-tdep.h: Adjust include.
+	* arm-nbsd-nat.c: Rename to ...
+	* arm-netbsd-nat.c: ... this, adjust include.
+	* arm-nbsd-tdep.c: Rename to ...
+	* arm-netbsd-tdep.c: ... this, adjust include.
+	* arm-nbsd-tdep.h: Rename to ...
+	* arm-netbsd-tdep.h: ... this, adjust include.
+	* configure.nat: Adjust file lists.
+	* configure.tgt: Likewise.
+	* hppa-nbsd-nat.c: Rename to ...
+	* hppa-netbsd-nat.c: ... this, adjust include.
+	* hppa-nbsd-tdep.c: Rename to ...
+	* hppa-netbsd-tdep.c: ... this, adjust include.
+	* i386-nbsd-nat.c: Rename to ...
+	* i386-netbsd-nat.c: ... this, adjust include.
+	* i386-nbsd-tdep.c: Rename to ...
+	* i386-netbsd-tdep.c: ... this, adjust include.
+	* m68k-bsd-nat.c: Adjust include.
+	* mips-nbsd-nat.c: Rename to ...
+	* mips-netbsd-nat.c: ... this, adjust include.
+	* mips-nbsd-tdep.c: Rename to ...
+	* mips-netbsd-tdep.c: ... this, adjust include.
+	* mips-nbsd-tdep.h: Rename to ...
+	* mips-netbsd-tdep.h: ... this.
+	* nbsd-nat.c: Rename to ...
+	* netbsd-nat.c: ... this, adjust include.
+	* nbsd-nat.h: Rename to ...
+	* netbsd-nat.h: ... this, adjust include.
+	* nbsd-tdep.c: Rename to ...
+	* netbsd-tdep.c: ... this, adjust include.
+	* nbsd-tdep.h: Rename to ...
+	* netbsd-tdep.h: ... this.
+	* ppc-nbsd-nat.c: Rename to ...
+	* ppc-netbsd-nat.c: ... this, adjust include.
+	* ppc-nbsd-tdep.c: Rename to ...
+	* ppc-netbsd-tdep.c: ... this, adjust include and comment.
+	* ppc-nbsd-tdep.h: Rename to ...
+	* ppc-netbsd-tdep.h: ... this.
+	* sh-nbsd-nat.c: Rename to ...
+	* sh-netbsd-nat.c: ... this, adjust include.
+	* sh-nbsd-tdep.c: Rename to ...
+	* sh-netbsd-tdep.c: ... this, adjust include.
+	* sparc-nbsd-nat.c: Rename to ...
+	* sparc-netbsd-nat.c: ... this.
+	* sparc-nbsd-tdep.c: Rename to ...
+	* sparc-netbsd-tdep.c: ... this, adjust include.
+	* sparc64-nbsd-nat.c: Rename to ...
+	* sparc64-netbsd-nat.c: ... this.
+	* sparc64-nbsd-tdep.c: Rename to ...
+	* sparc64-netbsd-tdep.c: ... this, adjust include.
+	* sparc64-tdep.h: Adjust comment.
+	* vax-bsd-nat.c: Adjust include.
+	* vax-nbsd-tdep.c: Rename to ...
+	* vax-netbsd-tdep.c: ... this, adjust include.
+
+2020-10-12  Tom Tromey  <tom@tromey.com>
+
+	* target.h (struct target_ops) <get_section_table>: Update.
+	(target_get_section_table): Update.
+	* target.c (target_get_section_table, target_section_by_addr)
+	(memory_xfer_partial_1): Update.
+	* target-section.h (target_section_table): Now an alias.
+	* target-delegates.c: Rebuild.
+	* target-debug.h (target_debug_print_target_section_table_p):
+	Rename from target_debug_print_struct_target_section_table_p.
+	* symfile.c (build_section_addr_info_from_section_table): Update.
+	* solib.c (solib_map_sections, solib_contains_address_p): Update.
+	* solib-svr4.c (scan_dyntag): Update.
+	* solib-dsbt.c (scan_dyntag): Update.
+	* remote.c (remote_target::remote_xfer_live_readonly_partial):
+	Update.
+	* record-full.c (record_full_core_target::xfer_partial): Update.
+	* progspace.h (struct program_space) <target_sections>: Update.
+	* exec.h (print_section_info): Update.
+	* exec.c (exec_target::close, build_section_table)
+	(add_target_sections, add_target_sections_of_objfile)
+	(remove_target_sections, exec_on_vfork)
+	(section_table_available_memory)
+	(section_table_xfer_memory_partial)
+	(exec_target::get_section_table, exec_target::xfer_partial)
+	(print_section_info, set_section_command)
+	(exec_set_section_address, exec_target::has_memory): Update.
+	* corelow.c (core_target::build_file_mappings)
+	(core_target::xfer_partial, core_target::info_proc_mappings)
+	(core_target::info_proc_mappings): Update.
+	* bfd-target.c (class target_bfd): Update
+
+2020-10-12  Tom Tromey  <tom@tromey.com>
+
+	* progspace.c (program_space::~program_space): Don't call
+	clear_section_table.
+	* exec.h (clear_section_table): Don't declare.
+	* exec.c (exec_target::close): Update.
+	(clear_section_table): Remove.
+
+2020-10-12  Tom Tromey  <tom@tromey.com>
+
+	* exec.c (add_target_sections_of_objfile): Simplify.
+
+2020-10-12  Tom Tromey  <tom@tromey.com>
+
+	* solib.c (solib_map_sections): Update.
+	* record-full.c (record_full_core_open_1): Update.
+	* exec.h (build_section_table): Return a target_section_table.
+	* exec.c (exec_file_attach): Update.
+	(build_section_table): Return a target_section_table.
+	* corelow.c (core_target::core_target): Update.
+	* bfd-target.c (target_bfd::target_bfd): Update.
+
+2020-10-12  Tom Tromey  <tom@tromey.com>
+
+	* target.c (target_section_by_addr, memory_xfer_partial_1):
+	Update.
+	* target-section.h (struct target_section_table): Use
+	std::vector.
+	* symfile.h (build_section_addr_info_from_section_table): Take a
+	target_section_table.
+	* symfile.c (build_section_addr_info_from_section_table): Take a
+	target_section_table.
+	* solist.h (struct so_list) <sections>: Change type.
+	<sections_end>: Remove.
+	* solib.c (solib_map_sections, clear_so, solib_read_symbols)
+	(solib_contains_address_p): Update.
+	* solib-svr4.c (scan_dyntag): Update.
+	* solib-dsbt.c (scan_dyntag): Update.
+	* remote.c (remote_target::remote_xfer_live_readonly_partial):
+	Update.
+	* record-full.c (record_full_core_start, record_full_core_end):
+	Remove.
+	(record_full_core_sections): New global.
+	(record_full_core_open_1, record_full_core_target::xfer_partial):
+	Update.
+	* exec.h (build_section_table, section_table_xfer_memory_partial)
+	(add_target_sections): Take a target_section_table.
+	* exec.c (exec_file_attach, clear_section_table): Update.
+	(resize_section_table): Remove.
+	(build_section_table, add_target_sections): Take a
+	target_section_table.
+	(add_target_sections_of_objfile, remove_target_sections)
+	(exec_on_vfork): Update.
+	(section_table_available_memory): Take a target_section_table.
+	(section_table_read_available_memory): Update.
+	(section_table_xfer_memory_partial): Take a target_section_table.
+	(print_section_info, set_section_command)
+	(exec_set_section_address, exec_target::has_memory): Update.
+	* corelow.c (class core_target) <m_core_section_table,
+	m_core_file_mappings>: Remove braces.
+	<~core_target>: Remove.
+	(core_target::core_target): Update.
+	(core_target::~core_target): Remove.
+	(core_target::build_file_mappings)
+	(core_target::xfer_memory_via_mappings)
+	(core_target::xfer_partial, core_target::info_proc_mappings):
+	Update.
+	* bfd-target.c (target_bfd::xfer_partial): Update.
+	(target_bfd::target_bfd): Update.
+	(target_bfd::~target_bfd): Remove.
+
+2020-10-12  Tom Tromey  <tom@tromey.com>
+
+	* target.h (struct target_section, struct target_section_table):
+	Move to target-section.h.
+	* target-section.h: New file.
+
+2020-10-12  Pedro Alves  <pedro@palves.net>
+
+	PR exp/26602
+	* valops.c (struct struct_field_searcher): New.
+	(update_search_result): Rename to ...
+	(struct_field_searcher::update_result): ... this.  Simplify
+	prototype.  Record all found fields.
+	(do_search_struct_field): Rename to ...
+	(struct_field_searcher::search): ... this.  Simplify prototype.
+	Maintain stack of visited baseclass path.  Call update_result for
+	fields too.  Keep searching fields in baseclasses instead of
+	stopping at the first found field.
+	(search_struct_field): Use struct_field_searcher.  When looking
+	for fields, report ambiguous access attempts.
+
+2020-10-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* frame.c (inside_main_func): Check full symbols as well as
+	minimal symbols.
+
+2020-10-09  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-lang.c (advance_wild_match): Rewrite the function's
+	description.  Change the type of target0, t0 and t1 to char.
+
+2020-10-09  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (dwarf2_add_field): Handle signed offsets.
+
+2020-10-09  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.h (ada_encode): Return std::string.
+	* ada-lang.c (ada_encode_1): Return std::string.
+	(ada_encode): Likewise.
+	(type_from_tag, ada_lookup_name_info::ada_lookup_name_info):
+	Update.
+	* ada-exp.y (block_lookup, write_var_or_type): Update.
+
+2020-10-09  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR exp/26714
+	* printcmd.c (print_formatted): Handle void results as
+	unformatted prints.
+
+2020-10-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arch/aarch32.c (aarch32_create_target_description): Release the
+	target_desc_up as late as possible.
+	* arch/aarch64.c (aarch64_create_target_description): Likewise.
+	* arch/amd64.c (amd64_create_target_description): Likewise.
+	* arch/arc.c (arc_create_target_description): Return a
+	target_desc_up, don't release it.
+	* arch/arc.h (arc_create_target_description): Update declaration.
+	(arc_lookup_target_description): Move target_desc_up into the
+	cache, and return a borrowed pointer.
+	* arch/arm.c (arm_create_target_description): Release the
+	target_desc_up as late as possible.
+	* arch/i386.c (i386_create_target_description): Likewise.
+	* arch/riscv.h (riscv_create_target_description): Update
+	declaration to match definition.
+	* arch/tic6x.c (tic6x_create_target_description): Release the
+	target_desc_up as late as possible.
+
+2020-10-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in: Include Makefile.gnulib.inc.  Don't define LIBGNU
+	or INCGNU.  Make use of LIBGNU_EXTRA_LIBS when linking.
+
+2020-10-09  Jan Vrany  <jan.vrany@labware.com>
+
+	* source.c (directory_command): Notify observers that "directories"
+	parameter has changed.
+
+2020-10-08  Tom Tromey  <tom@tromey.com>
+
+	* cli/cli-cmds.c (print_disassembly): Style function name and
+	addresses.  Add _() wrappers.
+
+2020-10-08  Shahab Vahedi  <shahab@synopsys.com>
+
+	* NEWS: Mention ARC support in GDBserver.
+
+2020-10-08  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arch/aarch32.c (aarch32_create_target_description): Release
+	unique_ptr returned from allocate_target_description.
+	* arch/aarch64.c (aarch64_create_target_description): Likewise.
+	* arch/amd64.c (amd64_create_target_description): Likewise.
+	* arch/arc.c (arc_create_target_description): Likewise.
+	* arch/arm.c (arm_create_target_description): Likewise.
+	* arch/i386.c (i386_create_target_description): Likewise.
+	* arch/riscv.c (riscv_create_target_description): Update return
+	type.  Handle allocate_target_description returning a unique_ptr.
+	(riscv_lookup_target_description): Update to handle unique_ptr.
+	* arch/tic6x.c (tic6x_create_target_description): Release
+	unique_ptr returned from allocate_target_description.
+	* features/microblaze-with-stack-protect.c: Regenerate.
+	* features/microblaze.c: Regenerate.
+	* features/mips-dsp-linux.c: Regenerate.
+	* features/mips-linux.c: Regenerate.
+	* features/mips64-dsp-linux.c: Regenerate.
+	* features/mips64-linux.c: Regenerate.
+	* features/nds32.c: Regenerate.
+	* features/nios2.c: Regenerate.
+	* features/or1k.c: Regenerate.
+	* features/rs6000/powerpc-32.c: Regenerate.
+	* features/rs6000/powerpc-32l.c: Regenerate.
+	* features/rs6000/powerpc-403.c: Regenerate.
+	* features/rs6000/powerpc-403gc.c: Regenerate.
+	* features/rs6000/powerpc-405.c: Regenerate.
+	* features/rs6000/powerpc-505.c: Regenerate.
+	* features/rs6000/powerpc-601.c: Regenerate.
+	* features/rs6000/powerpc-602.c: Regenerate.
+	* features/rs6000/powerpc-603.c: Regenerate.
+	* features/rs6000/powerpc-604.c: Regenerate.
+	* features/rs6000/powerpc-64.c: Regenerate.
+	* features/rs6000/powerpc-64l.c: Regenerate.
+	* features/rs6000/powerpc-7400.c: Regenerate.
+	* features/rs6000/powerpc-750.c: Regenerate.
+	* features/rs6000/powerpc-860.c: Regenerate.
+	* features/rs6000/powerpc-altivec32.c: Regenerate.
+	* features/rs6000/powerpc-altivec32l.c: Regenerate.
+	* features/rs6000/powerpc-altivec64.c: Regenerate.
+	* features/rs6000/powerpc-altivec64l.c: Regenerate.
+	* features/rs6000/powerpc-e500.c: Regenerate.
+	* features/rs6000/powerpc-e500l.c: Regenerate.
+	* features/rs6000/powerpc-isa205-32l.c: Regenerate.
+	* features/rs6000/powerpc-isa205-64l.c: Regenerate.
+	* features/rs6000/powerpc-isa205-altivec32l.c: Regenerate.
+	* features/rs6000/powerpc-isa205-altivec64l.c: Regenerate.
+	* features/rs6000/powerpc-isa205-ppr-dscr-vsx32l.c: Regenerate.
+	* features/rs6000/powerpc-isa205-ppr-dscr-vsx64l.c: Regenerate.
+	* features/rs6000/powerpc-isa205-vsx32l.c: Regenerate.
+	* features/rs6000/powerpc-isa205-vsx64l.c: Regenerate.
+	* features/rs6000/powerpc-isa207-htm-vsx32l.c: Regenerate.
+	* features/rs6000/powerpc-isa207-htm-vsx64l.c: Regenerate.
+	* features/rs6000/powerpc-isa207-vsx32l.c: Regenerate.
+	* features/rs6000/powerpc-isa207-vsx64l.c: Regenerate.
+	* features/rs6000/powerpc-vsx32.c: Regenerate.
+	* features/rs6000/powerpc-vsx32l.c: Regenerate.
+	* features/rs6000/powerpc-vsx64.c: Regenerate.
+	* features/rs6000/powerpc-vsx64l.c: Regenerate.
+	* features/rs6000/rs6000.c: Regenerate.
+	* features/rx.c: Regenerate.
+	* features/s390-gs-linux64.c: Regenerate.
+	* features/s390-linux32.c: Regenerate.
+	* features/s390-linux32v1.c: Regenerate.
+	* features/s390-linux32v2.c: Regenerate.
+	* features/s390-linux64.c: Regenerate.
+	* features/s390-linux64v1.c: Regenerate.
+	* features/s390-linux64v2.c: Regenerate.
+	* features/s390-te-linux64.c: Regenerate.
+	* features/s390-tevx-linux64.c: Regenerate.
+	* features/s390-vx-linux64.c: Regenerate.
+	* features/s390x-gs-linux64.c: Regenerate.
+	* features/s390x-linux64.c: Regenerate.
+	* features/s390x-linux64v1.c: Regenerate.
+	* features/s390x-linux64v2.c: Regenerate.
+	* features/s390x-te-linux64.c: Regenerate.
+	* features/s390x-tevx-linux64.c: Regenerate.
+	* features/s390x-vx-linux64.c: Regenerate.
+	* mips-tdep.c (_initialize_mips_tdep): Release unique_ptr returned
+	from allocate_target_description.
+	* target-descriptions.c (allocate_target_description): Update
+	return type.
+	(print_c_tdesc::visit_pre): Release unique_ptr returned from
+	allocate_target_description.
+
+2020-10-07  Tom Tromey  <tromey@adacore.com>
+
+	* unittests/search-memory-selftests.c: New file.
+	* Makefile.in (SELFTESTS_SRCS): Add
+	unittests/search-memory-selftests.c.
+
+2020-10-07  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/16930:
+	* findcmd.c (_initialize_mem_search): Mention that the range is
+	inclusive.
+
+2020-10-07  Tom Tromey  <tromey@adacore.com>
+
+	* target.h (simple_search_memory): Don't declare.
+	* target.c (simple_search_memory): Move to gdbsupport.
+	(default_search_memory): Update.
+	* remote.c (remote_target::search_memory): Update.
+
+2020-10-07  Simon Marchi  <simon.marchi@efficios.com>
+
+	* Makefile.in (COMPILE): Add CXXFLAGS.
+	(INTERNAL_CFLAGS_BASE): Remove CXXFLAGS.
+	(check-headers): Add CXXFLAGS.
+
+2020-10-07  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* arc-linux-tdep.h: New file.
+	* arc-linux-tdep.c (arc_linux_core_reg_offsets,
+	arc_linux_supply_gregset, arc_linux_supply_v2_regset,
+	arc_linux_collect_gregset, arc_linux_collect_v2_regset,
+	arc_linux_gregset, arc_linux_v2_regset,
+	arc_linux_iterate_over_regset_sections,
+	arc_linux_core_read_description): Implement.
+	(arc_linux_init_osabi): Set iterate_over_regset_sections.
+	* arc-tdep.h (ARC_OFFSET_NO_REGISTER): Declare.
+	(arc_gdbarch_features_create): Add.
+	* arc-tdep.c (arc_gdbarch_features_create): Not static anymore.
+
+2020-10-07  Shahab Vahedi  <shahab@synopsys.com>
+
+	* arch/arc.h: Rename "arc_gdbarch_features" to
+	"arc_arch_features".
+	* arc-tdep.h: Likewise.
+	* arc-tdep.c: Likewise.
+
+2020-10-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infcmd.c (attach_command): Remove the redundant call to
+	`clear_proceed_status`.
+
+2020-10-07  Kamil Rytarowski  <n54@gmx.com>
+
+	* nat/netbsd-nat.c (write_memory, read_memory): Update.
+
+2020-10-07  Kamil Rytarowski  <n54@gmx.com>
+
+	* nat/netbsd-nat.c (write_memory, read_memory): Add.
+	* nat/netbsd-nat.h (write_memory, read_memory): Likewise.
+	* nbsd-nat.c (nbsd_nat_target::xfer_partial): Update.
+
+2020-10-07  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* break-catch-sig.c (signal_catch_counts): Make a static arrray.
+	(_initialize_break_catch_sig): Don't allocate array.
+
+2020-10-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* symtab.c (find_pc_line): Return unmapped addresses when the
+	requested address is also unmapped.
+
+2020-10-05  Simon Marchi  <simon.marchi@efficios.com>
+
+	* Makefile.in (HFILES_NO_SRCDIR): Remove tui/tui-windata.h, add
+	tui/tui-out.h.
+
+2020-10-05  Simon Marchi  <simon.marchi@efficios.com>
+
+	* amd64-windows-tdep.c (amd64_windows_return_value): Use
+	type::is_vector instead of TYPE_VECTOR.
+
+2020-10-05  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* auto-load.c (auto_load_objfile_script_1): Don't use
+	debugfile_holder as temporary variable when stripping drive
+	letter.
+
+2020-10-05  Hannes Domani  <ssbssa@yahoo.de>
+
+	* amd64-windows-tdep.c (amd64_windows_passed_by_integer_register):
+	Add TYPE_CODE_COMPLEX.
+	(amd64_windows_return_value): Fix types returned via XMM0.
+
+2020-10-05  Alan Hayward  <alan.hayward@arm.com>
+
+	* MAINTAINERS (Responsible Maintainers): Add Luis Machado to
+	AArch64/ARM maintainers.
+
+2020-10-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* NEWS: Mention set/show debug event-loop.
+
+2020-10-02  Tom Tromey  <tromey@adacore.com>
+
+	* skip.c (skiplist_entry::skiplist_entry): Unconditionally use
+	REG_EXTENDED.
+
+2020-10-02  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aix-thread.c (aix_thread_inferior_created): Remove parameters.
+	* procfs.c (procfs_inferior_created): Remove.
+	(_initialize_procfs): Don't register procfs_inferior_created.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* async-event.c (invoke_async_signal_handlers): Add debug
+	print.
+	(check_async_event_handlers): Likewise.
+	* event-top.c (show_debug_event_loop): New function.
+	(_initialize_event_top): Register "set debug event-loop"
+	setting.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* debug.c (debug_prefixed_vprintf): Move to gdbsupport.
+	* debug.h: Remove.
+	* infrun.c: Include gdbsupport/common-debug.h.
+	* linux-nat.c: Likewise.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* async-event.h (create_async_signal_handler): Add name
+	parameter.
+	(create_async_event_handler): Likewise.
+	* async-event.c (struct async_signal_handler) <name>: New field.
+	(struct async_event_handler) <name>: New field.
+	(create_async_signal_handler): Assign name.
+	(create_async_event_handler): Assign name.
+	* event-top.c (async_init_signals): Pass name when creating
+	handler.
+	* infrun.c (_initialize_infrun): Likewise.
+	* record-btrace.c (record_btrace_push_target): Likewise.
+	* record-full.c (record_full_open): Likewise.
+	* remote-notif.c (remote_notif_state_allocate): Likewise.
+	* remote.c (remote_target::open_1): Likewise.
+	* tui/tui-win.c (tui_initialize_win): Likewise.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* async-event.c (initialize_async_signal_handlers): Pass name to
+	add_file_handler
+	* event-top.c (ui_register_input_event_handler): Likewise.
+	* linux-nat.c (linux_nat_target::async): Likewise.
+	* run-on-main-thread.c (_initialize_run_on_main_thread):
+	Likewise
+	* ser-base.c (reschedule): Likewise.
+	(ser_base_async): Likewise.
+	* tui/tui-io.c: Likewise.
+	* top.h (struct ui) <num>: New field.
+	* top.c (highest_ui_num): New variable.
+	(ui::ui): Initialize num.
+
+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* observable.h <inferior_created>: Remove parameters.  Update all
+	listeners.
+	* inferior.h (post_create_inferior): Remove target parameter.
+	Update all callers.
+
+2020-10-02  Nitika Achra  <Nitika.Achra@amd.com>
+
+	* dwarf2/macro.c (dwarf_decode_macro_bytes): Handle DW_MACRO_define_strx
+	and DW_MACRO_undef_strx.
+	(dwarf_decode_macros): Likewise
+	* dwarf2/read.c (dwarf_decode_macros): Pass str_offsets_base in the parameters
+	which is the value of DW_AT_str_offsets_base.
+	 * dwarf2/macro.h (dwarf_decode_macros): Modify the definition to include
+	str_offsets_base.
+
+2020-10-01  Kamil Rytarowski  <n54@gmx.com>
+
+	* i386-tdep.h (i386nbsd_sc_reg_offset): Remove.
+
+2020-10-01  Kamil Rytarowski  <n54@gmx.com>
+
+	* i386-bsd-nat.c (_initialize_i386bsd_nat): Update.
+	* i386-nbsd-tdep.c (i386nbsd_sc_reg_offset): Now static.
+
+2020-10-01  Kamil Rytarowski  <n54@gmx.com>
+
+	* i386-bsd-nat.c: Include "x86-bsd-nat.h".
+
+2020-09-30  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26683
+	* dwarf2/read.c (dwarf2_name): Update attr_name after attr is updated.
+
+2020-09-30  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (handle_variant): Use constant_value.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (lookup_dwo_id, get_type_unit_group)
+	(read_file_scope, dwarf2_get_pc_bounds)
+	(dwarf2_record_block_ranges, dwarf2_add_field, get_alignment)
+	(read_structure_type, handle_struct_member_die)
+	(read_enumeration_type, read_array_type, read_set_type)
+	(read_tag_pointer_type, read_tag_reference_type)
+	(read_subroutine_type, read_base_type, read_subrange_type)
+	(read_full_die_1, partial_die_info::read)
+	(partial_die_info::read, by, new_symbol)
+	(dwarf2_const_value_data, dwarf2_const_value_attr)
+	(dump_die_shallow, dwarf2_fetch_constant_bytes)
+	(prepare_one_comp_unit): Update.
+	* dwarf2/attribute.h (DW_UNSND): Remove.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_func_scope, prototyped_function_p)
+	(read_subroutine_type, partial_die_info::read)
+	(dwarf2_flag_true_p, new_symbol, dump_die_shallow)
+	(dwarf2_add_member_fn): Update.
+	* dwarf2/attribute.h (struct attribute) <as_boolean>: Declare.
+	* dwarf2/attribute.c (attribute::as_boolean): New method.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf2_add_field, dwarf2_add_member_fn): Update.
+	* dwarf2/attribute.h (struct attribute) <as_virtuality>: New
+	method.
+	* dwarf2/attribute.c (attribute::as_virtuality): New method.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/die.h (struct die_info) <addr_base, ranges_base>: Check
+	the attribute's form.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (is_valid_DW_AT_defaulted): Move to attribute.c.
+	(dwarf2_add_member_fn): Update.
+	* dwarf2/attribute.h (struct attribute) <defaulted>: Declare.
+	* dwarf2/attribute.c (attribute::defaulted): New method, from
+	is_valid_DW_AT_defaulted.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dw2_get_file_names_reader)
+	(dwarf2_build_include_psymtabs, handle_DW_AT_stmt_list)
+	(dwarf2_cu::setup_type_unit_groups, fill_in_loclist_baton)
+	(dwarf2_symbol_mark_computed): Use as_unsigned.
+	* dwarf2/attribute.h (struct attribute) <as_unsigned>: New
+	method.
+	<form_is_section_offset>: Update comment.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf2_access_attribute): Rename from
+	dwarf2_default_access_attribute.  Look up attribute.
+	(dwarf2_add_field, dwarf2_add_type_defn, dwarf2_add_member_fn):
+	Update.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (skip_one_die): Update.
+	(read_full_die_1): Change how reprocessing is done.
+	(partial_die_info::read): Update.
+	(read_attribute_value): Remove need_reprocess parameter.
+	(read_attribute): Likewise.
+	* dwarf2/attribute.h (struct attribute) <requires_reprocessing_p>:
+	New method.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_attribute_reprocess, read_attribute_value)
+	(dwarf2_const_value_attr, dump_die_shallow)
+	(dwarf2_fetch_constant_bytes): Update.
+	* dwarf2/attribute.h (struct attribute) <form_is_ref>: Update
+	comment.
+	<set_address>: New method.
+	(DW_ADDR): Remove.
+	* dwarf2/attribute.c (attribute::form_is_ref): Update comment.
+	(attribute::as_string, attribute::as_address): Add assert.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_cutu_die_from_dwo): Use OBSTACK_ZALLOC.
+	(read_attribute_reprocess, read_attribute_value): Update.
+	(read_attribute): Clear requires_reprocessing.
+	* dwarf2/attribute.h (struct attribute) <as_unsigned_reprocess,
+	form_requires_reprocessing>: New methods.
+	<string_init>: Clear requires_reprocessing.
+	<set_unsigned_reprocess>: New method.
+	<name>: Shrink by one bit.
+	<requires_reprocessing>: New member.
+	* dwarf2/attribute.c (attribute::form_requires_reprocessing): New
+	method.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_attribute_value): Update.
+	* dwarf2/attribute.h (struct attribute) <form_is_unsigned,
+	set_unsigned>: New methods.
+	* dwarf2/attribute.c (attribute::form_is_unsigned): New method.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (get_alignment, read_array_order)
+	(read_attribute_value, dwarf2_const_value_attr)
+	(dump_die_shallow, dwarf2_fetch_constant_bytes): Update.
+	* dwarf2/attribute.h (struct attribute) <as_signed, set_signed>:
+	New methods.
+	(DW_SND): Remove.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_attribute_value, lookup_die_type)
+	(dump_die_shallow, follow_die_sig, get_DW_AT_signature_type):
+	Update.
+	* dwarf2/attribute.h (struct attribute) <as_signature,
+	set_signature>: New methods.
+	(DW_SIGNATURE): Remove.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_call_site_scope)
+	(handle_data_member_location, dwarf2_add_member_fn)
+	(mark_common_block_symbol_computed, attr_to_dynamic_prop)
+	(partial_die_info::read, read_attribute_value)
+	(var_decode_location, dwarf2_const_value_attr, dump_die_shallow)
+	(dwarf2_fetch_die_loc_sect_off, dwarf2_fetch_constant_bytes)
+	(dwarf2_symbol_mark_computed): Update.
+	* dwarf2/attribute.h (struct attribute) <as_block, set_block>: New
+	methods.
+	(DW_BLOCK): Remove.
+	* dwarf2/attribute.c (attribute::form_is_block): Add
+	DW_FORM_data16.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_cutu_die_from_dwo)
+	(read_attribute_reprocess, read_attribute_value, read_attribute)
+	(dwarf2_const_value_attr, dwarf2_name, dump_die_shallow)
+	(dwarf2_fetch_constant_bytes): Update.
+	* dwarf2/attribute.h (struct attribute) <form_is_string>: Declare.
+	<set_string_noncanonical, set_string_canonical>: New methods.
+	<string_is_canonical>: Update comment.
+	<canonical_string_p>: Add assert.
+	(DW_STRING, DW_STRING_IS_CANONICAL): Remove.
+	* dwarf2/attribute.c (attribute::form_is_string): New method.
+	(attribute::string): Use it.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (anonymous_struct_prefix, dwarf2_name)
+	(dump_die_shallow): Use canonical_string_p.
+	* dwarf2/attribute.h (struct attribute) <canonical_string_p>: New
+	method.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (partial_die_info::read)
+	(dwarf2_const_value_attr, anonymous_struct_prefix, )
+	(dwarf2_name, dwarf2_fetch_constant_bytes): Use
+	attribute::as_string.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/attribute.c (attribute::address): Don't use DW_UNSND or
+	DW_ADDR.
+	(attribute::string): Don't use DW_STRING.
+	(attribute::get_ref_die_offset): Don't use DW_UNSND.
+	(attribute::constant_value): Don't use DW_UNSND or DW_SND.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf2_find_base_address, read_call_site_scope)
+	(dwarf2_get_pc_bounds, dwarf2_record_block_ranges)
+	(partial_die_info::read, dwarf2_string_attr, new_symbol): Update.
+	* dwarf2/attribute.h (struct attribute): Rename methods.
+	* dwarf2/attribute.c (attribute::as_address): Rename from
+	value_as_address.
+	(attribute::as_string): Rename from value_as_string.
+
+2020-09-29  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (partial_die_info::read) <case
+	DW_AT_linkage_name>: Use value_as_string.
+	(dwarf2_string_attr): Use value_as_string.
+	* dwarf2/attribute.h (struct attribute) <value_as_string>: Declare
+	method.
+	* dwarf2/attribute.c (attribute::value_as_string): New method.
+
+2020-09-29  Pedro Alves  <pedro@palves.net>
+
+	* unittests/enum-flags-selftests.c: Check whether __GNUC__ is
+	defined before using '#pragma GCC diagnostic' instead of checking
+	__clang__.
+
+2020-09-28  Tom Tromey  <tom@tromey.com>
+
+	* infrun.c (displaced_step_fixup, thread_still_needs_step_over)
+	(handle_signal_stop): Update.
+	* procfs.c (procfs_target::insert_watchpoint): Update.
+	* target.h (target_have_steppable_watchpoint): Now a function.
+
+2020-09-28  Tom Tromey  <tom@tromey.com>
+
+	* infrun.c (set_schedlock_func): Update.
+	* target.h (target_can_lock_scheduler): Now a function.
+
+2020-09-28  Tom Tromey  <tom@tromey.com>
+
+	* inferior.h (class inferior) <has_execution>: Update.
+	* windows-tdep.c (windows_solib_create_inferior_hook): Update.
+	* valops.c (find_function_in_inferior)
+	(value_allocate_space_in_inferior): Update.
+	* top.c (kill_or_detach): Update.
+	* target.c (target_preopen, set_target_permissions): Update.
+	(target_has_execution_current): Remove.
+	* sparc64-tdep.c (adi_examine_command, adi_assign_command):
+	Update.
+	* solib.c (update_solib_list, reload_shared_libraries): Update.
+	* solib-svr4.c (svr4_solib_create_inferior_hook): Update.
+	* solib-dsbt.c (enable_break): Update.
+	* score-tdep.c (score7_fetch_inst): Update.
+	* rs6000-nat.c (rs6000_nat_target::xfer_shared_libraries):
+	Update.
+	* remote.c (remote_target::start_remote)
+	(remote_target::remote_check_symbols, remote_target::open_1)
+	(remote_target::remote_detach_1, remote_target::verify_memory)
+	(remote_target::xfer_partial, remote_target::read_description)
+	(remote_target::get_min_fast_tracepoint_insn_len): Update.
+	* record-full.c (record_full_open_1): Update.
+	* record-btrace.c (record_btrace_target_open): Update.
+	* objc-lang.c (lookup_objc_class, lookup_child_selector)
+	(value_nsstring): Update.
+	* linux-thread-db.c (add_thread_db_info)
+	(thread_db_find_new_threads_silently, check_thread_db_callback)
+	(try_thread_db_load_1, record_thread): Update.
+	* linux-tdep.c (linux_info_proc, linux_vsyscall_range_raw):
+	Update.
+	* linux-fork.c (checkpoint_command): Update.
+	* infrun.c (set_non_stop, set_observer_mode)
+	(check_multi_target_resumption, for_each_just_stopped_thread)
+	(maybe_remove_breakpoints, normal_stop)
+	(class infcall_suspend_state): Update.
+	* infcmd.c (ERROR_NO_INFERIOR, kill_if_already_running)
+	(info_program_command, attach_command): Update.
+	* infcall.c (call_function_by_hand_dummy): Update.
+	* inf-loop.c (inferior_event_handler): Update.
+	* gcore.c (gcore_command, derive_heap_segment): Update.
+	* exec.c (exec_file_command): Update.
+	* eval.c (evaluate_subexp): Update.
+	* compile/compile.c (compile_to_object): Update.
+	* cli/cli-dump.c (restore_command): Update.
+	* breakpoint.c (update_watchpoint)
+	(update_inserted_breakpoint_locations)
+	(insert_breakpoint_locations, get_bpstat_thread): Update.
+	* target.h (target_has_execution): Remove macro.
+	(target_has_execution_current): Don't declare.
+	(target_has_execution): Rename from target_has_execution_1.  Add
+	argument default.
+
+2020-09-28  Tom Tromey  <tom@tromey.com>
+
+	* mi/mi-main.c (exec_reverse_continue)
+	(mi_cmd_list_target_features): Update.
+	* infrun.c (set_exec_direction_func): Update.
+	* target.c (default_execution_direction): Update.
+	* reverse.c (exec_reverse_once): Update.
+	* target.h (target_can_execute_reverse): Now a function.
+
+2020-09-28  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_get_register)
+	(tui_data_window::show_registers): Update.
+	* thread.c (scoped_restore_current_thread::restore)
+	(scoped_restore_current_thread::scoped_restore_current_thread):
+	Update.
+	* regcache-dump.c (regcache_print): Update.
+	* python/py-finishbreakpoint.c (bpfinishpy_detect_out_scope_cb):
+	Update.
+	* mi/mi-main.c (mi_cmd_data_write_register_values): Update.
+	* mep-tdep.c (current_me_module, current_options): Update.
+	* linux-thread-db.c (thread_db_load): Update.
+	* infcmd.c (registers_info, info_vector_command)
+	(info_float_command): Update.
+	* ia64-tdep.c (ia64_frame_prev_register)
+	(ia64_sigtramp_frame_prev_register): Update.
+	* ia64-libunwind-tdep.c (libunwind_frame_prev_register): Update.
+	* gcore.c (derive_stack_segment): Update.
+	* frame.c (get_current_frame, has_stack_frames): Update.
+	* findvar.c (language_defn::read_var_value): Update.
+	* arm-tdep.c (arm_pc_is_thumb): Update.
+	* target.c (target_has_registers): Rename from
+	target_has_registers_1.
+	* target.h (target_has_registers): Remove macro.
+	(target_has_registers): Rename from target_has_registers_1.
+
+2020-09-28  Tom Tromey  <tom@tromey.com>
+
+	* windows-tdep.c (tlb_make_value): Update.
+	* tui/tui-regs.c (tui_data_window::show_registers): Update.
+	* thread.c (scoped_restore_current_thread::restore)
+	(scoped_restore_current_thread::scoped_restore_current_thread)
+	(thread_command): Update.
+	* stack.c (backtrace_command_1, frame_apply_level_command)
+	(frame_apply_all_command, frame_apply_command): Update.
+	* infrun.c (siginfo_make_value, restore_infcall_control_state):
+	Update.
+	* gcore.c (derive_stack_segment): Update.
+	* frame.c (get_current_frame, has_stack_frames): Update.
+	* auxv.c (info_auxv_command): Update.
+	* ada-tasks.c (ada_build_task_list): Update.
+	* target.c (target_has_stack): Rename from target_has_stack_1.
+	* target.h (target_has_stack): Remove macro.
+	(target_has_stack): Rename from target_has_stack_1.
+
+2020-09-28  Tom Tromey  <tom@tromey.com>
+
+	* target.c (target_has_memory): Rename from target_has_memory_1.
+	* tui/tui-regs.c (tui_data_window::show_registers): Update.
+	* thread.c (scoped_restore_current_thread::restore)
+	(scoped_restore_current_thread::scoped_restore_current_thread):
+	Update.
+	* frame.c (get_current_frame, has_stack_frames): Update.
+	* target.h (target_has_memory): Remove macro.
+	(target_has_memory): Rename from target_has_memory_1.
+
+2020-09-28  Tom Tromey  <tom@tromey.com>
+
+	* target.c (target_has_all_memory_1): Remove.
+	* target.h (target_has_all_memory): Remove define.
+	(target_has_all_memory_1): Don't declare.
+
+2020-09-28  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* ser-base.c: Adjust comments formatting.
+
+2020-09-27  Tom Tromey  <tom@tromey.com>
+
+	PR tui/25342:
+	* tui/tui-io.c (tui_puts): Rewrite.  Move earlier.
+
+2020-09-27  Tom Tromey  <tom@tromey.com>
+
+	PR tui/25342:
+	* tui/tui-winsource.c (tui_copy_source_line): Use ISNCTRL.
+
+2020-09-27  Tom Tromey  <tom@tromey.com>
+
+	* unittests/tui-selftests.c: Update.
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<extra_margin, show_line_number, refresh_pad>: New methods.
+	<m_max_length, m_pad>: New members.
+	(tui_copy_source_line): Update.
+	* tui/tui-winsource.c (tui_copy_source_line): Remove line_no,
+	first_col, line_width, ndigits parameters.  Add length.
+	(tui_source_window_base::show_source_line): Write to pad.  Line
+	number now 0-based.
+	(tui_source_window_base::refresh_pad): New method.
+	(tui_source_window_base::show_source_content): Write to pad.  Call
+	refresh_pad.
+	(tui_source_window_base::do_scroll_horizontal): Call refresh_pad,
+	not refill.
+	(tui_source_window_base::update_exec_info): Call
+	show_line_number.
+	* tui/tui-source.h (struct tui_source_window) <extra_margin>: New
+	method.
+	<m_digits>: New member.
+	* tui/tui-source.c (tui_source_window::set_contents): Set m_digits
+	and m_max_length.
+	(tui_source_window::show_line_number): New method.
+	* tui/tui-io.h (tui_puts): Fix comment.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents): Set
+	m_max_length.
+
+2020-09-27  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c
+	(tui_source_window_base::set_is_exec_point_at): Don't call
+	show_source_line.
+
+2020-09-27  Tom Tromey  <tom@tromey.com>
+
+	* python/py-tui.c (class tui_py_window) <refresh_window>: New
+	method.
+	<erase>: Update.
+	<cursor_x, cursor_y>: Remove.
+	<m_inner_window>: New member.
+	(tui_py_window::rerender): Create inner window.
+	(tui_py_window::output): Write to inner window.
+
+2020-09-26  Gareth Rees <grees@undo.io>  (tiny change)
+
+	PR python/26586
+	* cli/cli-script.c (execute_control_commands): don't set
+	instream to nullptr here as this breaks the from_tty argument
+	to gdb.execute in Python.
+	(execute_user_command): set instream to nullptr here instead.
+
+2020-09-25  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.h (infrun_debug_printf): Fix formatting.
+	* linux-nat.c (linux_nat_debug_printf): Fix formatting.
+
+2020-09-25  Saagar Jha  <saagar@saagarjha.com>
+
+	* compile/compile-object-load.h (struct munmap_list): Add
+	explicitly-defined move constructor.
+
+2020-09-24  Tom Tromey  <tromey@adacore.com>
+
+	PR tui/26638:
+	* tui/tui-stack.h (struct tui_locator_window) <can_focus>: New
+	method.
+	* tui/tui-data.h (struct tui_win_info) <can_focus>: New method.
+	* tui/tui-data.c (tui_next_win): Exclude non-focusable windows.
+	(tui_prev_win): Rewrite.
+
+2020-09-23  Hannes Domani  <ssbssa@yahoo.de>
+
+	* nat/windows-nat.c (handle_exception): Handle 64bit breakpoints
+	in WOW64 processes as SIGINT.
+	* nat/windows-nat.h: Make wow64_process a shared variable.
+	* windows-nat.c: Remove static wow64_process variable.
+
+2020-09-23  Tom Tromey  <tom@tromey.com>
+
+	PR symtab/25470:
+	* value.c (unpack_long, pack_long, pack_unsigned_long): Handle bit
+	offset and bit size.
+	* printcmd.c (print_scalar_formatted): Handle zero-length
+	integer.
+	(print_scalar_formatted): Use bit_size_differs_p.
+	* gdbtypes.h (enum type_specific_kind) <TYPE_SPECIFIC_INT>: New
+	constant.
+	(union type_specific): <int_stuff>: New member.
+	(struct type) <bit_size_differs_p, bit_size, bit_offset>: New
+	methods.
+	* gdbtypes.c (init_integer_type, init_boolean_type): Initialize
+	TYPE_SPECIFIC_FIELD.
+	(recursive_dump_type, copy_type_recursive): Update.
+	* dwarf2/read.c (read_base_type): Handle DW_AT_bit_size and
+	DW_AT_data_bit_offset.
+
+2020-09-23  Tom Tromey  <tom@tromey.com>
+
+	* utils.h (class gdb_argv): Add move operators.
+	<append>: New methods.
+	* compile/compile.c (build_argc_argv): Remove.
+	(compile_args_argc): Remove.
+	(compile_args_argv): Change type.
+	(set_compile_args): Simplify.
+	(append_args): Remove.
+	(filter_args): Remove argcp parameter.
+	(get_args): Return gdb_argv.  Simplify.
+	(compile_to_object): Update.
+
+2020-09-23  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile-object-run.c (do_module_cleanup)
+	<~do_module_cleanup> :Remove.
+	(do_module_cleanup): Update.
+	* compile/compile-object-load.h (struct munmap_list): Add move
+	assignment operator.
+	<source_file>: Now a std::string.
+	<munmap_list>: Rename.  No longer a pointer.
+	* compile/compile-object-load.c (struct setup_sections_data): Add
+	constructor.
+	<setup_one_section>: Declare.
+	<munmap_list>: Move earlier.
+	<m_bfd>: New member.
+	<m_last_size, m_last_section_first, m_last_prot,
+	m_last_max_alignment>: Rename, add initializers where needed.
+	(setup_sections_data::setup_one_section): Rename from
+	setup_sections.  Update.
+	(compile_object_load): Update.  Don't use bfd_map_over_sections.
+
+2020-09-23  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile-object-run.c (struct do_module_cleanup): Add
+	parameters to constructor.  Update destructor.
+	<source_file, scope, scope_data, out_value_type, out_value_addr,
+	munmap_list_head, objfile_name_string>: Remove.
+	<module>: New member.
+	(do_module_cleanup): Update.
+	(compile_object_run): Update.
+
+2020-09-23  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile.c (eval_compile_command): Update.
+	* compile/compile-object-run.h (compile_object_run): Take a
+	compile_module_up.
+	* compile/compile-object-run.c (compile_object_run): Take a
+	compile_module_up.
+	* compile/compile-object-load.h (struct compile_module): Add
+	constructor, destructor.
+	(compile_module_up): New typedef.
+	(compile_object_load): Return compile_object_up.
+	* compile/compile-object-load.c (compile_object_load): Return
+	compile_module_up.
+
+2020-09-23  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile-object-run.c (struct do_module_cleanup): Add
+	constructor, destructor.
+	<objfile_name_string>: Don't use struct hack.
+	(do_module_cleanup): Use delete.
+	(compile_object_run): Use new.
+
+2020-09-23  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile-cplus-types.c
+	(compile_cplus_convert_struct_or_union): Use std::vector.
+	(compile_cplus_convert_func): Likewise.
+	* compile/compile-c-types.c (convert_func): Use std::vector.
+
+2020-09-21  Tom Tromey  <tromey@adacore.com>
+
+	* sparc-tdep.c (sparc32_skip_prologue): Use
+	skip_prologue_using_sal.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* symfile.c (add_section_size_callback): Remove.
+	(load_one_section): Rename from load_section_callback.  Change
+	parameters.
+	(generic_load): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* exec.c (add_to_section_table): Remove.
+	(build_section_table): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* elfread.c (elf_locate_sections): Change parameters.
+	(elf_symfile_read): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* cli/cli-dump.c (struct callback_data): Remove.
+	(restore_one_section): Rename from restore_section_callback.
+	Change parameters.
+	(restore_binary_file): Change parameters.
+	(restore_command): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* gcore.c (make_output_phdrs): Remove 'ignored' parameter.
+	(gcore_copy_callback): Likewise.
+	(gcore_memory_sections): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* osabi.h (generic_elf_osabi_sniff_abi_tag_sections): Update.
+	* osabi.c (generic_elf_osabi_sniff_abi_tag_sections): Change
+	parameters.
+	(generic_elf_osabi_sniffer): Use foreach.
+	* mips-sde-tdep.c (mips_sde_elf_osabi_sniffer): Use foreach.
+	* arm-tdep.c (arm_elf_osabi_sniffer): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (locate_dwz_sections): Change parameters.
+	(dwarf2_get_dwz_file): Use foreach.
+	(dwarf2_locate_dwo_sections): Change parameters.
+	(open_and_init_dwo_file): Use foreach.
+	(dwarf2_locate_common_dwp_sections): Change parameters.
+	(open_and_init_dwp_file): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* symfile.h: (find_lowest_section): Don't declare.
+	* symfile.c (find_lowest_section): Now static.  Change
+	parameters.
+	(struct place_section_arg): Remove.
+	(place_section): Change parameters.
+	(addr_info_make_relative): Use foreach.
+	(symfile_dummy_outputs): Remove.
+	(default_symfile_relocate): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* objfiles.c (add_to_objfile_sections): Rename from
+	add_to_objfile_sections_full.
+	(add_to_objfile_sections): Remove.
+	(build_objfile_section_table): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* stap-probe.c (get_stap_base_address_1): Remove.
+	(get_stap_base_address): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* gdb_bfd.c (free_one_bfd_section): Remove 'abfd' and 'ignore'
+	parameters.
+	(gdb_bfd_close_or_warn): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* corelow.c (add_to_thread_list): Change parameters.
+	(core_target_open): Use foreach.
+
+2020-09-19  Tom Tromey  <tom@tromey.com>
+
+	* gdb_bfd.h (gdb_bfd_sections): New overload.  Fix formatting of
+	existing function.
+
+2020-09-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-valprint.c (f77_print_array_1): Adjust printing of whitespace
+	for arrays.
+
+2020-09-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* eval.c: Remove 'f-lang.h' include.
+	(value_f90_subarray): Moved to f-lang.c.
+	(eval_call): Renamed to...
+	(evaluate_subexp_do_call): ...this, is no longer static, header
+	comment moved into header file.
+	(evaluate_funcall): Update call to eval_call.
+	(skip_undetermined_arglist): Moved to f-lang.c.
+	(fortran_value_subarray): Likewise.
+	(evaluate_subexp_standard): OP_F77_UNDETERMINED_ARGLIST handling
+	moved to evaluate_subexp_f.
+	(calc_f77_array_dims): Moved to f-lang.c
+	* expprint.c (print_subexp_funcall): New function.
+	(print_subexp_standard): OP_F77_UNDETERMINED_ARGLIST handling
+	moved to print_subexp_f, OP_FUNCALL uses new function.
+	(dump_subexp_body_funcall): New function.
+	(dump_subexp_body_standard): OP_F77_UNDETERMINED_ARGLIST handling
+	moved to dump_subexp_f, OP_FUNCALL uses new function.
+	* expression.h (evaluate_subexp_do_call): Declare.
+	* f-lang.c (value_f90_subarray): Moved from eval.c.
+	(skip_undetermined_arglist): Likewise.
+	(calc_f77_array_dims): Likewise.
+	(fortran_value_subarray): Likewise.
+	(evaluate_subexp_f): Add OP_F77_UNDETERMINED_ARGLIST support.
+	(operator_length_f): Likewise.
+	(print_subexp_f): Likewise.
+	(dump_subexp_body_f): Likewise.
+	* fortran-operator.def (OP_F77_UNDETERMINED_ARGLIST): Move
+	declaration of this operation to here.
+	* parse.c (operator_length_standard): OP_F77_UNDETERMINED_ARGLIST
+	support moved to operator_length_f.
+	* parser-defs.h (dump_subexp_body_funcall): Declare.
+	(print_subexp_funcall): Declare.
+	* std-operator.def (OP_F77_UNDETERMINED_ARGLIST): Moved to
+	fortran-operator.def.
+
+2020-09-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* eval.c (fortran_value_subarray): New function, content is taken
+	from...
+	(evaluate_subexp_standard): ...here, in two places.  Now arrays
+	and strings both call the new function.
+	(calc_f77_array_dims): Add header comment, handle strings.
+
+2020-09-18  Victor Collod  <vcollod@nvidia.com>
+
+	PR gdb/26635
+	* i386-tdep.c (i386_skip_endbr): Add a helper function to skip endbr.
+	(i386_analyze_prologue): Call i386_skip_endbr.
+
+2020-09-18  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (struct windows_nat_target) <wait>: Update.
+	(windows_nat_target::wait): Update.
+	* target/wait.h (enum target_wait_flag): New.  Use
+	DEF_ENUM_FLAGS_TYPE.
+	* target/target.h (target_wait): Change type of options.
+	* target.h (target_options_to_string, default_target_wait):
+	Update.
+	(struct target_ops) <wait>: Change type of options.
+	* target.c (target_wait, default_target_wait, do_option): Change
+	type of "options".
+	(target_options_to_string): Likewise.
+	* target-delegates.c: Rebuild.
+	* target-debug.h (target_debug_print_target_wait_flags): Rename
+	from target_debug_print_options.
+	* sol-thread.c (class sol_thread_target) <wait>: Update.
+	(sol_thread_target::wait): Update.
+	* rs6000-nat.c (class rs6000_nat_target) <wait>: Update.
+	(rs6000_nat_target::wait): Update.
+	* remote.c (class remote_target) <wait, wait_ns, wait_as>:
+	Update.
+	(remote_target::wait_ns, remote_target::wait_as): Change type of
+	"options".
+	(remote_target::wait): Update.
+	* remote-sim.c (struct gdbsim_target) <wait>: Update.
+	(gdbsim_target::wait): Update.
+	* record-full.c (class record_full_base_target) <wait>: Update.
+	(record_full_wait_1): Change type of "options".
+	(record_full_base_target::wait): Update.
+	* record-btrace.c (class record_btrace_target) <wait>: Update.
+	(record_btrace_target::wait): Update.
+	* ravenscar-thread.c (struct ravenscar_thread_target) <wait>:
+	Update.
+	(ravenscar_thread_target::wait): Update.
+	* procfs.c (class procfs_target) <wait>: Update.
+	(procfs_target::wait): Update.
+	* obsd-nat.h (class obsd_nat_target) <wait>: Update.
+	* obsd-nat.c (obsd_nat_target::wait): Update.
+	* nto-procfs.c (struct nto_procfs_target) <wait>: Update.
+	(nto_procfs_target::wait): Update.
+	* nbsd-nat.h (struct nbsd_nat_target) <wait>: Update.
+	* nbsd-nat.c (nbsd_wait): Change type of "options".
+	(nbsd_nat_target::wait): Update.
+	* linux-thread-db.c (class thread_db_target) <wait>: Update.
+	(thread_db_target::wait): Update.
+	* linux-nat.h (class linux_nat_target) <wait>: Update.
+	* linux-nat.c (linux_nat_target::wait): Update.
+	(linux_nat_wait_1): Update.
+	* infrun.c (do_target_wait_1, do_target_wait): Change type of
+	"options".
+	* inf-ptrace.h (struct inf_ptrace_target) <wait>: Update.
+	* inf-ptrace.c (inf_ptrace_target::wait): Update.
+	* go32-nat.c (struct go32_nat_target) <wait>: Update.
+	(go32_nat_target::wait): Update.
+	* gnu-nat.h (struct gnu_nat_target) <wait>: Update.
+	* gnu-nat.c (gnu_nat_target::wait): Update.
+	* fbsd-nat.h (class fbsd_nat_target) <wait>: Update.
+	* fbsd-nat.c (fbsd_nat_target::wait): Update.
+	* darwin-nat.h (class darwin_nat_target) <wait>: Update.
+	* darwin-nat.c (darwin_nat_target::wait): Update.
+	* bsd-uthread.c (struct bsd_uthread_target) <wait>: Update.
+	(bsd_uthread_target::wait): Update.
+	* aix-thread.c (class aix_thread_target) <wait>: Update.
+	(aix_thread_target::wait): Update.
+
+2020-09-18  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* compile/compile-object-run.c (create_copied_type_recursive): New
+	function.
+	(compile_object_run): Use new function.
+
+2020-08-21  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* NEWS: Mention x86_64 Cygwin core file support.
+
+2020-07-01  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* windows-tdep.c (NOTE_INFO_MODULE, NOTE_INFO_MODULE64): Define.
+	(core_process_module_section): Handle NOTE_INFO_MODULE64.
+
+2020-07-01  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* windows-tdep.h: Add prototypes.
+	* i386-windows-tdep.c(windows_core_xfer_shared_libraries): Move.
+	(i386_windows_core_pid_to_str): Move and rename ...
+	* windows-tdep.c (windows_core_xfer_shared_libraries): ... to here
+	(windows_core_pid_to_str): ... and here.
+	* amd64-windows-tdep.c (amd64_windows_init_abi_common): Register here.
+
+2020-07-01  Jon Turney  <jon.turney@dronecode.org.uk>
+	* amd64-windows-tdep.c(amd64_windows_gregset_reg_offset): Add.
+	(amd64_windows_init_abi_common): ... and register.
+
+2020-07-01  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* amd64-windows-tdep.c (amd64_cygwin_core_osabi_sniffer): New.
+	(_initialize_amd64_windows_tdep): Register amd64_cygwin_core_osabi_sniffer.
+
+2020-09-18  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26631
+	* thread.c (thread_find_command): Switch inferior before calling
+	target methods.
+
+2020-09-17  Tom Tromey  <tromey@adacore.com>
+
+	* tic6x-tdep.c (tic6x_gdbarch_init): Update.
+	* target-descriptions.h (struct tdesc_arch_data_deleter): New.
+	(tdesc_arch_data_up): New typedef.
+	(tdesc_use_registers, tdesc_data_alloc): Update.
+	(tdesc_data_cleanup): Don't declare.
+	* target-descriptions.c (tdesc_data_alloc): Return a
+	tdesc_arch_data_up.
+	(tdesc_arch_data_deleter::operator()): Rename from
+	tdesc_data_cleanup.  Change argument type.
+	(tdesc_use_registers): Change early_data to an rvalue reference.
+	(tdesc_use_registers): Don't use delete.
+	* sparc-tdep.c (sparc32_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* rx-tdep.c (rx_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* riscv-tdep.c (riscv_gdbarch_init): Update.
+	* or1k-tdep.c (or1k_gdbarch_init): Update.
+	* nios2-tdep.c (nios2_gdbarch_init): Update.
+	* nds32-tdep.c (nds32_gdbarch_init): Update.
+	* mips-tdep.c (mips_gdbarch_init): Update.
+	* microblaze-tdep.c (microblaze_gdbarch_init): Update.
+	* m68k-tdep.c (m68k_gdbarch_init): Update.
+	* i386-tdep.c (i386_gdbarch_init): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* arc-tdep.c (arc_tdesc_init): Update.
+	(arc_gdbarch_init): Update.
+	* aarch64-tdep.c (aarch64_gdbarch_init): Update.
+
+2020-09-17  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-nat.c (ctrl_c_handler): Use 32bit DbgUiRemoteBreakin
+	for WOW64 processes.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (compute_compunit_symtab_includes): Use htab_up.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* value.c (preserve_values): Update.
+	* python/py-type.c (save_objfile_types): Update.
+	* guile/scm-type.c (save_objfile_types): Update.
+	* gdbtypes.h (create_copied_types_hash): Return htab_up.
+	* gdbtypes.c (create_copied_types_hash): Return htab_up.
+	* compile/compile-object-run.c (compile_object_run): Update.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* typeprint.h (class typedef_hash_table) <~typedef_hash_table>:
+	Remove.
+	<m_table>: Now htab_up.
+	* typeprint.c (typedef_hash_table::recursively_update)
+	(typedef_hash_table::add_template_parameters)
+	(typedef_hash_table::typedef_hash_table): Update.
+	(typedef_hash_table::~typedef_hash_table): Remove.
+	(typedef_hash_table::typedef_hash_table)
+	(typedef_hash_table::find_global_typedef)
+	(typedef_hash_table::find_typedef): Update.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* target-descriptions.c (tdesc_use_registers): Use htab_up.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* linespec.c (class decode_compound_collector)
+	<~decode_compound_collector>: Remove.
+	<m_unique_syms>: Now htab_up.
+	(decode_compound_collector::operator ()): Update.
+	(class symtab_collector) <~symtab_collector>: Remove.
+	<m_symtab_table>: Now htab_up.
+	(symtab_collector::operator ()): Update.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* filename-seen-cache.c (filename_seen_cache::filename_seen_cache)
+	(filename_seen_cache::clear): Update.
+	(~filename_seen_cache): Remove.
+	(filename_seen_cache::seen): Update.
+	* filename-seen-cache.h (class filename_seen_cache) <m_tab>: Now
+	htab_up.
+	<~filename_seen_cache>: Remove.
+	<traverse>: Update.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* completer.c (completion_tracker::discard_completions)
+	(completion_tracker::~completion_tracker)
+	(completion_tracker::maybe_add_completion)
+	(completion_tracker::remove_completion)
+	(completion_tracker::recompute_lowest_common_denominator)
+	(completion_tracker::build_completion_result): Update.
+	* completer.h (class completion_tracker) <have_completions>:
+	Update.
+	<m_entries_hash>: Now htab_up.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* breakpoint.c (ambiguous_names_p): Use htab_up.
+
+2020-09-17  Tom Tromey  <tom@tromey.com>
+
+	* auto-load.c (struct auto_load_pspace_info)
+	<~auto_load_pspace_info, auto_load_pspace_info>: Remove.
+	<loaded_script_files, loaded_script_texts>: Change type to
+	htab_up.
+	(~auto_load_pspace_info) Remove.
+	(init_loaded_scripts_info, maybe_add_script_file)
+	(maybe_add_script_text, auto_load_info_scripts): Update.
+
+2020-09-17  Tom Tromey  <tromey@adacore.com>
+
+	* c-exp.y (name_obstack): Now static.
+
+2020-09-17  Chungyi Chi  <demonic@csie.io>
+
+	* riscv-tdep.c (riscv-insn::decode): Fix recorded insn type.
+
+2020-09-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* breakpoint.h (init_catchpoint): Change int parameter to bool.
+	(add_solib_catchpoint): Likewise.
+	* breakpoint.c (struct solib_catchpoint) <is_load>: Change type
+	to bool.
+	(add_solib_catchpoint): Change int parameter/variable to bool.
+	(catch_load_or_unload): Likewise.
+	(init_catchpoint): Likewise.
+	(create_fork_vfork_event_catchpoint): Likewise.
+	(catch_fork_command_1): Likewise.
+	(catch_exec_command_1): Likewise.
+
+2020-09-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdb-gdb.py.in (class StructTypePrettyPrinter) <to_string>:
+	Change instance_flags to m_instance_flags.
+
+2020-09-16  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/26598:
+	* infrun.c (fill_in_stop_func): Use find_pc_partial_function_sym.
+
+2020-09-16  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.c (fbsd_nat_target::wait): Always check for
+	PL_FLAG_EXEC.
+	(fbsd_nat_target::insert_exec_catchpoint)
+	(fbsd_nat_target::remove_exec_catchpoint): Always define.
+	* fbsd-nat.h (fbsd_nat_target::insert_exec_catchpoint)
+	(fbsd_nat_target::remove_exec_catchpoint): Always declare.
+
+2020-09-16  John Baldwin  <jhb@FreeBSD.org>
+
+	* configure.ac: Remove check for kinfo_getvmmap().
+	* configure, config.in: Regenerate.
+	* fbsd-nat.c (fbsd_read_mapping): Remove
+	(fbsd_nat_target::find_memory_regions): Remove the procfs version.
+	(fbsd_nat_target::info_proc): Assume kinfo_getfile() and
+	kinfo_get_vmmap() are always present.
+
+2020-09-16  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.c: Always include support for
+	TARGET_OBJECT_SIGNAL_INFO.
+
+2020-09-16  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.c (fbsd_nat_target::pid_to_exec_file): Always use
+	sysctl and remove procfs fallback.
+
+2020-09-16  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.c: Assume PT_LWPINFO is always defined.
+	* fbsd-nat.h: Likewise.
+
+2020-09-16  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* breakpoint.c (commands_command_1): Make a copy of the 'arg'
+	argument.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete.
+	(ada_language): Remove references to ada_language_data.
+	* c-lang.c (c_language_data): Delete.
+	(c_language): Remove references to c_language_data.
+	(cplus_language_data): Delete.
+	(cplus_language): Remove references to cplus_language_data.
+	(asm_language_data): Delete.
+	(asm_language): Remove references to asm_language_data.
+	(minimal_language_data): Delete.
+	(minimal_language): Remove references to minimal_language_data.
+	* d-lang.c (d_language_data): Delete.
+	(d_language): Remove references to d_language_data.
+	* f-lang.c (f_language_data): Delete.
+	(f_language): Remove references to f_language_data.
+	* go-lang.c (go_language_data): Delete.
+	(go_language): Remove references to go_language_data.
+	* language.c (unknown_language_data): Delete.
+	(unknown_language): Remove references to unknown_language_data.
+	(auto_language_data): Delete.
+	(auto_language): Remove references to auto_language_data.
+	* language.h (language_data): Delete struct.
+	(language_defn): No longer inherit from language_data.
+	* m2-lang.c (m2_language_data): Delete.
+	(m2_language): Remove references to m2_language_data.
+	* objc-lang.c (objc_language_data): Delete.
+	(objc_language): Remove references to objc_language_data.
+	* opencl-lang.c (opencl_language_data): Delete.
+	(opencl_language): Remove references to opencl_language_data.
+	* p-lang.c (pascal_language_data): Delete.
+	(pascal_language): Remove references to pascal_language_data.
+	* rust-lang.c (rust_language_data): Delete.
+	(rust_language): Remove references to rust_language_data.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_op_print_tab
+	initializer.
+	(ada_language::opcode_print_table): New member function.
+	* c-lang.c (c_language_data): Remove la_op_print_tab initializer.
+	(c_language::opcode_print_table): New member function.
+	(cplus_language_data): Remove la_op_print_tab initializer.
+	(cplus_language::opcode_print_table): New member function.
+	(asm_language_data): Remove la_op_print_tab initializer.
+	(asm_language::opcode_print_table): New member function.
+	(minimal_language_data): Remove la_op_print_tab initializer.
+	(minimal_language::opcode_print_table): New member function.
+	* d-lang.c (d_language_data): Remove la_op_print_tab initializer.
+	(d_language::opcode_print_table): New member function.
+	* expprint.c (print_subexp_standard): Update call to
+	opcode_print_table.
+	(op_string): Likewise.
+	* f-lang.c (f_language_data): Remove la_op_print_tab initializer.
+	(f_language::opcode_print_table): New member function.
+	* go-lang.c (go_language_data): Remove la_op_print_tab
+	initializer.
+	(go_language::opcode_print_table): New member function.
+	* language.c (unknown_language_data): Remove la_op_print_tab
+	initializer.
+	(unknown_language::opcode_print_table): New member function.
+	(auto_language_data): Remove la_op_print_tab initializer.
+	(auto_language::opcode_print_table): New member function.
+	* language.h (language_data): Remove la_op_print_tab field.
+	(language_defn::opcode_print_table): Declare new member function.
+	* m2-lang.c (m2_language_data): Remove la_op_print_tab
+	initializer.
+	(m2_language::opcode_print_table): New member function.
+	* objc-lang.c (objc_language_data): Remove la_op_print_tab
+	initializer.
+	(objc_language::opcode_print_table): New member function.
+	* opencl-lang.c (opencl_language_data): Remove la_op_print_tab
+	initializer.
+	(opencl_language::opcode_print_table): New member function.
+	* p-lang.c (pascal_language_data): Remove la_op_print_tab
+	initializer.
+	(pascal_language::opcode_print_table): New member function.
+	* rust-lang.c (rust_language_data): Remove la_op_print_tab
+	initializer.
+	(rust_language::opcode_print_table): New member function.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_exp_desc initializer.
+	(ada_language::expression_ops): New member function.
+	* c-lang.c (c_language_data): Remove la_exp_desc initializer.
+	(c_language::expression_ops): New member function.
+	(cplus_language_data): Remove la_exp_desc initializer.
+	(cplus_language::expression_ops): New member function.
+	(asm_language_data): Remove la_exp_desc initializer.
+	(asm_language::expression_ops): New member function.
+	(minimal_language_data): Remove la_exp_desc initializer.
+	(minimal_language::expression_ops): New member function.
+	* d-lang.c (d_language_data): Remove la_exp_desc initializer.
+	(d_language::expression_ops): New member function.
+	* eval.c (evaluate_subexp): Update call to expression_ops.
+	* expprint.c (print_subexp): Likewise.
+	(op_name): Likewise.
+	(dump_subexp_body): Likewise.
+	* f-lang.c (f_language_data): Remove la_exp_desc initializer.
+	(f_language::expression_ops): New member function.
+	* go-lang.c (go_language_data): Remove la_exp_desc initializer.
+	(go_language::expression_ops): New member function.
+	* language.c (language_defn::expression_ops): New function.
+	(unknown_language_data): Remove la_exp_desc initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Remove la_exp_desc field.
+	(language_defn::expression_ops): Declare new member function.
+	* m2-lang.c (m2_language_data): Remove la_exp_desc initializer.
+	(m2_language::expression_ops): New member function.
+	* objc-lang.c (objc_language_data): Remove la_exp_desc
+	initializer.
+	* opencl-lang.c (opencl_language_data): Remove la_exp_desc
+	initializer.
+	(opencl_language::expression_ops): New member function.
+	* p-lang.c (pascal_language_data): Remove la_exp_desc initializer.
+	* parse.c (operator_length): Update call to expression_ops.
+	(exp_iterate): Likewise.
+	* rust-lang.c (rust_language_data): Remove la_exp_desc
+	initializer.
+	(ruse_language::expression_ops): New member function.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_varobj_ops
+	initializer.
+	(ada_language::varobj_ops): New member function.
+	* c-lang.c (c_language_data): Remove la_varobj_ops
+	initializer.
+	(cplus_language_data): Likewise.
+	(cplus_language::varobj_ops): New member function.
+	(asm_language_data): Remove la_varobj_ops initializer.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (language_defn::varobj_ops): New function.
+	(unknown_language_data): Remove la_varobj_ops
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Remove la_varobj_ops field.
+	(language_defn::varobj_ops): Declare new member function.
+	* m2-lang.c (m2_language_data): Remove la_varobj_ops initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	* varobj.c (varobj_create): Update call to varobj_ops.
+	* varobj.h (default_varobj_ops): Delete define.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_macro_expansion
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(c_language::macro_expansion): New member function.
+	(cplus_language_data): Likewise.
+	(cplus_language::macro_expansion): New member function.
+	(asm_language_data): Likewise.
+	(asm_language::macro_expansion): New member function.
+	(minimal_language_data): Likewise.
+	(minimal_language::macro_expansion): New member function.
+	* d-lang.c (d_language_data): Remove la_macro_expansion
+	initializer.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Remove la_macro_expansion field.
+	(language_defn::macro_expansion): New member function.
+	* m2-lang.c (m2_language_data): Remove la_macro_expansion
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	(objc_language::macro_expansion): New member function.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	(opencl_language::macro_expansion): New member function.
+	* p-lang.c (pascal_language_data): Remove la_macro_expansion
+	initializer.
+	* rust-lang.c (rust_language_data): Likewise.
+	* symtab.c (default_collect_symbol_completion_matches_break_on):
+	Update call to macro_expansion.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_array_ordering
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* dwarf2/read.c (read_array_order): Update for call to
+	array_ordering.
+	* f-lang.c (f_language_data): Remove la_array_ordering
+	initializer.
+	(f_language::array_ordering): New member function.
+	* go-lang.c (go_language_data): Remove la_array_ordering
+	initializer.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_array_ordering field.
+	(language_defn::array_ordering): New member function.
+	* m2-lang.c (m2_language_data): Remove la_array_ordering
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_case_sensitivity
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	(f_language::case_sensitivity): New member function.
+	* go-lang.c (go_language_data): Remove la_case_sensitivity
+	initializer.
+	* language.c (enum case_mode): Moved here from language.h.
+	(case_mode): Make static.
+	(show_case_command): Update for case_sensitivity being a method.
+	(set_case_command): Likewise.
+	(set_range_case): Likewise.
+	(unknown_language_data): Remove la_case_sensitivity initializer.
+	(auto_language_data): Likewise.
+	* language.h (case_mode): Delete, move enum declaration to
+	language.c.
+	(language_data): Delete la_case_sensitivity field.
+	(language_defn::case_sensitivity): New member function.
+	* m2-lang.c (m2_language_data): Remove la_case_sensitivity
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_range_check
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	(f_language::range_checking_on_by_default): New member function.
+	* go-lang.c (go_language_data): Remove la_range_check initializer.
+	* language.c (enum range_mode): Moved here from language.h.
+	(range_mode): Made static.
+	(show_range_command): Update to use
+	range_checking_on_by_default.
+	(set_range_command): Likewise.
+	(set_range_case): Likewise.
+	(unknown_language_data): Remove la_range_check initializer.
+	(auto_language_data): Likewise.
+	* language.h (range_mode): Delete.  Enum definition moved to
+	language.c.
+	(language_data): Remove la_range_check field.
+	(language_defn::range_checking_on_by_default): New member
+	function.
+	* m2-lang.c (m2_language_data): Remove la_range_check initializer.
+	(m2_language::range_checking_on_by_default): New member function.
+	* objc-lang.c (objc_language_data): Remove la_range_check
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	(pascal_language::range_checking_on_by_default): New member
+	function.
+	* rust-lang.c (rust_language_data): Remove la_range_check
+	initializer.
+	(rust_language::range_checking_on_by_default): New member
+	function.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2/read.c (dwarf2_physname): Remove special case for
+	language_go.
+	* go-lang.c (go_language::store_sym_names_in_linkage_form_p): New
+	member function.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove
+	la_store_sym_names_in_linkage_form_p initializer.
+	(ada_language::store_sym_names_in_linkage_form_p): New member
+	function.
+	* c-lang.c (c_language_data): Remove
+	la_store_sym_names_in_linkage_form_p initializer.
+	(c_language::store_sym_names_in_linkage_form_p): New member
+	function.
+	(cplus_language_data): Remove la_store_sym_names_in_linkage_form_p
+	initializer.
+	(asm_language_data): Likewise.
+	(asm_language::store_sym_names_in_linkage_form_p): New member
+	function.
+	(minimal_language_data): Remove
+	la_store_sym_names_in_linkage_form_p initializer.
+	(minimal_language::store_sym_names_in_linkage_form_p): New member
+	function.
+	* d-lang.c (d_language_data): Remove
+	la_store_sym_names_in_linkage_form_p initializer.
+	* dwarf2/read.c (dwarf2_physname): Update call to
+	store_sym_names_in_linkage_form_p.
+	* f-lang.c (f_language_data): Remove
+	la_store_sym_names_in_linkage_form_p initializer.
+	* go-lang.c (go_language_data): Remove
+	la_store_sym_names_in_linkage_form_p initializer.
+	* language.c (unknown_language_data): Remove
+	la_store_sym_names_in_linkage_form_p initializer.
+	(unknown_language::store_sym_names_in_linkage_form_p): New member
+	function.
+	(auto_language_data): Remove la_store_sym_names_in_linkage_form_p
+	initializer.
+	(auto_language::store_sym_names_in_linkage_form_p): New member
+	function.
+	* language.h (language_data): Remove
+	la_store_sym_names_in_linkage_form_p member variable.
+	(language_defn::store_sym_names_in_linkage_form_p): New member
+	function.
+	* m2-lang.c (m2_language_data): Remove
+	la_store_sym_names_in_linkage_form_p initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove string_lower_bound
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Remove string_lower_bound field.
+	(language_defn::string_lower_bound): New member function.
+	* m2-lang.c (m2_language_data): Remove string_lower_bound
+	initializer.
+	(m2_language::string_lower_bound): New member function.
+	* objc-lang.c (objc_language_data): Remove string_lower_bound
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	* valops.c (value_cstring): Update call to string_lower_bound.
+	(value_string): Likewise.
+	* value.c (allocate_repeated_value): Likewise.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* valops.c (value_repeat): Fix incorrect argument name in comment.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove c_style_arrays
+	initializer.
+	(ada_language::c_style_arrays_p): New member fuction.
+	* c-lang.c (c_language_data): Remove c_style_arrays
+	initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* eval.c (ptrmath_type_p): Update call to c_style_arrays_p.
+	* f-lang.c (f_language_data): Remove c_style_arrays initializer.
+	(f_language::c_style_arrays_p): New member function.
+	* go-lang.c (go_language_data): Remove c_style_arrays initializer.
+	* infcall.c (value_arg_coerce): Update call to c_style_arrays_p.
+	* language.c (unknown_language_data): Remove c_style_arrays
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Remove c_style_arrays field.
+	(language_defn::c_style_arrays_p): New member function.
+	* m2-lang.c (m2_language_data): Remove c_style_arrays initializer.
+	(m2_language::c_style_arrays_p): New member function.
+	* objc-lang.c (objc_language_data): Remove c_style_arrays
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	* valarith.c (value_subscript): Update call to c_style_arrays_p,
+	and update local variable to a bool.
+	* valops.c (value_cast): Update call to c_style_arrays_p.
+	(value_array): Likewise.
+	* value.c (coerce_array): Likewise.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_language initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Remove la_language field.
+	(language_defn::language_defn): Initialise la_language field.
+	(language_defn::la_language): New member variable.
+	* m2-lang.c (m2_language_data): Remove la_language field.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_extensions): Delete, moved into
+	ada_language::filename_extensions.
+	(ada_language_data): Remove la_filename_extensions initializer.
+	(ada_language::filename_extensions): New member function.
+	* c-lang.c (c_extensions): Delete, moved into
+	c_language::filename_extensions.
+	(c_language_data): Remove la_filename_extensions initializer.
+	(c_language::filename_extensions): New member function.
+	(cplus_extensions): Delete, moved into
+	cplus_language::filename_extensions.
+	(cplus_language_data): Remove la_filename_extensions initializer.
+	(cplus_language::filename_extensions): New member function.
+	(asm_extensions): Delete, moved into
+	asm_language::filename_extensions.
+	(asm_language_data): Remove la_filename_extensions initializer.
+	(asm_language::filename_extensions): New member function.
+	(minimal_language_data): Remove la_filename_extensions
+	initializer.
+	* d-lang.c (d_extensions): Delete, moved into
+	d_language::filename_extensions.
+	(d_language_data): Remove la_filename_extensions initializer.
+	(d_language::filename_extensions): New member function.
+	* f-lang.c (f_extensions): Delete, moved into
+	f_language::filename_extensions.
+	(f_language_data): Remove la_filename_extensions initializer.
+	(f_language::filename_extensions): New member function.
+	* go-lang.c (go_language_data): Remove la_filename_extensions
+	initializer.
+	* language.c (add_set_language_command): Update now that
+	filename_extensions returns a vector.
+	(unknown_language_data): Remove la_filename_extensions
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Remove la_filename_extensions field.
+	(language_defn::filename_extensions): New member function.
+	* m2-lang.c (m2_language_data): Remove la_filename_extensions
+	initializer.
+	* objc-lang.c (objc_extensions): Delete, moved into
+	objc_language::filename_extensions.
+	(objc_language_data): Remove la_filename_extensions initializer.
+	(objc_language::filename_extensions): New member function.
+	* opencl-lang.c (opencl_language_data): Remove
+	la_filename_extensions initializer.
+	* p-lang.c (pascal_extensions): Delete, moved into
+	pascal_language::filename_extensions.
+	(pascal_language_data): Remove la_filename_extensions initializer.
+	(pascal_language::filename_extensions): New member function.
+	* rust-lang.c (rust_extensions): Delete, moved into
+	rust_language::filename_extensions.
+	(rust_language_data): Remove la_filename_extensions initializer.
+	(rust_language::filename_extensions): New member function.
+	* symfile.c (add_filename_language): Add new assert.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_name and
+	la_natural_name initializers.
+	(ada_language::name): New member function.
+	(ada_language::natural_name): New member function.
+	* c-lang.c (c_language_data): Remove la_name and
+	la_natural_name initializers.
+	(c_language::name): New member function.
+	(c_language::natural_name): New member function.
+	(cplus_language_data): Remove la_name and
+	la_natural_name initializers.
+	(cplus_language::name): New member function.
+	(cplus_language::natural_name): New member function.
+	(asm_language_data): Remove la_name and
+	la_natural_name initializers.
+	(asm_language::name): New member function.
+	(asm_language::natural_name): New member function.
+	(minimal_language_data): Remove la_name and
+	la_natural_name initializers.
+	(minimal_language::name): New member function.
+	(minimal_language::natural_name): New member function.
+	* compile/compile.c (compile_to_object): Update call to
+	lanugage_defn::name.
+	* d-lang.c (d_language_data): Remove la_name and
+	la_natural_name initializers.
+	(d_language::name): New member function.
+	(d_language::natural_name): New member function.
+	* expprint.c (print_subexp_standard): Update call to
+	language_defn::name.
+	(dump_raw_expression): Likewise
+	(dump_prefix_expression): Likewise.
+	* f-lang.c (f_language_data): Remove la_name and
+	la_natural_name initializers.
+	(f_language::name): New member function.
+	(f_language::natural_name): New member function.
+	* go-lang.c (go_language_data): Remove la_name and
+	la_natural_name initializers.
+	(go_language::name): New member function.
+	(go_language::natural_name): New member function.
+	* language.c (show_language_command): Update call to
+	language_defn::name.
+	(set_language_command): Likewise.
+	(language_enum): Likewise.
+	(language_str): Likewise.
+	(add_set_language_command): Likewise, use
+	language_defn::natural_name in the doc string.
+	(unknown_language_data): Remove la_name and
+	la_natural_name initializers.
+	(unknown_language::name): New member function.
+	(unknown_language::natural_name): New member function.
+	(auto_language_data): Remove la_name and
+	la_natural_name initializers.
+	(auto_language::name): New member function.
+	(auto_language::natural_name): New member function.
+	(language_lookup_primitive_type_as_symbol): Update call to
+	language_defn::name.
+	* language.h (language_data): Remove la_name and la_natural_name
+	member variables.
+	(language_defn::name): New member function.
+	(language_defn::natural_name): New member function.
+	* m2-lang.c (m2_language_data): Remove la_name and
+	la_natural_name initializers.
+	(m2_language::name): New member function.
+	(m2_language::natural_name): New member function.
+	* mi/mi-cmd-var.c (mi_cmd_var_info_expression): Update call to
+	language_defn::natural_name.
+	* objc-lang.c (objc_language_data): Remove la_name and
+	la_natural_name initializers.
+	(objc_language::name): New member function.
+	(objc_language::natural_name): New member function.
+	* opencl-lang.c (opencl_language_data): Remove la_name and
+	la_natural_name initializers.
+	(opencl_language::name): New member function.
+	(opencl_language::natural_name): New member function.
+	* p-lang.c (pascal_language_data): Remove la_name and
+	la_natural_name initializers.
+	(pascal_language::name): New member function.
+	(pascal_language::natural_name): New member function.
+	* rust-lang.c (rust_language_data): Remove la_name and
+	la_natural_name initializers.
+	(rust_language::name): New member function.
+	(rust_language::natural_name): New member function.
+	* symtab.c (lookup_language_this): Update call to
+	language_defn::name.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove la_name_of_this
+	initializer.
+	* ax-gdb.c (gen_expr): Update call to name_of_this.
+	* c-exp.y (classify_name): Likewise.
+	* c-lang.c (c_language_data): Remove la_name_of_this initializer.
+	(cplus_language_data): Likewise.
+	(cplus_language::name_of_this): New member function.
+	(asm_language_data): Remove la_name_of_this initializer.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	(d_language::name_of_this): New member function.
+	* expprint.c (print_subexp_standard): Update call to name_of_this.
+	* f-lang.c (f_language_data): Remove la_name_of_this initializer.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(unknown_language::name_of_this): New member function.
+	(auto_language_data): Remove la_name_of_this initializer.
+	(auto_language::name_of_this): New member function.
+	* language.h (language_data): Delete la_name_of_this member
+	variable.
+	(language_defn::name_of_this): New member function.
+	* m2-lang.c (m2_language_data): Remove la_name_of_this
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	(objc_language::name_of_this): New member function.
+	* opencl-lang.c (opencl_language_data): Remove la_name_of_this
+	initializer.
+	* p-lang.c (pascal_language_data): Likewise.
+	(pascal_language::name_of_this): New member function.
+	* rust-lang.c (rust_language_data): Remove la_name_of_this
+	initializer.
+	* symtab.c (lookup_language_this): Update call to name_of_this.
+	(lookup_symbol_aux): Likewise.
+	* valops.c (value_of_this): Likewise.
+
+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Remove
+	la_struct_too_deep_ellipsis initializer.
+	(ada_language::struct_too_deep_ellipsis): New member function.
+	* c-lang.c (c_language_data): Remove la_struct_too_deep_ellipsis
+	initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* cp-valprint.c (cp_print_value): Update call to
+	struct_too_deep_ellipsis.
+	* d-lang.c (d_language_data): Remove la_struct_too_deep_ellipsis
+	initializer.
+	* f-lang.c (f_language_data): Likewise.
+	(f_language::struct_too_deep_ellipsis): New member function.
+	* go-lang.c (go_language_data): Remove la_struct_too_deep_ellipsis
+	initializer.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_struct_too_deep_ellipsis
+	member variable.
+	(language_defn::struct_too_deep_ellipsis): New member function.
+	* m2-lang.c (m2_language_data): Remove la_struct_too_deep_ellipsis
+	initializer.Q
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	* valprint.c (val_print_check_max_depth): Update call to
+	struct_too_deep_ellipsis.
+
+2020-09-16  Felix Willgerodt  <felix.willgerodt@intel.com>
+
+	* MAINTAINERS (Write After Approval): Add myself.
+
+2020-09-15  Tom Tromey  <tom@tromey.com>
+
+	* f-valprint.c (f_value_print_inner) <case TYPE_CODE_INT>:
+	Remove.
+
+2020-09-15  Tom Tromey  <tom@tromey.com>
+
+	* rust-lang.c (rust_value_print_inner): Remove TYPE_CODE_MEMBERPTR
+	and TYPE_CODE_METHODPTR cases.
+	* c-valprint.c (c_value_print_memberptr): Move to valprint.c.
+	(c_value_print_inner): Update.
+	* valprint.c (generic_value_print_memberptr): New function, from
+	c_value_print_memberptr.
+	(generic_value_print): Use it.  Call cplus_print_method_ptr.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* python/python-internal.h (PyInt_FromLong): Remove define.
+	* python/py-value.c (convert_value_from_python): Use
+	gdb_py_object_from_longest.
+	* python/py-type.c (typy_get_code): Use
+	gdb_py_object_from_longest.
+	* python/py-symtab.c (salpy_get_line): Use
+	gdb_py_object_from_longest.
+	* python/py-symbol.c (sympy_get_addr_class, sympy_line): Use
+	gdb_py_object_from_longest.
+	* python/py-record.c (recpy_gap_reason_code): Use
+	gdb_py_object_from_longest.
+	* python/py-record-btrace.c (recpy_bt_insn_size)
+	(recpy_bt_func_level, btpy_list_count): Use
+	gdb_py_object_from_longest.
+	* python/py-infthread.c (gdbpy_create_ptid_object): Use
+	gdb_py_object_from_longest.  Fix error handling.
+	* python/py-framefilter.c (bootstrap_python_frame_filters): Use
+	gdb_py_object_from_longest.
+	* python/py-frame.c (frapy_type, frapy_unwind_stop_reason): Use
+	gdb_py_object_from_longest.
+	* python/py-breakpoint.c (bppy_get_type, bppy_get_number)
+	(bppy_get_thread, bppy_get_task, bppy_get_hit_count)
+	(bppy_get_ignore_count): Use gdb_py_object_from_longest.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* python/python.c (gdbpy_parameter_value): Use
+	gdb_py_object_from_ulongest.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* python/py-infevents.c (create_register_changed_event_object):
+	Use gdb_py_object_from_longest.
+	* python/py-exitedevent.c (create_exited_event_object): Use
+	gdb_py_object_from_longest.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* python/python.c (gdbpy_parameter_value): Use
+	gdb_py_object_from_longest.
+	* python/py-type.c (convert_field, typy_range): Use
+	gdb_py_object_from_longest.
+	* python/py-tui.c (gdbpy_tui_width, gdbpy_tui_height): Use
+	gdb_py_object_from_longest.
+	* python/py-lazy-string.c (stpy_get_length): Use
+	gdb_py_object_from_longest.
+	* python/py-infthread.c (thpy_get_num, thpy_get_global_num): Use
+	gdb_py_object_from_longest.
+	* python/py-infevents.c (create_memory_changed_event_object): Use
+	gdb_py_object_from_longest.
+	* python/py-inferior.c (infpy_get_num): Use
+	gdb_py_object_from_longest.
+	(infpy_get_pid): Likewise.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* python/python-internal.h (gdb_py_long_from_ulongest): Remove
+	defines.
+	* python/py-value.c (valpy_long): Use
+	gdb_py_object_from_ulongest.
+	* python/py-symtab.c (salpy_get_pc): Use
+	gdb_py_object_from_ulongest.
+	(salpy_get_last): Likewise.
+	* python/py-record-btrace.c (recpy_bt_insn_pc): Use
+	gdb_py_object_from_ulongest.
+	* python/py-lazy-string.c (stpy_get_address): Use
+	gdb_py_object_from_ulongest.
+	* python/py-frame.c (frapy_pc): Use gdb_py_object_from_ulongest.
+	* python/py-arch.c (archpy_disassemble): Use
+	gdb_py_object_from_ulongest and gdb_py_object_from_longest.  Fix
+	error handling.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* python/python-internal.h (gdb_py_long_from_longest): Remove
+	defines.
+	* python/py-value.c (valpy_long): Use gdb_py_object_from_longest.
+	* python/py-type.c (convert_field, typy_get_sizeof): Use
+	gdb_py_object_from_longest.
+	* python/py-record-btrace.c (btpy_list_index): Use
+	gdb_py_object_from_longest.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* python/python-internal.h (PyInt_FromSsize_t): Remove define.
+	* python/py-record.c (recpy_element_number): Use
+	gdb_py_object_from_longest.
+	(recpy_gap_number): Likewise.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* top.c (ui::ui): Update.
+	(highest_ui_num): Remove.
+	* top.h (struct ui) <num>: Remove.
+
+2020-09-15  Tom Tromey  <tromey@adacore.com>
+
+	* unittests/memory-map-selftests.c (valid_mem_map): Now array.
+	* ui-style.c (ansi_regex_text): Now array.
+	* rust-exp.y (number_regex_text): Now array.
+	* linespec.c (linespec_quote_characters): Now array.
+	* jit.c (jit_break_name, jit_descriptor_name, reader_init_fn_sym):
+	Now arrays.
+
+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* debuginfod-support.c (debuginfod_client_deleter): New.
+	(debuginfod_client_up): New.
+	(debuginfod_init): Return debuginfod_client_up.
+	(debuginfod_source_query): Adjust.
+	(debuginfod_debuginfo_query): Adjust.
+
+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* debuginfod-support.c (debuginfod_source_query): Use
+	make_unique_xstrdup.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_INSTANCE_FLAGS): Remove, replace all uses
+	with `type::instance_flags`.
+
+2020-09-14  Michael Mullin  <masmullin@gmail.com>
+
+	* xml-tdesc.c [!defined(HAVE_LIBEXPAT)] (tdesc_parse_xml):
+	Remove baton parameter.
+
+2020-09-14  Pedro Alves  <pedro@palves.net>
+
+	* Makefile.in (SELFTESTS_SRCS): Add
+	unittests/enum-flags-selftests.c.
+	* btrace.c (ftrace_update_caller, ftrace_fixup_calle): Use
+	btrace_function_flags instead of enum btrace_function_flag.
+	* compile/compile-c-types.c (convert_qualified): Use
+	enum_flags::raw.
+	* compile/compile-cplus-symbols.c (convert_one_symbol)
+	(convert_symbol_bmsym):
+	* compile/compile-cplus-types.c (compile_cplus_convert_method)
+	(compile_cplus_convert_struct_or_union_methods)
+	(compile_cplus_instance::convert_qualified_base):
+	* go-exp.y (parse_string_or_char): Add cast to int.
+	* unittests/enum-flags-selftests.c: New file.
+	* record-btrace.c (btrace_thread_flag_to_str): Change parameter's
+	type to btrace_thread_flags from btrace_thread_flag.
+	(record_btrace_cancel_resume, record_btrace_step_thread): Change
+	local's type to btrace_thread_flags from btrace_thread_flag.  Add
+	cast in DEBUG call.
+
+2020-09-14  Pedro Alves  <pedro@palves.net>
+
+	* c-typeprint.c (c_type_print_modifier): Adjust to rename.
+	* gdbtypes.c (address_space_name_to_int): Rename to ...
+	(address_space_name_to_type_instance_flags): ... this.
+	(address_space_int_to_name): Rename to ...
+	(address_space_type_instance_flags_to_name): ... this.
+	* gdbtypes.h (address_space_name_to_int): Rename to ...
+	(address_space_name_to_type_instance_flags): ... this.
+	(address_space_int_to_name): Rename to ...
+	(address_space_type_instance_flags_to_name): ... this.
+	* type-stack.c (type_stack::insert): Adjust to rename.
+	* type-stack.h (type_stack::insert): Likewise.
+
+2020-09-14  Pedro Alves  <pedro@palves.net>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* avr-tdep.c (avr_address_class_type_flags): Return
+	type_instance_flags.
+	(avr_address_class_type_flags_to_name): Take a
+	type_instance_flags.
+	(avr_address_class_name_to_type_flags): Return bool and take a
+	type_instance_flags.
+	* d-lang.c (build_d_types): Use type::set_instance_flags.
+	* ft32-tdep.c (ft32_address_class_type_flags): Return
+	type_instance_flags.
+	(ft32_address_class_type_flags_to_name): Take a
+	type_instance_flags.
+	(ft32_address_class_name_to_type_flags): Return bool and take a
+	type_instance_flags.
+	(ft32_gdbarch_init): Use type::set_instance_flags.
+	* eval.c (fake_method::fake_method): Use type::set_instance_flags.
+	* gdbarch.h, gdbarch.c: Regenerate.
+	* gdbarch.sh (address_class_type_flags): Use type_instance_flags.
+	(address_class_name_to_type_flags): Use type_instance_flags and
+	bool.
+	* gdbtypes.c (address_space_name_to_int)
+	(address_space_int_to_name, make_qualified_type): Use
+	type_instance_flags.
+	(make_qualified_type): Use type_instance_flags and
+	type::set_instance_flags.
+	(make_type_with_address_space, make_cv_type, make_vector_type)
+	(check_typedef): Use type_instance_flags.
+	(recursive_dump_type): Cast type_instance_flags to unsigned for
+	printing.
+	(copy_type_recursive): Use type::set_instance_flags.
+	(gdbtypes_post_init): Use type::set_instance_flags.
+	* gdbtypes.h (struct type) <instance_flags>: Rename to ...
+	<m_instance_flags>: ... this.
+	<instance_flags, set_instance_flags>: New methods.
+	(TYPE_INSTANCE_FLAGS): Use the instance_flags method.
+	(SET_TYPE_INSTANCE_FLAGS): New.
+	(address_space_name_to_int, address_space_int_to_name)
+	(make_type_with_address_space): Pass flags using
+	type_instance_flags instead of int.
+	* stabsread.c (cleanup_undefined_types_noname): Use
+	type::set_instance_flags.
+	* s390-tdep.c (s390_address_class_type_flags): Return
+	type_instance_flags.
+	(s390_address_class_type_flags_to_name): Take a
+	type_instance_flags.
+	(s390_address_class_name_to_type_flags): Return bool and take a
+	type_instance_flags.
+	* type-stack.c (type_stack::follow_types): Use
+	type_instance_flags.
+	* dwarf2/read.c (read_tag_pointer_type): Use type_instance_flags.
+
+2020-09-14  Tom Tromey  <tromey@adacore.com>
+
+	* x86-tdep.h (x86_in_indirect_branch_thunk): Update.
+	* x86-tdep.c (x86_is_thunk_register_name)
+	(x86_in_indirect_branch_thunk): Update.
+	* sparc64-tdep.c (sparc64_fpu_register_names)
+	(sparc64_cp0_register_names, sparc64_register_names)
+	(sparc64_pseudo_register_names): Now const.
+	* sparc-tdep.h (struct gdbarch_tdep) <fpu_register_names,
+	cp0_registers_num>: Now const.
+	* sparc-tdep.c (sparc_core_register_names)
+	(sparc32_fpu_register_names, sparc32_cp0_register_names)
+	(sparc32_pseudo_register_names): Now const.
+	(validate_tdesc_registers): Update.
+	* rust-lang.c (rust_extensions): Now const.
+	* p-lang.c (p_extensions): Now const.
+	* objc-lang.c (objc_extensions): Now const.
+	* nto-tdep.c (nto_thread_state_str): Now const.
+	* moxie-tdep.c (moxie_register_names): Now const.
+	* mips-tdep.h (struct gdbarch_tdep) <mips_processor_reg_names>:
+	Now const.
+	* mips-tdep.c (mips_generic_reg_names, mips_tx39_reg_names)
+	(mips_linux_reg_names): Now const.
+	(mips_gdbarch_init): Update.
+	* microblaze-tdep.c (microblaze_register_names): Now const.
+	* m68k-tdep.c (m68k_register_names): Now const.
+	* m32r-tdep.c (m32r_register_names): Now const.
+	* ia64-tdep.c (ia64_register_names): Now const.
+	* i386-tdep.h (struct gdbarch_tdep) <register_names,
+	ymmh_register_names, ymm16h_regnum, mpx_register_names,
+	k_register_names, zmmh_register_names, xmm_avx512_register_names,
+	ymm_avx512_register_names, pkeys_register_names>: Now const.
+	* i386-tdep.c (i386_register_names, i386_zmm_names)
+	(i386_zmmh_names, i386_k_names, i386_ymm_names, i386_ymmh_names)
+	(i386_mpx_names, i386_pkeys_names, i386_bnd_names)
+	(i386_mmx_names, i386_byte_names, i386_word_names): Now const.
+	* f-lang.c (f_extensions): Now const.
+	* d-lang.c (d_extensions): Now const.
+	* csky-tdep.c (csky_register_names): Now const.
+	* charset.c (default_charset_names, charset_enum): Now const.
+	(_initialize_charset): Update.
+	* c-lang.c (c_extensions, cplus_extensions, asm_extensions): Now
+	const.
+	* bsd-uthread.c (bsd_uthread_solib_names): Now const.
+	(bsd_uthread_solib_loaded): Update.
+	(bsd_uthread_state): Now const.
+	* amd64-tdep.c (amd64_register_names, amd64_ymm_names)
+	(amd64_ymm_avx512_names, amd64_ymmh_names)
+	(amd64_ymmh_avx512_names, amd64_mpx_names, amd64_k_names)
+	(amd64_zmmh_names, amd64_zmm_names, amd64_xmm_avx512_names)
+	(amd64_pkeys_names, amd64_byte_names, amd64_word_names)
+	(amd64_dword_names): Now const.
+	* agent.c (can_use_agent_enum): Now const.
+	* ada-tasks.c (task_states, long_task_states): Now const.
+	* ada-lang.c (known_runtime_file_name_patterns)
+	(known_auxiliary_function_name_patterns, attribute_names)
+	(standard_exc, ada_extensions): Now const.
+
+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* bcache.h (struct bcache) <bcache>: Remove constructor.
+	<m_hash_function, m_compare_function>: Remove.
+	<~bcache>: Make virtual.
+	<compare>: Remove static method, introduce virtual method.
+	<default_hash>: Remove.
+	<hash>: New virtual method.
+	* bcache.c (bcache::expand_hash_table): Update.
+	(bcache::insert): Update.
+	(bcache::hash): New.
+	(bcache::compare): Update comment and parameter names.
+	* gdbtypes.c (types_deeply_equal): Update.
+	* psymtab.h (struct psymbol_bcache): New struct.
+	(class psymtab_storage) <psymtab_storage>: Make default.
+	<psymbol_cache>: Change type to psymbol_bcache.
+	* psymtab.c (psymtab_storage::psymtab_storage): Remove.
+	(psymbol_hash): Change to...
+	(psymbol_bcache::hash): ... this.
+	(psymbol_compare): Change to...
+	(psymbol_bcache::compare): ... this.
+
+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* linux-nat.c (linux_nat_wait_1): Don't use inferior_ptid when
+	checking for initial lwp.
+
+2020-09-14  Tom Tromey  <tromey@adacore.com>
+
+	* m68k-tdep.c (m68k_extract_return_value): Use
+	pointer_result_regnum.
+	(m68k_store_return_value): Likewise.
+	(m68k_reg_struct_return_p): Handle vectors and arrays.
+	(m68k_return_value): Handle arrays.
+	(m68k_svr4_return_value): Fix single-element aggregate handling.
+	Handle long double.  Adjust for embedded ABI.
+	(m68k_svr4_init_abi): Set pointer_result_regnum.
+	(m68k_embedded_init_abi): New function.
+	(m68k_gdbarch_init): Handle Tag_GNU_M68K_ABI_FP.
+	(m68k_osabi_sniffer): New function.
+	(_initialize_m68k_tdep): Register osabi sniffer.
+	* m68k-tdep.h (struct gdbarch_tdep) <pointer_result_regnum>: New
+	member.
+
+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* xml-support.c (xml_fetch_content_from_file): Replace xfree
+	with gdb::unique_xmalloc_ptr<char>.
+
+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* xml-support.h (xml_fetch_another): Change type to be a
+	function_view.
+	(xml_process_xincludes): Remove baton parameter.
+	(xml_fetch_content_from_file): Change baton parameter to
+	dirname.
+	* xml-support.c (struct xinclude_parsing_data)
+	<xinclude_parsing_data>: Remove baton parameter.
+	<fetcher_baton>: Remove.
+	(xinclude_start_include): Adjust.
+	(xml_process_xincludes): Adjust.
+	(xml_fetch_content_from_file): Replace baton parameter with
+	dirname.
+	* xml-syscall.c (syscall_parse_xml): Remove baton parameter.
+	(xml_init_syscalls_info): Use a lambda.
+	* xml-tdesc.c (tdesc_parse_xml): Remove baton parameter.
+	(file_read_description_xml): Use a lambda.
+	(fetch_available_features_from_target): Change baton parameter
+	to target_ops.
+	(target_read_description_xml): Use a lambda.
+	(target_fetch_description_xml): Use a lambda.
+	(string_read_description_xml): Update.
+
+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.h (TYPE_ENDIANITY_NOT_DEFAULT): Remove, replace all
+	uses with type::endianity_is_not_default.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <endianity_is_not_default,
+	set_endianity_is_not_default>: New methods.
+	(TYPE_ENDIANITY_NOT_DEFAULT): Use
+	type::endianity_is_not_default, change all write call sites to
+	use type::set_endianity_is_not_default.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_FIXED_INSTANCE): Remove, replace all
+	uses with type::is_fixed_instance.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <is_fixed_instance,
+	set_is_fixed_instance>: New methods.
+	(TYPE_FIXED_INSTANCE): Use type::is_fixed_instance, change all
+	write call sites to use type::set_is_fixed_instance.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_GNU_IFUNC): Remove, replace all
+	uses with type::is_gnu_ifunc.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <is_gnu_ifunc, set_is_gnu_ifunc>: New methods.
+	(TYPE_GNU_IFUNC): Use type::is_gnu_ifunc, change all write call sites to
+	use type::set_is_gnu_ifunc.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_STUB_SUPPORTED): Remove, replace all
+	uses with type::stub_is_supported.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <stub_is_supported, set_stub_is_supported>: New methods.
+	(TYPE_STUB_SUPPORTED): Use type::stub_is_supported, change all write call sites to
+	use type::set_stub_is_supported.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_VECTOR): Remove, replace all
+	uses with type::is_vector.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <is_vector, set_is_vector>: New methods.
+	(TYPE_VECTOR): Use type::is_vector, change all write call sites to
+	use type::set_is_vector.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_VARARGS): Remove, replace all
+	uses with type::has_varargs.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <has_varargs, set_has_varargs>: New methods.
+	(TYPE_VARARGS): Use type::has_varargs, change all write call sites to
+	use type::set_has_varargs.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_PROTOTYPED): Remove, replace all
+	uses with type::is_prototyped.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <is_prototyped, set_is_prototyped>:
+	New methods.
+	(TYPE_PROTOTYPED): Use type::is_prototyped, change all write
+	call sites to use type::set_is_prototyped.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_TARGET_STUB): Remove, replace all
+	uses with type::target_is_stub.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <target_is_stub, set_target_is_stub>:
+	New methods.
+	(TYPE_TARGET_STUB): Use type::is_stub, change all write call
+	sites to use type::set_target_is_stub.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_STUB): Remove, replace all
+	uses with type::is_stub.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <is_stub, set_is_stub>: New methods.
+	(TYPE_STUB): Use type::is_stub, change all write call sites to
+	use type::set_is_stub.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_NOSIGN): Remove, replace all uses with
+	type::has_no_signedness.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <has_no_signedness,
+	set_has_no_signedness>: New methods.
+	(TYPE_NOSIGN): Use type::has_no_signedness, change all write
+	call sites to use type::set_has_no_signedness.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_UNSIGNED): Remove, replace all uses with
+	type::is_unsigned.
+
+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <is_unsigned, set_is_unsigned>: New
+	methods.
+	(TYPE_UNSIGNED): Use type::is_unsigned.  Change all write call
+	sites to use type::set_is_unsigned.
+
+2020-09-14  Fredrik Hederstierna  <fredrik.hederstierna@verisure.com>
+	    Adam Renquinha <arenquinha@cimeq.qc.ca>
+
+	* arm-tdep.c (arm_m_exception_cache): Try use correct stack
+	pointer and stack frame offset when unwinding.
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* NEWS: Document "-break-insert --qualified".
+	* mi/mi-cmd-break.c (mi_cmd_break_insert_1): Handle "--qualified".
+
+2020-09-13  Pedro Alves  <pedro@palves.net>
+
+	* linespec.c (classify_mtype, compare_msyms): Delete.
+	(search_minsyms_for_name): Remove classification logic.  Instead
+	filter out trampoline symbols if we also found an external
+	function of the same name.
+
+2020-09-13  Joel Brobecker  <brobecker@adacore.com>
+
+	* NEWS: Create a new section for the next release branch.
+	Rename the section of the current branch, now that it has
+	been cut.
+
+2020-09-13  Joel Brobecker  <brobecker@adacore.com>
+
+	GDB 10 branch created (8087c3fa8b5d695e3e29e69d70d0b35ec902ac59):
+	* version.in: Bump version to 11.0.50.DATE-git.
+
+2020-09-12  Joel Brobecker  <brobecker@adacore.com>
+
+	* infrun.c (namespace selftests): Only define #if GDB_SELF_TEST.
+
+2020-09-11  Moritz Riesterer  <moritz.riesterer@intel.com>
+	    Felix Willgerodt  <Felix.Willgerodt@intel.com>
+
+	* gdbarch.sh: Added bfloat16 type.
+	* gdbarch.c: Regenerated.
+	* gdbarch.h: Regenerated.
+	* gdbtypes.c (floatformats_bfloat16): New struct.
+	(gdbtypes_post_init): Add builtin_bfloat16.
+	* gdbtypes.h (struct builtin_type) <builtin_bfloat16>: New member.
+	(floatformats_bfloat16): New struct.
+	* i386-tdep.c (i386_zmm_type): Add field "v32_bfloat16"
+	(i386_ymm_type): Add field "v16_bfloat16"
+	(i386_gdbarch_init): Add set_gdbarch_bfloat16_format.
+	* target-descriptions.c (make_gdb_type): Add case TDESC_TYPE_BFLOAT16.
+	* gdbsupport/tdesc.cc (tdesc_predefined_types): New member bfloat16.
+	* gdbsupport/tdesc.h (tdesc_type_kind): New member TDESC_TYPE_BFLOAT16.
+	* features/i386/64bit-avx512.xml: Add bfloat16 type.
+	* features/i386/64bit-avx512.c: Regenerated.
+	* features/i386/64bit-sse.xml: Add bfloat16 type.
+	* features/i386/64bit-sse.c: Regenerated.
+
+2020-09-11  Felix Willgerodt  <felix.willgerodt@intel.com>
+
+	* i386-tdep.c (i386_zmm_type): Fix field names.
+	(i386_ymm_type): Fix field names.
+
+2020-09-11  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* breakpoint.c: Fix typo in the help message of the
+	"set breakpoint condition-evaluation" command.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c: Include "nat/netbsd-nat.h".
+	* (nbsd_nat_target::pid_to_exec_file)
+	(nbsd_nat_target::thread_alive, nbsd_nat_target::thread_name)
+	(nbsd_nat_target::post_startup_inferior)
+	(nbsd_nat_target::post_attach, nbsd_nat_target::xfer_partial)
+	(nbsd_add_threads): Switch local code to common gdb/nat functions.
+	* (nbsd_pid_to_cmdline): Call sysctl from the global namespace.
+	* (nbsd_thread_lister): Remove.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* fork-inferior.c (startup_inferior): Avoid double free.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-nat.h (netbsd_nat::qxfer_siginfo): Add.
+	* netbsd-nat.c (netbsd_nat::qxfer_siginfo): Likewise.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-nat.h (netbsd_nat::enable_proc_events): Add.
+	* netbsd-nat.c: Include <sys/ptrace.h>.
+	* (netbsd_nat::enable_proc_events): Add.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-nat.h: Include "gdbsupport/function-view.h".
+	* (netbsd_nat::thread_alive, netbsd_nat::thread_name)
+	(netbsd_nat::for_each_thread): Add.
+	* netbsd-nat.c: Include "gdbsupport/common-defs.h" and
+	"gdbsupport/common-debug.h".
+	* (netbsd_nat::netbsd_thread_lister)
+	(netbsd_nat::thread_alive, netbsd_nat::thread_name)
+	(netbsd_nat::for_each_thread): Add.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-nat.h: Include <unistd.h>.
+	* (netbsd_nat::pid_to_exec_file): Add.
+	* netbsd-nat.c: Include <sys/types.h> and <sys/sysctl.h>.
+	* (netbsd_nat::pid_to_exec_file) Add.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* configure.nat (NATDEPFILES): Add nat/netbsd-nat.o when needed.
+
+2020-09-10  Kamil Rytarowski  <n54@gmx.com>
+
+	* netbsd-nat.h: New file.
+	* netbsd-nat.c: Likewise.
+
+2020-09-09  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (remove_extra_symbols): Do not increment when
+	removing an element
+
+2020-09-08  Tom Tromey  <tromey@adacore.com>
+
+	* gdb_bfd.c (gdb_bfd_open): Call bfd_fopen when fstat fails.
+
+2020-09-08  Tom Tromey  <tromey@adacore.com>
+
+	PR win32/25302:
+	* gdb_bfd.c (gdb_bfd_data): Add "st" parameter.
+	(gdb_bfd_init_data): New function.
+	(gdb_bfd_open, gdb_bfd_ref): Use gdb_bfd_init_data.
+
+2020-09-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infrun.c (fetch_inferior_event): Use
+	`switch_to_target_no_thread` to switch the target.
+
+2020-09-06  Tom Tromey  <tom@tromey.com>
+
+	* symfile.h (dwarf2_free_objfile): Don't declare.
+
+2020-09-03  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+
+	* gdb/i386-tdep.c (i386_floatformat_for_type): Added conditions
+	to match 16 byte real/complex type generated by Flang compiler.
+
+2020-09-03  Tom de Vries  <tdevries@suse.de>
+
+	PR breakpoint/26546
+	* dwarf2/read.c (new_symbol): Tag label symbol without DW_AT_low_pc as
+	LOC_OPTIMIZED_OUT instead of LOC_LABEL.
+
+2020-09-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* maint.c (index_digits): New function.
+	(struct maint_print_section_data): Remove.
+	(print_bfd_section_info): Remove print_data parameter, add arg
+	and index_digits.
+	(print_objfile_section_info): Likewise.
+	(print_bfd_section_info_maybe_relocated): Likewise (plus
+	objfile).
+	(maintenance_info_sections): Adjust calls.
+
+2020-09-02  Tom Tromey  <tromey@adacore.com>
+
+	* ada-varobj.c (ada_varobj_get_ptr_number_of_children): Return 0
+	for null pointers.
+	(ada_varobj_adjust_for_child_access): Special-case null pointers.
+
+2020-09-01  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* bcache.h (struct bcache) <insert>: Change type of `added` to
+	pointer to bool.
+	* bcache.c (bcache::insert): Likewise.
+	* gdbtypes.c (check_types_worklist): Adjust.
+	* psymtab.c (add_psymbol_to_bcache): Adjust.
+
+2020-08-31  Kevin Buettner  <kevinb@redhat.com>
+
+	* corelow.c (unordered_set): Include.
+	(class core_target): Add field 'm_core_unavailable_mappings'.
+	(core_target::build_file_mappings): Print only one warning
+	per inaccessible file.  Add unavailable/broken mappings
+	to m_core_unavailable_mappings.
+	(core_target::xfer_partial): Call...
+	(core_target::xfer_memory_via_mappings): New method.
+
+2020-08-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (struct field_info) <non_public_fields>: Change
+	type to bool.
+
+2020-08-31  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (struct field_info): Fix indentation.
+
+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>
+
+	* frame-unwind.h (frame_prev_register_ftype): Fix adjective
+	ordering in comment.
+	* frame.c (frame_id_eq): Fix indentation.
+
+2020-08-31  Scott Linder  <scott@scottlinder.com>
+	    Simon Marchi  <simon.marchi@efficios.com>
+
+	* inline-frame.c (inline_frame_this_id): Remove assert that prevents
+	inline frame ids in outer frame.
+
+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>
+
+	* frame.h (enum frame_id_stack_status) <FID_STACK_OUTER>: New.
+	* frame.c (fprint_frame_id): Handle FID_STACK_OUTER.
+	(outer_frame_id): Use FID_STACK_OUTER instead of
+	FID_STACK_INVALID.
+	(frame_id_p): Don't check for outer_frame_id.
+
+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>
+
+	* frame-unwind.c (frame_unwind_got_optimized): Don't set
+	regnum/frame in value.  Call allocate_value_lazy.
+	* frame.c (frame_unwind_register_value): Use
+	val_print_not_saved.
+
+2020-08-31  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (NULL_TYPE): Remove, change all uses to nullptr.
+
+2020-08-29  Pedro Alves  <pedro@palves.net>
+
+	* progspace.c (print_program_space): Use all_inferiors.  Switch to
+	the inferior before calling target_pid_to_str.
+
+2020-08-28  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_end_psymtab): Update comment.
+	* dbxread.c (dbx_end_psymtab): Update comment.
+
+2020-08-28  Tom de Vries  <tdevries@suse.de>
+
+	PR breakpoint/26544
+	* breakpoint.c (parse_breakpoint_sals): Remove const from struct
+	event_location.
+	(create_breakpoint): Same.
+	(base_breakpoint_decode_location): Same.
+	(bkpt_create_sals_from_location): Same.
+	(bkpt_decode_location): Same.
+	(bkpt_probe_create_sals_from_location): Same.
+	(bkpt_probe_decode_location): Same.
+	(tracepoint_create_sals_from_location): Same.
+	(tracepoint_decode_location): Same.
+	(tracepoint_probe_decode_location): Same.
+	(strace_marker_create_sals_from_location): Same.
+	(strace_marker_decode_location): Same.
+	(create_sals_from_location_default): Same.
+	(decode_location_default): Same.
+	* breakpoint.h (struct breakpoint_ops): Same.
+	(create_breakpoint): Same.
+	* linespec.h (decode_line_full): Same.
+	* linespec.c (decode_line_full): Same.  Throw error if
+	result.size () == 0.
+
+2020-08-27  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26524
+	* breakpoint.c (until_break_fsm) <location_breakpoint,
+	caller_breakpoint>: Delete fields.
+	<breakpoints>: New field.
+	<until_break_fsm>: Adjust to save a breakpoint vector instead of
+	two individual breakpoints.
+	(until_break_fsm::should_stop): Loop over breakpoints in the
+	breakpoint vector.
+	(until_break_fsm::clean_up): Adjust to clear the breakpoints
+	vector.
+	(until_break_command): Handle location expanding into multiple
+	sals.
+
+2020-08-27  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26523
+	* inline-frame.c (stopped_by_user_bp_inline_frame): Also consider
+	bp_until breakpoints user-specified locations.  Update intro
+	comment.
+
+2020-08-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb_bfd.h (gdb_bfd_section_iterator, gdb_bfd_section_range,
+	gdb_bfd_sections): New.
+	* maint.c (print_bfd_section_info): Change param type to
+	maint_print_section_data.
+	(print_objfile_section_info): Likewise.
+	(print_bfd_section_info_maybe_relocated): Likewise.
+	(maintenance_info_sections): Use gdb_bfd_sections.
+
+2020-08-25  Shahab Vahedi  <shahab@synopsys.com>
+
+	* MAINTAINERS: Add ARC target and maintainer.
+
+2020-08-25  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* configure.tgt: ARC support for GNU/Linux.
+	* Makefile.in (ALL_TARGET_OBJS): Likewise.
+	* arc-linux-tdep.c: New file.
+	* arc-tdep.h (ARC_STATUS32_L_MASK, ARC_STATUS32_DE_MASK): Declare.
+	* arc-tdep.c (arc_write_pc): Use it.
+
+2020-08-25  Shahab Vahedi  <shahab@synopsys.com>
+
+	* arc-tdep.c (arc_check_for_hardware_loop): New.
+	* arc-tdep.h (gdbarch_tdep): New field has_hw_loops.
+
+2020-08-25  Shahab Vahedi  <shahab@synopsys.com>
+
+	* arc-tdep.h: Include "gdbarch.h".
+
+2020-08-25  Shahab Vahedi  <shahab@synopsys.com>
+
+	* arch/arc.h
+	(arc_gdbarch_features): New class to stir the selection of target XML.
+	(arc_create_target_description): Use FEATURES to choose XML target.
+	(arc_lookup_target_description): Use arc_create_target_description
+	to create _new_ target descriptions or return the already created
+	ones if the FEATURES is the same.
+	* arch/arc.c: Implementation of prototypes described above.
+	* gdb/arc-tdep.h (arc_regnum enum): Add more registers.
+	(arc_gdbarch_features_init): Initialize the FEATURES struct.
+	* arc-tdep.c (*_feature_name): Make feature names consistent.
+	(arc_register_feature): A new struct to hold information about
+	registers of a particular target/feature.
+	(arc_check_tdesc_feature): Check if XML provides registers in
+	compliance with ARC_REGISTER_FEATURE structs.
+	(arc_update_acc_reg_names): Add aliases for r58 and r59.
+	(determine_*_reg_feature_set): Which feature name to look for.
+	(arc_gdbarch_features_init): Given MACH and ABFD, initialize FEATURES.
+	(mach_type_to_arc_isa): Convert from a set of binutils machine types
+	to expected ISA enums to be used in arc_gdbarch_features structs.
+	* features/Makefile (FEATURE_XMLFILES): Add new files.
+	* gdb/features/arc/v1-aux.c: New file.
+	* gdb/features/arc/v1-aux.xml: Likewise.
+	* gdb/features/arc/v1-core.c: Likewise.
+	* gdb/features/arc/v1-core.xml: Likewise.
+	* gdb/features/arc/v2-aux.c: Likewise.
+	* gdb/features/arc/v2-aux.xml: Likewise.
+	* gdb/features/arc/v2-core.c: Likewise.
+	* gdb/features/arc/v2-core.xml: Likewise.
+	* NEWS (Changes since GDB 9): Announce obsolence of old feature names.
+
+2020-08-25  Gaius Mulley  <gaiusmod2@gmail.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR m2/26372
+	* m2-exp.y (exp): Improve comment for non_empty_arglist case, add
+	an assert.  Remove single element array indexing pattern as the
+	MULTI_SUBSCRIPT support will handle this case too.
+
+2020-08-24  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* value.h (valprint_check_validity): Move declaration from
+	here...
+	* valprint.h (valprint_check_validity): ... to here.
+
+2020-08-24  Simon Marchi  <simon.marchi@efficios.com>
+
+	* debug.h: New file.
+	* debug.c (debug_prefixed_vprintf): New function.
+	* infrun.c (infrun_debug_printf_1): Use debug_prefixed_vprintf.
+	* linux-nat.c (linux_nat_debug_printf_1): Likewise.
+
+2020-08-24  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.h (infrun_debug_printf_1): New function declaration.
+	(infrun_debug_printf): New macro.
+	* infrun.c (infrun_debug_printf_1): Use infrun_debug_printf
+	throughout.
+	(infrun_debug_printf): New function.
+	* breakpoint.c (should_be_inserted): Use infrun_debug_printf.
+	(handle_jit_event): Likewise.
+
+2020-08-21  Mark Wielaard  <mark@klomp.org>
+
+	* ada-lex.l: Extend register warnings diagnostics comment for g++.
+
+2020-08-22  Simon Marchi  <simon.marchi@efficios.com>
+
+	* frame.c (enum class frame_id_status): New.
+	(struct frame_info) <this_id::p>: Change type to frame_id_status.
+	(fprintf_frame): Update.
+	(compute_frame_id): Set frame id status to "computing" on entry.
+	Set it back to "not_computed" on failure and to "computed" on
+	success.
+	(get_frame_id): Assert the frame id is not being computed.
+	(create_sentinel_frame): Use frame_id_status::COMPUTED.
+	(create_new_frame): Likewise.
+	(frame_cleanup_after_sniffer): Update assert.
+
+2020-08-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regcache.c (pid_ptid_regcache_map): New type.
+	(target_ptid_regcache_map): Remove.
+	(target_pid_ptid_regcache_map): New type.
+	(regcaches): Change type to target_pid_ptid_regcache_map.
+	(get_thread_arch_aspace_regcache): Update.
+	(regcache_thread_ptid_changed): Update, handle pid-like ptid
+	case.
+	(regcaches_size): Update.
+	(regcache_count): Update.
+	(registers_changed_ptid_target_pid_test): New.
+	(_initialize_regcache): Register new test.
+
+2020-08-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regcache.c (regcache_count): New.
+	(struct regcache_test_data): New.
+	(regcache_test_data_up): New.
+	(populate_regcaches_for_test): New.
+	(regcaches_test): Remove.
+	(get_thread_arch_aspace_regcache_test): New.
+	(registers_changed_ptid_all_test): New.
+	(registers_changed_ptid_target_test): New.
+	(registers_changed_ptid_target_ptid_test): New.
+	(regcache_thread_ptid_changed): Remove regcache_count lambda.
+	(_initialize_regcache): Register new tests.
+
+2020-08-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regcache.c (test_get_thread_arch_aspace_regcache): Rename to...
+	(get_thread_arch_aspace_regcache_and_check): ... this.  Remove
+	gdbarch and aspace parameter.  Use current inferior's aspace.
+	Validate regcache's arch value.
+	(regcaches_test): Update.
+
+2020-08-20  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regcache.c (regcaches_test): Call registers_changed.
+
+2020-08-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infrun.c (process_event_stop_test): Fix typo "breapoint".
+
+2020-08-19  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+
+	* amd64-tdep.c (amd64_skip_prologue): Using symbol table
+	to find the end of prologue for flang compiled binaries.
+	* arm-tdep.c (arm_skip_prologue): Likewise.
+	* i386-tdep.c (i386_skip_prologue): Likewise.
+	* producer.c (producer_is_llvm): New function.
+	(producer_parsing_tests): Added new tests for clang/flang.
+	* producer.h (producer_is_llvm): New declaration.
+
+2020-08-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* linux-nat.c (linux_nat_debug_printf): New function.
+	(linux_nat_debug_printf_1): New macro.  Use throughout the file.
+
+2020-08-18  Aaron Merey  <amerey@redhat.com>
+
+	* Makefile.in (DEBUGINFOD_CFLAGS, DEBUGINFOD_LIBS): New variables.
+	(INTERNAL_CFLAGS_BASE): Add DEBUGINFOD_CFLAGS.
+	(CLIBS): Add DEBUGINFOD_LIBS.
+
+2020-08-17  Sergei Trofimovich  <siarheit@google.com>
+
+	* ia64-linux-nat.c: Include "gdbarch.h" to declare used
+	'gdbarch_num_regs'.
+
+2020-08-17  Tom Tromey  <tromey@adacore.com>
+
+	* ada-varobj.c (ada_varobj_decode_var): Handle case where
+	ada_get_decoded_value returns NULL.
+
+2020-08-17  Tom Tromey  <tromey@adacore.com>
+
+	* python/py-inferior.c (infpy_search_memory): Use
+	gdb_py_object_from_ulongest.
+	* python/py-infevents.c (create_inferior_call_event_object)
+	(create_memory_changed_event_object): Use
+	gdb_py_object_from_ulongest.
+	* python/py-linetable.c (ltpy_entry_get_pc): Use
+	gdb_py_object_from_ulongest.
+
+2020-08-17  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* loc.c (class symbol_needs_eval_context): Fix indentation.
+
+2020-08-17  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/loc.c (dwarf2_loc_desc_get_symbol_read_needs): Use
+	bool.
+
+2020-08-17  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/26393
+	* gdbtypes.c (dump_dynamic_prop): New function.
+	(recursive_dump_type): Use dump_dynamic_prop for TYPE_CODE_RANGE.
+
+2020-08-15  Tom de Vries  <tdevries@suse.de>
+
+	PR backtrace/26390
+	* stack.c (print_frame_args): Temporarily set the selected
+	frame to FRAME while printing the frame's arguments.
+
+2020-08-14  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
+
+	PR breakpoints/26385
+	* ppc-linux-nat.c (ppc_linux_nat_target::low_prepare_to_resume):
+	Always clear watchpoint with PTRACE_SET_DEBUGREG.
+
+2020-08-14  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
+
+	* ppc-linux-nat.c (ppc_linux_dreg_interface::detect)
+	(ppc_linux_nat_target::low_prepare_to_resume): Use ptrace () < 0
+	and >= to check return value instead of == -1 and != -1.
+
+2020-08-14  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* utils.h (class gdb_argv) <as_array_view>: New method.
+	* utils.c (gdb_argv_as_array_view_test): New.
+	(_initialize_utils): Register selftest.
+	* maint.c (maintenance_selftest): Use the new method.
+
+2020-08-13  Kamil Rytarowski  <n54@gmx.com>
+
+	* target.h (supports_dumpcore, dumpcore): New
+	function declarations.
+	* target.c (supports_dumpcore, dumpcore): New
+	functions.
+	* target-delegates.c: Rebuild.
+	* gcore.c (gcore_command): Use target_supports_dumpcore ()
+	and target_dumpcore ().
+
+2020-08-13  Aaron Merey  <amerey@redhat.com>
+
+	* debuginfod-support.c: Replace global variables with user_data.
+
+2020-08-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* maint.c (maintenance_selftest): Split args and pass array_view
+	to run_tests.
+
+2020-08-12  Luis Machado  <luis.machado@linaro.org>
+
+	* value.c (check_type_length_before_alloc): Use ULONGEST to store a
+	type's length.
+	Use %s and pulongest to print the length.
+
+2020-08-12  Pedro Alves  <palves@redhat.com>
+
+	* NEWS: Move "Multi-target debugging support" item to the
+	"Changes since GDB 9" section.
+
+2020-08-12  Pedro Alves  <palves@redhat.com>
+
+	PR gdb/26336
+	* progspace.c (program_space::remove_objfile): Invalidate the
+	frame cache.
+
+2020-08-11  Tom de Vries  <tdevries@suse.de>
+
+	* MAINTAINERS: Mark ms1 as deleted.
+
+2020-08-10  Luis Machado  <luis.machado@linaro.org>
+
+	PR gdb/26310
+
+	* aarch64-tdep.c (aarch64_analyze_prologue): Track use of SP/FP and
+	act accordingly.
+	(aarch64_analyze_prologue_test): Add more unit tests to exercise
+	movz/str/stur/stp skipping behavior.
+
+2020-08-10  Luis Machado  <luis.machado@linaro.org>
+
+	* nat/aarch64-sve-linux-sigcontext.h (SVE_PT_REGS_OFFSET): Use
+	struct user_sve_header instead of struct sve_context.
+
+2020-08-09  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* read.h (dwarf2_fetch_die_loc_sect_off,
+	dwarf2_fetch_die_loc_cu_off): Replace function pointer +
+	`void *` parameter with function_view.
+	* read.c (dwarf2_fetch_die_loc_sect_off,
+	dwarf2_fetch_die_loc_cu_off): Likewise.
+	* loc.c (get_frame_pc_for_per_cu_dwarf_call): Remove.
+	(per_cu_dwarf_call): Adjust.
+	(get_frame_address_in_block_wrapper): Remove.
+	(indirect_synthetic_pointer): Adjust.
+	(get_ax_pc): Remove.
+	(dwarf2_compile_expr_to_ax): Adjust.
+
+2020-08-08  Tom de Vries  <tdevries@suse.de>
+
+	PR build/26344
+	* arch/riscv.c (riscv_lookup_target_description): Use an explicit
+	constructor.
+	* regcache.c (get_thread_arch_aspace_regcache): Same.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c
+	(ravenscar_thread_target::set_base_thread_from_ravenscar_task):
+	New method.
+	(ravenscar_thread_target::wait): Check
+	runtime_initialized.
+	(ravenscar_thread_target::prepare_to_store)
+	(ravenscar_thread_target::stopped_by_sw_breakpoint)
+	(ravenscar_thread_target::stopped_by_hw_breakpoint)
+	(ravenscar_thread_target::stopped_by_watchpoint)
+	(ravenscar_thread_target::stopped_data_address)
+	(ravenscar_thread_target::core_of_thread): Use
+	scoped_restore_current_thread and
+	set_base_thread_from_ravenscar_task.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (update_thread_list): Set inferior_ptid.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target::wait): Call
+	update_inferior_ptid before update_thread_list.
+	(temporarily_change_regcache_ptid): New class.
+	(ravenscar_thread_target::fetch_registers)
+	(ravenscar_thread_target::store_registers)
+	(ravenscar_thread_target::prepare_to_store): Use base thread when
+	forwarding operation.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target::resume): Handle
+	"is_pid" case.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (xfer_partial, enable_btrace, add_thread):
+	New methods.
+	(ravenscar_thread_target::get_thread_base_cpu): Check m_cpu_map
+	first.
+	(ravenscar_thread_target::add_thread): Rename from
+	ravenscar_add_thread.
+	(ravenscar_thread_target::update_thread_list): Use a lambda.
+	(ravenscar_thread_target::xfer_partial): New method.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.h (ada_task_list_iterator_ftype): Now a
+	gdb::function_view.
+	(iterate_over_live_ada_tasks): Change type of argument.
+	* ada-tasks.c (iterate_over_live_ada_tasks): Change type
+	of argument.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target) <extra_thread_info>:
+	Remove.
+	(ravenscar_thread_target::extra_thread_info): Remove.
+	(ravenscar_thread_target::pid_to_str): Mention Ravenscar in result;
+	defer to target beneath for non-Ravenscar threads.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target) <get_base_cpu,
+	get_base_thread_from_ravenscar_task>: Now methods.
+	<m_cpu_map>: New member.
+	(ravenscar_thread_target::get_thread_base_cpu): Rename from
+	ravenscar_get_thread_base_cpu.  Check m_cpu_map.
+	(ravenscar_thread_target::task_is_currently_active): Update.
+	(ravenscar_thread_target::get_base_thread_from_ravenscar_task):
+	Now a method.
+	(ravenscar_thread_target::add_active_thread): Put initial thread
+	into the m_cpu_map.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target::wait): Return
+	event_ptid.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target::wait): Check
+	runtime_initialized.
+
+2020-08-07  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target): Don't call
+	add_active_thread.
+	(ravenscar_thread_target::add_active_thread): Now public.
+	(ravenscar_inferior_created): Call add_active_thread after pushing
+	the target.
+
+2020-08-07  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regcache.c (ptid_regcache_map): New type.
+	(target_ptid_regcache_map): New type.
+	(regcaches): Change type to target_ptid_regcache_map.
+	(get_thread_arch_aspace_regcache): Update to regcaches' new
+	type.
+	(regcache_thread_ptid_changed): Likewise.
+	(registers_changed_ptid): Likewise.
+	(regcaches_size): Likewise.
+	(regcaches_test): Update.
+	(regcache_thread_ptid_changed): Update.
+	* regcache.h (regcache_up): New type.
+	* gdbsupport/ptid.h (hash_ptid): New struct.
+
+2020-08-07  Simon Marchi  <simon.marchi@efficios.com>
+
+	* observable.h (thread_ptid_changed): Add parameter
+	`process_stratum_target *`.
+	* infrun.c (infrun_thread_ptid_changed): Add parameter
+	`process_stratum_target *` and use it.
+	(selftests): New namespace.
+	(infrun_thread_ptid_changed): New function.
+	(_initialize_infrun): Register selftest.
+	* regcache.c (regcache_thread_ptid_changed): Add parameter
+	`process_stratum_target *` and use it.
+	(regcache_thread_ptid_changed): New function.
+	(_initialize_regcache): Register selftest.
+	* thread.c (thread_change_ptid): Pass target to
+	thread_ptid_changed observable.
+
+2020-08-06  Caroline Tice <cmtice@google.com>
+
+	* dwarf2/read.c (struct dwo_file): Update comment on 'sections' field.
+	(struct dwp_sections): Update field comments.  Add loclists and
+	rnglists fields.
+	(struct virtual_v2_dwo_sections): Rename struct to
+	'virtual_v2_or_v5_dwo_sections'; update comments at top of struct; add
+	size & offset fields for loclists and rnglists.
+	(struct dwp_hash_table): Add a 'v5' struct field to the union section.
+	(create_debug_type_hash_table): Add 'DW_UT_split_type' to the check for
+	skipping dummy type units.
+	(create_dwp_hash_table): Update the large comment above the function to
+	discuss Version 5 DWP files as well, with references.  Update all the
+	version checks in the function to check for version 5 as well.  Add new
+	section at the end to create dwp hash table for version 5.
+	(create_dwp_v2_section): Rename function to
+	'create_dwp_v2_or_v5_section'.  Update function comment appropriately.
+	Add V5 to error message text.
+	(create_dwo_unit_in_dwp_v2): Change calls to create_dwp_v2_section
+	into calls to create_dwp_v2_or_v5_section.
+	(create_dwo_unit_in_dwp_v5): New function.
+	(lookup_dwo_unit_in_dwp): Update conditional statement to explicitly
+	check for version2; add else clause to handle version 5.
+	(open_and_init_dwo_file): Add code to check dwarf version & only call
+	create_debug_types_hash_table (with sections.types) if version is not 5;
+	else call create_debug_type_hash_table, with sections.info.
+	(dwarf2_locate_v2_dwp_sections): Update function comment to mention
+	version 5.
+	(dwarf2_locate_v5_dwp_sections): New function.
+	(open_and_init_dwp_file): Add else-if clause for version 5 to call
+	bfd_map_over_sections with dwarf2_locate_v5_dwp_sections.
+
+2020-08-06  Simon Marchi  <simon.marchi@efficios.com>
+
+	* regcache.h (class regcache): Remove friend
+	registers_changed_ptid.
+	<regcache_thread_ptid_changed>: Remove.
+	<regcaches>: Remove.
+	* regcache.c (regcache::regcaches): Rename to...
+	(regcaches): ... this.  Make static.
+	(get_thread_arch_aspace_regcache): Update.
+	(regcache::regcache_thread_ptid_changed): Rename to...
+	(regcache_thread_ptid_changed): ... this.  Update.
+	(class regcache_access): Remove.
+	(regcaches_test): Update.
+	(_initialize_regcache): Update.
+	* sparc64-tdep.c, dwarf2/index-write.c, record-btrace.c: Include
+	<forward_list>.
+
+2020-08-06  Simon Marchi  <simon.marchi@efficios.com>
+
+	* regcache.h (class regcache) <current_regcache>: Rename to...
+	<regcaches>: ... this.  Move doc here.
+	* regcache.c (regcache::current_regcache) Rename to...
+	(regcache::regcaches): ... this.  Move doc to header.
+	(get_thread_arch_aspace_regcache): Update.
+	(regcache::regcache_thread_ptid_changed): Update.
+	(registers_changed_ptid): Update.
+	(class regcache_access) <current_regcache_size>: Rename to...
+	<regcaches_size>: ... this.
+	(current_regcache_test): Rename to...
+	(regcaches_test): ... this.
+	(_initialize_regcache): Update.
+
+2020-08-06  Victor Collod  <vcollod@nvidia.com>
+
+	* amd64-tdep.c (amd64_analyze_prologue): Fix incorrect comment.
+
+2020-08-05  Kevin Buettner  <kevinb@redhat.com>
+
+	* corelow.c (core_target::build_file_mappings): Don't output
+	null pathname in warning.
+
+2020-08-05  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb.dwarf2/clztest.exp, gdb.dwarf2/dw2-common-block.exp,
+	gdb.dwarf2/dw2-dup-frame.exp, gdb.dwarf2/dw2-reg-undefined.exp,
+	gdb.dwarf2/dw2-single-line-discriminators.exp,
+	dw2-undefined-ret-addr.exp: Pass nopie to compilation options.
+
+2020-08-05  Tom Tromey  <tromey@adacore.com>
+
+	PR rust/26197:
+	* dwarf2/read.c (alloc_rust_variant): Handle univariant case.
+	(quirk_rust_enum): Call alloc_rust_variant for univariant case.
+	Fix off-by-one and type size errors in ordinary case.
+
+2020-08-05  Tom de Vries  <tdevries@suse.de>
+
+	* gdbtypes.c (type_not_allocated, type_not_associated): Use
+	"prop->const_val () == 0" instead of "prop->const_val () != 0".
+
+2020-08-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* frame.h (frame_id_p): Return bool.
+	(frame_id_artificial_p): Return bool.
+	(frame_id_eq): Return bool.
+	(has_stack_frames): Return bool.
+	(get_selected_frame): Fix typo in comment.
+	(get_frame_pc_if_available): Return bool.
+	(get_frame_address_in_block_if_available): Return bool.
+	(get_frame_func_if_available): Return bool.
+	(read_frame_register_unsigned): Return bool.
+	(get_frame_register_bytes): Return bool.
+	(safe_frame_unwind_memory): Return bool.
+	(deprecated_frame_register_read): Return bool.
+	(frame_unwinder_is): Return bool.
+	* frame.c (struct frame_info) <prev_arch::p>: Change type to
+	bool.
+	<this_id::p>: Likewise.
+	<prev_p>: Likewise.
+	(frame_stash_add): Return bool.
+	(get_frame_id): Use bool.
+	(frame_id_build_special) Use bool.
+	(frame_id_build_unavailable_stack): Use bool.
+	(frame_id_build): Use bool.
+	(frame_id_p): Return bool, use true/false instead of 1/0.
+	(frame_id_artificial_p): Likewise.
+	(frame_id_eq): Likewise.
+	(frame_id_inner): Likewise.
+	(get_frame_func_if_available): Likewise.
+	(read_frame_register_unsigned): Likewise.
+	(deprecated_frame_register_read): Likewise.
+	(get_frame_register_bytes): Likewise.
+	(has_stack_frames): Likewise.
+	(inside_main_func): Likewise.
+	(inside_entry_func): Likewise.
+	(get_frame_pc_if_available): Likewise.
+	(get_frame_address_in_block_if_available): Likewise.
+	(frame_unwinder_is): Likewise.
+	(safe_frame_unwind_memory): Likewise.
+	(frame_unwind_arch): Likewise.
+
+2020-08-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* frame.c (frame_info) <prev_func> <p>: Rename to status, change
+	type to cached_copy_status.
+	(fprintf_frame): Adjust.
+	(get_frame_func_if_available): Adjust.
+	(frame_cleanup_after_sniffer): Adjust.
+
+2020-08-04  Mark Wielaard  <mark@klomp.org>
+
+	* MAINTAINERS (Write After Approval): Update email address.
+
+2020-08-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.h (TYPE_DYN_PROP_ADDR): Remove, replace uses with
+	dynamic_prop::const_val.
+
+2020-08-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.h (TYPE_DYN_PROP_KIND): Remove, replace uses with
+	dynamic_prop::kind.
+
+2020-08-04  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.h (TYPE_DYN_PROP_BATON): Remove.
+
+2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* configure.tgt: Set gdb_sim for bpf-*-* targets.
+
+2020-08-04  Weimin Pan <weimin.pan@oracle.com>
+	    Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* configure.tgt: Add entry for bpf-*-*.
+	* Makefile.in (ALL_TARGET_OBS): Add bpf-tdep.o
+	(ALLDEPFILES): Add bpf-tdep.c.
+	* bpf-tdep.c: New file.
+	* MAINTAINERS: Add bpf target and maintainer.
+	* NEWS: Mention the support for the new target.
+
+2020-08-04  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/23270
+	* dwarf2/read.c (find_partial_die): Change internal error into Dwarf
+	Error.
+
+2020-08-03  John Baldwin  <jhb@FreeBSD.org>
+
+	* syscalls/freebsd.xml: Regenerate.
+
+2020-08-03  John Baldwin  <jhb@FreeBSD.org>
+
+	* syscalls/update-freebsd.sh: Fix usage and year range.
+
+2020-08-03  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26333
+	* dwarf2/read.c (dwarf_decode_lines_1): Ignore
+	DW_LNE_lo_user/DW_LNE_hi_user range.
+
+2020-07-30  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR ada/26318
+	* ada-lang.c (ada_modulus): Return 0 if property is not of const
+	kind.
+
+2020-07-30  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* breakpoint.c (set_breakpoint_condition): Do minor refactoring.
+
+2020-07-30  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* breakpoint.c (set_breakpoint_condition): Update the condition
+	expressions after checking that the input condition string parses
+	successfully and does not contain junk at the end.
+
+2020-07-30  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* breakpoint.c (set_breakpoint_condition): Update the
+	condition string after parsing the new condition successfully.
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* proc-api.c (_STRUCTURED_PROC): Don't define.
+	* proc-events.c: Likewise.
+	* proc-flags.c: Likewise.
+	* proc-why.c: Likewise.
+	* procfs.c: Likewise.
+
+	* Makefile.in (INTERNAL_CPPFLAGS): Add LARGEFILE_CPPFLAGS.
+	* configure, config.in: Regenerate.
+
+2020-07-30  Tom de Vries  <tdevries@suse.de>
+
+	PR build/26320
+	* ui-style.h (struct ui_file_style::color): Wrap m_value and
+	m_red/m_green/m_blue in a union.
+
+2020-07-29  Tom de Vries  <tdevries@suse.de>
+
+	PR tdep/26280
+	* s390-tdep.c (s390_displaced_step_fixup): Fix Wmaybe-uninitialized.
+
+2020-07-28  Tom Tromey  <tromey@adacore.com>
+
+	PR symtab/26270:
+	* symtab.h (find_pc_partial_function_sym): Declare.
+	* cli/cli-cmds.c (disassemble_command): Use
+	find_pc_partial_function_sym.  Check asm_demangle.
+	* blockframe.c (cache_pc_function_sym): New global.
+	(cache_pc_function_name): Remove.
+	(clear_pc_function_cache): Update.
+	(find_pc_partial_function_sym): New function, from
+	find_pc_partial_function.
+	(find_pc_partial_function): Rewrite using
+	find_pc_partial_function_sym.
+
+2020-07-28  Tom Tromey  <tromey@adacore.com>
+
+	* cli/cli-cmds.c (_initialize_cli_cmds): Rearrange "disassemble"
+	help.  Add usage.
+
+2020-07-28  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/expr.c (dwarf_expr_context::execute_stack_op)
+	<DW_OP_GNU_variable_value>: Cast to address type.
+
+2020-07-28  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.h (nbsd_nat_target::xfer_partial): New declaration.
+	* nbsd-nat.c (nbsd_nat_target::xfer_partial): New function.
+	* nbsd-tdep.c (nbsd_gdbarch_data_handle, struct nbsd_gdbarch_data)
+	(init_nbsd_gdbarch_data, get_nbsd_gdbarch_data)
+	(nbsd_get_siginfo_type): New.
+	(nbsd_init_abi): Install gdbarch "get_siginfo_type" method.
+	(_initialize_nbsd_tdep): New.
+
+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26301
+	* configure: Regenerated.
+
+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26301
+	* configure: Regenerated.
+
+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-frame.c: Remove 'user-regs.h' include.
+	(frapy_read_register): Rewrite to make use of
+	gdbpy_parse_register_id.
+	* python/py-registers.c (gdbpy_parse_register_id): New function,
+	moved here from python/py-unwind.c.  Updated the return type, and
+	also accepts register descriptor objects.
+	* python/py-unwind.c: Remove 'user-regs.h' include.
+	(pyuw_parse_register_id): Moved to python/py-registers.c.
+	(unwind_infopy_add_saved_register): Update to use
+	gdbpy_parse_register_id.
+	(pending_framepy_read_register): Likewise.
+	* python/python-internal.h (gdbpy_parse_register_id): Declare.
+
+2020-07-28  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-registers.c: Add 'user-regs.h' include.
+	(register_descriptor_iter_find): New function.
+	(register_descriptor_iterator_object_methods): New static global
+	methods array.
+	(register_descriptor_iterator_object_type): Add pointer to methods
+	array.
+
+2020-07-27  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.h: Include <osreldate.h>.  Define USE_SIGTRAP_SIGINFO
+	for all architectures on FreeBSD 11.3 and later.
+
+2020-07-27  Tom Tromey  <tromey@adacore.com>
+
+	* gcore.h (load_corefile): Don't declare.
+
+2020-07-27  Tom de Vries  <tdevries@suse.de>
+
+	* configure.ac: Fix sys/sockets.h -> sys/socket.h typo.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+
+2020-07-26  Eli Zaretskii  <eliz@gnu.org>
+
+	* configure.ac (AC_CHECK_HEADERS): Check for sys/socket.h and
+	ws2tcpip.h.  When checking whether socklen_t type is defined, use
+	ws2tcpip.h if it is available and sys/socket.h isn't.
+	* configure: Regenerate.
+	* config.in: Regenerate.
+
+2020-07-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR fortran/23051
+	PR fortran/26139
+	* valops.c (value_ind): Pass address to
+	readjust_indirect_value_type.
+	* value.c (readjust_indirect_value_type): Make parameter
+	non-const, and add extra address parameter.  Resolve original type
+	before using it.
+	* value.h (readjust_indirect_value_type): Update function
+	signature and comment.
+
+2020-07-25  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26243
+	* dwarf2/read.c (lnp_state_machine::record_line): Ignore zero line
+	entries.
+
+2020-07-24  Aaron Merey  <amerey@redhat.com>
+
+	* Makefile.in: Replace LIBDEBUGINFOD with DEBUGINFOD_LIBS.
+	* configure: Rebuild.
+
+2020-07-23  Kevin Buettner  <kevinb@redhat.com>
+
+	PR corefiles/26294
+	* corelow.c (_initialize_corelow): Add period to help text
+	for "maintenance print core-file-backed-mappings".
+
+2020-07-23  Pedro Alves  <pedro@palves.net>
+
+	* frame-unwind.c (frame_unwind_try_unwinder): On exception, don't
+	touch THIS_CACHE/THIS_FRAME if the frame cache was cleared
+	meanwhile.
+	* frame.c (frame_cache_generation, get_frame_cache_generation):
+	New.
+	(reinit_frame_cache): Increment FRAME_CACHE_GENERATION.
+	(get_prev_frame_if_no_cycle): On exception, don't touch
+	PREV_FRAME/THIS_FRAME if the frame cache was cleared meanwhile.
+	* frame.h (get_frame_cache_generation): Declare.
+
+2020-07-23  Tom de Vries  <tdevries@suse.de>
+
+	PR tui/26282
+	* tui/tui-winsource.h (struct tui_source_windows::tui_source_windows):
+	New default constructor.
+
+2020-07-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* disasm.c (do_mixed_source_and_assembly_deprecated): Don't
+	exclude non-statement entries.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* NEWS (New commands): Mention new command
+	"maintenance print core-file-backed-mappings".
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* corelow.c (gdbcmd.h): Include.
+	(core_target::info_proc_mappings): New method.
+	(get_current_core_target): New function.
+	(maintenance_print_core_file_backed_mappings): New function.
+	(_initialize_corelow): Add core-file-backed-mappings to
+	"maint print" commands.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* linux-tdep.c (dump_note_entry_p): New function.
+	(linux_dump_mapping_p_ftype): New typedef.
+	(linux_find_memory_regions_full): Add new parameter,
+	should_dump_mapping_p.
+	(linux_find_memory_regions): Adjust call to
+	linux_find_memory_regions_full.
+	(linux_make_mappings_core_file_notes): Use dump_note_entry_p in
+	call to linux_find_memory_regions_full.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* corelow.c (solist.h, unordered_map): Include.
+	(class core_target): Add field m_core_file_mappings and
+	method build_file_mappings.
+	(core_target::core_target): Call build_file_mappings.
+	(core_target::~core_target): Free memory associated with
+	m_core_file_mappings.
+	(core_target::build_file_mappings): New method.
+	(core_target::xfer_partial): Use m_core_file_mappings
+	for memory transfers.
+	* linux-tdep.c (linux_read_core_file_mappings): New
+	function.
+	(linux_core_info_proc_mappings): Rewrite to use
+	linux_read_core_file_mappings.
+	(linux_init_abi): Register linux_read_core_file_mappings.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* arch-utils.c (default_read_core_file_mappings): New function.
+	* arch-utils.c (default_read_core_file_mappings): Declare.
+	* gdbarch.sh (read_core_file_mappings): New gdbarch method.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	PR corefiles/25631
+	* corelow.c (core_target:xfer_partial):  Revise
+	TARGET_OBJECT_MEMORY case to consider non-SEC_HAS_CONTENTS
+	case after first checking the stratum beneath the core
+	target.
+	(has_all_memory): Return true.
+	* target.c (raw_memory_xfer_partial): Revise comment
+	regarding use of has_all_memory.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* exec.h (section_table_xfer_memory): Revise declaration,
+	replacing section name parameter with an optional callback
+	predicate.
+	* exec.c (section_table_xfer_memory): Likewise.
+	* bfd-target.c, exec.c, target.c, corelow.c: Adjust all callers
+	of section_table_xfer_memory.
+
+2020-07-22  Tom Tromey  <tromey@adacore.com>
+
+	* mi/mi-cmd-stack.c (list_args_or_locals): Use
+	lookup_symbol_search_name.
+
+2020-07-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-registers.c (gdbpy_register_object_data_init): Remove
+	redundant local variable.
+	(gdbpy_get_register_descriptor): Extract descriptor vector as a
+	reference, not pointer, update code accordingly.
+
+2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>
+	    Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* objfiles.h (struct objfile) <skip_jit_symbol_lookup>: New field.
+	* jit.c (jit_breakpoint_re_set_internal): Use the
+	`skip_jit_symbol_lookup` field.
+
+2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>
+	    Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* jit.c (jit_read_descriptor): Define the descriptor address once,
+	use twice.
+	(jit_breakpoint_deleted): Move the declaration of the loop variable
+	`iter` into the loop header.
+	(jit_breakpoint_re_set_internal): Move the declaration of the local
+	variable `objf_data` to the first point of definition.
+	(jit_event_handler): Move the declaration of local variables
+	`code_entry`, `entry_addr`, and `objf` to their first point of use.
+	Rename `objf` to `jited`.
+
+2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.h (struct jiter_objfile_data) <jiter_objfile_data, objfile>:
+	Remove.
+	* jit.c (get_jiter_objfile_data): Update.
+
+2020-07-22  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+	    Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c (struct jit_program_space_data): Remove.
+	(jit_program_space_key): Remove.
+	(jiter_objfile_data::~jiter_objfile_data): Remove program space
+	stuff.
+	(get_jit_program_space_data): Remove.
+	(jit_breakpoint_deleted): Iterate on all of the program space's
+	objfiles.
+	(jit_inferior_init): Likewise.
+	(jit_breakpoint_re_set_internal): Likewise.  Also change return
+	type to void.
+	(jit_breakpoint_re_set): Pass current_program_space to
+	jit_breakpoint_re_set_internal.
+
+2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.h (struct jiter_objfile_data) <cached_code_address,
+	jit_breakpoint>: Move to here from ...
+	* jit.c (jit_program_space_data): ... here.
+	(jiter_objfile_data::~jiter_objfile_data): Update.
+	(jit_breakpoint_deleted): Update.
+	(jit_breakpoint_re_set_internal): Update.
+
+2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.c (jiter_objfile_data::~jiter_objfile_data): Remove some
+	checks.
+	(jit_read_descriptor): Remove NULL check.
+	(jit_event_handler): Add an assertion.
+
+2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.h (struct jit_objfile_data):  Split into...
+	(struct jiter_objfile_data): ... this ...
+	(struct jited_objfile_data): ... and this.
+	* objfiles.h (struct objfile) <jit_data>: Remove.
+	<jiter_data, jited_data>: New fields.
+	* jit.c (jit_objfile_data::~jit_objfile_data): Rename to ...
+	(jiter_objfile_data::~jiter_objfile_data): ... this.
+	(get_jit_objfile_data): Rename to ...
+	(get_jiter_objfile_data): ... this.
+	(add_objfile_entry): Update.
+	(jit_read_descriptor): Use get_jiter_objfile_data.
+	(jit_find_objf_with_entry_addr): Use objfile's jited_data field.
+	(jit_breakpoint_re_set_internal): Use get_jiter_objfile_data.
+	(jit_inferior_exit_hook): Use objfile's jited_data field.
+
+2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* jit.h: Forward-declare `struct minimal_symbol`.
+	(struct jit_objfile_data): Migrate to here from jit.c; also add a
+	constructor, destructor, and an objfile* field.
+	* jit.c (jit_objfile_data): Remove.
+	(struct jit_objfile_data): Migrate from here to jit.h.
+	(jit_objfile_data::~jit_objfile_data): New destructor
+	implementation with code moved from free_objfile_data.
+	(free_objfile_data): Delete.
+	(get_jit_objfile_data): Update to use the jit_data field of objfile.
+	(jit_find_objf_with_entry_addr): Ditto.
+	(jit_inferior_exit_hook): Ditto.
+	(_initialize_jit): Remove the call to
+	register_objfile_data_with_cleanup.
+	* objfiles.h (struct objfile) <jit_data>: New field.
+
+2020-07-22  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* jit.h: Forward-declare `struct objfile`.
+	(jit_event_handler): Add a second parameter, the JITer objfile.
+	* jit.c (jit_read_descriptor): Change the signature to take the
+	JITer objfile as an argument instead of the jit_program_space_data.
+	(jit_inferior_init): Update the call to jit_read_descriptor.
+	(jit_event_handler): Use the new JITer objfile argument when calling
+	jit_read_descriptor.
+	* breakpoint.c (handle_jit_event): Update the call to
+	jit_event_handler to pass the JITer objfile.
+
+2020-07-21  John Baldwin  <jhb@FreeBSD.org>
+
+	* gdbarch.c: Regenerate.
+	* gdbarch.h: Regenerate.
+	* gdbarch.sh (handle_segmentation_fault): Remove method.
+	* infrun.c (handle_segmentation_fault): Remove.
+	(print_signal_received_reason): Remove call to
+	handle_segmentation_fault.
+
+2020-07-21  John Baldwin  <jhb@FreeBSD.org>
+
+	* sparc64-linux-tdep.c (sparc64_linux_handle_segmentation_fault):
+	Rename to sparc64_linux_report_signal_info and add siggnal
+	argument.
+	(sparc64_linux_init_abi): Use sparc64_linux_report_signal_info
+	instead of sparc64_linux_handle_segmentation_fault.
+
+2020-07-21  John Baldwin  <jhb@FreeBSD.org>
+
+	* amd64-linux-tdep.c (amd64_linux_init_abi_common): Use
+	i386_linux_report_signal_info instead of
+	i386_linux_handle_segmentation_fault.
+	* i386-linux-tdep.c (i386_linux_handle_segmentation_fault): Rename
+	to i386_linux_report_signal_info and add siggnal argument.
+	(i386_linux_init_abi): Use i386_linux_report_signal_info instead
+	of i386_linux_handle_segmentation_fault.
+	* i386-linux-tdep.h (i386_linux_handle_segmentation_fault): Rename
+	to i386_linux_report_signal_info and add siggnal argument.
+
+2020-07-21  John Baldwin  <jhb@FreeBSD.org>
+
+	* corelow.c (core_target_open): Invoke gdbarch report_signal_info
+	hook if present.
+
+2020-07-21  John Baldwin  <jhb@FreeBSD.org>
+
+	* gdbarch.c: Regenerate.
+	* gdbarch.h: Regenerate.
+	* gdbarch.sh (report_signal_info): New method.
+	* infrun.c (print_signal_received_reason): Invoke gdbarch
+	report_signal_info hook if present.
+
+2020-07-21  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-registers.c : Add 'unordered_map' include.
+	(gdbpy_new_reggroup): Renamed to...
+	(gdbpy_get_reggroup): ...this.  Update to only create register
+	group descriptors when needed.
+	(gdbpy_reggroup_iter_next): Update.
+
+2020-07-21  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-registers.c (gdbpy_register_object_data): New static
+	global.
+	(gdbpy_register_object_data_init): New function.
+	(gdbpy_new_register_descriptor): Renamed to...
+	(gdbpy_get_register_descriptor): ...this, and update to reuse
+	existing register descriptors where possible.
+	(gdbpy_register_descriptor_iter_next): Update.
+	(gdbpy_initialize_registers): Register new gdbarch data.
+
+2020-07-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* linux-nat.c (stopped_pids): Make static.
+
+2020-07-21  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	PR ada/26235
+	* gdbtypes.c (ada_discrete_type_low_bound,
+	ada_discrete_type_high_bound): Handle undefined bounds.
+
+2020-07-21  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.h (nbsd_nat_target::supports_multi_process): New
+	declaration.
+	* nbsd-nat.c (nbsd_nat_target::supports_multi_process): New
+	function.
+
+2020-07-20  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-tdep.c (fbsd_skip_solib_resolver): New function.
+	(fbsd_init_abi): Install gdbarch "skip_solib_resolver" method.
+	* fbsd-tdep.h (fbsd_skip_solib_resolver): New prototype.
+	* mips-fbsd-tdep.c (mips_fbsd_skip_solib_resolver): New function.
+	(mips_fbsd_init_abi): Install gdbarch "skip_solib_resolver"
+	method.
+
+2020-07-20 Ludovic Courtès  <ludo@gnu.org>
+
+	* guile/scm-math.c (vlscm_integer_fits_p): Use 'uintmax_t'
+	and 'intmax_t' instead of 'scm_t_uintmax' and 'scm_t_intmax',
+	which are deprecated in Guile 3.0.
+	* configure.ac (try_guile_versions): Add "guile-3.0".
+	* configure (try_guile_versions): Regenerate.
+	* NEWS: Update entry.
+
+2020-07-20  Ludovic Courtès  <ludo@gnu.org>
+	    Doug Evans  <dje@google.com>
+
+	PR gdb/21104
+	* guile/scm-ports.c (USING_GUILE_BEFORE_2_2): New macro.
+	(ioscm_memory_port)[read_buf_size, write_buf_size]: Wrap in #if
+	USING_GUILE_BEFORE_2_2.
+	(stdio_port_desc, memory_port_desc) [!USING_GUILE_BEFORE_2_2]:
+	Change type to 'scm_t_port_type *'.
+	(natural_buffer_size) [!USING_GUILE_BEFORE_2_2]: New variable.
+	(ioscm_open_port) [USING_GUILE_BEFORE_2_2]: Add 'stream'
+	parameter and honor it.  Update callers.
+	(ioscm_open_port) [!USING_GUILE_BEFORE_2_2]: New function.
+	(ioscm_read_from_port, ioscm_write) [!USING_GUILE_BEFORE_2_2]: New
+	functions.
+	(ioscm_fill_input, ioscm_input_waiting, ioscm_flush): Wrap in #if
+	USING_GUILE_BEFORE_2_2.
+	(ioscm_init_gdb_stdio_port) [!USING_GUILE_BEFORE_2_2]: Use
+	'ioscm_read_from_port'.  Call 'scm_set_port_read_wait_fd'.
+	(ioscm_init_stdio_buffers) [!USING_GUILE_BEFORE_2_2]: New function.
+	(gdbscm_stdio_port_p) [!USING_GUILE_BEFORE_2_2]: Use 'SCM_PORTP'
+	and 'SCM_PORT_TYPE'.
+	(gdbscm_memory_port_end_input, gdbscm_memory_port_seek)
+	(ioscm_reinit_memory_port): Wrap in #if USING_GUILE_BEFORE_2_2.
+	(gdbscm_memory_port_read, gdbscm_memory_port_write)
+	(gdbscm_memory_port_seek, gdbscm_memory_port_close)
+	[!USING_GUILE_BEFORE_2_2]: New functions.
+	(gdbscm_memory_port_print): Remove use of 'SCM_PTOB_NAME'.
+	(ioscm_init_memory_port_type) [!USING_GUILE_BEFORE_2_2]: Use
+	'gdbscm_memory_port_read'.
+	Wrap 'scm_set_port_end_input', 'scm_set_port_flush', and
+	'scm_set_port_free' calls in #if USING_GUILE_BEFORE_2_2.
+	(gdbscm_get_natural_buffer_sizes) [!USING_GUILE_BEFORE_2_2]: New
+	function.
+	(ioscm_init_memory_port): Remove.
+	(ioscm_init_memory_port_stream): New function
+	(ioscm_init_memory_port_buffers) [USING_GUILE_BEFORE_2_2]: New
+	function.
+	(gdbscm_memory_port_read_buffer_size) [!USING_GUILE_BEFORE_2_2]:
+	Return scm_from_uint (0).
+	(gdbscm_set_memory_port_read_buffer_size_x)
+	[!USING_GUILE_BEFORE_2_2]: Call 'scm_setvbuf'.
+	(gdbscm_memory_port_write_buffer_size) [!USING_GUILE_BEFORE_2_2]:
+	Return scm_from_uint (0).
+	(gdbscm_set_memory_port_write_buffer_size_x)
+	[!USING_GUILE_BEFORE_2_2]: Call 'scm_setvbuf'.
+	* configure.ac (try_guile_versions): Add "guile-2.2".
+	* configure: Regenerate.
+	* NEWS: Add entry.
+
+2020-07-18  Tom Tromey  <tom@tromey.com>
+
+	* linux-nat.c (linux_multi_process): Remove.
+	(linux_nat_target::supports_multi_process): Return true.
+
+2020-07-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arch/riscv.c (riscv_tdesc_cache): Change map type.
+	(riscv_lookup_target_description): Return pointer out of
+	unique_ptr.
+	* target-descriptions.c (allocate_target_description): Add
+	comment.
+	(target_desc_deleter::operator()): Likewise.
+	* target-descriptions.h (struct target_desc_deleter): Moved to
+	gdbsupport/tdesc.h.
+	(target_desc_up): Likewise.
+
+2020-07-17  Tom Tromey  <tromey@adacore.com>
+
+	* linux-nat.c (linux_nat_target::supports_non_stop)
+	(linux_nat_target::always_non_stop_p): Use "true".
+	(linux_nat_target::supports_disable_randomization): Use "true" and
+	"false".
+
+2020-07-16  Caroline Tice  <cmtice@google.com>
+
+	* dwarf2/read.c (RNGLIST_HEADER_SIZE32) New constant definition.
+	(RNGLIST_HEADER_SIZE64): New constant definition.
+	(struct dwop_section_names): Add rnglists_dwo.
+	(dwop_section_names): Add .debug_rnglists.dwo, .zdebug_rnglists.dwo.
+	(struct loclist_header): Rename to 'loclists_rnglists_header'.
+	(struct dwo_sections): Add rnglists field.
+	(read_attribut_reprocess): Add tag parameter.
+	(dwarf2_ranges_read): Add tag parameter & remove forward function decl.
+	(cu_debug_rnglists_section): New function (decl & definition).
+	(dwarf2_locate_dwo_sections): Add code to read rnglists_dwo section.
+	(dwarf2_rnglists_process): Add a dwarf_tag parameter, for the kind of
+	die whose range is being checked; get rnglist section from
+	cu_debug_rnglists_section, to get from either objfile or dwo file as
+	appropriate.  Add cases for DW_RLE_base_addressx,
+	DW_RLE_startx_length, DW_RLE_startx_endx.  Also, update to only add
+	the base address to DW_RLE_offset_pairs (not to all ranges), moving
+	test inside if-condition and updating complaint message.
+	(dwarf2_ranges_process): Add dwarf tag parameter and pass it to
+	dwarf2_rnglists_process.
+	(dwarf2_ranges_read): Add dwarf tag parameter and pass it to
+	dwarf2_ranges_process.
+	(dwarf2_get_pc_bounds): Check for DW_FORM_rnglistx when setting
+	need_ranges_base and update comment appropriately.  Also pass die tag
+	to dwarf2_ranges_read.
+	(dwarf2_record_block_ranges): Check for DW_FORM_rnglistx when setting
+	need_ranges_base and update comment appropriately.  Also pass die tag
+	to dwarf2_ranges_process.
+	(read_full_die_1): Add code to read DW_AT_rnglists_base and assign to
+	cu->ranges_base.  Also pass die tag to read_attribute_reprocess.
+	(partial_die_info::read): Check for DW_FORM_rnglistx when setting
+	need_ranges_base and update comment appropriately.  Also pass die tag
+	to read_attribute_reprocess and dwarf2_ranges_read.
+	(read_loclist_header): Rename function to read_loclists_rnglists_header,
+	and update function comment appropriately.
+	(read_loclist_index): Call read_loclists_rnglists_header instead of
+	read_loclist_header.
+	(read_rnglist_index): New function.
+	(read_attribute_reprocess):  Add tag parameter. Add code for
+	DW_FORM_rnglistx, passing tag to read_rnglist_index.
+	(read_attribute_value): Mark DW_FORM_rnglistx with need_reprocess.
+
+2020-07-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* f-typeprint.c (f_type_print_base): Allow for dynamic types not
+	being resolved.
+
+2020-07-14  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arch-utils.c (show_architecture): Update formatting of messages.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <bounds>: Handle array and string
+	types.
+	* ada-lang.c (assign_aggregate): Use type::bounds on
+	array/string type.
+	* c-typeprint.c (c_type_print_varspec_suffix): Likewise.
+	* c-varobj.c (c_number_of_children): Likewise.
+	(c_describe_child): Likewise.
+	* eval.c (evaluate_subexp_for_sizeof): Likewise.
+	* f-typeprint.c (f_type_print_varspec_suffix): Likewise.
+	(f_type_print_base): Likewise.
+	* f-valprint.c (f77_array_offset_tbl): Likewise.
+	(f77_get_upperbound): Likewise.
+	(f77_print_array_1): Likewise.
+	* guile/scm-type.c (gdbscm_type_range): Likewise.
+	* m2-typeprint.c (m2_array): Likewise.
+	(m2_is_long_set_of_type): Likewise.
+	* m2-valprint.c (get_long_set_bounds): Likewise.
+	* p-typeprint.c (pascal_type_print_varspec_prefix): Likewise.
+	* python/py-type.c (typy_range): Likewise.
+	* rust-lang.c (rust_internal_print_type): Likewise.
+	* type-stack.c (type_stack::follow_types): Likewise.
+	* valarith.c (value_subscripted_rvalue): Likewise.
+	* valops.c (value_cast): Likewise.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (TYPE_ARRAY_BIT_STRIDE): Remove.  Update all
+	callers to use the equivalent accessor methods.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct range_bounds) <bit_stride>: New method.
+	(struct type) <bit_stride>: New method.
+	(TYPE_BIT_STRIDE): Remove.
+	* gdbtypes.c (update_static_array_size): Use type::bit_stride.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_ARRAY_LOWER_BOUND_VALUE,
+	TYPE_ARRAY_UPPER_BOUND_VALUE): Remove.  Update all
+	callers to use the equivalent accessor methods instead.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_ARRAY_UPPER_BOUND_IS_UNDEFINED,
+	TYPE_ARRAY_LOWER_BOUND_IS_UNDEFINED): Remove.  Update all
+	callers to use the equivalent accessor methods instead.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_LOW_BOUND_KIND,
+	TYPE_HIGH_BOUND_KIND): Remove.  Update all callers
+	to use dynamic_prop::kind.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_LOW_BOUND_UNDEFINED,
+	TYPE_HIGH_BOUND_UNDEFINED): Remove.  Update all callers
+	to get the bound property's kind and check against
+	PROP_UNDEFINED.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_LOW_BOUND, TYPE_HIGH_BOUND): Remove.  Update
+	all callers to use type::range_bounds followed by
+	dynamic_prop::{low,high}.
+
+2020-07-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.h (struct dynamic_prop) <kind, set_undefined,
+	const_val, set_const_val, baton, set_locexpr, set_loclist,
+	set_addr_offset, variant_parts, set_variant_parts,
+	original_type, set_original_type>: New methods.
+	<kind>: Rename to...
+	<m_kind>: ... this.  Update all users to use the new methods
+	instead.
+	<data>: Rename to...
+	<m_data>: ... this.  Update all users to use the new methods
+	instead.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.c (get_discrete_bounds): Return failure if
+	the range type's bounds are not both defined and constant
+	values.
+	(get_array_bounds): Update comment.  Remove undefined bound check.
+
+2020-07-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.h (TYPE_RANGE_DATA): Remove.  Update callers to use
+	the type::bounds method directly.
+
+2020-07-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <bounds, set_bounds>: New methods.
+	(TYPE_RANGE_DATA): Use type::bounds.  Change all uses that
+	are used to set the range type's bounds to use set_bounds.
+
+2020-07-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* exec.c (_initialize_exec): Update exec-file-mismatch help.
+
+2020-07-10  Pedro Alves  <pedro@palves.net>
+
+	* gdbthread.h (inferior_ref): Define.
+	(scoped_restore_current_thread) <m_thread>: Now a thread_info_ref.
+	(scoped_restore_current_thread) <m_inf>: Now an inferior_ref.
+	* thread.c
+	(scoped_restore_current_thread::restore):
+	Adjust to gdb::ref_ptr.
+	(scoped_restore_current_thread::~scoped_restore_current_thread):
+	Remove manual decref handling.
+	(scoped_restore_current_thread::scoped_restore_current_thread):
+	Adjust to use
+	inferior_ref::new_reference/thread_info_ref::new_reference.
+	Incref the thread before calling get_frame_id instead of after.
+	Let TARGET_CLOSE_ERROR propagate.
+
+2020-07-10  Pedro Alves  <pedro@palves.net>
+
+	* frame-tailcall.c (dwarf2_tailcall_sniffer_first): Only swallow
+	NO_ENTRY_VALUE_ERROR / MEMORY_ERROR / OPTIMIZED_OUT_ERROR /
+	NOT_AVAILABLE_ERROR.
+	* value.c (value_optimized_out): Only swallow MEMORY_ERROR /
+	OPTIMIZED_OUT_ERROR / NOT_AVAILABLE_ERROR.
+
+2020-07-10  Simon Marchi  <simon.marchi@polymtl.ca>
+	    Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26199
+	* infrun.c (threads_are_resumed_pending_p): Delete.
+	(do_target_wait): Remove threads_are_executing and
+	threads_are_resumed_pending_p checks from the inferior_matches
+	lambda.  Update comments.
+
+2020-07-10  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26199
+	* infrun.c (handle_no_resumed): Transfer terminal to inferior with
+	executing threads.
+
+2020-07-10  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26199
+	* infrun.c (handle_no_resumed): Handle multiple targets.
+
+2020-07-10  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26199
+	* infrun.c (prepare_to_wait): Check target_can_async_p instead of
+	target_is_async_p.
+
+2020-07-10  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26199
+	* target.c (target_pass_ctrlc): Look at the inferior's non-exited
+	threads, not all threads.
+
+2020-07-10  Pedro Alves  <pedro@palves.net>
+
+	PR gdb/26199
+	* remote.c (remote_target::open_1): Pass remote target pointer as
+	data to create_async_event_handler.
+	(remote_async_inferior_event_handler): Mark async event handler
+	before returning if the remote target still has either pending
+	events or unacknowledged notifications.
+
+2020-07-10  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.h (fbsd_nat_target::supports_multi_process): New
+	declaration.
+	* fbsd-nat.c (fbsd_nat_target::supports_multi_process): New
+	function.
+
+2020-07-09  John Baldwin  <jhb@FreeBSD.org>
+
+	* inf-ptrace.c (inf_ptrace_target::wait): Don't compare against
+	inferior_ptid.
+
+2020-07-09  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-tdep.c (fbsd_print_auxv_entry): Handle AT_FREEBSD_ARGC,
+	AT_FREEBSD_ARGV, AT_FREEBSD_ENVC, AT_FREEBSD_ENVV,
+	AT_FREEBSD_PS_STRINGS.
+
+2020-07-08  Hannes Domani  <ssbssa@yahoo.de>
+
+	* auto-load.c (auto_load_objfile_script_1): Convert drive part
+	of debugfile path on Windows.
+
+2020-07-08  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-nat.c (fbsd_nat_target::find_memory_regions): Rename 'obfd'
+	argument to 'data'.
+
+2020-07-08  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_exception_message_1): Use read_memory.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR python/22748
+	* dwarf2/frame-tailcall.c (dwarf2_tailcall_sniffer_first): Remove
+	special handling for inline frames.
+	* findvar.c (value_of_register_lazy): Skip inline frames when
+	creating lazy register values.
+	* frame.c (frame_id_computed_p): Delete definition.
+	* frame.h (frame_id_computed_p): Delete declaration.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention additions to Python API.
+	* python/py-arch.c (archpy_register_groups): New function.
+	(arch_object_methods): Add 'register_groups' method.
+	* python/py-registers.c (reggroup_iterator_object): New struct.
+	(reggroup_object): New struct.
+	(gdbpy_new_reggroup): New function.
+	(gdbpy_reggroup_to_string): New function.
+	(gdbpy_reggroup_name): New function.
+	(gdbpy_reggroup_iter): New function.
+	(gdbpy_reggroup_iter_next): New function.
+	(gdbpy_new_reggroup_iterator): New function
+	(gdbpy_initialize_registers): Register new types.
+	(reggroup_iterator_object_type): Define new Python type.
+	(gdbpy_reggroup_getset): New static global.
+	(reggroup_object_type): Define new Python type.
+	* python/python-internal.h
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* Makefile.in (SUBDIR_PYTHON_SRCS): Add py-registers.c
+	* python/py-arch.c (archpy_registers): New function.
+	(arch_object_methods): Add 'registers' method.
+	* python/py-registers.c: New file.
+	* python/python-internal.h
+	(gdbpy_new_register_descriptor_iterator): Declare.
+	(gdbpy_initialize_registers): Declare.
+	* python/python.c (do_start_initialization): Call
+	gdbpy_initialize_registers.
+	* NEWS: Mention additions to the Python API.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention new Python API method.
+	* python/py-unwind.c (pending_framepy_architecture): New function.
+	(pending_frame_object_methods): Add architecture method.
+
+2020-07-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbarch.c: Regenerate.
+	* gdbarch.h: Regenerate.
+	* gdbarch.sh (deprecated_set_gdbarch_data): Delete.
+	(gdbarch_data): Use internal_error for the case where
+	deprecated_set_gdbarch_data was originally needed.
+	* ia64-libunwind-tdep.c (libunwind_descr_init): Update parameters,
+	and use passed in obstack.
+	(libunwind_frame_set_descr): Should no longer get back NULL from
+	gdbarch_data.
+	(_initialize_libunwind_frame): Register as a pre-init gdbarch data
+	type.
+	* user-regs.c (user_regs_init): Update parameters, and use passed
+	in obstack.
+	(user_reg_add): Should no longer get back NULL from gdbarch_data.
+	(_initialize_user_regs): Register as a pre-init gdbarch data type.
+
+2020-07-06  Tom de Vries  <tdevries@suse.de>
+
+	* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Handle
+	End-Of-Sequence in lte_is_less_than.
+	* symtab.c (find_pc_sect_line): Revert change from commit 3d92a3e313
+	"gdb: Don't reorder line table entries too much when sorting".
+
+2020-07-06  Tom de Vries  <tdevries@suse.de>
+
+	PR tui/26205
+	* tui/tui-win.c (tui_partial_win_by_name): Don't test for NULL name.
+
+2020-07-05  Tom de Vries  <tdevries@suse.de>
+
+	PR build/26187
+	* inferior.h (struct infcall_suspend_state_deleter): If available, use
+	std::uncaught_exceptions instead of deprecated
+	std::uncaught_exception.
+
+2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* macroexp.h (macro_stringify): Return
+	gdb::unique_xmalloc_ptr<char>.
+	* macroexp.c (macro_stringify): Likewise.
+	* macrotab.c (fixup_definition): Update.
+
+2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* c-exp.y (scan_macro_expansion): Don't free `expansion`.
+	(lex_one_token): Update.
+	* macroexp.c (struct macro_buffer) <release>: Return
+	gdb::unique_xmalloc_ptr<char>.
+	(macro_stringify): Update.
+	(macro_expand): Update.
+	(macro_expand_next): Return gdb::unique_xmalloc_ptr<char>.
+	* macroexp.h (macro_expand_next): Likewise.
+
+2020-07-02  Simon Marchi  <simon.marchi@efficios.com>
+
+	* macroexp.h (macro_lookup_ftype): Remove.
+	(macro_expand, macro_expand_once, macro_expand_next): Remove
+	lookup function parameters, add scope parameter.
+	* macroexp.c (scan, substitute_args, expand, maybe_expand,
+	macro_expand, macro_expand_once, macro_expand_next): Likewise.
+	* macroscope.h (standard_macro_lookup): Change parameter type
+	to macro_scope.
+	* macroscope.c (standard_macro_lookup): Likewise.
+	* c-exp.y (lex_one_token): Update.
+	* macrocmd.c (macro_expand_command): Likewise.
+	(macro_expand_once_command): Likewise.
+
+2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* inf-loop.c (inferior_event_handler): Remove client_data param.
+	* inf-loop.h (inferior_event_handler): Likewise.
+	* infcmd.c (step_1): Adjust.
+	* infrun.c (proceed): Adjust.
+	(fetch_inferior_event): Remove client_data param.
+	(infrun_async_inferior_event_handler): Adjust.
+	* infrun.h (fetch_inferior_event): Remove `void *` param.
+	* linux-nat.c (handle_target_event): Adjust.
+	* record-btrace.c (record_btrace_handle_async_inferior_event):
+	Adjust.
+	* record-full.c (record_full_async_inferior_event_handler):
+	Adjust.
+	* remote.c (remote_async_inferior_event_handler): Adjust.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (struct tui_win_info) <name>: Now pure virtual.
+	* tui/tui-stack.h (struct tui_locator_window) <name>: New method.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (tui_win_info::refresh_window): Move from
+	tui_gen_win_info.
+	(tui_win_info::make_window): Merge with
+	tui_gen_win_info::make_window.
+	(tui_win_info::make_visible): Move from tui_gen_win_info.
+	* tui/tui-win.c (tui_win_info::max_width): Move from
+	tui_gen_win_info.
+	* tui/tui-layout.h (class tui_layout_window) <m_window>: Change
+	type.
+	<window_factory>: Likewise.
+	* tui/tui-layout.c (tui_win_info::resize): Move from
+	tui_gen_win_info.
+	(make_standard_window): Change return type.
+	(get_locator_window, tui_get_window_by_name): Likewise.
+	(tui_layout_window::apply): Remove a cast.
+	* tui/tui-data.h (MIN_WIN_HEIGHT): Move earlier.
+	(struct tui_win_info): Merge with tui_gen_win_info.
+	(struct tui_gen_win_info): Remove.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (struct tui_locator_window): Derive from
+	tui_win_info.
+	<do_scroll_horizontal, do_scroll_vertical>: New methods.
+	<can_box>: New method.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.h (struct tui_locator_window): Remove body.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::display_registers_from)
+	(tui_data_window::display_registers_from)
+	(tui_data_window::first_data_item_displayed)
+	(tui_data_window::delete_data_content_windows): Update.
+	(tui_data_window::refresh_window, tui_data_window::no_refresh):
+	Remove.
+	(tui_data_window::check_register_values): Update.
+	(tui_data_item_window::rerender): Add parameters.  Update.
+	(tui_data_item_window::refresh_window): Remove.
+	* tui/tui-data.h (struct tui_gen_win_info) <no_refresh>: No longer
+	virtual.
+	* tui/tui-regs.h (struct tui_data_item_window): Don't derive from
+	tui_gen_win_info.
+	<refresh_window, max_height, min_height>: Remove.
+	<rerender>: Add parameters.
+	<x, y, visible>: New members.
+	(struct tui_data_window) <refresh_window, no_refresh>: Remove.
+	<m_item_width>: New member.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::show_register_group)
+	(tui_data_window::check_register_values): Update.
+	* tui/tui-regs.h (struct tui_data_item_window) <regno>: Rename
+	from item_no.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::show_register_group): Remove
+	useless "if".
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::show_register_group): Update.
+	* tui/tui-regs.h (struct tui_data_item_window) <name>: Remove.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-stack.c (SINGLE_KEY): Move from tui-data.h
+	* tui/tui-winsource.h (enum tui_line_or_address_kind)
+	(struct tui_line_or_address): Move from tui-data.h.
+	* tui/tui-win.c (DEFAULT_TAB_LEN): Move from tui-data.h.
+	* tui/tui-data.h (DEFAULT_TAB_LEN): Move to tui-win.c.
+	(tui_cmd_window, tui_source_window_base, tui_source_window)
+	(tui_disasm_window): Don't declare.
+	(enum tui_line_or_address_kind, struct tui_line_or_address): Move
+	to tui-winsource.h.
+	(SINGLE_KEY): Move to tui-stack.c.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.h (struct tui_data_item_window) <content>: Now a
+	std::string.
+	* tui/tui-regs.c (class tab_expansion_file): New.
+	(tab_expansion_file::write): New method.
+	(tui_register_format): Change return type.  Use
+	tab_expansion_file.
+	(tui_get_register, tui_data_window::display_registers_from)
+	(tui_data_item_window::rerender): Update.
+	* tui/tui-io.h (tui_expand_tabs): Don't declare.
+	* tui/tui-io.c (tui_expand_tabs): Remove.
+
+2020-07-01  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_reggroup_completer): Use complete_on_enum.
+
+2020-07-01  Fangrui Song  <maskray@google.com>
+
+	* dwarf2/read.c (lnp_state_machine::check_line_address): Test -1.
+
+2020-07-01  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+
+	* dwarf2/read.c (set_die_type): Removed conditions to restrict
+	forms for DW_AT_associated and DW_AT_allocated attributes,
+	which is already checked in function attr_to_dynamic_prop.
+
+2020-06-30  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (quirk_rust_enum): Correctly call
+	alloc_rust_variant for default-less enum.
+
+2020-06-30  Tom Tromey  <tromey@adacore.com>
+
+	PR build/26183:
+	* ada-lang.c (ada_lookup_name_info::ada_lookup_name_info): Use
+	gdb::to_string.
+
+2020-06-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh (displaced_step_copy_insn): Update doc.
+	* gdbarch.h: Re-generate.
+
+2020-06-28  Tom Tromey  <tom@tromey.com>
+
+	* command.h (cmd_types): Remove.
+	(cmd_type): Don't declare.
+	* cli/cli-decode.h (enum cmd_types): Uncomment.  No longer a
+	typedef.
+	* cli/cli-cmds.c (setting_cmd): Use cmd->type directly.
+	* cli/cli-decode.c (cmd_type): Remove.
+
+2020-06-27  Pedro Alves  <palves@redhat.com>
+
+	* fork-child.c (prefork_hook): Adjust.
+	* infcmd.c (set_inferior_io_terminal, get_inferior_io_terminal):
+	Delete.
+	(set_inferior_tty_command, show_inferior_tty_command): Adjust.
+	* inferior.c (inferior::set_tty, inferior::tty): New methods.
+	* inferior.h (set_inferior_io_terminal, get_inferior_io_terminal):
+	Remove declarations.
+	(struct inferior) <set_tty, tty>: New methods.
+	(struct inferior) <terminal>: Rename to ...
+	(struct inferior) <m_terminal>: ... this and make private.
+	* main.c (captured_main_1): Adjust.
+	* mi/mi-cmd-env.c (mi_cmd_inferior_tty_set): Adjust.
+	(mi_cmd_inferior_tty_show): Adjust.
+	* nto-procfs.c (nto_procfs_target::create_inferior): Adjust.
+	* windows-nat.c (windows_nat_target::create_inferior): Adjust.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac: Add --enable-libctf: handle --disable-static
+	properly.
+	* acinclude.m4: sinclude ../config/enable.m4.
+	* Makefile.in (aclocal_m4_deps): Adjust accordingly.
+	(LIBCTF): Substitute in.
+	(CTF_DEPS): New, likewise.
+	(CLIBS): libctf needs symbols from libbfd: move earlier.
+	(CDEPS): Use CTF_DEPS, not LIBCTF, now LIBCTF can include rpath
+	flags.
+	* ctfread.c: Surround in ENABLE_LIBCTF.
+	(elfctf_build_psymtabs) [!ENABLE_LIBCTF]: New stub.
+	* configure: Regenerate.
+	* config.in: Likewise.
+
+2020-06-25  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infcmd.c (set_inferior_io_terminal): Use make_unique_xstrdup.
+
+2020-06-25  Simon Marchi  <simon.marchi@efficios.com>
+
+	* inferior.h (struct inferior) <terminal>: Change type to
+	gdb::unique_xmalloc_ptr<char>.
+	* inferior.c (inferior::~inferior): Don't free inf->terminal.
+	* infcmd.c (set_inferior_io_terminal): Don't free terminal
+	field, adjust to unique pointer.
+	(get_inferior_io_terminal): Adjust to unique pointer.
+
+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_print_registers_info): Loop over all
+	registers, not just the known core set of registers.
+
+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_register_name): Return NULL for duplicate
+	fflags, frm, and fcsr registers.
+	(riscv_register_reggroup_p): Remove unknown CSRs from save and
+	restore groups.
+	(riscv_tdesc_unknown_reg): New function.
+	(riscv_gdbarch_init): Pass riscv_tdesc_unknown_reg to
+	tdesc_use_registers.
+	* riscv-tdep.h (struct gdbarch_tdep): Add
+	unknown_csrs_first_regnum, unknown_csrs_count,
+	duplicate_fflags_regnum, duplicate_frm_regnum, and
+	duplicate_fcsr_regnum fields.
+
+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* target-descriptions.c (tdesc_use_registers): Add new parameter a
+	callback, use the callback (when not null) to help number unknown
+	registers.
+	* target-descriptions.h (tdesc_unknown_register_ftype): New typedef.
+	(tdesc_use_registers): Add extra parameter to declaration.
+
+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (value_of_riscv_user_reg): Moved to here from later
+	in the file.
+	(class riscv_pending_register_alias): Likewise.
+	(riscv_register_feature::register_info): Change 'required_p' field
+	to 'required', and change its type.  Add 'check' member function.
+	(riscv_register_feature::register_info::check): Define new member
+	function.
+	(riscv_xreg_feature): Change initialisation of 'required' field.
+	(riscv_freg_feature): Likewise.
+	(riscv_virtual_feature): Likewise.
+	(riscv_csr_feature): Likewise.
+	(riscv_check_tdesc_feature): Take extra parameter, the csr
+	tdesc_feature, rewrite the function to use the new
+	riscv_register_feature::register_info::check function.
+	(riscv_gdbarch_init): Pass the csr tdesc_feature where needed.
+
+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* features/Makefile: Remove all references to the deleted files
+	below.
+	* features/riscv/32bit-csr.c: Deleted.
+	* features/riscv/32bit-csr.xml: Deleted.
+	* features/riscv/64bit-csr.c: Deleted.
+	* features/riscv/64bit-csr.xml: Deleted.
+	* features/riscv/rebuild-csr-xml.sh: Deleted.
+
+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (struct riscv_register_feature::register_info): Fix
+	whitespace error for declaration of names member variable.
+	(struct riscv_register_feature): Add new prefer_first_name member
+	variable, and fix whitespace error in declaration of registers.
+	(riscv_xreg_feature): Initialize prefer_first_name field.
+	(riscv_freg_feature): Likewise.
+	(riscv_virtual_feature): Likewise.
+	(riscv_csr_feature): Likewise.
+	(riscv_register_name): Expand on comments.  Remove register name
+	modifications for CSR and virtual registers.
+
+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (struct riscv_register_feature): Fix whitespace
+	errors.
+
+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* riscv-tdep.c (riscv_create_csr_aliases): Handle csr aliases from
+	riscv-opc.h.
+	(class riscv_pending_register_alias): New class.
+	(riscv_check_tdesc_feature): Take vector of pending aliases and
+	populate it as appropriate.
+	(riscv_setup_register_aliases): Delete.
+	(riscv_gdbarch_init): Create vector of pending aliases and pass it
+	to riscv_check_tdesc_feature in all cases.  Use the vector to
+	create the register aliases.
+
+2020-06-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* sol2-tdep.c (sol2_static_transform_name): Remove.
+	(sol2_init_abi): Don't register it.
+	* gdbarch.sh (static_transform_name): Remove.
+	* gdbarch.c, gdbarch.h: Regenerate.
+
+	* dbxread.c (read_dbx_symtab) <'S'>: Remove call to
+	gdbarch_static_transform_name.
+	* mdebugread.c (parse_partial_symbols) <'S'>: Likewise.
+	* stabsread.c (define_symbol) <'X'>: Remove.
+	(define_symbol) <'S'>: Remove gdbarch_static_transform_name
+	handling.
+	<'V'>: Likewise.
+	* xcoffread.c (scan_xcoff_symtab): Remove gdbarch.
+	<'S'>: Remove call to gdbarch_static_transform_name.
+
+2020-06-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* procfs.c (procfs_pre_trace): New function.
+	(procfs_target::create_inferior): Pass it to fork_inferior.
+
+2020-06-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* configure.tgt <sparc-*-linux*> (gdb_target_obs): Remove
+	sparc-sol2-tdep.o, sol2-tdep.o, sparc64-sol2-tdep.o.
+	<sparc64-*-linux*> (gdb_target_obs): Remove sparc64-sol2-tdep.o,
+	sol2-tdep.o, sparc-sol2-tdep.o.
+	* sparc-sol2-tdep.c (sparc32_sol2_init_abi): Make static.
+	* sparc-tdep.h (sparc32_sol2_init_abi): Remove.
+	* sparc64-sol2-tdep.c (sparc64_sol2_init_abi): Make static.
+	* sparc64-tdep.h (sparc64_sol2_init_abi): Remove.
+
+2020-06-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* amd64-sol2-tdep.c (amd64_sol2_sigtramp_p): Remove.
+	(amd64_sol2_init_abi): Use sol2_sigtramp_p.
+	Call sol2_init_abi.
+ 	Remove calls to set_gdbarch_skip_solib_resolver,
+	set_gdbarch_core_pid_to_str.
+	* i386-sol2-tdep.c (i386_sol2_sigtramp_p): Remove.
+	(i386_sol2_static_transform_name): Remove.
+	(i386_sol2_init_abi): Call sol2_init_abi.
+	Remove calls to set_gdbarch_sofun_address_maybe_missing,
+	set_gdbarch_static_transform_name,
+	set_gdbarch_skip_solib_resolver, set_gdbarch_core_pid_to_str.
+	Use sol2_sigtramp_p.
+	* sol2-tdep.c (sol2_pc_in_sigtramp): New function.
+	(sol2_sigtramp_p): New function.
+	(sol2_static_transform_name): New function.
+	(sol2_skip_solib_resolver, sol2_core_pid_to_str): Make static.
+	(sol2_init_abi): New function.
+	* sol2-tdep.h (sol2_sigtramp_p, sol2_init_abi): Declare.
+	(sol2_skip_solib_resolver, sol2_core_pid_to_str): Remove.
+	* sparc-sol2-tdep.c (sparc_sol2_pc_in_sigtramp): Remove.
+	(sparc32_sol2_sigtramp_frame_sniffer): Just call sol2_sigtramp_p.
+	(sparc_sol2_static_transform_name): Remove.
+	(sparc32_sol2_init_abi): Call sol2_init_abi.
+	Remove calls to set_gdbarch_sofun_address_maybe_missing,
+	set_gdbarch_static_transform_name,
+	set_gdbarch_skip_solib_resolver,
+	set_gdbarch_core_pid_to_str.
+	* sparc-tdep.h (sparc_sol2_pc_in_sigtramp)
+	(sparc_sol2_static_transform_name): Remove
+	* sparc64-sol2-tdep.c (sparc64_sol2_sigtramp_frame_sniffer): Just
+	call sol2_sigtramp_p.
+	(sparc64_sol2_init_abi): Call sol2_init_abi.
+	Remove calls to set_gdbarch_sofun_address_maybe_missing,
+	set_gdbarch_static_transform_name,
+	set_gdbarch_skip_solib_resolver, set_gdbarch_core_pid_to_str.
+
+2020-06-24  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* symfile-add-flags.h: New flag SYMFILE_ALWAYS_CONFIRM.
+	* exec.c (validate_exec_file): If from_tty, set both
+	SYMFILE_VERBOSE (== from_tty) and SYMFILE_ALWAYS_CONFIRM.
+	* symfile.c (symbol_file_add_with_addrs): if always_confirm
+	and from_tty, unconditionally ask a confirmation.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* target-descriptions.c (tdesc_architecture_name): Protect against
+	NULL pointer dereference.
+	(maint_print_xml_tdesc_cmd): New function.
+	(_initialize_target_descriptions): Register new 'maint print
+	xml-tdesc' command and give it the filename completer.
+	* NEWS: Mention new 'maint print xml-tdesc' command.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* target-descriptions.c (class tdesc_compatible_info): New class.
+	(struct target_desc): Change type of compatible vector.
+	(tdesc_compatible_p): Update for change in type of
+	target_desc::compatible.
+	(tdesc_compatible_info_list): New function.
+	(tdesc_compatible_info_arch_name): New function.
+	(tdesc_add_compatible): Update for change in type of
+	target_desc::compatible.
+	(print_c_tdesc::visit_pre): Likewise.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* target-descriptions.c (print_c_tdesc::print_c_tdesc): Change
+	whitespace to underscore.
+	(maint_print_c_tdesc_cmd): Use fake filename for target
+	descriptions that came from the target.
+	(_initialize_target_descriptions): Add filename command completion
+	for 'maint print c-tdesc'.
+
+2020-06-23  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/loc.c (decode_debug_loclists_addresses): Add empty
+	lines.
+
+2020-06-23  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/loc.c (decode_debug_loc_dwo_addresses): Add empty
+	lines.
+	(dwarf2_find_location_expression): Likewise.
+	(call_site_parameter_matches): Likewise.
+	(dwarf2_compile_expr_to_ax): Likewise.
+	(disassemble_dwarf_expression): Likewise.
+	(loclist_describe_location): Likewise.
+
+2020-06-23  Pedro Alves  <palves@redhat.com>
+
+	* gdbarch-selftests.c: Don't include inferior.h, gdbthread.h or
+	progspace-and-thread.h.  Include scoped-mock-context.h instead.
+	(register_to_value_test): Use scoped_mock_context.
+	* regcache.c: Include "scoped-mock-context.h".
+	(cooked_read_test): Don't error out if a target is already pushed.
+	Use scoped_mock_context.  Adjust.
+	* scoped-mock-context.h: New file.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_is_string_type_p
+	initializer.
+	(ada_language::is_string_type_p): New member function.
+	* c-lang.c (c_language_data): Delete la_is_string_type_p
+	initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_is_string_type_p): Delete function, implementation
+	moved to f_language::is_string_type_p.
+	(f_language_data): Delete la_is_string_type_p initializer.
+	(f_language::is_string_type_p): New member function,
+	implementation from f_is_string_type_p.
+	* go-lang.c (go_is_string_type_p): Delete function, implementation
+	moved to go_language::is_string_type_p.
+	(go_language_data): Delete la_is_string_type_p initializer.
+	(go_language::is_string_type_p): New member function,
+	implementation from go_is_string_type_p.
+	* language.c (language_defn::is_string_type_p): Define new member
+	function.
+	(default_is_string_type_p): Make static, add comment copied from
+	header file.
+	(unknown_language_data): Delete la_is_string_type_p initializer.
+	(unknown_language::is_string_type_p): New member function.
+	(auto_language_data): Delete la_is_string_type_p initializer.
+	(auto_language::is_string_type_p): New member function.
+	* language.h (language_data): Delete la_is_string_type_p field.
+	(language_defn::is_string_type_p): Declare new function.
+	(default_is_string_type_p): Delete desclaration, move comment to
+	definition.
+	* m2-lang.c (m2_is_string_type_p): Delete function, implementation
+	moved to m2_language::is_string_type_p.
+	(m2_language_data): Delete la_is_string_type_p initializer.
+	(m2_language::is_string_type_p): New member function,
+	implementation from m2_is_string_type_p.
+	* objc-lang.c (objc_language_data): Delete la_is_string_type_p
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_is_string_type_p): Delete function,
+	implementation moved to pascal_language::is_string_type_p.
+	(pascal_language_data): Delete la_is_string_type_p initializer.
+	(pascal_language::is_string_type_p): New member function,
+	implementation from pascal_is_string_type_p.
+	* rust-lang.c (rust_is_string_type_p): Delete function,
+	implementation moved to rust_language::is_string_type_p.
+	(rust_language_data): Delete la_is_string_type_p initializer.
+	(rust_language::is_string_type_p): New member function,
+	implementation from rust_is_string_type_p.
+	* valprint.c (val_print_scalar_or_string_type_p): Update call to
+	is_string_type_p.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_print_typedef
+	initializer.
+	(ada_language::print_typedef): New member function.
+	* c-lang.c (c_language_data): Delete la_print_typedef initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	(f_language::print_typedef): New member function.
+	* go-lang.c (go_language_data): Delete la_print_typedef
+	initializer.
+	* language.c (language_defn::print_typedef): Define member
+	function.
+	(unknown_language_data): Delete la_print_typedef initializer.
+	(unknown_language::print_typedef): New member function.
+	(auto_language_data): Delete la_print_typedef initializer.
+	(auto_language::print_typedef): New member function.
+	* language.h (language_data): Delete la_print_typedef field.
+	(language_defn::print_typedef): Declare new member function.
+	(LA_PRINT_TYPEDEF): Update call to print_typedef.
+	(default_print_typedef): Delete declaration.
+	* m2-lang.c (m2_language_data): Delete la_print_typedef
+	initializer.
+	(m2_language::print_typedef): New member function.
+	* objc-lang.c (objc_language_data): Delete la_print_typedef
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	(pascal_language::print_typedef): New member function.
+	* rust-lang.c (rust_print_typedef): Delete function,
+	implementation moved to rust_language::print_typedef.
+	(rust_language): Delete la_print_typedef initializer.
+	(rust_language::print_typedef): New member function,
+	implementation from rust_print_typedef.
+	* typeprint.c (default_print_typedef): Delete.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_printstr initializer.
+	(ada_language::printstr): New member function.
+	* c-lang.c (c_language_data): Delete la_printstr initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_printstr): Rename to f_language::printstr.
+	(f_language_data): Delete la_printstr initializer.
+	(f_language::printstr): New member function, implementation from
+	f_printstr.
+	* go-lang.c (go_language_data): Delete la_printstr initializer.
+	* language.c (language_defn::printstr): Define new member
+	function.
+	(unk_lang_printstr): Delete.
+	(unknown_language_data): Delete la_printstr initializer.
+	(unknown_language::printstr): New member function.
+	(auto_language_data): Delete la_printstr initializer.
+	(auto_language::printstr): New member function.
+	* language.h (language_data): Delete la_printstr field.
+	(language_defn::printstr): Declare new member function.
+	(LA_PRINT_STRING): Update call to printstr.
+	* m2-lang.c (m2_printstr): Rename to m2_language::printstr.
+	(m2_language_data): Delete la_printstr initializer.
+	(m2_language::printstr): New member function, implementation from
+	m2_printstr.
+	* objc-lang.c (objc_language_data): Delete la_printstr
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_printstr): Rename to pascal_language::printstr.
+	(pascal_language_data): Delete la_printstr initializer.
+	(pascal_language::printstr): New member function, implementation
+	from pascal_printstr.
+	* p-lang.h (pascal_printstr): Delete declaration.
+	* rust-lang.c (rust_printstr): Update header comment.
+	(rust_language_data): Delete la_printstr initializer.
+	(rust_language::printstr): New member function.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_printchar initializer.
+	(ada_language::printchar): New member function.
+	* c-lang.c (c_language_data): Delete la_printchar initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_printchar): Rename to f_language::printchar.
+	(f_language_data): Delete la_printchar initializer.
+	(f_language::printchar): New member function, implementation from
+	f_printchar.
+	* go-lang.c (go_language_data): Delete la_printchar initializer.
+	* language.c (unk_lang_printchar): Delete.
+	(language_defn::printchar): Define new member function.
+	(unknown_language_data): Delete la_printchar initializer.
+	(unknown_language::printchar): New member function.
+	(auto_language_data): Delete la_printchar initializer.
+	(auto_language::printchar): New member function.
+	* language.h (language_data): Delete la_printchar field.
+	(language_defn::printchar): Declare new member function.
+	(LA_PRINT_CHAR): Update call to printchar.
+	* m2-lang.c (m2_language_data): Delete la_printchar initializer.
+	(m2_language::printchar): New member function.
+	* objc-lang.c (objc_language_data): Delete la_printchar
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Delete la_printchar
+	initializer.
+	(pascal_language::printchar): New member function.
+	* rust-lang.c (rust_printchar): Rename to
+	rust_language::printchar.
+	(rust_language_data): Delete la_printchar initializer.
+	(rust_language::printchar): New member function, implementation
+	from rust_printchar.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (emit_char): Renamed to ada_language::emitchar.
+	(ada_language_data): Delete la_emitchar initializer.
+	(ada_language::emitchar): New member function, implementation from
+	emit_char.
+	* c-lang.c (c_language_data): Delete la_emitchar initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_emit_char): Rename to f_language::emitchar.
+	(f_language_data): Delete la_emitchar initializer.
+	(f_language::emitchar): New member function, implementation from
+	f_emit_char.
+	* go-lang.c (go_language_data): Delete la_emitchar initializer.
+	* language.c (unk_lang_emit_char): Delete.
+	(language_defn::emitchar): New member function definition.
+	(unknown_language_data): Delete la_emitchar initializer.
+	(unknown_language::emitchar): New member function.
+	(auto_language_data): Delete la_emitchar initializer.
+	(auto_language::emitchar): New member function.
+	* language.h (language_data): Delete la_emitchar field.
+	(language_defn::emitchar): New member field declaration.
+	(LA_EMIT_CHAR): Update call to emitchar.
+	* m2-lang.c (m2_emit_char): Rename to m2_language::emitchar.
+	(m2_language_data): Delete la_emitchar initializer.
+	(m2_language::emitchar): New member function, implementation from
+	m2_emit_char.
+	* objc-lang.c (objc_language_data): Delete la_emitchar
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_emit_char): Rename to pascal_language::emitchar.
+	(pascal_language_data): Delete la_emitchar initializer.
+	(pascal_language::emitchar): New member function, implementation
+	from pascal_emit_char.
+	* rust-lang.c (rust_emitchar): Rename to rust_language::emitchar.
+	(rust_language_data): Delete la_emitchar initializer.
+	(rust_language::emitchar): New member function, implementation
+	from rust_emitchar.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (resolve): Rename to ada_language::post_parser.
+	(ada_language_data): Delete la_post_parser initializer.
+	(ada_language::post_parser): New member function.
+	* c-lang.c (c_language_data): Delete la_post_parser initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_post_parser field.
+	(language_defn::post_parser): New member function.
+	* m2-lang.c (m2_language_data): Delete la_post_parser initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* parse.c (parse_exp_in_context): Update call to post_parser.
+	(null_post_parser): Delete definition.
+	* parser-defs.h (null_post_parser): Delete declaration.
+	* rust-lang.c (rust_language_data): Delete la_post_parser
+	initializer.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (parse): Rename to ada_language::parser.
+	(ada_language_data): Delete la_parser initializer.
+	(ada_language::parser): New member function, implementation from
+	parse.
+	* c-lang.c (c_language_data): Delete la_parser initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	(d_language::parser): New member function.
+	* f-lang.c (f_language_data): Delete la_parser initializer.
+	(f_language::parser): New member function.
+	* go-lang.c (go_language_data): Delete la_parser initializer.
+	(go_language::parser): New member function.
+	* language.c (unk_lang_parser): Delete.
+	(language_defn::parser): Define new member function.
+	(unknown_language_data): Delete la_parser initializer.
+	(unknown_language::parser): New member function.
+	(auto_language_data): Delete la_parser initializer.
+	(auto_language::parser): New member function.
+	* language.h (language_data): Delete la_parser field.
+	(language_defn::parser): Declare new member function.
+	* m2-lang.c (m2_language_data): Delete la_parser initializer.
+	(m2_language::parser): New member function.
+	* objc-lang.c (objc_language_data): Delete la_parser initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	(pascal_language::parser): New member function.
+	* parse.c (parse_exp_in_context): Update call to parser.
+	* rust-lang.c (rust_language_data): Delete la_parser initializer.
+	(rust_language::parser): New member function.
+
+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* top.c (print_gdb_configuration): Print --with-python-libdir
+	configuration value.
+
+2020-06-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention change to the alias command.
+
+2020-06-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-cmds.c (lookup_cmd_for_default_args)
+	(alias_command_completer)
+	(make_alias_options_def_group): New functions.
+	(alias_opts, alias_option_defs): New struct and array.
+	(alias_usage_error): Update usage.
+	(alias_command): Handles optional DEFAULT-ARGS... arguments.
+	Use option framework.
+	(_initialize_cli_cmds): Update alias command help.
+	Update aliases command help.
+	(show_user):
+	Add NULL for new default_args lookup_cmd argument.
+	(valid_command_p): Rename to validate_aliased_command.
+	Add NULL for new default_args lookup_cmd argument.  Verify that the
+	aliased_command has no default args.
+	* cli/cli-decode.c (help_cmd): Show aliases definitions.
+	(lookup_cmd_1, lookup_cmd): New argument default_args.
+	(add_alias_cmd):
+	Add NULL for new default_args lookup_cmd argument.
+	(print_help_for_command): Show default args under the layout
+	 alias some_alias = some_aliased_cmd some_alias_default_arg.
+	* cli/cli-decode.h (struct cmd_list_element): New member default_args.
+	xfree default_args in destructor.
+	* cli/cli-script.c (process_next_line, do_define_command):
+	Add NULL for new default_args lookup_cmd argument.
+	* command.h: Declare new default_args argument in lookup_cmd
+	and lookup_cmd_1.
+	* completer.c (complete_line_internal_1):
+	Add NULL for new default_args lookup_cmd or lookup_cmd_1 argument.
+	* guile/scm-cmd.c (gdbscm_parse_command_name): Likewise.
+	* guile/scm-param.c (add_setshow_generic, pascm_parameter_defined_p):
+	Likewise.
+	* infcmd.c (_initialize_infcmd): Likewise.
+	* python/py-auto-load.c (gdbpy_initialize_auto_load): Likewise.
+	* python/py-cmd.c (gdbpy_parse_command_name): Likewise.
+	* python/py-param.c (add_setshow_generic): Likewise.
+	* remote.c (_initialize_remote): Likewise.
+	* top.c (execute_command): Prepend default_args if command has some.
+	(set_verbose):
+	Add NULL for new default_args lookup_cmd or lookup_cmd_1 argument.
+	* tracepoint.c (validate_actionline, encode_actions_1):
+	Add NULL for new default_args lookup_cmd or lookup_cmd_1 argument.
+
+2020-06-22  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* jit.c (jit_read_descriptor): Use bool as the return type.
+	(jit_breakpoint_re_set_internal): Use bool as the return type.
+	Invert the return value logic; return true if the jit breakpoint
+	has been successfully initialized.
+	(jit_inferior_init): Update the call to
+	jit_breakpoint_re_set_internal.
+
+2020-06-22  Pedro Alves  <palves@redhat.com>
+
+	PR gdb/25939
+	* procfs.c (procfs_target::wait): Don't reference inferior_ptid.
+	Use the current inferior instead.  Don't return
+	TARGET_WAITKIND_SPURIOUS/inferior_ptid -- instead continue and
+	wait again.
+	* sol-thread.c (sol_thread_target::wait): Don't reference
+	inferior_ptid.
+	(ps_lgetregs, ps_lsetregs, ps_lgetfpregs, ps_lsetfpregs)
+	(sol_update_thread_list_callback): Use the current inferior's pid
+	instead of inferior_ptid.
+
+2020-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* procfs.c: Cleanup many comments.
+
+	(READ_WATCHFLAG, WRITE_WATCHFLAG, EXEC_WATCHFLAG)
+	(AFTER_WATCHFLAG): Replace by value.
+
+	(MAIN_PROC_NAME_FORMAT): Inline ...
+	(create_procinfo): ... here.
+
+	(procfs_debug_inferior): Remove SYS_exec handling.
+	(syscall_is_exec): Likewise.
+	(procfs_set_exec_trap): Likewise.
+
+	(syscall_is_lwp_exit): Inline in callers.
+	(syscall_is_exit): Likewise.
+	(syscall_is_exec): Likewise.
+	(syscall_is_lwp_create): Likewise.
+
+	(invalidate_cache): Remove #if 0 code.
+
+	(make_signal_thread_runnable):  Remove.
+	(procfs_target::resume): Remove #if 0 code.
+
+2020-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	PR gdb/25939
+	* procfs.c (procfs_target::procfs_init_inferior): Move push_target
+	call ...
+	(procfs_target::create_inferior): ... here.
+
+2020-06-21  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* exec.c (validate_exec_file): Ensure the build-id is up to
+	date by calling reopen_exec_file (that checks file timestamp
+	to decide to re-read the file).
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	PR gdb/25412
+	* gdbthread.h (delete_thread, delete_thread_silent)
+	(find_thread_ptid): Update comments.
+	* thread.c (current_thread_): New global.
+	(is_current_thread): Move higher, and reimplement.
+	(inferior_thread): Reimplement.
+	(set_thread_exited): Use bool.  Add assertions.
+	(add_thread_silent): Simplify thread-reuse handling by always
+	calling delete_thread.
+	(delete_thread): Remove intro comment.
+	(find_thread_ptid): Skip exited threads.
+	(switch_to_thread_no_regs): Write to current_thread_.
+	(switch_to_no_thread): Check CURRENT_THREAD_ instead of
+	INFERIOR_PTID.  Clear current_thread_.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* aix-thread.c (pd_update): Use switch_to_thread.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target): Update.
+	(ravenscar_thread_target::update_inferior_ptid): Rename to ...
+	(ravenscar_thread_target::add_active_thread): ... this.  Don't
+	set m_base_ptid here.  Update to avoid referencing inferior_ptid.
+	(ravenscar_thread_target::wait): Don't write to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* nat/windows-nat.c (current_windows_thread): Remove.
+	* nat/windows-nat.h (current_windows_thread): Remove.
+	* windows-nat.c (windows_nat_target::stopped_by_sw_breakpoint):
+	Adjust.
+	(display_selectors): Adjust to fetch the current
+	windows_thread_info based on inferior_ptid.
+	(fake_create_process): No longer write to current_windows_thread.
+	(windows_nat_target::get_windows_debug_event):
+	Don't set inferior_ptid or current_windows_thread.
+	(windows_nat_target::wait): Adjust to not rely on
+	current_windows_thread.
+	(do_initial_windows_stuff): Now a method of windows_nat_target.
+	Switch to the last_ptid thread.
+	(windows_nat_target::attach): Adjust.
+	(windows_nat_target::detach): Use switch_to_no_thread instead of
+	writing to inferior_ptid directly.
+	(windows_nat_target::create_inferior): Adjust.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* windows-nat.c (do_initial_windows_stuff): No longer set inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* go32-nat.c (go32_nat_target::create_inferior): Switch to thread
+	after creating it, instead of writing to inferior_ptid.  Don't
+	write to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* fork-child.c (postfork_hook): Don't write to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* bsd-kvm.c (bsd_kvm_target_open): Switch to thread after adding
+	it, instead of writing to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* btrace.c (btrace_fetch): Use switch_to_thread instead of writing
+	to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* bsd-kvm.c (bsd_kvm_target::close): Use switch_to_no_thread
+	instead of writing to inferior_ptid directly.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* corelow.c (core_target::close): Use switch_to_no_thread instead
+	of writing to inferior_ptid directly.
+	(add_to_thread_list, core_target_open): Use switch_to_thread
+	instead of writing to inferior_ptid directly.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* darwin-nat.c (darwin_nat_target::decode_message): Don't write to
+	inferior_ptid.
+	(darwin_nat_target::stop_inferior, darwin_nat_target::kill): Avoid
+	inferior_ptid.
+	(darwin_attach_pid): Use switch_to_no_thread instead of writing to
+	inferior_ptid directly.
+	(darwin_nat_target::init_thread_list): Switch to thread, instead
+	of writing to inferior_ptid.
+	(darwin_nat_target::attach): Don't write to inferior_ptid.
+	(darwin_nat_target::get_ada_task_ptid): Avoid inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* gnu-nat.c (gnu_nat_target::create_inferior): Switch to the added
+	thread.
+	(gnu_nat_target::attach): Don't write to inferior_ptid directly.
+	Instead use switch_to_thread.
+	(gnu_nat_target::detach): Use switch_to_no_thread
+	instead of writing to inferior_ptid directly.  Used passed-in
+	inferior instead of looking up the inferior by pid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* go32-nat.c (go32_nat_target::create_inferior): Don't write to
+	inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* nto-procfs.c (nto_procfs_target::update_thread_list): Avoid
+	inferior_ptid.
+	(nto_procfs_target::attach): Avoid inferior_ptid.  Switch to
+	thread.
+	(nto_procfs_target::detach): Avoid referencing
+	inferior_ptid.  Use switch_to_no_thread instead of writing to
+	inferior_ptid directly.
+	(nto_procfs_target::mourn_inferior): Use switch_to_no_thread
+	instead of writing to inferior_ptid directly.
+	(nto_procfs_target::create_inferior): Avoid inferior_ptid.  Switch
+	to thread.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* remote-sim.c (gdbsim_target::create_inferior): Switch to thread
+	after creating it, instead of writing to inferior_ptid.
+	(gdbsim_target_open): Use switch_to_no_thread instead of writing
+	to inferior_ptid directly.
+	(gdbsim_target::wait): Don't write to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (remote_target::remote_notice_new_inferior): Use
+	switch_to_thread instead of writing to inferior_ptid directly.
+	(remote_target::add_current_inferior_and_thread): Use
+	switch_to_no_thread instead of writing to inferior_ptid directly.
+	(extended_remote_target::attach): Use switch_to_inferior_no_thread
+	and switch_to_thread instead of using set_current_inferior or
+	writing to inferior_ptid directly.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* tracectf.c (ctf_target_open): Switch to added thread instead of
+	writing to inferior_ptid directly.
+	(ctf_target::close): Use switch_to_no_thread instead of writing to
+	inferior_ptid directly.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* tracefile-tfile.c (tfile_target_open): Don't write to
+	inferior_ptid directly, instead switch to added thread.
+	(tfile_target::close): Use switch_to_no_thread instead of writing
+	to inferior_ptid directly.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* procfs.c (procfs_target::attach): Don't write to inferior_ptid.
+	(procfs_target::detach): Use switch_to_no_thread
+	instead of writing to inferior_ptid directly.
+	(do_attach): Change return type to void.  Switch to the added
+	thread.
+	(procfs_target::create_inferior): Switch to the added thread.
+	(procfs_do_thread_registers): Don't write to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* infrun.c (generic_mourn_inferior): Use switch_to_thread instead
+	of writing to inferior_ptid.
+	(scoped_restore_exited_inferior): Delete.
+	(handle_vfork_child_exec_or_exit): Simplify using
+	scoped_restore_current_pspace_and_thread.  Use switch_to_thread
+	instead of writing to inferior_ptid.
+	(THREAD_STOPPED_BY): Delete.
+	(thread_stopped_by_watchpoint, thread_stopped_by_sw_breakpoint)
+	(thread_stopped_by_hw_breakpoint): Delete.
+	(save_waitstatus): Use
+	scoped_restore_current_thread+switch_to_thread, and call
+	target_stopped_by_watchpoint instead of
+	thread_stopped_by_watchpoint, target_stopped_by_sw_breakpoint
+	instead of thread_stopped_by_sw_breakpoint, and
+	target_stopped_by_hw_breakpoint instead of
+	thread_stopped_by_hw_breakpoint.
+	(handle_inferior_event)
+	<TARGET_WAITKIND_EXITED/TARGET_WAITKIND_SIGNALLED>: Don't write to
+	inferior_ptid directly, nor
+	set_current_inferior/set_current_program_space.  Use
+	switch_to_thread / switch_to_inferior_no_thread instead.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* target.c (generic_mourn_inferior): Use switch_to_no_thread
+	instead of writing to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* inf-ptrace.c (inf_ptrace_target::create_inferior): Switch to the
+	added thread.
+	(inf_ptrace_target::attach): Don't write to inferior_ptid.  Switch
+	to the added thread.
+	(inf_ptrace_target::detach_success): Use switch_to_no_thread
+	instead of writing to inferior_ptid.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* gdbarch-selftests.c: Include "progspace-and-thread.h".
+	(register_to_value_test): Mock a program_space too.  Heap-allocate
+	the address space.  Don't write to inferior_ptid.  Use
+	switch_to_thread instead.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* linux-tdep.c (find_signalled_thread(thread_info *,void *)):
+	Delete.
+	(find_signalled_thread()): New, factored out from
+	linux_make_corefile_notes and adjusted to handle exited threads.
+	(linux_make_corefile_notes): Adjust to use the new
+	find_signalled_thread.
+
+2020-06-18  Pedro Alves  <palves@redhat.com>
+
+	* linux-tdep.c (btrace_fetch): Save/restore current thread instead
+	of saving/restoring inferior_ptid.
+
+2020-06-17  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.h (tui_scroll_forward, tui_scroll_backward)
+	(tui_scroll_left, tui_scroll_right, struct tui_win_info): Don't
+	declare.
+	* tui/tui-data.h (MIN_CMD_WIN_HEIGHT): Remove.
+
+2020-06-15  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (dwarf2_initialize_objfile): Check for presence
+	of partial symtabs.
+
+2020-06-17  Simon Marchi  <simon.marchi@efficios.com>
+
+	* regformats/reg-arm.dat: Remove.
+	* regformats/reg-bfin.dat: Remove.
+	* regformats/reg-cris.dat: Remove.
+	* regformats/reg-crisv32.dat: Remove.
+	* regformats/reg-m32r.dat: Remove.
+	* regformats/reg-tilegx.dat: Remove.
+	* regformats/reg-tilegx32.dat: Remove.
+
+2020-06-17  Simon Marchi  <simon.marchi@efficios.com>
+
+	* features/Makefile (WHICH): Remove arm files.
+	* regformats/arm/arm-with-iwmmxt.dat: Remove.
+	* regformats/arm/arm-with-neon.dat: Remove.
+	* regformats/arm/arm-with-vfpv2.dat: Remove.
+	* regformats/arm/arm-with-vfpv3.dat: Remove.
+
+2020-06-17  Simon Marchi  <simon.marchi@efficios.com>
+
+	* features/Makefile (XMLTOC): Remove rx.xml.
+
+2020-06-17  Pedro Alves  <palves@redhat.com>
+
+	* gdbthread.h (thread_control_state) <trap_expected> Update
+	comments.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_lookup_symbol_nonlocal): Rename to
+	ada_language::lookup_symbol_nonlocal.
+	(ada_language_data): Delete la_lookup_symbol_nonlocal initializer.
+	(ada_language::lookup_symbol_nonlocal): New member function,
+	implementation from ada_lookup_symbol_nonlocal.
+	* c-lang.c (c_language_data): Delete la_lookup_symbol_nonlocal
+	initializer.
+	(cplus_language_data): Delete la_lookup_symbol_nonlocal
+	initializer.
+	(cplus_language::lookup_symbol_nonlocal): New member function.
+	(asm_language_data): Delete la_lookup_symbol_nonlocal initializer.
+	(minimal_language_data) Likewise.
+	* cp-namespace.c (cp_lookup_nested_symbol): Update comment.
+	* d-lang.c (d_language_data): Delete la_lookup_symbol_nonlocal
+	initializer.
+	(d_language::lookup_symbol_nonlocal): New member function.
+	* f-lang.c (f_language_data): Delete la_lookup_symbol_nonlocal
+	initializer.
+	(f_language::lookup_symbol_nonlocal): New member function.
+	* go-lang.c (go_language_data): Delete la_lookup_symbol_nonlocal
+	initializer.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_lookup_symbol_nonlocal
+	field.
+	(language_defn::lookup_symbol_nonlocal): New member function.
+	* m2-lang.c (m2_language_data): Delete la_lookup_symbol_nonlocal
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_lookup_symbol_nonlocal): Rename to
+	rust_language::lookup_symbol_nonlocal.
+	(rust_language_data): Delete la_lookup_symbol_nonlocal
+	initializer.
+	(rust_language::lookup_symbol_nonlocal): New member function,
+	implementation from rust_lookup_symbol_nonlocal.
+	* symtab.c (lookup_symbol_aux): Update call to
+	lookup_symbol_nonlocal.
+	(basic_lookup_symbol_nonlocal): Rename to...
+	(language_defn::lookup_symbol_nonlocal): ...this, and update
+	header comment.  Remove language_defn parameter, and replace with
+	uses of `this'.
+	* symtab.h (basic_lookup_symbol_nonlocal): Delete declaration.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_value_print_inner
+	initializer.
+	(ada_language::value_print_inner): New member function.
+	* c-lang.c (c_language_data): Delete la_value_print_inner
+	initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	(d_language::value_print_inner): New member function.
+	* f-lang.c (f_language_data): Delete la_value_print_inner
+	initializer.
+	(f_language::value_print_inner): New member function.
+	* f-lang.h (f_value_print_innner): Rename to...
+	(f_value_print_inner): ...this (note spelling of 'inner').
+	* f-valprint.c (f_value_print_innner): Rename to...
+	(f_value_print_inner): ...this (note spelling of 'inner').
+	* go-lang.c (go_language_data): Delete la_value_print_inner
+	initializer.
+	(go_language::value_print_inner): New member function.
+	* language.c (language_defn::value_print_inner): Define new member
+	function.
+	(unk_lang_value_print_inner): Delete.
+	(unknown_language_data): Delete la_value_print_inner initializer.
+	(unknown_language::value_print_inner): New member function.
+	(auto_language_data): Delete la_value_print_inner initializer.
+	(auto_language::value_print_inner): New member function.
+	* language.h (language_data): Delete la_value_print_inner field.
+	(language_defn::value_print_inner): Delcare new member function.
+	* m2-lang.c (m2_language_data): Delete la_value_print_inner
+	initializer.
+	(m2_language::value_print_inner): New member function.
+	* objc-lang.c (objc_language_data): Delete la_value_print_inner
+	initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	(pascal_language::value_print_inner): New member function.
+	* rust-lang.c (rust_language_data): Delete la_value_print_inner
+	initializer.
+	(rust_language::value_print_inner): New member function.
+	* valprint.c (do_val_print): Update call to value_print_inner.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_value_print
+	initializer.
+	(ada_language::value_print): New member function.
+	* c-lang.c (c_language_data): Delete la_value_print initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unk_lang_value_print): Delete.
+	(language_defn::value_print): Define new member function.
+	(unknown_language_data): Delete la_value_print initializer.
+	(unknown_language::value_print): New member function.
+	(auto_language_data): Delete la_value_print initializer.
+	(auto_language::value_print): New member function.
+	* language.h (language_data): Delete la_value_print field.
+	(language_defn::value_print): Declare new member function.
+	(LA_VALUE_PRINT): Update call to value_print.
+	* m2-lang.c (m2_language_data): Delete la_value_print initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	(pascal_language::value_print): New member function.
+	* rust-lang.c (rust_language_data): Delete la_value_print
+	initializer.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_watch_location_expression): Rename to
+	ada_language::watch_location_expression.
+	(ada_language_data): Delete la_watch_location_expression
+	initializer.
+	(ada_language::watch_location_expression): New member function,
+	implementation from ada_watch_location_expression.
+	* breakpoint.c (watch_command_1): Update call to
+	watch_location_expression.
+	* c-lang.c (c_watch_location_expression): Rename to
+	language_defn::watch_location_expression.
+	(c_language_data): Delete la_watch_location_expression
+	initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* c-lang.h (c_watch_location_expression): Delete declaration.
+	* d-lang.c (d_language_data): Delete la_watch_location_expression
+	initializer.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (language_defn::watch_location_expression): Member
+	function implementation from c_watch_location_expression.
+	(unknown_language_data): Delete la_watch_location_expression
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_watch_location_expression
+	field.
+	(language_defn::watch_location_expression): Declare new member
+	function.
+	* m2-lang.c (m2_language_data): Delete
+	la_watch_location_expression initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_watch_location_expression): Rename to
+	rust_language::watch_location_expression.
+	(rust_language_data): Delete la_watch_location_expression
+	initializer.
+	(rust_language::watch_location_expression): New member function,
+	implementation from rust_watch_location_expression.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_collect_symbol_completion_matches): Rename to
+	ada_language::collect_symbol_completion_matches.
+	(ada_language_data): Delete la_collect_symbol_completion_matches
+	initializer.
+	(ada_language::collect_symbol_completion_matches): New member
+	function, implementation from
+	ada_collect_symbol_completion_matches.
+	* c-lang.c (c_language_data): Delete
+	la_collect_symbol_completion_matches initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_collect_symbol_completion_matches): Rename to
+	f_language::collect_symbol_completion_matches.
+	(f_language_data): Delete la_collect_symbol_completion_matches
+	initializer.
+	(f_language::collect_symbol_completion_matches) New member
+	function, implementation from f_collect_symbol_completion_matches.
+	* go-lang.c (go_language_data): Delete
+	la_collect_symbol_completion_matches initializer.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete
+	la_collect_symbol_completion_matches field.
+	(language_defn::collect_symbol_completion_matches): New member
+	function.
+	* m2-lang.c (m2_language_data): Delete
+	la_collect_symbol_completion_matches initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	* symtab.c (default_collect_symbol_completion_matches): Delete.
+	(collect_symbol_completion_matches): Update call to
+	collect_symbol_completion_matches.
+	(collect_symbol_completion_matches_type): Likewise.
+	* symtab.h (default_collect_symbol_completion_matches): Delete
+	declaration.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_get_gdb_completer_word_break_characters): Delete.
+	(ada_language_data): Delete la_word_break_characters initializer.
+	(ada_language::word_break_characters): New member function.
+	* c-lang.c (c_language_data): Delete la_word_break_characters
+	initializer.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* completer.c: Update global comment.
+	(advance_to_expression_complete_word_point): Update call to
+	word_break_characters.
+	(complete_files_symbols): Likewise.
+	(complete_line_internal_1): Likewise.
+	(default_completer_handle_brkchars): Likewise.
+	(skip_quoted_chars): Likewise.
+	* d-lang.c (d_language_data): Delete la_word_break_characters
+	initializer.
+	* f-lang.c (f_word_break_characters): Delete.
+	(f_language_data): Delete la_word_break_characters initializer.
+	(f_language::word_break_characters): New member function.
+	* go-lang.c (go_language_data): Delete la_word_break_characters
+	initializer.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (default_word_break_characters): Move declaration to
+	earlier in the file.
+	(language_data): Delete la_word_break_characters field.
+	(language_defn::word_break_characters): New member function.
+	* m2-lang.c (m2_language_data): Delete la_word_break_characters
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_get_symbol_name_matcher): Update header comment.
+	(ada_language_data): Delete la_get_symbol_name_matcher
+	initializer.
+	(language_defn::get_symbol_name_matcher_inner): New member
+	function.
+	* c-lang.c (c_language_data): Delete la_get_symbol_name_matcher
+	initializer.
+	(cplus_language_data): Likewise.
+	(cplus_language::get_symbol_name_matcher_inner): New member
+	function.
+	(asm_language_data): Delete la_get_symbol_name_matcher initializer.
+	(minimal_language_data): Likewise.
+	* cp-support.h (cp_get_symbol_name_matcher): Update header comment.
+	* d-lang.c (d_language_data): Delete la_get_symbol_name_matcher
+	initializer.
+	* dictionary.c (iter_match_first_hashed): Update call to
+	get_symbol_name_matcher.
+	(iter_match_next_hashed): Likewise.
+	(iter_match_next_linear): Likewise.
+	* dwarf2/read.c (dw2_expand_symtabs_matching_symbol): Likewise.
+	* f-lang.c (f_language_data): Delete la_get_symbol_name_matcher
+	initializer.
+	(f_language::get_symbol_name_matcher_inner): New member function.
+	* go-lang.c (go_language_data): Delete la_get_symbol_name_matcher
+	initializer.
+	* language.c (default_symbol_name_matcher): Update header comment,
+	make static.
+	(language_defn::get_symbol_name_matcher): New definition.
+	(language_defn::get_symbol_name_matcher_inner): Likewise.
+	(get_symbol_name_matcher): Delete.
+	(unknown_language_data): Delete la_get_symbol_name_matcher
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_get_symbol_name_matcher
+	field.
+	(language_defn::get_symbol_name_matcher): New member function.
+	(language_defn::get_symbol_name_matcher_inner): Likewise.
+	(default_symbol_name_matcher): Delete declaration.
+	* linespec.c (find_methods): Update call to
+	get_symbol_name_matcher.
+	* m2-lang.c (m2_language_data): Delete la_get_symbol_name_matcher
+	initializer.
+	* minsyms.c (lookup_minimal_symbol): Update call to
+	get_symbol_name_matcher.
+	(iterate_over_minimal_symbols): Likewise.
+	* objc-lang.c (objc_language_data): Delete
+	la_get_symbol_name_matcher initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* psymtab.c (psymbol_name_matches): Update call to
+	get_symbol_name_matcher.
+	* rust-lang.c (rust_language_data): Delete
+	la_get_symbol_name_matcher initializer.
+	* symtab.c (symbol_matches_search_name): Update call to
+	get_symbol_name_matcher.
+	(compare_symbol_name): Likewise.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_compute_program
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(c_language::compute_program): New member function.
+	(cplus_language_data): Delete la_compute_program initializer.
+	(cplus_language::compute_program): New member function.
+	(asm_language_data): Delete la_compute_program initializer.
+	(minimal_language_data): Likewise.
+	* c-lang.h (c_compute_program): Update comment.
+	(cplus_compute_program): Likewise.
+	* compile/compile-c-support.c (c_compute_program): Likewise.
+	(cplus_compute_program): Likewise.
+	* compile/compile.c (compile_to_object): Update call to
+	la_compute_program.
+	* d-lang.c (d_language_data): Delete la_compute_program
+	initializer.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_compute_program field.
+	(language_defn::compute_program): New member function.
+	* m2-lang.c (m2_language_data): Delete la_compute_program
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data) Delete
+	la_class_name_from_physname initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(cplus_language::class_name_from_physname): New member function.
+	(asm_language_data): Delete la_class_name_from_physname
+	initializer.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* dwarf2/read.c (guess_partial_die_structure_name): Update to call
+	method on language_defn class.
+	(guess_full_die_structure_name): Likewise.
+	* f-lang.c (f_language_data): Delete la_class_name_from_physname
+	initializer.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (language_class_name_from_physname): Delete.
+	(unk_lang_class_name): Delete.
+	(unknown_language_data): Delete la_class_name_from_physname
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_class_name_from_physname
+	field.
+	(language_defn::class_name_from_physname): New function.
+	(language_class_name_from_physname): Delete declaration.
+	* m2-lang.c (m2_language_data): Delete la_class_name_from_physname
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-06-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (STATUS_NAME): New macro.
+	* tui/tui-layout.c (tui_remove_some_windows)
+	(initialize_known_windows, tui_register_window)
+	(tui_layout_split::remove_windows, initialize_layouts)
+	(tui_new_layout_command): Don't use hard-coded window names.
+
+2020-06-16  Tom Tromey  <tom@tromey.com>
+
+	PR tui/25348:
+	* tui/tui.c (tui_ensure_readline_initialized): Rename from
+	tui_initialize_readline.  Only run once.  Call rl_initialize.
+	* tui/tui.h (tui_ensure_readline_initialized): Rename from
+	tui_initialize_readline.
+	* tui/tui-io.c (tui_setup_io): Call
+	tui_ensure_readline_initialized.
+	* tui/tui-interp.c (tui_interp::init): Update.
+
+2020-06-16  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (tui_layout_split::remove_windows): Fix logic.
+	Also preserve the status window.
+
+2020-06-16  Tom Tromey  <tom@tromey.com>
+
+	* python/py-tui.c (tui_py_window::~tui_py_window): Handle case
+	where m_window==nullptr.
+
+2020-06-15  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat::handle_output_debug_string):
+	Update.
+	(windows_nat::handle_ms_vc_exception): Update.
+	* target.h (target_read_string): Change API.
+	* target.c (target_read_string): Change API.
+	* solib-svr4.c (open_symbol_file_object, svr4_read_so_list):
+	Update.
+	* solib-frv.c (frv_current_sos): Update.
+	* solib-dsbt.c (dsbt_current_sos): Update.
+	* solib-darwin.c (darwin_current_sos): Update.
+	* linux-thread-db.c (inferior_has_bug): Update.
+	* expprint.c (print_subexp_standard): Update.
+	* ada-lang.c (ada_main_name, ada_tag_name_from_tsd)
+	(ada_exception_message_1): Update.
+
+2020-06-15  Tom Tromey  <tromey@adacore.com>
+
+	* linux-tdep.c (dump_mapping_p): Use target_read_memory.
+
+2020-06-15  Tom Tromey  <tromey@adacore.com>
+
+	* valprint.c (read_string): Update comment.
+	* target.c (MIN): Remove.
+	(target_read_string): Rewrite.
+
+2020-06-15  Tom Tromey  <tromey@adacore.com>
+
+	* corefile.c (read_memory_string): Remove.
+	* ada-valprint.c (ada_value_print_ptr): Update.
+	* ada-lang.h (ada_tag_name): Change return type.
+	* ada-lang.c (type_from_tag): Update.
+	(ada_tag_name_from_tsd): Change return type.  Use
+	target_read_string.
+	(ada_tag_name): Likewise.
+	* gdbcore.h (read_memory_string): Don't declare.
+
+2020-06-14  Hannes Domani  <ssbssa@yahoo.de>
+
+	* symtab.c (rbreak_command): Ignore Windows drive colon.
+
+2020-06-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* NEWS: Mention removed GDBserver host support.
+
+2020-06-12  Nelson Chu  <nelson.chu@sifive.com>
+
+	* features/riscv/rebuild-csr-xml.sh: Updated.
+
+2020-06-11  Tom Tromey  <tom@tromey.com>
+
+	PR gdb/18318:
+	* c-exp.y (lex_one_token): Handle 'p' like 'e'.
+
+2020-06-09  Jonny Grant  <jg@jguk.org>
+2020-06-09  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* main.c (captured_main_1): Don't print new line after help.
+	(print_gdb_help): add mailing list and IRC channel information
+	to --help.  Add new lines between items in the footer.  Remove
+	quotes around bug url.
+
+2020-06-11  Keith Seitz  <keiths@redhat.com>
+
+	PR gdb/21356
+	* gdbtypes.c (resolve_dynamic_union, resolve_dynamic_struct):
+	Resolve typedefs for type length calculations.
+
+2020-06-10  Tom de Vries  <tdevries@suse.de>
+
+	PR ada/24713
+	* dwarf2/index-write.c (struct mapped_symtab): Add m_string_obstack.
+	(write_psymbols): Enable .gdb_index for ada.
+	* dwarf2/read.c: Remove comment stating .gdb_index is unsupported for
+	ada.
+
+2020-06-10  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/read.c (dw2_symtab_iter_init_common): Factor out of ...
+	(dw2_symtab_iter_init): ... here.  Add variant with "offset_type
+	namei" instead of "const char *name" argument.
+	(dw2_map_matching_symbols): Use "offset_type namei" variant of
+	dw2_symtab_iter_init.
+
+2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_FIELD_TYPE): Remove.  Change all call sites
+	to use type::field and field::type instead.
+
+2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (FIELD_TYPE): Remove.  Change all call sites
+	to use field::type instead.
+
+2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct field) <type, set_type>: New methods.
+	Rename `type` field to...
+	<m_type>: ... this.  Change references throughout to use type or
+	set_type methods.
+	(FIELD_TYPE): Use field::type.  Change call sites that modify
+	the field's type to use field::set_type instead.
+
+2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_INDEX_TYPE): Remove.  Change all call sites
+	to use type::index_type instead.
+
+2020-06-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <index_type, set_index_type>: New
+	methods.
+	(TYPE_INDEX_TYPE): Use type::index_type.
+	* gdbtypes.c (create_array_type_with_stride): Likewise.
+
+2020-06-07  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_val_print_float): Remove "embedded_offset"
+	parameter.
+	(generic_value_print): Update.
+
+2020-06-05  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	Revert commit 982a38f60b0.
+	* python/py-tui.c (gdbpy_tui_set_title): Restore use of get.
+
+2020-06-05  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* python/py-tui.c (gdbpy_tui_set_title): Use release, not get, to
+	avoid use after free.
+
+2020-06-05  Tom de Vries  <tdevries@suse.de>
+
+	* NEWS: Fix typos.
+
+2020-06-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (dwarf2_read_gdb_index): Save partial_symtabs in
+	the per_bfd object.
+	(dwarf2_read_debug_names): Likewise.
+	(dwarf2_initialize_objfile): Use partial_symtabs from per_bfd
+	object when re-using a per_bfd object with an index.
+
+2020-06-03  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/26046
+	* dwarf2/read.c (scan_partial_symbols): Recurse into DW_TAG_subprogram
+	children for C++.
+	(load_partial_dies): Don't skip DW_TAG_inlined_subroutine child of
+	DW_TAG_subprogram.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete skip_trampoline
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(cplus_language::skip_trampoline): New member function.
+	(asm_language_data): Delete skip_trampoline initializer.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unk_lang_trampoline): Delete function.
+	(skip_language_trampoline): Update.
+	(unknown_language_data): Delete skip_trampoline initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete skip_trampoline field.
+	(language_defn::skip_trampoline): New function.
+	* m2-lang.c (m2_language_data): Delete skip_trampoline
+	initializer.
+	* objc-lang.c (objc_skip_trampoline): Delete function, move
+	implementation to objc_language::skip_trampoline.
+	(objc_language_data): Delete skip_trampoline initializer.
+	(objc_language::skip_trampoline): New member function with
+	implementation from objc_skip_trampoline.
+	* opencl-lang.c (opencl_language_data): Delete skip_trampoline
+	initializer.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_demangle initializer.
+	(ada_language::demangle): New member function.
+	* c-lang.c (c_language_data): Delete la_demangle initializer.
+	(cplus_language_data): Delete la_demangle initializer.
+	(cplus_language::demangle): New member function.
+	(asm_language_data): Delete la_demangle initializer.
+	(minimal_language_data): Delete la_demangle initializer.
+	* d-lang.c (d_language_data): Delete la_demangle initializer.
+	(d_language::demangle): New member function.
+	* f-lang.c (f_language_data): Delete la_demangle initializer.
+	(f_language::demangle): New member function.
+	* go-lang.c (go_language_data): Delete la_demangle initializer.
+	(go_language::demangle): New member function.
+	* language.c (language_demangle): Update.
+	(unk_lang_demangle): Delete.
+	(unknown_language_data): Delete la_demangle initializer.
+	(unknown_language::demangle): New member function.
+	(auto_language_data): Delete la_demangle initializer.
+	(auto_language::demangle): New member function.
+	* language.h (language_data): Delete la_demangle field.
+	(language_defn::demangle): New function.
+	* m2-lang.c (m2_language_data): Delete la_demangle initializer.
+	* objc-lang.c (objc_language_data): Delete la_demangle
+	initializer.
+	(objc_language::demangle): New member function.
+	* opencl-lang.c (opencl_language_data): Delete la_demangle
+	initializer.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	(rust_language::demangle): New member function.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_print_type
+	initializer.
+	(ada_language::print_type): New member function.
+	* c-lang.c (c_language_data): Delete la_print_type initializer.
+	(c_language::print_type): New member function.
+	(cplus_language_data): Delete la_print_type initializer.
+	(cplus_language::print_type): New member function.
+	(asm_language_data): Delete la_print_type initializer.
+	(asm_language::print_type): New member function.
+	(minimal_language_data): Delete la_print_type initializer.
+	(minimal_language::print_type): New member function.
+	* d-lang.c (d_language_data): Delete la_print_type initializer.
+	(d_language::print_type): New member function.
+	* f-lang.c (f_language_data): Delete la_print_type initializer.
+	(f_language::print_type): New member function.
+	* go-lang.c (go_language_data): Delete la_print_type initializer.
+	(go_language::print_type): New member function.
+	* language.c (unk_lang_print_type): Delete.
+	(unknown_language_data): Delete la_print_type initializer.
+	(unknown_language::print_type): New member function.
+	(auto_language_data): Delete la_print_type initializer.
+	(auto_language::print_type): New member function.
+	* language.h (language_data): Delete la_print_type field.
+	(language_defn::print_type): New function.
+	(LA_PRINT_TYPE): Update.
+	* m2-lang.c (m2_language_data): Delete la_print_type initializer.
+	(m2_language::print_type): New member function.
+	* objc-lang.c (objc_language_data): Delete la_print_type
+	initializer.
+	(objc_language::print_type): New member function.
+	* opencl-lang.c (opencl_print_type): Delete, implementation moved
+	to opencl_language::print_type.
+	(opencl_language_data): Delete la_print_type initializer.
+	(opencl_language::print_type): New member function, implementation
+	from opencl_print_type.
+	* p-lang.c (pascal_language_data): Delete la_print_type
+	initializer.
+	(pascal_language::print_type): New member function.
+	* rust-lang.c (rust_print_type): Delete, implementation moved to
+	rust_language::print_type.
+	(rust_language_data): Delete la_print_type initializer.
+	(rust_language::print_type): New member function, implementation
+	from rust_print_type.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_sniff_from_mangled_name): Delete function,
+	implementation moves to...
+	(ada_language::sniff_from_mangled_name): ...here.  Update return
+	type.
+	(ada_language_data): Delete la_sniff_from_mangled_name
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(cplus_language::sniff_from_mangled_name): New member function,
+	implementation taken from gdb_sniff_from_mangled_name.
+	(asm_language_data): Delete la_sniff_from_mangled_name
+	initializer.
+	(minimal_language_data): Likewise.
+	* cp-support.c (gdb_sniff_from_mangled_name): Delete,
+	implementation moves to cplus_language::sniff_from_mangled_name.
+	* cp-support.h (gdb_sniff_from_mangled_name): Delete declaration.
+	* d-lang.c (d_sniff_from_mangled_name): Delete, implementation
+	moves to...
+	(d_language::sniff_from_mangled_name): ...here.
+	(d_language_data): Delete la_sniff_from_mangled_name initializer.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_sniff_from_mangled_name): Delete, implementation
+	moves to...
+	(go_language::sniff_from_mangled_name): ...here.
+	(go_language_data): Delete la_sniff_from_mangled_name initializer.
+	* language.c (language_sniff_from_mangled_name): Delete.
+	(unknown_language_data): Delete la_sniff_from_mangled_name
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_sniff_from_mangled_name
+	field.
+	(language_defn::sniff_from_mangled_name): New function.
+	(language_sniff_from_mangled_name): Delete declaration.
+	* m2-lang.c (m2_language_data): Delete la_sniff_from_mangled_name
+	field.
+	* objc-lang.c (objc_sniff_from_mangled_name): Delete,
+	implementation moves to...
+	(objc_language::sniff_from_mangled_name): ...here.
+	(objc_language_data): Delete la_sniff_from_mangled_name initializer.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_sniff_from_mangled_name): Delete,
+	implementation moves to...
+	(rust_language::sniff_from_mangled_name): ...here.
+	(rust_language_data): Delete la_sniff_from_mangled_name
+	initializer.
+	* symtab.c (symbol_find_demangled_name): Call
+	sniff_from_mangled_name member function.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_search_name_hash
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(cplus_language::search_name_hash): New member function.
+	(asm_language_data): Delete la_search_name_hash initializer.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* dictionary.c (default_search_name_hash): Rename to...
+	(language_defn::search_name_hash): ...this.
+	* f-lang.c (f_language_data): Likewise.
+	(f_language::search_name_hash): New member function.
+	* go-lang.c (go_language_data): Delete la_search_name_hash
+	initializer.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (struct language_data): Delete la_search_name_hash
+	field.
+	(language_defn::search_name_hash): Declare new member function.
+	(default_search_name_hash): Delete declaration.
+	* m2-lang.c (m2_language_data): Delete la_search_name_hash
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	* symtab.c (search_name_hash): Update call.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_get_compile_instance
+	initializer.
+	* c-lang.c (class compile_instance): Declare.
+	(c_language_data): Delete la_get_compile_instance initializer.
+	(c_language::get_compile_instance): New member function.
+	(cplus_language_data): Delete la_get_compile_instance initializer.
+	(cplus_language::get_compile_instance): New member function.
+	(asm_language_data): Delete la_get_compile_instance initializer.
+	(minimal_language_data): Likewise.
+	* c-lang.h (c_get_compile_context): Update comment.
+	(cplus_get_compile_context): Update comment.
+	* compile/compile.c (compile_to_object): Update calls, don't rely
+	on function pointer being NULL.
+	* d-lang.c (d_language_data): Delete la_get_compile_instance
+	initializer.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_get_compile_instance field.
+	(language_defn::get_compile_instance): New member function.
+	* m2-lang.c (m2_language_data): Delete la_get_compile_instance
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_add_all_symbols): Update comment.
+	(ada_iterate_over_symbols): Delete, move implementation to...
+	(ada_language::iterate_over_symbols): ...here, a new member
+	function, rewrite to use range based for loop.
+	(ada_language_data): Delete la_iterate_over_symbols initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(asm_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (language_data): Delete la_iterate_over_symbols field.
+	(language_defn::iterate_over_symbols): New member function.
+	(LA_ITERATE_OVER_SYMBOLS): Update.
+	* linespec.c (iterate_over_all_matching_symtabs): Update.
+	* m2-lang.c (m2_language_data): Delete la_iterate_over_symbols
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete
+	la_lookup_transparent_type initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(cplus_language::lookup_transparent_type): New member function.
+	(asm_language_data): Delete la_lookup_transparent_type
+	initializer.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Likewise.
+	(auto_language_data): Likewise.
+	* language.h (struct language_data): Delete
+	la_lookup_transparent_type field.
+	(language_defn::lookup_transparent_type): New member function.
+	* m2-lang.c (m2_language_data): Delete la_lookup_transparent_type
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	* symtab.c (symbol_matches_domain): Update call.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_arch_info): Delete function, move
+	implementation to...
+	(ada_language::language_arch_info): ...here, a new member
+	function.
+	(ada_language_data): Delete la_language_arch_info.
+	* c-lang.c (c_language_data): Likewise.
+	(c_language::language_arch_info): New member function.
+	(cplus_language_arch_info): Delete function, move
+	implementation to...
+	(cplus_language::language_arch_info): ...here, a new member
+	function.
+	(cplus_language_data): Delete la_language_arch_info.
+	(asm_language_data): Likewise.
+	(asm_language::language_arch_info): New member function.
+	(minimal_language_data): Delete la_language_arch_info.
+	(minimal_language::language_arch_info): New member function.
+	* d-lang.c (d_language_arch_info): Delete function, move
+	implementation to...
+	(d_language::language_arch_info): ...here, a new member
+	function.
+	(d_language_data): Delete la_language_arch_info.
+	* f-lang.c (f_language_arch_info): Delete function, move
+	implementation to...
+	(f_language::language_arch_info): ...here, a new member
+	function.
+	(f_language_data): Delete la_language_arch_info.
+	* go-lang.c (go_language_arch_info): Delete function, move
+	implementation to...
+	(go_language::language_arch_info): ...here, a new member
+	function.
+	(go_language_data): Delete la_language_arch_info.
+	* language.c (unknown_language_data): Likewise.
+	(unknown_language::language_arch_info): New member function.
+	(auto_language_data): Delete la_language_arch_info.
+	(auto_language::language_arch_info): New member function.
+	(language_gdbarch_post_init): Update call to
+	la_language_arch_info.
+	* language.h (language_data): Delete la_language_arch_info
+	function pointer.
+	(language_defn::language_arch_info): New function.
+	* m2-lang.c (m2_language_arch_info): Delete function, move
+	implementation to...
+	(m2_language::language_arch_info): ...here, a new member
+	function.
+	(m2_language_data): Delete la_language_arch_info.
+	* objc-lang.c (objc_language_arch_info): Delete function, move
+	implementation to...
+	(objc_language::language_arch_info): ...here, a new member
+	function.
+	(objc_language_data): Delete la_language_arch_info.
+	* opencl-lang.c (opencl_language_arch_info): Delete function, move
+	implementation to...
+	(opencl_language::language_arch_info): ...here, a new member
+	function.
+	(opencl_language_data): Delete la_language_arch_info.
+	* p-lang.c (pascal_language_arch_info): Delete function, move
+	implementation to...
+	(pascal_language::language_arch_info): ...here, a new member
+	function.
+	(pascal_language_data): Delete la_language_arch_info.
+	* rust-lang.c (rust_language_arch_info): Delete function, move
+	implementation to...
+	(rust_language::language_arch_info): ...here, a new member
+	function.
+	(rust_language_data): Delete la_language_arch_info.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_language_data): Delete la_pass_by_reference
+	initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(cplus_language::pass_by_reference_info): New method.
+	(asm_language_data): Delete la_pass_by_reference initializer.
+	(minimal_language_data): Likewise.
+	* cp-abi.c (cp_pass_by_reference): Remove use of
+	default_pass_by_reference.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* gnu-v3-abi.c (gnuv3_pass_by_reference): Remove use of
+	default_pass_by_reference.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (language_pass_by_reference): Update.
+	(default_pass_by_reference): Delete.
+	(unknown_language_data): Delete la_pass_by_reference
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (struct language_data): Delete la_pass_by_reference
+	field.
+	(language_defn::pass_by_reference_info): New member function.
+	(default_pass_by_reference): Delete declaration.
+	* m2-lang.c (m2_language_data): Delete la_pass_by_reference
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_read_var_value): Delete function, move
+	implementation to...
+	(ada_language::read_var_value): ...here.
+	(ada_language_data): Delete la_read_var_value initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* findvar.c (default_read_var_value): Rename to...
+	(language_defn::read_var_value): ...this.
+	* findvar.c (read_var_value): Update header comment, and change to
+	call member function instead of function pointer.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (unknown_language_data): Delete la_read_var_value
+	initializer.
+	(auto_language_data): Likewise.
+	* language.h (struct language_data): Delete la_read_var_value
+	field.
+	(language_defn::read_var_value): New member function.
+	(default_read_var_value): Delete declaration.
+	* m2-lang.c (m2_language_data): Delete la_read_var_value
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+	* value.h (default_read_var_value): Delete declaration.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ada-lang.c (ada_print_array_index): Delete function, move
+	implementation to...
+	(ada_language::print_array_index): ...here.
+	(ada_language_data): Delete la_print_array_index initializer.
+	* c-lang.c (c_language_data): Likewise.
+	(cplus_language_data): Likewise.
+	(minimal_language_data): Likewise.
+	* d-lang.c (d_language_data): Likewise.
+	* f-lang.c (f_language_data): Likewise.
+	* go-lang.c (go_language_data): Likewise.
+	* language.c (default_print_array_index): Delete function, move
+	implementation to...
+	(language_defn::print_array_index): ...here.
+	(unknown_language_data): Delete la_print_array_index initializer.
+	(auto_language_data): Likewise.
+	* language.h (struct language_data): Delete la_print_array_index
+	field.
+	(language_defn::print_array_index): New member function.
+	(LA_PRINT_ARRAY_INDEX): Update.
+	(default_print_array_index): Delete declaration.
+	* m2-lang.c (m2_language_data): Delete la_print_array_index
+	initializer.
+	* objc-lang.c (objc_language_data): Likewise.
+	* opencl-lang.c (opencl_language_data): Likewise.
+	* p-lang.c (pascal_language_data): Likewise.
+	* rust-lang.c (rust_language_data): Likewise.
+
+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdb/ada-lang.c (ada_language_defn): Convert to...
+	(ada_language_data): ...this.
+	(class ada_language): New class.
+	(ada_language_defn): New static global.
+	* gdb/c-lang.c (c_language_defn): Convert to...
+	(c_language_data): ...this.
+	(class c_language): New class.
+	(c_language_defn): New static global.
+	(cplus_language_defn): Convert to...
+	(cplus_language_data): ...this.
+	(class cplus_language): New class.
+	(cplus_language_defn): New static global.
+	(asm_language_defn): Convert to...
+	(asm_language_data): ...this.
+	(class asm_language): New class.
+	(asm_language_defn): New static global.
+	(minimal_language_defn): Convert to...
+	(minimal_language_data): ...this.
+	(class minimal_language): New class.
+	(minimal_language_defn): New static global.
+	* gdb/d-lang.c (d_language_defn): Convert to...
+	(d_language_data): ...this.
+	(class d_language): New class.
+	(d_language_defn): New static global.
+	* gdb/f-lang.c (f_language_defn): Convert to...
+	(f_language_data): ...this.
+	(class f_language): New class.
+	(f_language_defn): New static global.
+	* gdb/go-lang.c (go_language_defn): Convert to...
+	(go_language_data): ...this.
+	(class go_language): New class.
+	(go_language_defn): New static global.
+	* gdb/language.c (unknown_language_defn): Remove declaration.
+	(current_language): Initialize to nullptr, real initialization is
+	moved to _initialize_language.
+	(languages): Delete global.
+	(language_defn::languages): Define.
+	(set_language_command): Use language_defn::languages.
+	(set_language): Likewise.
+	(range_error): Likewise.
+	(language_enum): Likewise.
+	(language_def): Likewise.
+	(add_set_language_command): Use language_def::languages for the
+	language list, and language_def to lookup language pointers.
+	(skip_language_trampoline): Use language_defn::languages.
+	(unknown_language_defn): Convert to...
+	(unknown_language_data): ...this.
+	(class unknown_language): New class.
+	(unknown_language_defn): New static global.
+	(auto_language_defn): Convert to...
+	(auto_language_data): ...this.
+	(class auto_language): New class.
+	(auto_language_defn): New static global.
+	(language_gdbarch_post_init): Use language_defn::languages.
+	(_initialize_language): Initialize current_language.
+	* gdb/language.h (struct language_defn): Rename to...
+	(struct language_data): ...this.
+	(struct language_defn): New.
+	(auto_language_defn): Delete.
+	(unknown_language_defn): Delete.
+	(minimal_language_defn): Delete.
+	(ada_language_defn): Delete.
+	(asm_language_defn): Delete.
+	(c_language_defn): Delete.
+	(cplus_language_defn): Delete.
+	(d_language_defn): Delete.
+	(f_language_defn): Delete.
+	(go_language_defn): Delete.
+	(m2_language_defn): Delete.
+	(objc_language_defn): Delete.
+	(opencl_language_defn): Delete.
+	(pascal_language_defn): Delete.
+	(rust_language_defn): Delete.
+	* gdb/m2-lang.c (m2_language_defn): Convert to...
+	(m2_language_data): ...this.
+	(class m2_language): New class.
+	(m2_language_defn): New static global.
+	* gdb/objc-lang.c (objc_language_defn): Convert to...
+	(objc_language_data): ...this.
+	(class objc_language): New class.
+	(objc_language_defn): New static global.
+	* gdb/opencl-lang.c (opencl_language_defn): Convert to...
+	(opencl_language_data): ...this.
+	(class opencl_language): New class.
+	(opencl_language_defn): New static global.
+	* gdb/p-lang.c (pascal_language_defn): Convert to...
+	(pascal_language_data): ...this.
+	(class pascal_language): New class.
+	(pascal_language_defn): New static global.
+	* gdb/rust-exp.y (rust_lex_tests): Use language_def to find
+	language pointer, update comment format.
+	* gdb/rust-lang.c (rust_language_defn): Convert to...
+	(rust_language_data): ...this.
+	(class rust_language): New class.
+	(rust_language_defn): New static global.
+
+2020-06-01  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2/read.c (class lnp_state_machine) <m_last_address>: New
+	member variable.
+	<m_stmt_at_address>: New member variable.
+	(lnp_state_machine::record_line): Don't record some lines, update
+	tracking of is_stmt at the same address.
+	(lnp_state_machine::lnp_state_machine): Initialise new member
+	variables.
+
+2020-06-01  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* config/i386/i386gnu.mn [%_S.o %_U.o] (COMPILE.post): Add
+	"-include gnu-nat-mig.h".
+	* gnu-nat-mig.h: New file.
+	* gnu-nat.c: Include "gnu-nat-mig.h".
+	(exc_server, msg_reply_server, notify_server,
+	process_reply_server): Remove declarations.
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* gnu-nat.h (inf_validate_procs, inf_suspend, inf_set_traced,
+	steal_exc_port, proc_get_state, inf_clear_wait, inf_cleanup,
+	inf_startup, inf_update_suspends, inf_set_pid, inf_steal_exc_ports,
+	inf_validate_procinfo, inf_validate_task_sc, inf_restore_exc_ports,
+	inf_set_threads_resume_sc, inf_set_threads_resume_sc_for_signal_thread,
+	inf_resume, inf_set_step_thread, inf_detach, inf_attach, inf_signal,
+	inf_continue, make_proc, proc_abort, _proc_free, proc_update_sc,
+	proc_get_exception_port, proc_set_exception_port, _proc_get_exc_port,
+	proc_steal_exc_port, proc_restore_exc_port, proc_trace): Move functions
+	to gnu_nat_target class.
+	* gnu-nat.c: Likewise.
+	(inf_update_procs, S_proc_wait_reply, set_task_pause_cmd,
+	set_task_exc_port_cmd, set_signals_cmd, set_thread_pause_cmd,
+	set_thread_exc_port_cmd): Call inf_validate_procs through gnu_target
+	object.
+	(gnu_nat_target::create_inferior, gnu_nat_target::detach): Pass `this'
+	instead of `gnu_target'.
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* i386-gnu-tdep.c: Include "gdbcore.h"
+	(gnu_sigtramp_code, i386_gnu_sc_reg_offset): New arrays.
+	(GNU_SIGTRAMP_LEN, GNU_SIGTRAMP_TAIL,
+	I386_GNU_SIGCONTEXT_THREAD_STATE_OFFSET): New macros
+	(i386_gnu_sigtramp_start, i386_gnu_sigtramp_p,
+	i386_gnu_sigcontext_addr): New functions
+	(i386gnu_init_abi): Register i386_gnu_sigtramp_p,
+	i386_gnu_sigcontext_addr, and i386_gnu_sc_reg_offset in the gdbarch
+	tdep.
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* gnu-nat.c (gnu_nat_target::create_inferior): Move push_target call
+	before fork_inferior call. Avoid calling it if target_is_pushed returns
+	true.
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* gnu-nat.h (gnu_target): New variable declaration.
+	* i386-gnu-nat.c (_initialize_i386gnu_nat): Initialize
+	gnu_target.
+	* gnu-nat.c (gnu_target): New variable.
+	(inf_validate_procs): Pass gnu_target to thread_change_ptid,
+	add_thread_silent, and add_thread calls.
+	(gnu_nat_target::create_inferior): Pass gnu_target to
+	add_thread_silent, thread_change_ptid call.
+	(gnu_nat_target::detach): Pass gnu_target to detach_inferior
+	call.
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* gnu-nat.c (gnu_xfer_auxv): Remove unused `res' variable.
+	(gnu_nat_target::find_memory_regions): Remove unused
+	`old_address' variable.
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* gnu-nat.c: Include "gdbarch.h".
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* reply_mig_hack.awk (Error return): Cast function through
+	void *, to bypass compiler function call check.
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* config/i386/i386gnu.mn (%_reply_S.c): Add dependency on
+	$(srcdir)/reply_mig_hack.awk.
+
+2020-05-30  Samuel Thibault  <samuel.thibault@ens-lyon.org>
+
+	* gnu-nat.h (gnu_debug_flag): Set type to bool.
+
+2020-05-30  Jonny Grant  <jg@jguk.org>
+
+	* configure.ac (ACX_BUGURL): change bug URL to https.
+
+2020-05-30  Pedro Alves  <palves@redhat.com>
+
+	* cp-support.c (replace_typedefs_template): New.
+	(replace_typedefs_qualified_name): Handle
+	DEMANGLE_COMPONENT_TEMPLATE.
+
+2020-05-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/comp-unit.c, dwarf2/comp-unit.h, dwarf2/index-cache.c,
+	dwarf2/index-cache.h, dwarf2/index-write.c,
+	dwarf2/index-write.h, dwarf2/line-header.c,
+	dwarf2/line-header.h, dwarf2/macro.c, dwarf2/macro.h,
+	dwarf2/read.c, dwarf2/read.h: Rename struct dwarf2_per_objfile
+	variables and fields from `dwarf2_per_objfile` to just
+	`per_objfile` throughout.
+
+2020-05-28  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/loc.c (class dwarf_evaluate_loc_desc)
+	<push_dwarf_reg_entry_value>: Add comment.
+
+2020-05-28  Kevin Buettner  <kevinb@redhat.com>
+	    Keith Seitz  <keiths@redhat.com>
+
+	* python/python.c (do_start_initialization): Call PyEval_SaveThread
+	instead of PyEval_ReleaseLock.
+	(class gdbpy_gil): Move to earlier in file.
+	(finalize_python): Set gdb_python_initialized.
+	(gdbpy_check_quit_flag): Acquire GIL via gdbpy_gil.  Return early
+	when not initialized.
+
+2020-05-28  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/loc.c (class dwarf_evaluate_loc_desc)
+	<push_dwarf_reg_entry_value>: Remove assert.  Override
+	per_objfile with caller_per_objfile.
+
+2020-05-28  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/read.c	(dw2_symtab_iter_next, dw2_expand_marked_cus): Limit
+	PR gold/15646 workaround to symbol kind "type".
+
+2020-05-27  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (load_partial_dies): Use add_partial_symbol.
+
+2020-05-27  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/abbrev.h (struct abbrev_table) <lookup_abbrev>: Inline.
+	Use htab_find_with_hash.
+	<add_abbrev>: Remove "abbrev_number" parameter.
+	* dwarf2/abbrev.c (abbrev_table::add_abbrev): Remove
+	"abbrev_number" parameter.  Use htab_find_slot_with_hash.
+	(hash_abbrev): Add comment.
+	(abbrev_table::lookup_abbrev): Move to header file.
+	(abbrev_table::read): Update.
+
+2020-05-27  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (struct partial_die_info) <name>: Declare new
+	method.
+	<canonical_name>: New member.
+	<raw_name>: Rename from "name".
+	(partial_die_info): Initialize canonical_name.
+	(scan_partial_symbols): Check raw_name.
+	(partial_die_parent_scope, partial_die_full_name)
+	(add_partial_symbol, add_partial_subprogram)
+	(add_partial_enumeration, load_partial_dies): Use "name" method.
+	(partial_die_info::name): New method.
+	(partial_die_info::read, guess_partial_die_structure_name)
+	(partial_die_info::fixup): Update.
+
+2020-05-27  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/attribute.h (struct attribute) <form_is_ref>: Inline.
+	<get_ref_die_offset>: Inline.
+	<get_ref_die_offset_complaint>: New method.
+	* dwarf2/attribute.c (attribute::form_is_ref): Move to header.
+	(attribute::get_ref_die_offset_complaint): Rename from
+	get_ref_die_offset.  Just issue complaint.
+
+2020-05-27  Hannes Domani  <ssbssa@yahoo.de>
+
+	* cli/cli-cmds.c (shell_escape): Move exit_status_set_internal_vars.
+
+2020-05-27  Hannes Domani  <ssbssa@yahoo.de>
+
+	* exec.c (exec_file_attach): Use errno value of first openp failure.
+
+2020-05-27  Hannes Domani  <ssbssa@yahoo.de>
+
+	* nat/windows-nat.c (windows_thread_info::~windows_thread_info):
+	Don't close thread handle.
+
+2020-05-27  Tom Tromey  <tom@tromey.com>
+	    Simon Marchi  <simon.marchi@efficios.com>
+
+	* objfiles.h (struct objfile) <partial_symtabs>: Now a
+	shared_ptr.
+	* dwarf2/read.h (struct dwarf2_per_objfile) <partial_symtabs>: New
+	member.
+	* dwarf2/read.c (dwarf2_per_bfd_bfd_data_key,
+	dwarf2_per_bfd_objfile_data_key>: New globals.
+	(dwarf2_has_info): Use shared dwarf2_per_bfd if possible.
+	(dwarf2_get_section_info): Use get_dwarf2_per_objfile.
+	(dwarf2_initialize_objfile): Consider cases where per_bfd can be
+	shared.
+	(dwarf2_build_psymtabs): Set objfile::partial_symtabs and
+	short-circuit when sharing.
+	(dwarf2_build_psymtabs): Set dwarf2_per_objfile::partial_symtabs.
+	(dwarf2_psymtab::expand_psymtab): Use free_cached_comp_units.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_per_bfd) <line_header_hash>: Move
+	to...
+	(struct dwarf2_per_objfile) <line_header_hash>: ... here.
+	* dwarf2/read.c (handle_DW_AT_stmt_list): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (struct mapped_index_base) <symbol_name_at,
+	build_name_components, find_name_components_bounds>:
+	Add per_objfile parameter.
+	(struct mapped_index) <symbol_name_at>: Likewise.
+	(struct mapped_debug_names): Remove constructor.
+	<dwarf2_per_objfile>: Remove field.
+	<namei_to_name, symbol_name_at>: Add per_objfile parameter.
+	(mapped_index_base::find_name_components_bounds,
+	mapped_index_base::build_name_components,
+	dw2_expand_symtabs_matching_symbol): Likewise.
+	(class mock_mapped_index) <symbol_name_at>: Likewise.
+	(check_match): Likewise.
+	(check_find_bounds_finds): Likewise.
+	(test_mapped_index_find_name_component_bounds): Update.
+	(CHECK_MATCH): Update.
+	(dw2_expand_symtabs_matching): Update.
+	(class dw2_debug_names_iterator) <dw2_debug_names_iterator>: Add
+	per_objfile parameter.
+	<find_vec_in_debug_names>: Likewise.
+	<m_per_objfile>: New field.
+	(mapped_debug_names::namei_to_name): Add dwarf2_per_objfile
+	parameter.
+	(dw2_debug_names_iterator::find_vec_in_debug_names): Likewise.
+	(dw2_debug_names_iterator::next): Update.
+	(dw2_debug_names_lookup_symbol): Update.
+	(dw2_debug_names_expand_symtabs_for_function): Update.
+	(dw2_debug_names_map_matching_symbols): Update.
+	(dw2_debug_names_expand_symtabs_matching): Update.
+	(dwarf2_read_debug_names): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_cu): Forward-declare.
+	(struct dwarf2_per_bfd) <free_cached_comp_units>: Remove,
+	move to dwarf2_per_objfile.
+	<read_in_chain>: Remove.
+	(struct dwarf2_per_objfile) <get_cu, set_cu, remove_cu,
+	remove_all_cus, age_comp_units>: New methods.
+	<m_dwarf2_cus>: New member.
+	(struct dwarf2_per_cu_data) <cu>: Remove.
+	* dwarf2/read.c (struct dwarf2_cu) <read_in_chain>: Remove.
+	(age_cached_comp_units, free_one_cached_comp_unit): Remove,
+	moved to methods of dwarf2_per_objfile.
+	(dwarf2_clear_marks): Remove.
+	(dwarf2_queue_item::~dwarf2_queue_item): Update.
+	(dwarf2_per_bfd::~dwarf2_per_bfd): Don't free dwarf2_cus.
+	(dwarf2_per_bfd::free_cached_comp_units): Remove.
+	(dwarf2_per_objfile::remove_all_cus): New.
+	(class free_cached_comp_units) <~free_cached_comp_units>:
+	Update.
+	(load_cu): Update.
+	(dw2_do_instantiate_symtab): Adjust.
+	(fill_in_sig_entry_from_dwo_entry): Adjust.
+	(cutu_reader::init_tu_and_read_dwo_dies): Update.
+	(cutu_reader::cutu_reader): Likewise.
+	(cutu_reader::keep): Use dwarf2_per_objfile::set_cu.
+	(cutu_reader::cutu_reader): Use dwarf2_per_objfile::get_cu.
+	(process_psymtab_comp_unit): Use dwarf2_per_objfile::remove_cu
+	and dwarf2_per_objfile::age_comp_units.
+	(load_partial_comp_unit): Update.
+	(maybe_queue_comp_unit): Use dwarf2_per_objfile::get_cu.
+	(process_queue): Likewise.
+	(find_partial_die): Use dwarf2_per_objfile::get_cu instead of cu
+	backlink.
+	(dwarf2_read_addr_index): Likewise.
+	(follow_die_offset): Likewise.
+	(dwarf2_fetch_die_loc_sect_off): Likewise.
+	(dwarf2_fetch_constant_bytes): Likewise.
+	(dwarf2_fetch_die_type_sect_off): Likewise.
+	(follow_die_sig_1): Likewise.
+	(load_full_type_unit): Likewise.
+	(read_signatured_type): Likewise.
+	(dwarf2_cu::dwarf2_cu): Don't set cu field.
+	(dwarf2_cu::~dwarf2_cu): Remove.
+	(dwarf2_per_objfile::get_cu): New.
+	(dwarf2_per_objfile::set_cu): New.
+	(age_cached_comp_units): Rename to...
+	(dwarf2_per_objfile::age_comp_units): ... this.  Adjust
+	to std::unordered_map.
+	(free_one_cached_comp_unit): Rename to...
+	(dwarf2_per_objfile::remove_cu): ... this.  Adjust
+	to std::unordered_map.
+	(dwarf2_per_objfile::~dwarf2_per_objfile): New.
+	(dwarf2_mark_helper): Use dwarf2_per_objfile::get_cu, expect
+	a dwarf2_per_objfile in data.
+	(dwarf2_mark): Pass dwarf2_per_objfile in data to htab_traverse.
+	(dwarf2_clear_marks): Remove.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (class cutu_reader) <cutu_reader>: Replace
+	`int use_existing_cu` parameter with `dwarf2_cu *existing_cu`.
+	(init_tu_and_read_dwo_dies): Likewise.
+	(cutu_reader::init_tu_and_read_dwo_dies): Likewise.
+	(cutu_reader::cutu_reader): Likewise.
+	(load_partial_comp_unit): Likewise.
+	(process_psymtab_comp_unit): Update.
+	(build_type_psymtabs_1): Update.
+	(process_skeletonless_type_unit): Update.
+	(load_full_comp_unit): Update.
+	(find_partial_die): Update.
+	(dwarf2_read_addr_index): Update.
+	(read_signatured_type): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.h (struct dwarf2_per_cu_data) <m_header,
+	m_header_read_in>: New fields.
+	<get_header>: New method.
+	* dwarf2/read.c (per_cu_header_read_in): Remove.
+	(dwarf2_per_cu_data::get_header): New.
+	(dwarf2_per_cu_data::addr_size): Update.
+	(dwarf2_per_cu_data::offset_size): Update.
+	(dwarf2_per_cu_data::ref_addr_size): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (load_cu): Return dwarf2_cu.
+	(dw2_do_instantiate_symtab): Update.
+	(queue_and_load_all_dwo_tus): Change parameter from
+	dwarf2_per_cu_data to dwarf2_cu.
+	(dwarf2_fetch_die_loc_sect_off): Update.
+	(dwarf2_fetch_constant_bytes): Update.
+	(dwarf2_fetch_die_type_sect_off): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (process_full_comp_unit,
+	process_full_type_unit): Remove per_cu, per_objfile paramters.
+	Add dwarf2_cu parameter.
+	(process_queue): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (create_cu_from_index_list): Replace
+	dwarf2_per_objfile parameter with dwarf2_per_bfd.
+	(create_cus_from_index_list): Likewise.
+	(create_cus_from_index): Likewise.
+	(create_signatured_type_table_from_index): Likewise.
+	(create_cus_from_debug_names_list): Likewise.
+	(create_cus_from_debug_names): Likewise.
+	(dwarf2_read_gdb_index): Update.
+	(dwarf2_read_debug_names): Update.
+
+2020-05-27  Tom Tromey  <tom@tromey.com>
+	    Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_per_objfile)
+	<get_type_for_signatured_type, set_type_for_signatured_type>:
+	New methods.
+	<m_type_map>: New member.
+	(struct signatured_type) <type>: Remove.
+	* dwarf2/read.c
+	(dwarf2_per_objfile::get_type_for_signatured_type,
+	dwarf2_per_objfile::set_type_for_signatured_type): New.
+	(get_signatured_type): Use new methods.
+
+2020-05-27  Tom Tromey  <tom@tromey.com>
+	    Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct type_unit_group_unshareable): New.
+	(struct dwarf2_per_objfile) <type_units>: New member.
+	<get_type_unit_group_unshareable>: New method.
+	* dwarf2/read.c (struct type_unit_group) <compunit_symtab,
+	num_symtabs, symtabs>: Remove; move to
+	type_unit_group_unshareable.
+	(dwarf2_per_objfile::get_type_unit_group_unshareable): New.
+	(process_full_type_unit, dwarf2_cu::setup_type_unit_groups)
+	(dwarf2_cu::setup_type_unit_groups): Use type_unit_group_unshareable.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_per_cu_data):
+	<dwarf2_per_objfile>: Remove.
+	* dwarf2/read.c (create_cu_from_index_list): Don't assign
+	dwarf2_per_objfile.
+	(create_signatured_type_table_from_index): Likewise.
+	(create_signatured_type_table_from_debug_names): Likewise.
+	(create_debug_type_hash_table): Likewise.
+	(fill_in_sig_entry_from_dwo_entry): Likewise.
+	(create_type_unit_group): Likewise.
+	(read_comp_units_from_section): Likewise.
+	(create_cus_hash_table): Likewise.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (process_psymtab_comp_unit): Remove reference to
+	dwarf2_per_cu_data::dwarf2_per_objfile.
+	(compute_compunit_symtab_includes): Likewise.
+	(dwarf2_cu::start_symtab): Likewise.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.h (dwarf2_get_die_type): Add dwarf2_per_objfile
+	parameter.
+	* dwarf2/read.c (get_die_type_at_offset): Likewise.
+	(read_namespace_alias): Update.
+	(lookup_die_type): Update.
+	(dwarf2_get_die_type): Add dwarf2_per_objfile parameter.
+	* dwarf2/loc.c (class dwarf_evaluate_loc_desc) <get_base_type>:
+	Update.
+	(disassemble_dwarf_expression): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_queue_item): Add
+	dwarf2_per_objfile parameter, assign new parameter.
+	<per_objfile>: New field.
+	* dwarf2/read.c (free_one_cached_comp_unit): Add
+	dwarf2_per_objfile parameter.
+	(queue_comp_unit): Likewise.
+	(dw2_do_instantiate_symtab): Update.
+	(process_psymtab_comp_unit): Update.
+	(maybe_queue_comp_unit): Add dwarf2_per_objfile parameter.
+	(process_imported_unit_die): Update.
+	(queue_and_load_dwo_tu): Update.
+	(follow_die_offset): Update.
+	(follow_die_sig_1): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_per_cu_data) <objfile>: Remove.
+	* dwarf2/read.c (dwarf2_compute_name): Pass per_objfile down.
+	(read_call_site_scope): Assign per_objfile.
+	(dwarf2_per_cu_data::objfile): Remove.
+	* gdbtypes.h (struct call_site) <per_objfile>: New member.
+	* dwarf2/loc.h (dwarf2_evaluate_loc_desc): Add
+	dwarf2_per_objfile parameter.
+	* dwarf2/loc.c (dwarf2_evaluate_loc_desc_full): Add
+	dwarf2_per_objfile parameter.
+	(dwarf_expr_reg_to_entry_parameter): Add output
+	dwarf2_per_objfile parameter.
+	(locexpr_get_frame_base): Update.
+	(class dwarf_evaluate_loc_desc) <get_tls_address>: Update.
+	<push_dwarf_reg_entry_value>: Update.
+	<call_site_to_target_addr>: Update.
+	(dwarf_entry_parameter_to_value): Add dwarf2_per_objfile
+	parameter.
+	(value_of_dwarf_reg_entry): Update.
+	(rw_pieced_value): Update.
+	(indirect_synthetic_pointer): Update.
+	(dwarf2_evaluate_property): Update.
+	(dwarf2_loc_desc_get_symbol_read_needs): Add dwarf2_per_objfile
+	parameter.
+	(locexpr_read_variable): Update.
+	(locexpr_get_symbol_read_needs): Update.
+	(loclist_read_variable): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (dwarf2_fetch_die_loc_sect_off,
+	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
+	dwarf2_fetch_die_type_sect_off): Add dwarf2_per_objfile
+	parameter.
+	* dwarf2/read.c (dwarf2_fetch_die_loc_sect_off,
+	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
+	dwarf2_fetch_die_type_sect_off): Add dwarf2_per_objfile
+	parameter.
+	* dwarf2/loc.c (indirect_synthetic_pointer, per_cu_dwarf_call,
+	sect_variable_value): Add dwarf2_per_objfile parameter.
+	(class dwarf_evaluate_loc_desc) <dwarf_call,
+	dwarf_variable_value>: Update.
+	(fetch_const_value_from_synthetic_pointer): Add
+	dwarf2_per_objfile parameter.
+	(fetch_const_value_from_synthetic_pointer): Update.
+	(coerced_pieced_ref): Update.
+	(class symbol_needs_eval_context) <dwarf_call,
+	dwarf_variable_value>: Update.
+	(dwarf2_compile_expr_to_ax): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/loc.c (allocate_piece_closure): Add dwarf2_per_objfile
+	parameter.
+	(dwarf2_evaluate_loc_desc_full): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (dwarf2_read_addr_index): Add dwarf2_per_objfile
+	parameter.
+	* dwarf2/read.c (dwarf2_read_addr_index): Likewise.
+	* dwarf2/loc.c (decode_debug_loclists_addresses): Add
+	dwarf2_per_objfile parameter.
+	(decode_debug_loc_dwo_addresses): Likewise.
+	(dwarf2_find_location_expression): Update.
+	(class dwarf_evaluate_loc_desc) <get_addr_index>: Update.
+	(locexpr_describe_location_piece): Add dwarf2_per_objfile
+	parameter.
+	(disassemble_dwarf_expression): Add dwarf2_per_objfile
+	parameter.
+	(locexpr_describe_location_1): Likewise.
+	(locexpr_describe_location): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_per_cu_data) <text_offset>:
+	Remove.
+	* dwarf2/read.c (dwarf2_per_cu_data::text_offset): Remove.
+	* dwarf2/loc.c (dwarf2_find_location_expression): Update.
+	(dwarf2_compile_property_to_c): Update.
+	(dwarf2_compile_expr_to_ax): Add dwarf2_per_objfile parameter,
+	use text offset from objfile.
+	(locexpr_tracepoint_var_ref): Update.
+	(locexpr_generate_c_location): Update.
+	(loclist_describe_location): Update.
+	(loclist_tracepoint_var_ref): Update.
+	* dwarf2/compile.h (compile_dwarf_bounds_to_c): Add
+	dwarf2_per_objfile parameter.
+	* dwarf2/loc2c.c (do_compile_dwarf_expr_to_c): Likewise,
+	use text offset from objfile.
+	(compile_dwarf_expr_to_c): Add dwarf2_per_objfile parameter.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/expr.h (struct dwarf_expr_context)
+	<dwarf_expr_context>: Add dwarf2_per_objfile parameter.
+	<offset>: Remove.
+	<per_objfile>: New member.
+	* dwarf2/expr.c (dwarf_expr_context::dwarf_expr_context): Add
+	dwarf2_per_objfile parameter.  Don't set offset, set
+	per_objfile.
+	(dwarf_expr_context::execute_stack_op): Use offset from objfile.
+	* dwarf2/frame.c (dwarf2_frame_find_fde): Return (by parameter)
+	a dwarf2_per_objfile object instead of an offset.
+	(class dwarf_expr_executor) <dwarf_expr_executor>: Add
+	constructor.
+	(execute_stack_op): Add dwarf2_per_objfile parameter, pass it
+	to dwarf2_expr_executor constructor.  Don't set offset.
+	(dwarf2_fetch_cfa_info): Update.
+	(struct dwarf2_frame_cache) <text_offset>: Remove.
+	<per_objfile>: New field.
+	(dwarf2_frame_cache): Update.
+	(dwarf2_frame_prev_register): Update.
+	* dwarf2/loc.c (class dwarf_evaluate_loc_desc)
+	<dwarf_evaluate_loc_desc>: Add constructor.
+	(dwarf2_evaluate_loc_desc_full): Update.
+	(dwarf2_locexpr_baton_eval): Update.
+	(class symbol_needs_eval_context) <symbol_needs_eval_context>:
+	Add constructor.
+	(dwarf2_loc_desc_get_symbol_read_needs): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_per_cu_data) <addr_type,
+	addr_sized_int_type>: Move to dwarf2_cu.
+	<int_type>: Move to dwarf2_per_objfile.
+	(struct dwarf2_per_objfile) <int_type>: Move here.
+	* dwarf2/read.c (struct dwarf2_cu) <addr_type,
+	addr_sized_int_type>: Move here.
+	(read_func_scope): Update.
+	(read_array_type): Update.
+	(read_tag_string_type): Update.
+	(attr_to_dynamic_prop): Update.
+	(dwarf2_per_cu_data::int_type): Rename to...
+	(dwarf2_per_objfile::int_type): ... this.
+	(dwarf2_per_cu_data::addr_sized_int_type): Rename to...
+	(dwarf2_cu::addr_sized_int_type): ... this.
+	(read_subrange_type): Update.
+	(dwarf2_per_cu_data::addr_type): Rename to...
+	(dwarf2_cu::addr_type): ... this.
+	(set_die_type): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (queue_and_load_all_dwo_tus): Access per_objfile
+	data through per_cu->cu.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (lookup_dwo_comp_unit): Change
+	dwarf2_per_cu_data parameter fo dwarf2_cu.
+	(lookup_dwo_type_unit): Likewise.
+	(read_cutu_die_from_dwo): Likewise.
+	(lookup_dwo_unit): Likewise.
+	(open_and_init_dwo_file): Likewise.
+	(lookup_dwo_cutu): Likewise.
+	(lookup_dwo_comp_unit): Likewise.
+	(lookup_dwo_type_unit): Likewise.
+	(cutu_reader::init_tu_and_read_dwo_dies): Update.
+	(cutu_reader::cutu_reader): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (process_full_comp_unit): Add dwarf2_per_objfile
+	parameter.
+	(process_full_type_unit): Likewise.
+	(process_queue): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (recursively_compute_inclusions): Add
+	dwarf2_per_objfile parameter.
+	(compute_compunit_symtab_includes): Likewise.
+	(process_cu_includes): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (create_partial_symtab): Add dwarf2_per_objfile
+	parameter.
+	(create_type_unit_group): Update.
+	(process_psymtab_comp_unit_reader): Update.
+	(build_type_psymtabs_reader): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (cutu_reader::keep): Access dwarf2_per_objfile
+	object through m_this_cu->cu.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (queue_and_load_dwo_tu): Expect a dwarf2_cu as
+	the info parameter.
+	(queue_and_load_all_dwo_tus): Pass per_cu->cu.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (class cutu_reader) <cutu_reader>: Add
+	per_objfile parameter.
+	(load_full_type_unit): Add per_objfile parameter.
+	(read_signatured_type): Likewise.
+	(load_full_comp_unit): Likewise.
+	(load_cu): Likewise.
+	(dw2_do_instantiate_symtab): Likewise.
+	(dw2_get_file_names): Likewise.
+	(dw2_map_symtabs_matching_filename): Update.
+	(dw_expand_symtabs_matching_file_matcher): Update.
+	(dw2_map_symbol_filenames): Update.
+	(process_psymtab_comp_unit): Add per_objfile parameter.
+	(build_type_psymtabs_1): Update.
+	(process_skeletonless_type_unit): Update.
+	(dwarf2_build_psymtabs_hard): Update.
+	(load_partial_comp_unit): Add per_objfile parameter.
+	(scan_partial_symbols): Update.
+	(load_full_comp_unit): Add per_objfile parameter.
+	(process_imported_unit_die): Update.
+	(create_cus_hash_table): Update.
+	(find_partial_die): Update.
+	(dwarf2_read_addr_index): Update.
+	(follow_die_offset): Update.
+	(dwarf2_fetch_die_loc_sect_off): Update.
+	(dwarf2_fetch_constant_bytes): Update.
+	(dwarf2_fetch_die_type_sect_off): Update.
+	(follow_die_sig_1): Update.
+	(load_full_type_unit): Add per_objfile parameter.
+	(read_signatured_type): Likewise.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (lookup_dwo_unit): Use bfd_get_filename instead
+	of objfile_name.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.h (struct dwarf2_per_bfd) <obfd>: New member.
+	(dwarf2_get_dwz_file): Replace parameter with dwarf2_per_bfd.
+	* dwarf2/read.c (dwarf2_per_bfd::dwarf2_per_bfd): Assign obfd
+	field.
+	(dwarf2_get_dwz_file): Replace parameter with dwarf2_per_bfd.
+	(create_cus_from_index): Update.
+	(dwarf2_read_gdb_index): Update.
+	(create_cus_from_debug_names): Update.
+	(dwarf2_read_debug_names): Update.
+	(get_abbrev_section_for_cu): Update.
+	(create_all_comp_units): Update.
+	(read_attribute_value): Update.
+	(get_debug_line_section): Update.
+	* dwarf2/index-cache.c (index_cache::store): Update.
+	* dwarf2/index-write.c (save_gdb_index_command): Update.
+	* dwarf2/macro.c (dwarf_decode_macro_bytes): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.h (struct dwarf2_per_cu_data) <per_bfd>: New
+	member.
+	* dwarf2/read.c (dwarf2_per_bfd::allocate_per_cu): Initialize
+	dwarf2_per_cu_data::per_bfd.
+	(dwarf2_per_bfd::allocate_signatured_type): Likewise.
+	(create_type_unit_group): Likewise.
+	(queue_comp_unit): Remove reference to
+	per_cu->dwarf2_per_objfile.
+	(maybe_queue_comp_unit): Likewise.
+	(fill_in_sig_entry_from_dwo_entry): Assign new field.
+	(create_cus_hash_table): Assign new field.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c: Replace
+	dwarf2_cu->per_cu->dwarf2_per_objfile references with
+	dwarf2_cu->per_objfile throughout.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (dw2_do_instantiate_symtab): Add per_objfile
+	parameter, don't use per_cu->dwarf2_per_objfile.
+	(dw2_instantiate_symtab): Likewise.
+	(dw2_find_last_source_symtab): Update.
+	(dw2_map_expand_apply): Update.
+	(dw2_lookup_symbol): Update.
+	(dw2_expand_symtabs_for_function): Update.
+	(dw2_expand_all_symtabs): Update.
+	(dw2_expand_symtabs_with_fullname): Update.
+	(dw2_expand_symtabs_matching_one): Add per_objfile parameter,
+	don't use per_cu->dwarf2_per_objfile.
+	(dw2_expand_marked_cus): Update.
+	(dw2_find_pc_sect_compunit_symtab): Update.
+	(dw2_debug_names_lookup_symbol): Update.
+	(dw2_debug_names_expand_symtabs_for_function): Update.
+	(dw2_debug_names_map_matching_symbols): Update.
+	(dwarf2_psymtab::expand_psymtab): Update.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (struct dwarf2_cu) <dwarf2_cu>: Add parameter.
+	<per_objfile>: New member.
+	(class cutu_reader) <init_tu_and_read_dwo_dies>: Add parameter.
+	(cutu_reader::init_tu_and_read_dwo_dies): Add parameter, update
+	call to dwarf2_cu.
+	(cutu_reader::cutu_reader): Update.
+	(dwarf2_cu::dwarf2_cu): Add parameter, initialize per_objfile.
+
+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_per_bfd) <die_type_hash>: Move to
+	struct dwarf2_per_objfile.
+	(struct dwarf2_per_objfile) <die_type_hash>: Move from struct
+	dwarf2_per_bfd.
+	* dwarf2/read.c (set_die_type): Update.
+	(get_die_type_at_offset): Update.
+
+2020-05-27  Tom Tromey  <tom@tromey.com>
+	    Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.h (struct dwarf2_per_bfd) <num_psymtabs>: New
+	method.
+	(struct dwarf2_per_objfile) <resize_symtabs, symtab_set_p,
+	get_symtab, set_symtab>: New methods.
+	<m_symtabs>: New field.
+	(struct dwarf2_psymtab): Derive from partial_symtab.
+	<readin_p, get_compunit_symtab>: Declare methods.
+	* dwarf2/read.c (dwarf2_per_objfile::symtab_set_p,
+	dwarf2_per_objfile::get_symtab, dwarf2_per_objfile::set_symtab):
+	New methods.
+	(struct dwarf2_per_cu_quick_data) <compunit_symtab>: Remove.
+	(dw2_do_instantiate_symtab, dw2_instantiate_symtab)
+	(dw2_map_expand_apply, dw2_map_symtabs_matching_filename)
+	(dw2_symtab_iter_next, dw2_print_stats)
+	(dw2_expand_symtabs_with_fullname)
+	(dw2_expand_symtabs_matching_one)
+	(dw_expand_symtabs_matching_file_matcher)
+	(dw2_find_pc_sect_compunit_symtab, dw2_map_symbol_filenames)
+	(dw2_debug_names_iterator::next)
+	(dw2_debug_names_map_matching_symbols)
+	(fill_in_sig_entry_from_dwo_entry, dwarf2_psymtab::read_symtab)
+	(process_queue, dwarf2_psymtab::expand_psymtab): Update.
+	(dwarf2_psymtab::readin_p, dwarf2_psymtab::get_compunit_symtab):
+	New methods.
+	(get_compunit_symtab, process_full_comp_unit)
+	(process_full_type_unit): Update.
+	(dwarf2_build_psymtabs, dwarf2_initialize_objfile, add_type_unit): Call
+
+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.h (dwarf2_per_objfile): Rename to dwarf2_per_bfd,
+	then introduce a new dwarf2_per_objfile type.
+	<read_line_string>: Move to the new dwarf2_per_objfile type.
+	<objfile>: Likewise.
+	(dwarf2_per_bfd): Rename dwarf2_per_objfile to this.
+	* dwarf2/read.c: Replace references to dwarf2_per_objfile with
+	dwarf2_per_objfile->per_bfd.
+	(dwarf2_per_objfile::dwarf2_per_objfile): Rename to...
+	(dwarf2_per_bfd::dwarf2_per_bfd): ... this.
+	(dwarf2_per_objfile::free_cached_comp_units): Rename to...
+	(dwarf2_per_bfd::free_cached_comp_units): ... this.
+	(dwarf2_has_info): Allocate dwarf2_per_bfd.
+	(dwarf2_per_objfile::locate_sections): Rename to...
+	(dwarf2_per_bfd::locate_sections): ... this.
+	(dwarf2_per_objfile::get_cutu): Rename to...
+	(dwarf2_per_bfd::get_cutu): ... this.
+	(dwarf2_per_objfile::get_cu): Rename to...
+	(dwarf2_per_bfd::get_cu): ... this.
+	(dwarf2_per_objfile::get_tu): Rename to...
+	(dwarf2_per_bfd::get_tu): ... this.
+	(dwarf2_per_objfile::allocate_per_cu): Rename to...
+	(dwarf2_per_bfd::allocate_per_cu): ... this.
+	(dwarf2_per_objfile::allocate_signatured_type): Rename to...
+	(dwarf2_per_bfd::allocate_signatured_type): ... this.
+	(get_gdb_index_contents_ftype): Change parameter from
+	dwarf2_per_objfile to dwarf2_per_bfd.
+	* dwarf2/macro.c, dwarf2/index-write.c: Replace references to
+	dwarf2_per_objfile with dwarf2_per_objfile->per_bfd.
+
+2020-05-27  Tom Tromey  <tom@tromey.com>
+	    Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/loc.c (struct piece_closure) <per_objfile>: New member.
+	(allocate_piece_closure): Set "per_objfile" member.
+	(dwarf2_find_location_expression, dwarf2_locexpr_baton_eval)
+	(locexpr_describe_location, loclist_describe_location): Use new
+	member.
+	* dwarf2/read.c (read_call_site_scope)
+	(mark_common_block_symbol_computed, attr_to_dynamic_prop)
+	(dwarf2_const_value_attr, dwarf2_fetch_die_loc_sect_off)
+	(fill_in_loclist_baton, dwarf2_symbol_mark_computed,
+	handle_data_member_location): Set per_objfile member.
+	* dwarf2/loc.h (struct dwarf2_locexpr_baton) <per_objfile>: New
+	member.
+	(struct dwarf2_loclist_baton) <per_objfile>: New member.
+
+2020-05-27  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct dwarf2_per_objfile) <allocate_per_cu,
+	allocate_signatured_type>: Declare new methods.
+	<m_num_psymtabs>: New member.
+	(struct dwarf2_per_cu_data) <index>: New member.
+	* dwarf2/read.c (dwarf2_per_objfile::allocate_per_cu)
+	(dwarf2_per_objfile::allocate_signatured_type): New methods.
+	(create_cu_from_index_list): Use allocate_per_cu.
+	(create_signatured_type_table_from_index)
+	(create_signatured_type_table_from_debug_names)
+	(create_debug_type_hash_table, add_type_unit)
+	(read_comp_units_from_section): Use allocate_signatured_type.
+
+2020-05-27  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.c (partial_map_expand_apply)
+	(psym_find_pc_sect_compunit_symtab, psym_lookup_symbol)
+	(psym_lookup_global_symbol_language)
+	(psymtab_to_symtab, psym_find_last_source_symtab, dump_psymtab)
+	(psym_print_stats, psym_expand_symtabs_for_function)
+	(psym_map_symbol_filenames, psym_map_matching_symbols)
+	(psym_expand_symtabs_matching)
+	(partial_symtab::read_dependencies, maintenance_info_psymtabs)
+	(maintenance_check_psymtabs): Update.
+	* psympriv.h (struct partial_symtab) <readin_p,
+	get_compunit_symtab>: Add objfile parameter.
+	(struct standard_psymtab) <readin_p, get_compunit_symtab>:
+	Likewise.
+	* dwarf2/read.c (struct dwarf2_include_psymtab) <readin_p,
+	get_compunit_symtab>: Likewise.
+	(dwarf2_psymtab::expand_psymtab): Pass objfile argument.
+
+2020-05-27  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct dwarf2_per_objfile) <obstack>: New
+	member.
+	* dwarf2/read.c (delete_file_name_entry): Fix comment.
+	(create_cu_from_index_list)
+	(create_signatured_type_table_from_index)
+	(create_signatured_type_table_from_debug_names)
+	(dw2_get_file_names_reader, dwarf2_initialize_objfile)
+	(dwarf2_create_include_psymtab)
+	(create_debug_type_hash_table, add_type_unit)
+	(create_type_unit_group, read_comp_units_from_section)
+	(dwarf2_compute_name, create_cus_hash_table)
+	(create_dwp_hash_table, create_dwo_unit_in_dwp_v1)
+	(create_dwo_unit_in_dwp_v2, open_and_init_dwp_file): Use new
+	obstack.
+	(dw2_get_real_path): Likewise.  Change argument to
+	dwarf2_per_objfile.
+
+2020-05-27  Luis Machado  <luis.machado@linaro.org>
+
+	PR tdep/26000
+	* arm-tdep.c (thumb_analyze_prologue): Fix instruction matching
+	for ldrd (immediate).
+
+2020-05-26  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* command.h: Add comment giving the name of class_tui.
+	* cli/cli-cmds.c (_initialize_cli_cmds): If TUI defined,
+	create the fake command for the help for class_tui.
+
+2020-05-26  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_print_array_index): Change type.  Call val_atr.
+	(ada_value_ptr_subscript): Don't call pos_atr on the lower bound.
+	(val_atr): New function.
+	(value_val_atr): Use it.
+	* ada-valprint.c (print_optional_low_bound): Change low bound
+	handling for enums.
+	(val_print_packed_array_elements): Don't call discrete_position.
+	* gdbtypes.c (get_discrete_bounds) <TYPE_CODE_RANGE>: Call
+	discrete_position for enum types.
+	* language.c (default_print_array_index): Change type.
+	* language.h (struct language_defn) <la_print_array_index>: Add
+	index_type parameter, change type of index_value.
+	(LA_PRINT_ARRAY_INDEX): Add index_type parameter.
+	(default_print_array_index): Update.
+	* valprint.c (maybe_print_array_index): Don't call
+	value_from_longest.  Update.
+	(value_print_array_elements): Don't call discrete_position.
+
+2020-05-26  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (value_val_atr): Handle TYPE_CODE_RANGE.
+	* gdbtypes.c (discrete_position): Handle TYPE_CODE_RANGE.
+
+2020-05-25  Cristiano De Alti  <cristiano_dealti@hotmail.com>
+
+	PR gdb/13519
+	* avr-tdep.c (avr_integer_to_address): Return data or code
+	address accordingly to the second 'type' argument of the
+	function.
+
+2020-05-25  Michael Weghorn  <m.weghorn@posteo.de>
+
+	* infcmd.c, inferior.h: (construct_inferior_arguments):
+	Moved function from here to gdbsupport/common-inferior.{h,cc}
+
+2020-05-23  Tom Tromey  <tom@tromey.com>
+
+	Revert commit eca1f90c:
+	* NEWS: Remove entry for completion styling.
+	* completer.c (_rl_completion_prefix_display_length): Move
+	declaration later.
+	(gdb_fnprint): Revert.
+	(gdb_display_match_list_1): Likewise.
+	* cli/cli-style.c (completion_prefix_style)
+	(completion_difference_style, completion_suffix_style): Remove.
+	(_initialize_cli_style): Revert.
+	* cli/cli-style.h (completion_prefix_style)
+	(completion_difference_style, completion_suffix_style): Don't
+	declare.
+
+2020-05-24  Pedro Alves  <palves@redhat.com>
+
+	* symtab.c (completion_list_add_name): Return boolean indication
+	of whether the symbol matched.
+	(completion_list_add_symbol): Don't try to remove C++ aliases if
+	the symbol didn't match in the first place.
+	* symtab.h (completion_list_add_name): Return bool.
+
+2020-05-23  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbtypes.h (TYPE_FIELD): Remove.  Replace all uses with
+	type::field.
+
+2020-05-23  Joel Brobecker  <brobecker@adacore.com>
+
+	GDB 9.2 released.
+
+2020-05-23  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Add entry for completion styling.
+	* completer.c (_rl_completion_prefix_display_length): Move
+	declaration earlier.
+	(gdb_fnprint): Use completion_style.
+	(gdb_display_match_list_1): Likewise.
+	* cli/cli-style.c (completion_prefix_style)
+	(completion_difference_style, completion_suffix_style): New
+	globals.
+	(_initialize_cli_style): Register new globals.
+	* cli/cli-style.h (completion_prefix_style)
+	(completion_difference_style, completion_suffix_style): Declare.
+
+2020-05-23  Pedro Alves  <palves@redhat.com>
+
+	* utils.c: Include "gdbsupport/gdb-safe-ctype.h".
+	(parse_escape): Use ISDIGIT instead of isdigit.
+	(puts_debug): Use gdb_isprint instead of isprint.
+	(fprintf_symbol_filtered): Use ISALNUM instead of isalnum.
+	(cp_skip_operator_token, skip_ws, strncmp_iw_with_mode): Use
+	ISSPACE instead of isspace.
+	(strncmp_iw_with_mode): Use TOLOWER instead of tolower and ISSPACE
+	instead of isspace.
+	(strcmp_iw_ordered): Use ISSPACE instead of isspace.
+	(string_to_core_addr): Use TOLOWER instead of tolower, ISXDIGIT
+	instead of isxdigit and ISDIGIT instead of isdigit.
+
+2020-05-22  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <field>: New method.
+	(TYPE_FIELDS): Remove, replace all uses with either type::fields
+	or type::field.
+
+2020-05-22  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <fields, set_fields>: New methods.
+	(TYPE_FIELDS): Use type::fields.  Change all call sites that
+	modify the propery to use type::set_fields instead.
+
+2020-05-22  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_NFIELDS): Remove.  Change all cal sites to use
+	type::num_fields instead.
+
+2020-05-22  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <num_fields, set_num_fields>: New
+	methods.
+	(TYPE_NFIELDS): Use type::num_fields.  Change all call sites
+	that modify the number of fields to use type::set_num_fields
+	instead.
+
+2020-05-22  Tom Tromey  <tromey@adacore.com>
+
+	* compile/compile-object-load.h (munmap_list_free): Don't
+	declare.
+
+2020-05-22  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* annotate.c (annotate_source_line): Update return type, add call
+	to update current symtab and line.
+	* annotate.h (annotate_source_line): Update return type, and
+	extend header comment.
+	* source.c (info_line_command): Check annotation_level before
+	calling annotate_source_line.
+	* stack.c (print_frame_info): If calling annotate_source_line
+	returns true, then don't print any other source line information.
+
+2020-05-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* lm32-tdep.c (lm32_register_reggroup_p): Fix condition.
+
+2020-05-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* coffread.c (patch_type): Remove NULL check before xfree.
+	* corefile.c (set_gnutarget): Likewise.
+	* cp-abi.c (set_cp_abi_as_auto_default): Likewise.
+	* exec.c (build_section_table): Likewise.
+	* remote.c (remote_target::pass_signals): Likewise.
+	* utils.c (n_spaces): Likewise.
+	* cli/cli-script.c (document_command): Likewise.
+	* i386-windows-tdep.c (core_process_module_section): Likewise.
+	* linux-fork.c (struct fork_info) <~fork_info>: Likewise.
+
+2020-05-20  Simon Marchi  <simon.marchi@efficios.com>
+
+	* symfile.c (reread_symbols): Clear objfile's section_offsets
+	vector and section indices, re-compute them by calling
+	sym_offsets.
+
+2020-05-20  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (bound_name, MAX_ADA_DIMENS): Remove.
+	(desc_one_bound, desc_index_type): Compute field name.
+
+2020-05-20  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25833
+	* dwarf2/read.c (dw2_map_matching_symbols): Handle .gdb_index.
+
+2020-05-20  Alan Modra  <amodra@gmail.com>
+
+	PR 25993
+	* solib-darwin.c (darwin_bfd_open): Don't strdup pathname for
+	bfd_set_filename.
+	* solib-aix.c (solib_aix_bfd_open): Use std::string for name
+	passed to bfd_set_filename.
+	* symfile-mem.c (add_vsyscall_page): Likewise for string
+	passed to symbol_file_add_from_memory.
+	(symbol_file_add_from_memory): Make name param a const char* and
+	don't strdup.
+
+2020-05-20  Alan Modra  <amodra@gmail.com>
+
+	* coff-pe-read.c (read_pe_exported_syms): Use bfd_get_filename
+	rather than accessing bfd->filename directly.
+	* dtrace-probe.c (dtrace_static_probe_ops::get_probes): Likewise,
+	and use bfd_section_name.
+	* dwarf2/frame.c (decode_frame_entry): Likewise.
+	* exec.c (exec_set_section_address): Likewise.
+	* solib-aix.c (solib_aix_bfd_open): Likewise.
+	* stap-probe.c (get_stap_base_address): Likewise.
+	* symfile.c (reread_symbols): Likewise.
+
+2020-05-19  Tom Tromey  <tromey@adacore.com>
+
+	* sparc64-tdep.c (adi_tag_fd): Update call to target_fileio_open.
+
+2020-05-19  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (quirk_rust_enum): Allocate enough fields.
+
+2020-05-19  Pedro Alves  <palves@redhat.com>
+
+	* NEWS (set exec-file-mismatch): Adjust entry.
+	* exec.c: Include "build-id.h".
+	(validate_exec_file): Try to match build IDs instead of filenames.
+	* gdb_bfd.c (struct gdb_bfd_open_closure): New.
+	(gdb_bfd_iovec_fileio_open): Adjust to use gdb_bfd_open_closure
+	and pass down 'warn_if_slow'.
+	(gdb_bfd_open): Add 'warn_if_slow' parameter.  Use
+	gdb_bfd_open_closure to pass it down.
+	* gdb_bfd.h (gdb_bfd_open): Add 'warn_if_slow' parameter.
+
+2020-05-19  Pedro Alves  <palves@redhat.com>
+
+	* gdb_bfd.c (gdb_bfd_iovec_fileio_open): Adjust.
+	* target.c (target_fileio_open_1): Rename to target_fileio_open
+	and make extern.  Use bool.
+	(target_fileio_open, target_fileio_open_warn_if_slow): Delete.
+	(target_fileio_read_alloc_1): Adjust.
+	* target.h (target_fileio_open): Add 'warn_if_slow' parameter.
+	(target_fileio_open_warn_if_slow): Delete declaration.
+
+2020-05-19  Pedro Alves  <palves@redhat.com>
+
+	* gdb_bfd.h: (gdb_bfd_open): Default to 'fd' parameter to -1.
+	Adjust all callers.
+
+2020-05-19  Yoshinori Sato  <ysato@users.sourceforge.jp>
+
+	* h8300-tdep.c (h8300_is_argument_spill): Change how we check
+	whether disp is negative.
+
+2020-05-19  Simon Marchi  <simon.marchi@efficios.com>
+
+	* symfile.h (struct symfile_segment_data)
+	<~symfile_segment_data>: Remove.
+	<segment_info>: Change to std::vector.
+	* symfile.c (default_symfile_segments): Update.
+	* elfread.c (elf_symfile_segments): Update.
+
+2020-05-19  Simon Marchi  <simon.marchi@efficios.com>
+
+	* symfile.h (struct symfile_segment_data) <struct segment>: New.
+	<segments>: New.
+	<segment_bases, segment_sizes>: Remove.
+	* symfile.c (default_symfile_segments): Update.
+	* elfread.c (elf_symfile_segments): Update.
+	* remote.c (remote_target::get_offsets): Update.
+	* solib-target.c (solib_target_relocate_section_addresses):
+	Update.
+
+2020-05-19  Simon Marchi  <simon.marchi@efficios.com>
+
+	* symfile.h (struct symfile_segment_data): Initialize fields.
+	<~symfile_segment_data>: Add.
+	(symfile_segment_data_up): New.
+	(struct sym_fns) <sym_segments>: Return a
+	symfile_segment_data_up.
+	(default_symfile_segments): Return a symfile_segment_data_up.
+	(free_symfile_segment_data): Remove.
+	(get_symfile_segment_data): Return a symfile_segment_data_up.
+	* symfile.c (default_symfile_segments): Likewise.
+	(get_symfile_segment_data): Likewise.
+	(free_symfile_segment_data): Remove.
+	(symfile_find_segment_sections): Update.
+	* elfread.c (elf_symfile_segments): Return a
+	symfile_segment_data_up.
+	* remote.c (remote_target::get_offsets): Update.
+	* solib-target.c (solib_target_relocate_section_addresses):
+	Update.
+	* symfile-debug.c (debug_sym_segments): Return a
+	symfile_segment_data_up.
+
+2020-05-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	PR build/25981
+	* i386-sol2-nat.c [PR_MODEL_NATIVE != PR_MODEL_LP64] (regmap):
+	Hardcode register numbers.
+
+	PR build/25981
+	* procfs.c [(__i386__ || __x86_64__) && sun] (proc_get_LDT_entry,
+	procfs_find_LDT_entry): Remove.
+	* procfs.h [(__i386__ || __x86_64__) && sun] (struct ssd,
+	procfs_find_LDT_entry): Remove.
+	* sol-thread.c [(__i386__ || __x86_64__) && sun] (ps_lgetLDT):
+	Remove.
+
+2020-05-17  Pedro Alves  <palves@redhat.com>
+	    Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Keno Fischer  <keno@juliacomputing.com>
+
+	PR gdb/25741
+	* breakpoint.c (build_target_condition_list): Update comments.
+	(build_target_command_list): Update comments and skip matching
+	locations.
+	(insert_bp_location): Move "set breakpoint auto-hw on" handling to
+	a separate function.  Simplify "set breakpoint auto-hw off"
+	handling.
+	(insert_breakpoints): Update comment.
+	(tracepoint_locations_match): New parameter.  For breakpoints,
+	compare location types too, if the caller wants to.
+	(handle_automatic_hardware_breakpoints): New functions.
+	(bp_location_is_less_than): Also sort by location type and
+	hardware breakpoint length.
+	(update_global_location_list): Handle "set breakpoint auto-hw on"
+	here.
+	(update_breakpoint_locations): Ask breakpoint_locations_match to
+	ignore location types.
+
+2020-05-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_NAME): Remove.  Change all cal sites to use
+	type::name instead.
+
+2020-05-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <name, set_name>: New methods.
+	(TYPE_CODE): Use type::name.  Change all call sites used to set
+	the name to use type::set_name instead.
+
+2020-05-16  Tom Tromey  <tom@tromey.com>
+
+	* top.c (quit_force): Update.
+	* infrun.c (handle_no_resumed): Update.
+	* top.h (all_uis): New function.
+	(ALL_UIS): Remove.
+
+2020-05-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* mips-linux-tdep.c (mips_linux_in_dynsym_stub): Fix condition.
+
+2020-05-16  Pedro Alves  <palves@redhat.com>
+
+	* ia64-linux-nat.c
+	(ia64_linux_nat_target) <enable_watchpoints_in_psr(ptid_t)>:
+	Declare method.
+	(enable_watchpoints_in_psr): Now a method of ia64_linux_nat_target.
+
+2020-05-15  Simon Marchi  <simon.marchi@efficios.com>
+
+	* sparc64-tdep.c (adi_stat_t): Remove typedef (leaving struct).
+	(sparc64_adi_info): Likewise.
+
+2020-05-15  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (lookup_language_this, lookup_symbol_aux): Use
+	block_objfile.
+	(lookup_objfile_from_block): Remove.
+	(lookup_symbol_in_block, lookup_symbol_in_static_block)
+	(lookup_global_symbol): Use block_objfile.
+	* symtab.h (lookup_objfile_from_block): Don't declare.
+	* printcmd.c (clear_dangling_display_expressions): Use
+	block_objfile.
+	* parse.c (operator_check_standard): Use block_objfile.
+
+2020-05-15  Tom Tromey  <tom@tromey.com>
+
+	* language.c (language_alloc_type_symbol): Set
+	SYMBOL_SECTION.
+	* symtab.c (initialize_objfile_symbol): Remove.
+	(allocate_symbol): Remove.
+	(allocate_template_symbol): Remove.
+	* dwarf2/read.c (fixup_go_packaging): Use "new".
+	(new_symbol): Use "new".
+	(read_variable): Don't call initialize_objfile_symbol.  Use
+	"new".
+	(read_func_scope): Use "new".
+	* xcoffread.c (process_xcoff_symbol): Don't call
+	initialize_objfile_symbol.
+	(SYMBOL_DUP): Remove.
+	* coffread.c (process_coff_symbol, coff_read_enum_type): Use
+	"new".
+	* symtab.h (allocate_symbol, initialize_objfile_symbol)
+	(allocate_template_symbol): Don't declare.
+	(struct symbol): Add copy constructor.  Change defaults.
+	* jit.c (finalize_symtab): Use "new".
+	* ctfread.c (ctf_add_enum_member_cb, new_symbol, ctf_add_var_cb):
+	Use "new".
+	* stabsread.c (patch_block_stabs, define_symbol, read_enum_type)
+	(common_block_end): Use "new".
+	* mdebugread.c (parse_symbol): Use "new".
+	(new_symbol): Likewise.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention changes to help and apropos.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* command.h (enum command_class): Improve comments, document
+	that class_alias is for user-defined aliases, give the class
+	name for each class, remove unused class_xdb.
+	* cli/cli-decode.c (add_com_alias): Document THECLASS intended usage.
+	* breakpoint.c (_initialize_breakpoint): Replace class_alias
+	by a precise class.
+	* infcmd.c (_initialize_infcmd): Likewise.
+	* reverse.c (_initialize_reverse): Likewise.
+	* stack.c (_initialize_stack): Likewise.
+	* symfile.c (_initialize_symfile): Likewise.
+	* tracepoint.c (_initialize_tracepoint): Likewise.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-decode.c (apropos_cmd): Produce output for aliases
+	when their aliased command is traversed.
+	(help_cmd): Add fput_command_names_styled call to
+	output command name and aliases when command has an alias.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-decode.h (help_cmd_list): Remove declaration.
+	* cli/cli-decode.c (help_cmd_list): Declare as static,
+	remove prefix argument, use bool for recurse arg, rework to show the aliases of
+	a command together with the command.
+	(fput_command_name_styled, fput_command_names_styled): New functions.
+	(print_help_for_command): Remove prefix arg, use bool for recurse arg, use
+	fput_command_name_styled.
+	(help_list, help_all): Update callers to remove prefix arg and use bool recurse.
+	* cli/cli-cmds.c (_initialize_cli_cmds): Update alias_command doc.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-setshow.h (cmd_show_list): Remove prefix argument.
+	* cli/cli-decode.c (do_show_prefix_cmd): Likewise.
+	* command.h (cmd_show_list): Likewise.
+	* dwarf2/index-cache.c (show_index_cache_command): Likewise.
+	* cli/cli-setshow.c (cmd_show_list): Use the prefix to produce the output.  Skip aliases.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* unittests/command-def-selftests.c (traverse_command_structure):
+	Verify all commands of a list have the same prefix command and
+	that only the top cmdlist commands have a null prefix.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-decode.c (lookup_cmd_for_prefix): Return the aliased command
+	as prefix, not one of its aliases.
+	(set_cmd_prefix): Remove.
+	(do_add_cmd): Centralize the setting of the prefix of a command, when
+	command is defined after its full chain of prefix commands.
+	(add_alias_cmd): Remove call to set_cmd_prefix, as do_add_cmd does it.
+	(add_setshow_cmd_full): Likewise.
+	(update_prefix_field_of_prefixed_commands): New function.
+	(add_prefix_cmd): Replace non working call to set_cmd_prefix by
+	update_prefix_field_of_prefixed_commands.
+	* gdb/remote-fileio.c (initialize_remote_fileio): Use the real
+	addresses of remote_set_cmdlist and remote_show_cmdlist given
+	as argument, not the address of an argument.
+	* gdb/remote-fileio.h (initialize_remote_fileio): Likewise.
+	* gdb/remote.c (_initialize_remote): Likewise.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-cmds.c (alias_command): Check for an existing alias
+	using lookup_cmd_composition, as valid_command_p is too strict
+	and forbids aliases that are the prefix of an existing alias
+	or command.
+	* cli/cli-decode.c (lookup_cmd_composition): Ensure a prefix
+	command is properly recognised as a valid command.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* unittests/help-doc-selftests.c: Rename to
+	unittests/command-def-selftests.c
+	* unittests/command-def-selftests.c (help_doc_tests): Update some
+	comments.
+	(command_structure_tests, traverse_command_structure): New namespace
+	and function.
+	(command_structure_invariants_tests): New function.
+	(_initialize_command_def_selftests) Renamed from
+	_initialize_help_doc_selftests, register command_structure_invariants
+	selftest.
+
+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-cmds.c (_initialize_cli_cmds): Define 'info set' as
+	an alias of 'show'.
+
+2020-05-15  Joel Brobecker  <brobecker@adacore.com>
+
+	* ada-lang.h: (ada_is_gnat_encoded_fixed_point_type): Renames
+	ada_is_fixed_point_type.  Update all callers.
+	(gnat_encoded_fixed_point_delta): Renames ada_delta.  Update
+	all callers.
+	* ada-lang.c (gnat_encoded_fixed_type_info): Renames fixed_type_info.
+	Update all callers.
+	* ada-typeprint.c (print_gnat_encoded_fixed_point_type): Renames
+	print_fixed_point_type.  Update all callers.
+	* ada-valprint.c (ada_value_print_num): Replace call to
+	ada_is_fixed_point_type by ada_is_gnat_encoded_fixed_point_type.
+
+2020-05-14  Kevin Buettner  <kevinb@redhat.com>
+
+	* nat/linux-btrace.c (btrace_this_cpu): Add check for AMD
+	processors.
+	(cpu_supports_bts): Add CV_AMD case.
+
+2020-05-14  Laurent Morichetti  <Laurent.Morichetti@amd.com>
+	    Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.c (stop_all_threads): Collect multiple wait events at
+	each pass.
+
+2020-05-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_CODE): Remove.  Change all call sites to use
+	type::code instead.
+
+2020-05-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <code, set_code>: New methods.
+	(TYPE_CODE): Use type::code.  Change all call sites used to set
+	the code to use type::set_code instead.
+
+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+	    Tom de Vries  <tdevries@suse.de>
+	    Pedro Alves  <palves@redhat.com>
+
+	PR threads/25478
+	* infrun.c (stop_all_threads): Do NOT ignore
+	TARGET_WAITKIND_NO_RESUMED, TARGET_WAITKIND_THREAD_EXITED,
+	TARGET_WAITKIND_EXITED, TARGET_WAITKIND_SIGNALLED wait statuses
+	received.
+	(handle_no_resumed): Remove code handling a live inferior with no
+	threads.
+	* remote.c (has_single_non_exited_thread): New.
+	(remote_target::update_thread_list): Do not delete a thread if is
+	the last thread of the process.
+	* thread.c (thread_select): Call delete_exited_threads instead of
+	prune_threads.
+
+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infrun.c (stop_all_threads): Enable/disable thread events of all
+	targets.  Move a debug message denoting the end of the function
+	into the SCOPED_EXIT block.
+
+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* process-stratum-target.h: Include <set>.
+	(all_non_exited_process_targets, switch_to_target_no_thread): New
+	function declarations.
+	* process-stratum-target.c (all_non_exited_process_targets)
+	(switch_to_target_no_thread): New function implementations.
+
+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infrun.c (handle_inferior_event): Extract out a piece of code
+	into...
+	(mark_non_executing_threads): ...this new function.
+
+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infrun.c (resume_1): Move a 'regcache_read_pc' call down to first
+	use.
+
+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* regcache.c (regcache_read_pc_protected): New function
+	implementation that returns 0 if the PC cannot read via
+	'regcache_read_pc'.
+	* infrun.c (proceed): Call 'regcache_read_pc_protected'
+	instead of 'regcache_read_pc'.
+	(keep_going_pass_signal): Ditto.
+
+2020-05-13  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (align_value): Remove.
+	(ada_template_to_fixed_record_type_1): Use align_up.
+
+2020-05-13  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* async-event.c: Update the copyright year.
+	* async-event.h: Update the copyright year.
+
+2020-05-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* objfiles.h (is_addr_in_objfile,
+	shared_objfile_contains_address_p): Return bool.
+	* objfile.c (is_addr_in_objfile,
+	shared_objfile_contains_address_p): Return bool.
+
+2020-05-11  Tom Tromey  <tromey@adacore.com>
+
+	* cli/cli-cmds.c (info_command): Restore.
+	(_initialize_cli_cmds): Use add_prefix_command for "info".
+	* gdb-gdb.gdb.in: Restore breakpoint on info_command.
+
+2020-05-11  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_value_primitive_field): Now public.
+	* ada-lang.h (ada_value_primitive_field): Declare.
+	* ada-valprint.c (print_field_values): Use
+	ada_value_primitive_field for wrapper fields.
+
+2020-05-11  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/index-write.c (debug_names::psymbol_tag): Handle
+	MODULE_DOMAIN.
+
+2020-05-11  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25941
+	* dwarf2/read.c (create_cus_from_debug_names_list): Initialize CUs
+	with length 0, if not gdb-produced.
+	(cutu_reader::cutu_reader): Set CU length to actual length if 0.
+
+2020-05-09  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/25955
+	* break-catch-throw.c (check_status_exception_catchpoint): Fix name
+	calculation.
+
+2020-05-09  Tom Tromey  <tom@tromey.com>
+
+	* top.c (server_command): Now bool.
+	* top.h (server_command): Now bool.
+
+2020-05-08  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (read_lexical_block_scope): Don't process a DIE
+	already being processed.
+
+2020-05-08  Tom Tromey  <tom@tromey.com>
+
+	* printcmd.c (struct display) <next>: Remove.
+	<display>: New constructor.
+	<exp_string>: Now a std::string.
+	<enabled_p>: Now a bool.
+	(display_number): Move definition earlier.
+	(displays): Rename from display_chain.  Now a std::vector.
+	(ALL_DISPLAYS, ALL_DISPLAYS_SAFE): Remove.
+	(display_command): Update.
+	(do_one_display, disable_display)
+	(enable_disable_display_command, do_enable_disable_display):
+	Update.
+	(free_display): Remove.
+	(clear_displays): Rewrite.
+	(delete_display): Update.
+	(map_display_numbers): Use function_view.  Remove "data"
+	parameter.  Update.
+	(do_delete_display): Remove.
+	(undisplay_command): Update.
+	(do_one_display, do_displays, disable_display)
+	(info_display_command): Update.
+	(do_enable_disable_display): Remove.
+	(enable_disable_display_command)
+	(clear_dangling_display_expressions): Update.
+
+2020-05-08  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (set_symbol_cache_size)
+	(maintenance_print_symbol_cache, maintenance_flush_symbol_cache)
+	(maintenance_print_symbol_cache_statistics): Update.
+	* symmisc.c (print_symbol_bcache_statistics)
+	(print_objfile_statistics, maintenance_print_objfiles)
+	(maintenance_info_symtabs, maintenance_check_symtabs)
+	(maintenance_expand_symtabs, maintenance_info_line_tables):
+	Update.
+	* symfile-debug.c (set_debug_symfile): Update.
+	* source.c (forget_cached_source_info): Update.
+	* python/python.c (gdbpy_progspaces): Update.
+	* psymtab.c (maintenance_info_psymtabs): Update.
+	* probe.c (parse_probes): Update.
+	* linespec.c (iterate_over_all_matching_symtabs)
+	(collect_symtabs_from_filename, search_minsyms_for_name): Update.
+	* guile/scm-progspace.c (gdbscm_progspaces): Update.
+	* exec.c (exec_target::close): Update.
+	* ada-tasks.c (ada_tasks_new_objfile_observer): Update.
+	* breakpoint.c (print_one_breakpoint_location)
+	(create_longjmp_master_breakpoint)
+	(create_std_terminate_master_breakpoint): Update.
+	* progspace.c (program_spaces): Now a std::vector.
+	(maybe_new_address_space): Update.
+	(add_program_space): Remove.
+	(program_space::program_space): Update.
+	(remove_program_space): Update.
+	(number_of_program_spaces): Remove.
+	(print_program_space, update_address_spaces): Update.
+	* progspace.h (program_spaces): Change type.
+	(ALL_PSPACES): Remove.
+	(number_of_program_spaces): Don't declare.
+	(struct program_space) <next>: Remove.
+
+2020-05-08  Tom Tromey  <tom@tromey.com>
+
+	* mi/mi-cmd-file.c (mi_cmd_file_list_shared_libraries): Update.
+	* solib-svr4.c (svr4_fetch_objfile_link_map): Update.
+	(enable_break): Update.
+	* solib-frv.c (frv_fdpic_find_global_pointer): Update.
+	(frv_fdpic_find_canonical_descriptor): Update.
+	(frv_fetch_objfile_link_map): Update.
+	* progspace.c (program_space::free_all_objfiles): Update.
+	(program_space::solibs): New method.
+	* progspace.h (struct program_space) <solibs>: New method.
+	* solist.h (master_so_list): Don't declare.
+	(ALL_SO_LIBS): Remove.
+	* solib.h (so_list_head): Remove.
+	(update_solib_list): Update comment.
+	* solib.c (master_so_list): Remove.
+	(solib_used, update_solib_list, solib_add)
+	(info_sharedlibrary_command, clear_solib)
+	(reload_shared_libraries_1, remove_user_added_objfile): Update.
+
+2020-05-08  Tom Tromey  <tom@tromey.com>
+
+	* extension.c (extension_languages): Now a std::array.
+	(ALL_EXTENSION_LANGUAGES): Remove.
+	(get_ext_lang_defn, get_ext_lang_of_file)
+	(eval_ext_lang_from_control_command): Update.
+	(finish_ext_lang_initialization)
+	(auto_load_ext_lang_scripts_for_objfile)
+	(ext_lang_type_printers::ext_lang_type_printers)
+	(apply_ext_lang_type_printers)
+	(ext_lang_type_printers::~ext_lang_type_printers)
+	(apply_ext_lang_val_pretty_printer, apply_ext_lang_frame_filter)
+	(preserve_ext_lang_values, get_breakpoint_cond_ext_lang)
+	(breakpoint_ext_lang_cond_says_stop, check_quit_flag)
+	(get_matching_xmethod_workers, ext_lang_colorize)
+	(ext_lang_before_prompt): Update.
+	(ALL_ENABLED_EXTENSION_LANGUAGES): Remove.
+
+2020-05-08  Tom Tromey  <tom@tromey.com>
+
+	* symtab.h (class demangle_result_storage) <set_malloc_ptr>: New
+	overload.
+	<swap_string, m_string>: Remove.
+	* symtab.c (demangle_for_lookup, completion_list_add_symbol):
+	Update.
+	* stabsread.c (define_symbol, read_type): Update.
+	* linespec.c (find_linespec_symbols): Update.
+	* gnu-v3-abi.c (gnuv3_get_typeid): Update.
+	* dwarf2/read.c (dwarf2_canonicalize_name): Update.
+	* dbxread.c (read_dbx_symtab): Update.
+	* cp-support.h (cp_canonicalize_string_full)
+	(cp_canonicalize_string, cp_canonicalize_string_no_typedefs):
+	Return unique_xmalloc_ptr.
+	* cp-support.c (inspect_type): Update.
+	(cp_canonicalize_string_full): Return unique_xmalloc_ptr.
+	(cp_canonicalize_string_no_typedefs, cp_canonicalize_string):
+	Likewise.
+	* c-typeprint.c (print_name_maybe_canonical): Update.
+	* break-catch-throw.c (check_status_exception_catchpoint):
+	Update.
+
+2020-05-08  Tom de Vries  <tdevries@suse.de>
+
+	* infrun.c (follow_fork): Copy current_line and current_symtab to
+	child thread.
+
+2020-05-07  Simon Marchi  <simon.marchi@efficios.com>
+
+	* async-event.c (struct async_signal_handler, struct
+	async_event_handler): Reformat, remove typedef.
+
+2020-05-07  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_DYN_PROP_LIST): Remove.  Update all users
+	access thistype->main_type->dyn_prop_list directly.
+
+2020-05-07  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <remove_dyn_prop>: New method.
+	(remove_dyn_prop): Remove.  Update all users to use
+	type::remove_dyn_prop.
+	* gdbtypes.c (remove_dyn_prop): Rename to...
+	(type::remove_dyn_prop): ... this.
+
+2020-05-07  Simon Marchi via Gdb-patches  <gdb-patches@sourceware.org>
+
+	* gdbtypes.h (struct type) <add_dyn_prop>: New method.
+	(add_dyn_prop): Remove.  Update all users to use
+	type::add_dyn_prop.
+	* gdbtypes.c (add_dyn_prop): Rename to...
+	(type::add_dyn_prop): ... this.
+
+2020-05-07  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct type) <get_dyn_prop>: New method.
+	(get_dyn_prop): Remove.  Update all users to use
+	type::dyn_prop.
+	* gdbtypes.c (get_dyn_prop): Rename to...
+	(type::dyn_prop): ... this.
+
+2020-05-06  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct main_type) <flag_static>: Remove.
+
+2020-05-06  Simon Marchi  <simon.marchi@efficios.com>
+
+	* amd64-tdep.c (amd64_analyze_prologue): Check for `endbr64`
+	instruction, skip it if it's there.
+
+2020-05-05  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (struct main_type) <flag_incomplete>: Remove.
+
+2020-05-04  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbtypes.h (TYPE_INCOMPLETE): Remove.
+	* gdbtypes.c (recursive_dump_type): Remove use of
+	TYPE_INCOMPLETE.
+
+2020-05-03  Tom Tromey  <tom@tromey.com>
+
+	* breakpoint.c (catch_command, tcatch_command): Remove.
+	(_initialize_breakpoint): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	(set_breakpoint_cmd, show_breakpoint_cmd): Remove
+	* utils.c (set_internal_problem_cmd, show_internal_problem_cmd):
+	Remove.
+	(add_internal_problem_command): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* mips-tdep.c (set_mipsfpu_command): Remove.
+	(_initialize_mips_tdep): Use add_basic_prefix_cmd.
+	* dwarf2/index-cache.c (set_index_cache_command): Remove.
+	(_initialize_index_cache): Use add_basic_prefix_cmd.
+	* memattr.c (dummy_cmd): Remove.
+	(_initialize_mem): Use add_basic_prefix_cmd, add_show_prefix_cmd.
+	* tui/tui-win.c (set_tui_cmd, show_tui_cmd): Remove.
+	(_initialize_tui_win): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* cli/cli-logging.c (set_logging_command): Remove.
+	(_initialize_cli_logging): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	(show_logging_command): Remove.
+	* target.c (target_command): Remove.
+	(add_target): Use add_basic_prefix_cmd.
+
+2020-05-02  Hannes Domani  <ssbssa@yahoo.de>
+
+	* gdbtypes.h (enum dynamic_prop_node_kind): Fix typo.
+
+2020-05-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* gdb-gdb.gdb-in: Remove breakpoint on disappeared function
+	info_command.
+
+2020-04-30  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c (nbsd_enable_proc_events)
+	(nbsd_nat_target::post_startup_inferior): Add.
+	(nbsd_nat_target::post_attach): Call `nbsd_enable_proc_events'.
+	(nbsd_nat_target::update_thread_list): Rewrite.
+	(nbsd_nat_target::wait): Handle "PTRACE_LWP_EXIT" and
+	"PTRACE_LWP_CREATE".
+	* nbsd-nat.h (nbsd_nat_target::post_startup_inferior): Add.
+
+2020-04-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* stack.c (_initialize_stack): Remove duplicated creation
+	of "frame" command and "f" alias.
+
+2020-04-30  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR gdb/18706
+	* gdbtypes.c (check_typedef): Calculate size of array of
+	stubbed type.
+
+2020-04-30  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR gdb/15559
+	* i386-tdep.c (i386_push_dummy_call): Call
+	i386_thiscall_push_dummy_call.
+	(i386_thiscall_push_dummy_call): New function.
+	* i386-tdep.h (i386_thiscall_push_dummy_call): Declare.
+	* i386-windows-tdep.c (i386_windows_push_dummy_call): New function.
+	(i386_windows_init_abi): Call set_gdbarch_push_dummy_call.
+
+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh (do_read): Add shellcheck disable directive for
+	warning SC2162.
+
+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh: Use ${foo:-} where shellcheck would report a
+	"referenced but not assigned" warning.
+
+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh: Remove code that sets fallbackdefault.
+
+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh: Use shell operators && and || instead of
+	-a and -o.
+
+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh: Use $(...) instead of `...`.
+
+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh: Use double quotes around variables.
+
+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh: Use %s with printf, instead of variables in the
+	format string.
+
+2020-04-29  Tom Tromey  <tromey@adacore.com>
+
+	PR ada/25875:
+	* dwarf2/read.c (update_enumeration_type_from_children): Compute
+	type fields here.
+	(read_enumeration_type): Call
+	update_enumeration_type_from_children later.  Update comments.
+	(process_enumeration_scope): Don't create type fields.
+
+2020-04-29  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-tdep.c: Include "xml-syscall.h".
+	(nbsd_init_abi): Call `set_xml_syscall_file_name'.
+
+2020-04-29  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c: Include "sys/wait.h".
+	(nbsd_resume, nbsd_nat_target::resume, nbsd_wait)
+	(nbsd_nat_target::wait, nbsd_nat_target::insert_exec_catchpoint)
+	(nbsd_nat_target::remove_exec_catchpoint)
+	(nbsd_nat_target::set_syscall_catchpoint): Add.
+	* nbsd-nat.h (nbsd_nat_target::resume, nbsd_nat_target::wait)
+	(nbsd_nat_target::insert_exec_catchpoint)
+	(nbsd_nat_target::remove_exec_catchpoint)
+	(nbsd_nat_target::set_syscall_catchpoint): Add.
+	* nbsd-tdep.c (nbsd_get_syscall_number): Add.
+	(nbsd_init_abi): Call `set_gdbarch_get_syscall_number' and pass
+	`nbsd_get_syscall_number'.
+
+2020-04-29  Tom Tromey  <tom@tromey.com>
+
+	* stack.c (print_block_frame_labels): Remove.
+
+2020-04-29  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR gdb/17320
+	* ada-valprint.c (val_print_packed_array_elements): Move array
+	end bracket to new line.
+	(ada_val_print_string): Remove extra spaces before first array
+	element.
+	* c-valprint.c (c_value_print_array): Likewise.
+	* m2-valprint.c (m2_print_array_contents): Likewise.
+	(m2_value_print_inner): Likewise.
+	* p-valprint.c (pascal_value_print_inner): Likewise.
+	* valprint.c (generic_val_print_array): Likewise.
+	(value_print_array_elements): Move first array element and array
+	end bracket to new line.
+
+2020-04-29  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25889
+	* linespec.c (find_method): Fix ix calculation.
+
+2020-04-28  Kamil Rytarowski  <n54@gmx.com>
+
+	* syscalls/update-netbsd.sh: New file.
+	* syscalls/netbsd.xml: Regenerate.
+	* data-directory/Makefile.in: Register `netbsd.xml' in
+	`SYSCALLS_FILES'.
+
+2020-04-28  Simon Marchi  <simon.marchi@efficios.com>
+
+	* syscalls/update-freebsd.sh: Add double quotes.
+
+2020-04-28  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Update.
+	* python/py-cmd.c (gdbpy_initialize_commands): Add COMMAND_TUI.
+	(cmdpy_init): Allow class_tui.
+
+2020-04-28 Mark Williams <mark@myosotissp.com>
+
+	PR gdb/24480
+	* dwarf2read.c: Add missing assingments to list_in_scope when
+	start_symtab was already called.
+
+2020-04-28  Simon Marchi  <simon.marchi@efficios.com>
+
+	PR gdb/25881
+	* dwarf2/read.c (offset_map_type): Use
+	gdb:hash_enum<sect_offset> as hash function.
+
+2020-04-28  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/read.c (process_structure_scope): Add symbol for struct decl
+	with DW_AT_signature.
+
+2020-04-27  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure.ac: Remove check for fs_base/gs_base in
+	user_regs_struct.
+	* configure: Re-generate.
+	* config.in: Re-generate.
+	* amd64-nat.c (amd64_native_gregset_reg_offset): Adjust.
+	* amd64-linux-nat.c (amd64_linux_nat_target::fetch_registers,
+	amd64_linux_nat_target::store_registers, ps_get_thread_area, ): Adjust.
+
+2020-04-27  Luis Machado  <luis.machado@linaro.org>
+
+	* dwarf2/frame-tailcall.c (dwarf2_tailcall_sniffer_first): Handle
+	problematic inline frame unwinding situation.
+	* frame.c (frame_id_computed_p): New function.
+	* frame.h (frame_id_computed_p): New prototype.
+
+2020-04-26  Tom Tromey  <tom@tromey.com>
+
+	* command.h (enum command_class) <class_pseudo>: Remove.
+
+2020-04-26  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* cli/cli-decode.c (lookup_cmd_composition): Fix comments
+	and whitespace.
+
+2020-04-25  Kamil Rytarowski  <n54@gmx.com>
+
+	* inf-ptrace.c (inf_ptrace_target::wait): Remove
+	`PT_GET_PROCESS_STATE' block.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	* symtab.h (symbol_get_demangled_name): Don't declare.
+	* symtab.c (symbol_get_demangled_name): Remove.
+	(general_symbol_info::natural_name)
+	(general_symbol_info::demangled_name): Update.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	PR rust/25025:
+	* dwarf2/read.c (dwarf2_physname): Do not demangle for Rust.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	PR symtab/12707:
+	* dwarf2/read.c (add_partial_symbol): Use the linkage name if it
+	exists.
+	(new_symbol): Likewise.
+	* compile/compile-object-load.c (get_out_value_type): Use
+	symbol_matches_search_name.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (add_partial_symbol): Do not call
+	compute_and_set_names.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (add_partial_symbol): Use new add_psymbol_to_list
+	overload.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.c (add_psymbol_to_bcache): Simplify calling convention.
+	(add_psymbol_to_list): New overload.  Make old overload call new
+	one.
+	* psympriv.h (add_psymbol_to_list): New overload.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (partial_die_info::read) <case
+	DW_AT_linkage_name>: Use value_as_string.
+	(dwarf2_string_attr): Use value_as_string.
+	* dwarf2/attribute.h (struct attribute) <value_as_string>: Declare
+	method.
+	* dwarf2/attribute.c (attribute::value_as_string): New method.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (general_symbol_info::natural_name)
+	(general_symbol_info::demangled_name): Check for language_rust.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dw2_linkage_name): Move Rust "{" hack here...
+	(dwarf2_physname): ... from here.
+	(partial_die_info::read): Add Rust "{" hack.
+
+2020-04-24  Tom Tromey  <tom@tromey.com>
+
+	* symtab.h (struct general_symbol_info) <set_demangled_name>: New
+	method.
+	(symbol_set_demangled_name): Don't declare.
+	* symtab.c (general_symbol_info::set_demangled_name): Rename from
+	symbol_set_demangled_name.
+	(general_symbol_info::set_language)
+	(general_symbol_info::compute_and_set_names): Update.
+	* minsyms.c (minimal_symbol_reader::install): Update.
+	* dwarf2/read.c (new_symbol): Update.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	PR python/23662:
+	* python/py-type.c (convert_field): Handle
+	FIELD_LOC_KIND_DWARF_BLOCK.
+	(typy_get_sizeof): Handle TYPE_HAS_DYNAMIC_LENGTH.
+	(typy_get_dynamic): Nw function.
+	(type_object_getset): Add "dynamic".
+	* NEWS: Add entry.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* ada-typeprint.c (print_choices, print_variant_part)
+	(print_record_field_types_dynamic): New functions.
+	(print_record_field_types): Use print_record_field_types_dynamic.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (handle_data_member_location): New overload.
+	(dwarf2_add_field): Use it.
+	(decode_locdesc): Add "computed" parameter.  Update comment.
+	* gdbtypes.c (is_dynamic_type_internal): Also look for
+	FIELD_LOC_KIND_DWARF_BLOCK.
+	(resolve_dynamic_struct): Handle FIELD_LOC_KIND_DWARF_BLOCK.
+	* gdbtypes.c (is_dynamic_type_internal): Add special case for C++
+	virtual base classes.
+	* gnu-v3-abi.c (gnuv3_baseclass_offset): Handle
+	FIELD_LOC_KIND_DWARF_BLOCK.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (read_structure_type): Handle dynamic length.
+	* gdbtypes.c (is_dynamic_type_internal): Check
+	TYPE_HAS_DYNAMIC_LENGTH.
+	(resolve_dynamic_type_internal): Use TYPE_DYNAMIC_LENGTH.
+	* gdbtypes.h (TYPE_HAS_DYNAMIC_LENGTH, TYPE_DYNAMIC_LENGTH):
+	New macros.
+	(enum dynamic_prop_node_kind) <DYN_PROP_BYTE_SIZE>: New
+	constant.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (struct variant_field): Rewrite.
+	(struct variant_part_builder): New.
+	(struct nextfield): Remove "variant" field.  Add "offset".
+	(struct field_info): Add "current_variant_part" and
+	"variant_parts".
+	(alloc_discriminant_info): Remove.
+	(alloc_rust_variant): New function.
+	(quirk_rust_enum): Update.
+	(dwarf2_add_field): Set "offset" member.  Don't handle
+	DW_TAG_variant_part.
+	(offset_map_type): New typedef.
+	(convert_variant_range, create_one_variant)
+	(create_one_variant_part, create_variant_parts)
+	(add_variant_property): New functions.
+	(dwarf2_attach_fields_to_type): Call add_variant_property.
+	(read_structure_type): Don't handle DW_TAG_variant_part.
+	(handle_variant_part, handle_variant): New functions.
+	(handle_struct_member_die): Use them.
+	(process_structure_scope): Don't handle variant parts.
+	* gdbtypes.h (TYPE_FLAG_DISCRIMINATED_UNION): Remove.
+	(struct discriminant_info): Remove.
+	(enum dynamic_prop_node_kind) <DYN_PROP_DISCRIMINATED>: Remove.
+	(struct main_type) <flag_discriminated_union>: Remove.
+	* rust-lang.c (rust_enum_p, rust_empty_enum_p): Rewrite.
+	(rust_enum_variant): Return int.  Remove "contents".  Rewrite.
+	(rust_print_enum, rust_print_struct_def, rust_evaluate_subexp):
+	Update.
+	* valops.c (value_union_variant): Remove.
+	* value.h (value_union_variant): Don't declare.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (ada_discrete_type_high_bound, ada_discrete_type_low)
+	(ada_value_primitive_packed_val): Update.
+	* ada-valprint.c (ada_value_print_1): Update.
+	* dwarf2/loc.c (evaluate_for_locexpr_baton): New struct.
+	(dwarf2_locexpr_baton_eval): Take a property_addr_info rather than
+	just an address.  Use evaluate_for_locexpr_baton.
+	(dwarf2_evaluate_property): Update.
+	* dwarf2/loc.h (struct property_addr_info) <valaddr>: Now an
+	array_view.
+	* findvar.c (default_read_var_value): Update.
+	* gdbtypes.c (compute_variant_fields_inner)
+	(resolve_dynamic_type_internal): Update.
+	(resolve_dynamic_type): Change type of valaddr parameter.
+	* gdbtypes.h (resolve_dynamic_type): Update.
+	* valarith.c (value_subscripted_rvalue): Update.
+	* value.c (value_from_contents_and_address): Update.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/loc.c (dwarf2_locexpr_baton_eval): Add
+	"push_initial_value" parameter.
+	(dwarf2_evaluate_property): Likewise.
+	* dwarf2/loc.h (dwarf2_evaluate_property): Update.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* gdbtypes.c (is_dynamic_type_internal): Check for variant parts.
+	(variant::matches, compute_variant_fields_recurse)
+	(compute_variant_fields_inner, compute_variant_fields): New
+	functions.
+	(resolve_dynamic_struct): Check for DYN_PROP_VARIANT_PARTS.
+	Use resolved_type after type is made.
+	(operator==): Add new cases.
+	* gdbtypes.h (TYPE_HAS_VARIANT_PARTS): New macro.
+	(struct discriminant_range, struct variant, struct variant_part):
+	New.
+	(union dynamic_prop_data) <variant_parts, original_type>: New
+	members.
+	(enum dynamic_prop_node_kind) <DYN_PROP_VARIANT_PARTS>: New constant.
+	(enum dynamic_prop_kind) <PROP_TYPE, PROP_VARIANT_PARTS>: New
+	constants.
+	* value.c (unpack_bits_as_long): Now public.
+	* value.h (unpack_bits_as_long): Declare.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* rs6000-tdep.c (struct ppc_variant): Rename from "variant".
+	(variants, find_variant_by_arch, rs6000_gdbarch_init): Update.
+
+2020-04-24  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-tdep.c (exception_values): Add WOW64 exception numbers.
+
+2020-04-24  Kamil Rytarowski  <n54@gmx.com>
+
+	* inf-ptrace.h (follow_fork, insert_fork_catchpoint)
+	(remove_fork_catchpoint, post_startup_inferior)
+	(post_attach): Move...
+	* obsd-nat.h (follow_fork, insert_fork_catchpoint)
+	(remove_fork_catchpoint, post_startup_inferior)
+	(post_attach): ...here.
+	* inf-ptrace.c (follow_fork, insert_fork_catchpoint)
+	(remove_fork_catchpoint, post_startup_inferior)
+	(post_attach): Move...
+	* obsd-nat.c (follow_fork, insert_fork_catchpoint)
+	(remove_fork_catchpoint, post_startup_inferior)
+	(post_attach): ...here.
+
+2020-04-24  Tom Tromey  <tromey@adacore.com>
+
+	* nat/windows-nat.h (struct windows_thread_info)
+	<pc_adjusted>: New member.
+	* windows-nat.c (windows_fetch_one_register): Check
+	pc_adjusted.
+	(windows_nat_target::get_windows_debug_event)
+	(windows_nat_target::wait): Set pc_adjusted.
+
+2020-04-24  Tom de Vries  <tdevries@suse.de>
+
+	* contrib/cc-with-tweaks.sh: Remove <exec>.gdb-index file handling.
+	Run gdb-add-index inside temp dir.
+
+2020-04-23  Tom Tromey  <tromey@adacore.com>
+
+	* windows-tdep.c (is_linked_with_cygwin_dll): Always update "iter"
+	in loop.
+
+2020-04-23  Luis Machado  <luis.machado@linaro.org>
+
+	* dwarf2/frame-tailcall.c (dwarf2_tailcall_sniffer_first): Use
+	get_frame_register instead of gdbarch_unwind_pc.
+
+2020-04-23  Tom de Vries  <tdevries@suse.de>
+
+	* symtab.c (lookup_global_symbol): Prefer def over decl.
+
+2020-04-23  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25807
+	* block.c (best_symbol, better_symbol): Promote to external.
+	* block.h (best_symbol, better_symbol): Declare.
+	* symtab.c (lookup_symbol_in_objfile_symtabs): Prefer def over
+	decl.
+
+2020-04-23  Tom Tromey  <tromey@adacore.com>
+
+	PR ada/25837:
+	* dwarf2/read.c (dw2_expand_symtabs_matching_symbol): Store a
+	"const char *", not a "const std::string &".
+	<name_and_matcher::operator==>: Update.
+	* unittests/lookup_name_info-selftests.c: Change type of
+	"result".
+
+2020-04-23  Tom Tromey  <tom@tromey.com>
+
+	* inferior.h (iterate_over_inferiors): Don't declare.
+	* inferior.c (iterate_over_inferiors): Remove.
+	* darwin-nat.c (find_inferior_task_it, find_inferior_pid_it):
+	Remove.
+	(darwin_find_inferior_by_task, darwin_find_inferior_by_pid): Don't
+	use iterate_over_inferiors.
+	(darwin_resume_inferior_it)
+	(struct resume_inferior_threads_param)
+	(darwin_resume_inferior_threads_it): Remove.
+	(darwin_nat_target::resume): Don't use iterate_over_inferiors.
+
+2020-04-23  Tom de Vries  <tdevries@suse.de>
+
+	* blockframe.c (find_pc_partial_function): Use
+	find_pc_sect_compunit_symtab rather than
+	objfile->sf->qf->find_pc_sect_compunit_symtab.
+
+2020-04-22  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25764
+	* dwarf2/read.c (scan_partial_symbols): Allow external variable decls
+	in psymtabs.
+
+2020-04-22  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25801
+	* psymtab.c (psym_map_symtabs_matching_filename): Don't skip shared
+	symtabs.
+
+2020-04-22  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25700
+	* dwarf2/read.c (dwarf2_build_psymtabs_hard): Don't create psymtab for
+	CU if already created.
+
+2020-04-21  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infrun.c (displaced_step_fixup): Switch to the event_thread
+	before calling displaced_step_restore, not after.
+
+2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* record-btrace.c (record_btrace_enable_warn): Ignore thread if
+	its inferior is not recorded by us.
+	(record_btrace_target_open): Replace call to
+	all_non_exited_threads () with call to current_inferior
+	()->non_exited_threads ().
+	(record_btrace_target::stop_recording): Likewise.
+	(record_btrace_target::close): Likewise.
+	(record_btrace_target::wait): Likewise.
+	(record_btrace_target::record_stop_replaying): Likewise.
+
+2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* btrace.c (btrace_enable): Throw an error on double enables and
+	when enabling recording fails.
+	(btrace_disable): Throw an error if the thread is not recorded.
+
+2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>
+
+	* record-btrace.c (record_btrace_target::fetch_registers): Forward
+	request if we do not have a thread_info.
+
+2020-04-21  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/25471
+	* thread.c
+	(scoped_restore_current_thread::scoped_restore_current_thread): Catch
+	exception in get_frame_id.
+
+2020-04-20  Tom Tromey  <tromey@adacore.com>
+
+	* python/python.c (struct gdbpy_event): Mark move constructor as
+	noexcept.
+	* python/py-tui.c (class gdbpy_tui_window_maker): Mark move
+	constructor as noexcept.
+	* completer.h (struct completion_result): Mark move constructor as
+	noexcept.
+	* completer.c (completion_result::completion_result): Use
+	initialization style.  Don't call reset_match_list.
+
+2020-04-20  Mihails Strasuns  <mihails.strasuns@intel.com>
+
+	* MAINTAINERS (Write After Approval): Add myself.
+
+2020-04-18  Tom Tromey  <tom@tromey.com>
+
+	* windows-tdep.c (init_w32_command_list)
+	(w32_prefix_command_valid): Restore.
+	(_initialize_windows_tdep): Call init_w32_command_list.
+
+2020-04-18  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (enter_line_range, scan_xcoff_symtab): Update.
+	* value.c (value_fn_field): Update.
+	* valops.c (find_function_in_inferior)
+	(value_allocate_space_in_inferior): Update.
+	* tui/tui-winsource.c (tui_update_source_windows_with_line):
+	Update.
+	* tui/tui-source.c (tui_source_window::set_contents): Update.
+	* symtab.c (lookup_global_or_static_symbol)
+	(find_function_start_sal_1, skip_prologue_sal)
+	(print_msymbol_info, find_gnu_ifunc, symbol_arch): Update.
+	* symmisc.c (dump_msymbols, dump_symtab_1)
+	(maintenance_print_one_line_table): Update.
+	* symfile.c (init_entry_point_info, section_is_mapped)
+	(list_overlays_command, simple_read_overlay_table)
+	(simple_overlay_update_1): Update.
+	* stap-probe.c (handle_stap_probe): Update.
+	* stabsread.c (dbx_init_float_type, define_symbol)
+	(read_one_struct_field, read_enum_type, read_range_type): Update.
+	* source.c (info_line_command): Update.
+	* python/python.c (gdbpy_source_objfile_script)
+	(gdbpy_execute_objfile_script): Update.
+	* python/py-type.c (save_objfile_types): Update.
+	* python/py-objfile.c (py_free_objfile): Update.
+	* python/py-inferior.c (python_new_objfile): Update.
+	* psymtab.c (psym_find_pc_sect_compunit_symtab, dump_psymtab)
+	(dump_psymtab_addrmap_1, maintenance_info_psymtabs)
+	(maintenance_check_psymtabs): Update.
+	* printcmd.c (info_address_command): Update.
+	* objfiles.h (struct objfile) <arch>: New method, from
+	get_objfile_arch.
+	(get_objfile_arch): Don't declare.
+	* objfiles.c (get_objfile_arch): Remove.
+	(filter_overlapping_sections): Update.
+	* minsyms.c (msymbol_is_function): Update.
+	* mi/mi-symbol-cmds.c (mi_cmd_symbol_list_lines)
+	(output_nondebug_symbol): Update.
+	* mdebugread.c (parse_symbol, basic_type, parse_partial_symbols)
+	(mdebug_expand_psymtab): Update.
+	* machoread.c (macho_add_oso_symfile): Update.
+	* linux-tdep.c (linux_infcall_mmap, linux_infcall_munmap):
+	Update.
+	* linux-fork.c (checkpoint_command): Update.
+	* linespec.c (convert_linespec_to_sals): Update.
+	* jit.c (finalize_symtab): Update.
+	* infrun.c (insert_exception_resume_from_probe): Update.
+	* ia64-tdep.c (ia64_find_unwind_table): Update.
+	* hppa-tdep.c (internalize_unwinds): Update.
+	* gdbtypes.c (get_type_arch, init_float_type, objfile_type):
+	Update.
+	* gcore.c (call_target_sbrk): Update.
+	* elfread.c (record_minimal_symbol, elf_symtab_read)
+	(elf_rel_plt_read, elf_gnu_ifunc_record_cache)
+	(elf_gnu_ifunc_resolve_by_got): Update.
+	* dwarf2/read.c (create_addrmap_from_index)
+	(create_addrmap_from_aranges, dw2_find_pc_sect_compunit_symtab)
+	(read_debug_names_from_section)
+	(process_psymtab_comp_unit_reader, add_partial_symbol)
+	(add_partial_subprogram, process_full_comp_unit)
+	(read_file_scope, read_func_scope, read_lexical_block_scope)
+	(read_call_site_scope, dwarf2_ranges_read)
+	(dwarf2_record_block_ranges, dwarf2_add_field)
+	(mark_common_block_symbol_computed, read_tag_pointer_type)
+	(read_tag_string_type, dwarf2_init_float_type)
+	(dwarf2_init_complex_target_type, read_base_type)
+	(partial_die_info::read, partial_die_info::read)
+	(read_attribute_value, dwarf_decode_lines_1, new_symbol)
+	(dwarf2_fetch_die_loc_sect_off): Update.
+	* dwarf2/loc.c (dwarf2_find_location_expression)
+	(class dwarf_evaluate_loc_desc, rw_pieced_value)
+	(dwarf2_evaluate_loc_desc_full, dwarf2_locexpr_baton_eval)
+	(dwarf2_loc_desc_get_symbol_read_needs)
+	(locexpr_describe_location_piece, locexpr_describe_location_1)
+	(loclist_describe_location): Update.
+	* dwarf2/index-write.c (write_debug_names): Update.
+	* dwarf2/frame.c (dwarf2_build_frame_info): Update.
+	* dtrace-probe.c (dtrace_process_dof): Update.
+	* dbxread.c (read_dbx_symtab, dbx_end_psymtab)
+	(process_one_symbol): Update.
+	* ctfread.c (ctf_init_float_type, read_base_type): Update.
+	* coffread.c (coff_symtab_read, enter_linenos, decode_base_type)
+	(coff_read_enum_type): Update.
+	* cli/cli-cmds.c (edit_command, list_command): Update.
+	* buildsym.c (buildsym_compunit::finish_block_internal): Update.
+	* breakpoint.c (create_overlay_event_breakpoint)
+	(create_longjmp_master_breakpoint)
+	(create_std_terminate_master_breakpoint)
+	(create_exception_master_breakpoint, get_sal_arch): Update.
+	* block.c (block_gdbarch): Update.
+	* annotate.c (annotate_source_line): Update.
+
+2020-04-17  Tom Tromey  <tromey@adacore.com>
+
+	* auto-load.c (show_auto_load_cmd): Remove.
+	(auto_load_show_cmdlist_get): Use add_show_prefix_cmd.
+	* arc-tdep.c (_initialize_arc_tdep): Use add_show_prefix_cmd.
+	(maintenance_print_arc_command): Remove.
+	* tui/tui-win.c (tui_command): Remove.
+	(tui_get_cmd_list): Use add_basic_prefix_cmd.
+	* tui/tui-layout.c (tui_layout_command): Remove.
+	(_initialize_tui_layout): Use add_basic_prefix_cmd.
+	* python/python.c (user_set_python, user_show_python): Remove.
+	(_initialize_python): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* guile/guile.c (set_guile_command, show_guile_command): Remove.
+	(install_gdb_commands): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	(info_guile_command): Remove.
+	* dwarf2/read.c (set_dwarf_cmd, show_dwarf_cmd): Remove.
+	(_initialize_dwarf2_read): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* cli/cli-style.h (class cli_style_option) <add_setshow_commands>:
+	Remove do_set and do_show parameters.
+	* cli/cli-style.c (set_style, show_style): Remove.
+	(_initialize_cli_style): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	(cli_style_option::add_setshow_commands): Remove do_set and
+	do_show parameters.
+	(cli_style_option::add_setshow_commands): Use
+	add_basic_prefix_cmd, add_show_prefix_cmd.
+	(STYLE_ADD_SETSHOW_COMMANDS): Remove macro.
+	(set_style_name): Remove.
+	* cli/cli-dump.c (dump_command, append_command): Remove.
+	(srec_dump_command, ihex_dump_command, verilog_dump_command)
+	(tekhex_dump_command, binary_dump_command)
+	(binary_append_command): Remove.
+	(_initialize_cli_dump): Use add_basic_prefix_cmd.
+	* windows-tdep.c (w32_prefix_command_valid): Remove global.
+	(init_w32_command_list): Remove; move into ...
+	(_initialize_windows_tdep): ... here.  Use add_basic_prefix_cmd.
+	* valprint.c (set_print, show_print, set_print_raw)
+	(show_print_raw): Remove.
+	(_initialize_valprint): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* typeprint.c (set_print_type, show_print_type): Remove.
+	(_initialize_typeprint): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* record.c (set_record_command, show_record_command): Remove.
+	(_initialize_record): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* cli/cli-cmds.c (_initialize_cli_cmds): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	(info_command, show_command, set_debug, show_debug): Remove.
+	* top.h (set_history, show_history): Don't declare.
+	* top.c (set_history, show_history): Remove.
+	* target-descriptions.c (set_tdesc_cmd, show_tdesc_cmd)
+	(unset_tdesc_cmd): Remove.
+	(_initialize_target_descriptions): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* symtab.c (info_module_command): Remove.
+	(_initialize_symtab): Use add_basic_prefix_cmd.
+	* symfile.c (overlay_command): Remove.
+	(_initialize_symfile): Use add_basic_prefix_cmd.
+	* sparc64-tdep.c (info_adi_command): Remove.
+	(_initialize_sparc64_adi_tdep): Use add_basic_prefix_cmd.
+	* sh-tdep.c (show_sh_command, set_sh_command): Remove.
+	(_initialize_sh_tdep): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* serial.c (serial_set_cmd, serial_show_cmd): Remove.
+	(_initialize_serial): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* ser-tcp.c (set_tcp_cmd, show_tcp_cmd): Remove.
+	(_initialize_ser_tcp): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* rs6000-tdep.c (set_powerpc_command, show_powerpc_command)
+	(_initialize_rs6000_tdep): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* riscv-tdep.c (show_riscv_command, set_riscv_command)
+	(show_debug_riscv_command, set_debug_riscv_command): Remove.
+	(_initialize_riscv_tdep): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* remote.c (remote_command, set_remote_cmd): Remove.
+	(_initialize_remote): Use add_basic_prefix_cmd.
+	* record-full.c (set_record_full_command)
+	(show_record_full_command): Remove.
+	(_initialize_record_full): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* record-btrace.c (cmd_set_record_btrace)
+	(cmd_show_record_btrace, cmd_set_record_btrace_bts)
+	(cmd_show_record_btrace_bts, cmd_set_record_btrace_pt)
+	(cmd_show_record_btrace_pt): Remove.
+	(_initialize_record_btrace): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* ravenscar-thread.c (set_ravenscar_command)
+	(show_ravenscar_command): Remove.
+	(_initialize_ravenscar): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* mips-tdep.c (show_mips_command, set_mips_command)
+	(_initialize_mips_tdep): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* maint.c (maintenance_command, maintenance_info_command)
+	(maintenance_check_command, maintenance_print_command)
+	(maintenance_set_cmd, maintenance_show_cmd): Remove.
+	(_initialize_maint_cmds): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	(show_per_command_cmd): Remove.
+	* maint-test-settings.c (maintenance_set_test_settings_cmd):
+	Remove.
+	(maintenance_show_test_settings_cmd): Remove.
+	(_initialize_maint_test_settings): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* maint-test-options.c (maintenance_test_options_command):
+	Remove.
+	(_initialize_maint_test_options): Use add_basic_prefix_cmd.
+	* macrocmd.c (macro_command): Remove
+	(_initialize_macrocmd): Use add_basic_prefix_cmd.
+	* language.c (set_check, show_check): Remove.
+	(_initialize_language): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* infcmd.c (unset_command): Remove.
+	(_initialize_infcmd): Use add_basic_prefix_cmd.
+	* i386-tdep.c (set_mpx_cmd, show_mpx_cmd): Remove.
+	(_initialize_i386_tdep): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* go32-nat.c (go32_info_dos_command): Remove.
+	(_initialize_go32_nat): Use add_basic_prefix_cmd.
+	* cli/cli-decode.c (do_prefix_cmd, add_basic_prefix_cmd)
+	(do_show_prefix_cmd, add_show_prefix_cmd): New functions.
+	* frame.c (set_backtrace_cmd, show_backtrace_cmd): Remove.
+	(_initialize_frame): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* dcache.c (set_dcache_command, show_dcache_command): Remove.
+	(_initialize_dcache): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* cp-support.c (maint_cplus_command): Remove.
+	(_initialize_cp_support): Use add_basic_prefix_cmd.
+	* btrace.c (maint_btrace_cmd, maint_btrace_set_cmd)
+	(maint_btrace_show_cmd, maint_btrace_pt_set_cmd)
+	(maint_btrace_pt_show_cmd, _initialize_btrace): Use
+	add_basic_prefix_cmd, add_show_prefix_cmd.
+	* breakpoint.c (save_command): Remove.
+	(_initialize_breakpoint): Use add_basic_prefix_cmd.
+	* arm-tdep.c (set_arm_command, show_arm_command): Remove.
+	(_initialize_arm_tdep): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* ada-lang.c (maint_set_ada_cmd, maint_show_ada_cmd)
+	(set_ada_command, show_ada_command): Remove.
+	(_initialize_ada_language): Use add_basic_prefix_cmd,
+	add_show_prefix_cmd.
+	* command.h (add_basic_prefix_cmd, add_show_prefix_cmd): Declare.
+
+2020-04-16  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c (inf_ptrace_target::auxv_parse): Remove.
+	* nbsd-nat.h (inf_ptrace_target::auxv_parse): Likewise.
+
+2020-04-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* windows-tdep.c (is_linked_with_cygwin_dll): Add filename to
+	warning messages.
+
+2020-04-16  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* windows-tdep.c (is_linked_with_cygwin_dll): Consider case where
+	import table is not at beginning of .idata section.
+
+2020-04-16  Pedro Alves  <palves@redhat.com>
+
+	* inferior.c (delete_inferior): Use delete operator directly
+	instead of delete_program_space.
+	* progspace.c (add_program_space): New, factored out from
+	program_space::program_space.
+	(remove_program_space): New, factored out from
+	delete_program_space.
+	(program_space::program_space): Remove intro comment.  Rewrite.
+	(program_space::~program_space): Remove intro comment.  Call
+	remove_program_space.
+	(delete_program_space): Delete.
+	* progspace.h (program_space::program_space): Make explicit.  Move
+	intro comment here, adjusted.
+	(program_space::~program_space): Move intro comment here,
+	adjusted.
+	(delete_program_space): Remove.
+
+2020-04-16  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat::handle_access_violation): New
+	function.
+	* nat/windows-nat.h (handle_access_violation): Declare.
+	* nat/windows-nat.c (handle_exception): Move Cygwin code to
+	windows-nat.c.  Call handle_access_violation.
+
+2020-04-16  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25791
+	* dwarf2/index-write.c (write_gdbindex): Generate CU table entries for
+	CUs without psymtab.
+
+2020-04-16  Kevin Buettner  <kevinb@redhat.com>
+
+	* python/python.c (do_start_initialization): Don't call
+	PyEval_InitThreads for Python 3.9 and beyond.
+
+2020-04-15  Kamil Rytarowski  <n54@gmx.com>
+
+	* obsd-nat.c (obsd_nat_target::update_thread_list): Pass "this" to
+	thread functions.
+	(obsd_nat_target::wait): Likewise.
+
+2020-04-15  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (DEBUG_EXEC, DEBUG_EVENTS, DEBUG_MEM)
+	(DEBUG_EXCEPT): Use debug_printf.
+
+2020-04-15  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* completer.c (class completion_tracker::completion_hash_entry)
+	<hash_name>: New member function.
+	(completion_tracker::discard_completions): New callback to hash a
+	completion_hash_entry, pass this to htab_create_alloc.
+
+2016-01-20  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* windows-nat.c (windows_make_so): Warn rather than stopping with
+	an error if realpath() fails.
+
+2020-04-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c (nbsd_pid_to_kinfo_proc2): New.
+	(nbsd_nat_target::info_proc): Add do_status.
+
+2020-04-14  Simon Marchi  <simon.marchi@polymtl.ca>
+	    Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25718
+	* psympriv.h (struct partial_symtab::read_symtab)
+	(struct partial_symtab::expand_psymtab)
+	(struct partial_symtab::read_dependencies): Update comments.
+	* dwarf2/read.c (struct dwarf2_include_psymtab::read_symtab): Call
+	read_symtab for includer.
+	(struct dwarf2_include_psymtab::expand_psymtab): Assert false.
+	(struct dwarf2_include_psymtab::readin_p): Call readin_p () for includer.
+	(struct dwarf2_include_psymtab::m_readin): Remove.
+	(struct dwarf2_include_psymtab::includer): New member function.
+	(dwarf2_psymtab::expand_psymtab): Assert !readin.
+
+2020-04-14  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25720
+	* symmisc.c (maintenance_expand_symtabs): Call expand_symtabs_matching
+	with NULL symbol_matcher and lookup_name.
+	* psymtab.c (psym_expand_symtabs_matching): Handle NULL symbol_matcher
+	and lookup_name.
+	* dwarf2/read.c (dw2_expand_symtabs_matching)
+	(dw2_debug_names_expand_symtabs_matching): Same.
+	* symfile.h (struct quick_symbol_functions::expand_symtabs_matching):
+	Make lookup_name a pointer.  Update comment.
+	* symtab.c (global_symbol_searcher::expand_symtabs): Handle
+	lookup_name being a pointer.
+	* symfile.c (expand_symtabs_matching): Same.
+	* symfile-debug.c (debug_qf_expand_symtabs_matching): Same.
+	* linespec.c (iterate_over_all_matching_symtabs): Same.
+
+2020-04-13  Tom Tromey  <tom@tromey.com>
+
+	* run-on-main-thread.c: Update include.
+	* unittests/main-thread-selftests.c: Update include.
+	* tui/tui-win.c: Update include.
+	* tui/tui-io.c: Update include.
+	* tui/tui-interp.c: Update include.
+	* tui/tui-hooks.c: Update include.
+	* top.h: Update include.
+	* top.c: Update include.
+	* ser-base.c: Update include.
+	* remote.c: Update include.
+	* remote-notif.c: Update include.
+	* remote-fileio.c: Update include.
+	* record-full.c: Update include.
+	* record-btrace.c: Update include.
+	* python/python.c: Update include.
+	* posix-hdep.c: Update include.
+	* mingw-hdep.c: Update include.
+	* mi/mi-main.c: Update include.
+	* mi/mi-interp.c: Update include.
+	* main.c: Update include.
+	* linux-nat.c: Update include.
+	* interps.c: Update include.
+	* infrun.c: Update include.
+	* inf-loop.c: Update include.
+	* event-top.c: Update include.
+	* event-loop.c: Move to ../gdbsupport/.
+	* event-loop.h: Move to ../gdbsupport/.
+	* async-event.h: Update include.
+	* Makefile.in (COMMON_SFILES, HFILES_NO_SRCDIR): Update.
+
+2020-04-13  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c: Include async-event.h.
+	* remote.c: Include async-event.h.
+	* remote-notif.c: Include async-event.h.
+	* record-full.c: Include async-event.h.
+	* record-btrace.c: Include async-event.h.
+	* infrun.c: Include async-event.h.
+	* event-top.c: Include async-event.h.
+	* event-loop.h: Move some declarations to async-event.h.
+	* event-loop.c: Don't include ser-event.h or top.h.  Move some
+	code to async-event.c.
+	* async-event.h: New file.
+	* async-event.c: New file.
+	* Makefile.in (COMMON_SFILES): Add async-event.c.
+	(HFILES_NO_SRCDIR): Add async-event.h.
+
+2020-04-13  Tom Tromey  <tom@tromey.com>
+
+	* utils.c (flush_streams): New function.
+	* event-loop.c (gdb_wait_for_event): Call flush_streams.
+
+2020-04-13  Tom Tromey  <tom@tromey.com>
+
+	* event-loop.c (handle_file_event): Use warning, not
+	printf_unfiltered.
+
+2020-04-13  Tom Tromey  <tom@tromey.com>
+
+	* event-loop.c: Include <chrono>.
+
+2020-04-13  Tom Tromey  <tom@tromey.com>
+
+	* gdb_select.h: Move to ../gdbsupport/.
+	* event-loop.c: Update include path.
+	* top.c: Update include path.
+	* ser-base.c: Update include path.
+	* ui-file.c: Update include path.
+	* ser-tcp.c: Update include path.
+	* guile/scm-ports.c: Update include path.
+	* posix-hdep.c: Update include path.
+	* ser-unix.c: Update include path.
+	* gdb_usleep.c: Update include path.
+	* mingw-hdep.c: Update include path.
+	* inflow.c: Update include path.
+	* infrun.c: Update include path.
+	* event-top.c: Update include path.
+
+2020-04-13  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* configure.ac: Remove checks that are now in GDB_AC_COMMON.
+
+2020-04-13  Tom Tromey  <tom@tromey.com>
+
+	* event-loop.h (start_event_loop): Don't declare.
+	* event-loop.c (start_event_loop): Move...
+	* main.c (start_event_loop): ...here.  Now static.
+
+2020-04-13  Sergio Durigan Junior  <sergiodj@sergiodj.net>
+
+	* MAINTAINERS: Update my email address.
+
+2020-04-12  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c (nbsd_nat_target::info_proc): Add IP_MINIMAL and
+	IP_ALL.
+
+2020-04-12  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c (nbsd_pid_to_cmdline): Add.
+	(nbsd_nat_target::info_proc): Add do_cmdline.
+
+2020-04-12  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c (nbsd_pid_to_cwd): Add.
+	(nbsd_nat_target::info_proc): Add do_cwd.
+
+2020-04-12  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c (nbsd_nat_target::info_proc): Add do_exe.
+
+2020-04-11  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c; Include "nbsd-tdep.h" and "gdbarch.h".
+	* nbsd-nat.c (nbsd_nat_target::find_memory_regions)
+	(nbsd_nat_target::info_proc): New functions.
+	* nbsd-nat.c (kinfo_get_vmmap): New function.
+	* nbsd-nat.c (nbsd_nat_target::info_proc) Use
+	nbsd_info_proc_mappings_header and nbsd_info_proc_mappings_entry.
+	* nbsd-tdep.c (nbsd_info_proc_mappings_header)
+	(nbsd_info_proc_mappings_entry, nbsd_vm_map_entry_flags): New
+	functions.
+	* nbsd-tdep.c (KINFO_VME_PROT_READ, KINFO_VME_PROT_WRITE)
+	(KINFO_VME_PROT_EXEC, KINFO_VME_FLAG_COW)
+	(KINFO_VME_FLAG_NEEDS_COPY, KINFO_VME_FLAG_NOCOREDUMP)
+	(KINFO_VME_FLAG_PAGEABLE, KINFO_VME_FLAG_GROWS_UP)
+	(KINFO_VME_FLAG_GROWS_DOWN): New.
+
+2020-04-10  Artur Shepilko  <nomadbyte@gmail.com>
+
+	* utils.c (copy_bitwise): Use unsigned 0 constant as operand of
+	bit shift.
+
+2020-04-10  Tom Tromey  <tromey@adacore.com>
+
+	* symfile.c (symbol_file_add_separate): Preserve OBJF_MAINLINE.
+
+2020-04-10  Tom Tromey  <tromey@adacore.com>
+
+	* symtab.c (get_symbol_address, get_msymbol_address): Skip
+	separate debug files.
+
+2020-04-10  Hannes Domani  <ssbssa@yahoo.de>
+
+	* nat/windows-nat.c (STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP):
+	Move to...
+	* nat/windows-nat.h (STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP):
+	... here.
+	* windows-nat.c (windows_nat_target::get_windows_debug_event):
+	Check for STATUS_WX86_BREAKPOINT.
+	(windows_nat_target::wait): Same.
+
+2020-04-10  Tom de Vries  <tdevries@suse.de>
+
+	PR cli/25808
+	* python/lib/gdb/__init__.py: Initialize lexer with stripnl=False.
+
+2020-04-09  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* MAINTAINERS (Global Maintainers): Add Tom de Vries.
+	(Write After Approval): Remove Tom de Vries.
+
+2020-04-09  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	revert partially:
+	2020-04-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* buildsym.c (record_line): Fix undefined behavior and preserve
+	lines at eof.
+
+2020-04-09  Kamil Rytarowski  <n54@gmx.com>
+
+	* auxv.h (svr4_auxv_parse): New.
+	* auxv.c (default_auxv_parse): Split into default_auxv_parse
+	and generic_auxv_parse.
+	(svr4_auxv_parse): Add.
+	* obsd-tdep.c: Include "auxv.h".
+	(obsd_auxv_parse): Remove.
+	(obsd_init_abi): Remove comment.
+	(obsd_init_abi): Change set_gdbarch_auxv_parse passed argument
+	from `obsd_auxv_parse' to `svr4_auxv_parse'.
+	* nbsd-tdep.c: Include "auxv.h".
+	(nbsd_init_abi): Call set_gdbarch_auxv_parse.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* nat/windows-nat.h (last_wait_event): Don't declare.
+	(wait_for_debug_event): Update comment.
+	* nat/windows-nat.c (last_wait_event): Now static.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (wait_for_debug_event): Move to
+	nat/windows-nat.c.
+	* nat/windows-nat.h (wait_for_debug_event): Declare.
+	* nat/windows-nat.c (wait_for_debug_event): Move from
+	windows-nat.c.  No longer static.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (get_windows_debug_event): Use
+	fetch_pending_stop.
+	* nat/windows-nat.h (fetch_pending_stop): Declare.
+	* nat/windows-nat.c (fetch_pending_stop): New function.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_continue): Use matching_pending_stop and
+	continue_last_debug_event.
+	* nat/windows-nat.h (matching_pending_stop)
+	(continue_last_debug_event): Declare.
+	* nat/windows-nat.c (DEBUG_EVENTS): New define.
+	(matching_pending_stop, continue_last_debug_event): New
+	functions.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (MS_VC_EXCEPTION): Move to nat/windows-nat.c.
+	(handle_exception_result): Move to nat/windows-nat.h.
+	(DEBUG_EXCEPTION_SIMPLE): Remove.
+	(windows_nat::handle_ms_vc_exception): New function.
+	(handle_exception): Move to nat/windows-nat.c.
+	(get_windows_debug_event): Update.
+	(STATUS_WX86_BREAKPOINT, STATUS_WX86_SINGLE_STEP): Move to
+	nat/windows-nat.c.
+	* nat/windows-nat.h (handle_ms_vc_exception): Declare.
+	(handle_exception_result): Move from windows-nat.c.
+	(handle_exception): Declare.
+	* nat/windows-nat.c (MS_VC_EXCEPTION, handle_exception)
+	(STATUS_WX86_SINGLE_STEP, STATUS_WX86_BREAKPOINT): Move from
+	windows-nat.c.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (exception_count, event_count): Remove.
+	(handle_exception, get_windows_debug_event)
+	(do_initial_windows_stuff): Update.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat::handle_load_dll)
+	(windows_nat::handle_unload_dll): Rename.  No longer static.
+	* nat/windows-nat.h (handle_load_dll, handle_unload_dll):
+	Declare.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* complaints.h (stop_whining): Declare at top-level.
+	(complaint): Don't declare stop_whining.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_nat::handle_output_debug_string):
+	Rename.  No longer static.
+	* nat/windows-nat.h (handle_output_debug_string): Declare.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (current_process_handle, current_process_id)
+	(main_thread_id, last_sig, current_event, last_wait_event)
+	(current_windows_thread, desired_stop_thread_id, pending_stops)
+	(struct pending_stop, siginfo_er): Move to nat/windows-nat.c.
+	(display_selectors, fake_create_process)
+	(get_windows_debug_event): Update.
+	* nat/windows-nat.h (current_process_handle, current_process_id)
+	(main_thread_id, last_sig, current_event, last_wait_event)
+	(current_windows_thread, desired_stop_thread_id, pending_stops)
+	(struct pending_stop, siginfo_er): Move from windows-nat.c.
+	* nat/windows-nat.c (current_process_handle, current_process_id)
+	(main_thread_id, last_sig, current_event, last_wait_event)
+	(current_windows_thread, desired_stop_thread_id, pending_stops)
+	(siginfo_er): New globals.  Move from windows-nat.c.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (get_image_name): Move to nat/windows-nat.c.
+	(handle_load_dll): Update.
+	* nat/windows-nat.c (get_image_name): Move from windows-nat.c.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (enum thread_disposition_type): Move to
+	nat/windows-nat.h.
+	(windows_nat::thread_rec): Rename from thread_rec.  No longer
+	static.
+	(windows_add_thread, windows_nat_target::fetch_registers)
+	(windows_nat_target::store_registers, handle_exception)
+	(windows_nat_target::resume, get_windows_debug_event)
+	(windows_nat_target::get_tib_address)
+	(windows_nat_target::thread_name)
+	(windows_nat_target::thread_alive): Update.
+	* nat/windows-nat.h (enum thread_disposition_type): Move from
+	windows-nat.c.
+	(thread_rec): Declare.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c: Add "using namespace".
+	* nat/windows-nat.h: Wrap contents in windows_nat namespace.
+	* nat/windows-nat.c: Wrap contents in windows_nat namespace.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* nat/windows-nat.h (struct windows_thread_info): Declare
+	destructor.
+	* nat/windows-nat.c (~windows_thread_info): New.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/22992
+	* windows-nat.c (current_event): Update comment.
+	(last_wait_event, desired_stop_thread_id): New globals.
+	(struct pending_stop): New.
+	(pending_stops): New global.
+	(windows_nat_target) <stopped_by_sw_breakpoint>
+	<supports_stopped_by_sw_breakpoint>: New methods.
+	(windows_fetch_one_register): Add assertions.  Adjust PC.
+	(windows_continue): Handle pending stops.  Suspend other threads
+	when stepping.  Use last_wait_event
+	(wait_for_debug_event): New function.
+	(get_windows_debug_event): Use wait_for_debug_event.  Handle
+	pending stops.  Queue spurious stops.
+	(windows_nat_target::wait): Set stopped_at_software_breakpoint.
+	(windows_nat_target::kill): Use wait_for_debug_event.
+	* nat/windows-nat.h (struct windows_thread_info)
+	<stopped_at_software_breakpoint>: New field.
+	* nat/windows-nat.c (windows_thread_info::resume): Clear
+	stopped_at_software_breakpoint.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (enum thread_disposition_type): New.
+	(thread_rec): Replace "get_context" parameter with "disposition";
+	change type.
+	(windows_add_thread, windows_nat_target::fetch_registers)
+	(windows_nat_target::store_registers, handle_exception)
+	(windows_nat_target::resume, get_windows_debug_event)
+	(windows_nat_target::get_tib_address)
+	(windows_nat_target::thread_name)
+	(windows_nat_target::thread_alive): Update.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (thread_rec): Use windows_thread_info::suspend.
+	(windows_continue): Use windows_continue::resume.
+	* nat/windows-nat.h (struct windows_thread_info) <suspend,
+	resume>: Declare new methods.
+	* nat/windows-nat.c: New file.
+	* configure.nat (NATDEPFILES): Add nat/windows-nat.o when needed.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_add_thread, windows_delete_thread)
+	(windows_nat_target::fetch_registers)
+	(windows_nat_target::store_registers, fake_create_process)
+	(windows_nat_target::resume, windows_nat_target::resume)
+	(get_windows_debug_event, windows_nat_target::wait)
+	(windows_nat_target::pid_to_str)
+	(windows_nat_target::get_tib_address)
+	(windows_nat_target::get_ada_task_ptid)
+	(windows_nat_target::thread_name)
+	(windows_nat_target::thread_alive): Use lwp, not tid.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (handle_exception)
+	(windows_nat_target::thread_name): Update.
+	* nat/windows-nat.h (windows_thread_info): Remove destructor.
+	<name>: Now unique_xmalloc_ptr.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (thread_rec)
+	(windows_nat_target::fetch_registers): Update.
+	* nat/windows-nat.h (struct windows_thread_info) <suspended>:
+	Update comment.
+	<debug_registers_changed, reload_context>: Now bool.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (windows_add_thread): Use new.
+	(windows_init_thread_list, windows_delete_thread): Use delete.
+	(get_windows_debug_event): Update.
+	* nat/windows-nat.h (struct windows_thread_info): Add constructor,
+	destructor, and initializers.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (struct windows_thread_info): Remove.
+	* nat/windows-nat.h: New file.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (struct windows_thread_info) <tid>: Rename from "id".
+	(thread_rec, windows_add_thread, windows_delete_thread)
+	(windows_continue): Update.
+
+2020-04-08  Tom Tromey  <tromey@adacore.com>
+
+	* windows-nat.c (struct windows_thread_info): Remove typedef.
+	(thread_head): Remove.
+	(thread_list): New global.
+	(thread_rec, windows_add_thread, windows_init_thread_list)
+	(windows_delete_thread, windows_continue): Update.
+
+2020-04-08  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* windows-tdep.h (windows_init_abi): Add comment.
+	(cygwin_init_abi): New declaration.
+	* windows-tdep.c: Split signal enumeration in two, one for
+	Windows and one for Cygwin.
+	(windows_gdb_signal_to_target): Only deal with signal of the
+	Windows OS ABI.
+	(cygwin_gdb_signal_to_target): New function.
+	(windows_init_abi): Rename to windows_init_abi_common, don't set
+	gdb_signal_to_target gdbarch method.  Add new new function with
+	this name.
+	(cygwin_init_abi): New function.
+	* amd64-windows-tdep.c (amd64_windows_init_abi_common): Add
+	comment.  Don't call windows_init_abi.
+	(amd64_windows_init_abi): Add comment, call windows_init_abi.
+	(amd64_cygwin_init_abi): Add comment, call cygwin_init_abi.
+	* i386-windows-tdep.c (i386_windows_init_abi): Rename to
+	i386_windows_init_abi_common, don't call windows_init_abi.  Add
+	a new function of this name.
+	(i386_cygwin_init_abi): New function.
+	(_initialize_i386_windows_tdep): Bind i386_cygwin_init_abi to
+	OS ABI Cygwin.
+
+2020-04-08  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.c (read_gdb_index_from_buffer): Remove objfile
+	parameter.c.
+	(dwarf2_read_gdb_index): Update.
+
+2020-04-07  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-tdep.c: Include "objfiles.h".
+	(nbsd_skip_solib_resolver): New.
+	(nbsd_init_abi): Call set_gdbarch_skip_solib_resolver().
+
+2020-04-07  Nitika Achra  <Nitika.Achra@amd.com>
+
+	* dwarf2/loc.c (loclist_describe_location): Call the function decode_debug_loclists_
+	addresses if DWARF version is 5 or more because DW_LLE_start* or DW_LLE_offset_pair
+	with DW_LLE_base_addressx are being emitted in DWARFv5.
+	Add the newly added kind DW_LOC_OFFSET_PAIR also.
+	The length of location description is an unsigned ULEB integer in DWARFv5 instead of
+	unsigned integer.
+
+2020-04-07  Nitika Achra  <Nitika.Achra@amd.com>
+
+	* dwarf2/loc.c (enum debug_loc_kind): Add a new kind DEBUG_LOC_OFFSET_PAIR.
+	(dwarf2_find_location_expression): Call the function decode_debug_loclists_
+	addresses if DWARF version is 5 or more. DW_LLE_start* or DW_LLE_offset_pair
+	with DW_LLE_base_addressx are being emitted in DWARFv5 instead of DW_LLE_GNU*.
+	Add applicable base address if the entry is DW_LLE_offset_pair from DWO.
+	(decode_debug_loclists_addresses): Return DEBUG_LOC_OFFSET_PAIR instead of
+	DEBUG_LOC_START_END in case of DW_LLE_offset_pair.
+
+
+2020-04-07  Nitika Achra  <Nitika.Achra@amd.com>
+
+	* dwarf2/read.c (cu_debug_loc_section): Added the declaration for the function.
+	(read_loclist_index): New function definition.
+	(lookup_loclist_base): New function definition.
+	(read_loclist_header): New function definition.
+	(dwarf2_cu): Add loclist_base and loclist_header field.
+	(dwarf2_locate_dwo_sections): Handle .debug_loclists.dwo section.
+	(read_full_die_1): Read the value of DW_AT_loclists_base.
+	(read_attribute_reprocess): Handle DW_FORM_loclistx.
+	(read_attribute_value): Handle DW_FORM_loclistx.
+	(skip_one_die): Handle DW_FORM_loclistx.
+	(loclist_header): New structure declaration.
+	* dwarf2/attribute.c (form_is_section_offset): Handle DW_FORM_loclistx.
+
+2020-04-07  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/read.h (struct dwarf2_psymtab): Remove two-parameters
+	constructor.  Remove `addr` parameter from other constructor and
+	add `per_cu` parameter.
+	* dwarf2/read.c (create_partial_symtab): Update.
+
+2020-04-07  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25796
+	* dwarf2/read.c (can_have_DW_AT_const_value_p): New function.
+	(partial_die_info::fixup): Inherit has_const_value.
+
+2020-04-07  Tom de Vries  <tdevries@suse.de>
+
+	* psymtab.c (maintenance_check_psymtabs): Skip static LOC_BLOCK
+	symbols without address.
+
+2020-04-06  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.h (struct thread_info): Add forward declaration.
+	(nbsd_nat_target::thread_alive): Add.
+	(nbsd_nat_target::thread_name): Likewise.
+	(nbsd_nat_target::update_thread_list): Likewise.
+	(update_thread_list::post_attach): Likewise.
+	(post_attach::pid_to_str): Likewise.
+	* nbsd-nat.c: Include "gdbthread.h" and "inferior.h".
+	(nbsd_thread_lister): Add.
+	(nbsd_nat_target::thread_alive): Likewise.
+	(nbsd_nat_target::thread_name): Likewise.
+	(nbsd_add_threads): Likewise.
+	(update_thread_list::post_attach): Likewise.
+	(nbsd_nat_target::update_thread_list): Likewise.
+	(post_attach::pid_to_str): Likewise.
+
+2020-04-06  Tom Tromey  <tromey@adacore.com>
+
+	* ada-valprint.c (print_variant_part): Extract the variant field.
+	(print_field_values): Use the field as the outer value when
+	recursing.
+
+2020-04-06  Tom Tromey  <tromey@adacore.com>
+
+	* sh-nbsd-tdep.c: Include nbsd-tdep.h.
+	* ppc-nbsd-tdep.c: Include nbsd-tdep.h.
+	* mips-nbsd-tdep.c (mipsnbsd_init_abi): Add missing ";".
+	* arm-nbsd-tdep.c: Include nbsd-tdep.h.
+	* hppa-nbsd-tdep.c: Include nbsd-tdep.h.
+
+2020-04-06  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (read_base_type) <DW_ATE_complex_float>: Handle
+	TYPE_CODE_ERROR.
+
+2020-04-06  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-tdep.c: Include "gdbarch.h".
+	Define enum with NetBSD signal numbers.
+	(nbsd_gdb_signal_from_target, nbsd_gdb_signal_to_target): New.
+	* alpha-nbsd-tdep.c (alphanbsd_init_abi): Call nbsd_init_abi().
+	* amd64-nbsd-tdep.c (amd64nbsd_init_abi): Likewise.
+	* arm-nbsd-tdep.c (arm_netbsd_elf_init_abi): Likewise.
+	* hppa-nbsd-tdep.c (hppanbsd_init_abi): Likewise.
+	* i386-nbsd-tdep.c (i386nbsd_init_abi): Likewise.
+	* mips-nbsd-tdep.c (nbsd_init_abi): Likewise.
+	* ppc-nbsd-tdep.c (ppcnbsd_init_abi): Likewise.
+	* sh-nbsd-tdep.c (shnbsd_init_abi): Likewise.
+	* sparc-nbsd-tdep.c (sparc32nbsd_init_abi): Likewise.
+	* sparc64-nbsd-tdep.c (sparc64nbsd_init_abi): Likewise.
+	* vax-nbsd-tdep.c (vaxnbsd_elf_init_abi): Likewise.
+
+2020-04-03  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR gdb/25325
+	* dwarf2/read.c (read_enumeration_type): Fix typed enum attributes.
+
+2020-04-03  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/loc.c (disassemble_dwarf_expression) <DW_OP_const_type>:
+	Read constant block.
+
+2020-04-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdb_bfd.h: Include gdbsupport/byte-vector.h.
+	(gdb_bfd_get_full_section_contents): New declaration.
+	* gdb_bfd.c (gdb_bfd_get_full_section_contents): New function.
+	* windows-tdep.c (is_linked_with_cygwin_dll): Use
+	gdb_bfd_get_full_section_contents.
+
+2020-04-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* exec.c (build_section_table): Replace internal_error with
+	gdb_assert.
+	(section_table_xfer_memory_partial): Likewise.
+	* mdebugread.c (parse_partial_symbols): Likewise.
+	* psymtab.c (lookup_partial_symbol): Likewise.
+	* utils.c (wrap_here): Likewise.
+
+2020-04-02  Tom Tromey  <tromey@adacore.com>
+
+	* f-lang.c (build_fortran_types): Use arch_type to initialize
+	builtin_complex_s32 in the TYPE_CODE_ERROR case.
+
+2020-04-02  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (partial_die_info::read): Do not create a vector
+	of attributes.
+
+2020-04-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Bernd Edlinger <bernd.edlinger@hotmail.de>
+	    Tom Tromey  <tromey@adacore.com>
+
+	* buildsym.c (buildsym_compunit::record_line): Remove
+	deduplication code.
+
+2020-04-02  Tom de Vries  <tdevries@suse.de>
+
+	PR ada/24671
+	* dwarf2/read.c (dw2_map_matching_symbols): Handle -readnow.
+
+2020-04-02  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/read.c (dwarf2_gdb_index_functions,
+	dwarf2_debug_names_functions): Init lookup_global_symbol_language with
+	NULL.
+	* psymtab.c (psym_lookup_global_symbol_language): New function.
+	(psym_functions): Init psym_lookup_global_symbol_language with
+	psym_lookup_global_symbol_language.
+	* symfile-debug.c (debug_sym_quick_functions): Init
+	lookup_global_symbol_language with NULL.
+	* symfile.c (set_initial_language): Remove fixme comment.
+	* symfile.h (struct quick_symbol_functions): Add
+	lookup_global_symbol_language.
+	* symtab.c (find_quick_global_symbol_language): New function.
+	(find_main_name): Use find_quick_global_symbol_language.
+
+2020-04-01  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* windows-tdep.c (is_linked_with_cygwin_dll): Fix style.
+
+2020-04-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* buildsym.c (record_line): Fix undefined behavior and preserve
+	lines at eof.
+
+2020-04-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* buildsym.c (record_line): Fix the resizing condition.
+
+2020-04-01  Tom Tromey  <tom@tromey.com>
+
+	* value.h (value_literal_complex): Add comment.
+	* valops.c (value_literal_complex): Refer to value.h.
+
+2020-04-01  Tom Tromey  <tom@tromey.com>
+
+	* c-exp.y (FLOAT_KEYWORD, COMPLEX): New tokens.
+	(scalar_type): New rule, from typebase.
+	(typebase): Use scalar_type.  Recognize complex types.
+	(field_name): Handle FLOAT_KEYWORD.
+	(ident_tokens): Add _Complex and __complex__.
+
+2020-04-01  Tom Tromey  <tom@tromey.com>
+
+	PR exp/25299:
+	* valarith.c (promotion_type, complex_binop): New functions.
+	(scalar_binop): Handle complex numbers.  Use promotion_type.
+	(value_pos, value_neg, value_complement): Handle complex numbers.
+
+2020-04-01  Tom Tromey  <tom@tromey.com>
+
+	* c-exp.y (COMPLEX_INT, COMPLEX_FLOAT): New tokens.
+	(exp) <COMPLEX_INT, COMPLEX_FLOAT>: New rules.
+	(parse_number): Handle complex numbers.
+
+2020-04-01  Tom Tromey  <tom@tromey.com>
+
+	* c-valprint.c (c_decorations): Change complex suffix to "i".
+
+2020-04-01  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_value_print_complex): Use accessors.
+	* value.h (value_real_part, value_imaginary_part): Declare.
+	* valops.c (value_real_part, value_imaginary_part): New
+	functions.
+	* value.c (creal_internal_fn, cimag_internal_fn): Use accessors.
+
+2020-04-01  Tom Tromey  <tom@tromey.com>
+
+	* stabsread.c (rs6000_builtin_type, read_sun_floating_type)
+	(read_range_type): Update.
+	* mdebugread.c (basic_type): Update.
+	* go-lang.c (build_go_types): Use init_complex_type.
+	* gdbtypes.h (struct main_type) <complex_type>: New member.
+	(init_complex_type): Update.
+	(arch_complex_type): Don't declare.
+	* gdbtypes.c (init_complex_type): Remove "objfile" parameter.
+	Make name if none given.  Use alloc_type_copy.  Look for cached
+	complex type.
+	(arch_complex_type): Remove.
+	(gdbtypes_post_init): Use init_complex_type.
+	* f-lang.c (build_fortran_types): Use init_complex_type.
+	* dwarf2/read.c (read_base_type): Update.
+	* d-lang.c (build_d_types): Use init_complex_type.
+	* ctfread.c (read_base_type): Update.
+
+2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* infrun.c (stop_all_threads): Update assertion, plus when
+	stopping threads, take into account that we might be trying
+	to stop an all-stop target.
+	(stop_waiting): Call 'stop_all_threads' if there exists a
+	non-stop target.
+
+2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* target.h (exists_non_stop_target): New function declaration.
+	* target.c (exists_non_stop_target): New function.
+
+2020-04-01  Hannes Domani  <ssbssa@yahoo.de>
+
+	PR gdb/24789
+	* eval.c (is_integral_or_integral_reference): New function.
+	(evaluate_subexp_standard): Allow integer references in
+	pointer arithmetic.
+
+2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* remote.c (remote_target::remote_parse_stop_reply): Remove the
+	check for no ptid in the stop reply when the target is non-stop.
+
+2020-04-01  Tom Tromey  <tromey@adacore.com>
+
+	* symtab.h (class lookup_name_info) <lookup_name_info>: Change
+	"name" parameter to rvalue reference.  Initialize m_name_holder.
+	<lookup_name_info>: New overloads.
+	<name>: Return gdb::string_view.
+	<c_str>: New method.
+	<make_ignore_params>: Update.
+	<search_name_hash>: Update.
+	<language_lookup_name>: Return const char *.
+	<m_name>: Change type.
+	* symtab.c (demangle_for_lookup_info::demangle_for_lookup_info)
+	(demangle_for_lookup_info::demangle_for_lookup_info): Update.
+	(lookup_name_info::match_any): Update.
+	* psymtab.c (match_partial_symbol, lookup_partial_symbol):
+	Update.
+	* minsyms.c (linkage_name_str): Update.
+	* language.c (default_symbol_name_matcher): Update.
+	* dwarf2/read.c (mapped_index_base::find_name_components_bounds):
+	Update.
+	* ada-lang.c (ada_fold_name): Change parameter to string_view.
+	(ada_lookup_name_info::ada_lookup_name_info): Update.
+	(literal_symbol_name_matcher): Update.
+
+2020-04-01  Tom Tromey  <tromey@adacore.com>
+
+	* psymtab.c (psymtab_search_name): Remove function.
+	(psym_lookup_symbol): Create search name and lookup name here.
+	(lookup_partial_symbol): Remove "name" parameter; add
+	lookup_name.
+	(psym_expand_symtabs_for_function): Update.
+
+2020-03-31  Joel Jones  <joelkevinjones@gmail.com>
+
+	PR tui/25597:
+	* python/py-tui.c: Include gdb_curses.h inside of #ifdef TUI.
+
+2020-03-31  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/abbrev.c (abbrev_table::read): Conditionally call
+	memcpy.
+
+2020-03-30  Nelson Chu  <nelson.chu@sifive.com>
+
+	* features/riscv/32bit-csr.xml: Regenerated.
+	* features/riscv/64bit-csr.xml: Regenerated.
+
+2020-03-30  Tom Tromey  <tromey@adacore.com>
+
+	* ada-valprint.c (print_variant_part): Update.
+	* ada-lang.h (ada_which_variant_applies): Update.
+	* ada-lang.c (ada_which_variant_applies): Remove outer_type and
+	outer_valaddr parameters; replace with "outer" value parameter.
+	(to_fixed_variant_branch_type): Update.
+
+2020-03-30  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
+
+	* ppc-linux-nat.c: Include <algorithm>, <unordered_map>, and
+	<list>.  Remove inclusion of observable.h.
+	(PPC_DEBUG_CURRENT_VERSION): Move up define.
+	(struct arch_lwp_info): New struct.
+	(class ppc_linux_dreg_interface): New class.
+	(struct ppc_linux_process_info): New struct.
+	(struct ppc_linux_nat_target) <low_delete_thread, low_new_fork>
+	<low_new_clone, low_forget_process, low_prepare_to_resume>
+	<copy_thread_dreg_state, mark_thread_stale>
+	<mark_debug_registers_changed, register_hw_breakpoint>
+	<clear_hw_breakpoint, register_wp, clear_wp>
+	<can_use_watchpoint_cond_accel, calculate_dvc, check_condition>
+	<num_memory_accesses, get_trigger_type>
+	<create_watchpoint_request, hwdebug_point_cmp>
+	<init_arch_lwp_info, get_arch_lwp_info>
+	<low_stopped_by_watchpoint, low_stopped_data_address>: Declare as
+	methods.
+	<struct ptid_hash>: New inner struct.
+	<m_dreg_interface, m_process_info, m_installed_hw_bps>: Declare
+	members.
+	(saved_dabr_value, hwdebug_info, max_slots_number)
+	(struct hw_break_tuple, struct thread_points, ppc_threads)
+	(have_ptrace_hwdebug_interface)
+	(hwdebug_find_thread_points_by_tid)
+	(hwdebug_insert_point, hwdebug_remove_point): Remove.
+	(ppc_linux_nat_target::can_use_hw_breakpoint): Use
+	m_dreg_interface, remove call to PTRACE_SET_DEBUGREG.
+	(ppc_linux_nat_target::region_ok_for_hw_watchpoint): Add comment,
+	use m_dreg_interface.
+	(hwdebug_point_cmp): Change to...
+	(ppc_linux_nat_target::hwdebug_point_cmp): ...this method.  Use
+	reference arguments instead of pointers.
+	(ppc_linux_nat_target::ranged_break_num_registers): Use
+	m_dreg_interface.
+	(ppc_linux_nat_target::insert_hw_breakpoint): Add comment, use
+	m_dreg_interface.  Call register_hw_breakpoint.
+	(ppc_linux_nat_target::remove_hw_breakpoint): Add comment, use
+	m_dreg_interface.  Call clear_hw_breakpoint.
+	(get_trigger_type): Change to...
+	(ppc_linux_nat_target::get_trigger_type): ...this method.  Add
+	comment.
+	(ppc_linux_nat_target::insert_mask_watchpoint): Update comment,
+	use m_dreg_interface.  Call register_hw_breakpoint.
+	(ppc_linux_nat_target::remove_mask_watchpoint): Update comment,
+	use m_dreg_interface.  Call clear_hw_breakpoint.
+	(can_use_watchpoint_cond_accel): Change to...
+	(ppc_linux_nat_target::can_use_watchpoint_cond_accel): ...this
+	method.  Update comment, use m_dreg_interface and
+	m_process_info.
+	(calculate_dvc): Change to...
+	(ppc_linux_nat_target::calculate_dvc): ...this method.  Use
+	m_dreg_interface.
+	(num_memory_accesses): Change to...
+	(ppc_linux_nat_target::num_memory_accesses): ...this method.
+	(check_condition): Change to...
+	(ppc_linux_nat_target::check_condition): ...this method.
+	(ppc_linux_nat_target::can_accel_watchpoint_condition): Update
+	comment, use m_dreg_interface.
+	(create_watchpoint_request): Change to...
+	(ppc_linux_nat_target::create_watchpoint_request): ...this
+	method.  Use m_dreg_interface.
+	(ppc_linux_nat_target::insert_watchpoint): Add comment, use
+	m_dreg_interface.  Call register_hw_breakpoint or register_wp.
+	(ppc_linux_nat_target::remove_watchpoint): Add comment, use
+	m_dreg_interface.  Call clear_hw_breakpoint or clear_wp.
+	(ppc_linux_nat_target::low_forget_process)
+	(ppc_linux_nat_target::low_new_fork)
+	(ppc_linux_nat_target::low_new_clone)
+	(ppc_linux_nat_target::low_delete_thread)
+	(ppc_linux_nat_target::low_prepare_to_resume): New methods.
+	(ppc_linux_nat_target::low_new_thread): Remove previous logic,
+	only call mark_thread_stale.
+	(ppc_linux_thread_exit): Remove.
+	(ppc_linux_nat_target::stopped_data_address): Change to...
+	(ppc_linux_nat_target::low_stopped_data_address): This. Add
+	comment, use m_dreg_interface and m_thread_hw_breakpoints.
+	(ppc_linux_nat_target::stopped_by_watchpoint): Change to...
+	(ppc_linux_nat_target::stopped_by_watchpoint): This.  Add
+	comment.  Call low_stopped_data_address.
+	(ppc_linux_nat_target::watchpoint_addr_within_range): Use
+	m_dreg_interface.
+	(ppc_linux_nat_target::masked_watch_num_registers): Use
+	m_dreg_interface.
+	(ppc_linux_nat_target::copy_thread_dreg_state)
+	(ppc_linux_nat_target::mark_thread_stale)
+	(ppc_linux_nat_target::mark_debug_registers_changed)
+	(ppc_linux_nat_target::register_hw_breakpoint)
+	(ppc_linux_nat_target::clear_hw_breakpoint)
+	(ppc_linux_nat_target::register_wp)
+	(ppc_linux_nat_target::clear_wp)
+	(ppc_linux_nat_target::init_arch_lwp_info)
+	(ppc_linux_nat_target::get_arch_lwp_info): New methods.
+	(_initialize_ppc_linux_nat): Remove observer callback.
+
+2020-03-30  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
+
+	* ppc-linux-nat.c (ppc_linux_nat_target::store_registers)
+	(ppc_linux_nat_target::auxv_parse)
+	(ppc_linux_nat_target::read_description)
+	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset):
+	Move up.
+
+2020-03-30  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>
+
+	* linux-nat.h (low_new_clone): New method.
+	* linux-nat.c (linux_handle_extended_wait): Call low_new_clone.
+
+2020-03-29  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dbxread.c (dbx_psymtab_to_symtab_1): Rename to...
+	(dbx_expand_psymtab): ... this.
+	(start_psymtab): Update.
+	* mdebugread.c (psymtab_to_symtab_1): Rename to...
+	(mdebug_expand_psymtab): ... this.
+	(parse_partial_symbols): Update.
+	(new_psymtab): Update.
+	* xcoffread.c (xcoff_psymtab_to_symtab_1): Rename to...
+	(xcoff_expand_psymtab): ... this.
+	(xcoff_start_psymtab): Update.
+
+2020-03-29  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* psympriv.h (partial_symtab) <read_dependencies>: Rename to...
+	<expand_dependencies>: ... this.
+	* psymtab.c (partial_symtab::read_dependencies): Rename to...
+	(partial_symtab::expand_dependencies): ... this.
+	* dwarf2/read.c (dwarf2_include_psymtab) <expand_psymtab>:
+	Update.
+	(dwarf2_psymtab::expand_psymtab): Update.
+	* dbxread.c (dbx_psymtab_to_symtab_1): Update.
+	* mdebugread.c (psymtab_to_symtab_1): Update.
+	* xcoffread.c (xcoff_psymtab_to_symtab_1): Update.
+
+2020-03-29  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* psympriv.h (discard_psymtab): Remove.
+	* dbxread.c (dbx_end_psymtab): Update.
+	* xcoffread.c (xcoff_end_psymtab): Update.
+
+2020-03-28  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/attribute.h (struct attribute) <form_is_constant>: Update
+	comment.
+
+2020-03-28  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_attribute_reprocess): Fix formatting.
+
+2020-03-27  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-nat.c (windows_add_all_dlls): Fix system dll paths.
+
+2020-03-26  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-tdep.c (fbsd_print_auxv_entry): Handle AT_FREEBSD_BSDFLAGS.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (handle_data_member_location, dwarf2_add_field)
+	(mark_common_block_symbol_computed, read_tag_string_type)
+	(attr_to_dynamic_prop, read_subrange_type): Update.
+	(dwarf2_get_ref_die_offset, dwarf2_get_attr_constant_value): Move
+	to be methods on struct attribute.
+	(skip_one_die, process_imported_unit_die, read_namespace_alias)
+	(read_call_site_scope, partial_die_info::read)
+	(partial_die_info::read, lookup_die_type, follow_die_ref):
+	Update.
+	* dwarf2/attribute.c (attribute::get_ref_die_offset): New method,
+	from dwarf2_get_ref_die_offset.
+	(attribute::constant_value): New method, from
+	dwarf2_get_attr_constant_value.
+	* dwarf2/attribute.h (struct attribute) <get_ref_die_offset>:
+	Declare method.
+	<constant_value>: New method.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf_unit_type_name, dwarf_tag_name)
+	(dwarf_attr_name, dwarf_form_name, dwarf_bool_name)
+	(dwarf_type_encoding_name): Move to stringify.c.
+	* Makefile.in (COMMON_SFILES): Add dwarf2/stringify.c.
+	* dwarf2/stringify.c: New file.
+	* dwarf2/stringify.h: New file.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/die.h (struct die_info) <addr_base, ranges_base>:
+	Rewrite.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/die.h (struct die_info) <addr_base, ranges_base>: New
+	methods.
+	* dwarf2/read.c (lookup_addr_base): Move to die.h.
+	(lookup_ranges_base): Likewise.
+	(read_cutu_die_from_dwo, read_full_die_1): Update.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_import_statement, read_file_scope)
+	(read_type_unit_scope, inherit_abstract_dies, read_func_scope)
+	(read_lexical_block_scope, read_call_site_scope)
+	(dwarf2_get_subprogram_pc_bounds, get_scope_pc_bounds)
+	(handle_struct_member_die, process_structure_scope)
+	(update_enumeration_type_from_children)
+	(process_enumeration_scope, read_array_type, read_common_block)
+	(read_namespace, read_module, read_subroutine_type): Update.
+	(sibling_die): Remove.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (lookup_addr_base, lookup_ranges_base)
+	(build_type_psymtabs_reader, read_structure_type)
+	(read_enumeration_type, read_full_die_1): Update.
+	(dwarf2_attr_no_follow): Move to die.h.
+	* dwarf2/die.h (struct die_info) <attr>: New method.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (struct dwarf2_cu) <base_known>: Remove.
+	<base_address>: Now an optional.
+	(dwarf2_find_base_address, dwarf2_rnglists_process)
+	(dwarf2_ranges_process, fill_in_loclist_baton)
+	(dwarf2_symbol_mark_computed): Update.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (struct die_info): Move to die.h.
+	* dwarf2/die.h: New file.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/line-header.h (dwarf_decode_line_header): Declare.
+	* dwarf2/read.c
+	(dwarf2_statement_list_fits_in_line_number_section_complaint):
+	Move to line-header.c.
+	(read_checked_initial_length_and_offset, read_formatted_entries):
+	Likewise.
+	(dwarf_decode_line_header): Split into two.
+	* dwarf2/line-header.c
+	(dwarf2_statement_list_fits_in_line_number_section_complaint):
+	Move from read.c.
+	(read_checked_initial_length_and_offset, read_formatted_entries):
+	Likewise.
+	(dwarf_decode_line_header): New function, split from read.c.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct dwarf2_per_objfile) <read_line_string>:
+	Declare method.
+	* dwarf2/read.c (read_attribute_value): Update.
+	(dwarf2_per_objfile::read_line_string): Rename from
+	read_indirect_line_string.
+	(read_formatted_entries): Update.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/macro.c (dwarf_decode_macro_bytes): Use objfile local
+	variable.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/macro.h (dwarf_decode_macros): Make section parameter
+	const.
+	* dwarf2/macro.c (skip_form_bytes, skip_unknown_opcode)
+	(dwarf_decode_macro_bytes, dwarf_decode_macros): Make section
+	parameter const.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf_decode_macros): Make "lh" const.
+	* dwarf2/macro.h (dwarf_decode_macros): Constify "lh" parameter.
+	* dwarf2/macro.c (macro_start_file): Constify "lh" parameter.
+	(dwarf_decode_macro_bytes, dwarf_decode_macros): Likewise.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/line-header.h (struct line_header) <is_valid_file_index,
+	file_names_size, file_full_name, file_file_name>: Use const.
+	<file_name_at, file_names>: Add const overload.
+	* dwarf2/line-header.c (line_header::file_file_name)
+	(line_header::file_full_name): Update.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf2_macro_malformed_definition_complaint)
+	(macro_start_file, consume_improper_spaces)
+	(parse_macro_definition, skip_form_bytes, skip_unknown_opcode)
+	(dwarf_parse_macro_header, dwarf_decode_macro_bytes)
+	(dwarf_decode_macros): Move to macro.c.
+	* dwarf2/macro.c: New file.
+	* dwarf2/macro.h: New file.
+	* Makefile.in (COMMON_SFILES): Add dwarf2/macro.c.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/section.h (struct dwarf2_section_info) <read_string>: New
+	method.
+	* dwarf2/section.c: New method.  From
+	read_indirect_string_at_offset_from.
+	* dwarf2/read.c (mapped_debug_names::namei_to_name): Update.
+	(read_indirect_string_at_offset_from): Move to section.c.
+	(read_indirect_string_at_offset): Rewrite.
+	(read_indirect_line_string_at_offset): Remove.
+	(read_indirect_string, read_indirect_line_string)
+	(dwarf_decode_macro_bytes): Update.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/section.h (struct dwarf2_section_info)
+	<overload_complaint>: Declare.
+	(dwarf2_section_buffer_overflow_complaint): Don't declare.
+	* dwarf2/section.c (dwarf2_section_info::overflow_complaint):
+	Rename from dwarf2_section_buffer_overflow_complaint.
+	* dwarf2/read.c (skip_one_die, partial_die_info::read)
+	(skip_form_bytes, dwarf_decode_macro_bytes): Update.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/section.h (dwarf2_section_buffer_overflow_complaint):
+	Declare.
+	* dwarf2/section.c (dwarf2_section_buffer_overflow_complaint):
+	Move from read.c.
+	* dwarf2/read.c (dwarf2_section_buffer_overflow_complaint): Move
+	to section.c.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf_decode_macros): Split into two overloads.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (macro_start_file): Change "cu" parameter to
+	"builder".
+	(dwarf_decode_macro_bytes): Likewise.  Add dwarf2_per_objfile
+	parameter.
+	(dwarf_decode_macros): Update.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_attribute_value): Update.
+	(read_indirect_string_from_dwz): Move to dwz.c; change into
+	method.
+	(dwarf_decode_macro_bytes): Update.
+	* dwarf2/dwz.h (struct dwz_file) <read_string>: Declare method.
+	* dwarf2/dwz.c: New file.
+	* Makefile.in (COMMON_SFILES): Add dwz.c.
+
+2020-03-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct dwz_file): Move to dwz.h.
+	* dwarf2/read.c: Add include.
+	* dwarf2/index-write.c: Add include.
+	* dwarf2/index-cache.c: Add include.
+	* dwarf2/dwz.h: New file.
+
+2020-03-25  Tom Tromey  <tom@tromey.com>
+
+	* compile/compile-object-load.c (get_out_value_type): Mention
+	correct symbol name in error message.
+
+2020-03-25  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-nat.c (windows_add_all_dlls): Fix system dll paths.
+
+2020-03-25  Tom de Vries  <tdevries@suse.de>
+
+	* symtab.h (is_main_symtab_of_compunit_symtab): New function.
+	* symmisc.c (dump_symtab_1): Print user and includes fields.
+	(maintenance_info_symtabs): Same.
+
+2020-03-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR gdb/25534
+	* riscv-tdep.c (riscv_arg_info::c_offset): Update comment.
+	(riscv_regcache_cooked_write): New function.
+	(riscv_push_dummy_call): Use new function.
+	(riscv_return_value): Likewise.
+
+2020-03-24  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* fbsd-nat.c (fbsd_nat_target::follow_fork): Change bool to int.
+	* fbsd-nat.h (class fbsd_nat_target) <follow_fork>: Likewise.
+	* inf-ptrace.c (inf_ptrace_target::follow_fork): Likewise.
+	* inf-ptrace.h (struct inf_ptrace_target) <follow_fork>: Likewise.
+	* infrun.c (follow_fork): Likewise.
+	(follow_fork_inferior): Likewise.
+	* linux-nat.c (linux_nat_target::follow_fork): Likewise.
+	* linux-nat.h (class linux_nat_target): Likewise.
+	* remote.c (class remote_target) <follow_fork>: Likewise.
+	(remote_target::follow_fork): Likewise.
+	* target-delegates.c: Re-generate.
+	* target.c (default_follow_fork): Likewise.
+	(target_follow_fork): Likewise.
+	* target.h (struct target_ops) <follow_fork>: Likewise.
+	(target_follow_fork): Likewise.
+
+2020-03-24  Tom de Vries  <tdevries@suse.de>
+
+	* psymtab.c (maintenance_info_psymtabs): Print user field.
+
+2020-03-20  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/loc.h (dwarf2_evaluate_property): Make "addr_stack"
+	const.
+	* dwarf2/loc.c (dwarf2_evaluate_property): Make "addr_stack"
+	const.
+
+2020-03-20  Simon Marchi  <simon.marchi@efficios.com>
+
+	* ptrace.m4: Don't check for ptrace declaration.
+	* config.in: Re-generate.
+	* configure: Re-generate.
+	* nat/gdb_ptrace.h: Don't declare ptrace if HAVE_DECL_PTRACE is
+	not defined.
+
+2020-03-20  Kamil Rytarowski  <n54@gmx.com>
+
+	* amd64-bsd-nat.c (gdb_ptrace): Change return type from `int' to
+	`PTRACE_TYPE_RET'.
+	* i386-bsd-nat.c (gdb_ptrace): Likewise.
+	* sparc-nat.c (gdb_ptrace): Likewise.
+	* x86-bsd-nat.c (gdb_ptrace): Likewise.
+
+2020-03-20  Tom Tromey  <tromey@adacore.com>
+
+	* c-exp.y (lex_one_token): Fix assert.
+
+2020-03-20  Tom Tromey  <tromey@adacore.com>
+
+	* ada-tasks.c (read_atcb): Use smaller length in strncpy call.
+	* linux-tdep.c (linux_fill_prpsinfo): Use smaller length in
+	strncpy call.
+
+2020-03-20  Tom Tromey  <tromey@adacore.com>
+
+	* symmisc.c (maintenance_print_one_line_table): Use ui_out.
+
+2020-03-20  Tom Tromey  <tromey@adacore.com>
+
+	* ada-valprint.c (print_variant_part): Remove parameters; switch
+	to value-based API.
+	(print_field_values): Likewise.
+	(ada_val_print_struct_union): Likewise.
+	(ada_value_print_1): Update.
+
+2020-03-20  Kamil Rytarowski  <n54@gmx.com>
+
+	* ppc-nbsd-nat.c (ppc_nbsd_nat_target): Inherit from
+	nbsd_nat_target instead of inf_ptrace_target.
+	* ppc-nbsd-nat.c: Include "nbsd-nat.h", as we are now using
+	nbsd_nat_target.
+
+2020-03-20  Kamil Rytarowski  <n54@gmx.com>
+
+	* hppa-nbsd-nat.c (fetch_registers): New variable lwp and pass
+	it to the ptrace call.
+	* (store_registers): Likewise.
+
+2020-03-20  Kamil Rytarowski  <n54@gmx.com>
+
+	* ppc-nbsd-nat.c (fetch_registers): New variable lwp and pass
+	it to the ptrace call.
+	* (store_registers): Likewise.
+
+2020-03-19  Luis Machado  <luis.machado@linaro.org>
+
+	* nat/aarch64-sve-linux-ptrace.c (aarch64_sve_set_vq): If vg is not
+	valid, fetch vg value from ptrace.
+
+2020-03-19  Kamil Rytarowski  <n54@gmx.com>
+	* inf-ptrace.h: Disable get_ptrace_pid on NetBSD.
+	* inf-ptrace.c: Likewise.
+	* (gdb_ptrace): Add.
+	* (inf_ptrace_target::resume): Update.
+	* (inf_ptrace_target::xfer_partial): Likewise.
+	* (inf_ptrace_peek_poke): Change argument `pid' to `ptid'.
+	* (inf_ptrace_peek_poke): Update.
+
+2020-03-19  Kamil Rytarowski  <n54@gmx.com>
+
+	* x86-bsd-nat.c (gdb_ptrace): New.
+	* (x86bsd_dr_set): Add new argument `ptid'.
+	* (x86bsd_dr_get, x86bsd_dr_set, x86bsd_dr_set_control,
+	x86bsd_dr_set_addr): Update.
+
+2020-03-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* remote.c (remote_target::process_stop_reply): Handle events for
+	all threads differently.
+
+2020-03-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* completer.c (completion_tracker::remove_completion): Define new
+	function.
+	* completer.h (completion_tracker::remove_completion): Declare new
+	function.
+	* symtab.c (completion_list_add_symbol): Remove aliasing msymbols
+	when adding a C++ function symbol.
+
+2020-03-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* completer.c (completion_tracker::completion_hash_entry): Define
+	new class.
+	(advance_to_filename_complete_word_point): Call
+	recompute_lowest_common_denominator.
+	(completion_tracker::completion_tracker): Call discard_completions
+	to setup the hash table.
+	(completion_tracker::discard_completions): Allow for being called
+	from the constructor, pass new equal function, and element deleter
+	when constructing the hash table.  Initialise new class member
+	variables.
+	(completion_tracker::maybe_add_completion): Remove use of
+	m_entries_vec, and store more information into m_entries_hash.
+	(completion_tracker::recompute_lcd_visitor): New function, most
+	content taken from...
+	(completion_tracker::recompute_lowest_common_denominator):
+	...here, this now just visits each item in the hash calling the
+	above visitor.
+	(completion_tracker::build_completion_result): Remove use of
+	m_entries_vec, call recompute_lowest_common_denominator.
+	* completer.h (completion_tracker::have_completions): Remove use
+	of m_entries_vec.
+	(completion_tracker::completion_hash_entry): Declare new class.
+	(completion_tracker::recompute_lowest_common_denominator): Change
+	function signature.
+	(completion_tracker::recompute_lcd_visitor): Declare new function.
+	(completion_tracker::m_entries_vec): Delete.
+	(completion_tracker::m_entries_hash): Initialize to NULL.
+	(completion_tracker::m_lowest_common_denominator_valid): New
+	member variable.
+	(completion_tracker::m_lowest_common_denominator_max_length): New
+	member variable.
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* regformats/regdef.h: Put reg in gdb namespace.
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* i386-bsd-nat.c (gdb_ptrace): New.
+	* (i386bsd_fetch_inferior_registers,
+	i386bsd_store_inferior_registers) Switch from pid_t to ptid_t.
+	* (i386bsd_fetch_inferior_registers,
+	i386bsd_store_inferior_registers) Use gdb_ptrace.
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* amd64-bsd-nat.c (gdb_ptrace): New.
+	* (amd64bsd_fetch_inferior_registers,
+	amd64bsd_store_inferior_registers) Switch from pid_t to ptid_t.
+	* (amd64bsd_fetch_inferior_registers,
+	amd64bsd_store_inferior_registers) Use gdb_ptrace.
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* user-regs.c (user_reg::read): Rename to...
+	(user_reg::xread): ...this.
+	* (append_user_reg): Rename argument `read' to `xread'.
+	* (user_reg_add_builtin): Likewise.
+	* (user_reg_add): Likewise.
+	* (value_of_user_reg): Likewise.
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* sparc-nat.c (gdb_ptrace): New.
+	* sparc-nat.c (sparc_fetch_inferior_registers)
+	(sparc_store_inferior_registers) Remove obsolete comment.
+	* sparc-nat.c (sparc_fetch_inferior_registers)
+	(sparc_store_inferior_registers) Switch from pid_t to ptid_t.
+	* sparc-nat.c (sparc_fetch_inferior_registers)
+	(sparc_store_inferior_registers) Use gdb_ptrace.
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* sh-nbsd-nat.c (fetch_registers): New variable lwp and pass
+	it to the ptrace call.
+	* sh-nbsd-nat.c (store_registers): Likewise.
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* sh-nbsd-nat.c (sh_nbsd_nat_target): Inherit from
+	nbsd_nat_target instead of inf_ptrace_target.
+	* sh-nbsd-nat.c: Include "nbsd-nat.h", as we are now using
+	nbsd_nat_target.
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* amd64-bsd-nat.c: Include amd64-bsd-nat.h".
+
+2020-03-17  Kamil Rytarowski  <n54@gmx.com>
+
+	* nbsd-nat.c: Include <sys/types.h>, <sys/ptrace.h> and
+	<sys/sysctl.h>.
+	* nbsd-nat.c (nbsd_nat_target::pid_to_exec_file): Rewrite.
+
+2020-03-17  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/23710
+	* dwarf2/read.h (struct dwarf2_per_cu_data): Add unit_type and lang
+	fields.
+	* dwarf2/read.c (process_psymtab_comp_unit): Initialize unit_type and lang
+	fields.
+	(process_imported_unit_die): Skip import of c++ CUs.
+
+2020-03-16  Tom Tromey  <tom@tromey.com>
+
+	* p-valprint.c (pascal_object_print_value): Initialize
+	base_value.
+
+2020-03-16  Anton Kolesov  <anton.kolesov@synopsys.com>
+	    Shahab Vahedi  <shahab@synopsys.com>
+
+	* Makefile.in: Add arch/arc.o
+	* configure.tgt: Likewise.
+	* arc-tdep.c (arc_tdesc_init): Use arc_read_description.
+	(_initialize_arc_tdep): Don't initialize old target descriptions.
+	(arc_read_description): New function to cache target descriptions.
+	* arc-tdep.h (arc_read_description): Add proto type.
+	* arch/arc.c: New file.
+	* arch/arc.h: Likewise.
+	* features/Makefile: Replace old target descriptions with new.
+	* features/arc-arcompact.c: Remove.
+	* features/arc-arcompact.xml: Likewise.
+	* features/arc-v2.c: Likewise
+	* features/arc-v2.xml: Likewise
+	* features/arc/aux-arcompact.xml: New file.
+	* features/arc/aux-v2.xml: Likewise.
+	* features/arc/core-arcompact.xml: Likewise.
+	* features/arc/core-v2.xml: Likewise.
+	* features/arc/aux-arcompact.c: Generate.
+	* features/arc/aux-v2.c: Likewise.
+	* features/arc/core-arcompact.c: Likewise.
+	* features/arc/core-v2.c: Likewise.
+	* target-descriptions (maint_print_c_tdesc_cmd): Support ARC features.
+
+2020-03-16  Tom Tromey  <tromey@adacore.com>
+
+	PR gdb/25663:
+	* dwarf2/read.c (dwarf2_name): Strip leading namespaces after
+	putting value into bcache.
+
+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	PR gdb/21500
+	* amd64-windows-tdep.c (amd64_windows_init_abi): Rename
+	to...
+	(amd64_windows_init_abi_common): ... this.  Don't set size of
+	long type.
+	(amd64_windows_init_abi): New function.
+	(amd64_cygwin_init_abi): New function.
+	(_initialize_amd64_windows_tdep): Use amd64_cygwin_init_abi for
+	the Cygwin OS ABI.
+	* i386-windows-tdep.c (_initialize_i386_windows_tdep): Clarify
+	comment.
+
+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* windows-tdep.h (is_linked_with_cygwin_dll): New declaration.
+	* windows-tdep.c (CYGWIN_DLL_NAME): New.
+	(pe_import_directory_entry): New struct type.
+	(is_linked_with_cygwin_dll): New function.
+	* amd64-windows-tdep.c (amd64_windows_osabi_sniffer): Select
+	GDB_OSABI_CYGWIN if the BFD is linked with the Cygwin DLL.
+	* i386-windows-tdep.c (i386_windows_osabi_sniffer): Likewise.
+
+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* i386-windows-tdep.c: Mass-rename "cygwin" to "windows", except
+	i386_cygwin_core_osabi_sniffer.
+
+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* i386-cygwin-tdep.c: Rename to...
+	* i386-windows-tdep.c: ... this.
+	* Makefile.in (ALL_TARGET_OBS): Rename i386-cygwin-tdep.c to
+	i386-windows-tdep.c.
+	* configure.tgt: Likewise.
+
+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* osabi.h (enum gdb_osabi): Add GDB_OSABI_WINDOWS.
+	* osabi.c (gdb_osabi_names): Add "Windows".
+	* i386-cygwin-tdep.c (i386_cygwin_osabi_sniffer): Return
+	GDB_OSABI_WINDOWS when the binary's target is "pei-i386".
+	(i386_cygwin_core_osabi_sniffer): New function, extracted from
+	i386_cygwin_osabi_sniffer.
+	(_initialize_i386_cygwin_tdep): Register OS ABI
+	GDB_OSABI_WINDOWS for i386.
+	* amd64-windows-tdep.c (amd64_windows_osabi_sniffer): Return
+	GDB_OSABI_WINDOWS when the binary's target is "pei-x86-64".
+	(_initialize_amd64_windows_tdep): Register OS ABI GDB_OSABI_WINDOWS
+	for x86-64.
+	* configure.tgt: Use GDB_OSABI_WINDOWS as the default OS ABI
+	when the target matches '*-*-mingw*'.
+
+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* defs.h (enum gdb_osabi): Move to...
+	* osabi.h (enum gdb_osabi): ... here.
+	* gdbarch.sh: Include osabi.h in gdbarch.h.
+	* gdbarch.h: Re-generate.
+
+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>
+
+	* amd64-windows-tdep.c (amd64_windows_osabi_sniffer): New
+	function.
+	(_initialize_amd64_windows_tdep): Register osabi sniffer.
+
+2020-03-14  Tom Tromey  <tom@tromey.com>
+
+	* c-typeprint.c (cp_type_print_method_args): Print "__restrict__"
+	for C++.
+	(c_type_print_modifier): Likewise.  Add "language" parameter.
+	(c_type_print_varspec_prefix, c_type_print_base_struct_union)
+	(c_type_print_base_1): Update.
+	* type-stack.h (enum type_pieces) <tp_atomic, tp_restrict>: New
+	constants.
+	* type-stack.c (type_stack::insert): Handle tp_atomic and
+	tp_restrict.
+	(type_stack::follow_type_instance_flags): Likewise.
+	(type_stack::follow_types): Likewise.  Merge type-following code.
+	* c-exp.y (RESTRICT, ATOMIC): New tokens.
+	(space_identifier, cv_with_space_id)
+	(const_or_volatile_or_space_identifier_noopt)
+	(const_or_volatile_or_space_identifier): Remove.
+	(single_qualifier, qualifier_seq_noopt, qualifier_seq): New
+	rules.
+	(ptr_operator, typebase): Update.
+	(enum token_flag) <FLAG_C>: New constant.
+	(ident_tokens): Add "restrict", "__restrict__", "__restrict", and
+	"_Atomic".
+	(lex_one_token): Handle FLAG_C.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* m68k-bsd-nat.c (fetch_registers): New variable lwp and pass
+	it to the ptrace call.
+	* m68k-bsd-nat.c (store_registers): Likewise.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* m68k-bsd-nat.c (m68kbsd_supply_gregset): Change type of regs to
+	gdb_byte *.
+	* m68k-bsd-nat.c (m68kbsd_supply_fpregset): Likewise.
+	* m68k-bsd-nat.c (m68kbsd_collect_gregset): Likewise.
+	* m68k-bsd-nat.c (m68kbsd_supply_pcb): Cast &tmp to gdb_byte *.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* m68k-bsd-nat.c (m68k_bsd_nat_target): Inherit from
+	nbsd_nat_target instead of inf_ptrace_target.
+	* m68k-bsd-nat.c: Include "nbsd-nat.h", as we are now using
+	nbsd_nat_target.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* m68k-bsd-nat.c: Define _KERNTYPES to get the declaration of
+	register_t.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* alpha-bsd-nat.c (fetch_registers): New variable lwp and pass
+	it to the ptrace call.
+	* alpha-bsd-nat.c (store_registers): Likewise.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* alpha-bsd-nat.c: Remove <sys/procfs.h> and "gregset.h" from
+	includes.
+	* alpha-bsd-nat.c (gregset_t, fpregset_t): Remove.
+	* alpha-bsd-nat.c (supply_gregset, fill_gregset, supply_fpregset,
+	fill_fpregset): Likewise.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* alpha-bsd-nat.c (alpha_netbsd_nat_target): Inherit from
+	nbsd_nat_target instead of inf_ptrace_target.
+	* alpha-bsd-nat.c: Include "nbsd-nat.h", as we are now using
+	nbsd_nat_target.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* alpha-bsd-nat.c: Define _KERNTYPES to get the declaration of
+	register_t.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* arm-nbsd-nat.c (fetch_register): New variable lwp and pass
+	it to the ptrace call.
+	* arm-nbsd-nat.c (fetch_fp_register): Likewise.
+	* arm-nbsd-nat.c (fetch_fp_regs): Likewise.
+	* arm-nbsd-nat.c (store_register): Likewise.
+	* arm-nbsd-nat.c (store_regs): Likewise.
+	* arm-nbsd-nat.c (store_fp_register): Likewise.
+	* arm-nbsd-nat.c (store_fp_regs): Likewise.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* arm-nbsd-nat.c (arm_netbsd_nat_target): Inherit from
+	nbsd_nat_target instead of inf_ptrace_target.
+	* arm-nbsd-nat.c: Include "nbsd-nat.h", as we are now using
+	nbsd_nat_target.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* x86-bsd-nat.c (x86bsd_dr_get): New variable lwp and pass
+	it to the ptrace call.
+	* x86-bsd-nat.c (x86bsd_dr_set): Likewise.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* vax-bsd-nat.c (vaxbsd_supply_gregset): New variable lwp and pass
+	it to the ptrace call.
+	* vax-bsd-nat.c (vaxbsd_collect_gregset): Likewise.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* vax-bsd-nat.c (vaxbsd_supply_gregset): Cast gregs to const
+	gdb_byte *.
+	* vax-bsd-nat.c (vaxbsd_collect_gregset): Cast gregs to void *.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* vax-bsd-nat.c (vax_bsd_nat_target): Inherit from nbsd_nat_target
+	instead of inf_ptrace_target.
+	* vax-bsd-nat.c: Include "nbsd-nat.h", as we are now using
+	nbsd_nat_target.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* mips-nbsd-nat.c: Define _KERNTYPES to get the declaration of
+	register_t.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* ppc-nbsd-nat.c: Define _KERNTYPES to get the declaration of
+	register_t.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* vax-bsd-nat.c: Define _KERNTYPES to get the declaration of
+	register_t.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* value.h (val_print): Don't declare.
+	* valprint.h (val_print_array_elements)
+	(val_print_scalar_formatted, generic_val_print): Don't declare.
+	* valprint.c (generic_val_print_array): Take a struct value.
+	(generic_val_print_ptr, generic_val_print_memberptr)
+	(generic_val_print_bool, generic_val_print_int)
+	(generic_val_print_char, generic_val_print_complex)
+	(generic_val_print): Remove.
+	(generic_value_print): Update.
+	(do_val_print): Remove unused parameters.  Don't call
+	la_val_print.
+	(val_print): Remove.
+	(common_val_print): Update.  Don't call value_check_printable.
+	(val_print_scalar_formatted, val_print_array_elements): Remove.
+	* rust-lang.c (rust_val_print): Remove.
+	(rust_language_defn): Update.
+	* p-valprint.c (pascal_val_print): Remove.
+	(pascal_value_print_inner): Update.
+	(pascal_object_print_val_fields, pascal_object_print_val):
+	Remove.
+	(pascal_object_print_static_field): Update.
+	* p-lang.h (pascal_val_print): Don't declare.
+	* p-lang.c (pascal_language_defn): Update.
+	* opencl-lang.c (opencl_language_defn): Update.
+	* objc-lang.c (objc_language_defn): Update.
+	* m2-valprint.c (m2_print_unbounded_array, m2_val_print): Remove.
+	* m2-lang.h (m2_val_print): Don't declare.
+	* m2-lang.c (m2_language_defn): Update.
+	* language.h (struct language_defn) <la_val_print>: Remove.
+	* language.c (unk_lang_value_print_inner): Rename.  Change
+	argument types.
+	(unknown_language_defn, auto_language_defn): Update.
+	* go-valprint.c (go_val_print): Remove.
+	* go-lang.h (go_val_print): Don't declare.
+	* go-lang.c (go_language_defn): Update.
+	* f-valprint.c (f_val_print): Remove.
+	* f-lang.h (f_value_print): Don't declare.
+	* f-lang.c (f_language_defn): Update.
+	* d-valprint.c (d_val_print): Remove.
+	* d-lang.h (d_value_print): Don't declare.
+	* d-lang.c (d_language_defn): Update.
+	* cp-valprint.c (cp_print_value_fields)
+	(cp_print_value_fields_rtti, cp_print_value): Remove.
+	(cp_print_static_field): Update.
+	* c-valprint.c (c_val_print_array, c_val_print_ptr)
+	(c_val_print_struct, c_val_print_union, c_val_print_int)
+	(c_val_print_memberptr, c_val_print): Remove.
+	* c-lang.h (c_val_print_array, cp_print_value_fields)
+	(cp_print_value_fields_rtti): Don't declare.
+	* c-lang.c (c_language_defn, cplus_language_defn)
+	(asm_language_defn, minimal_language_defn): Update.
+	* ada-valprint.c (ada_val_print_ptr, ada_val_print_num): Remove.
+	(ada_val_print_enum): Take a struct value.
+	(ada_val_print_flt, ada_val_print_array, ada_val_print_1)
+	(ada_val_print): Remove.
+	(ada_value_print_1): Update.
+	(printable_val_type): Remove.
+	* ada-lang.h (ada_val_print): Don't declare.
+	* ada-lang.c (ada_language_defn): Update.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (do_val_print): Update.
+	* python/python-internal.h (gdbpy_apply_val_pretty_printer): Take
+	a struct value.
+	(value_to_value_object_no_release): Declare.
+	* python/py-value.c (value_to_value_object_no_release): New
+	function.
+	* python/py-prettyprint.c (gdbpy_apply_val_pretty_printer): Take a
+	struct value.
+	* guile/scm-value.c (vlscm_scm_from_value_no_release): New
+	function.
+	* guile/scm-pretty-print.c (gdbscm_apply_val_pretty_printer): Take
+	a struct value.
+	* guile/guile-internal.h (vlscm_scm_from_value_no_release):
+	Declare.
+	(gdbscm_apply_val_pretty_printer): Take a struct value.
+	* extension.h (apply_ext_lang_val_pretty_printer): Take a struct
+	value.
+	* extension.c (apply_ext_lang_val_pretty_printer): Take a struct
+	value.
+	* extension-priv.h (struct extension_language_ops)
+	<apply_val_pretty_printer>: Take a struct value.
+	* cp-valprint.c (cp_print_value): Create a struct value.
+	(cp_print_value): Update.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (print_field_values): Call common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (val_print_packed_array_elements): Remove
+	bitoffset and val parameters.  Call common_val_print.
+	(ada_val_print_string): Remove offset, address, and original_value
+	parameters.
+	(ada_val_print_array): Update.
+	(ada_value_print_array): New function.
+	(ada_value_print_1): Call it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (ada_value_print): Use common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (ada_val_print_ref): Use common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (ada_value_print_num): New function.
+	(ada_value_print_1): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (ada_value_print_1) <TYPE_CODE_FLT>: Rewrite.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (ada_value_print_ptr): New function.
+	(ada_value_print_1): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (ada_val_print_gnat_array): Take a struct value;
+	call common_val_print.
+	(ada_val_print_1): Update.
+	(ada_value_print_1): New function.
+	(ada_value_print_inner): Rewrite.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* cp-valprint.c (cp_print_value_fields): Update.
+	(cp_print_value): New function.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* m2-valprint.c (m2_value_print_inner): Use
+	cp_print_value_fields.
+	* cp-valprint.c	(cp_print_value_fields): New function.
+	* c-valprint.c (c_value_print_struct): New function.
+	(c_value_print_inner): Use c_value_print_struct.
+	* c-lang.h (cp_print_value_fields): Declare.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* c-valprint.c (c_value_print_array): New function.
+	(c_value_print_inner): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* c-valprint.c (c_value_print_memberptr): New function.
+	(c_value_print_inner): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* c-valprint.c (c_value_print_int): New function.
+	(c_value_print_inner): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* c-valprint.c (c_value_print_ptr): New function.
+	(c_value_print_inner): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* c-valprint.c (c_value_print_inner): Rewrite.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_value_print_complex): New function.
+	(generic_value_print): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_val_print_float): Don't call
+	val_print_scalar_formatted.
+	(generic_val_print, generic_value_print): Update.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_value_print_char): New function
+	(generic_value_print): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_value_print_int): New function.
+	(generic_value_print): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_value_print_bool): New function.
+	(generic_value_print): Use it.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_val_print_func): Simplify.
+	(generic_val_print, generic_value_print): Update.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_val_print_flags): Remove.
+	(generic_val_print, generic_value_print): Update.
+	(val_print_type_code_flags): Add original_value parameter.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_val_print): Update.
+	(generic_value_print): Update.
+	* valprint.c (generic_val_print_enum): Don't call
+	val_print_scalar_formatted.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_value_print): Call generic_value_print_ptr.
+	* valprint.c (generic_value_print_ptr): New function.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_value_print): Rewrite.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* p-valprint.c (pascal_object_print_value_fields)
+	(pascal_object_print_value): New functions.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* p-valprint.c (pascal_value_print_inner): Rewrite.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* f-valprint.c (f_value_print_innner): Rewrite.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* m2-valprint.c (m2_print_unbounded_array): New overload.
+	(m2_print_unbounded_array): Update.
+	(m2_print_array_contents): Take a struct value.
+	(m2_value_print_inner): Rewrite.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* d-valprint.c (dynamic_array_type): Call d_value_print_inner.
+	(d_value_print_inner): New function.
+	* d-lang.h (d_value_print_inner): Declare.
+	* d-lang.c (d_language_defn): Use d_value_print_inner.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* go-valprint.c (go_value_print_inner): New function.
+	* go-lang.h (go_value_print_inner): Declare.
+	* go-lang.c (go_language_defn): Use go_value_print_inner.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* rust-lang.c (val_print_struct, rust_print_enum): Use the value
+	API.
+	(rust_val_print): Rewrite.
+	(rust_value_print_inner): New function, from rust_val_print.
+	(rust_language_defn): Use rust_value_print_inner.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* ada-valprint.c (ada_value_print_inner): New function.
+	* ada-lang.h (ada_value_print_inner): Declare.
+	* ada-lang.c (ada_language_defn): Use ada_value_print_inner.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* f-valprint.c (f_value_print_innner): New function.
+	* f-lang.h (f_value_print_innner): Declare.
+	* f-lang.c (f_language_defn): Use f_value_print_innner.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* p-valprint.c (pascal_value_print_inner): New function.
+	* p-lang.h (pascal_value_print_inner): Declare.
+	* p-lang.c (pascal_language_defn): Use pascal_value_print_inner.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* m2-valprint.c (m2_value_print_inner): New function.
+	* m2-lang.h (m2_value_print_inner): Declare.
+	* m2-lang.c (m2_language_defn): Use m2_value_print_inner.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* opencl-lang.c (opencl_language_defn): Use c_value_print_inner.
+	* objc-lang.c (objc_language_defn): Use c_value_print_inner.
+	* c-valprint.c (c_value_print_inner): New function.
+	* c-lang.h (c_value_print_inner): Declare.
+	* c-lang.c (c_language_defn, cplus_language_defn)
+	(asm_language_defn, minimal_language_defn): Use
+	c_value_print_inner.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* p-valprint.c (pascal_object_print_value_fields): Now static.
+	* p-lang.h (pascal_object_print_value_fields): Don't declare.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* c-valprint.c (c_val_print_array): Simplify.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (value_print_array_elements): New function.
+	* valprint.h (value_print_array_elements): Declare.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* printcmd.c (print_formatted): Use value_print_scalar_formatted.
+	* mips-tdep.c (mips_print_register): Use
+	value_print_scalar_formatted.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.h (value_print_scalar_formatted): Declare.
+	* valprint.c (value_print_scalar_formatted): New function.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.h (generic_value_print): Declare.
+	* valprint.c (generic_value_print): New function.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (do_val_print): Call la_value_print_inner, if
+	available.
+	* rust-lang.c (rust_language_defn): Update.
+	* p-lang.c (pascal_language_defn): Update.
+	* opencl-lang.c (opencl_language_defn): Update.
+	* objc-lang.c (objc_language_defn): Update.
+	* m2-lang.c (m2_language_defn): Update.
+	* language.h (struct language_defn) <la_value_print_inner>: New
+	member.
+	* language.c (unknown_language_defn, auto_language_defn): Update.
+	* go-lang.c (go_language_defn): Update.
+	* f-lang.c (f_language_defn): Update.
+	* d-lang.c (d_language_defn): Update.
+	* c-lang.c (c_language_defn, cplus_language_defn)
+	(asm_language_defn, minimal_language_defn): Update.
+	* ada-lang.c (ada_language_defn): Update.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* c-valprint.c (c_value_print): Use common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* cp-valprint.c (cp_print_static_field): Use common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* f-valprint.c (f77_print_array_1, f_val_print): Use
+	common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* riscv-tdep.c (riscv_print_one_register_info): Use
+	common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* mi/mi-main.c (output_register): Use common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* infcmd.c (default_print_one_register_info): Use
+	common_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.h (common_val_print_checked): Declare.
+	* valprint.c (common_val_print_checked): New function.
+	* stack.c (print_frame_arg): Use common_val_print_checked.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (do_val_print): New function, from val_print.
+	(val_print): Use do_val_print.
+	(common_val_print): Use do_val_print.
+
+2020-03-13  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (value_print): Use scoped_value_mark.
+
+2020-03-13  Tom de Vries  <tdevries@suse.de>
+
+	PR symtab/25646
+	* psymtab.c (partial_symtab::partial_symtab): Don't set
+	globals_offset and statics_offset.  Push element onto
+	current_global_psymbols and current_static_psymbols stacks.
+	(concat): New function.
+	(end_psymtab_common): Set globals_offset and statics_offset.  Pop
+	element from current_global_psymbols and current_static_psymbols
+	stacks.  Concat popped elements to global_psymbols and
+	static_symbols.
+	(add_psymbol_to_list): Use current_global_psymbols and
+	current_static_psymbols stacks.
+	* psymtab.h (class psymtab_storage): Add current_global_psymbols and
+	current_static_psymbols fields.
+
+2020-03-12  Christian Biesinger  <cbiesinger@google.com>
+
+	* corelow.c (sniff_core_bfd): Remove.
+	(class core_target) <m_core_vec>: Remove.
+	(core_target::core_target): Update.
+	(core_file_fns): Remove.
+	(deprecated_add_core_fns): Remove.
+	(default_core_sniffer): Remove.
+	(sniff_core_bfd): Remove.
+	(default_check_format): Remove.
+	(gdb_check_format): Remove.
+	(core_target_open): Update.
+	(core_target::get_core_register_section): Update.
+	(get_core_registers_cb): Update.
+	(core_target::fetch_registers): Update.
+	* gdbcore.h (struct core_fns): Remove.
+	(deprecated_add_core_fns): Remove.
+	(default_core_sniffer): Remove.
+	(default_check_format): Remove.
+
+2020-03-12  Tom Tromey  <tom@tromey.com>
+
+	* arm-tdep.c (struct arm_mapping_symbol) <value>: Now a
+	CORE_ADDR.
+	(struct arm_exidx_entry) <addr>: Now a CORE_ADDR.
+
+2020-03-12  Tom Tromey  <tom@tromey.com>
+
+	* remote.c (remote_target::download_tracepoint)
+	(remote_target::enable_tracepoint)
+	(remote_target::disable_tracepoint): Use phex, not sprintf_vma.
+	* breakpoint.c (print_recreate_masked_watchpoint): Use phex, not
+	sprintf_vma.
+
+2020-03-12  Tom Tromey  <tom@tromey.com>
+
+	* symfile-mem.c: Update CORE_ADDR size assert.
+
+2020-03-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* selftest.m4: Move to gdbsupport/.
+	* acinclude.m4: Update path to selftest.m4.
+
+2020-03-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* Makefile.in (SUBDIR_UNITTESTS_SRCS): Rename to...
+	(SELFTESTS_SRCS): ... this.  Add disasm-selftests.c,
+	gdbarch-selfselftests.c and selftest-arch.c.
+	(SUBDIR_UNITTESTS_OBS): Rename to...
+	(SELFTESTS_OBS): ... this.
+	(COMMON_SFILES): Remove disasm-selftests.c and
+	gdbarch-selftests.c.
+	* configure.ac: Don't add selftest-arch.{c,o} to
+	CONFIG_{SRCS,OBS}.
+	* disasm-selftests.c, gdbarch-selftests.c: Remove GDB_SELF_TEST
+	preprocessor conditions.
+
+2020-03-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure.ac: Don't source bfd/development.sh.
+	* selftest.m4: Modify comment.
+	* configure: Re-generate.
+
+2020-03-12  Simon Marchi  <simon.marchi@efficios.com>
+
+	* selftest.m4 (GDB_AC_SELFTEST): Error out if $development is
+	not "true" or "false".
+	* configure: Re-generate.
+
+2020-03-12  Christian Biesinger  <cbiesinger@google.com>
+
+	* Makefile.in (HFILES_NO_SRCDIR): Add new arm-nbsd-tdep.h file.
+	* arm-nbsd-nat.c (arm_supply_gregset): Moved to arm-nbsd-tdep and
+	renamed to arm_nbsd_supply_gregset.
+	(fetch_register): Update to call arm_nbsd_supply_gregset.
+	(fetch_regs): Remove in favor of fetch_register with a -1 regno.
+	(arm_netbsd_nat_target::fetch_registers): Update.
+	(fetch_elfcore_registers): Removed.
+	(_initialize_arm_netbsd_nat): Removed call to deprecated_add_core_fns.
+	* arm-nbsd-tdep.c (struct arm_nbsd_reg): New struct.
+	(arm_nbsd_supply_gregset): Moved from arm-nbsd-nat.c and updated to
+	not require NetBSD system headers.
+	(arm_nbsd_regset): New struct.
+	(arm_nbsd_iterate_over_regset_sections): New function.
+	(arm_netbsd_init_abi_common): Updated to call
+	set_gdbarch_iterate_over_regset_sections.
+	* arm-nbsd-tdep.h: New file.
+
+2020-03-11  Kevin Buettner  <kevinb@redhat.com>
+
+	* symtab.c (find_pc_sect_line): Add check which prevents infinite
+	recursion.
+	
+2020-03-11  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure: Re-generate.
+
+2020-03-11  Tom Tromey  <tromey@adacore.com>
+
+	* ada-typeprint.c (print_choices): Fix comment.
+
+2020-03-11  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* buildsyms.c (buildsym_compunit::record_line): Avoid accessing
+	previous item in the list, when the list has no items.
+
+2020-03-11  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/loc.c (dwarf2_evaluate_property): Handle NULL frame in
+	PROP_LOCLIST handling code.
+
+2020-03-10  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* buildsym-legacy.c (record_line): Pass extra parameter to
+	record_line.
+	* buildsym.c (buildsym_compunit::record_line): Take an extra
+	parameter, reduce duplication in the line table, and record the
+	is_stmt flag in the line table.
+	* buildsym.h (buildsym_compunit::record_line): Add extra
+	parameter.
+	* disasm.c (do_mixed_source_and_assembly_deprecated): Ignore
+	non-statement lines.
+	* dwarf2/read.c (dwarf_record_line_1): Add extra parameter, pass
+	this to the symtab builder.
+	(dwarf_finish_line): Pass extra parameter to dwarf_record_line_1.
+	(lnp_state_machine::record_line): Pass a suitable is_stmt flag
+	through to dwarf_record_line_1.
+	* infrun.c (process_event_stop_test): When stepping, don't stop at
+	a non-statement instruction, and only refresh the step info when
+	we land in the middle of a line's range.  Also add an extra
+	comment.
+	* jit.c (jit_symtab_line_mapping_add_impl): Initialise is_stmt
+	field.
+	* record-btrace.c (btrace_find_line_range): Only record lines
+	marked as is-statement.
+	* stack.c (frame_show_address): Show the frame address if we are
+	in a non-statement sal.
+	* symmisc.c (dump_symtab_1): Print the is_stmt flag.
+	(maintenance_print_one_line_table): Print a header for the is_stmt
+	column, and include is_stmt information in the output.
+	* symtab.c (find_pc_sect_line): Find lines marked as statements in
+	preference to non-statements.
+	(find_pcs_for_symtab_line): Prefer is-statement entries.
+	(find_line_common): Likewise.
+	* symtab.h (struct linetable_entry): Add is_stmt field.
+	(struct symtab_and_line): Likewise.
+	* xcoffread.c (arrange_linetable): Initialise is_stmt field when
+	arranging the line table.
+
+2020-03-07  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/read.c (read_typedef): Treat anonymous typedef as forwarder
+	DIE.
+
+2020-03-07  Tom Tromey  <tom@tromey.com>
+
+	* valops.c (value_literal_complex): Remove obsolete comment.
+	* gdbtypes.h (enum type_code) <TYPE_CODE_FLT>: Remove obsolete
+	comment.
+
+2020-03-06  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infrun.h: Forward-declare thread_info.
+	(set_step_info): Add thread_info parameter, add doc.
+	* infrun.c (set_step_info): Add thread_info parameter, move doc
+	to header.
+	* infrun.c (process_event_stop_test): Pass thread to
+	set_step_info call.
+	* infcmd.c (set_step_frame): Add thread_info pointer, pass it to
+	set_step_info.
+	(prepare_one_step): Add thread_info parameter, pass it to
+	set_step_frame and prepare_one_step (recursive) call.
+	(step_1): Pass thread to prepare_one_step call.
+	(step_command_fsm::should_stop): Pass thread to
+	prepare_one_step.
+	(until_next_fsm): Pass thread to set_step_frame call.
+	(finish_command): Pass thread to set_step_info call.
+
+2020-03-06  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-tdep.c (windows_solib_create_inferior_hook):
+	Check if inferior is running.
+
+2020-03-06  Tom de Vries  <tdevries@suse.de>
+
+	* NEWS: Fix "the the".
+	* ctfread.c: Same.
+
+2020-03-06  Tom de Vries  <tdevries@suse.de>
+
+	* psymtab.c (psymtab_to_symtab): Don't print "done.".
+
+2020-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* .dir-locals.el: Add a comment referencing the other copies of
+	this file.
+
+2020-03-05  John Baldwin  <jhb@FreeBSD.org>
+
+	* fbsd-tdep.c (fbsd_make_corefile_notes): Use std::string for
+	psargs.
+
+2020-03-05  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* .gitattributes: New file.
+
+2020-03-04  Tom Tromey  <tom@tromey.com>
+
+	* symmisc.c (print_symbol_bcache_statistics)
+	(print_objfile_statistics): Update.
+	* symfile.c (allocate_symtab): Use intern.
+	* psymtab.c (partial_symtab::partial_symtab): Use intern.
+	* objfiles.h (struct objfile_per_bfd_storage) <filename_cache,
+	macro_cache>: Remove.
+	<string_cache>: New member.
+	(struct objfile) <intern>: New methods.
+	* elfread.c (elf_symtab_read): Use intern.
+	* dwarf2/read.c (fixup_go_packaging): Intern package name.
+	(dwarf2_compute_name, dwarf2_physname)
+	(create_dwo_unit_in_dwp_v1, create_dwo_unit_in_dwp_v2): Intern
+	names.
+	(guess_partial_die_structure_name): Update.
+	(partial_die_info::fixup): Intern name.
+	(dwarf2_canonicalize_name): Change parameter to objfile.  Intern
+	name.
+	(dwarf2_name): Intern name.  Update.
+	* buildsym.c (buildsym_compunit::get_macro_table): Use
+	string_cache.
+
+2020-03-04  Tom Tromey  <tom@tromey.com>
+
+	* jit.c (bfd_open_from_target_memory): Make "target" const.
+	* corefile.c (gnutarget): Now const.
+	* gdbcore.h (gnutarget): Now const.
+
+2020-03-04  Hannes Domani  <ssbssa@yahoo.de>
+
+	* NEWS: Mention support for WOW64 processes.
+	* amd64-windows-nat.c (amd64_mappings): Rename and remove static.
+	(amd64_windows_segment_register_p): Remove static.
+	(_initialize_amd64_windows_nat): Update.
+	* configure.nat <windows> (NATDEPFILES): Add i386-windows-nat.o.
+	* i386-windows-nat.c (context_offset): Update.
+	(i386_mappings): Rename and remove static.
+	(i386_windows_segment_register_p): Remove static.
+	(_initialize_i386_windows_nat): Update.
+	* windows-nat.c (STATUS_WX86_BREAKPOINT): New macro.
+	(STATUS_WX86_SINGLE_STEP): New macro.
+	(EnumProcessModulesEx): New macro.
+	(Wow64SuspendThread): New macro.
+	(Wow64GetThreadContext): New macro.
+	(Wow64SetThreadContext): New macro.
+	(Wow64GetThreadSelectorEntry): New macro.
+	(windows_set_context_register_offsets): Add static.
+	(windows_set_segment_register_p): Likewise.
+	(windows_add_thread): Adapt for WOW64 processes.
+	(windows_fetch_one_register): Likewise.
+	(windows_nat_target::fetch_registers): Likewise.
+	(windows_store_one_register): Likewise.
+	(display_selector): Likewise.
+	(display_selectors): Likewise.
+	(handle_exception): Likewise.
+	(windows_continue): Likewise.
+	(windows_nat_target::resume): Likewise.
+	(windows_add_all_dlls): Likewise.
+	(do_initial_windows_stuff): Likewise.
+	(windows_nat_target::attach): Likewise.
+	(windows_get_exec_module_filename): Likewise.
+	(windows_nat_target::create_inferior): Likewise.
+	(windows_xfer_siginfo): Likewise.
+	(_initialize_loadable): Initialize Wow64SuspendThread,
+	Wow64GetThreadContext, Wow64SetThreadContext,
+	Wow64GetThreadSelectorEntry and EnumProcessModulesEx.
+	* windows-nat.h (windows_set_context_register_offsets):
+	Remove declaration.
+	(windows_set_segment_register_p): Likewise.
+	(i386_windows_segment_register_p): Add declaration.
+	(amd64_windows_segment_register_p): Likewise.
+
+2020-03-04  Luis Machado  <luis.machado@linaro.org>
+
+	Revert aa66aac47b4dd38f9524ddb5546c08cc09930d37 due to regressions
+	in "info registers" for AArch64/ARM.
+
+	The change caused "info registers" to not print GPR's.
+
+	gdb/ChangeLog:
+
+	2020-02-01  Shahab Vahedi  <shahab@synopsys.com>
+
+	* target-descriptions.c (tdesc_register_in_reggroup_p): Return 0
+	when reg->group is empty and reggroup is not.
+
+2020-03-03  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/frame.c (struct dwarf2_frame_cache)
+	<checked_tailcall_bottom, entry_cfa_sp_offset,
+	entry_cfa_sp_offset_p>: Remove members.
+	(dwarf2_frame_cache): Call dwarf2_tailcall_sniffer_first.
+	(dwarf2_frame_prev_register): Don't call
+	dwarf2_tailcall_sniffer_first.
+	(dwarf2_append_unwinders): Don't append tailcall unwinder.
+	* frame-unwind.c (add_unwinder): New fuction.
+	(frame_unwind_init): Use it.  Add tailcall unwinder.
+
+2020-03-03  Andrew Burgess  <andrew.burgess@embecosm.com>
+	    Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+
+	* f-valprint.c (f_val_print): Handle TYPE_CODE_BOOL, any non-zero
+	value should be printed as true.
+
+2020-03-03  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-tdep.c (windows_solib_create_inferior_hook): New function.
+	(windows_init_abi): Set and use windows_so_ops.
+
+2020-03-03  Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* printcmd.c (print_c_string): Check also for TYPE_CODE_PTR
+	when verifying if dealing with a convenience variable.
+
+2020-03-03  Luis Machado  <luis.machado@linaro.org>
+
+	* auxv.c (default_print_auxv_entry): Add new AUXV entries.
+
+2020-03-02  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* infrun.c (gdbarch_supports_displaced_stepping): New.
+	(use_displaced_stepping): Break up conditions in smaller pieces.
+	Use gdbarch_supports_displaced_stepping.
+	(displaced_step_prepare_throw): Use
+	gdbarch_supports_displaced_stepping.
+
+2020-03-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* NEWS: Mention new behaviour of the history filename.
+	* top.c (write_history_p): Add comment.
+	(show_write_history_p): Add header comment, give a different
+	message when history writing is on, but the history filename is
+	empty.
+	(history_filename): Add comment.
+	(history_filename_empty): New function.
+	(show_history_filename): Add header comment, give a different
+	message when the filename is empty.
+	(init_history): Compare history_filename against nullptr, and only
+	read history if the filename is not empty.
+	(set_history_filename): Add header comment, and only make
+	non-empty filenames absolute.
+	(init_main): Make the filename argument to 'set history filename'
+	optional.
+
+2020-03-02  Christian Biesinger  <cbiesinger@google.com>
+
+	* arm-nbsd-nat.c (arm_supply_fparegset): Rename to...
+	(arm_supply_vfpregset): ...this, and update to use VFP registers.
+	(fetch_fp_register): Update.
+	(fetch_fp_regs): Update.
+	(store_fp_register): Update.
+	(store_fp_regs): Update.
+	(arm_netbsd_nat_target::read_description): New function.
+	(fetch_elfcore_registers): Update.
+
+2020-03-02  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* remote.c (remote_target::remote_parse_stop_reply): Don't use the
+	general_thread if the stop reply is missing a thread-id.
+	(remote_target::process_stop_reply): Use the first non-exited
+	thread if the target didn't pass a thread-id.
+	* infrun.c (do_target_wait): Move call to
+	switch_to_inferior_no_thread to ....
+	(do_target_wait_1): ... here.
+
+2020-02-29  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* debuginfod-support.c: Include defs.h first.
+
+2020-02-28  Tom de Vries  <tdevries@suse.de>
+
+	* symfile.c (set_initial_language): Use default language for lookup.
+
+2020-02-28  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (cutu_reader::init_tu_and_read_dwo_dies): Remove
+	reader variable, pass `this` to read_cutu_die_from_dwo.
+
+2020-02-27  Aaron Merey  <amerey@redhat.com>
+
+	* source.c (open_source_file): Check for nullptr when computing
+	srcpath.
+
+2020-02-27  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/read.c (struct field_info) <nfields>: Now a method, not a
+	member.
+	(dwarf2_add_field): Don't update nfields.
+	(dwarf2_attach_fields_to_type, process_structure_scope): Update.
+
+2020-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbtypes.c (create_array_type_with_stride): Use std::abs not
+	abs.
+
+2020-02-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (struct dwarf2_include_psymtab): New.
+	(dwarf2_create_include_psymtab): Use dwarf2_include_psymtab.
+	(dwarf2_psymtab::expand_psymtab, dwarf2_psymtab::readin_p)
+	(dwarf2_psymtab::get_compunit_symtab): Remove null checks for
+	per_cu_data.
+
+2020-02-26  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/index-write.c (psym_index_map): Change type.
+	(add_address_entry_worker, write_one_signatured_type)
+	(recursively_count_psymbols, recursively_write_psymbols)
+	(class debug_names, psyms_seen_size, write_gdbindex)
+	(write_debug_names): Use partial_symtab, not dwarf2_psymtab.
+
+2020-02-26  Aaron Merey  <amerey@redhat.com>
+
+	* Makefile.in: Handle optional debuginfod support.
+	* NEWS: Update.
+	* README: Add --with-debuginfod summary.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* configure.ac: Handle optional debuginfod support.
+	* debuginfod-support.c: debuginfod helper functions.
+	* debuginfod-support.h: Ditto.
+	* doc/gdb.texinfo: Add --with-debuginfod to configure options
+	summary.
+	* dwarf2/read.c (dwarf2_get_dwz_file): Query debuginfod servers
+	when a dwz file cannot be found.
+	* elfread.c (elf_symfile_read): Query debuginfod servers when a
+	debuginfo file cannot be found.
+	* source.c (open_source_file): Query debuginfod servers when a
+	source file cannot be found.
+	* top.c (print_gdb_configuration): Include
+	--{with,without}-debuginfod in the output.
+
+2020-02-26  Jérémie Galarneau  <jeremie.galarneau@efficios.com>
+
+	* thread.c (thr_try_catch_cmd): Print thread name.
+
+2020-02-26  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/loc.h (dwarf2_fetch_die_loc_sect_off,
+	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
+	dwarf2_fetch_die_type_sect_off): Move to...
+	* dwarf2/read.h (dwarf2_fetch_die_loc_sect_off,
+	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
+	dwarf2_fetch_die_type_sect_off): ... here.
+	* dwarf2/read.c (dwarf2_fetch_die_loc_sect_off,
+	dwarf2_fetch_die_loc_cu_off, dwarf2_fetch_constant_bytes,
+	dwarf2_fetch_die_type_sect_off): Move doc to header file.
+
+2020-02-26  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/25603
+	* symfile.c (set_initial_language): Exit-early if
+	language_mode == language_mode_manual.
+
+2020-02-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* dwarf2/loc.h (dwarf2_read_addr_index): Move...
+	* dwarf2/read.h (dwarf2_read_addr_index): ... here.
+	* dwarf2/read.c (dwarf2_read_addr_index): Move doc to header.
+
+2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* gdbtypes.c (create_array_type_with_stride): Handle negative
+	array strides.
+	* valarith.c (value_subscripted_rvalue): Likewise.
+
+2020-02-25  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-tdep.c (aarch64_vnv_type): Fix comment typo.
+
+2020-02-25  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* loc.h (dwarf2_get_die_type): Move to...
+	* read.h (dwarf2_get_die_type): ... here.
+	* read.c (dwarf2_get_die_type): Move doc to header.
+
+2020-02-25  Joel Brobecker  <brobecker@adacore.com>
+
+	* copypright.py (EXCLUDE_LIST): Add 'gnulib/config.in' and
+	'gnulib/Makefile.in' to the list.
+
+2020-02-24  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct type_unit_unshareable) <num_symtabs>:
+	Remove.
+	* dwarf2/read.c (dwarf2_cu::setup_type_unit_groups): Use
+	XOBNEWVEC.
+
+2020-02-24  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct dwarf2_per_cu_data) <type_unit_group_p>:
+	New method.
+	* dwarf2/read.c (IS_TYPE_UNIT_GROUP): Remove.
+	(dw2_do_instantiate_symtab, dw2_get_file_names)
+	(build_type_psymtab_dependencies, load_full_type_unit): Update.
+
+2020-02-24  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (dwarf2_build_psymtabs_hard): Use
+	make_scoped_restore.
+	(dwarf2_psymtab::read_symtab): Don't clear
+	reading_partial_symbols.
+
+2020-02-24  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/25592
+	* stack.c (iterate_over_block_locals): Handle LOC_CONST.
+
+2020-02-24  Tom de Vries  <tdevries@suse.de>
+
+	* tui/tui-layout.c (_initialize_tui_layout): Fix help messages for
+	commands layout next/prev/regs.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/loc.h (dwarf2_compile_expr_to_ax): Don't declare.
+	* dwarf2/loc.c (dwarf2_compile_expr_to_ax): Now static.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.h (TUI_DISASM_WIN): Cast to tui_disasm_window.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (_initialize_tui_win): Add usage text.
+	* tui/tui-stack.c (_initialize_tui_stack): Add usage text.
+	* tui/tui-regs.c (_initialize_tui_regs): Add usage text.
+	* tui/tui.c (_initialize_tui): Add usage text.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_set_focus_command)
+	(tui_set_win_height_command): Use error_no_arg.
+	(_initialize_tui_win): Update help text.
+	(FOCUS_USAGE, WIN_HEIGHT_USAGE): Don't define.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (extract_display_start_addr): Rewrite.
+	* tui/tui-disasm.h (struct tui_disasm_window)
+	<display_start_addr>: Declare.
+	* tui/tui-source.h (struct tui_source_window)
+	<display_start_addr>: Declare.
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<show_source_line, display_start_addr>: New methods.
+	<m_horizontal_offset, m_start_line_or_addr, m_gdbarch, m_content>:
+	Rename and move to protected section.
+	* tui/tui-winsource.c (tui_source_window_base::update_source_window)
+	(tui_source_window_base::do_erase_source_content): Update.
+	(tui_source_window_base::show_source_line): Now a method.
+	(tui_source_window_base::show_source_content)
+	(tui_source_window_base::tui_source_window_base)
+	(tui_source_window_base::rerender)
+	(tui_source_window_base::refill)
+	(tui_source_window_base::do_scroll_horizontal)
+	(tui_source_window_base::set_is_exec_point_at)
+	(tui_source_window_base::update_breakpoint_info)
+	(tui_source_window_base::update_exec_info): Update.
+	* tui/tui-source.c (tui_source_window::set_contents)
+	(tui_source_window::showing_source_p)
+	(tui_source_window::do_scroll_vertical)
+	(tui_source_window::location_matches_p)
+	(tui_source_window::line_is_displayed): Update.
+	(tui_source_window::display_start_addr): New method.
+	* tui/tui-disasm.c (tui_disasm_window::set_contents)
+	(tui_disasm_window::do_scroll_vertical)
+	(tui_disasm_window::location_matches_p): Update.
+	(tui_disasm_window::display_start_addr): New method.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Add entry for gdb.register_window_type.
+	* tui/tui-layout.h (window_factory): New typedef.
+	(tui_register_window): Declare.
+	* tui/tui-layout.c (saved_tui_windows): New global.
+	(tui_apply_current_layout): Use it.
+	(tui_register_window): New function.
+	* python/python.c (do_start_initialization): Call
+	gdbpy_initialize_tui.
+	(python_GdbMethods): Add "register_window_type" function.
+	* python/python-internal.h (gdbpy_register_tui_window)
+	(gdbpy_initialize_tui): Declare.
+	* python/py-tui.c: New file.
+	* Makefile.in (SUBDIR_PYTHON_SRCS): Add py-tui.c.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-io.c (do_tui_putc): Don't omit annotations.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_set_win_focus_to): Move to tui-data.c.
+	* tui/tui-data.h (tui_set_win_with_focus): Don't declare.
+	* tui/tui-data.c (tui_set_win_with_focus): Remove.
+	(tui_set_win_focus_to): Move from tui-win.c.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.c (make_standard_window, get_locator_window): New
+	functions.
+	(known_window_types): New global.
+	(tui_get_window_by_name): Reimplement.
+	(initialize_known_windows): New function.
+	(validate_window_name): Rewrite.
+	(_initialize_tui_layout): Call initialize_known_windows.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.h (enum tui_win_type) <LOCATOR_WIN, DATA_ITEM_WIN>:
+	Remove constants.
+	* tui/tui-winsource.h (struct tui_source_window_base)
+	<tui_source_window_base>: Remove parameter.
+	* tui/tui-winsource.c
+	(tui_source_window_base::tui_source_window_base): Remove
+	parameter.
+	(tui_source_window_base::refill): Update.
+	* tui/tui-stack.h (struct tui_locator_window)
+	<tui_locator_window>: Update.
+	* tui/tui-source.h (struct tui_source_window) <tui_source_window>:
+	Default the constructor.
+	* tui/tui-regs.h (struct tui_data_item_window)
+	<tui_data_item_window>: Default the constructor.
+	(struct tui_data_window) <tui_data_window>: Likewise.
+	* tui/tui-disasm.h (struct tui_disasm_window) <tui_disasm_window>:
+	Default the constructor.
+	* tui/tui-data.h (struct tui_gen_win_info) <tui_gen_win_info>:
+	Default the constructor.
+	<type>: Remove.
+	(struct tui_win_info) <tui_win_info>: Default the constructor.
+	* tui/tui-data.c (tui_win_info::tui_win_info): Remove.
+	* tui/tui-command.h (struct tui_cmd_window) <tui_cmd_window>:
+	Default the constructor.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.h (tui_make_all_invisible): Don't declare.
+	* tui/tui-wingeneral.c (tui_make_all_invisible): Remove.
+	* tui/tui-win.c (tui_resize_all): Don't call
+	tui_delete_invisible_windows.
+	* tui/tui-layout.c (tui_apply_current_layout): Delete windows when
+	done.
+	(tui_set_layout): Update.
+	(tui_add_win_to_layout): Don't call tui_delete_invisible_windows.
+	* tui/tui-data.h (tui_delete_invisible_windows): Don't declare.
+	* tui/tui-data.c (tui_delete_invisible_windows): Remove.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-win.c (tui_partial_win_by_name): Handle ambiguity
+	correctly.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-data.c (tui_next_win, tui_prev_win): Reimplement.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.h (struct tui_source_window_iterator)
+	<inner_iterator>: New etytypedef.
+	<tui_source_window_iterator>: Take "end" parameter.
+	<tui_source_window_iterator>: Take iterator.
+	<operator*, advance>: Update.
+	<m_iter>: Change type.
+	<m_end>: New field.
+	(struct tui_source_windows) <begin, end>: Update.
+	* tui/tui-layout.c (tui_windows): New global.
+	(tui_apply_current_layout): Clear tui_windows.
+	(tui_layout_window::apply): Update tui_windows.
+	* tui/tui-data.h (tui_windows): Declare.
+	(all_tui_windows): Now inline function.
+	(class tui_window_iterator, struct all_tui_windows): Remove.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	PR tui/17850:
+	* tui/tui-win.c (tui_gen_win_info::max_width): New method.
+	* tui/tui-layout.h (class tui_layout_base) <get_sizes>: Add
+	"height" argument.
+	(class tui_layout_window) <get_sizes>: Likewise.
+	(class tui_layout_split) <tui_layout_split>: Add "vertical"
+	argument.
+	<get_sizes>: Add "height" argument.
+	<m_vertical>: New field.
+	* tui/tui-layout.c (tui_layout_split::clone): Update.
+	(tui_layout_split::get_sizes): Add "height" argument.
+	(tui_layout_split::adjust_size, tui_layout_split::apply): Update.
+	(tui_new_layout_command): Parse "-horizontal".
+	(_initialize_tui_layout): Update help string.
+	(tui_layout_split::specification): Add "-horizontal" when needed.
+	* tui/tui-layout.c (tui_layout_window::get_sizes): Add "height"
+	argument.
+	* tui/tui-data.h (struct tui_gen_win_info) <max_width, min_width>:
+	New methods.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.h (enum tui_adjust_result): New.
+	(class tui_layout_base) <adjust_size>: Return tui_adjust_result.
+	(class tui_layout_window) <adjust_size>: Return
+	tui_adjust_result.  Rewrite.
+	(class tui_layout_split) <adjust_size>: Return tui_adjust_result.
+	* tui/tui-layout.c (tui_layout_split::adjust_size): Update.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.h (class tui_layout_split) <add_split>: Change
+	parameter and return types.
+	(class tui_layout_base) <specification>: Add "depth".
+	(class tui_layout_window) <specification>: Add "depth".
+	(class tui_layout_split) <specification>: Add "depth".
+	* tui/tui-layout.c (tui_layout_split::add_split): Change parameter
+	and return types.
+	(tui_new_layout_command): Parse sub-layouts.
+	(_initialize_tui_layout): Update help string.
+	(tui_layout_window::specification): Add "depth".
+	(add_layout_command): Update.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* NEWS: Add "tui new-layout" item.
+	* tui/tui-layout.c (add_layout_command): Return cmd_list_element.
+	Add new-layout command to help text.
+	(validate_window_name): New function.
+	(tui_new_layout_command): New function.
+	(_initialize_tui_layout): Register "new-layout".
+	(tui_layout_window::specification): New method.
+	(tui_layout_window::specification): New method.
+	* tui/tui-layout.h (class tui_layout_base) <specification>: New
+	method.
+	(class tui_layout_window) <specification>: New method.
+	(class tui_layout_split) <specification>: New method.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_enable): Call tui_set_initial_layout.
+	* tui/tui-win.c (window_name_completer): Update comment.
+	* tui/tui-layout.h (class tui_layout_base) <replace_window>:
+	Declare method.
+	(class tui_layout_window) <replace_window>: Likewise.
+	(class tui_layout_split) <replace_window>: Likewise.
+	(tui_set_layout): Don't declare.
+	(tui_set_initial_layout): Declare function.
+	* tui/tui-layout.c (layouts, applied_skeleton, src_regs_layout)
+	(asm_regs_layout): New globals.
+	(tui_current_layout, show_layout): Remove.
+	(tui_set_layout, tui_add_win_to_layout): Rewrite.
+	(find_layout, tui_apply_layout): New function.
+	(layout_completer): Remove.
+	(tui_next_layout): Reimplement.
+	(tui_next_layout_command): New function.
+	(tui_set_initial_layout, tui_prev_layout_command): New functions.
+	(tui_regs_layout): Reimplement.
+	(tui_regs_layout_command): New function.
+	(extract_display_start_addr): Rewrite.
+	(next_layout, prev_layout): Remove.
+	(tui_layout_window::replace_window): New method.
+	(tui_layout_split::replace_window): New method.
+	(destroy_layout): New function.
+	(layout_list): New global.
+	(add_layout_command): New function.
+	(initialize_layouts): Update.
+	(tui_layout_command): New function.
+	(_initialize_tui_layout): Install "layout" commands.
+	* tui/tui-data.h (enum tui_layout_type): Remove.
+	(tui_current_layout): Don't declare.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_reg_layout): Remove.
+	(tui_reg_command): Use tui_regs_layout.
+	* tui/tui-layout.h (tui_reg_command): Declare.
+	* tui/tui-layout.c (tui_reg_command): New function.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_rl_delete_other_windows): Call
+	tui_remove_some_windows.
+	* tui/tui-layout.h (class tui_layout_base) <remove_windows>:
+	Declare method.
+	(class tui_layout_window) <remove_windows>: New method.
+	(class tui_layout_split) <remove_windows>: Declare.
+	(tui_remove_some_windows): Declare.
+	* tui/tui-layout.c (tui_remove_some_windows): New function.
+	(tui_layout_split::remove_windows): New method.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_rl_change_windows): Call tui_next_layout.
+	* tui/tui-layout.h (tui_next_layout): Declare.
+	* tui/tui-layout.c (tui_next_layout): New function.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-regs.c (tui_data_window::display_registers_from): Use
+	correct coordinates.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-layout.h (tui_add_win_to_layout): Add comment.
+	* tui/tui-layout.c (tui_add_win_to_layout): Add assert.  Remove
+	DATA_WIN case.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-disasm.c (tui_get_low_disassembly_address): Use
+	TUI_DISASM_WIN, not tui_win_list.
+
+2020-02-22  Tom Tromey  <tom@tromey.com>
+
+	* valprint.c (generic_val_print_enum_1)
+	(val_print_type_code_flags): Style member names.
+	* rust-lang.c (val_print_struct, rust_print_enum)
+	(rust_print_struct_def, rust_internal_print_type): Style member
+	names.
+	* p-valprint.c (pascal_object_print_value_fields): Style member
+	names.  Only call fprintf_symbol_filtered for static members.
+	* m2-typeprint.c (m2_record_fields, m2_enum): Style member names.
+	* f-valprint.c (f_val_print): Style member names.
+	* f-typeprint.c (f_type_print_base): Style member names.
+	* cp-valprint.c (cp_print_value_fields): Style member names.  Only
+	call fprintf_symbol_filtered for static members.
+	(cp_print_class_member): Style member names.
+	* c-typeprint.c (c_print_type_1, c_type_print_base_1): Style
+	member names.
+	* ada-valprint.c (ada_print_scalar): Style enum names.
+	(ada_val_print_enum): Likewise.
+	* ada-typeprint.c (print_enum_type): Style enum names.
+
+2020-02-21  Tom Tromey  <tom@tromey.com>
+
+	* psympriv.h (struct partial_symtab): Update comment.
+
+2020-02-21  Tom Tromey  <tromey@adacore.com>
+
+	* mips-tdep.h (mips_pc_is_mips16, mips_pc_is_micromips): Parameter
+	type is CORE_ADDR.
+
+2020-02-21  Tom de Vries  <tdevries@suse.de>
+
+	PR gdb/25534
+	* psymtab.c (partial_symtab::read_dependencies): Don't read dependency
+	if dependencies[i]->user != NULL.
+
+2020-02-21  Ali Tamur  <tamur@google.com>
+
+	* dwarf2/read.c (dwarf2_name): Add null check.
+
+2020-02-20  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf2_find_containing_comp_unit): Use ">", not
+	">=", in binary search.
+	(dwarf2_find_containing_comp_unit): New overload.
+	(run_test): New self-test.
+	(_initialize_dwarf2_read): Register new test.
+
+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-tdep.c: Updated since the DECLARE_CSR is changed.
+	* riscv-tdep.h: Likewise.
+	* features/riscv/rebuild-csr-xml.sh: Generate the 64bit-csr.xml without
+	rv32-only CSR.
+	* features/riscv/64bit-csr.xml: Regenerated.
+
+2020-02-20  Sergio Durigan Junior  <sergiodj@redhat.com>
+	    Tom Tromey  <tom@tromey.com>
+
+	* utils.c (fputs_maybe_filtered): Call 'stream->puts' instead
+	of 'fputc_unfiltered'.
+	(putchar_unfiltered): Call 'fputc_unfiltered'.
+	(fputc_unfiltered): Call 'fputs_unfiltered'.
+
+2020-02-20  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* config.in: Regenerate.
+	* configure: Regenerate.
+	* configure.ac: Add --with-python-libdir option.
+	* main.c: Use WITH_PYTHON_LIBDIR.
+
+2020-02-19  Tom Tromey  <tom@tromey.com>
+
+	* symtab.c (general_symbol_info::compute_and_set_names): Use
+	obstack_strndup.  Simplify call to symbol_set_demangled_name.
+
+2020-02-19  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (allocate_signatured_type_table,
+	allocate_dwo_unit_table, allocate_type_unit_groups_table,
+	allocate_dwo_file_hash_table, allocate_dwp_loaded_cutus_table):
+	Remove objfile parameter, update all callers.
+
+2020-02-19  Doug Evans  <dje@google.com>
+
+	PR rust/25535
+	* rust-lang.c (rust_print_enum): Apply embedded_offset to
+	rust_enum_variant calculation.
+
+2020-02-19  Tom Tromey  <tromey@adacore.com>
+
+	* mips-tdep.h (mips_pc_is_mips): Parameter type is CORE_ADDR.
+
+2020-02-19  Tom Tromey  <tromey@adacore.com>
+
+	* ada-lang.c (cache_symbol): Use obstack_strdup.
+
+2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* configure: Regenerate.
+
+2020-02-19  Tom Tromey  <tromey@adacore.com>
+
+	* python/python.c (do_start_initialization): Use XNEWVEC.  Remove
+	NULL check.
+
+2020-02-19  Maciej W. Rozycki  <macro@wdc.com>
+
+	* NEWS: Mention RISC-V GNU/Linux GDBserver support.
+
+2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* arch/riscv.c (struct riscv_gdbarch_features_hasher): Only define
+	if GDBSERVER is not defined.
+	(riscv_tdesc_cache): Likewise, also store const target_desc.
+	(STATIC_IN_GDB): Define.
+	(riscv_create_target_description): Update declaration with
+	STATIC_IN_GDB.
+	(riscv_lookup_target_description): New function, only define if
+	GDBSERVER is not defined.
+	* arch/riscv.h (riscv_create_target_description): Declare only
+	when GDBSERVER is defined.
+	(riscv_lookup_target_description): New declaration when GDBSERVER
+	is not defined.
+	* nat/riscv-linux-tdesc.c (riscv_linux_read_description): Rename to...
+	(riscv_linux_read_features): ...this, and return
+	riscv_gdbarch_features instead of target_desc.
+	* nat/riscv-linux-tdesc.h: Include 'arch/riscv.h'.
+	(riscv_linux_read_description): Rename to...
+	(riscv_linux_read_features): ...this.
+	* riscv-linux-nat.c (riscv_linux_nat_target::read_description):
+	Update to use riscv_gdbarch_features and
+	riscv_lookup_target_description.
+	* riscv-tdep.c (riscv_find_default_target_description): Use
+	riscv_lookup_target_description instead of
+	riscv_create_target_description.
+
+2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* valprint.c (generic_val_print_enum_1): When printing a flag
+	enum with value 0 and there is no enumerator with value 0, print
+	just "0" instead of "(unknown: 0x0)".
+
+2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* valprint.c (generic_val_print_enum_1): Print unknown part of
+	flag enum in hex.
+
+2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c (update_enumeration_type_from_children): Allow
+	flag enums to contain duplicate enumerators.
+	* valprint.c (generic_val_print_enum_1): Update comment.
+
+2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* dwarf2/read.c: Include "count-one-bits.h".
+	(update_enumeration_type_from_children): If an enumerator has
+	multiple bits set, don't treat the enumeration as a "flag enum".
+	* valprint.c (generic_val_print_enum_1): Assert that enumerators
+	of flag enums have 0 or 1 bit set.
+
+2020-02-18  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* aarch64-tdep.c (aarch64_displaced_step_copy_insn): Use an explicit
+	conversion.
+	* amd64-tdep.c (amd64_displaced_step_copy_insn): Likewise.
+	* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn): Likewise.
+	* i386-tdep.c (i386_displaced_step_copy_insn): Likewise.
+	* rs6000-tdep.c (ppc_displaced_step_copy_insn): Likewise.
+	* s390-tdep.c (s390_displaced_step_copy_insn): Likewise.
+
+2020-02-18  Simon Marchi  <simon.marchi@efficios.com>
+
+	* MAINTAINERS: Change palmer@sifive.com to palmer@dabbelt.com.
+
+2020-02-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aarch64-tdep.c (aarch64_displaced_step_copy_insn): Use
+	displaced_step_closure_up.
+	* aarch64-tdep.h (aarch64_displaced_step_copy_insn): Likewise.
+	(struct displaced_step_closure_up):
+	* amd64-tdep.c (amd64_displaced_step_copy_insn): Likewise.
+	* amd64-tdep.h (amd64_displaced_step_copy_insn): Likewise.
+	* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn):
+	Likewise.
+	* gdbarch.sh (displaced_step_copy_insn): Likewise.
+	* gdbarch.c, gdbarch.h: Re-generate.
+	* i386-linux-tdep.c (i386_linux_displaced_step_copy_insn): Use
+	displaced_step_closure_up.
+	* i386-tdep.c (i386_displaced_step_copy_insn): Likewise.
+	* i386-tdep.h (i386_displaced_step_copy_insn): Likewise.
+	* infrun.h (displaced_step_closure_up): New type alias.
+	(struct displaced_step_inferior_state) <step_closure>: Change
+	type to displaced_step_closure_up.
+	* rs6000-tdep.c (ppc_displaced_step_copy_insn): Use
+	displaced_step_closure_up.
+	* s390-tdep.c (s390_displaced_step_copy_insn): Likewise.
+
+2020-02-14  Tom Tromey  <tom@tromey.com>
+
+	* minidebug.c (gnu_debug_key): New global.
+	(find_separate_debug_file_in_section): Use it.
+
+2020-02-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh (displaced_step_copy_insn): Change return type to an
+	std::unique_ptr.
+	* gdbarch.c: Re-generate.
+	* gdbarch.h: Re-generate.
+	* infrun.c (displaced_step_prepare_throw): Adjust to std::unique_ptr
+	change.
+	* aarch64-tdep.c (aarch64_displaced_step_copy_insn): Change return
+	type to std::unique_ptr.
+	* aarch64-tdep.h (aarch64_displaced_step_copy_insn): Likewise.
+	* amd64-tdep.c (amd64_displaced_step_copy_insn): Likewise.
+	* amd64-tdep.h (amd64_displaced_step_copy_insn): Likewise.
+	* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn): Likewise.
+	* i386-linux-tdep.c (i386_linux_displaced_step_copy_insn): Likewise.
+	* i386-tdep.c (i386_displaced_step_copy_insn): Likewise.
+	* i386-tdep.h (i386_displaced_step_copy_insn): Likewise.
+	* rs6000-tdep.c (ppc_displaced_step_copy_insn): Likewise.
+	* s390-tdep.c (s390_displaced_step_copy_insn): Likewise.
+
+2020-02-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.c (get_displaced_step_closure_by_addr): Adjust to
+	std::unique_ptr.
+	(displaced_step_clear): Rename to...
+	(displaced_step_reset): ... this.  Just call displaced->reset ().
+	(displaced_step_clear_cleanup): Rename to...
+	(displaced_step_reset_cleanup): ... this.
+	(displaced_step_prepare_throw): Adjust to std::unique_ptr.
+	(displaced_step_fixup): Likewise.
+	(resume_1): Likewise.
+	(handle_inferior_event): Restore child's memory before calling
+	displaced_step_fixup on the parent.
+	* infrun.h (displaced_step_inferior_state) <reset>: Adjust
+	to std::unique_ptr.
+	<step_closure>: Change type to std::unique_ptr.
+
+2020-02-14  Simon Marchi  <simon.marchi@efficios.com>
+
+	* arm-tdep.c: Include count-one-bits.h.
+	(cleanup_block_store_pc): Use count_one_bits.
+	(cleanup_block_load_pc): Use count_one_bits.
+	(arm_copy_block_xfer): Use count_one_bits.
+	(thumb2_copy_block_xfer): Use count_one_bits.
+	(thumb_copy_pop_pc_16bit): Use count_one_bits.
+	* arch/arm-get-next-pcs.c: Include count-one-bits.h.
+	(thumb_get_next_pcs_raw): Use count_one_bits.
+	(arm_get_next_pcs_raw): Use count_one_bits_l.
+	* arch/arm.c (bitcount): Remove.
+	* arch/arm.h (bitcount): Remove.
+
+2020-02-14  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2/frame-tailcall.c (dwarf2_tailcall_sniffer_first):
+	Update.
+	* dwarf2/loc.h (call_site_find_chain): Return unique_xmalloc_ptr.
+	* dwarf2/loc.c (call_site_find_chain_1): Return
+	unique_xmalloc_ptr.
+	(call_site_find_chain): Likewise.
+
+2020-02-14  Richard Biener  <rguenther@suse.de>
+
+	* dwarf2/read.c (lnp_state_machine::handle_special_opcode): Apply CSE
+	on expression with division operators.
+
+2020-02-13  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+
+	* MAINTAINERS (Write After Approval): Adding myself.
+
+2020-02-12  Tom Tromey  <tom@tromey.com>
+
+	* event-loop.c (event_data, gdb_event, event_handler_func):
+	Remove.
+
+2020-02-12  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/frame.c (dwarf2_frame_bfd_data): New global.
+	(dwarf2_frame_objfile_data): Add comment.
+	(find_comp_unit, set_comp_unit): New functions.
+	(dwarf2_frame_find_fde): Use find_comp_unit.
+	(dwarf2_build_frame_info): Use set_comp_unit.
+
+2020-02-12  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/frame.c (struct comp_unit) <objfile>: Remove.
+	(comp_unit): Don't initialize objfile.
+	(execute_cfa_program): Add text_offset parameter.
+	(execute_cfa_program_test, dwarf2_fetch_cfa_info)
+	(dwarf2_frame_cache): Update.
+	(dwarf2_build_frame_info): Don't set "objfile" member.
+
+2020-02-12  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/frame.c (decode_frame_entry_1): Add gdbarch parameter.
+	(decode_frame_entry): Likewise.
+	(dwarf2_build_frame_info): Update.
+
+2020-02-12  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/frame.c (struct comp_unit) <obstack>: New member.
+	(decode_frame_entry_1): Use the comp_unit obstack.
+
+2020-02-12  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/frame.c (struct comp_unit): Add initializers and
+	constructor.
+	(dwarf2_frame_objfile_data): Store a comp_unit.
+	(dwarf2_frame_find_fde): Update.
+	(dwarf2_build_frame_info): Use "new".
+
+2020-02-12  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/frame.c (struct dwarf2_fde_table): Remove.
+	(dwarf2_fde_table): Typedef for std::vector.
+	(dwarf2_frame_objfile_data): Remove the deleter.  Now static.
+	(dwarf2_frame_find_fde, add_fde, decode_frame_entry_1)
+	(decode_frame_entry): Update.
+	(dwarf2_build_frame_info): Use "new".
+
+2020-02-12  Christian Biesinger  <cbiesinger@google.com>
+
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* arm-tdep.h (struct gdbarch_tdep) <have_fpa_registers,
+	have_wmmx_registers, have_vfp_pseudos, have_neon_pseudos,
+	have_neon, is_m>: Change to bool.
+
+2020-02-12  Christian Biesinger  <cbiesinger@google.com>
+
+	* arm-tdep.c (arm_dump_tdep): Print more fields of tdep.
+
+2020-02-12  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/loc.c (struct dwarf_expr_baton): Remove.
+
+2020-02-12  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-tdep.c (struct windows_gdbarch_data): Add tib_ptr_type.
+	(windows_get_tlb_type): Use windows_gdbarch_data->tib_ptr_type.
+
+2020-02-11  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.h: Update comment.
+
+2020-02-11  Tom Tromey  <tom@tromey.com>
+
+	* gdb_obstack.h (struct auto_obstack): Use
+	DISABLE_COPY_AND_ASSIGN.
+
+2020-02-11  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/frame.h (struct objfile): Don't forward declare.
+
+2020-02-11  Christian Biesinger  <cbiesinger@google.com>
+
+	* cris-tdep.c (cris_supply_gregset): Change signature to match
+	what struct regset expects.
+	(cris_regset): New struct.
+	(fetch_core_registers): Remove.
+	(cris_iterate_over_regset_sections): New function.
+	(_initialize_cris_tdep): Don't call deprecated_add_core_fns.
+	(cris_gdbarch_init): Call set_gdbarch_iterate_over_regset_sections.
+
+2020-02-11  Christian Biesinger  <cbiesinger@google.com>
+
+	* arch/arm.h (enum gdb_regnum): Add comment for the FP0..7
+	registers.
+
+2020-02-11  Christian Biesinger  <cbiesinger@google.com>
+
+	* arm-tdep.c (arm_dump_tdep): Add \n in fprintf.
+
+2020-02-11  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure: Re-generate.
+
+2020-02-11  Simon Marchi  <simon.marchi@efficios.com>
+
+	* configure: Re-generate.
+
+2020-02-11  Simon Marchi  <simon.marchi@efficios.com>
+
+	* acinclude: Update warning.m4 path.
+	* warning.m4: Move to gdbsupport.
+
+2020-02-11  Tom Tromey  <tromey@adacore.com>
+
+	* remote.c (remote_console_output): Update.
+	* printcmd.c (printf_command): Update.
+	* event-loop.c (gdb_wait_for_event): Update.
+	* linux-nat.c (sigchld_handler): Update.
+	* remote-sim.c (gdb_os_write_stdout): Update.
+	(gdb_os_flush_stdout): Update.
+	(gdb_os_flush_stderr): Update.
+	(gdb_os_write_stderr): Update.
+	* exceptions.c (print_exception): Update.
+	* remote-fileio.c (remote_fileio_func_read): Update.
+	(remote_fileio_func_write): Update.
+	* tui/tui.c (tui_enable): Update.
+	* tui/tui-interp.c (tui_interp::init): Update.
+	* utils.c (init_page_info): Update.
+	(putchar_unfiltered, fputc_unfiltered): Update.
+	(gdb_flush): Update.
+	(emit_style_escape): Update.
+	(flush_wrap_buffer, fputs_maybe_filtered): Update.
+	* ui-file.c (ui_file_isatty, ui_file_read, ui_file_write)
+	(ui_file_write_async_safe, ui_file_flush, ui_file_puts): Remove.
+	(stderr_file::write): Update.
+	(stderr_file::puts): Update.
+	* ui-file.h (ui_file_isatty, ui_file_write)
+	(ui_file_write_async_safe, ui_file_read, ui_file_flush)
+	(ui_file_puts): Don't declare.
+
+2020-02-10  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2/read.c (process_psymtab_comp_unit_reader): Cast concat NULL
+	sentinel to char *.
+
+2020-02-09  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf2read.c (process_psymtab_comp_unit_reader): Append CU offset to
+	filename if it matches "<artificial>".
+
+2020-02-09  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-tdep.c (struct enum_value_name): New struct.
+	(create_enum): New function.
+	(windows_get_siginfo_type): Create and use enum types.
+
+2020-02-09  Hannes Domani  <ssbssa@yahoo.de>
+
+	* NEWS: Mention $_siginfo support for Windows.
+	* windows-nat.c (handle_exception): Set siginfo_er.
+	(windows_nat_target::mourn_inferior): Reset siginfo_er.
+	(windows_xfer_siginfo): New function.
+	(windows_nat_target::xfer_partial): Call windows_xfer_siginfo.
+	* windows-tdep.c (struct windows_gdbarch_data): New struct.
+	(init_windows_gdbarch_data): New function.
+	(get_windows_gdbarch_data): New function.
+	(windows_get_siginfo_type): New function.
+	(windows_init_abi): Register windows_get_siginfo_type.
+	(_initialize_windows_tdep): Register init_windows_gdbarch_data.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (class cutu_reader) <cutu_reader,
+	init_tu_and_read_dwo_dies>: Remove "keep" parameter.
+	<keep>: Declare method.
+	<m_keep>: Remove member.
+	<~cutu_reader>: Remove.
+	(cutu_reader::init_tu_and_read_dwo_dies): Update.
+	(cutu_reader::cutu_reader): Update.
+	(cutu_reader::keep): Rename from ~cutu_reader.
+	(process_psymtab_comp_unit, build_type_psymtabs_1)
+	(process_skeletonless_type_unit, load_partial_comp_unit)
+	(load_full_comp_unit, dwarf2_read_addr_index)
+	(read_signatured_type): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (process_psymtab_comp_unit_reader): Remove
+	"want_partial_unit" parameter.
+	(process_psymtab_comp_unit): Change want_partial_unit to bool.
+	Inline check for DW_TAG_partial_unit.
+	(dwarf2_build_psymtabs_hard, scan_partial_symbols): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_n_bytes, read_direct_string): Move to
+	read.c.
+	* dwarf2/leb.h (read_n_bytes, read_direct_string): Move from
+	read.c.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_address): Move to comp-unit.c.
+	(dwarf2_rnglists_process, dwarf2_ranges_process)
+	(read_attribute_value, dwarf_decode_lines_1)
+	(var_decode_location, decode_locdesc): Update.
+	* dwarf2/comp-unit.c (comp_unit_head::read_address): Move from
+	read.c.  Remove "cu" parameter.
+	* dwarf2/comp-unit.h (struct comp_unit_head) <read_address>: New
+	method.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_attribute_value, read_indirect_string)
+	(read_indirect_line_string): Update.
+	* dwarf2/comp-unit.c (read_offset): Remove.
+	(read_comp_unit_head): Update.
+	* dwarf2/comp-unit.h (struct comp_unit_head) <read_offset>: New
+	method.
+	(read_offset): Don't declare.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* Makefile.in (COMMON_SFILES): Add dwarf2/comp-unit.c.
+	* dwarf2/read.c (struct comp_unit_head): Move to
+	dwarf2/comp-unit.h.
+	(enum class rcuh_kind): Move to comp-unit.h.
+	(get_cu_length, offset_in_cu_p): Now methods on comp_unit_head.
+	(read_comp_unit_head, error_check_comp_unit_head)
+	(read_and_check_comp_unit_head): Move to comp-unit.c.
+	(read_offset, dwarf_unit_type_name): Likewise.
+	(create_debug_type_hash_table, read_cutu_die_from_dwo)
+	(cutu_reader::cutu_reader, read_call_site_scope)
+	(find_partial_die, follow_die_offset): Update.
+	* dwarf2/comp-unit.h: New file, from dwarf2read.c.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_offset_1): Move to leb.c.
+	(read_abbrev_offset, read_offset, dwarf_decode_line_header)
+	(dwarf_decode_macro_bytes): Update.
+	* dwarf2/leb.c (read_offset): Rename; move from read.c.
+	* dwarf2/leb.h (read_offset): Declare.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf2_section_size): Remove.
+	(error_check_comp_unit_head, dwarf2_symbol_mark_computed):
+	Update.
+	* dwarf2/section.h (struct dwarf2_section_info) <get_size>: New method.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_initial_length): Move to leb.c.
+	* dwarf2/leb.h (read_initial_length): Declare.
+	* dwarf2/leb.c (read_initial_length): Move from read.c.  Add
+	handle_nonstd parameter.
+	* dwarf2/frame.c (read_initial_length): Remove.
+	(decode_frame_entry_1): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/loc.c (dwarf2_find_location_expression)
+	(dwarf_evaluate_loc_desc::get_tls_address)
+	(dwarf_evaluate_loc_desc::push_dwarf_reg_entry_value)
+	(rw_pieced_value, dwarf2_evaluate_loc_desc_full)
+	(dwarf2_locexpr_baton_eval, dwarf2_evaluate_property)
+	(dwarf2_compile_property_to_c)
+	(dwarf2_loc_desc_get_symbol_read_needs)
+	(dwarf2_compile_expr_to_ax, locexpr_describe_location)
+	(locexpr_tracepoint_var_ref, locexpr_generate_c_location)
+	(loclist_describe_location, loclist_tracepoint_var_ref)
+	(loclist_generate_c_location): Update.
+	* compile/compile-loc2c.c (do_compile_dwarf_expr_to_c): Update.
+	* dwarf2/loc.h (dwarf2_per_cu_objfile, dwarf2_per_cu_addr_size)
+	(dwarf2_per_cu_ref_addr_size, dwarf2_per_cu_offset_size)
+	(dwarf2_per_cu_text_offset, dwarf2_version): Don't declare.
+	* dwarf2/read.c (dwarf2_per_cu_data::objfile)
+	(dwarf2_per_cu_data::addr_size)
+	(dwarf2_per_cu_data::ref_addr_size)
+	(dwarf2_per_cu_data::text_offset)
+	(dwarf2_per_cu_data::addr_type): Now methods.
+	(per_cu_header_read_in): Make per_cu "const".
+	(dwarf2_version): Remove.
+	(dwarf2_per_cu_data::int_type): Now a method.
+	(dwarf2_per_cu_data::_addr_sized_int_type): Likewise.
+	(set_die_type, read_array_type, read_subrange_index_type)
+	(read_tag_string_type, read_subrange_type): Update.
+	* dwarf2/read.h (struct dwarf2_per_cu_data) <addr_size,
+	offset_size, ref_addr_size, text_offset, addr_type, version,
+	objfile, int_type, addr_sized_int_type>: Declare methods.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct dwarf2_per_cu_data) <imported_symtabs>:
+	Move earlier.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (dwarf_line_debug): Declare.
+	* Makefile.in (COMMON_SFILES): Add dwarf2/line-header.c.
+	* dwarf2/read.c: Move line_header code to new files.
+	(dwarf_line_debug): No longer static.
+	* dwarf2/line-header.c: New file.
+	* dwarf2/line-header.h: New file.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (struct line_header) <file_full_name,
+	file_file_name>: Return unique_xmalloc_ptr.
+	(line_header::file_file_name): Update.
+	(line_header::file_full_name): Update.
+	(dw2_get_file_names_reader): Update.
+	(macro_start_file): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (struct line_header) <file_full_name,
+	file_file_name>: Declare methods.
+	(dw2_get_file_names_reader): Update.
+	(file_file_name): Now a method.
+	(file_full_name): Likewise.
+	(macro_start_file): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (dwarf_always_disassemble)
+	(show_dwarf_always_disassemble): Move to loc.c.
+	(_initialize_dwarf2_read): Move "always-disassemble" registration
+	to loc.c.
+	* dwarf2/read.h (dwarf_always_disassemble): Don't declare.
+	* dwarf2/loc.c (dwarf_always_disassemble): Move from read.c.  Now
+	static.
+	(show_dwarf_always_disassemble): Move from read.c.
+	(_initialize_dwarf2loc): Move always-disassemble from read.c.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (~dwarf2_per_objfile): Update.
+	(create_quick_file_names_table): Return htab_up.
+	(dw2_get_file_names_reader, dw2_forget_cached_source_info):
+	Update.
+	* dwarf2/read.h (struct dwarf2_per_objfile)
+	<quick_file_names_table>: Now htab_up.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/abbrev.c (abbrev_table::read): Simplify.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/abbrev.c (abbrev_table): Move constructor from header.
+	Rewrite.
+	(abbrev_table::add_abbrev, abbrev_table::lookup_abbrev): Rewrite.
+	* dwarf2/abbrev.h (struct abbrev_info) <next>: Remove.
+	(abbrev_table::abbrev_table): No longer inline.
+	(ABBREV_HASH_SIZE): Remove.
+	(abbrev_table::m_abbrevs): Now an htab_up.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (read_cutu_die_from_dwo): Update.
+	(cutu_reader): Update.
+	(build_type_psymtabs_1): Update.
+	* dwarf2/abbrev.c (abbrev_table::read): Rename.
+	(abbrev_table::alloc_abbrev): Update.
+	* dwarf2/abbrev.h (abbrev_table_up): Move earlier.
+	(abbrev_table::read): New static method, renamed from
+	abbrev_table_read_table.
+	(abbrev_table::alloc_abbrev)
+	(abbrev_table::add_abbrev): Now private.
+	(abbrev_table::abbrev_table): Now private.
+	(abbrev_table::m_abbrev_obstack): Now private.  Rename.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (set_die_type, get_die_type_at_offset): Update.
+	* dwarf2/read.h (struct dwarf2_per_objfile) <die_type_hash>: Now
+	htab_up.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (struct dwp_file) <loaded_cus, loaded_tus>: Now
+	htab_up.
+	(lookup_dwo_unit_in_dwp): Update.
+	(allocate_dwp_loaded_cutus_table): Return htab_up.  Don't allocate
+	on obstack.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (allocate_dwo_file_hash_table): Don't allocate on
+	obstack.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (~dwarf2_per_objfile): Don't delete
+	line_header_hash.
+	(handle_DW_AT_stmt_list): Update.  Don't allocate on obstack.
+	* dwarf2/read.h (struct dwarf2_per_objfile) <line_header_hash>:
+	Change type to htab_up.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (allocate_type_unit_groups_table): Return
+	htab_up.  Don't allocate on obstack.
+	(get_type_unit_group, dwarf2_build_psymtabs_hard): Update.
+	* dwarf2/read.h (struct dwarf2_per_objfile) <type_unit_groups>:
+	Change type to htab_up.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct dwarf2_per_objfile) <signatured_types>:
+	Change type to htab_up.
+	* dwarf2/read.c (create_signatured_type_table_from_index)
+	(create_signatured_type_table_from_debug_names)
+	(create_all_type_units, add_type_unit)
+	(lookup_dwo_signatured_type, lookup_signatured_type)
+	(process_skeletonless_type_unit): Update.
+	(create_debug_type_hash_table, create_debug_types_hash_table):
+	Change type of types_htab.
+	(allocate_signatured_type_table, allocate_dwo_unit_table): Return
+	htab_up.  Don't allocate on obstack.
+	(create_cus_hash_table): Change type of cus_htab parameter.
+	(struct dwo_file) <cus, tus>: Now htab_up.
+	(lookup_dwo_signatured_type, lookup_dwo_cutu)
+	(process_dwo_file_for_skeletonless_type_units, lookup_dwo_cutu)
+	(queue_and_load_all_dwo_tus): Update.
+	* dwarf2/index-write.c (write_gdbindex): Update.
+	(write_debug_names): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.h (struct dwarf2_queue_item): Move from
+	dwarf2/read.c.  Remove "next" member.  Add constructor ntad
+	destructor.
+	(struct dwarf2_per_objfile) <queue>: New member.
+	* dwarf2/read.c (struct dwarf2_queue_item): Move to
+	dwarf2/read.h.
+	(dwarf2_queue, dwarf2_queue_tail): Remove.
+	(class dwarf2_queue_guard): Add parameter to constructor.  Use
+	DISABLE_COPY_AND_ASSIGN.
+	<m_per_objfile>: New member.
+	<~dwarf2_queue_guard>: Rewrite.
+	(dw2_do_instantiate_symtab, queue_comp_unit, process_queue):
+	Update.
+	(~dwarf2_queue_item): New.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/read.c (struct die_info) <has_children>: New member.
+	(dw2_get_file_names_reader): Remove has_children.
+	(dw2_get_file_names): Update.
+	(read_cutu_die_from_dwo): Remove has_children.
+	(cutu_reader::init_tu_and_read_dwo_dies)
+	(cutu_reader::cutu_reader): Update.
+	(process_psymtab_comp_unit_reader, build_type_psymtabs_reader):
+	Remove has_children.
+	(build_type_psymtabs_1, process_skeletonless_type_unit)
+	(load_partial_comp_unit, load_full_comp_unit): Update.
+	(create_dwo_cu_reader): Remove has_children.
+	(create_cus_hash_table, read_die_and_children): Update.
+	(read_full_die_1,read_full_die): Remove has_children.
+	(read_signatured_type): Update.
+	(class cutu_reader) <has_children>: Remove.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2/expr.c: Rename from dwarf2expr.c.
+	* dwarf2/expr.h: Rename from dwarf2expr.h.
+	* dwarf2/frame-tailcall.c: Rename from dwarf2-frame-tailcall.c.
+	* dwarf2/frame-tailcall.h: Rename from dwarf2-frame-tailcall.h.
+	* dwarf2/frame.c: Rename from dwarf2-frame.c.
+	* dwarf2/frame.h: Rename from dwarf2-frame.h.
+	* dwarf2/index-cache.c: Rename from dwarf-index-cache.c.
+	* dwarf2/index-cache.h: Rename from dwarf-index-cache.h.
+	* dwarf2/index-common.c: Rename from dwarf-index-common.c.
+	* dwarf2/index-common.h: Rename from dwarf-index-common.h.
+	* dwarf2/index-write.c: Rename from dwarf-index-write.c.
+	* dwarf2/index-write.h: Rename from dwarf-index-write.h.
+	* dwarf2/loc.c: Rename from dwarf2loc.c.
+	* dwarf2/loc.h: Rename from dwarf2loc.h.
+	* dwarf2/read.c: Rename from dwarf2read.c.
+	* dwarf2/read.h: Rename from dwarf2read.h.
+	* dwarf2/abbrev.c, aarch64-tdep.c, alpha-tdep.c,
+	amd64-darwin-tdep.c, arc-tdep.c, arm-tdep.c, bfin-tdep.c,
+	compile/compile-c-symbols.c, compile/compile-cplus-symbols.c,
+	compile/compile-loc2c.c, cris-tdep.c, csky-tdep.c, findvar.c,
+	gdbtypes.c, guile/scm-type.c, h8300-tdep.c, hppa-bsd-tdep.c,
+	hppa-linux-tdep.c, i386-darwin-tdep.c, i386-linux-tdep.c,
+	i386-tdep.c, iq2000-tdep.c, m32c-tdep.c, m68hc11-tdep.c,
+	m68k-tdep.c, microblaze-tdep.c, mips-tdep.c, mn10300-tdep.c,
+	msp430-tdep.c, nds32-tdep.c, nios2-tdep.c, or1k-tdep.c,
+	riscv-tdep.c, rl78-tdep.c, rs6000-tdep.c, rx-tdep.c, s12z-tdep.c,
+	s390-tdep.c, score-tdep.c, sh-tdep.c, sparc-linux-tdep.c,
+	sparc-tdep.c, sparc64-linux-tdep.c, sparc64-tdep.c, tic6x-tdep.c,
+	tilegx-tdep.c, v850-tdep.c, xstormy16-tdep.c, xtensa-tdep.c:
+	Update.
+	* Makefile.in (COMMON_SFILES): Update.
+	(HFILES_NO_SRCDIR): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (struct die_reader_specs) <comp_dir>: Remove.
+	(init_cu_die_reader, read_cutu_die_from_dwo): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.h (struct die_info): Don't declare.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.h (die_info_ptr): Remove typedef.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (read_call_site_scope)
+	(handle_data_member_location, dwarf2_add_member_fn)
+	(mark_common_block_symbol_computed, read_common_block)
+	(attr_to_dynamic_prop, partial_die_info::read)
+	(var_decode_location, dwarf2_fetch_die_loc_sect_off)
+	(dwarf2_symbol_mark_computed, set_die_type): Update.
+	* dwarf2/attribute.h (struct attribute) <form_is_block>: Declare
+	method.
+	(attr_form_is_block): Don't declare.
+	* dwarf2/attribute.c (attribute::form_is_block): Now a method.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (dwarf2_find_base_address, )
+	(read_call_site_scope, rust_containing_type)
+	(dwarf2_get_pc_bounds, dwarf2_record_block_ranges)
+	(handle_data_member_location, dwarf2_add_member_fn)
+	(get_alignment, read_structure_type, process_structure_scope)
+	(mark_common_block_symbol_computed, read_common_block)
+	(read_tag_string_type, attr_to_dynamic_prop, read_subrange_type)
+	(partial_die_info::read, read_attribute_value, new_symbol)
+	(lookup_die_type, dwarf2_get_ref_die_offset)
+	(dwarf2_get_attr_constant_value, follow_die_ref_or_sig)
+	(dwarf2_fetch_die_loc_sect_off, get_DW_AT_signature_type)
+	(dwarf2_symbol_mark_computed): Update.
+	* dwarf2/attribute.h (struct attribute) <value_as_address,
+	form_is_section_offset, form_is_constant, form_is_ref>: Declare
+	methods.
+	(value_as_address, attr_form_is_section_offset)
+	(attr_form_is_constant, attr_form_is_ref): Don't declare.
+	* dwarf2/attribute.c (attribute::value_as_address)
+	(attribute::form_is_section_offset, attribute::form_is_constant)
+	(attribute::form_is_ref): Now methods.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (struct attribute, DW_STRING)
+	(DW_STRING_IS_CANONICAL, DW_UNSND, DW_BLOCK, DW_SND, DW_ADDR)
+	(DW_SIGNATURE, struct dwarf_block, attr_value_as_address)
+	(attr_form_is_block, attr_form_is_section_offset)
+	(attr_form_is_constant, attr_form_is_ref): Move.
+	* dwarf2/attribute.h: New file.
+	* dwarf2/attribute.c: New file, from dwarf2read.c.
+	* Makefile.in (COMMON_SFILES): Add dwarf2/attribute.c.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (abbrev_table_up, struct abbrev_info)
+	(struct attr_abbrev, ABBREV_HASH_SIZE, struct abbrev_table):
+	Move.
+	(read_cutu_die_from_dwo, build_type_psymtabs_1): Update.
+	(abbrev_table::alloc_abbrev, abbrev_table::add_abbrev)
+	(abbrev_table::lookup_abbrev, abbrev_table_read_table): Move to
+	abbrev.c.
+	* dwarf2/abbrev.h: New file.
+	* dwarf2/abbrev.c: New file, from dwarf2read.c.
+	* Makefile.in (COMMON_SFILES): Add dwarf2/abbrev.c.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (dwarf2_section_buffer_overflow_complaint)
+	(dwarf2_section_size, dwarf2_get_section_info)
+	(create_signatured_type_table_from_debug_names)
+	(create_addrmap_from_aranges, read_debug_names_from_section)
+	(get_gdb_index_contents_from_section, read_comp_unit_head)
+	(error_check_comp_unit_head, read_abbrev_offset)
+	(create_debug_type_hash_table, init_cu_die_reader)
+	(read_cutu_die_from_dwo, dwarf2_build_psymtabs_hard)
+	(read_comp_units_from_section, create_cus_hash_table)
+	(create_dwp_hash_table, create_dwo_unit_in_dwp_v1)
+	(create_dwp_v2_section, dwarf2_rnglists_process)
+	(dwarf2_ranges_process, read_die_and_siblings, read_full_die)
+	(abbrev_table_read_table, read_indirect_string_at_offset_from)
+	(read_indirect_string_from_dwz, read_addr_index_1)
+	(read_str_index, dwarf_decode_line_header, skip_form_bytes)
+	(dwarf_decode_macro_bytes, dwarf_decode_macros)
+	(fill_in_loclist_baton): Update.
+	* dwarf2/section.h (struct dwarf2_section_info) <get_name,
+	get_containing_section, get_bfd_owner, get_bfd_section,
+	get_file_name, get_id, get_flags, empty, read>: Declare methods.
+	(dwarf2_read_section, get_section_name, get_section_file_name)
+	(get_containing_section, get_section_bfd_owner)
+	(get_section_bfd_section, get_section_name, get_section_file_name)
+	(get_section_id, get_section_flags, dwarf2_section_empty_p): Don't
+	declare.
+	* dwarf2/section.c (dwarf2_section_info::get_containing_section)
+	(dwarf2_section_info::get_bfd_owner)
+	(dwarf2_section_info::get_bfd_section)
+	(dwarf2_section_info::get_name)
+	(dwarf2_section_info::get_file_name, dwarf2_section_info::get_id)
+	(dwarf2_section_info::get_flags, dwarf2_section_info::empty)
+	(dwarf2_section_info::read): Now methods.
+	* dwarf-index-write.c (class debug_names): Update.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.h (struct dwarf2_section_info, dwarf2_read_section):
+	Move to dwarf2/section.h.
+	* dwarf2read.c (get_containing_section, get_section_bfd_owner)
+	(get_section_bfd_section, get_section_name)
+	(get_section_file_name, get_section_id, get_section_flags)
+	(dwarf2_section_empty_p, dwarf2_read_section): Moe to
+	dwarf2/section.c.
+	* dwarf2/section.h: New file.
+	* dwarf2/section.c: New file, from dwarf2read.c.
+	* Makefile.in (COMMON_SFILES): Add dwarf2/section.c.
+
+2020-02-08  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.h (read_unsigned_leb128): Don't declare.
+	* dwarf2read.c (read_1_byte, read_1_signed_byte, read_2_bytes)
+	(read_2_signed_bytes, read_3_bytes, read_4_bytes)
+	(read_4_signed_bytes, read_8_bytes): Move to dwarf2/leb.h.
+	(read_unsigned_leb128, read_signed_leb128): Move to dwarf2/leb.c.
+	* dwarf2/leb.h: New file, from dwarf2read.c.
+	* dwarf2/leb.c: New file, from dwarf2read.c.
+	* dwarf2-frame.c (read_1_byte, read_4_bytes, read_8_bytes):
+	Remove.
+	* Makefile.in (CONFIG_SRC_SUBDIR): Add dwarf2.
+	(COMMON_SFILES): Add dwarf2/leb.c.
+
+2020-02-08  Joel Brobecker  <brobecker@adacore.com>
+
+	GDB 9.1 released.
+
+2020-02-05  Iain Buclaw  <ibuclaw@gdcproject.org>
+
+	PR gdb/25190:
+	* gdb/remote-sim.c (gdb_os_write_stderr): Update.
+	* gdb/remote.c (remote_console_output): Update.
+	* gdb/ui-file.c (fputs_unfiltered): Rename to...
+	(ui_file_puts): ...this.
+	* gdb/ui-file.h (ui_file_puts): Add declaration.
+	* gdb/utils.c (emit_style_escape): Update.
+	(flush_wrap_buffer): Update.
+	(fputs_maybe_filtered): Update.
+	(fputs_unfiltered): Add function.
+
+2020-02-05  Iain Buclaw  <ibuclaw@gdcproject.org>
+
+	* gdb/event-loop.c (gdb_wait_for_event): Update.
+	* gdb/printcmd.c (printf_command): Update.
+	* gdb/remote-fileio.c (remote_fileio_func_write): Update.
+	* gdb/remote-sim.c (gdb_os_flush_stdout): Update.
+	(gdb_os_flush_stderr): Update.
+	* gdb/remote.c (remote_console_output): Update.
+	* gdb/ui-file.c (gdb_flush): Rename to...
+	(ui_file_flush): ...this.
+	(stderr_file::write): Update.
+	(stderr_file::puts): Update.
+	* gdb/ui-file.h (gdb_flush): Rename to...
+	(ui_file_flush): ...this.
+	* gdb/utils.c (gdb_flush): Add function.
+	* gdb/utils.h (gdb_flush): Add declaration.
+
+2020-02-07  Tom Tromey  <tromey@adacore.com>
+
+	PR breakpoints/24915:
+	* source.c (find_and_open_source): Do not check basenames_may_differ.
+
+2020-02-07  Tom Tromey  <tom@tromey.com>
+
+	* README: Update gdbserver documentation.
+	* gdbserver: Move to top level.
+	* configure.tgt (build_gdbserver): Remove.
+	* configure.ac: Remove --enable-gdbserver.
+	* configure: Rebuild.
+	* Makefile.in (distclean): Don't mention gdbserver.
+
+2020-02-06  Shahab Vahedi  <shahab@synopsys.com>
+
+	* source-cache.c (source_cache::ensure): Surround
+	get_plain_source_lines with a try/catch.
+	(source_cache::get_line_charpos): Get rid of try/catch
+	and only check for the return value of "ensure".
+	* tui/tui-source.c (tui_source_window::set_contents):
+	Simplify "nlines" calculation.
+
+2020-02-06  Shahab Vahedi  <shahab@synopsys.com>
+
+	* MAINTAINERS (Write After Approval): Add myself.
+
+2020-02-05  Christian Biesinger  <cbiesinger@google.com>
+
+	* sparc-nat.h (struct sparc_target) <xfer_partial>: Fix base class
+	function call.
+
+2020-02-05  Christian Biesinger  <cbiesinger@google.com>
+
+	* ppc-nbsd-tdep.h: Fix macro name in #endif comment.
+
+2020-02-05  Maciej W. Rozycki  <macro@wdc.com>
+
+	* nat/riscv-linux-tdesc.h: New file.
+	* nat/riscv-linux-tdesc.c: New file, taking code from...
+	* riscv-linux-nat.c (riscv_linux_nat_target::read_description):
+	... here.
+	* configure.nat <linux> <riscv*>: Add nat/riscv-linux-tdesc.o to
+	NATDEPFILES.
+
+2020-02-04  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* remote-sim.c (sim_inferior_data::sim_inferior_data): Assert that
+	we don't set the fake simulator ptid to the null_ptid.
+
+2020-02-03  Simon Marchi  <simon.marchi@efficios.com>
+
+	* fork-child.c (gdb_startup_inferior): Use bool instead of int.
+	* gdbthread.h (class thread_info) <resumed>: Likewise.
+	* infrun.c (resume_1): Likewise.
+	(proceed): Likewise.
+	(infrun_thread_stop_requested): Likewise.
+	(stop_all_threads): Likewise.
+	(handle_inferior_event): Likewise.
+	(restart_threads): Likewise.
+	(finish_step_over): Likewise.
+	(keep_going_stepped_thread): Likewise.
+	* linux-nat.c (attach_proc_task_lwp_callback): Likewise.
+	(linux_handle_extended_wait): Likewise.
+	* record-btrace.c (get_thread_current_frame_id): Likewise.
+	* record-full.c (record_full_wait_1): Likewise.
+	* remote.c (remote_target::process_initial_stop_replies): Likewise.
+	* target.c (target_resume): Likewise.
+	* thread.c (set_running_thread): Likewise.
+
+2020-02-03  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>
+
+	* f-valprint.c (f77_print_array_1): Changed datatype of index
+	variable to LONGEST from int to enable it to contain bound
+	values correctly.
+
+2020-02-03  Maciej W. Rozycki  <macro@wdc.com>
+
+	* riscv-linux-nat.c [!NFPREG] (NFPREG): New macro.
+	(supply_fpregset_regnum, fill_fpregset): Handle regset buffer
+	offsets according to FLEN determined.
+	(riscv_linux_nat_target::read_description): Determine FLEN
+	dynamically.
+	(riscv_linux_nat_target::fetch_registers): Size regset buffer
+	according to FLEN determined.
+	(riscv_linux_nat_target::store_registers): Likewise.
+
+2020-02-01  Shahab Vahedi  <shahab@synopsys.com>
+
+	* target-descriptions.c (tdesc_register_in_reggroup_p): Return 0
+	when reg->group is empty and reggroup is not.
+
+2020-01-31  Tom Tromey  <tromey@adacore.com>
+
+	* ravenscar-thread.c (ravenscar_thread_target::mourn_inferior):
+	Call beneath target's mourn_inferior after unpushing.
+
+2020-01-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR tui/9765
+	* tui/tui-disasm.c (tui_find_disassembly_address): If we don't
+	have enough lines to fill the screen, still return the lowest
+	address we found.
+
+2020-01-31  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tui/tui-win.c (_initialize_tui_win): Update help text for '+',
+	'-', '<', and '>' commands.
+
+2020-01-29  Pedro Alves  <palves@redhat.com>
+	    Sergio Durigan Junior  <sergiodj@redhat.com>
+
+	* infcmd.c (construct_inferior_arguments): Assert that
+	'argc' is greater than 0.
+
+2020-01-29  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-tdep.c (BRK_INSN_MASK): Define to 0xffe0001f.
+	(BRK_INSN_MASK): Define to 0xd4200000.
+	(aarch64_program_breakpoint_here_p): New function.
+	(aarch64_gdbarch_init): Set gdbarch_program_breakpoint_here_p hook.
+	* arch-utils.c (default_program_breakpoint_here_p): Moved from
+	breakpoint.c.
+	* arch-utils.h (default_program_breakpoint_here_p): Moved from
+	breakpoint.h
+	* breakpoint.c (bp_loc_is_permanent): Changed return type to bool and
+	call gdbarch_program_breakpoint_here_p.
+	(program_breakpoint_here): Moved to arch-utils.c, renamed to
+	default_program_breakpoint_here_p, changed return type to bool and
+	simplified.
+	* breakpoint.h (program_breakpoint_here): Moved prototype to
+	arch-utils.h, renamed to default_program_breakpoint_here_p and changed
+	return type to bool.
+	* gdbarch.c: Regenerate.
+	* gdbarch.h: Regenerate.
+	* gdbarch.sh (program_breakpoint_here_p): New method.
+	* infrun.c (handle_signal_stop): Call
+	gdbarch_program_breakpoint_here_p.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* ctfread.c (struct ctf_fp_info): Reindent.
+	(_initialize_ctfread): Remove.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.c (partial_map_expand_apply)
+	(psym_find_pc_sect_compunit_symtab, psym_lookup_symbol)
+	(psymtab_to_symtab, psym_find_last_source_symtab, dump_psymtab)
+	(psym_print_stats, psym_expand_symtabs_for_function)
+	(psym_map_symbol_filenames, psym_map_matching_symbols)
+	(psym_expand_symtabs_matching)
+	(partial_symtab::read_dependencies, maintenance_info_psymtabs)
+	(maintenance_check_psymtabs): Use new methods.
+	* psympriv.h (struct partial_symtab) <readin_p,
+	get_compunit_symtab>: New methods.
+	<readin, compunit_symtab>: Remove members.
+	(struct standard_psymtab): New.
+	(struct legacy_psymtab): Derive from standard_psymtab.
+	* dwarf2read.h (struct dwarf2_psymtab): Derive from
+	standard_psymtab.
+	* ctfread.c (struct ctf_psymtab): Derive from standard_psymtab.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_psymtab_to_symtab_1): Call
+	read_dependencies.  Add assert.
+	* psymtab.c (partial_symtab::read_dependencies): New method.
+	* psympriv.h (struct partial_symtab) <read_dependencies>: New
+	method.
+	* mdebugread.c (psymtab_to_symtab_1): Call read_dependencies.
+	* dwarf2read.c (dwarf2_psymtab::expand_psymtab): Call
+	read_dependencies.
+	* dbxread.c (dbx_psymtab_to_symtab_1): Call read_dependencies.
+	Add assert.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_psymtab_to_symtab_1): Change argument order.
+	Call expand_psymtab.
+	(xcoff_read_symtab): Call expand_psymtab.
+	(xcoff_start_psymtab, xcoff_end_psymtab): Set
+	legacy_expand_psymtab.
+	* psympriv.h (struct partial_symtab) <expand_psymtab>: New
+	method.
+	(struct legacy_psymtab) <expand_psymtab>: Implement.
+	<legacy_expand_psymtab>: New member.
+	* mdebugread.c (mdebug_read_symtab): Call expand_psymtab.
+	(parse_partial_symbols): Set legacy_expand_psymtab.
+	(psymtab_to_symtab_1): Change argument order.  Call
+	expand_psymtab.
+	(new_psymtab): Set legacy_expand_psymtab.
+	* dwarf2read.h (struct dwarf2_psymtab) <expand_psymtab>: Declare.
+	* dwarf2read.c (dwarf2_psymtab::read_symtab): Call
+	expand_psymtab.
+	(dwarf2_psymtab::expand_psymtab): Rename from
+	psymtab_to_symtab_1.  Call expand_psymtab.
+	* dbxread.c (start_psymtab): Set legacy_expand_psymtab.
+	(dbx_end_psymtab): Likewise.
+	(dbx_psymtab_to_symtab_1): Change argument order. Call
+	expand_psymtab.
+	(dbx_read_symtab): Call expand_psymtab.
+	* ctfread.c (struct ctf_psymtab) <expand_psymtab>: Declare.
+	(ctf_psymtab::expand_psymtab): Rename from psymtab_to_symtab.
+	(ctf_psymtab::read_symtab): Call expand_psymtab.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_read_symtab): Remove prints.  Add assert.
+	* psymtab.c (psymtab_to_symtab): Print verbose "Reading"
+	messages.
+	* mdebugread.c (mdebug_read_symtab): Remove prints.
+	* dwarf2read.c (dwarf2_psymtab::read_symtab): Remove prints.  Add
+	assert.
+	* dbxread.c (dbx_read_symtab): Remove prints.  Add assert.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (this_symtab_psymtab, read_xcoff_symtab)
+	(xcoff_psymtab_to_symtab_1, xcoff_read_symtab)
+	(xcoff_start_psymtab, xcoff_end_psymtab, scan_xcoff_symtab): Use
+	legacy_symtab.
+	* stabsread.h (dbx_end_psymtab): Use legacy_symtab.
+	* psymtab.c (psymtab_to_symtab): Call method.
+	(dump_psymtab): Update.
+	* psympriv.h (struct partial_symtab): Add virtual destructor.
+	<read_symtab>: New method.
+	(struct legacy_symtab): New.
+	* mdebugread.c (mdebug_read_symtab): Use legacy_psymtab.
+	(struct pst_map) <pst>: Now a legacy_psymtab.
+	(parse_procedure, parse_partial_symbols, psymtab_to_symtab_1)
+	(new_psymtab): Use legacy_psymtab.
+	* dwarf2read.h (struct dwarf2_psymtab): New.
+	(struct dwarf2_per_cu_data) <psymtab>: Use it.
+	* dwarf2read.c (dwarf2_create_include_psymtab)
+	(dwarf2_build_include_psymtabs, create_type_unit_group)
+	(create_partial_symtab, process_psymtab_comp_unit_reader)
+	(build_type_psymtabs_reader, build_type_psymtab_dependencies)
+	(set_partial_user): Use dwarf2_psymtab.
+	(dwarf2_psymtab::read_symtab): Rename from dwarf2_read_symtab.
+	(psymtab_to_symtab_1, process_full_comp_unit)
+	(process_full_type_unit, dwarf2_ranges_read)
+	(dwarf2_get_pc_bounds, psymtab_include_file_name)
+	(dwarf_decode_lines): Use dwarf2_psymtab.
+	* dwarf-index-write.c (psym_index_map): Use dwarf2_psymtab.
+	(add_address_entry_worker, write_one_signatured_type)
+	(recursively_count_psymbols, recursively_write_psymbols)
+	(write_one_signatured_type, psyms_seen_size, write_gdbindex)
+	(write_debug_names): Likewise.
+	* dbxread.c (struct header_file_location): Take a legacy_psymtab.
+	<pst>: Now a legacy_psymtab.
+	(find_corresponding_bincl_psymtab): Return a legacy_psymtab.
+	(read_dbx_symtab, start_psymtab, dbx_end_psymtab)
+	(dbx_psymtab_to_symtab_1, read_ofile_symtab): Use legacy_psymtab.
+	* ctfread.c (struct ctf_psymtab): New.
+	(ctf_start_symtab, ctf_end_symtab, psymtab_to_symtab): Take a
+	ctf_psymtab.
+	(ctf_psymtab::read_symtab): Rename from ctf_read_symtab.
+	(create_partial_symtab): Return a ctf_psymtab.
+	(scan_partial_symbols): Update.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_start_psymtab): Use new.
+	* psymtab.c (partial_symtab::partial_symtab): New constructor,
+	renamed from start_psymtab_common.
+	* psympriv.h (struct partial_symtab): Add new constructor.
+	(start_psymtab_common): Don't declare.
+	* mdebugread.c (parse_partial_symbols): Use new.
+	* dwarf2read.c (create_partial_symtab): Use new.
+	* dbxread.c (start_psymtab): Use new.
+	* ctfread.c (create_partial_symtab): Use new.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_end_psymtab): Use new.
+	* psymtab.c (start_psymtab_common): Use new.
+	(partial_symtab::partial_symtab): Rename from allocate_psymtab.
+	Update.
+	* psympriv.h (struct partial_symtab): Add parameters to
+	constructor.  Don't inline.
+	(allocate_psymtab): Don't declare.
+	* mdebugread.c (new_psymtab): Use new.
+	* dwarf2read.c (dwarf2_create_include_psymtab): Use new.
+	* dbxread.c (dbx_end_psymtab): Use new.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* psymtab.h (class psymtab_storage) <install_psymtab>: Rename from
+	allocate_psymtab.  Update documentation.
+	* psymtab.c (psymtab_storage::install_psymtab): Rename from
+	allocate_psymtab.  Do not use new.
+	(allocate_psymtab): Use new.  Update.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* xcoffread.c (xcoff_psymtab_to_symtab_1): Update.
+	* psymtab.c (psym_print_stats): Update.
+	* psympriv.h (struct partial_symtab) <readin,
+	psymtabs_addrmap_supported, anonymous>: Now bool.
+	* mdebugread.c (psymtab_to_symtab_1): Update.
+	* dwarf2read.c (create_type_unit_group, create_partial_symtab)
+	(build_type_psymtabs_reader, psymtab_to_symtab_1)
+	(process_full_comp_unit, process_full_type_unit): Update.
+	* dbxread.c (dbx_psymtab_to_symtab_1): Update.
+	* ctfread.c (psymtab_to_symtab): Update.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* mdebugread.c (parse_partial_symbols): Use discard_psymtab.
+	* psymtab.h (class psymtab_storage) <free_psymtabs>: Remove.
+	* psymtab.c (psymtab_storage): Delete psymtabs.
+	(psymtab_storage::allocate_psymtab): Use new.
+	(psymtab_storage::discard_psymtab): Use delete.
+	* psympriv.h (struct partial_symtab): Add constructor and
+	initializers.
+
+2020-01-26  Tom Tromey  <tom@tromey.com>
+
+	* machoread.c: Do not include psympriv.h.
+
+2020-01-25  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* NEWS: Mention the new option and the set/show commands.
+
+2020-01-25  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* exec.c (exec_file_mismatch_names, exec_file_mismatch_mode)
+	(show_exec_file_mismatch_command, set_exec_file_mismatch_command)
+	(validate_exec_file): New variables, enums, functions.
+	(exec_file_locate_attach, print_section_info): Style the filenames.
+	(_initialize_exec): Install show_exec_file_mismatch_command and
+	 set_exec_file_mismatch_command.
+	* gdbcore.h (validate_exec_file): Declare.
+	* infcmd.c (attach_command): Call validate_exec_file.
+	* remote.c ( remote_target::remote_add_inferior): Likewise.
+
+2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* frame.c (find_frame_sal): Move call to get_next_frame into more
+	inner scope.
+	* inline-frame.c (inilne_state) <inline_state>: Update argument
+	types.
+	(inilne_state) <skipped_symbol>: Rename to...
+	(inilne_state) <skipped_symbols>: ...this, and change to a vector.
+	(skip_inline_frames): Build vector of skipped symbols and use this
+	to reate the inline_state.
+	(inline_skipped_symbol): Add a comment and some assertions, fetch
+	skipped symbol from the list.
+
+2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* buildsym.c (lte_is_less_than): Delete.
+	(buildsym_compunit::end_symtab_with_blockvector): Create local
+	lambda function to sort line table entries, and use
+	std::stable_sort instead of std::sort.
+	* symtab.c (find_pc_sect_line): Skip backward over end of sequence
+	markers when looking for a previous line.
+
+2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf2read.c (lnp_state_machine::record_line): Include
+	end_sequence parameter in debug print out.  Record the line if we
+	are at an end_sequence marker even if it's not the start of a
+	statement.
+	* symmisc.c (maintenance_print_one_line_table): Print end of
+	sequence markers with 'END' not '0'.
+
+2020-01-24  Pedro Alves  <palves@redhat.com>
+
+	PR gdb/25410
+	* thread.c (scoped_restore_current_thread::restore): Use
+	switch_to_inferior_no_thread.
+	* exec.c: Include "progspace-and-thread.h".
+	(add_target_sections, remove_target_sections):
+	scoped_restore_current_pspace_and_thread instead of
+	scoped_restore_current_thread.
+	* infrun.c (handle_vfork_child_exec_or_exit): Assign the pspace
+	and aspace to the inferior before calling clone_program_space.
+	Remove stale comment.
+
+2020-01-24  Christian Biesinger  <cbiesinger@google.com>
+
+	* arm-nbsd-nat.c (arm_nbsd_nat_target::fetch_registers): Rename to...
+	(arm_netbsd_nat_target::fetch_registers): ...this.
+	(arm_nbsd_nat_target::store_registers): Rename to...
+	(arm_netbsd_nat_target::store_registers): ...this.
+
+2020-01-24  Christian Biesinger  <cbiesinger@google.com>
+
+	* arm-nbsd-nat.c: Define _KERNTYPES to get the declaration of
+	register_t.
+
+2020-01-24  Christian Biesinger  <cbiesinger@google.com>
+
+	* aarch64-fbsd-tdep.c (aarch64_fbsd_iterate_over_regset_sections):
+	Update comment.
+	* aarch64-linux-tdep.c (aarch64_linux_iterate_over_regset_sections):
+	Likewise.
+	* arm-fbsd-tdep.c (arm_fbsd_iterate_over_regset_sections): Likewise.
+	* gdbcore.h (deprecated_add_core_fns): Update comment to point to
+	the correct replacement (iterate_over_regset_sections).
+	* riscv-fbsd-tdep.c (riscv_fbsd_iterate_over_regset_sections):
+	Update comment.
+
+2020-01-24  Graham Markall  <graham.markall@embecosm.com>
+
+	PR gdb/23718
+	* gdb/python/python.c (execute_gdb_command): Call
+	async_enable_stdin in catch block.
+
+2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* event-loop.c (start_event_loop): Wrap async_enable_stdin with
+	SWITCH_THRU_ALL_UIS.
+
+2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	PR tui/9765
+	* minsyms.c (lookup_minimal_symbol_by_pc_section): Update header
+	comment, add extra parameter, and update to store previous symbol
+	when appropriate.
+	* minsyms.h (lookup_minimal_symbol_by_pc_section): Update comment,
+	add extra parameter.
+	* tui/tui-disasm.c (tui_disassemble): Update header comment,
+	remove unneeded parameter, add try/catch around gdb_print_insn,
+	rewrite to add items to asm_lines vector.
+	(tui_find_backward_disassembly_start_address): New function.
+	(tui_find_disassembly_address): Updated throughout.
+	(tui_disasm_window::set_contents): Update for changes to
+	tui_disassemble.
+	(tui_disasm_window::do_scroll_vertical): No need to adjust the
+	number of lines to scroll.
+
+2020-01-23  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* objfiles.h (ALL_OBJFILE_OSECTIONS): Move up.
+	(SECT_OFF_DATA): Likewise.
+	(SECT_OFF_RODATA): Likewise.
+	(SECT_OFF_TEXT): Likewise.
+	(SECT_OFF_BSS): Likewise.
+	(struct objfile) <text_section_offset, data_section_offset>: New
+	methods.
+	* amd64-windows-tdep.c (amd64_windows_find_unwind_info): Use
+	objfile::text_section_offset.
+	* coff-pe-read.c (add_pe_forwarded_sym): Likewise.
+	* coffread.c (coff_symtab_read): Likewise.
+	(enter_linenos): Likewise.
+	(process_coff_symbol): Likewise.
+	* ctfread.c (get_objfile_text_range): Likewise.
+	* dtrace-probe.c (dtrace_probe::get_relocated_address):
+	Use objfile::data_section_offset.
+	* dwarf2-frame.c (execute_cfa_program): Use
+	objfile::text_section_offset.
+	(dwarf2_frame_find_fde): Likewise.
+	* dwarf2read.c (create_addrmap_from_index): Likewise.
+	(create_addrmap_from_aranges): Likewise.
+	(dw2_find_pc_sect_compunit_symtab): Likewise.
+	(process_psymtab_comp_unit_reader): Likewise.
+	(add_partial_symbol): Likewise.
+	(add_partial_subprogram): Likewise.
+	(process_full_comp_unit): Likewise.
+	(read_file_scope): Likewise.
+	(read_func_scope): Likewise.
+	(read_lexical_block_scope): Likewise.
+	(read_call_site_scope): Likewise.
+	(dwarf2_rnglists_process): Likewise.
+	(dwarf2_ranges_process): Likewise.
+	(dwarf2_ranges_read): Likewise.
+	(dwarf_decode_lines_1): Likewise.
+	(new_symbol): Likewise.
+	(dwarf2_fetch_die_loc_sect_off): Likewise.
+	(dwarf2_per_cu_text_offset): Likewise.
+	* hppa-bsd-tdep.c (hppabsd_find_global_pointer): Likewise.
+	* hppa-tdep.c (read_unwind_info): Likewise.
+	* ia64-tdep.c (ia64_find_unwind_table): Likewise.
+	* psympriv.h (struct partial_symtab): Likewise.
+	* psymtab.c (find_pc_sect_psymtab): Likewise.
+	* solib-svr4.c (enable_break): Likewise.
+	* stap-probe.c (relocate_address): Use
+	objfile::data_section_offset.
+	* xcoffread.c (enter_line_range): Use
+	objfile::text_section_offset.
+	(read_xcoff_symtab): Likewise.
+
+2020-01-23  Simon Marchi  <simon.marchi@efficios.com>
+
+	* darwin-nat.c (darwin_nat_target::wait_1): Move `inf`
+	declaration to narrower scopes.
+
+2020-01-23  Simon Marchi  <simon.marchi@efficios.com>
+
+	* darwin-nat.h (struct darwin_exception_msg, enum
+	darwin_msg_state, struct darwin_thread_info, darwin_thread_t):
+	Move up.
+	(class darwin_nat_target) <wait_1, check_new_threads,
+	decode_exception_message, decode_message, stop_inferior,
+	init_thread_list, ptrace_him, cancel_breakpoint>: Declare.
+	* darwin-nat.c (darwin_check_new_threads): Rename to...
+	(darwin_nat_target::check_new_threads): ... this.
+	(darwin_suspend_inferior_it): Remove.
+	(darwin_decode_exception_message): Rename to...
+	(darwin_nat_target::decode_exception_message): ... this.
+	(darwin_nat_target::resume): Pass target to find_inferior_ptid.
+	(darwin_decode_message): Rename to...
+	(darwin_nat_target::decode_message): ... this.
+	(cancel_breakpoint): Rename to...
+	(darwin_nat_target::cancel_breakpoint): ... this.
+	(darwin_wait): Rename to...
+	(darwin_nat_target::wait_1): ... this.  Use range-based for loop
+	instead of iterate_over_inferiors.
+	(darwin_nat_target::wait): Call wait_1 instead of darwin_wait.
+	(darwin_stop_inferior): Rename to...
+	(darwin_nat_target::stop_inferior): ... this.
+	(darwin_nat_target::kill): Call wait_1 instead of darwin_wait.
+	(darwin_init_thread_list): Rename to...
+	(darwin_nat_target::init_thread_list): ... this.
+	(darwin_ptrace_him): Rename to...
+	(darwin_nat_target::ptrace_him): ... this.
+	(darwin_nat_target::create_inferior): Pass lambda function to
+	fork_inferior.
+	(darwin_nat_target::detach): Call stop_inferior instead of
+	darwin_stop_inferior.
+	* fork-inferior.h (fork_inferior): Change init_trace_fun
+	parameter to gdb::function_view.
+	* fork-inferior.c (fork_inferior): Likewise.
+
+2020-01-23  Hannes Domani  <ssbssa@yahoo.de>
+
+	* i386-cygwin-tdep.c (core_process_module_section): Update.
+	* windows-nat.c (struct lm_info_windows): Add text_offset.
+	(windows_xfer_shared_libraries): Update.
+	* windows-tdep.c (windows_xfer_shared_library):
+	Add text_offset_cached argument.
+	* windows-tdep.h (windows_xfer_shared_library): Update.
+
+2020-01-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbarch.sh: Add declaration for _initialize_gdbarch.
+
+2020-01-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* remote-sim.c (check_for_duplicate_sim_descriptor): Remove.
+	(get_sim_inferior_data): Remove use of iterate_over_inferiors,
+	replace with range-based for.
+	(gdbsim_interrupt_inferior): Remove.
+	(gdbsim_target::interrupt): Replace iterate_over_inferiors use
+	with a range-based for.  Inline code from
+	gdbsim_interrupt_inferior.
+
+2020-01-21  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infrun.c (proceed): Fix indentation.
+
+2020-01-21  Tom Tromey  <tromey@adacore.com>
+
+	* source-cache.c (source_cache::ensure): Call ext_lang_colorize.
+	* python/python.c (python_extension_ops): Update.
+	(gdbpy_colorize): New function.
+	* python/lib/gdb/__init__.py (colorize): New function.
+	* extension.h (ext_lang_colorize): Declare.
+	* extension.c (ext_lang_colorize): New function.
+	* extension-priv.h (struct extension_language_ops) <colorize>: New
+	member.
+	* cli/cli-style.c (_initialize_cli_style): Update help text.
+
+2020-01-21  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-tdep.c (struct aarch64_displaced_step_closure)
+	<cond>: Change type to bool.
+	(aarch64_displaced_step_b_cond): Update cond to use bool type.
+	(aarch64_displaced_step_cb): Likewise.
+	(aarch64_displaced_step_tb): Likewise.
+
+2020-01-21  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-tdep.c (aarch64_displaced_step_fixup): Add more debugging
+	output.
+
+2020-01-21  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-tdep.c (struct aarch64_displaced_step_closure )
+	<pc_adjust>: Adjust the documentation.
+	(aarch64_displaced_step_fixup): Check if PC really moved before
+	adjusting it.
+
+2020-01-19  Tom Tromey  <tom@tromey.com>
+
+	* disasm.c (~gdb_disassembler): New destructor.
+	(gdb_buffered_insn_length): Call disassemble_free_target.
+	* disasm.h (class gdb_disassembler): Declare destructor.  Use
+	DISABLE_COPY_AND_ASSIGN.
+
+2020-01-19  Tom Tromey  <tom@tromey.com>
+
+	* dwarf2read.c (abbrev_table_up): Move typedef earlier.
+	(die_reader_func_ftype): Remove.
+	(cutu_reader): New class.
+	(dw2_get_file_names_reader): Remove "data" parameter.
+	(dw2_get_file_names): Use cutu_reader.
+	(create_debug_type_hash_table): Update.
+	(read_cutu_die_from_dwo): Update comment.
+	(lookup_dwo_unit): Add dwo_name parameter.
+	(cutu_reader::init_tu_and_read_dwo_dies): Now a method.  Remove
+	die_reader_func_ftype and data parameters.
+	(cutu_reader::cutu_reader): Rename from init_cutu_and_read_dies.
+	Remove die_reader_func_ftype and data parameters.
+	(~cutu_reader): New; from init_cutu_and_read_dies.
+	(cutu_reader::cutu_reader): Rename from
+	init_cutu_and_read_dies_no_follow.  Remove die_reader_func_ftype
+	and data parameters.
+	(init_cutu_and_read_dies_simple): Remove.
+	(struct process_psymtab_comp_unit_data): Remove.
+	(process_psymtab_comp_unit_reader): Remove data parameter; add
+	want_partial_unit and pretend_language parameters.
+	(process_psymtab_comp_unit): Use cutu_reader.
+	(build_type_psymtabs_reader): Remove data parameter.
+	(build_type_psymtabs_1): Use cutu_reader.
+	(process_skeletonless_type_unit): Likewise.
+	(load_partial_comp_unit_reader): Remove.
+	(load_partial_comp_unit): Use cutu_reader.
+	(load_full_comp_unit_reader): Remove.
+	(load_full_comp_unit): Use cutu_reader.
+	(struct create_dwo_cu_data): Remove.
+	(create_dwo_cu_reader): Remove datap parameter; add dwo_file and
+	dwo_unit parameters.
+	(create_cus_hash_table): Use cutu_reader.
+	(struct dwarf2_read_addr_index_data): Remove.
+	(dwarf2_read_addr_index_reader): Remove.
+	(dwarf2_read_addr_index): Use cutu_reader.
+	(read_signatured_type_reader): Remove.
+	(read_signatured_type): Use cutu_reader.
+
+2020-01-19  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui.c (tui_show_assembly): Use tui_suppress_output.
+	* tui/tui-wingeneral.h (class tui_suppress_output): New.
+	(tui_wrefresh): Declare.
+	* tui/tui-wingeneral.c (suppress_output): New global.
+	(tui_suppress_output, ~tui_suppress_output): New constructor and
+	destructor.
+	(tui_wrefresh): New function.
+	(tui_gen_win_info::refresh_window): Use tui_wrefresh.
+	(tui_gen_win_info::make_window): Call wnoutrefresh when needed.
+	* tui/tui-regs.h (struct tui_data_window) <no_refresh>: Declare
+	method.
+	* tui/tui-regs.c (tui_data_window::erase_data_content): Call
+	tui_wrefresh.
+	(tui_data_window::no_refresh): New method.
+	(tui_data_item_window::refresh_window): Call tui_wrefresh.
+	(tui_reg_command): Use tui_suppress_output
+	* tui/tui-layout.c (tui_set_layout): Use tui_suppress_output.
+	* tui/tui-data.h (struct tui_gen_win_info) <no_refresh>: New
+	method.
+	* tui/tui-command.c (tui_refresh_cmd_win): Call tui_wrefresh.
+
+2020-01-19  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-winsource.c (tui_update_source_windows_with_line):
+	Handle case where symtab is null.
+
+2020-01-19  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* linux-fork.c (one_fork_p): Simplify.
+
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
+
+	* top.c (struct qt_args): Remove.
+	(kill_or_detach): Change return type to void, replace `void *`
+	parameter with a proper one.
+	(print_inferior_quit_action):  Likewise.
+	(quit_confirm): Use range-based for loop to iterate over inferiors.
+	(quit_force): Likewise.
+
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
+
+	* mi/mi-main.c (run_one_inferior): Change return type to void, replace
+	`void *` parameter with proper parameters.
+	(mi_cmd_exec_run): Use range-based loop to iterate over inferiors.
+	(print_one_inferior): Change return type to void, replace `void *`
+	parameter with proper parameters.
+	(mi_cmd_list_thread_groups): Use range-based loop to iterate over
+	inferiors.
+	(get_other_inferior): Remove.
+	(mi_cmd_remove_inferior): Use range-based loop to iterate over
+	inferiors.
+
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
+
+	* mi/mi-interp.c (report_initial_inferior): Remove.
+	(mi_interp::init): Use range-based for to iterate over inferiors.
+
+2020-01-17  Simon Marchi  <simon.marchi@efficios.com>
+
+	* python/py-inferior.c (build_inferior_list): Remove.
+	(gdbpy_ref): Use range-based for loop to iterate over inferiors.
+
+2020-01-16  Christian Biesinger  <cbiesinger@google.com>
+
+	* btrace.c (btrace_compute_ftrace_1): Fix spelling error (Unkown).
+	(btrace_stitch_trace): Likewise.
+	* charset.c (intermediate_encoding): Likewise (vaild).
+	* nat/linux-btrace.c (linux_read_pt): Likewise (Unkown).
+	* python/py-record-btrace.c (struct PyMethodDef): Likewise (occurences).
+	* record-btrace.c (record_btrace_print_conf): Likewise (unkown).
+
+2020-01-16  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-tdep.c (windows_get_tlb_type):
+	Add rtl_user_process_parameters type.
+
+2020-01-16  Pedro Alves  <palves@redhat.com>
+	    Norbert Lange  <nolange79@gmail.com>
+
+	PR build/24805
+	* gdbsupport/gdb_proc_service.h (PS_EXPORT): New.
+	(ps_get_thread_area, ps_getpid, ps_lcontinue, ps_lgetfpregs)
+	(ps_lgetregs, ps_lsetfpregs, ps_lsetregs, ps_lstop, ps_pcontinue)
+	(ps_pdread, ps_pdwrite, ps_pglobal_lookup, ps_pstop, ps_ptread)
+	(ps_ptwrite, ps_lgetxregs, ps_lgetxregsize, ps_lsetxregs)
+	(ps_plog): Redeclare exported functions with default visibility.
+
+2020-01-16  Nitika Achra  <Nitika.Achra@amd.com>
+
+	* dwarf2loc.c (decode_debug_loclists_addresses): Handle
+	DW_LLE_base_addressx, DW_LLE_startx_length, DW_LLE_start_length.
+
+2020-01-15  Simon Marchi  <simon.marchi@efficios.com>
+
+	* infcmd.c (post_create_inferior): Use get_thread_regcache
+	instead of get_current_regcache.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	PR symtab/12535:
+	* python/python.c (gdbpy_decode_line): Treat empty string the same
+	as no argument.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* Makefile.in (CLIBS): Remove second use of $(LIBIBERTY).
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* nat/linux-btrace.c: Don't include <config.h>.
+	* nat/linux-ptrace.c: Don't include <config.h>.
+	* nat/x86-linux-dregs.c: Don't include <config.h>.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* configure.ac: Move many checks to ../gdbsupport/common.m4.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* nat/x86-linux-dregs.c: Include configh.h.
+	* nat/linux-ptrace.c: Include configh.h.
+	* nat/linux-btrace.c: Include configh.h.
+	* defs.h: Include config.h, bfd.h.
+	* configure.ac: Don't source common.host.
+	(CONFIG_OBS, CONFIG_SRCS): Remove gdbsupport files.
+	* configure: Rebuild.
+	* acinclude.m4: Update path.
+	* Makefile.in (SUPPORT, LIBSUPPORT, INCSUPPORT): New variables.
+	(CONFIG_SRC_SUBDIR): Remove gdbsupport.
+	(INTERNAL_CFLAGS_BASE): Add INCSUPPORT.
+	(CLIBS): Add LIBSUPPORT.
+	(CDEPS): Likewise.
+	(COMMON_SFILES): Remove gdbsupport files.
+	(HFILES_NO_SRCDIR): Likewise.
+	(stamp-version): Update path to create-version.sh.
+	(ALLDEPFILES): Remove gdbsupport files.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* gdbsupport/common.m4 (GDB_AC_COMMON): Define WIN32APILIBS and
+	USE_WIN32API when needed.
+	* configure.ac (USE_WIN32API): Don't define.
+	(WIN32LIBS): Use WIN32APILIBS.
+	* configure: Rebuild.
+
+2020-01-14  Tom Tromey  <tom@tromey.com>
+
+	* configure: Rebuild.
+	* gdbsupport/common.m4 (GDB_AC_COMMON): Fix indentation.
+
+2020-01-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* skip.c (skip_function_command): Make skip w/o arguments use the
+	name of the inlined function if pc is inside any inlined function.
+
+2020-01-14  Luis Machado  <luis.machado@linaro.org>
+
+	* inf-ptrace.c (inf_ptrace_target::resume): Update comments.
+	* infrun.c (resume_1): Likewise.
+	(handle_inferior_event): Remove stale comment.
+	* linux-nat.c (linux_nat_target::resume): Update comments.
+	(save_stop_reason): Likewise.
+	(linux_nat_filter_event): Likewise.
+	* linux-nat.h (struct lwp_info) <stop_pc>, <stop_reason>: Likewise.
+
+2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* elfread.c (record_minimal_symbol): Set section index to 0 for
+	non-allocatable sections.
+
+
+2020-01-13  Ali Tamur <tamur@google.com>
+
+	* dwarf2read.c (dwarf2_debug_sections): Add debug_str_offsets sections.
+	(dwarf2_cu): Add str_offsets_base field.  Change the type of addr_base
+	to gdb::optional.  Update comments.
+	(dwo_file): Update comments.
+	(read_attribute): Update API to take an additional out parameter,
+	need_reprocess.  This is used to mark attributes that need other
+	attributes (e.g. str_offsets_base) for correct computation which may not
+	have been read yet.
+	(read_attribute_reprocess): New function declaration.
+	(read_addr_index): Likewise.
+	(read_dwo_str_index): Likewise.
+	(read_stub_str_index): Likewise.
+	(dwarf2_per_objfile::locate_sections): Handle debug_str_offsets section.
+	(lookup_addr_base): New function definition.
+	(lookup_ranges_base): Likewise.
+	(read_cutu_die_from_dwo): Use the new functions: lookup_addr_base,
+	lookup_ranges_base.
+	(init_cutu_and_read_dies): Update comments.
+	(init_cutu_and_read_dies_no_follow): Change API to take parent compile
+	unit.  This is used to inherit parent's str_offsets_base and addr_base.
+	Update comments.
+	(init_cutu_and_read_dies_simple): Reflect API changes.
+	(skip_one_die): Reflect API changes.  Handle DW_FORM_rnglistx.
+	(create_cus_hash_table): Change API to take parent compile unit.  
+	Reflect API changes.
+	(open_and_init_dwo_file): Reflect API changes.
+	(dwarf2_get_pc_bounds): Update comments.
+	(dwarf2_record_block_ranges): Likewise.
+	(read_full_die_1): Change implementation to reprocess attributes that
+	need str_offsets_base and addr_base.
+	(partial_die_info::read): Likewise.
+	(read_attribute_reprocess): New function definition.
+	(read_attribute_value): Change API to take an additional out parameter,
+	need_reprocess.  Handle DW_FORM_rnglistx.  No longer trigger an error
+	when a non-dwo compile unit has index based attributes.
+	(read_attribute): Reflect API changes.
+	(read_addr_index_1): Reflect API changes.  Update comments.
+	(dwarf2_read_addr_index_data): Reflect API changes.
+	(dwarf2_read_addr_index): Likewise.
+	(read_str_index): Change API and implementation.  This becomes a helper
+	to be used by the new string index related methods.  Update error
+	message and comments.
+	(read_dwo_str_index): New function definition.
+	(read_stub_str_index): Likewise.
+	* dwarf2read.h (dwarf2_per_objfile): Add str_offsets field.
+	* symfile.h (dwarf2_debug_sections): Likewise.
+	* xcoffread.c (dwarf2_debug_sections): Likewise.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* gdbcore.h (struct core_fns) <core_read_registers>: Change
+	core_reg_sect type to gdb_byte *.
+	* arm-nbsd-nat.c (fetch_elfcore_registers): Likewise.
+	* cris-tdep.c (fetch_core_registers): Likewise.
+	* corelow.c (core_target::get_core_register_section): Change
+	type of `contents` to gdb::byte_vector.
+
+2020-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tui/tui-wingeneral.c (box_win): Position the title in the center
+	of the border.
+
+2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* corelow.c (core_target::get_core_register_section): Use
+	  std::vector instead of alloca.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* warning.m4: Add -Wmissing-declarations to build_warnings.
+	* configure: Re-generate.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* python/python.c (init__gdb_module): Add declaration.
+
+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>
+
+	* aarch64-fbsd-nat.c (_initialize_aarch64_fbsd_nat): Add declaration.
+	* aarch64-fbsd-tdep.c (_initialize_aarch64_fbsd_tdep): Add declaration.
+	* aarch64-linux-nat.c (_initialize_aarch64_linux_nat): Add declaration.
+	* aarch64-linux-tdep.c (_initialize_aarch64_linux_tdep): Add declaration.
+	* aarch64-newlib-tdep.c (_initialize_aarch64_newlib_tdep): Add declaration.
+	* aarch64-tdep.c (_initialize_aarch64_tdep): Add declaration.
+	* ada-exp.y (_initialize_ada_exp): Add declaration.
+	* ada-lang.c (_initialize_ada_language): Add declaration.
+	* ada-tasks.c (_initialize_tasks): Add declaration.
+	* agent.c (_initialize_agent): Add declaration.
+	* aix-thread.c (_initialize_aix_thread): Add declaration.
+	* alpha-bsd-nat.c (_initialize_alphabsd_nat): Add declaration.
+	* alpha-linux-nat.c (_initialize_alpha_linux_nat): Add declaration.
+	* alpha-linux-tdep.c (_initialize_alpha_linux_tdep): Add declaration.
+	* alpha-nbsd-tdep.c (_initialize_alphanbsd_tdep): Add declaration.
+	* alpha-obsd-tdep.c (_initialize_alphaobsd_tdep): Add declaration.
+	* alpha-tdep.c (_initialize_alpha_tdep): Add declaration.
+	* amd64-darwin-tdep.c (_initialize_amd64_darwin_tdep): Add declaration.
+	* amd64-dicos-tdep.c (_initialize_amd64_dicos_tdep): Add declaration.
+	* amd64-fbsd-nat.c (_initialize_amd64fbsd_nat): Add declaration.
+	* amd64-fbsd-tdep.c (_initialize_amd64fbsd_tdep): Add declaration.
+	* amd64-linux-nat.c (_initialize_amd64_linux_nat): Add declaration.
+	* amd64-linux-tdep.c (_initialize_amd64_linux_tdep): Add declaration.
+	* amd64-nbsd-nat.c (_initialize_amd64nbsd_nat): Add declaration.
+	* amd64-nbsd-tdep.c (_initialize_amd64nbsd_tdep): Add declaration.
+	* amd64-obsd-nat.c (_initialize_amd64obsd_nat): Add declaration.
+	* amd64-obsd-tdep.c (_initialize_amd64obsd_tdep): Add declaration.
+	* amd64-sol2-tdep.c (_initialize_amd64_sol2_tdep): Add declaration.
+	* amd64-tdep.c (_initialize_amd64_tdep): Add declaration.
+	* amd64-windows-nat.c (_initialize_amd64_windows_nat): Add declaration.
+	* amd64-windows-tdep.c (_initialize_amd64_windows_tdep): Add declaration.
+	* annotate.c (_initialize_annotate): Add declaration.
+	* arc-newlib-tdep.c (_initialize_arc_newlib_tdep): Add declaration.
+	* arc-tdep.c (_initialize_arc_tdep): Add declaration.
+	* arch-utils.c (_initialize_gdbarch_utils): Add declaration.
+	* arm-fbsd-nat.c (_initialize_arm_fbsd_nat): Add declaration.
+	* arm-fbsd-tdep.c (_initialize_arm_fbsd_tdep): Add declaration.
+	* arm-linux-nat.c (_initialize_arm_linux_nat): Add declaration.
+	* arm-linux-tdep.c (_initialize_arm_linux_tdep): Add declaration.
+	* arm-nbsd-nat.c (_initialize_arm_netbsd_nat): Add declaration.
+	* arm-nbsd-tdep.c (_initialize_arm_netbsd_tdep): Add declaration.
+	* arm-obsd-tdep.c (_initialize_armobsd_tdep): Add declaration.
+	* arm-pikeos-tdep.c (_initialize_arm_pikeos_tdep): Add declaration.
+	* arm-symbian-tdep.c (_initialize_arm_symbian_tdep): Add declaration.
+	* arm-tdep.c (_initialize_arm_tdep): Add declaration.
+	* arm-wince-tdep.c (_initialize_arm_wince_tdep): Add declaration.
+	* auto-load.c (_initialize_auto_load): Add declaration.
+	* auxv.c (_initialize_auxv): Add declaration.
+	* avr-tdep.c (_initialize_avr_tdep): Add declaration.
+	* ax-gdb.c (_initialize_ax_gdb): Add declaration.
+	* bfin-linux-tdep.c (_initialize_bfin_linux_tdep): Add declaration.
+	* bfin-tdep.c (_initialize_bfin_tdep): Add declaration.
+	* break-catch-sig.c (_initialize_break_catch_sig): Add declaration.
+	* break-catch-syscall.c (_initialize_break_catch_syscall): Add declaration.
+	* break-catch-throw.c (_initialize_break_catch_throw): Add declaration.
+	* breakpoint.c (_initialize_breakpoint): Add declaration.
+	* bsd-uthread.c (_initialize_bsd_uthread): Add declaration.
+	* btrace.c (_initialize_btrace): Add declaration.
+	* charset.c (_initialize_charset): Add declaration.
+	* cli/cli-cmds.c (_initialize_cli_cmds): Add declaration.
+	* cli/cli-dump.c (_initialize_cli_dump): Add declaration.
+	* cli/cli-interp.c (_initialize_cli_interp): Add declaration.
+	* cli/cli-logging.c (_initialize_cli_logging): Add declaration.
+	* cli/cli-script.c (_initialize_cli_script): Add declaration.
+	* cli/cli-style.c (_initialize_cli_style): Add declaration.
+	* coff-pe-read.c (_initialize_coff_pe_read): Add declaration.
+	* coffread.c (_initialize_coffread): Add declaration.
+	* compile/compile-cplus-types.c (_initialize_compile_cplus_types): Add declaration.
+	* compile/compile.c (_initialize_compile): Add declaration.
+	* complaints.c (_initialize_complaints): Add declaration.
+	* completer.c (_initialize_completer): Add declaration.
+	* copying.c (_initialize_copying): Add declaration.
+	* corefile.c (_initialize_core): Add declaration.
+	* corelow.c (_initialize_corelow): Add declaration.
+	* cp-abi.c (_initialize_cp_abi): Add declaration.
+	* cp-namespace.c (_initialize_cp_namespace): Add declaration.
+	* cp-support.c (_initialize_cp_support): Add declaration.
+	* cp-valprint.c (_initialize_cp_valprint): Add declaration.
+	* cris-linux-tdep.c (_initialize_cris_linux_tdep): Add declaration.
+	* cris-tdep.c (_initialize_cris_tdep): Add declaration.
+	* csky-linux-tdep.c (_initialize_csky_linux_tdep): Add declaration.
+	* csky-tdep.c (_initialize_csky_tdep): Add declaration.
+	* ctfread.c (_initialize_ctfread): Add declaration.
+	* d-lang.c (_initialize_d_language): Add declaration.
+	* darwin-nat-info.c (_initialize_darwin_info_commands): Add declaration.
+	* darwin-nat.c (_initialize_darwin_nat): Add declaration.
+	* dbxread.c (_initialize_dbxread): Add declaration.
+	* dcache.c (_initialize_dcache): Add declaration.
+	* disasm-selftests.c (_initialize_disasm_selftests): Add declaration.
+	* disasm.c (_initialize_disasm): Add declaration.
+	* dtrace-probe.c (_initialize_dtrace_probe): Add declaration.
+	* dummy-frame.c (_initialize_dummy_frame): Add declaration.
+	* dwarf-index-cache.c (_initialize_index_cache): Add declaration.
+	* dwarf-index-write.c (_initialize_dwarf_index_write): Add declaration.
+	* dwarf2-frame-tailcall.c (_initialize_tailcall_frame): Add declaration.
+	* dwarf2-frame.c (_initialize_dwarf2_frame): Add declaration.
+	* dwarf2expr.c (_initialize_dwarf2expr): Add declaration.
+	* dwarf2loc.c (_initialize_dwarf2loc): Add declaration.
+	* dwarf2read.c (_initialize_dwarf2_read): Add declaration.
+	* elfread.c (_initialize_elfread): Add declaration.
+	* exec.c (_initialize_exec): Add declaration.
+	* extension.c (_initialize_extension): Add declaration.
+	* f-lang.c (_initialize_f_language): Add declaration.
+	* f-valprint.c (_initialize_f_valprint): Add declaration.
+	* fbsd-nat.c (_initialize_fbsd_nat): Add declaration.
+	* fbsd-tdep.c (_initialize_fbsd_tdep): Add declaration.
+	* filesystem.c (_initialize_filesystem): Add declaration.
+	* findcmd.c (_initialize_mem_search): Add declaration.
+	* findvar.c (_initialize_findvar): Add declaration.
+	* fork-child.c (_initialize_fork_child): Add declaration.
+	* frame-base.c (_initialize_frame_base): Add declaration.
+	* frame-unwind.c (_initialize_frame_unwind): Add declaration.
+	* frame.c (_initialize_frame): Add declaration.
+	* frv-linux-tdep.c (_initialize_frv_linux_tdep): Add declaration.
+	* frv-tdep.c (_initialize_frv_tdep): Add declaration.
+	* ft32-tdep.c (_initialize_ft32_tdep): Add declaration.
+	* gcore.c (_initialize_gcore): Add declaration.
+	* gdb-demangle.c (_initialize_gdb_demangle): Add declaration.
+	* gdb_bfd.c (_initialize_gdb_bfd): Add declaration.
+	* gdbarch-selftests.c (_initialize_gdbarch_selftests): Add declaration.
+	* gdbarch.c (_initialize_gdbarch): Add declaration.
+	* gdbtypes.c (_initialize_gdbtypes): Add declaration.
+	* gnu-nat.c (_initialize_gnu_nat): Add declaration.
+	* gnu-v2-abi.c (_initialize_gnu_v2_abi): Add declaration.
+	* gnu-v3-abi.c (_initialize_gnu_v3_abi): Add declaration.
+	* go-lang.c (_initialize_go_language): Add declaration.
+	* go32-nat.c (_initialize_go32_nat): Add declaration.
+	* guile/guile.c (_initialize_guile): Add declaration.
+	* h8300-tdep.c (_initialize_h8300_tdep): Add declaration.
+	* hppa-linux-nat.c (_initialize_hppa_linux_nat): Add declaration.
+	* hppa-linux-tdep.c (_initialize_hppa_linux_tdep): Add declaration.
+	* hppa-nbsd-nat.c (_initialize_hppanbsd_nat): Add declaration.
+	* hppa-nbsd-tdep.c (_initialize_hppanbsd_tdep): Add declaration.
+	* hppa-obsd-nat.c (_initialize_hppaobsd_nat): Add declaration.
+	* hppa-obsd-tdep.c (_initialize_hppabsd_tdep): Add declaration.
+	* hppa-tdep.c (_initialize_hppa_tdep): Add declaration.
+	* i386-bsd-nat.c (_initialize_i386bsd_nat): Add declaration.
+	* i386-cygwin-tdep.c (_initialize_i386_cygwin_tdep): Add declaration.
+	* i386-darwin-nat.c (_initialize_i386_darwin_nat): Add declaration.
+	* i386-darwin-tdep.c (_initialize_i386_darwin_tdep): Add declaration.
+	* i386-dicos-tdep.c (_initialize_i386_dicos_tdep): Add declaration.
+	* i386-fbsd-nat.c (_initialize_i386fbsd_nat): Add declaration.
+	* i386-fbsd-tdep.c (_initialize_i386fbsd_tdep): Add declaration.
+	* i386-gnu-nat.c (_initialize_i386gnu_nat): Add declaration.
+	* i386-gnu-tdep.c (_initialize_i386gnu_tdep): Add declaration.
+	* i386-go32-tdep.c (_initialize_i386_go32_tdep): Add declaration.
+	* i386-linux-nat.c (_initialize_i386_linux_nat): Add declaration.
+	* i386-linux-tdep.c (_initialize_i386_linux_tdep): Add declaration.
+	* i386-nbsd-nat.c (_initialize_i386nbsd_nat): Add declaration.
+	* i386-nbsd-tdep.c (_initialize_i386nbsd_tdep): Add declaration.
+	* i386-nto-tdep.c (_initialize_i386nto_tdep): Add declaration.
+	* i386-obsd-nat.c (_initialize_i386obsd_nat): Add declaration.
+	* i386-obsd-tdep.c (_initialize_i386obsd_tdep): Add declaration.
+	* i386-sol2-nat.c (_initialize_amd64_sol2_nat): Add declaration.
+	* i386-sol2-tdep.c (_initialize_i386_sol2_tdep): Add declaration.
+	* i386-tdep.c (_initialize_i386_tdep): Add declaration.
+	* i386-windows-nat.c (_initialize_i386_windows_nat): Add declaration.
+	* ia64-libunwind-tdep.c (_initialize_libunwind_frame): Add declaration.
+	* ia64-linux-nat.c (_initialize_ia64_linux_nat): Add declaration.
+	* ia64-linux-tdep.c (_initialize_ia64_linux_tdep): Add declaration.
+	* ia64-tdep.c (_initialize_ia64_tdep): Add declaration.
+	* ia64-vms-tdep.c (_initialize_ia64_vms_tdep): Add declaration.
+	* infcall.c (_initialize_infcall): Add declaration.
+	* infcmd.c (_initialize_infcmd): Add declaration.
+	* inflow.c (_initialize_inflow): Add declaration.
+	* infrun.c (_initialize_infrun): Add declaration.
+	* interps.c (_initialize_interpreter): Add declaration.
+	* iq2000-tdep.c (_initialize_iq2000_tdep): Add declaration.
+	* jit.c (_initialize_jit): Add declaration.
+	* language.c (_initialize_language): Add declaration.
+	* linux-fork.c (_initialize_linux_fork): Add declaration.
+	* linux-nat.c (_initialize_linux_nat): Add declaration.
+	* linux-tdep.c (_initialize_linux_tdep): Add declaration.
+	* linux-thread-db.c (_initialize_thread_db): Add declaration.
+	* lm32-tdep.c (_initialize_lm32_tdep): Add declaration.
+	* m2-lang.c (_initialize_m2_language): Add declaration.
+	* m32c-tdep.c (_initialize_m32c_tdep): Add declaration.
+	* m32r-linux-nat.c (_initialize_m32r_linux_nat): Add declaration.
+	* m32r-linux-tdep.c (_initialize_m32r_linux_tdep): Add declaration.
+	* m32r-tdep.c (_initialize_m32r_tdep): Add declaration.
+	* m68hc11-tdep.c (_initialize_m68hc11_tdep): Add declaration.
+	* m68k-bsd-nat.c (_initialize_m68kbsd_nat): Add declaration.
+	* m68k-bsd-tdep.c (_initialize_m68kbsd_tdep): Add declaration.
+	* m68k-linux-nat.c (_initialize_m68k_linux_nat): Add declaration.
+	* m68k-linux-tdep.c (_initialize_m68k_linux_tdep): Add declaration.
+	* m68k-tdep.c (_initialize_m68k_tdep): Add declaration.
+	* machoread.c (_initialize_machoread): Add declaration.
+	* macrocmd.c (_initialize_macrocmd): Add declaration.
+	* macroscope.c (_initialize_macroscope): Add declaration.
+	* maint-test-options.c (_initialize_maint_test_options): Add declaration.
+	* maint-test-settings.c (_initialize_maint_test_settings): Add declaration.
+	* maint.c (_initialize_maint_cmds): Add declaration.
+	* mdebugread.c (_initialize_mdebugread): Add declaration.
+	* memattr.c (_initialize_mem): Add declaration.
+	* mep-tdep.c (_initialize_mep_tdep): Add declaration.
+	* mi/mi-cmd-env.c (_initialize_mi_cmd_env): Add declaration.
+	* mi/mi-cmds.c (_initialize_mi_cmds): Add declaration.
+	* mi/mi-interp.c (_initialize_mi_interp): Add declaration.
+	* mi/mi-main.c (_initialize_mi_main): Add declaration.
+	* microblaze-linux-tdep.c (_initialize_microblaze_linux_tdep): Add declaration.
+	* microblaze-tdep.c (_initialize_microblaze_tdep): Add declaration.
+	* mips-fbsd-nat.c (_initialize_mips_fbsd_nat): Add declaration.
+	* mips-fbsd-tdep.c (_initialize_mips_fbsd_tdep): Add declaration.
+	* mips-linux-nat.c (_initialize_mips_linux_nat): Add declaration.
+	* mips-linux-tdep.c (_initialize_mips_linux_tdep): Add declaration.
+	* mips-nbsd-nat.c (_initialize_mipsnbsd_nat): Add declaration.
+	* mips-nbsd-tdep.c (_initialize_mipsnbsd_tdep): Add declaration.
+	* mips-sde-tdep.c (_initialize_mips_sde_tdep): Add declaration.
+	* mips-tdep.c (_initialize_mips_tdep): Add declaration.
+	* mips64-obsd-nat.c (_initialize_mips64obsd_nat): Add declaration.
+	* mips64-obsd-tdep.c (_initialize_mips64obsd_tdep): Add declaration.
+	* mipsread.c (_initialize_mipsread): Add declaration.
+	* mn10300-linux-tdep.c (_initialize_mn10300_linux_tdep): Add declaration.
+	* mn10300-tdep.c (_initialize_mn10300_tdep): Add declaration.
+	* moxie-tdep.c (_initialize_moxie_tdep): Add declaration.
+	* msp430-tdep.c (_initialize_msp430_tdep): Add declaration.
+	* nds32-tdep.c (_initialize_nds32_tdep): Add declaration.
+	* nios2-linux-tdep.c (_initialize_nios2_linux_tdep): Add declaration.
+	* nios2-tdep.c (_initialize_nios2_tdep): Add declaration.
+	* nto-procfs.c (_initialize_procfs): Add declaration.
+	* objc-lang.c (_initialize_objc_language): Add declaration.
+	* observable.c (_initialize_observer): Add declaration.
+	* opencl-lang.c (_initialize_opencl_language): Add declaration.
+	* or1k-linux-tdep.c (_initialize_or1k_linux_tdep): Add declaration.
+	* or1k-tdep.c (_initialize_or1k_tdep): Add declaration.
+	* osabi.c (_initialize_gdb_osabi): Add declaration.
+	* osdata.c (_initialize_osdata): Add declaration.
+	* p-valprint.c (_initialize_pascal_valprint): Add declaration.
+	* parse.c (_initialize_parse): Add declaration.
+	* ppc-fbsd-nat.c (_initialize_ppcfbsd_nat): Add declaration.
+	* ppc-fbsd-tdep.c (_initialize_ppcfbsd_tdep): Add declaration.
+	* ppc-linux-nat.c (_initialize_ppc_linux_nat): Add declaration.
+	* ppc-linux-tdep.c (_initialize_ppc_linux_tdep): Add declaration.
+	* ppc-nbsd-nat.c (_initialize_ppcnbsd_nat): Add declaration.
+	* ppc-nbsd-tdep.c (_initialize_ppcnbsd_tdep): Add declaration.
+	* ppc-obsd-nat.c (_initialize_ppcobsd_nat): Add declaration.
+	* ppc-obsd-tdep.c (_initialize_ppcobsd_tdep): Add declaration.
+	* printcmd.c (_initialize_printcmd): Add declaration.
+	* probe.c (_initialize_probe): Add declaration.
+	* proc-api.c (_initialize_proc_api): Add declaration.
+	* proc-events.c (_initialize_proc_events): Add declaration.
+	* proc-service.c (_initialize_proc_service): Add declaration.
+	* procfs.c (_initialize_procfs): Add declaration.
+	* producer.c (_initialize_producer): Add declaration.
+	* psymtab.c (_initialize_psymtab): Add declaration.
+	* python/python.c (_initialize_python): Add declaration.
+	* ravenscar-thread.c (_initialize_ravenscar): Add declaration.
+	* record-btrace.c (_initialize_record_btrace): Add declaration.
+	* record-full.c (_initialize_record_full): Add declaration.
+	* record.c (_initialize_record): Add declaration.
+	* regcache-dump.c (_initialize_regcache_dump): Add declaration.
+	* regcache.c (_initialize_regcache): Add declaration.
+	* reggroups.c (_initialize_reggroup): Add declaration.
+	* remote-notif.c (_initialize_notif): Add declaration.
+	* remote-sim.c (_initialize_remote_sim): Add declaration.
+	* remote.c (_initialize_remote): Add declaration.
+	* reverse.c (_initialize_reverse): Add declaration.
+	* riscv-fbsd-nat.c (_initialize_riscv_fbsd_nat): Add declaration.
+	* riscv-fbsd-tdep.c (_initialize_riscv_fbsd_tdep): Add declaration.
+	* riscv-linux-nat.c (_initialize_riscv_linux_nat): Add declaration.
+	* riscv-linux-tdep.c (_initialize_riscv_linux_tdep): Add declaration.
+	* riscv-tdep.c (_initialize_riscv_tdep): Add declaration.
+	* rl78-tdep.c (_initialize_rl78_tdep): Add declaration.
+	* rs6000-aix-tdep.c (_initialize_rs6000_aix_tdep): Add declaration.
+	* rs6000-lynx178-tdep.c (_initialize_rs6000_lynx178_tdep):
+	Add declaration.
+	* rs6000-nat.c (_initialize_rs6000_nat): Add declaration.
+	* rs6000-tdep.c (_initialize_rs6000_tdep): Add declaration.
+	* run-on-main-thread.c (_initialize_run_on_main_thread): Add declaration.
+	* rust-exp.y (_initialize_rust_exp): Add declaration.
+	* rx-tdep.c (_initialize_rx_tdep): Add declaration.
+	* s12z-tdep.c (_initialize_s12z_tdep): Add declaration.
+	* s390-linux-nat.c (_initialize_s390_nat): Add declaration.
+	* s390-linux-tdep.c (_initialize_s390_linux_tdep): Add declaration.
+	* s390-tdep.c (_initialize_s390_tdep): Add declaration.
+	* score-tdep.c (_initialize_score_tdep): Add declaration.
+	* ser-go32.c (_initialize_ser_dos): Add declaration.
+	* ser-mingw.c (_initialize_ser_windows): Add declaration.
+	* ser-pipe.c (_initialize_ser_pipe): Add declaration.
+	* ser-tcp.c (_initialize_ser_tcp): Add declaration.
+	* ser-uds.c (_initialize_ser_socket): Add declaration.
+	* ser-unix.c (_initialize_ser_hardwire): Add declaration.
+	* serial.c (_initialize_serial): Add declaration.
+	* sh-linux-tdep.c (_initialize_sh_linux_tdep): Add declaration.
+	* sh-nbsd-nat.c (_initialize_shnbsd_nat): Add declaration.
+	* sh-nbsd-tdep.c (_initialize_shnbsd_tdep): Add declaration.
+	* sh-tdep.c (_initialize_sh_tdep): Add declaration.
+	* skip.c (_initialize_step_skip): Add declaration.
+	* sol-thread.c (_initialize_sol_thread): Add declaration.
+	* solib-aix.c (_initialize_solib_aix): Add declaration.
+	* solib-darwin.c (_initialize_darwin_solib): Add declaration.
+	* solib-dsbt.c (_initialize_dsbt_solib): Add declaration.
+	* solib-frv.c (_initialize_frv_solib): Add declaration.
+	* solib-svr4.c (_initialize_svr4_solib): Add declaration.
+	* solib-target.c (_initialize_solib_target): Add declaration.
+	* solib.c (_initialize_solib): Add declaration.
+	* source-cache.c (_initialize_source_cache): Add declaration.
+	* source.c (_initialize_source): Add declaration.
+	* sparc-linux-nat.c (_initialize_sparc_linux_nat): Add declaration.
+	* sparc-linux-tdep.c (_initialize_sparc_linux_tdep): Add declaration.
+	* sparc-nat.c (_initialize_sparc_nat): Add declaration.
+	* sparc-nbsd-nat.c (_initialize_sparcnbsd_nat): Add declaration.
+	* sparc-nbsd-tdep.c (_initialize_sparcnbsd_tdep): Add declaration.
+	* sparc-obsd-tdep.c (_initialize_sparc32obsd_tdep): Add declaration.
+	* sparc-sol2-tdep.c (_initialize_sparc_sol2_tdep): Add declaration.
+	* sparc-tdep.c (_initialize_sparc_tdep): Add declaration.
+	* sparc64-fbsd-nat.c (_initialize_sparc64fbsd_nat): Add declaration.
+	* sparc64-fbsd-tdep.c (_initialize_sparc64fbsd_tdep): Add declaration.
+	* sparc64-linux-nat.c (_initialize_sparc64_linux_nat): Add declaration.
+	* sparc64-linux-tdep.c (_initialize_sparc64_linux_tdep): Add declaration.
+	* sparc64-nat.c (_initialize_sparc64_nat): Add declaration.
+	* sparc64-nbsd-nat.c (_initialize_sparc64nbsd_nat): Add declaration.
+	* sparc64-nbsd-tdep.c (_initialize_sparc64nbsd_tdep): Add declaration.
+	* sparc64-obsd-nat.c (_initialize_sparc64obsd_nat): Add declaration.
+	* sparc64-obsd-tdep.c (_initialize_sparc64obsd_tdep): Add declaration.
+	* sparc64-sol2-tdep.c (_initialize_sparc64_sol2_tdep): Add declaration.
+	* sparc64-tdep.c (_initialize_sparc64_adi_tdep): Add declaration.
+	* stabsread.c (_initialize_stabsread): Add declaration.
+	* stack.c (_initialize_stack): Add declaration.
+	* stap-probe.c (_initialize_stap_probe): Add declaration.
+	* std-regs.c (_initialize_frame_reg): Add declaration.
+	* symfile-debug.c (_initialize_symfile_debug): Add declaration.
+	* symfile-mem.c (_initialize_symfile_mem): Add declaration.
+	* symfile.c (_initialize_symfile): Add declaration.
+	* symmisc.c (_initialize_symmisc): Add declaration.
+	* symtab.c (_initialize_symtab): Add declaration.
+	* target.c (_initialize_target): Add declaration.
+	* target-connection.c (_initialize_target_connection): Add
+	declaration.
+	* target-dcache.c (_initialize_target_dcache): Add declaration.
+	* target-descriptions.c (_initialize_target_descriptions): Add declaration.
+	* thread.c (_initialize_thread): Add declaration.
+	* tic6x-linux-tdep.c (_initialize_tic6x_linux_tdep): Add declaration.
+	* tic6x-tdep.c (_initialize_tic6x_tdep): Add declaration.
+	* tilegx-linux-nat.c (_initialize_tile_linux_nat): Add declaration.
+	* tilegx-linux-tdep.c (_initialize_tilegx_linux_tdep): Add declaration.
+	* tilegx-tdep.c (_initialize_tilegx_tdep): Add declaration.
+	* tracectf.c (_initialize_ctf): Add declaration.
+	* tracefile-tfile.c (_initialize_tracefile_tfile): Add declaration.
+	* tracefile.c (_initialize_tracefile): Add declaration.
+	* tracepoint.c (_initialize_tracepoint): Add declaration.
+	* tui/tui-hooks.c (_initialize_tui_hooks): Add declaration.
+	* tui/tui-interp.c (_initialize_tui_interp): Add declaration.
+	* tui/tui-layout.c (_initialize_tui_layout): Add declaration.
+	* tui/tui-regs.c (_initialize_tui_regs): Add declaration.
+	* tui/tui-stack.c (_initialize_tui_stack): Add declaration.
+	* tui/tui-win.c (_initialize_tui_win): Add declaration.
+	* tui/tui.c (_initialize_tui): Add declaration.
+	* typeprint.c (_initialize_typeprint): Add declaration.
+	* ui-style.c (_initialize_ui_style): Add declaration.
+	* unittests/array-view-selftests.c (_initialize_array_view_selftests): Add declaration.
+	* unittests/child-path-selftests.c (_initialize_child_path_selftests): Add declaration.
+	* unittests/cli-utils-selftests.c (_initialize_cli_utils_selftests): Add declaration.
+	* unittests/common-utils-selftests.c (_initialize_common_utils_selftests): Add declaration.
+	* unittests/copy_bitwise-selftests.c (_initialize_copy_bitwise_utils_selftests): Add declaration.
+	* unittests/environ-selftests.c (_initialize_environ_selftests): Add declaration.
+	* unittests/filtered_iterator-selftests.c
+	(_initialize_filtered_iterator_selftests): Add declaration.
+	* unittests/format_pieces-selftests.c (_initialize_format_pieces_selftests): Add declaration.
+	* unittests/function-view-selftests.c (_initialize_function_view_selftests): Add declaration.
+	* unittests/help-doc-selftests.c (_initialize_help_doc_selftests): Add declaration.
+	* unittests/lookup_name_info-selftests.c (_initialize_lookup_name_info_selftests): Add declaration.
+	* unittests/main-thread-selftests.c
+	(_initialize_main_thread_selftests): Add declaration.
+	* unittests/memory-map-selftests.c (_initialize_memory_map_selftests): Add declaration.
+	* unittests/memrange-selftests.c (_initialize_memrange_selftests): Add declaration.
+	* unittests/mkdir-recursive-selftests.c (_initialize_mkdir_recursive_selftests): Add declaration.
+	* unittests/observable-selftests.c (_initialize_observer_selftest): Add declaration.
+	* unittests/offset-type-selftests.c (_initialize_offset_type_selftests): Add declaration.
+	* unittests/optional-selftests.c (_initialize_optional_selftests): Add declaration.
+	* unittests/parse-connection-spec-selftests.c (_initialize_parse_connection_spec_selftests): Add declaration.
+	* unittests/rsp-low-selftests.c (_initialize_rsp_low_selftests): Add declaration.
+	* unittests/scoped_fd-selftests.c (_initialize_scoped_fd_selftests): Add declaration.
+	* unittests/scoped_mmap-selftests.c (_initialize_scoped_mmap_selftests): Add declaration.
+	* unittests/scoped_restore-selftests.c (_initialize_scoped_restore_selftests): Add declaration.
+	* unittests/string_view-selftests.c (_initialize_string_view_selftests): Add declaration.
+	* unittests/style-selftests.c (_initialize_style_selftest): Add declaration.
+	* unittests/tracepoint-selftests.c (_initialize_tracepoint_selftests): Add declaration.
+	* unittests/tui-selftests.c (_initialize_tui_selftest): Add
+	declaration.
+	* unittests/unpack-selftests.c (_initialize_unpack_selftests): Add declaration.
+	* unittests/utils-selftests.c (_initialize_utils_selftests): Add declaration.
+	* unittests/vec-utils-selftests.c (_initialize_vec_utils_selftests): Add declaration.
+	* unittests/xml-utils-selftests.c (_initialize_xml_utils): Add declaration.
+	* user-regs.c (_initialize_user_regs): Add declaration.
+	* utils.c (_initialize_utils): Add declaration.
+	* v850-tdep.c (_initialize_v850_tdep): Add declaration.
+	* valops.c (_initialize_valops): Add declaration.
+	* valprint.c (_initialize_valprint): Add declaration.
+	* value.c (_initialize_values): Add declaration.
+	* varobj.c (_initialize_varobj): Add declaration.
+	* vax-bsd-nat.c (_initialize_vaxbsd_nat): Add declaration.
+	* vax-nbsd-tdep.c (_initialize_vaxnbsd_tdep): Add declaration.
+	* vax-tdep.c (_initialize_vax_tdep): Add declaration.
+	* windows-nat.c (_initialize_windows_nat): Add declaration.
+	(_initialize_check_for_gdb_ini): Add declaration.
+	(_initialize_loadable): Add declaration.
+	* windows-tdep.c (_initialize_windows_tdep): Add declaration.
+	* x86-bsd-nat.c (_initialize_x86_bsd_nat): Add declaration.
+	* x86-linux-nat.c (_initialize_x86_linux_nat): Add declaration.
+	* xcoffread.c (_initialize_xcoffread): Add declaration.
+	* xml-support.c (_initialize_xml_support): Add declaration.
+	* xstormy16-tdep.c (_initialize_xstormy16_tdep): Add declaration.
+	* xtensa-linux-nat.c (_initialize_xtensa_linux_nat): Add declaration.
+	* xtensa-linux-tdep.c (_initialize_xtensa_linux_tdep): Add declaration.
+	* xtensa-tdep.c (_initialize_xtensa_tdep): Add declaration.
+
+2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* regformats/regdat.sh: Generate declaration for init function.
+
+2020-01-13  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* remote-sim.c (next_pid, INITIAL_PID, sim_inferior_data): Move
+	up.
+	(gdbsim_target) <get_inferior_data_by_ptid, resume_one_inferior,
+	close_one_inferior>: New methods.
+	(get_sim_inferior_data_by_ptid): Move to gdbsim_target,
+	pass down target to find_inferior_pid.
+	(gdbsim_target::fetch_registers, gdbsim_target::store_registers):
+	Pass down target to find_inferior_ptid.
+	(gdbsim_target::create_inferior): Pass down target to
+	add_thread_silent.
+	(gdbsim_close_inferior): Move to gdbsim_close_inferior, pass
+	target down to find_inferior_ptid and switch_to_thread.
+	(gdbsim_target::close): Update to call close_one_inferior.
+	(struct resume_data): Remove.
+	(gdbsim_resume_inferior): Move to gdbsim_target.  Take arguments
+	directly, rather than through a void pointer.
+	(gdbsim_target::resume): Update to call resume_one_inferior.
+
+2020-01-12  Simon Marchi  <simon.marchi@polymtl.ca>
+
+	* gdbsupport/gdb_wait.c: Include gdb_wait.h.
+
+2020-01-12  Pedro Alves  <palves@redhat.com>
+
+	* bsd-kvm.c (bsd_kvm_target::close): Call exit_inferior_silent
+	directly for the current inferior instead of
+	discard_all_inferiors.
+	(discard_all_inferiors): Delete.
+
+2020-01-11  Tom Tromey  <tom@tromey.com>
+
+	* tui/tui-wingeneral.c (box_win): Check cli_styling.
+	* tui/tui-winsource.c (tui_source_window_base::refill): Use
+	deprecated_safe_get_selected_frame.
+
+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+
+	* inferior.c (print_inferior): Switch inferior before printing it.
+
+2020-01-10  Aleksandar Paunovic  <aleksandar.paunovic@intel.com>
+	    Pedro Alves  <palves@redhat.com>
+
+	* progspace-and-thread.c (switch_to_program_space_and_thread):
+	Assert there's an inferior for PSPACE.  Use
+	switch_to_inferior_no_thread to switch the inferior too.
+	* progspace.c (program_space::~program_space): Call
+	clear_symtab_users here, with SYMFILE_DEFER_BP_RESET.
+	(program_space::free_all_objfiles): Don't call clear_symtab_users
+	here.
+	* symfile.c (symbol_file_clear): Call clear_symtab_users here.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* NEWS: Mention multi-target debugging, "info connections", and
+	"add-inferior -no-connection".
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* infrun.c: Include "target-connection.h".
+	(check_multi_target_resumption): New.
+	(proceed): Call it.
+	* target-connection.c (make_target_connection_string): Make
+	extern.
+	* target-connection.h (make_target_connection_string): Declare.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* Makefile.in (COMMON_SFILES): Add target-connection.c.
+	* inferior.c (uiout_field_connection): New function.
+	(print_inferior): Add new "connection-id" column.
+	(add_inferior_command): Show connection number/string of added
+	inferior.
+	* process-stratum-target.h
+	(process_stratum_target::connection_string): New virtual method.
+	(process_stratum_target::connection_number): New field.
+	* remote.c (remote_target::connection_string): New override.
+	* target-connection.c: New file.
+	* target-connection.h: New file.
+	* target.c (decref_target): Remove process_stratum targets from
+	the connection list.
+	(target_stack::push): Add process_stratum targets to the
+	connection list.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	Revert:
+	2016-04-12  Pedro Alves  <palves@redhat.com>
+	* serial.c (serial_open, serial_fdopen_ops, do_serial_close):
+	Remove references to name.
+	* serial.h (struct serial) <name>: Delete.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdbarch-selftests.c (register_to_value_test): Remove "target
+	already pushed" check.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+	    John Baldwin  <jhb@FreeBSD.org>
+
+	* aarch64-linux-nat.c
+	(aarch64_linux_nat_target::thread_architecture): Adjust.
+	* ada-tasks.c (print_ada_task_info): Adjust find_thread_ptid call.
+	(task_command_1): Likewise.
+	* aix-thread.c (sync_threadlists, aix_thread_target::resume)
+	(aix_thread_target::wait, aix_thread_target::fetch_registers)
+	(aix_thread_target::store_registers)
+	(aix_thread_target::thread_alive): Adjust.
+	* amd64-fbsd-tdep.c: Include "inferior.h".
+	(amd64fbsd_get_thread_local_address): Pass down target.
+	* amd64-linux-nat.c (ps_get_thread_area): Use ps_prochandle
+	thread's gdbarch instead of target_gdbarch.
+	* break-catch-sig.c (signal_catchpoint_print_it): Adjust call to
+	get_last_target_status.
+	* break-catch-syscall.c (print_it_catch_syscall): Likewise.
+	* breakpoint.c (breakpoints_should_be_inserted_now): Consider all
+	inferiors.
+	(update_inserted_breakpoint_locations): Skip if inferiors with no
+	execution.
+	(update_global_location_list): When handling moribund locations,
+	find representative inferior for location's pspace, and use thread
+	count of its process_stratum target.
+	* bsd-kvm.c (bsd_kvm_target_open): Pass target down.
+	* bsd-uthread.c (bsd_uthread_target::wait): Use
+	as_process_stratum_target and adjust thread_change_ptid and
+	add_thread calls.
+	(bsd_uthread_target::update_thread_list): Use
+	as_process_stratum_target and adjust find_thread_ptid,
+	thread_change_ptid and add_thread calls.
+	* btrace.c (maint_btrace_packet_history_cmd): Adjust
+	find_thread_ptid call.
+	* corelow.c (add_to_thread_list): Adjust add_thread call.
+	(core_target_open): Adjust add_thread_silent and thread_count
+	calls.
+	(core_target::pid_to_str): Adjust find_inferior_ptid call.
+	* ctf.c (ctf_target_open): Adjust add_thread_silent call.
+	* event-top.c (async_disconnect): Pop targets from all inferiors.
+	* exec.c (add_target_sections): Push exec target on all inferiors
+	sharing the program space.
+	(remove_target_sections): Remove the exec target from all
+	inferiors sharing the program space.
+	(exec_on_vfork): New.
+	* exec.h (exec_on_vfork): Declare.
+	* fbsd-nat.c (fbsd_add_threads): Add fbsd_nat_target parameter.
+	Pass it down.
+	(fbsd_nat_target::update_thread_list): Adjust.
+	(fbsd_nat_target::resume): Adjust.
+	(fbsd_handle_debug_trap): Add fbsd_nat_target parameter.  Pass it
+	down.
+	(fbsd_nat_target::wait, fbsd_nat_target::post_attach): Adjust.
+	* fbsd-tdep.c (fbsd_corefile_thread): Adjust
+	get_thread_arch_regcache call.
+	* fork-child.c (gdb_startup_inferior): Pass target down to
+	startup_inferior and set_executing.
+	* gdbthread.h (struct process_stratum_target): Forward declare.
+	(add_thread, add_thread_silent, add_thread_with_info)
+	(in_thread_list): Add process_stratum_target parameter.
+	(find_thread_ptid(inferior*, ptid_t)): New overload.
+	(find_thread_ptid, thread_change_ptid): Add process_stratum_target
+	parameter.
+	(all_threads()): Delete overload.
+	(all_threads, all_non_exited_threads): Add process_stratum_target
+	parameter.
+	(all_threads_safe): Use brace initialization.
+	(thread_count): Add process_stratum_target parameter.
+	(set_resumed, set_running, set_stop_requested, set_executing)
+	(threads_are_executing, finish_thread_state): Add
+	process_stratum_target parameter.
+	(switch_to_thread): Use is_current_thread.
+	* i386-fbsd-tdep.c: Include "inferior.h".
+	(i386fbsd_get_thread_local_address): Pass down target.
+	* i386-linux-nat.c (i386_linux_nat_target::low_resume): Adjust.
+	* inf-child.c (inf_child_target::maybe_unpush_target): Remove
+	have_inferiors check.
+	* inf-ptrace.c (inf_ptrace_target::create_inferior)
+	(inf_ptrace_target::attach): Adjust.
+	* infcall.c (run_inferior_call): Adjust.
+	* infcmd.c (run_command_1): Pass target to
+	scoped_finish_thread_state.
+	(proceed_thread_callback): Skip inferiors with no execution.
+	(continue_command): Rename 'all_threads' local to avoid hiding
+	'all_threads' function.  Adjust get_last_target_status call.
+	(prepare_one_step): Adjust set_running call.
+	(signal_command): Use user_visible_resume_target.  Compare thread
+	pointers instead of inferior_ptid.
+	(info_program_command): Adjust to pass down target.
+	(attach_command): Mark target's 'thread_executing' flag.
+	(stop_current_target_threads_ns): New, factored out from ...
+	(interrupt_target_1): ... this.  Switch inferior before making
+	target calls.
+	* inferior-iter.h
+	(struct all_inferiors_iterator, struct all_inferiors_range)
+	(struct all_inferiors_safe_range)
+	(struct all_non_exited_inferiors_range): Filter on
+	process_stratum_target too.  Remove explicit.
+	* inferior.c (inferior::inferior): Push dummy target on target
+	stack.
+	(find_inferior_pid, find_inferior_ptid, number_of_live_inferiors):
+	Add process_stratum_target parameter, and pass it down.
+	(have_live_inferiors): Adjust.
+	(switch_to_inferior_and_push_target): New.
+	(add_inferior_command, clone_inferior_command): Handle
+	"-no-connection" parameter.  Use
+	switch_to_inferior_and_push_target.
+	(_initialize_inferior): Mention "-no-connection" option in
+	the help of "add-inferior" and "clone-inferior" commands.
+	* inferior.h: Include "process-stratum-target.h".
+	(interrupt_target_1): Use bool.
+	(struct inferior) <push_target, unpush_target, target_is_pushed,
+	find_target_beneath, top_target, process_target, target_at,
+	m_stack>: New.
+	(discard_all_inferiors): Delete.
+	(find_inferior_pid, find_inferior_ptid, number_of_live_inferiors)
+	(all_inferiors, all_non_exited_inferiors): Add
+	process_stratum_target parameter.
+	* infrun.c: Include "gdb_select.h" and <unordered_map>.
+	(target_last_proc_target): New global.
+	(follow_fork_inferior): Push target on new inferior.  Pass target
+	to add_thread_silent.  Call exec_on_vfork.  Handle target's
+	reference count.
+	(follow_fork): Adjust get_last_target_status call.  Also consider
+	target.
+	(follow_exec): Push target on new inferior.
+	(struct execution_control_state) <target>: New field.
+	(user_visible_resume_target): New.
+	(do_target_resume): Call target_async.
+	(resume_1): Set target's threads_executing flag.  Consider resume
+	target.
+	(commit_resume_all_targets): New.
+	(proceed): Also consider resume target.  Skip threads of inferiors
+	with no execution.  Commit resumtion in all targets.
+	(start_remote): Pass current inferior to wait_for_inferior.
+	(infrun_thread_stop_requested): Consider target as well.  Pass
+	thread_info pointer to clear_inline_frame_state instead of ptid.
+	(infrun_thread_thread_exit): Consider target as well.
+	(random_pending_event_thread): New inferior parameter.  Use it.
+	(do_target_wait): Rename to ...
+	(do_target_wait_1): ... this.  Add inferior parameter, and pass it
+	down.
+	(threads_are_resumed_pending_p, do_target_wait): New.
+	(prepare_for_detach): Adjust calls.
+	(wait_for_inferior): New inferior parameter.  Handle it.  Use
+	do_target_wait_1 instead of do_target_wait.
+	(fetch_inferior_event): Adjust.  Switch to representative
+	inferior.  Pass target down.
+	(set_last_target_status): Add process_stratum_target parameter.
+	Save target in global.
+	(get_last_target_status): Add process_stratum_target parameter and
+	handle it.
+	(nullify_last_target_wait_ptid): Clear 'target_last_proc_target'.
+	(context_switch): Check inferior_ptid == null_ptid before calling
+	inferior_thread().
+	(get_inferior_stop_soon): Pass down target.
+	(wait_one): Rename to ...
+	(poll_one_curr_target): ... this.
+	(struct wait_one_event): New.
+	(wait_one): New.
+	(stop_all_threads): Adjust.
+	(handle_no_resumed, handle_inferior_event): Adjust to consider the
+	event's target.
+	(switch_back_to_stepped_thread): Also consider target.
+	(print_stop_event): Update.
+	(normal_stop): Update.  Also consider the resume target.
+	* infrun.h (wait_for_inferior): Remove declaration.
+	(user_visible_resume_target): New declaration.
+	(get_last_target_status, set_last_target_status): New
+	process_stratum_target parameter.
+	* inline-frame.c (clear_inline_frame_state(ptid_t)): Add
+	process_stratum_target parameter, and use it.
+	(clear_inline_frame_state (thread_info*)): New.
+	* inline-frame.c (clear_inline_frame_state(ptid_t)): Add
+	process_stratum_target parameter.
+	(clear_inline_frame_state (thread_info*)): Declare.
+	* linux-fork.c (delete_checkpoint_command): Pass target down to
+	find_thread_ptid.
+	(checkpoint_command): Adjust.
+	* linux-nat.c (linux_nat_target::follow_fork): Switch to thread
+	instead of just tweaking inferior_ptid.
+	(linux_nat_switch_fork): Pass target down to thread_change_ptid.
+	(exit_lwp): Pass target down to find_thread_ptid.
+	(attach_proc_task_lwp_callback): Pass target down to
+	add_thread/set_running/set_executing.
+	(linux_nat_target::attach): Pass target down to
+	thread_change_ptid.
+	(get_detach_signal): Pass target down to find_thread_ptid.
+	Consider last target status's target.
+	(linux_resume_one_lwp_throw, resume_lwp)
+	(linux_handle_syscall_trap, linux_handle_extended_wait, wait_lwp)
+	(stop_wait_callback, save_stop_reason, linux_nat_filter_event)
+	(linux_nat_wait_1, resume_stopped_resumed_lwps): Pass target down.
+	(linux_nat_target::async_wait_fd): New.
+	(linux_nat_stop_lwp, linux_nat_target::thread_address_space): Pass
+	target down.
+	* linux-nat.h (linux_nat_target::async_wait_fd): Declare.
+	* linux-tdep.c (get_thread_arch_regcache): Pass target down.
+	* linux-thread-db.c (struct thread_db_info::process_target): New
+	field.
+	(add_thread_db_info): Save target.
+	(get_thread_db_info): New process_stratum_target parameter.  Also
+	match target.
+	(delete_thread_db_info): New process_stratum_target parameter.
+	Also match target.
+	(thread_from_lwp): Adjust to pass down target.
+	(thread_db_notice_clone): Pass down target.
+	(check_thread_db_callback): Pass down target.
+	(try_thread_db_load_1): Always push the thread_db target.
+	(try_thread_db_load, record_thread): Pass target down.
+	(thread_db_target::detach): Pass target down.  Always unpush the
+	thread_db target.
+	(thread_db_target::wait, thread_db_target::mourn_inferior): Pass
+	target down.  Always unpush the thread_db target.
+	(find_new_threads_callback, thread_db_find_new_threads_2)
+	(thread_db_target::update_thread_list): Pass target down.
+	(thread_db_target::pid_to_str): Pass current inferior down.
+	(thread_db_target::get_thread_local_address): Pass target down.
+	(thread_db_target::resume, maintenance_check_libthread_db): Pass
+	target down.
+	* nto-procfs.c (nto_procfs_target::update_thread_list): Adjust.
+	* procfs.c (procfs_target::procfs_init_inferior): Declare.
+	(proc_set_current_signal, do_attach, procfs_target::wait): Adjust.
+	(procfs_init_inferior): Rename to ...
+	(procfs_target::procfs_init_inferior): ... this and adjust.
+	(procfs_target::create_inferior, procfs_notice_thread)
+	(procfs_do_thread_registers): Adjust.
+	* ppc-fbsd-tdep.c: Include "inferior.h".
+	(ppcfbsd_get_thread_local_address): Pass down target.
+	* proc-service.c (ps_xfer_memory): Switch current inferior and
+	program space as well.
+	(get_ps_regcache): Pass target down.
+	* process-stratum-target.c
+	(process_stratum_target::thread_address_space)
+	(process_stratum_target::thread_architecture): Pass target down.
+	* process-stratum-target.h
+	(process_stratum_target::threads_executing): New field.
+	(as_process_stratum_target): New.
+	* ravenscar-thread.c
+	(ravenscar_thread_target::update_inferior_ptid): Pass target down.
+	(ravenscar_thread_target::wait, ravenscar_add_thread): Pass target
+	down.
+	* record-btrace.c (record_btrace_target::info_record): Adjust.
+	(record_btrace_target::record_method)
+	(record_btrace_target::record_is_replaying)
+	(record_btrace_target::fetch_registers)
+	(get_thread_current_frame_id, record_btrace_target::resume)
+	(record_btrace_target::wait, record_btrace_target::stop): Pass
+	target down.
+	* record-full.c (record_full_wait_1): Switch to event thread.
+	Pass target down.
+	* regcache.c (regcache::regcache)
+	(get_thread_arch_aspace_regcache, get_thread_arch_regcache): Add
+	process_stratum_target parameter and handle it.
+	(current_thread_target): New global.
+	(get_thread_regcache): Add process_stratum_target parameter and
+	handle it.  Switch inferior before calling target method.
+	(get_thread_regcache): Pass target down.
+	(get_thread_regcache_for_ptid): Pass target down.
+	(registers_changed_ptid): Add process_stratum_target parameter and
+	handle it.
+	(registers_changed_thread, registers_changed): Pass target down.
+	(test_get_thread_arch_aspace_regcache): New.
+	(current_regcache_test): Define a couple local test_target_ops
+	instances and use them for testing.
+	(readwrite_regcache): Pass process_stratum_target parameter.
+	(cooked_read_test, cooked_write_test): Pass mock_target down.
+	* regcache.h (get_thread_regcache, get_thread_arch_regcache)
+	(get_thread_arch_aspace_regcache): Add process_stratum_target
+	parameter.
+	(regcache::target): New method.
+	(regcache::regcache, regcache::get_thread_arch_aspace_regcache)
+	(regcache::registers_changed_ptid): Add process_stratum_target
+	parameter.
+	(regcache::m_target): New field.
+	(registers_changed_ptid): Add process_stratum_target parameter.
+	* remote.c (remote_state::supports_vCont_probed): New field.
+	(remote_target::async_wait_fd): New method.
+	(remote_unpush_and_throw): Add remote_target parameter.
+	(get_current_remote_target): Adjust.
+	(remote_target::remote_add_inferior): Push target.
+	(remote_target::remote_add_thread)
+	(remote_target::remote_notice_new_inferior)
+	(get_remote_thread_info): Pass target down.
+	(remote_target::update_thread_list): Skip threads of inferiors
+	bound to other targets.  (remote_target::close): Don't discard
+	inferiors.  (remote_target::add_current_inferior_and_thread)
+	(remote_target::process_initial_stop_replies)
+	(remote_target::start_remote)
+	(remote_target::remote_serial_quit_handler): Pass down target.
+	(remote_target::remote_unpush_target): New remote_target
+	parameter.  Unpush the target from all inferiors.
+	(remote_target::remote_unpush_and_throw): New remote_target
+	parameter.  Pass it down.
+	(remote_target::open_1): Check whether the current inferior has
+	execution instead of checking whether any inferior is live.  Pass
+	target down.
+	(remote_target::remote_detach_1): Pass down target.  Use
+	remote_unpush_target.
+	(extended_remote_target::attach): Pass down target.
+	(remote_target::remote_vcont_probe): Set supports_vCont_probed.
+	(remote_target::append_resumption): Pass down target.
+	(remote_target::append_pending_thread_resumptions)
+	(remote_target::remote_resume_with_hc, remote_target::resume)
+	(remote_target::commit_resume): Pass down target.
+	(remote_target::remote_stop_ns): Check supports_vCont_probed.
+	(remote_target::interrupt_query)
+	(remote_target::remove_new_fork_children)
+	(remote_target::check_pending_events_prevent_wildcard_vcont)
+	(remote_target::remote_parse_stop_reply)
+	(remote_target::process_stop_reply): Pass down target.
+	(first_remote_resumed_thread): New remote_target parameter.  Pass
+	it down.
+	(remote_target::wait_as): Pass down target.
+	(unpush_and_perror): New remote_target parameter.  Pass it down.
+	(remote_target::readchar, remote_target::remote_serial_write)
+	(remote_target::getpkt_or_notif_sane_1)
+	(remote_target::kill_new_fork_children, remote_target::kill): Pass
+	down target.
+	(remote_target::mourn_inferior): Pass down target.  Use
+	remote_unpush_target.
+	(remote_target::core_of_thread)
+	(remote_target::remote_btrace_maybe_reopen): Pass down target.
+	(remote_target::pid_to_exec_file)
+	(remote_target::thread_handle_to_thread_info): Pass down target.
+	(remote_target::async_wait_fd): New.
+	* riscv-fbsd-tdep.c: Include "inferior.h".
+	(riscv_fbsd_get_thread_local_address): Pass down target.
+	* sol2-tdep.c (sol2_core_pid_to_str): Pass down target.
+	* sol-thread.c (sol_thread_target::wait, ps_lgetregs, ps_lsetregs)
+	(ps_lgetfpregs, ps_lsetfpregs, sol_update_thread_list_callback):
+	Adjust.
+	* solib-spu.c (spu_skip_standalone_loader): Pass down target.
+	* solib-svr4.c (enable_break): Pass down target.
+	* spu-multiarch.c (parse_spufs_run): Pass down target.
+	* spu-tdep.c (spu2ppu_sniffer): Pass down target.
+	* target-delegates.c: Regenerate.
+	* target.c (g_target_stack): Delete.
+	(current_top_target): Return the current inferior's top target.
+	(target_has_execution_1): Refer to the passed-in inferior's top
+	target.
+	(target_supports_terminal_ours): Check whether the initial
+	inferior was already created.
+	(decref_target): New.
+	(target_stack::push): Incref/decref the target.
+	(push_target, push_target, unpush_target): Adjust.
+	(target_stack::unpush): Defref target.
+	(target_is_pushed): Return bool.  Adjust to refer to the current
+	inferior's target stack.
+	(dispose_inferior): Delete, and inline parts ...
+	(target_preopen): ... here.  Only dispose of the current inferior.
+	(target_detach): Hold strong target reference while detaching.
+	Pass target down.
+	(target_thread_name): Add assertion.
+	(target_resume): Pass down target.
+	(target_ops::beneath, find_target_at): Adjust to refer to the
+	current inferior's target stack.
+	(get_dummy_target): New.
+	(target_pass_ctrlc): Pass the Ctrl-C to the first inferior that
+	has a thread running.
+	(initialize_targets): Rename to ...
+	(_initialize_target): ... this.
+	* target.h: Include "gdbsupport/refcounted-object.h".
+	(struct target_ops): Inherit refcounted_object.
+	(target_ops::shortname, target_ops::longname): Make const.
+	(target_ops::async_wait_fd): New method.
+	(decref_target): Declare.
+	(struct target_ops_ref_policy): New.
+	(target_ops_ref): New typedef.
+	(get_dummy_target): Declare function.
+	(target_is_pushed): Return bool.
+	* thread-iter.c (all_matching_threads_iterator::m_inf_matches)
+	(all_matching_threads_iterator::all_matching_threads_iterator):
+	Handle filter target.
+	* thread-iter.h (struct all_matching_threads_iterator, struct
+	all_matching_threads_range, class all_non_exited_threads_range):
+	Filter by target too.  Remove explicit.
+	* thread.c (threads_executing): Delete.
+	(inferior_thread): Pass down current inferior.
+	(clear_thread_inferior_resources): Pass down thread pointer
+	instead of ptid_t.
+	(add_thread_silent, add_thread_with_info, add_thread): Add
+	process_stratum_target parameter.  Use it for thread and inferior
+	searches.
+	(is_current_thread): New.
+	(thread_info::deletable): Use it.
+	(find_thread_ptid, thread_count, in_thread_list)
+	(thread_change_ptid, set_resumed, set_running): New
+	process_stratum_target parameter.  Pass it down.
+	(set_executing): New process_stratum_target parameter.  Pass it
+	down.  Adjust reference to 'threads_executing'.
+	(threads_are_executing): New process_stratum_target parameter.
+	Adjust reference to 'threads_executing'.
+	(set_stop_requested, finish_thread_state): New
+	process_stratum_target parameter.  Pass it down.
+	(switch_to_thread): Also match inferior.
+	(switch_to_thread): New process_stratum_target parameter.  Pass it
+	down.
+	(update_threads_executing): Reimplement.
+	* top.c (quit_force): Pop targets from all inferior.
+	(gdb_init): Don't call initialize_targets.
+	* windows-nat.c (windows_nat_target) <get_windows_debug_event>:
+	Declare.
+	(windows_add_thread, windows_delete_thread): Adjust.
+	(get_windows_debug_event): Rename to ...
+	(windows_nat_target::get_windows_debug_event): ... this.  Adjust.
+	* tracefile-tfile.c (tfile_target_open): Pass down target.
+	* gdbsupport/common-gdbthread.h (struct process_stratum_target):
+	Forward declare.
+	(switch_to_thread): Add process_stratum_target parameter.
+	* mi/mi-interp.c (mi_on_resume_1): Add process_stratum_target
+	parameter.  Use it.
+	(mi_on_resume): Pass target down.
+	* nat/fork-inferior.c (startup_inferior): Add
+	process_stratum_target parameter.  Pass it down.
+	* nat/fork-inferior.h (startup_inferior): Add
+	process_stratum_target parameter.
+	* python/py-threadevent.c (py_get_event_thread): Pass target down.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (remote_target::start_remote): Don't set inferior_ptid
+	directly.  Instead find the first thread in the thread list and
+	use switch_to_thread.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (remote_target::remote_add_inferior): Don't bind a
+	process to the current inferior if the current inferior is already
+	bound to a process.
+
+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>
+	    Pedro Alves	 <palves@redhat.com>
+
+	* remote.c (remote_target::remote_parse_stop_reply) <W/X packets>:
+	If no process is specified, return null_ptid instead of
+	inferior_ptid.
+	(remote_target::wait_as): Handle TARGET_WAITKIND_EXITED /
+	TARGET_WAITKIND_SIGNALLED with no pid.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (first_remote_resumed_thread): New.
+	(remote_target::wait_as): Use it as default event_ptid instead of
+	inferior_ptid.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* infrun.c (handle_no_resumed): Use all_non_exited_inferiors.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* tracefile-tfile.c (tfile_target::close): Assert that trace_fd is
+	not -1.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* break-catch-sig.c (signal_catchpoint_print_it): Don't pass a
+	ptid to get_last_target_status.
+	* break-catch-syscall.c (print_it_catch_syscall): Don't pass a
+	ptid to get_last_target_status.
+	* infcmd.c (continue_command): Don't pass a target_waitstatus to
+	get_last_target_status.
+	(info_program_command): Don't pass a target_waitstatus to
+	get_last_target_status.
+	* infrun.c (init_wait_for_inferior): Use
+	nullify_last_target_wait_ptid.
+	(get_last_target_status): Handle nullptr arguments.
+	(nullify_last_target_wait_ptid): Clear target_last_waitstatus.
+	(print_stop_event): Don't pass a ptid to get_last_target_status.
+	(normal_stop): Don't pass a ptid to get_last_target_status.
+	* infrun.h (get_last_target_status, set_last_target_status): Move
+	comments here and update.
+	(nullify_last_target_wait_ptid): Declare.
+	* linux-fork.c (fork_load_infrun_state): Remove local extern
+	declaration of nullify_last_target_wait_ptid.
+	* linux-nat.c (get_detach_signal): Don't pass a target_waitstatus
+	to get_last_target_status.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdbthread.h (scoped_restore_current_thread)
+	<dont_restore, restore, m_dont_restore>: Declare.
+	* thread.c (thread_alive): Add assertion.  Return bool.
+	(switch_to_thread_if_alive): New.
+	(prune_threads): Switch inferior/thread.
+	(print_thread_info_1): Switch thread before calling target methods.
+	(scoped_restore_current_thread::restore): New, factored out from
+	...
+	(scoped_restore_current_thread::~scoped_restore_current_thread):
+	... this.
+	(scoped_restore_current_thread::scoped_restore_current_thread):
+	Add assertion.
+	(thread_apply_all_command, thread_select): Use
+	switch_to_thread_if_alive.
+	* infrun.c (proceed, restart_threads, handle_signal_stop)
+	(switch_back_to_stepped_thread): Switch current thread before
+	calling target methods.
+
+2020-01-10  Pedro Alves <palves@redhat.com>
+
+	* inferior.c (switch_to_inferior_no_thread): New function,
+	factored out from ...
+	(inferior_command): ... here.
+	* inferior.h (switch_to_inferior_no_thread): Declare.
+	* mi/mi-main.c (run_one_inferior): Use
+	switch_to_inferior_no_thread.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* infcmd.c (kill_command): Remove dead code.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (remote_target::mourn_inferior): No longer check
+	whether the target is running.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* corelow.c (core_target::has_execution): Change parameter type to
+	inferior pointer.
+	* inferior.c (number_of_live_inferiors): Use
+	inferior::has_execution instead of target_has_execution_1.
+	* inferior.h (inferior::has_execution): New.
+	* linux-thread-db.c (thread_db_target::update_thread_list): Use
+	inferior::has_execution instead of target_has_execution_1.
+	* process-stratum-target.c
+	(process_stratum_target::has_execution): Change parameter type to
+	inferior pointer.  Check the inferior's PID instead of
+	inferior_ptid.
+	* process-stratum-target.h
+	(process_stratum_target::has_execution): Change parameter type to
+	inferior pointer.
+	* record-full.c (record_full_core_target::has_execution): Change
+	parameter type to inferior pointer.
+	* target.c (target_has_execution_1): Change parameter type to
+	inferior pointer.
+	(target_has_execution_current): Adjust.
+	* target.h (target_ops::has_execution): Change parameter type to
+	inferior pointer.
+	(target_has_execution_1): Change parameter type to inferior
+	pointer.  Change return type to bool.
+	* tracefile.h (tracefile_target::has_execution): Change parameter
+	type to inferior pointer.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* exceptions.c (print_flush): Remove current_top_target() check.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* remote.c (show_remote_exec_file): Show the current inferior's
+	exec-file instead of the command variable's value.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* record-full.c (record_full_resume_ptid): New global.
+	(record_full_target::resume): Set it.
+	(record_full_wait_1): Use record_full_resume_ptid instead of
+	inferior_ptid.
+
+2020-01-10  Pedro Alves  <palves@redhat.com>
+
+	* gdbthread.h (scoped_restore_current_thread)
+	<dont_restore, restore, m_dont_restore>: Declare.
+	* thread.c (thread_alive): Add assertion.  Return bool.
+	(switch_to_thread_if_alive): New.
+	(prune_threads): Switch inferior/thread.
+	(print_thread_info_1): Switch thread before calling target methods.
+	(scoped_restore_current_thread::restore): New, factored out from
+	...
+	(scoped_restore_current_thread::~scoped_restore_current_thread):
+	... this.
+	(scoped_restore_current_thread::scoped_restore_current_thread):
+	Add assertion.
+	(thread_apply_all_command, thread_select): Use
+	switch_to_thread_if_alive.
+
+2020-01-10  George Barrett  <bob@bob131.so>
+
+	* stap-probe.c (stap_modify_semaphore): Don't check for null
+	semaphores.
+	(stap_probe::set_semaphore, stap_probe::clear_semaphore): Check
+	for null semaphores.
+
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Update
+	all source windows, and maintain horizontal scroll status while
+	doing so.
+
+2020-01-09  Tom Tromey  <tom@tromey.com>
+
+	PR tui/18932:
+	* tui/tui-source.c (tui_source_window::do_scroll_vertical): Call
+	update_source_window, not print_source_lines.
+
+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tui/tui.c (tui_enable): Register tui hooks after calling
+	tui_display_main.
+
+2020-01-09  Christian Biesinger  <cbiesinger@google.com>
+
+	* gdbsupport/common-defs.h: Don't define _FORTIFY_SOURCE on MinGW.
+
+2020-01-08  Simon Marchi  <simon.marchi@efficios.com>
+
+	* thread.c (print_thread_info_1): Fix indentation.
+
+2020-01-09  Christian Biesinger  <cbiesinger@google.com>
+
+	* symtab.c (general_symbol_info::compute_and_set_names): Move the
+	unique_xmalloc_ptr outside the if to always free the demangled name.
+
+2020-01-08  Tom Tromey  <tromey@adacore.com>
+
+	* xcoffread.c (enter_line_range, read_xcoff_symtab)
+	(process_xcoff_symbol, xcoff_symfile_offsets): Update.
+	* symtab.h (MSYMBOL_VALUE_ADDRESS): Update.
+	(struct section_offsets, ANOFFSET, SIZEOF_N_SECTION_OFFSETS):
+	Remove.
+	(section_offsets): New typedef.
+	* symtab.c (fixup_section, get_msymbol_address): Update.
+	* symmisc.c (dump_msymbols): Update.
+	* symfile.h (relative_addr_info_to_section_offsets)
+	(symfile_map_offsets_to_segments): Update.
+	* symfile.c (build_section_addr_info_from_objfile)
+	(init_objfile_sect_indices): Update.
+	(struct place_section_arg): Change type of "offsets".
+	(place_section): Update.
+	(relative_addr_info_to_section_offsets): Change type of
+	"section_offsets".  Remove "num_sections" parameter.
+	(default_symfile_offsets, syms_from_objfile_1)
+	(set_objfile_default_section_offset): Update.
+	(reread_symbols): No need to preserve section offsets by hand.
+	(symfile_map_offsets_to_segments): Change type of "offsets".
+	* stap-probe.c (relocate_address): Update.
+	* stabsread.h (process_one_symbol): Update.
+	* solib-target.c (struct lm_info_target) <offsets>: Change type.
+	(solib_target_relocate_section_addresses): Update.
+	* solib-svr4.c (enable_break, svr4_relocate_main_executable):
+	Update.
+	* solib-frv.c (frv_relocate_main_executable): Update.
+	* solib-dsbt.c (dsbt_relocate_main_executable): Update.
+	* solib-aix.c (solib_aix_get_section_offsets): Change return
+	type.
+	(solib_aix_solib_create_inferior_hook): Update.
+	* remote.c (remote_target::get_offsets): Update.
+	* psymtab.c (find_pc_sect_psymtab): Update.
+	* psympriv.h (struct partial_symbol) <address, text_low,
+	text_high>: Update.
+	* objfiles.h (obj_section_offset): Update.
+	(struct objfile) <section_offsets>: Change type.
+	<num_sections>: Remove.
+	(objfile_relocate): Update.
+	* objfiles.c (entry_point_address_query): Update
+	(relocate_one_symbol): Change type of "section_offsets".
+	(objfile_relocate1, objfile_relocate1): Change type of
+	"new_offsets".
+	(objfile_rebase1): Update.
+	* mipsread.c (mipscoff_symfile_read): Update.
+	(read_alphacoff_dynamic_symtab): Remove "section_offsets"
+	parameter.
+	* mdebugread.c (parse_symbol): Change type of "section_offsets".
+	(parse_external, psymtab_to_symtab_1): Update.
+	* machoread.c (macho_symfile_offsets): Update.
+	* ia64-tdep.c (ia64_find_unwind_table): Update.
+	* hppa-tdep.c (read_unwind_info): Update.
+	* hppa-bsd-tdep.c (hppabsd_find_global_pointer): Update.
+	* dwarf2read.c (create_addrmap_from_index)
+	(create_addrmap_from_aranges, dw2_find_pc_sect_compunit_symtab)
+	(process_psymtab_comp_unit_reader, add_partial_symbol)
+	(add_partial_subprogram, process_full_comp_unit)
+	(read_file_scope, read_func_scope, read_lexical_block_scope)
+	(read_call_site_scope, dwarf2_rnglists_process)
+	(dwarf2_ranges_process, dwarf2_ranges_read)
+	(dwarf_decode_lines_1, var_decode_location, new_symbol)
+	(dwarf2_fetch_die_loc_sect_off, dwarf2_per_cu_text_offset):
+	Update.
+	* dwarf2-frame.c (execute_cfa_program, dwarf2_frame_find_fde):
+	Update.
+	* dtrace-probe.c (dtrace_probe::get_relocated_address): Update.
+	* dbxread.c (read_dbx_symtab, read_ofile_symtab): Update.
+	(process_one_symbol): Change type of "section_offsets".
+	* ctfread.c (get_objfile_text_range): Update.
+	* coffread.c (coff_symtab_read, enter_linenos)
+	(process_coff_symbol): Update.
+	* coff-pe-read.c (add_pe_forwarded_sym): Update.
+	* amd64-windows-tdep.c (amd64_windows_find_unwind_info): Update.
+
+2020-01-08  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (parse_macro_definition): Use std::string.
+	(parse_macro_definition): Likewise.
+
+2020-01-08  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (abbrev_table_read_table): Use std::vector.
+	(ATTR_ALLOC_CHUNK): Remove.
+
+2020-01-08  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (fixup_go_packaging): Use unique_xmalloc_ptr.
+
+2020-01-08  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf2read.c (add_partial_symbol): Use unique_xmalloc_ptr.
+	(dwarf2_compute_name, open_dwo_file): Likewise.
+	(process_enumeration_scope): Use std::vector.
+	(guess_partial_die_structure_name): Use unique_xmalloc_ptr.
+	(partial_die_info::fixup, dwarf2_start_subfile)
+	(guess_full_die_structure_name, dwarf2_name): Likewise.
+	(determine_prefix): Update.
+	(guess_full_die_structure_name): Make return type const.
+	(partial_die_full_name): Return unique_xmalloc_ptr.
+	(DW_FIELD_ALLOC_CHUNK): Remove.
+
+2020-01-07  Tom Tromey  <tromey@adacore.com>
+
+	PR build/24937:
+	* stap-probe.c (class stap_static_probe_ops): Add constructor.
+
+2020-01-02  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* cli/cli-style.c: Set cli_styling to 'true' in the Cygwin build.
+
+2020-01-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* stack.c (print_frame_info): Move disassemble_next_line code
+	inside source_print block.
+
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
+
+	* gdbsupport/gdb_wait.c: Include <signal.h> instead of
+	gdb/signals.h, as we are now using native signal symbols.
+
+2020-01-06  Shahab Vahedi  <shahab@synopsys.com>
+
+	* tui/tui-disasm.c (tui_disasm_window::addr_is_displayed): Avoid
+	overflow by an early check of content vs threshold.
+	* tui/tui-source.c (tui_source_window::line_is_displayed):
+	Likewise.
+
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
+
+	* NEWS: Mention the recent fix of $_exitsignal on MS-Windows.
+
+2020-01-02  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* coff-pe-read.c (read_pe_exported_syms): Don't try to read the
+	export table if no section contains it's RVA.
+
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
+
+	* windows-tdep.c: Fix a typo in WINDOWS_SIGABRT.
+
+2020-01-06  Hannes Domani  <ssbssa@yahoo.de>
+
+	* source.c (print_source_lines_base): Set last_line_listed.
+
+2020-01-06  Shahab Vahedi  <shahab@synopsys.com>
+
+	* tui/tui-disasm.c: Remove trailing spaces.
+
+2020-01-06  Eli Zaretskii  <eliz@gnu.org>
+	    Pedro Alves  <palves@redhat.com>
+
+	* Makefile.in (COMMON_SFILES): Add gdbsupport/gdb_wait.c.
+	* windows-tdep.c: New enumeration of WINDOWS_SIG* signals.
+	(windows_gdb_signal_to_target): New function, uses the above
+	enumeration to convert GDB internal signal codes to equivalent
+	Windows codes.
+	(windows_init_abi): Call set_gdbarch_gdb_signal_to_target.
+	* windows-nat.c: Include "gdb_wait.h".
+	(get_windows_debug_event): Extract the fatal exception from the
+	exit status and convert to the equivalent Posix signal number.
+	* cli/cli-cmds.c (exit_status_set_internal_vars): Account for the
+	possibility that WTERMSIG returns GDB_SIGNAL_UNKNOWN.
+	* gdbsupport/gdb_wait.c: New file, implements
+	windows_status_to_termsig.
+	* gdbsupport/gdb_wait.h (WIFEXITED, WIFSIGNALED, WEXITSTATUS)
+	(WTERMSIG) [__MINGW32__]: Separate definitions for MinGW.
+
+2020-01-05  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* tui/tui-layout.c (tui_add_win_to_layout): Use tui_set_layout not
+	show_layout.
+
+2020-01-05  Luis Machado  <luis.machado@linaro.org>
+
+	* aarch64-linux-nat.c
+	(aarch64_linux_nat_target::thread_architecture): Use bfd_arch_aarch64
+	and bfd_mach_aarch64.
+
+2020-01-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>
+
+	* ui-file.c (stdio_file::can_emit_style_escape)
+	(tee_file::can_emit_style_escape): Ensure style is used also on
+	gdb_stderr when gdb_stderr is a tty supporting styling, similarly
+	to gdb_stdout.
+	* main.c (set_gdb_data_directory): Use file style to output the
+	warning that the given pathname is not a directory.
+	* top.c (show_history_filename, gdb_safe_append_history)
+	(show_gdb_datadir): Use file style.
+
+2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
+
+	* solib-target.c (struct lm_info_target):
+	Change offsets to be a unique_xmalloc_ptr.
+	(solib_target_relocate_section_addresses): Update.
+
+2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
+
+	* windows-nat.c (windows_clear_solib): Free so_list linked list.
+
+2020-01-03  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* MAINTAINERS (Write After Approval): Add myself.
+
+2020-01-02  Luis Machado  <luis.machado@linaro.org>
+
+	* proc-service.c (get_ps_regcache): Remove reference to obsolete
+	Cell BE architecture.
+	* target.h (struct target_ops) <thread_architecture>: Likewise.
+
+2020-01-01  Hannes Domani  <ssbssa@yahoo.de>
+
+	* Makefile.in: Use INSTALL_PROGRAM_ENV.
+
+2020-01-01  Hannes Domani  <ssbssa@yahoo.de>
+
+	* MAINTAINERS (Write After Approval): Add myself.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* gdbarch.sh: Update copyright year range of generated files.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	Update copyright year range in all GDB files.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* copyright.py: Convert to Python 3.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* copyright.py: Adapt after move of gnulib directory from gdb
+	directory to toplevel directory.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* copyright.py (main): Exit if run from the wrong directory.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* top.c (print_gdb_version): Change copyright year to 2020.
+
+2020-01-01  Joel Brobecker  <brobecker@adacore.com>
+
+	* config/djgpp/fnchange.lst: Add entry for gdb/ChangeLog-2019.
+
+For older changes see ChangeLog-2019.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+coding: utf-8
+End:
diff --git a/bfd/ChangeLog-2015 b/bfd/ChangeLog-2015
index e57cd7073e8..f07b7367fd9 100644
--- a/bfd/ChangeLog-2015
+++ b/bfd/ChangeLog-2015
@@ -3076,7 +3076,7 @@
 
 	PR binutils/17512
 	* coffgen.c (coff_get_normalized_symtab): Fix test for out of
-	range auxillary sections.
+	range auxiliary sections.
 
 2015-03-24  Marcus Shawcroft  <marcus.shawcroft@arm.com>
 
diff --git a/bfd/ChangeLog-2020 b/bfd/ChangeLog-2020
new file mode 100644
index 00000000000..0cb006d6944
--- /dev/null
+++ b/bfd/ChangeLog-2020
@@ -0,0 +1,5017 @@
+2020-12-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-linker-x86.h (elf_x86_cet_report): Renamed to ...
+	(elf_x86_prop_report): This.
+	(elf_linker_x86_params): Add lam_u48, lam_u57, lam_u48_report
+	and lam_u57_report.
+	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Support
+	GNU_PROPERTY_X86_FEATURE_1_LAM_U48 and
+	GNU_PROPERTY_X86_FEATURE_1_LAM_U57.
+	(_bfd_x86_elf_link_fixup_gnu_properties): Keep LAM features only
+	for 64-bit output.
+
+2020-12-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/27091
+	* elflink.c (elf_link_input_bfd): Copy elf_gnu_osabi_retain
+	from input only for relocatable link.
+
+2020-12-18  Alan Modra  <amodra@gmail.com>
+
+	* elf32-microblaze.c (dbg): Delete unused variable.
+	* elf32-nds32.c (relax_group_section_id_list): Make static.
+	* som.c (reloc_queue): Make static.
+	* xtensa-isa.c (xtisa_errno, xtisa_error_msg): Make static.
+
+2020-12-18  Alan Modra  <amodra@gmail.com>
+
+	* archive.c (_bfd_ar_spacepad, _bfd_ar_sizepad): Use auto buf.
+	* coff-mcore.c (coff_mcore_relocate_section): Likewise.
+	* elf32-ppc.c (ppc_elf_unhandled_reloc): Use asprintf in place
+	of fixed size and possibly too small buf for translated message.
+	* elf64-ppc.c (ppc64_elf_unhandled_reloc): Likewise.
+	* elf32-v850.c (v850_elf_check_relocs): Likewise.
+	* ecoff.c (ecoff_type_to_string): Pass in return string buff rather
+	than using static buffer2.  Delete dead code.  Remove unnecessary
+	parentheses.
+	(_bfd_ecoff_print_symbol): Pass auto buff to ecoff_type_to_string.
+	* elf32-rx.c (describe_flags): Pass in return string buf rather
+	than using static buf.
+	(rx_elf_merge_private_bfd_data): Pass buf to describe_flags.
+	(rx_elf_print_private_bfd_data): Likewise.
+	* mach-o.c (cpusubtype): Pass in return string buffer rather than
+	using static buffer.
+	(bfd_mach_o_bfd_print_private_bfd_data): Pass buff to cpusubtype.
+	* opncls.c (separate_debug_file_exists): Make buffer an auto var.
+	(bfd_fill_in_gnu_debuglink_section): Likewise.
+	* peXXigen.c (rsrc_resource_name): Pass in return string buffer
+	rather than using static buffer.
+	(rsrc_sort_entries): Pass buff to rsrc_resource_name.
+	* vms-alpha.c (_bfd_vms_write_emh): Pass tbuf to get_vms_time_string.
+	* vms-misc.c (get_vms_time_string): Pass in return string tbuf
+	rather than using static tbuf.
+	* vms.h (get_vms_time_string): Update prototype.
+
+2020-12-18  Alan Modra  <amodra@gmail.com>
+
+	* coff-z80.c (bfd_howto_type): Make typedef const.
+	* elf32-z80.c (bfd_howto_type): Likewise.
+	* elf32-m32c.c (EncodingTable): Likewise.
+	* elf32-csky.c (csky_arch_for_merge): Likewise.
+	(csky_archs): Use typedef.
+	* elf32-m68hc11.c (m68hc11_direct_relax_table): Make const.
+	(find_relaxable_insn, m68hc11_elf_relax_section): Adjust to suit.
+	* elf32-ppc.c (ppc_alt_plt): Make const.
+	* elf32-rl78.c (relax_addr16): Likewise.
+	* targets.c (_bfd_associated_vector): Likewise.
+	(bfd_target_vector, bfd_associated_vector): Likewise.
+	* libbfd-in.h (bfd_target_vector, bfd_associated_vector): Likewise.
+	* libbfd.h: Regenerate.
+
+2020-12-18  Alan Modra  <amodra@gmail.com>
+
+	* ecoff.c (bfd_debug_section): Init using BFD_FAKE_SECTION.
+	(ecoff_scom_section, ecoff_scom_symbol): Statically init using
+	BFD_FAKE_SECTION and GLOBAL_SYM_INIT.  Delete initialisation code.
+	* elf32-m32r.c (m32r_elf_scom_section, m32r_elf_scom_symbol),
+	* elf32-score.c (score_elf_scom_section, score_elf_scom_symbol),
+	* elf32-score7.c (score_elf_scom_section, score_elf_scom_symbol),
+	* elf32-tic6x.c (tic6x_elf_scom_section, tic6x_elf_scom_symbol),
+	* elf32-v850.c (v850_elf_scom_section, v850_elf_scom_symbol),
+	(v850_elf_tcom_section, v850_elf_tcom_symbol),
+	(v850_elf_zcom_section, v850_elf_zcom_symbol),
+	* elf64-mmix.c (mmix_elf_reg_section, mmix_elf_reg_section_symbol),
+	* elfxx-mips.c (mips_elf_scom_section, mips_elf_scom_symbol): Likewise.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* elfxx-target.h (elfNN_bed): Constify.
+	* bfd.c (bfd_elf_set_pagesize): Delete.
+	(bfd_emul_set_maxpagesize, bfd_emul_set_commonpagesize): Delete.
+	* elf.c (get_program_header_size): Get commonpagesize from
+	link info.
+	(_bfd_elf_map_sections_to_segments): Get maxpagesize from link info.
+	(assign_file_positions_for_load_sections): Likewise.
+	(assign_file_positions_for_non_load_sections): Likewise.
+	(rewrite_elf_program_header): Add maxpagesize param.  Set map_p_align.
+	(copy_private_bfd_data): Don't call bfd_elf_set_maxpagesize.
+	Instead pass maxpagesize to rewrite_elf_program_header.
+	* elf32-nds32.c (relax_range_measurement): Add link_info param.
+	Get maxpagesize from link_info.  Adjust caller.
+	* bfd-in2.h: Regenerate.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (elf_flags_to_names): Constify.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* libxcoff.h (struct xcoff_backend_data_rec): Constify
+	_xcoff_glink_code.
+	(XCOFF_RELOC_FUNCTION_ARGS, XCOFF_COMPLAIN_FUNCTION_ARGS): Delete.
+	(xcoff_reloc_function, xcoff_complain_function): New typedef.
+	(xcoff_calculate_relocation, xcoff_complain_overflow),
+	(xcoff_reloc_type_noop, xcoff_reloc_type_fail),
+	(xcoff_reloc_type_pos, xcoff_reloc_type_neg),
+	(xcoff_reloc_type_rel, xcoff_reloc_type_toc),
+	(xcoff_reloc_type_ba, xcoff_reloc_type_crel): Update declaration.
+	* coff-rs6000.c (xcoff_reloc_type_br): Declare using typedef.
+	(xcoff_complain_overflow_dont_func): Likewise.
+	(xcoff_complain_overflow_bitfield_func): Likewise.
+	(xcoff_complain_overflow_signed_func): Likewise.
+	(xcoff_complain_overflow_unsigned_func): Likewise.
+	(xcoff_calculate_relocation, xcoff_complain_overflow): Constify.
+	(xcoff_glink_code): Constify.
+	* coff64-rs6000.c (xcoff64_reloc_type_br): Declare using typedef.
+	(xcoff64_calculate_relocation, xcoff64_glink_code): Constify.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* elf32-xtensa.c (narrowable, widenable): Constify.
+	* xtensa-modules.c: Constify many arrays.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (synthetic_opd): Constify.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* arc-plt.h (plt_versions): Constify.
+	* elf32-arc.c (arc_get_plt_version): Constify return pointer,
+	adjust uses throughout.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* coffcode.h (pelength, peheader): Delete static variables.
+	(coff_apply_checksum): Instead, define them as auto vars, and pass..
+	(coff_read_word, coff_compute_checksum): ..to here.  Delete
+	unnecessary forward declarations.
+	* pei-x86_64.c (pdata_count): Delete static variable.
+	(struct pex64_paps): New.
+	(pex64_print_all_pdata_sections, pex64_bfd_print_pdata): Pass
+	a pex64_paps for counting.
+	* peicode.h (jtab): Constify.
+
+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>
+
+	* elflink.c (bfd_elf_size_dynamic_sections): Call
+	_bfd_elf_add_dynamic_entry to add a DT_GNU_FLAGS_1 section.
+
+2020-12-14  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (struct elf_obj_tdata): Add being_created.
+	* elf.c (bfd_section_from_shdr): Delete static vars for loop
+	detection.  Use new tdata variable instead.
+	* elfcode.h (elf_object_p): Allocate being_created.
+
+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.c (riscv_ext_dont_care_version): New function.  Return
+	TRUE if we don't care the versions of the extensions.  These extensions
+	are added to the subset list for special purposes, with the explicit
+	versions or the RISCV_UNKNOWN_VERSION versions.
+	(riscv_parse_add_subset): If we do care the versions of the extension,
+	and the versions are unknown, then report errors for the non-implicit
+	extensions, and return directly for the implicit one.
+	(riscv_arch_str1): Do not output i extension after e, and the extensions
+	which versions are unknown.
+
+2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>
+
+	PR 26945
+	* opncls.c (bfd_fdopenw): New function.
+	* bfd-in2.h: Regenerate.
+
+2020-12-07  Alan Modra  <amodra@gmail.com>
+
+	* elf32-csky.c (csky_relocate_contents): Correct negate test.
+	* cpu-ns32k.c (_bfd_do_ns32k_reloc_contents): Likewise.
+	* elf32-nds32.c (nds32_relocate_contents): Likewise.
+
+2020-12-05  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* elf32-vax.c (elf_vax_check_relocs) <R_VAX_GOT32>: Use
+	SYMBOL_REFERENCES_LOCAL rather than `h->forced_local' to check
+	whether the symbol referred is local or not.
+
+2020-12-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/27016
+	* elf64-x86-64.c (elf_x86_64_convert_load_reloc): Convert load
+	to mov only for GOTPCRELX relocations.
+
+2020-12-04  Alan Modra  <amodra@gmail.com>
+
+	PR 26978
+	* elflink.c (_bfd_elf_add_default_symbol): Handle the case where
+	a new weak sym@@ver should be overridden by an existing sym@ver.
+	(elf_link_add_object_symbols): Don't _bfd_elf_add_default_symbol
+	for a new weak sym@ver when sym@@ver already exists.
+	* linker.c (link_action): Choose MIND for previous indirect,
+	current def, rather than MDEF.
+	(_bfd_generic_link_add_one_symbol <MIND>): Handle redefinition of
+	weak indirect symbol.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.c (riscv_parse_prefixed_ext): Use riscv_compare_subsets
+	to check the Z* extensions' order.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.c (riscv_parse_add_subset): Allow to add g with
+	RISCV_UNKNOWN_VERSION versions.
+	(riscv_parse_std_ext): Add g to the subset list, we only use it
+	to add the implicit extensions, but won't output it to arch string.
+	(riscv_parse_add_implicit_subsets): Add implicit zicsr and zifencei
+	for g extension.
+	(riscv_arch_str1): Do not output g to the arch string.
+	* elfxx-riscv.h (RISCV_UNKNOWN_VERSION): Moved to include/opcode/riscv.h.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_merge_std_ext): Updated since
+	riscv_lookup_subset is changed.
+	* elfxx-riscv.c (riscv_ext_order): New Array used to compare the
+	extensions' order quickly.
+	(riscv_init_ext_order): New function.  Init the riscv_ext_order
+	according to the riscv_supported_std_ext and parse_config[i].class
+	automatically.
+	(riscv_compare_subsets): New function.  Similar to the strcmp, but
+	compare the subsets with the specific order.
+	(riscv_lookup_subset): Return TRUE and set `current` to the subset
+	if it is found.  Otherwise, return FALSE and set `current` to the
+	place where we should insert the subset.
+	(riscv_add_implicit_subset): New function.  Search the list first,
+	and then find the right place to add the implicit_subset.
+	(riscv_parse_add_subset): Since We have to add all arch string
+	extensions first, and then start to add their implicit extensions.
+	We can add arch string extensions in order by the original
+	riscv_add_subset, and then add the implicit subsets by the
+	riscv_add_implicit_subset.  Besides, do not add the implicit
+	extensions if we failed to find their default versions.
+	(riscv_parse_std_ext): Updated.
+	(riscv_parse_add_implicit_subsets): New function.  Add all implicit
+	extensions according to the arch string extensions.
+	(riscv_parse_subset): Call riscv_init_ext_order and
+	riscv_parse_add_implicit_subsets, before and after parsing the
+	arch string.  Remove parts of the ISA conflict checking since
+	the implicit extensions are added.
+	* elfxx-riscv.h (riscv_lookup_subset): Updated.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.c (riscv_lookup_subset): Moved to front.
+	(riscv_add_subset): Likewise.
+	(riscv_release_subset_list): Likewise.
+	(riscv_parse_add_subset): New function.  Find and check the
+	versions before adding them by riscv_add_subset.
+	(riscv_parsing_subset_version): Remove use_default_version
+	and change the version type from unsigned to int.  Set the
+	versions to RISCV_UNKNOWN_VERSION if we can not find them
+	in the arch string.
+	(riscv_parse_std_ext): Updated.
+	(riscv_parse_prefixed_ext): Updated.  Since we use as_bad
+	rather than as_fatal to report more errors, return NULL
+	string if the parsed end_of_version is NULL, too.
+	(riscv_parse_subset): Use a new boolean, no_conflict, to
+	report more errors when we have more than one ISA conflicts.
+	* elfxx-riscv.h (RISCV_DONT_CARE_VERSION): Changed to
+	RISCV_UNKNOWN_VERSION.
+	(riscv_lookup_subset_version): Removed.
+	(riscv_parse_subset_t): Updated.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.c (riscv_parse_std_ext): Stop parsing standard
+	extensions when parsed h keyword.
+	(riscv_get_prefix_class): Support prefixed h class.
+	(riscv_std_h_ext_strtab): Likewise.
+	(riscv_ext_h_valid_p): Likewise.
+	(parse_config): Likewise.
+	(riscv_std_z_ext_strtab): Add zifencei.
+	* elfxx-riscv.h (riscv_isa_ext_class): Add RV_ISA_CLASS_H.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.c (riscv_parse_subset): ISA string cannot contain
+	any uppercase letter.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.c: Re-indent codes, unify and improve the error
+	messages and comments.
+	(riscv_parse_prefixed_ext): Stop parsing the prefixed class
+	extensions if the class is RV_ISA_CLASS_UNKNOWN, I get internal
+	errors before adding this check for march-fail-porder* testcases.
+	(riscv_parse_subset): Move the rv32 with q checking in front.
+	* elfxx-riscv.h: Likewise.
+
+2020-12-01  Alan Modra  <amodra@gmail.com>
+
+	PR 26979
+	* elf-bfd.h (elf_backend_merge_symbol_attribute): Update prototype.
+	* elf32-m68hc1x.h (elf32_m68hc11_merge_symbol_attribute): Likewise.
+	* elfxx-mips.h (_bfd_mips_elf_merge_symbol_attribute): Likewise.
+	* elfxx-x86.h (_bfd_x86_elf_merge_symbol_attribute): Likewise.
+	* elf32-m68hc1x.c (elf32_m68hc11_merge_symbol_attribute): Replace
+	isym parameter with st_other.  Adjust code.
+	* elf64-alpha.c (elf64_alpha_merge_symbol_attribute): Likewise.
+	* elf64-ppc.c (ppc64_elf_merge_symbol_attribute): Likewise.
+	* elfnn-aarch64.c (elfNN_aarch64_merge_symbol_attribute): Likewise.
+	* elfxx-mips.c (_bfd_mips_elf_merge_symbol_attribute): Likewise.
+	* elfxx-x86.c (_bfd_x86_elf_merge_symbol_attribute): Likewise.
+	* elflink.c (elf_merge_st_other): Likewise.
+	(_bfd_elf_merge_symbol, elf_link_add_object_symbols): Adjust to suit.
+	(_bfd_elf_copy_link_hash_symbol_type): Likewise.
+	(_bfd_elf_add_default_symbol): Merge st_other from undecorated
+	symbol and @VER symbol to @@VER symbol.
+
+2020-11-28  Alan Modra  <amodra@gmail.com>
+
+	PR 26907
+	* elf.c (elf_sort_sections): Don't sort zero size !load sections
+	after load sections.
+
+2020-11-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* elf.c (special_sections_g): Add .gnu.linkonce.n and .gnu.linkonce.p.
+	(special_sections_n): Add .noinit.
+	(special_sections_p): Add .persistent.
+
+2020-11-26  Nick Clifton  <nickc@redhat.com>
+
+	PR 26946
+	* dwarf2.c (read_section): Check for debug sections with excessive
+	sizes.
+
+2020-11-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26936
+	* elflink.c (_bfd_elf_check_kept_section): Get the real kept
+	section.
+
+2020-11-23  Nick Clifton  <nickc@redhat.com>
+
+	PR 26931
+	* elf-bfd.h (struct elf_backend_data): Add bfd_boolean field to
+	slurp_secondary_relocs field.
+	(_bfd_elf_slurp_secondary_reloc_section): Update prototype.
+	* elf.c (_bfd_elf_slurp_secondary_reloc_section): Add new
+	parameter.  Compute number of symbols based upon the new
+	parameter.
+	* elfcode.h (elf_slurp_reloc_table): Pass dynamic as new
+	parameter.
+
+2020-11-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26918
+	* elf64-s390.c (elf_s390_finish_dynamic_sections): Set .got
+	sh_entsize only if .got size > 0.
+
+2020-11-21  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (_bfd_riscv_relax_section):  Add a new relax pass
+	to do the pcgp relaxation later, after the lui and call relaxations,
+	but before the delete and alignment relaxations.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* elflink.c (elf_finalize_dynstr): Call examine_strtab after
+	dynstr finalization.
+	(elf_link_swap_symbols_out): Don't call it here.  Call
+	ctf_new_symbol before swap_symbol_out.
+	(elf_link_output_extsym): Call ctf_new_dynsym before
+	swap_symbol_out.
+	(bfd_elf_final_link): Likewise.
+	* elf.c (swap_out_syms): Pass in bfd_link_info.  Call
+	ctf_new_symbol before swap_symbol_out.
+	(_bfd_elf_compute_section_file_positions): Adjust.
+
+2020-11-19  Nick Clifton  <nickc@redhat.com>
+
+	PR 26918
+	* elf64-s390.c (elf_s390_finish_dynamic_sections): Check for the
+	existance of an sgot output section before setting the
+	sh_entsize.
+
+2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+	H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-bfd.h (enum elf_gnu_osabi): Add elf_gnu_osabi_retain.
+	(struct elf_obj_tdata): Increase has_gnu_osabi to 4 bits.
+	* elf.c (_bfd_elf_make_section_from_shdr): Set elf_gnu_osabi_retain
+	for SHF_GNU_RETAIN.
+	(_bfd_elf_final_write_processing): Report if SHF_GNU_RETAIN is
+	not supported by the OSABI.
+	Adjust error messages.
+	* elflink.c (elf_link_input_bfd): Copy enabled has_gnu_osabi bits from
+	input BFD to output BFD.
+	(bfd_elf_gc_sections): gc_mark the section if SHF_GNU_RETAIN is set.
+
+2020-11-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* cpu-arm.c (processors): Add Cortex-A78C.
+
+2020-11-11  Tom Tromey  <tromey@adacore.com>
+
+	* archive.c (getuid, getgid): Move...
+	* sysdep.h (getuid, getgid): ...here.
+
+2020-11-09  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (alpha_vms_write_exec): Write 16 bits to eihd.alias.
+
+2020-11-09  Alan Modra  <amodra@gmail.com>
+
+	* archive.c (bfd_ar_hdr_from_filesystem): Use bfd_set_input_error
+	when stat of archive member fails.
+	* coff-rs6000.c (xcoff_write_archive_contents_old),
+	(xcoff_write_archive_contents_big): Likewise, and handle in-memory
+	bfd.
+
+2020-11-03  Alan Modra  <amodra@gmail.com>
+
+	* elf.c (bfd_section_from_shdr): Free sections_being_created.
+	Use bfd_zmalloc.
+
+2020-11-02  Alan Modra  <amodra@gmail.com>
+
+	PR 15146
+	PR 26314
+	PR 26530
+	PR 26806
+	* elflink.c (elf_link_add_object_symbols): Don't set def/ref flags
+	for plugin syms.  Do allow plugin syms to mark as-needed libs.
+
+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Generate
+	GNU_PROPERTY_X86_ISA_1_BASELINE for -z x86-64-baseline.
+
+2020-10-29  Nick Clifton  <nickc@redhat.com>
+
+	PR 26809
+	* elf.c (_bfd_elf_slurp_secondary_reloc_section): Use the correct
+	sized reloc reading function.
+	(_bfd_elf_write_secondary_reloc_section): Use the correct sized
+	reloc writing function.
+
+2020-10-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 26774
+	* srec.c (srec_write_symbols): Do not emit symbols in sections
+	that have been removed from the output.
+
+2020-10-27  Nick Clifton  <nickc@redhat.com>
+
+	* elf64-hppa.c (elf_hppa_final_link_relocate): Check that the
+	symbol's section is being output before adding its offset to the
+	addend when processing R_PARISC_SECREL32.
+
+2020-10-25  Alan Modra  <amodra@gmail.com>
+
+	* vms-misc.c (_bfd_vms_save_counted_string): Count length byte
+	towards maxlen.
+
+2020-10-20  Dr. David Alan Gilbert  <dgilbert@redhat.com>
+
+	* po/es.po: Fix printf format.
+
+2020-10-16  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_elf_link_hash_table): Add last_iplt_index.
+	(riscv_elf_size_dynamic_sections): Initialize the last_iplt_index.
+	(riscv_elf_relocate_section): Use riscv_elf_append_rela.
+	(riscv_elf_finish_dynamic_symbol): If the use_elf_append_rela is
+	false, then we should add the dynamic relocs from the last of
+	the .rela.iplt, and don't use the riscv_elf_append_rela to add.
+
+2020-10-16  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c: Include "objalloc.h" since we need objalloc_alloc.
+	(riscv_elf_link_hash_table): Add loc_hash_table and loc_hash_memory
+	for local STT_GNU_IFUNC symbols.
+	(riscv_elf_got_plt_val): Removed.
+	(riscv_elf_local_htab_hash, riscv_elf_local_htab_eq): New functions.
+	Use to compare local hash entries.
+	(riscv_elf_get_local_sym_hash): New function.  Find a hash entry for
+	local symbol, and create a new one if needed.
+	(riscv_elf_link_hash_table_free): New function.  Destroy an riscv
+	elf linker hash table.
+	(riscv_elf_link_hash_table_create): Create hash table for local ifunc.
+	(riscv_elf_check_relocs): Create a fake global symbol to track the
+	local ifunc symbol.  Add support to check and handle the relocations
+	reference to ifunc symbols.
+	(allocate_dynrelocs): Let allocate_ifunc_dynrelocs and
+	allocate_local_ifunc_dynrelocs to handle the ifunc symbols if they
+	are defined and referenced in a non-shared object.
+	(allocate_ifunc_dynrelocs): New function.  Allocate space in .plt,
+	.got and associated reloc sections for ifunc dynamic relocs.
+	(allocate_local_ifunc_dynrelocs): Likewise, but for local ifunc
+	dynamic relocs.
+	(riscv_elf_relocate_section): Add support to handle the relocation
+	referenced to ifunc symbols.
+	(riscv_elf_size_dynamic_sections): Updated.
+	(riscv_elf_adjust_dynamic_symbol): Updated.
+	(riscv_elf_finish_dynamic_symbol): Finish up the ifunc handling,
+	including fill the PLT and GOT entries for ifunc symbols.
+	(riscv_elf_finish_local_dynamic_symbol): New function.  Called by
+	riscv_elf_finish_dynamic_symbol to handle the local ifunc symbols.
+	(_bfd_riscv_relax_section): Don't do the relaxation for ifunc.
+	* elfxx-riscv.c: Add R_RISCV_IRELATIVE.
+	* configure.ac: Link elf-ifunc.lo to use the generic ifunc support.
+	* configure: Regenerated.
+
+2020-10-16  Alan Modra  <amodra@gmail.com>
+
+	* elf32-arc.c (replace_func): Correct return type.
+	(get_replace_function): Use a replace_func function pointer rather
+	than void*.  Update associated ARC_RELOC_HOWTO define.
+
+2020-10-16  Alan Modra  <amodra@gmail.com>
+
+	* elf32-cr16.c: Formatting.
+	(cr16_elf_final_link_relocate): Sign extend rather than clumsy
+	"add or subtract" of offset value.  Simplify range checks.  Move
+	common code out of "if" branches.  Don't refetch insn fields
+	needlessly.
+
+2020-10-16  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_relocate_section): Tighten sanity check
+	on R_PPC64_GOT_LO_DS and R_PPC64_GOT_HA instructions.
+
+2020-10-09  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (write_plt_relocs_for_local_syms): Don't do local
+	entry offset optimisation.
+
+2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* elf-linker-x86.h (elf_linker_x86_params): Add isa_level.
+	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Merge
+	GNU_PROPERTY_X86_ISA_1_V[234].
+	(_bfd_x86_elf_link_setup_gnu_properties): Generate
+	GNU_PROPERTY_X86_ISA_1_V[234] for -z x86-64-v[234].
+
+2020-10-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26711
+	* elfxx-x86.c (_bfd_x86_elf_merge_gnu_properties): Merge -z ibt
+	and -z shstk only with GNU_PROPERTY_X86_FEATURE_1_AND.
+
+2020-10-06  Brandon Bergren  <bdragon@FreeBSD.org>
+
+	* config.bfd: Add powerpc64le-*-freebsd*.
+	* configure.ac: Add powerpc_elf64_fbsd_le_vec.
+	* elf64-ppc.c (TARGET_LITTLE_SYM, TARGET_LITTLE_NAME): Define for
+	freebsd.
+	* targets.c (powerpc_elf64_fbsd_le_vec): Declare.
+	(_bfd_target_vector): Add it.
+	* configure: Regenerate.
+
+2020-10-05  Kamil Rytarowski  <n54@gmx.com>
+
+	* config.bfd (aarch64-*-netbsd*, aarch64_be-*-netbsd*): Add target.
+
+2020-10-05  Nick Clifton  <nickc@redhat.com>
+
+	PR 26253
+	* elf.c (_bfd_elf_setup_sections): Do not complain about an
+	sh_link value of zero when the SLF_LINK_ORDER flag is set.
+	(assign_section_numbers): Likewise.
+
+2020-10-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR 26681
+	* elflink.c (bfd_elf_gc_sections): Do not arbitrarily keep note
+	sections which are linked to another section.
+
+2020-09-30  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* cpu-arm.c: Add cortex-a78 and cortex-a78ae.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* cpu-arm.c: (processors) Add Cortex-X1.
+
+2020-09-28  Alan Modra  <amodra@gmail.com>
+
+	PR 26656
+	* elf64-ppc.c (ppc_build_one_stub, ppc_size_one_stub): Check for
+	NULL stub_entry->h before calling is_tls_get_addr.
+
+2020-09-26  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (GLINK_PLTRESOLVE_SIZE): Depend on has_plt_localentry0.
+	(LD_R0_0R11, ADD_R11_R0_R11): Define.
+	(ppc64_elf_tls_setup): Disable params->plt_localentry0 when power10
+	code detected.
+	(ppc64_elf_size_stubs): Update __glink_PLTresolve eh_frame.
+	(ppc64_elf_build_stubs): Move r2 save to start of __glink_PLTresolve,
+	and only emit for has_plt_localentry0.  Don't use r2 in the stub.
+
+2020-09-24  Alan Modra  <amodra@gmail.com>
+
+	PR 26656
+	* elf64-ppc.c (plt_stub_size): Add "odd" param.  Use it with
+	size_power10_offset rather than calculating from start of stub.
+	Add size for notoc tls_get_addr_opt stub.
+	(plt_stub_pad): Add "odd" param, pass to plt_stub_size.
+	(build_tls_get_addr_head, build_tls_get_addr_tail): New functions.
+	(build_tls_get_addr_stub): Delete.
+	(ppc_build_one_stub): Use a temp for htab->params->stub_bfd.
+	Emit notoc tls_get_addr_opt stub.  Move eh_frame code to
+	suit.  Adjust code to use bfd_tls_get_addr_head/tail in place
+	of build_tls_get_addr_stub.
+	(ppc_size_one_stub): Size notoc tls_get_addr_opt stub.
+	Adjust plt_stub_size and plt_stub_pad calls.  Correct "odd"
+	when padding stub.  Size eh_frame for notoc stub too.
+	Correct lr_restore value.
+	(ppc64_elf_relocate_section): Don't skip over first insn of
+	notoc tls_get_addr_opt stub.
+
+2020-09-24  Alan Modra  <amodra@gmail.com>
+
+	PR 26655
+	* elf64-ppc.c (ppc64_elf_func_desc_adjust): Rename to..
+	(ppc64_elf_edit): Call params->edit.
+	(ppc64_elf_tls_setup): Don't call _bfd_elf_tls_setup.  Return a
+	bfd_boolean.
+	* elf64-ppc.h (struct ppc64_elf_params): Add "edit".
+	(ppc64_elf_tls_setup): Update declaration.
+
+2020-09-21  Alan Modra  <amodra@gmail.com>
+
+	PR 26569
+	* elfxx-riscv.c (howto_table): Correct size and bitsize of
+	R_RISCV_RVC_BRANCH, R_RISCV_RVC_JUMP, and R_RISCV_RVC_LUI.
+	Correct size for R_RISCV_TLS_DTPMOD32, R_RISCV_TLS_DTPREL32,
+	R_RISCV_CALL, and R_RISCV_CALL_PLT.  Make R_RISCV_TPREL_ADD and
+	R_RISCV_ALIGN like R_RISCV_NONE.  Correct dst_mask many relocs.
+
+2020-09-17  Mikael Pettersson  <mikpelinux@gmail.com>
+
+	PR ld/18808
+	* elfxx-sparc.c (_bfd_sparc_elf_relocate_section): Skip IFUNC
+	relocations in debug sections, change abort to _bfd_error_handler.
+
+2020-09-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26583
+	* config.bfd (targ64_selvecs, targ_selvecs): Add x86_64_pe_vec
+	to x86_64_pei_vec.
+	* reloc.c: Include "coff/internal.h".
+	(bfd_perform_relocation): Adjust relocation for PE/x86-64 inputs.
+
+2020-09-16  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (elf_symbol_from): Remove unused ABFD parameter.
+	* elf.c (ignore_section_sym, _bfd_elf_copy_private_symbol_data),
+	(swap_out_syms): Adjust elf_symbol_from invocation.
+
+2020-09-16  Alan Modra  <amodra@gmail.com>
+
+	PR 26623
+	* elf-bfd.h (elf_symbol_from): Exclude synthetic symbols.
+
+2020-09-15  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* coff-x86_64.c (howto_table): Display PE relocation names.
+
+2020-09-15  Hans-Peter Nilsson  <hp@axis.com>
+
+	PR ld/26589
+	* elf32-cris.c (cris_elf_check_relocs): Add missing NULL check
+	on argument before calling UNDEFWEAK_NO_DYNAMIC_RELOC.
+
+2020-09-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26391
+	* elflink.c (elf_final_link_info): Add local_hash_table.
+	(local_hash_entry): New.
+	(local_hash_newfunc): Likewise.
+	(elf_link_output_symstrtab): Append ".COUNT" to duplicated local
+	symbols.
+	(bfd_elf_final_link): Initialize and free local_hash_table for
+	"-z unique-symbol".
+
+2020-09-10  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>
+
+	* elfnn-aarch64.c (elfNN_aarch64_final_link_relocate): Revert
+	changes in 7e05773767820b441b23a16628b55c98cb1aef46.  Set
+	error for undefined symbol in BFD_RELOC_AARCH64_BRANCH19 and
+	BFD_RELOC_AARCH64_TSTBR14 relocations.
+
+2020-09-09  Nick Clifton  <nickc@redhat.com>
+
+	* cofflink.c (coff_link_check_archive_element): Move the check for
+	coff type input to the start of the function.
+
+2020-09-09  Alan Modra  <amodra@gmail.com>
+
+	* libbfd-in.h (_bfd_write_unsigned_leb128): Declare.
+	* libbfd.h: Regenerate.
+
+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+	    Kuan-Lin Chen  <kuanlinchentw@gmail.com>
+
+	* bfd-in2.h (bfd_reloc_code_real): Add
+	BFD_RELOC_MSP430_{SET,SUB}_ULEB128.
+	* elf32-msp430.c (msp430_elf_ignore_reloc): New.
+	(elf_msp430_howto_table): Add R_MSP430{,X}_GNU_{SET,SUB}_ULEB128.
+	(msp430_reloc_map): Add R_MSP430_GNU_{SET,SUB}_ULEB128.
+	(msp430x_reloc_map): Add R_MSP430X_GNU_{SET,SUB}_ULEB128.
+	(write_uleb128): New.
+	(msp430_final_link_relocate): Handle R_MSP430{,X}_GNU_{SET,SUB}_ULEB128.
+	* libbfd.c (_bfd_write_unsigned_leb128): New.
+	* libbfd.h (_bfd_write_unsigned_leb128): New prototype.
+	Add BFD_RELOC_MSP430_{SET,SUB}_ULEB128.
+	* reloc.c: Document BFD_RELOC_MSP430_{SET,SUB}_ULEB128.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* archures.c (bfd_mach_aarch64_8R): New.
+	* bfd-in2.h: Regenerate.
+	* cpu-aarch64.c (bfd_aarch64_arch_v8_r): New.
+	(bfd_aarch64_arch_ilp32): Update tail pointer.
+
+2020-09-08  Alan Modra  <amodra@gmail.com>
+
+	PR 13250
+	PR 26580
+	* elflink.c (_bfd_elf_merge_symbol): Make "override" a bfd**.
+	Return oldbfd in override when old common should override new
+	common.
+	(_bfd_elf_add_default_symbol): Adjust to suit.
+	(elf_link_add_object_symbols): Likewise.  Pass "override" to
+	_bfd_generic_link_add_one_symbol.  Save and restore common u.c.p
+	field for --as-needed shared libraries.  Revert pr13250 changes.
+
+2020-09-08  Nick Clifton  <nickc@redhat.com>
+
+	* plugin.c (bfd_plugin_canonicalize_symtab): Handle the case of an
+	unrecognized symbol type in a weak definition.
+
+2020-09-04  Alan Modra  <amodra@gmail.com>
+
+	PR 26574
+	* elfcode.h (elf_object_p): Sanity check section header offset.
+	* elf.c (_bfd_elf_slurp_secondary_reloc_section): Sanity check
+	sh_entsize.
+
+2020-09-04  Alan Modra  <amodra@gmail.com>
+
+	PR 15146
+	PR 26314
+	PR 26530
+	* elflink.c (elf_link_add_object_symbols): Do set def_regular
+	and ref_regular for IR symbols.  Don't clear dynsym, allowing
+	IR symbols to load --as-needed shared libraries, but prevent
+	IR symbols from becoming dynamic.
+
+2020-09-03  Nick Clifton  <nickc@redhat.com>
+
+	PR 26521
+	* elf.c (_bfd_elf_write_secondary_reloc_section): Check for
+	secondary reloc sections with a zero sh_entsize field.
+
+2020-09-03  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_i_or_e_p): Minor cleanup for warnings/errors.
+	(riscv_merge_std_ext): Likewise.
+	(riscv_merge_arch_attr_info): Likewise.
+	(riscv_merge_attributes): Likewise and fix comment typos.
+
+2020-09-03  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_version_mismatch): Change the return type
+	from void to bfd_boolean.  Report warnings rather than errors
+	when the ISA versions are mis-matched.  Afterwards, remember to
+	update the output ISA versions to the newest ones.
+	(riscv_merge_std_ext): Allow to link objects with different
+	standard ISA versions.  Try to add output ISA versions to
+	merged_subsets first.
+	(riscv_merge_multi_letter_ext): Likewise.  But for standard additional
+	ISA and non-standard ISA versions.
+
+2020-09-03  Kito Cheng  <kito.cheng@sifive.com>
+
+	* elfnn-riscv.c (riscv_merge_std_ext): Fix to report the correct
+	error message when the versions of extension are mis-matched.
+	* elfxx-riscv.c (riscv_parse_subset): Don't issue the error when
+	the string is empty.
+
+2020-09-03  Alan Modra  <amodra@gmail.com>
+
+	* xcofflink.c (xcoff_get_archive_info): Allocate xcoff_archive_info
+	on the output bfd objalloc memory.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* elfnn-aarch64.c (elfNN_aarch64_relocate_section): Correct type
+	of constant shifted left.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* elf32-pru.c (pru_elf32_do_ldi32_relocate): Use an unsigned
+	type for "relocation".
+
+2020-09-01  Alan Modra  <amodra@gmail.com>
+
+	* reloc.c (N_ONES): Handle N=0.
+	* elf32-arm.c (elf32_arm_howto_table_1): Set complain_overflow_dont
+	for R_ARM_TLS_DESCSEQ and R_ARM_THM_TLS_DESCSEQ.
+
+2020-09-01  Alan Modra  <amodra@gmail.com>
+
+	PR 26429
+	* elf32-arm.c (elf32_arm_allocate_local_sym_info): Allocate arrays
+	in descending order of alignment.
+
+2020-09-01  Alan Modra  <amodra@gmail.com>
+
+	PR 26423
+	* elf32-arm.c (calculate_group_reloc_mask): Use 3u in shift.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26493
+	* elfnn-riscv.c (riscv_make_plt_header): Cast PLT_HEADER_SIZE to
+	unsigned when using with RISCV_ITYPE.
+	(_bfd_riscv_relax_call): Use an unsigned foff.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26476
+	PR 26477
+	* elfxx-mips.c (CRINFO_CTYPE, CRINFO_RTYPE, CRINFO_DIST2TO),
+	(CRINFO_RELVADDR): Make unsigned.
+	(mips_elf_nullify_got_load): Use unsigned constant when shifting
+	into sign bit.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26466
+	* mep-relocs.pl (emit_apply): Handle HI16S adjustment.  Use "u"
+	variable and rewrite signed overflow check.
+	* elf32-mep.c: Regenerate.
+	(mep_final_link_relocate): Delete "s".
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26461
+	* elfxx-ia64.c (ia64_elf_install_value): Make expressions unsigned
+	that might shift values into sign bit.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26445
+	* elf32-csky.c (csky_relocate_contents): Make relocation a bfd_vma,
+	and similarly for variables dealing with overflow.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26442
+	* elf32-crx.c (crx_elf_final_link_relocate): Calculate reloc_bits
+	without undefined behaviour.  Tidy excess casts.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	* elf-m10300.c (mn10300_elf_relax_delete_bytes): Calculate
+	alignment from reloc addend after reloc type R_MN10300_ALIGN is
+	found.
+
+2020-08-30  Alan Modra  <amodra@gmail.com>
+
+	PR 26435
+	PR 26436
+	* elf32-cr16.c (cr16_elf_final_link_relocate): Calculate reloc_bits
+	without undefined behaviour.
+
+2020-08-29  Nick Clifton  <nickc@redhat.com>
+
+	PR 26520
+	* dwarf2.c (scan_unit_for_symbols): Add member entries to the
+	variable table.
+
+2020-08-29  Alan Modra  <amodra@gmail.com>
+
+	PR 26459
+	* elfnn-ia64.c (get_dyn_sym_info): Don't bsearch or look at last
+	element when count is zero.  bfd_realloc when shrinking.
+
+2020-08-28  Alan Modra  <amodra@gmail.com>
+
+	PR 26418
+	* ecofflink.c (bfd_ecoff_write_accumulated_debug): Don't write
+	zero size buffers.
+
+2020-08-28  Alan Modra  <amodra@gmail.com>
+
+	PR 26418
+	* ecofflink.c (WRITE): Really don't write zero size chunks.
+
+2020-08-28  Tuckker  <tuckkern+sourceware@gmail.com>
+
+	PR 26543
+	* linker.c (bfd_generic_define_common_symbol): Force the alignment
+	to 1 if the section has now alignment requirement.
+
+2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* elf32-csky.c (csky_archs): Fix arch names.
+	(csky_find_arch_with_name): New.
+	(elf32_csky_merge_attributes): New.
+	(csky_elf_merge_private_bfd_data): Add process of merge
+	attribute section.
+	(elf32_csky_obj_attrs_arg_type): New.
+	(elf32_csky_obj_attrs_handle_unknown): New.
+	(elf_backend_obj_attrs_vendor): Define.
+	(elf_backend_obj_attrs_section): Define.
+	(elf_backend_obj_attrs_arg_type): Define.
+	(elf_backend_obj_attrs_section_type): Define.
+
+2020-08-28  Nick Clifton  <nickc@redhat.com>
+
+	PR19011
+	* cofflink.c (_bfd_coff_generic_relocate_section): Provide a value
+	for undefined symbols which will not generate extra warning
+	messages about truncated relocs.
+
+2020-08-28  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_elf_check_relocs): Treat R_RISCV_CALL
+	and R_RISCV_CALL_PLT as the same in the riscv_elf_check_relocs.
+	(riscv_elf_relocate_section): Remove the R_RISCV_CALL for the
+	unresolved reloc checks.
+
+2020-08-27  John David Anglin  <danglin@gcc.gnu.org>
+
+	PR 26356
+	* som.c (som_bfd_copy_private_section_data): Issue error when a
+	subspace is specified without its containing space.
+
+2020-08-27  Alan Modra  <amodra@gmail.com>
+
+	PR 26469
+	* elflink.c: Include limits.h.
+	(CHAR_BIT): Provide fallback define.
+	(set_symbol_value): Correct complex reloc comment.
+	(undefined_reference): Set bfd_error.
+	(BINARY_OP_HEAD, BINARY_OP_TAIL): Split out from..
+	(BINARY_OP): ..this.
+	(eval_symbol): Limit shifts.  Force unsigned for left shift.
+	Catch divide by zero.
+	* configure.ac (AC_CHECK_HEADERS): Combine, sort and add limits.h.
+	* configure: Regenerate.
+	* config.in: Regenerate.
+
+2020-08-27  Alan Modra  <amodra@gmail.com>
+
+	PR 26462
+	* reloc.c (bfd_check_overflow): Return early if zero bitsize.
+
+2020-08-27  Alan Modra  <amodra@gmail.com>
+
+	* elf32-arm.c (elf32_arm_final_link_relocate): Don't segfault
+	on sym_sec not being output.
+
+2020-08-27  Alan Modra  <amodra@gmail.com>
+
+	PR 26416
+	* elf64-alpha.c (elf64_alpha_relax_tls_get_addr): Correct "dynamic".
+
+2020-08-26  Nick Clifton  <nickc@redhat.com>
+
+	PR 26433
+	* elf32-avr.c (avr_final_link_relocate):  Fix undefined shift
+	behaviour.
+	(avr_elf32_load_records_from_section): Use bfd_get_16 and
+	bfd_get_32 to load values from potentially unaligned pointers.
+
+	PR 26416
+	* elf64-alpha.c (elf64_alpha_relax_tls_get_addr): Test for and
+	ignore local symbols.
+	(elf64_alpha_relax_got_load): Do not check for local dynamic
+	symbols.
+	(OP_LDA, OP_LDAH, OP_LDQ, OP_BR, OP_BSR): Use unsigned constant
+	values.
+	(INSN_A) Cast the A parameter to unsigned.
+	(INSN_AB): Define in terms of INSN_A.
+	(INSN_ABC): Likewise.
+	(INSN_ABO): Likewise.
+	(INSN_AD): Likewise.
+
+	PR 26411
+	* elfnn-aarch64.c (elfNN_aarch64_relocate_section): Use an
+	unsigned long constant when creating a mask to test for alignment
+	issues.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26507
+	* elf32-xtensa.c (find_removed_literal): Don't bsearch empty map.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26506
+	* elf32-xtensa.c (elf_xtensa_combine_prop_entries): Return early
+	when section is empty.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26498
+	* elf32-spu.c (find_function_stack_adjust): Use unsigned vars to
+	avoid UB left shift.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26484
+	PR 26485
+	PR 26486
+	PR 26487
+	PR 26488
+	PR 26490
+	* elf64-ppc.c (is_tls_get_addr): Avoid UB &h->elf when h is NULL.
+	(ppc64_elf_tls_setup): Likewise.
+	(branch_reloc_hash_match): Likewise.
+	(build_plt_stub): Likewise.
+	(ppc64_elf_relocate_section): Likewise.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26478
+	* mmo.c (mmo_write_symbols_and_terminator): Don't memcpy empty table.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26475
+	* elfxx-mips.c (_bfd_mips_elf_finish_dynamic_sections): Check
+	sstubs->contents != NULL.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26453
+	* som.c (som_prep_for_fixups): Return early when no symbols.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26418
+	* ecofflink.c (WRITE): Don't write size 0 chunks.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	* bfdio.c (bfd_get_file_size): Don't segv on NULL adata.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26415
+	* vms-misc.c (vms_time_t_to_vms_time): Don't use unsigned short vars.
+
+2020-08-26  David Faust  <david.faust@oracle.com>
+
+	* archures.c (bfd_mach_xbpf): Define.
+	* bfd-in2.h: Regenerate.
+	* cpu-bpf.c (bfd_xbpf_arch) New.
+	(bfd_bpf_arch) Update next in list field to point to xbpf arch.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	* archures.c (bfd_mach_ck860): Define.
+
+2020-08-25  Mark Wielaard  <mark@klomp.org>
+
+	*  dwarf2.c (struct dwarf2_debug_file): Add dwarf_rnglists_buffer
+	and dwarf_rnglists_size fields.
+	(dwarf_debug_sections): Add debug_rnglists.
+	(dwarf_debug_section_enum): Likewise.
+	(read_debug_rnglists): New function.
+	(read_rangelist): New function to call either read_ranges or
+	read_rnglists. Rename original function to...
+	(read_ranges): ...this.
+	(read_rnglists): New function.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26505
+	* elf32-xstormy16.c (xstormy16_elf_relax_section): Check
+	is_elf_hash_table before accessing elf fields.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26482
+	* coff-rs6000.c (_bfd_xcoff_sizeof_headers): Ignore sections that
+	won't be output.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26463
+	* elf32-m32c.c (m32c_elf_relax_section): Check is_elf_hash_table
+	before accessing elf fields.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26452
+	* som.c (som_compute_checksum): XOR 32-bit words in header,
+	not unsigned long sized words.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26430
+	* elf-nacl.c (nacl_modify_segment_map): Correct alloc size and
+	amount copied for elf_segment_map defined with one element
+	sections array.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26422
+	* elf32-arm.c (elf32_arm_final_link_relocate): Use the appropriate
+	bfd_get_x size function to read addends out of fields.  Apply
+	rightshift adjustment too.  Don't apply the now unnecessary
+	howto->size shift to branch REL addends.  Don't refetch R_ARM_ABS8
+	and R_ARM_ABS16 addends.  Don't refetch thumb branch addends.
+	Correct R_ARM_THM_JUMP6 addend.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26419
+	* elf-m10300.c (mn10300_elf_relax_section): Don't attempt access
+	before start of section.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	* elf-m10300.c (elf32_mn10300_hash_table): Test is_elf_hash_table
+	before accessing elf_hash_table_id.
+	* elf32-arc.c (elf_arc_hash_table): Likewise.
+	* elf32-arm.c (elf32_arm_hash_table): Likewise.
+	* elf32-avr.c (avr_link_hash_table): Likewise.
+	* elf32-bfin.c (bfinfdpic_hash_table): Likewise.
+	* elf32-cris.c (elf_cris_hash_table): Likewise.
+	* elf32-csky.c (csky_elf_hash_table): Likewise.
+	* elf32-frv.c (frvfdpic_hash_table): Likewise.
+	* elf32-hppa.c (hppa_link_hash_table): Likewise.
+	* elf32-lm32.c (lm32_elf_hash_table): Likewise.
+	* elf32-m32r.c (m32r_elf_hash_table): Likewise.
+	* elf32-m68hc1x.h (m68hc11_elf_hash_table): Likewise.
+	* elf32-m68k.c (elf_m68k_hash_table): Likewise.
+	* elf32-metag.c (metag_link_hash_table): Likewise.
+	* elf32-microblaze.c (elf32_mb_hash_table): Likewise.
+	* elf32-nds32.h (nds32_elf_hash_table): Likewise.
+	* elf32-or1k.c (or1k_elf_hash_table): Likewise.
+	* elf32-s390.c (elf_s390_hash_table): Likewise.
+	* elf32-sh.c (sh_elf_hash_table): Likewise.
+	* elf32-spu.c (spu_hash_table): Likewise.
+	* elf32-tilepro.c (tilepro_elf_hash_table): Likewise.
+	* elf32-xtensa.c (elf_xtensa_hash_table): Likewise.
+	* elf64-alpha.c (alpha_elf_hash_table): Likewise.
+	* elf64-hppa.c (hppa_link_hash_table): Likewise.
+	* elf64-ia64-vms.c (elf64_ia64_hash_table): Likewise.
+	* elf64-s390.c (elf_s390_hash_table): Likewise.
+	* elfnn-ia64.c (elfNN_ia64_hash_table): Likewise.
+	* elfnn-riscv.c (riscv_elf_hash_table): Likewise.
+	* elfxx-mips.c (mips_elf_hash_table): Likewise.
+	* elfxx-sparc.h (_bfd_sparc_elf_hash_table): Likewise.
+	* elfxx-tilegx.c (tilegx_elf_hash_table): Likewise.
+
+2020-08-21  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* elf.c (elfcore_grok_win32pstatus): Change name_size to unsigned
+	int. Use '%u' format with  _bfd_error_handler to render it.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26489
+	* elf64-ppc.c (ppc64_elf_size_stubs): Test code_sec->has_toc_reloc
+	and code_sec->makes_toc_func_call before sec_info[code_sec->id].
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26492
+	* elf64-ppc.c (ppc_hash_table): Test is_elf_hash_table before
+	accessing elf_hash_table_id.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26483
+	* elf32-ppc.c (ppc_elf_hash_table): Test is_elf_hash_table before
+	accessing elf_hash_table_id.
+
+2020-08-24  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf2.c (read_attribute_value): Handle DW_FORM_data16.
+	(read_formatted_entries): Likewise. And skip zero entry.
+
+2020-08-24  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* bfd-in2.h (bfd_mach_ck860): New.
+	* cpu-csky.c (arch_info_struct): Add item for CK860.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	* elf32-ppc.c (ppc_elf_check_relocs): Set has_tls_reloc for
+	high part tprel16 relocs.
+	(ppc_elf_tls_optimize): Sanity check high part tprel16 relocs.
+	Clear do_tls_opt on odd instructions.
+	(ppc_elf_relocate_section): Move TPREL16_HA/LO optimisation later.
+	Don't sanity check them here.
+	* elf64-ppc.c (ppc64_elf_check_relocs): Set has_tls_reloc for
+	high part tprel16 relocs.
+	(ppc64_elf_tls_optimize): Sanity check high part tprel16 relocs.
+	Clear do_tls_opt on odd instructions.
+	(ppc64_elf_relocate_section): Don't sanity check TPREL16_HA.
+
+2020-08-23  John David Anglin  <danglin@gcc.gnu.org>
+
+	PR binutils/26357
+	* configure.ac: Disable plugins by default on 32-bit hppa*-*-hpux*.
+	* configure: Regenerate.
+
+2020-08-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26382
+	* elflink.c (elf_link_output_symstrtab): Keep only one '@' for
+	versioned symbols, which are defined in shared objects, in
+	symbol string table.
+
+2020-08-21  Nick Clifton  <nickc@redhat.com>
+
+	* elfnn-aarch64.c (_bfd_aarch64_erratum_835769_scan): Only sort
+	the data map if there are entries in it.
+	(_bfd_aarch64_erratum_843419_scan): Likewise.
+
+2020-08-21  Jan Beulich  <jbeulich@suse.com>
+
+	* peXXigen.c (_bfd_XX_bfd_copy_private_bfd_data_common): Check
+	last byte of debug dir, not first.
+
+2020-08-20  Nick Clifton  <nickc@redhat.com>
+
+	PR 26428
+	* bfd.c (bfd_update_compression_header): Also set the sh_addralign
+	field in the ELF header of the compressed sections.
+
+2020-08-20  Nick Clifton  <nickc@redhat.com>
+
+	PR 26406
+	* elf-bfd.h (struct bfd_elf_section_data): Add
+	has_secondary_relocs field.
+	* elf.c (_bfd_elf_copy_special_section_fields): Set the
+	has_secondary_relocs field for sections which have associated
+	secondary relocs.
+	* elfcode.h (elf_write_relocs): Only call write_secondary_relocs
+	on sections which have associated secondary relocs.
+
+2020-08-15  Alan Modra  <amodra@gmail.com>
+
+	* elf32-frv.c (elf32_frv_add_symbol_hook): Set SEC_SMALL_DATA on
+	small common section.
+	* elf32-m32r.c (m32r_elf_add_symbol_hook): Likewise.
+	* elf32-microblaze.c (microblaze_elf_add_symbol_hook): Likewise.
+	* elf32-nds32.c (nds32_elf_add_symbol_hook): Likewise.
+	* elf32-nios2.c (nios2_elf_add_symbol_hook): Likewise.
+	* elf32-ppc.c (ppc_elf_add_symbol_hook): Likewise.
+	* elf32-score.c (s3_bfd_score_elf_add_symbol_hook): Likewise.
+	* elf32-score7.c (s7_bfd_score_elf_add_symbol_hook): Likewise.
+	* elf32-tic6x.c (elf32_tic6x_add_symbol_hook): Likewise.
+	* elf32-v850.c (v850_elf_check_relocs): Likewise.
+	(v850_elf_add_symbol_hook): Likewise.
+	* elf64-alpha.c (elf64_alpha_add_symbol_hook): Likewise.
+	* elf64-ia64-vms.c (elf64_ia64_add_symbol_hook): Likewise.
+	* elfnn-ia64.c (elfNN_ia64_add_symbol_hook): Likewise.
+	* elfxx-mips.c (_bfd_mips_elf_add_symbol_hook): Likewise.
+
+2020-08-15  Alan Modra  <amodra@gmail.com>
+
+	PR 26389
+	* syms.c (bfd_decode_symclass): Choose 'c' for commons only when
+	SEC_SMALL_DATA.
+	* elf32-m32r.c (_bfd_m32r_elf_symbol_processing): Set SEC_SMALL_DATA
+	on small common section.
+	* elf32-score.c (s3_bfd_score_elf_symbol_processing): Likewise.
+	* elf32-score7.c (s7_bfd_score_elf_symbol_processing): Likewise.
+	* elf32-tic6x.c (elf32_tic6x_symbol_processing): Likewise.
+	* elf32-v850.c (v850_elf_symbol_processing): Likewise.
+	* elfxx-mips.c (_bfd_mips_elf_symbol_processing): Likewise.
+	* ecoff.c (ecoff_set_symbol_info, ecoff_link_add_externals): Likewise.
+
+2020-08-14  Alan Modra  <amodra@gmail.com>
+
+	* hash.c (bfd_hash_set_default_size): Use higher_prime_number
+	rather than another copy of primes.  Increase maximum default
+	size allowed.
+
+2020-08-13  Alan Modra  <amodra@gmail.com>
+
+	* config.bfd: Obsolete arm*-*-symbianelf*, and ia64*-*-*.
+
+2020-08-13  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.h (struct ppc64_elf_params): Add no_pcrel_opt.
+	* elf64-ppc.c (ppc64_elf_relocate_section): Disable GOT reloc
+	optimizations when --no-toc-optimize.  Disable R_PPC64_PCREL_OPT
+	optimization when --no-pcrel-optimize.
+
+2020-08-13  Alan Modra  <amodra@gmail.com>
+
+	PR 26348
+	* bfd.c (struct bfd): Add read_only.
+	* elfcode.h (elf_swap_shdr_in): Test both sh_offset and sh_size.
+	Set read_only on warning.
+	(elf_object_p): Sanity check program header alignment.  Set
+	read_only on warning.
+	* bfd-in2.h: Regenerate.
+
+2020-08-12  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* elf.c (elfcore_grok_win32pstatus): Use unsigned int for
+	win32pstatus note type to avoid signedness comparison warning.
+
+2020-07-21  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* elf.c (elfcore_grok_win32pstatus): Warn on malformed
+	win32pstatus notes, and return TRUE so we continue rather than
+	stopping as if it was an error.
+
+2020-07-01  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* elf.c (elfcore_grok_win32pstatus): Handle NOTE_INFO_MODULE64.
+
+2020-07-11  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* elf.c (elfcore_grok_win32pstatus): Don't apply size constraint
+	for NOTE_INFO_THREAD to all win32pstatus ELF notes, instead apply
+	appropriate size constraint for each win32pstatus note type.
+
+2020-07-01  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* elf.c (elfcore_grok_win32pstatus): Don't hardcode the size of
+	the Win32 API thread CONTEXT type read from a NOTE_INFO_THREAD
+	win32pstatus note.
+
+2020-07-11  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* elf.c (NOTE_INFO{_PROCESS,_THREAD,_MODULE}): Define.
+	(elfcore_grok_win32pstatus): Use.
+
+2020-07-01  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* elf.c (elfcore_grok_win32pstatus): Fix the offset used to read
+	the tid from a win32pstatus NOTE_INFO_THREAD ELF note.  Fix
+	offsets used to read NOTE_INFO_PROCESS.
+
+2020-08-12  Nick Clifton  <nickc@redhat.com>
+
+	* po/ru.po: Updated Russian translation.
+	* po/sr.po: Updated Serbian translation.
+
+2020-08-07  David Faust  <david.faust@oracle.com>
+
+	* elf64-bpf.c (bpf_elf_relocate_section): Ensure signed division for
+	DISP16 and DISP32 relocations.
+
+2020-08-05  David Faust  <david.faust@oracle.com>
+
+	* elf64-bpf.c (bpf_elf_generic_reloc): New function.
+	(bpf_elf_howto_table): Use it here.
+	(bpf_elf_relocate_section): Use addends recorded in input_bfd for
+	instruction and data relocations.
+
+2020-08-03  Alan Modra  <amodra@gmail.com>
+
+	* vms-lib.c (vms_traverse_index): Sanity check size remaining
+	before accessing vms_idx or vms_elfidx.
+
+2020-08-03  Alan Modra  <amodra@gmail.com>
+
+	PR 26330
+	* elf.c (_bfd_elf_get_symtab_upper_bound): Sanity check symbol table
+	size against file size.  Correct LONG_MAX limit check.
+	(_bfd_elf_get_dynamic_symtab_upper_bound): Likewise.
+	(_bfd_elf_get_reloc_upper_bound): Don't check file size if writing.
+	(_bfd_elf_get_dynamic_reloc_upper_bound): Likewise.
+	* elf64-x86-64-.c (elf_x86_64_get_synthetic_symtab): Use
+	bfd_malloc_and_get_section.
+
+2020-07-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26314
+	* elflink.c (bfd_elf_link_record_dynamic_symbol): Don't allow
+	IR symbols to become dynamic.
+	(elf_link_add_object_symbols): Don't exclude IR symbols when
+	deciding whether an as-needed shared library is needed.
+
+2020-07-30  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	PR ld/26312
+	* elfnn-aarch64.c (elfNN_aarch64_init_small_plt0_entry): Set sh_entsize
+	to 0.
+	(elfNN_aarch64_finish_dynamic_sections): Remove sh_entsize setting.
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* bfd.m4 (BFD_SYS_PROCFS_H): New macro.
+	(BFD_HAVE_SYS_PROCFS_TYPE): Require BFD_SYS_PROCFS_H.
+	Don't define _STRUCTURED_PROC.
+	(BFD_HAVE_SYS_PROCFS_TYPE_MEMBER): Likewise.
+	* elf.c [HAVE_SYS_PROCFS_H] (_STRUCTURED_PROC): Don't define.
+	* configure.ac: Use BFD_SYS_PROCFS_H to check for <sys/procfs.h>.
+	* configure, config.in: Regenerate.
+	* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.
+	* Makefile.in, doc/Makefile.in: Regenerate.
+
+2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-bfd.h (sym_cache): Moved before elf_link_hash_table.
+	(elf_link_hash_table): Add sym_cache.
+	* elf32-arm.c (elf32_arm_link_hash_table): Remove sym_cache.
+	(elf32_arm_check_relocs): Updated.
+	(elf32_arm_size_dynamic_sections): Likewise.
+	* elf32-bfin.c (bfin_link_hash_table): Removed.
+	(bfin_link_hash_newfunc): Updated.
+	(bfin_hash_table): Removed.
+	* elf32-csky.c (csky_elf_link_hash_table): Remove sym_cache.
+	(csky_elf_check_relocs): Updated.
+	* elf32-hppa.c (elf32_hppa_link_hash_table): Remove sym_cache.
+	(elf32_hppa_check_relocs): Updated.
+	* elf32-i386.c (elf_i386_tls_transition): Updated.
+	(elf_i386_convert_load_reloc): Likewise.
+	(elf_i386_check_relocs): Likewise.
+	* elf32-m32r.c (elf_m32r_link_hash_table): Removed.
+	(m32r_elf_hash_table): Updated.
+	(m32r_elf_link_hash_table_create): Likewise.
+	(m32r_elf_create_dynamic_sections): Likewise.
+	(m32r_elf_adjust_dynamic_symbol): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(m32r_elf_size_dynamic_sections): Likewise.
+	(m32r_elf_relocate_section): Likewise.
+	(m32r_elf_finish_dynamic_symbol): Likewise.
+	(m32r_elf_check_relocs): Likewise.
+	* elf32-m68hc1x.h (m68hc11_elf_link_hash_table): Remove
+	sym_cache.
+	* elf32-m68k.c (elf_m68k_link_hash_table): Likewise.
+	(elf_m68k_check_relocs): Updated.
+	* elf32-metag.c (elf_metag_link_hash_table): Remove sym_cache.
+	(elf_metag_check_relocs): Updated.
+	* elf32-microblaze.c (elf32_mb_link_hash_table): Remove sym_sec.
+	(microblaze_elf_check_relocs): Updated.
+	* elf32-nds32.c (nds32_elf_link_hash_table_create): Likewise.
+	(nds32_elf_create_dynamic_sections): Likewise.
+	(nds32_elf_adjust_dynamic_symbol): Likewise.
+	(nds32_elf_check_relocs): Likewise.
+	* elf32-nds32.h (elf_nds32_link_hash_table): Remove sdynbss,
+	srelbss and aym_cache.
+	* elf32-nios2.c (elf32_nios2_link_hash_table): Remove sym_cache.
+	(nios2_elf32_check_relocs): Updated.
+	* elf32-or1k.c (elf_or1k_link_hash_table): Remove sym_sec.
+	(or1k_elf_check_relocs): Updated.
+	* elf32-ppc.c (ppc_elf_check_relocs): Remove sym_cache.
+	(ppc_elf_check_relocs): Updated.
+	* elf32-s390.c (elf_s390_link_hash_table): Remove sym_cache.
+	(elf_s390_check_relocs): Updated.
+	(elf_s390_finish_dynamic_sections): Likewise.
+	* elf32-sh.c (elf_sh_link_hash_table): Remove sdynbss, srelbss
+	and aym_cache.
+	(sh_elf_create_dynamic_sections): Updated.
+	(sh_elf_adjust_dynamic_symbol): Likewise.
+	(sh_elf_size_dynamic_sections): Likewise.
+	(sh_elf_check_relocs): Likewise.
+	* elf32-tic6x.c (elf32_tic6x_link_hash_table): Remove sym_cache.
+	(elf32_tic6x_check_relocs): Updated.
+	* elf32-tilepro.c (tilepro_elf_link_hash_table): Removed.
+	(tilepro_elf_hash_table): Updated.
+	(tilepro_elf_link_hash_table_create): Likewise.
+	(tilepro_elf_check_relocs): Likewise.
+	(tilepro_elf_adjust_dynamic_symbol): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(tilepro_elf_size_dynamic_sections): Likewise.
+	(tilepro_elf_relocate_section): Likewise.
+	(tilepro_elf_finish_dynamic_symbol): Likewise.
+	(tilepro_finish_dyn): Likewise.
+	(tilepro_elf_finish_dynamic_sections): Likewise.
+	* elf64-ppc.c (ppc_link_hash_table): Remove sym_cache.
+	(ppc64_elf_before_check_relocs): Updated.
+	(ppc64_elf_check_relocs): Likewise.
+	* elf64-s390.c (elf_s390_link_hash_table): Remove sym_cache.
+	(elf_s390_check_relocs): Updated.
+	(elf_s390_relocate_section): Likewise.
+	(elf_s390_finish_dynamic_sections): Likewise.
+	* elf64-x86-64.c (elf_x86_64_tls_transition): Likewise.
+	(elf_x86_64_check_relocs): Likewise.
+	* elfnn-aarch64.c (elf_aarch64_link_hash_table): Remove
+	sym_cache.
+	(elfNN_aarch64_check_relocs): Updated.
+	* elfnn-riscv.c (riscv_elf_link_hash_table): Remove sym_cache.
+	(riscv_elf_check_relocs): Updated.
+	* elfxx-mips.c (mips_elf_link_hash_table): Remove sym_cache.
+	(mips_elf_resolve_got_page_ref): Updated.
+	* elfxx-sparc.c (_bfd_sparc_elf_check_relocs): Likewise.
+	* elfxx-sparc.h (_bfd_sparc_elf_link_hash_table): Remove
+	sym_cache.
+	* elfxx-tilegx.c (tilegx_elf_link_hash_table): Likewise.
+	(tilegx_elf_check_relocs): Updated.
+	* elfxx-x86.h (elf_x86_link_hash_table): Remove sym_cache.
+
+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* elflink.c (bfd_elf_final_link): Give local symbols a name if
+	so requested.
+	* elfxx-mips.c (_bfd_mips_elf_name_local_section_symbols): Only
+	return TRUE if making ET_REL output.
+
+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* elf-bfd.h (elf_backend_data): Add
+	`elf_backend_elfsym_local_is_section' member.
+	* elfxx-target.h (elf_backend_elfsym_local_is_section): New
+	macro.
+	(elfNN_bed): Add `elf_backend_elfsym_local_is_section' member.
+	* elflink.c (bfd_elf_final_link): Use it to determine whether
+	set the `.symtab' section's `sh_info' value to the index of the
+	first non-local or non-section symbol.
+	* elf32-mips.c (mips_elf32_elfsym_local_is_section): New
+	function.
+	(elf_backend_elfsym_local_is_section): New macro.
+	* elfn32-mips.c (mips_elf_n32_elfsym_local_is_section): New
+	function.
+	(elf_backend_elfsym_local_is_section): New macro.
+
+2020-07-29  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (bfd_elf_final_link): Don't segfault on local dynsyms
+	defined in excluded sections.
+
+2020-07-28  Alan Modra  <amodra@gmail.com>
+
+	* elf.c (assign_section_numbers): Comment.  Don't segfault on
+	discarded sections when setting linked-to section for generic
+	ELF linker.
+	* elflink.c (bfd_elf_match_symbols_in_sections): Allow NULL info.
+
+2020-07-27  Alan Modra  <amodra@gmail.com>
+
+	* xcofflink.c (xcoff_need_ldrel_p): Accept --just-symbols symbols and
+	similar as absolute.
+	(bfd_xcoff_import_symbol): Don't fuss over absolute symbol
+	redefinitions here.
+
+2020-07-24  Nick Clifton  <nickc@redhat.com>
+
+	* config.bfd: Move xc16x target to the obsolete list.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* binary.c (binary_get_section_contents): Seek using offset
+	from section's file position.
+
+2020-07-22  Kevin Buettner  <kevinb@redhat.com>
+
+	* elf.c (_bfd_elf_make_section_from_phdr): Remove hack for GDB.
+
+2020-07-22  Max Filippov  <jcmvbkbc@gmail.com>
+
+	PR 26246
+	* elf32-xtensa.c (removed_literal_compare): Use correct pointer
+	type for the first function argument. Rename pointers to reflect
+	that they have distinct types.
+
+2020-07-20  Alan Modra  <amodra@gmail.com>
+
+	* elflink.c (_bfd_elf_gc_keep): Use bfd_is_const_section.
+
+2020-07-19  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (struct ppc_link_hash_table): Add has_power10_relocs.
+	(select_alt_stub): New function.
+	(ppc_get_stub_entry): Use it here.
+	(ppc64_elf_check_relocs): Set had_power10_relocs rather than
+	power10_stubs.
+	(ppc64_elf_size_stubs): Clear power10_stubs here instead.  Don't
+	merge notoc stubs with other varieties when power10_stubs is "auto".
+	Instead dup the stub hash table entry.
+	(plt_stub_size, ppc_build_one_stub, ppc_size_one_stub): Adjust
+	tests of power10_stubs.
+
+2020-07-15  Alan Modra  <amodra@gmail.com>
+
+	PR 26239
+	* coffgen.c (_bfd_coff_close_and_cleanup): Free dwarf2 info.
+
+2020-07-15  Nick Clifton  <nickc@redhat.com>
+
+	PR26240
+	* coffgen.c (coff_get_normalized_symtab): Fix off-by-one error in
+	check for aux entries that overflow the buufer.
+
+2020-07-15  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* elf64-mmix.c (mmix_elf_relax_section): Improve accounting for
+	R_MMIX_PUSHJ_STUBBABLE relocs against undefined symbols.
+
+2020-07-15  Markus Böck  <markus.boeck02@gmail.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	PR 26198
+	* coffgen.c (_bfd_coff_section_already_linked): Allow for plugin
+	objects both before and after normal object files.
+	* elflink.c (_bfd_elf_section_already_linked): Likewise.
+
+2020-07-10  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.h (struct ppc64_elf_params): Add power10_stubs.
+	* elf64-ppc.c (struct ppc_link_hash_table): Delete
+	power10_stubs.
+	(ppc64_elf_check_relocs): Adjust setting of power10_stubs.
+	(plt_stub_size, ppc_build_one_stub, ppc_size_one_stub): Adjust
+	uses of power10_stubs.
+
+2020-07-09  Alan Modra  <amodra@gmail.com>
+
+	* coff-ppc.c: Delete.
+	* pe-ppc.c: Delete.
+	* pei-ppc.c: Delete.
+	* Makefile.am (BFD32_BACKENDS, BFD32_BACKENDS_CFILES): Remove PE PPC.
+	* coffcode.h (coff_set_arch_mach_hook, coff_set_flags): Remove
+	PPCMAGIC code.
+	(coff_write_object_contents): Remove PPC_PE code.
+	* config.bfd: Move powerpcle-pe to removed targets.
+	* configure.ac: Remove powerpc PE entries.
+	* libcoff-in.h (ppc_allocate_toc_section): Delete.
+	(ppc_process_before_allocation): Delete.
+	* peXXigen.c: Remove POWERPC_LE_PE code and comments.
+	* targets.c: Remove powerpc PE vectors.
+	* po/SRC-POTFILES.in: Regenerate.
+	* libcoff.h: Regenerate.
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+
+2020-07-09  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* xcofflink.c (xcoff_mark): Don't mark const sections.
+	(bfd_xcoff_record_link_assignment): Add FIXME.
+	(_bfd_xcoff_bfd_final_link): Don't segfault on assorted magic
+	sections being discarded by linker script.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* coff-rs6000.c (xcoff_write_archive_contents_old): Set default
+	time, uid, gid and mode for deterministic archive.
+	(xcoff_write_archive_contents_big): Likewise.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* coffcode.h (coff_classify_symbol): Handle C_HIDEXT and
+	C_AIX_WEAKEXT.
+
+2020-07-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/pt.po: Updated Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	* version.m4: Set version to 2.35.50.
+	* configure: Regenerate.
+	* po/bbfd.pot: Regenerate.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-07-01  Alan Modra  <amodra@gmail.com>
+
+	PR 26188
+	* coffgen.c (coff_find_nearest_line_with_names): Sanity check
+	raw syment index before dereferencing.
+
+2020-07-01  Alan Modra  <amodra@gmail.com>
+
+	* elf32-i386.c (elf_backend_object_p): Undef for vxworks.
+
+2020-07-01  Alan Modra  <amodra@gmail.com>
+
+	* config.bfd: Obsolete xc16x.
+
+2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* archures.c (bfd_mach_i386_nacl): Removed.
+	(bfd_mach_i386_i386_nacl): Likewise.
+	(bfd_mach_x86_64_nacl): Likewise.
+	(bfd_mach_x64_32_nacl): Likewise.
+	* config.bfd: Remove *-*-nacl* targets.
+	* configure.ac: Remove x86 NaCl target vectors.
+	* cpu-i386.c (bfd_arch_i386_onebyte_nop_fill): Removed.
+	(bfd_x64_32_nacl_arch): Likewise.
+	(bfd_x86_64_nacl_arch): Likewise.
+	(bfd_i386_nacl_arch): Likewise.
+	(bfd_x64_32_arch_intel_syntax): Updated.
+	* elf32-i386.c: Don't include "elf-nacl.h".
+	(elf_i386_nacl_plt): Removed.
+	(elf_i386_nacl_plt0_entry): Likewise.
+	(elf_i386_nacl_plt_entry): Likewise.
+	(elf_i386_nacl_pic_plt0_entry): Likewise.
+	(elf_i386_nacl_pic_plt_entry): Likewise.
+	(elf_i386_nacl_eh_frame_plt): Likewise.
+	(elf_i386_nacl_plt): Likewise.
+	(elf32_i386_nacl_elf_object_p): Likewise.
+	(elf_i386_get_synthetic_symtab): Updated.
+	(elf_i386_link_setup_gnu_properties): Likewise.
+	* elf64-x86-64.c: Don't include "elf-nacl.h".
+	(elf_x86_64_nacl_plt): Removed.
+	(elf64_x86_64_nacl_elf_object_p): Likewise.
+	(elf_x86_64_nacl_plt0_entry): Likewise.
+	(elf_x86_64_nacl_plt_entry): Likewise.
+	(elf_x86_64_nacl_eh_frame_plt): Likewise.
+	(elf_x86_64_nacl_plt): Likewise.
+	(elf32_x86_64_nacl_elf_object_p): Likewise.
+	(elf_x86_64_get_synthetic_symtab): Updated.
+	(elf_x86_64_link_setup_gnu_properties): Likewise.
+	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Likewise.
+	* targets.c: Remove x86 NaCl target vectors.
+	* bfd-in2.h: Regenerated.
+	* configure: Likewise.
+
+2020-06-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf32-tic6x.c (elf32_tic6x_size_dynamic_sections): Call
+	_bfd_elf_add_dynamic_tags.
+
+2020-06-29  Alan Modra  <amodra@gmail.com>
+
+	* peXXigen.c (_bfd_XXi_slurp_codeview_record): Properly check
+	return value of bfd_bread.  Don't read more than requested length.
+	Sanity check length.  Properly terminate file name.
+
+2020-06-29  Alan Modra  <amodra@gmail.com>
+
+	* arc-got.h: Use C style comments.
+	* coff-z80.c: Likewise.
+	* elf32-csky.c: Likewise.
+	* peXXigen.c: Likewise.
+	* elf32-m32c.c (m32c_elf_relax_delete_bytes): Remove commented out
+	code.
+
+2020-06-26  Pat Bernardi  <bernardi@adacore.com>
+
+	* elf32-m68k.c (m68k_elf_merge_obj_attributes): New function.
+	(elf32_m68k_merge_private_bfd_data): Merge GNU attributes.
+
+2020-06-26  Alan Modra  <amodra@gmail.com>
+
+	* elfxx-riscv.c (struct priv_spec_t, priv_specs),
+	(riscv_get_priv_spec_class, riscv_get_priv_spec_class_from_numbers),
+	(riscv_get_priv_spec_name): Move to..
+	* cpu-riscv.c: ..here.
+	(riscv_get_priv_spec_class_from_numbers): Don't xmalloc temp buffer.
+	Use %u to print unsigned numbers.
+
+2020-06-24  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* cpu-riscv.c (riscv_scan): Don't allow shorter matches using the
+	default architecture.
+
+2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26083
+	* elf32-csky.c (csky_elf_size_dynamic_sections): Call
+	_bfd_elf_add_dynamic_tags.
+
+2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26083
+	* elf32-cris.c (elf_cris_size_dynamic_sections): Call
+	_bfd_elf_add_dynamic_tags.
+
+2020-06-24  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_slurp_etir <ETIR__C_OPR_ASH>): Implement
+	shifts without undefined behaviour.
+
+2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-bfd.h (elf_link_hash_table): Add dt_pltgot_required and
+	dt_jmprel_required.
+	(_bfd_elf_add_dynamic_tags): New.
+	* elf-m10300.c (_bfd_mn10300_elf_size_dynamic_sections): Call
+	_bfd_elf_add_dynamic_tags.
+	* elf32-arc.c (elf_arc_size_dynamic_sections): Likewise.
+	* elf32-bfin.c (elf32_bfinfdpic_size_dynamic_sections): Likewise.
+	* elf32-cr16.c (_bfd_cr16_elf_size_dynamic_sections): Likewise.
+	* elf32-frv.c (elf32_frvfdpic_size_dynamic_sections): Likewise.
+	* elf32-lm32.c (lm32_elf_size_dynamic_sections): Likewise.
+	* elf32-m32r.c (m32r_elf_size_dynamic_sections): Likewise.
+	* elf32-m68k.c (elf_m68k_size_dynamic_sections): Likewise.
+	* elf32-microblaze.c (microblaze_elf_size_dynamic_sections):
+	Likewise.
+	* elf32-nds32.c (nds32_elf_size_dynamic_sections): Likewise.
+	* elf32-nios2.c (nios2_elf32_size_dynamic_sections): Likewise.
+	* elf32-or1k.c (or1k_elf_size_dynamic_sections): Likewise.
+	* elf32-s390.c (elf_s390_size_dynamic_sections): Likewise.
+	* elf32-tilepro.c (tilepro_elf_size_dynamic_sections): Likewise.
+	* elf32-vax.c (elf_vax_size_dynamic_sections): Likewise.
+	* elf64-alpha.c (elf64_alpha_size_dynamic_sections): Likewise.
+	* elf64-s390.c (elf_s390_size_dynamic_sections): Likewise.
+	* elfnn-aarch64.c (elfNN_aarch64_size_dynamic_sections):
+	Likewise.
+	* elfnn-riscv.c (riscv_elf_size_dynamic_sections): Likewise.
+	* elfxx-tilegx.c (tilegx_elf_size_dynamic_sections): Likewise.
+	* elf32-arm.c (elf32_arm_size_dynamic_sections): Call
+	_bfd_elf_maybe_vxworks_add_dynamic_tags.
+	* elf32-ppc.c (ppc_elf_size_dynamic_sections): Likewise.
+	* elfxx-sparc.c (_bfd_sparc_elf_size_dynamic_sections):
+	Likewise.
+	* elfxx-x86.c (_bfd_x86_elf_link_hash_table_create): Likewise.
+	(_bfd_x86_elf_size_dynamic_sections): Likewise.
+	* elfxx-x86.h (elf_x86_link_hash_table): Remove dt_reloc,
+	dt_reloc_sz and dt_reloc_ent.
+	* elf-vxworks.c (_bfd_elf_maybe_vxworks_add_dynamic_tags): New.
+	* elf-vxworks.h (_bfd_elf_maybe_vxworks_add_dynamic_tags):
+	Likewise.
+	* elf32-hppa.c (elf32_hppa_link_hash_table_create): Set
+	etab.dt_pltgot_required.
+	(elf32_hppa_size_dynamic_sections): Call
+	_bfd_elf_add_dynamic_tags.
+	* elf32-metag.c (elf_metag_link_hash_table_create): Set
+	etab.dt_pltgot_required.
+	(elf_metag_size_dynamic_sections): Call _bfd_elf_add_dynamic_tags.
+	* elf32-sh.c (sh_elf_link_hash_table_create): Set
+	root.dt_pltgot_required for FDPIC output.
+	(sh_elf_size_dynamic_sections): Call
+	_bfd_elf_maybe_vxworks_add_dynamic_tags.
+	* elf32-xtensa.c (elf_xtensa_link_hash_table_create): Set
+	elf.dt_pltgot_required.
+	(elf_xtensa_size_dynamic_sections): Call
+	_bfd_elf_add_dynamic_tags.
+	* elf64-hppa.c (elf64_hppa_hash_table_create): Set
+	root.dt_pltgot_required.
+	(elf64_hppa_size_dynamic_sections): Call
+	_bfd_elf_add_dynamic_tags.
+	* elfnn-ia64.c (elfNN_ia64_hash_table_create): Set
+	root.dt_pltgot_required.
+	(elfNN_ia64_size_dynamic_sections): Set root.dt_jmprel_required
+	for rel_pltoff_sec.  Call _bfd_elf_add_dynamic_tags.
+	* elflink.c (_bfd_elf_add_dynamic_tags): New.
+
+2020-06-22  Saagar Jha  <saagar@saagarjha.com>
+
+	* mach-o.c: Support the new load commands by reading a linkedit
+	data command for them.
+
+2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.c (struct priv_spec_t priv_specs[]): Move them from
+	opcodes/riscv-opc.c to bfd/elfxx-riscv.c, since we need it in linker.
+	(riscv_get_priv_spec_class): Likewise.
+	(riscv_get_priv_spec_name): Likewise.
+	(riscv_get_priv_spec_class_from_numbers): New function, convert
+	the version numbers into string, then call riscv_get_priv_spec_class
+	to get the priv spec class.
+	* elfxx-riscv.h (riscv_get_priv_spec_class): Move forward declaration
+	from include/opcode/riscv.h to bfd/elfxx-riscv.h.
+	(riscv_get_priv_spec_name): Likewise.
+	(riscv_get_priv_spec_class_from_numbers): New forward declaration.
+	(opcode/riscv.h): Include it in the header rather than elfxx-riscv.c.
+	* elfnn-riscv.c (riscv_merge_attributes):  Get the priv spec classes
+	of input and output objects form their priv spec attributes by
+	riscv_get_priv_spec_class_from_numbers.  Report warning rather than
+	errors when linking objects with differnet priv spec versions.  We do
+	know v1.9.1 may have conflicts to other versions, so report the
+	warning, too.  After that, update the output priv spec version to the
+	newest one so far.
+
+2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_merge_attributes): Once we meet one of the
+	priv attributes, we will check the conflicts for all of them (major,
+	minor and revision), and then set the priv_attrs_merged to TRUE to
+	indicate that we have handled all of the priv attributes.  Remove
+	the unused boolean priv_may_conflict, in_priv_zero and out_priv_zero.
+
+2020-06-21  Alan Modra  <amodra@gmail.com>
+
+	PR 26132
+	* configure.ac: Disable plugins by default for some targets.
+	* plugin.c: Comment typo fix.
+	* configure: Regenerate.
+
+2020-06-19  Nick Clifton  <nickc@redhat.com>
+
+	* plugin.c (try_load_plugin): Suppress the error message about
+	being unable to open a plugin if creating a list of viable
+	plugins.
+
+2020-06-16  Alan Modra  <amodra@gmail.com>
+
+	* aout-tic30.c: Delete file.
+	* Makefile.am (BFD32_BACKENDS): Remove aout-tic30.lo.
+	(BFD32_BACKENDS_CFILES): Remove aout-tic30.c.
+	* config.bfd (c30-*-*aout*, tic30-*-*aout*): Remove entry.
+	(xc16x-*-elf): Sort properly.
+	* configure.ac: Remove tic30_aout_vec.
+	* targets.c: Likewise.
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+	* po/SRC-POTFILES.in: Regenerate.
+
+2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* elf32-xtensa.c (XSHAL_ABI, XTHAL_ABI_UNDEFINED)
+	(XTHAL_ABI_WINDOWED, XTHAL_ABI_CALL0): New macros.
+	(elf32xtensa_abi): New global variable.
+	(xtensa_abi_choice): New function.
+	(elf_xtensa_create_plt_entry): Use xtensa_abi_choice instead of
+	XSHAL_ABI to select PLT code.
+
+2020-06-15  Roland McGrath  <mcgrathr@google.com>
+
+	* elflink.c (bfd_elf_define_start_stop): Use start_stop_visibility
+	field of bfd_link_info.
+
+2020-06-15  Alan Modra  <amodra@gmail.com>
+
+	* config.bfd: Obsolete powerpcle-*-pe targets.
+
+2020-06-15  Alan Modra  <amodra@gmail.com>
+
+	PR 26103
+	* elflink.c (elf_link_add_archive_symbols): Exclude undefined
+	symbols that were defined in discarded sections.
+	* cofflink.c (coff_link_check_archive_element): Likewise.
+	(coff_link_add_symbols): Set indx to -3 for symbols defined in
+	discarded sections.
+	(_bfd_coff_write_global_sym): Don't emit such symbols.
+	libcoff-in.h (struct coff_link_hash_entry): Update indx comment.
+	libcoff.h: Regenerate.
+
+2020-06-11  Alan Modra  <amodra@gmail.com>
+
+	PR 26107
+	* pdp11.c (is_stab): Replace legacy "index" function with "strchr".
+
+2020-06-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfnn-ia64.c (elfNN_ia64_link_hash_table): Remove reltext.
+	(allocate_dynrel_entries): Set DF_TEXTREL instead of reltext.
+	(elfNN_ia64_size_dynamic_sections): Check DF_TEXTREL instead
+	of reltext.
+
+2020-06-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26094
+	* elflink.c (bfd_elf_define_start_stop): Handle common symbols.
+	Clear verinfo.verdef.
+
+2020-06-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/18801
+	* elf-bfd.h (elf_link_hash_table): Add ifunc_resolvers.
+	(_bfd_elf_allocate_ifunc_dyn_relocs): Remove the
+	bfd_boolean * argument.  Set ifunc_resolvers if there are IFUNC
+	resolvers.
+	* elf-ifunc.c (_bfd_elf_allocate_ifunc_dyn_relocs): Updated.
+	Set ifunc_resolvers if there are FUNC resolvers.
+	* elf64-ppc.c (ppc_link_hash_table): Remove local_ifunc_resolver.
+	(build_global_entry_stubs_and_plt): Replace local_ifunc_resolver
+	with elf.ifunc_resolvers.
+	(write_plt_relocs_for_local_syms): Likewise.
+	(ppc64_elf_relocate_section): Likewise.
+	(ppc64_elf_finish_dynamic_sections): Likewise.
+	* elfnn-aarch64.c (elfNN_aarch64_allocate_ifunc_dynrelocs):
+	Updated.
+	* elfxx-x86.c (elf_x86_allocate_dynrelocs): Likewise.
+	(_bfd_x86_elf_size_dynamic_sections): Check elf.ifunc_resolvers
+	instead of readonly_dynrelocs_against_ifunc.
+	* elfxx-x86.h (elf_x86_link_hash_table): Remove
+	readonly_dynrelocs_against_ifunc.
+
+2020-06-09  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (struct ppc_link_hash_table): Delete
+	maybe_local_ifunc_resolver field.
+	(build_global_entry_stubs_and_plt): Set local_ifunc_resolver in
+	cases where maybe_local_ifunc_resolver was set.
+	(ppc64_elf_relocate_section): Likewise.
+	(ppc64_elf_finish_dynamic_sections): Downgrade ifunc with textrel
+	error to a warning.
+
+2020-06-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-bfd.h (elf_link_hash_entry): Add tlsdesc_plt and
+	tlsdesc_got.
+	* elf32-arm.c (elf32_arm_link_hash_table): Remove tlsdesc_plt
+	and dt_tlsdesc_got.
+	(elf32_arm_size_dynamic_sections): Updated.  Clear
+	root.tlsdesc_plt for DF_BIND_NOW.
+	(elf32_arm_finish_dynamic_sections): Updated.
+	(elf32_arm_output_arch_local_syms): Likewise.
+	* elf32-nds32.c (nds32_elf_size_dynamic_sections): Updated.
+	Clear root.tlsdesc_plt for DF_BIND_NOW.
+	(nds32_elf_finish_dynamic_sections): Updated.
+	* elf32-nds32.h (elf_nds32_link_hash_table): Remove
+	dt_tlsdesc_plt and dt_tlsdesc_got.
+	* elf64-x86-64.c (elf_x86_64_finish_dynamic_sections): Updated.
+	* elfnn-aarch64.c (elf_aarch64_link_hash_table): Remove
+	tlsdesc_plt and dt_tlsdesc_got.
+	(elfNN_aarch64_allocate_dynrelocs): Updated.
+	(elfNN_aarch64_finish_dynamic_sections): Likewise.
+	(elfNN_aarch64_size_dynamic_sections): Updated.  Clear
+	root.tlsdesc_plt for DF_BIND_NOW.  Don't check DF_BIND_NOW
+	twice.
+	* elfxx-x86.c (elf_x86_allocate_dynrelocs): Updated.
+	(_bfd_x86_elf_size_dynamic_sections): Likewise.
+	(_bfd_x86_elf_finish_dynamic_sections): Likewise.
+	* elfxx-x86.h (elf_x86_link_hash_table): Remove tlsdesc_plt and
+	tlsdesc_got.
+
+2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf32-tic6x.c (elf32_bed): Defined the default to
+	elf32_tic6x_bed.
+
+2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf64-hppa.c (elf64_hppa_link_hash_table): Remove plt_sec and
+	plt_rel_sec.
+	(elf64_hppa_check_relocs): Replace plt_sec/plt_rel_sec with
+	root.splt/root.srelplt.
+	(elf64_hppa_create_dynamic_sections): Likewise.
+	(elf64_hppa_size_dynamic_sections): Likewise.
+	(elf64_hppa_finish_dynamic_symbol): Likewise.
+	(elf_hppa_final_link): Likewise.
+	(elf_hppa_final_link_relocate): Likewise.
+
+2020-06-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfxx-sparc.c (_bfd_sparc_elf_size_dynamic_sections): Updated.
+	* elfxx-sparc.h (_bfd_sparc_elf_link_hash_table): Remove
+	is_vxworks.
+
+2020-06-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-bfd.h (elf_target_os): New.
+	(elf_link_hash_table): Add target_os.
+	(elf_backend_data): Add target_os.
+	* elf32-arm.c (elf32_arm_link_hash_table): Remove vxworks_p,
+	symbian_p and nacl_p.
+	(create_got_section): Updated.
+	(elf32_arm_create_dynamic_sections): Likewise.
+	(arm_type_of_stub): Likewise.
+	(elf32_arm_create_or_find_stub_sec): Likewise.
+	(elf32_arm_allocate_plt_entry): Likewise.
+	(elf32_arm_populate_plt_entry): Likewise.
+	(elf32_arm_final_link_relocate): Likewise.
+	(elf32_arm_check_relocs): Likewise.
+	(allocate_dynrelocs_for_symbol): Likewise.
+	(elf32_arm_finish_dynamic_symbol): Likewise.
+	(elf32_arm_finish_dynamic_sections): Likewise.
+	(elf32_arm_output_plt_map_1): Likewise.
+	(elf32_arm_output_arch_local_syms): Likewise.
+	(elf32_arm_add_symbol_hook): Likewise.
+	(elf32_arm_nacl_link_hash_table_create): Likewise.
+	(elf32_arm_vxworks_link_hash_table_create): Likewise.
+	(elf32_arm_symbian_link_hash_table_create): Likewise.
+	(ELF_TARGET_OS): New.
+	* elf32-i386.c (elf_i386_arch_bed): Removed.
+	(elf_backend_arch_data): Likewise.
+	(elf_i386_solaris_arch_bed): Likewise.
+	(elf_i386_nacl_arch_bed): Likewise.
+	(elf_i386_vxworks_arch_bed): Likewise.
+	(elf_i386_relocate_section): Updated.
+	(elf_i386_finish_dynamic_sections): Likewise.
+	(elf_i386_get_synthetic_symtab): Likewise.
+	(elf_i386_link_setup_gnu_properties): Likewise.
+	(ELF_TARGET_OS): New.
+	* elf32-mips.c (ELF_TARGET_OS): New.
+	* elf32-ppc.c (ppc_elf_link_hash_table): Remove is_vxworks.
+	(ppc_elf_create_got): Updated.
+	(ppc_elf_create_dynamic_sections): Likewise.
+	(ppc_elf_check_relocs): Likewise.
+	(ppc_elf_adjust_dynamic_symbol): Likewise.
+	(ppc_elf_size_dynamic_sections): Likewise.
+	(ppc_elf_relocate_section): Likewise.
+	(ppc_elf_finish_dynamic_sections): Likewise.
+	(ppc_elf_vxworks_link_hash_table_create): Likewise.
+	(ELF_TARGET_OS): New.
+	* elf32-sh.c (elf_sh_link_hash_table): Remove vxworks_p.
+	(sh_elf_link_hash_table_create): Updated.
+	(sh_elf_create_dynamic_sections): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(sh_elf_size_dynamic_sections): Likewise.
+	(sh_elf_relocate_section): Likewise.
+	(sh_elf_finish_dynamic_symbol): Likewise.
+	(sh_elf_finish_dynamic_sections): Likewise.
+	(ELF_TARGET_OS): New.
+	* elf32-sparc.c (elf32_sparc_vxworks_link_hash_table_create):
+	Removed.
+	(bfd_elf32_bfd_link_hash_table_create): Likewise.
+	(ELF_TARGET_OS): New.
+	* elf64-x86-64.c (elf_x86_64_arch_bed): Removed.
+	(elf_x86_64_solaris_arch_bed): Likewise.
+	(elf_x86_64_nacl_arch_bed): Likewise.
+	(elf_x86_64_finish_dynamic_sections): Updated.
+	(elf_x86_64_get_synthetic_symtab): Likewise.
+	(elf_x86_64_link_setup_gnu_properties): Likewise.
+	(ELF_TARGET_OS): New.
+	* elflink.c (_bfd_elf_link_hash_table_init): Initialize
+	target_o.
+	* elfxx-mips.c (mips_elf_link_hash_table): Remove is_vxworks.
+	(MIPS_ELF_REL_DYN_NAME): Updated.
+	(ELF_MIPS_GP_OFFSET): Likewise.
+	(mips_elf_create_local_got_entry): Likewise.
+	(mips_elf_allocate_dynamic_relocations): Likewise.
+	(mips_elf_count_got_symbols): Likewise.
+	(is_gott_symbol): Likewise.
+	(mips_elf_calculate_relocation): Likewise.
+	(mips_elf_create_dynamic_relocation): Likewise.
+	(_bfd_mips_elf_check_relocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(_bfd_mips_elf_adjust_dynamic_symbol): Likewise.
+	(mips_elf_lay_out_got): Likewise.
+	(mips_elf_set_plt_sym_value): Likewise.
+	(_bfd_mips_elf_size_dynamic_sections): Likewise.
+	(_bfd_mips_elf_finish_dynamic_symbol): Likewise.
+	(_bfd_mips_elf_finish_dynamic_sections): Likewise.
+	(_bfd_mips_elf_final_link): Likewise.
+	(_bfd_mips_init_file_header): Likewise.
+	* elfxx-sparc.c (_bfd_sparc_elf_create_dynamic_sections):
+	Likewise.
+	(allocate_dynrelocs): Likewise.
+	(_bfd_sparc_elf_size_dynamic_sections): Likewise.
+	(_bfd_sparc_elf_relocate_section): Likewise.
+	(_bfd_sparc_elf_finish_dynamic_symbol): Likewise.
+	(sparc_finish_dyn): Likewise.
+	(_bfd_sparc_elf_finish_dynamic_sections): Likewise.
+	* elfxx-target.h (ELF_TARGET_OS): New.
+	(elfNN_bed): Add ELF_TARGET_OS.
+	* elfxx-x86.c (elf_x86_allocate_dynrelocs): Updated.
+	(_bfd_x86_elf_link_hash_table_create): Likewise.
+	(_bfd_x86_elf_size_dynamic_sections): Likewise.
+	(_bfd_x86_elf_finish_dynamic_sections): Likewise.
+	(_bfd_x86_elf_adjust_dynamic_symbol): Likewise.
+	(_bfd_x86_elf_link_setup_gnu_properties): Likewise.
+	* elfxx-x86.h (elf_x86_target_os): Removed.
+	(elf_x86_backend_data): Likewise.
+	(get_elf_x86_backend_data): Likewise.
+	(elf_x86_link_hash_table): Remove target_os.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* reloc.c: Rename
+	BFD_RELOC_PPC64_GOT_TLSGD34 to BFD_RELOC_PPC64_GOT_TLSGD_PCREL34,
+	BFD_RELOC_PPC64_GOT_TLSLD34 to BFD_RELOC_PPC64_GOT_TLSLD_PCREL34,
+	BFD_RELOC_PPC64_GOT_TPREL34 to BFD_RELOC_PPC64_GOT_TPREL_PCREL34,
+	BFD_RELOC_PPC64_GOT_DTPREL34 to BFD_RELOC_PPC64_GOT_DTPREL_PCREL34.
+	* elf64-ppc.c: Update throughout for reloc renaming.
+	(ppc64_elf_reloc_name_lookup): Handle old reloc names.
+	* libbfd.h: Regenerate.
+	* bfd-in2.h: Regenerate.
+
+2020-06-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26080
+	* elf32-bfin.c (bfinfdpic_relocate_section): Skip non SEC_ALLOC
+	section.
+
+2020-06-05  Nick Clifton  <nickc@redhat.com>
+
+	* pdp11.c (aout_link_add_symbols): Fix use before initialisation
+	bug.
+
+2020-06-05  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (riscv_merge_attributes): Add new boolean
+	priv_may_conflict, in_priv_zero and out_priv_zero to decide
+	whether the object can be linked according to it's priv
+	attributes.  The object without any priv spec attributes can
+	be linked with others.  If the first input object doesn't contain
+	any priv attributes, then we need to copy the setting from the
+	next input one.  Also report more detailed error messages to user.
+
+2020-06-04  Stephen Casner  <casner@acm.org>
+
+	Extend pdp11-aout symbol table format to accommodate .stab
+	symbols and implement correct handling of them.
+
+	* pdp11.c (pdp11_external_nlist): Repurposed e_unused to e_desc.
+	(N_STAB, is_stab): Needed new function is_stab to disambiguate
+	normal vs. .stab symbol table type values, replacing N_STAB mask.
+	(translate_from_native_sym_flags): Determine correct section for
+	different .stab types.
+	(translate_to_native_sym_flags): Leave .stab types intact.
+	(translate_symbol_table): Error if symbol indicates overlay;
+	store desc field from .stab symbols.
+	(write_syms): Output desc field with symbol.
+	(aout_link_check_ar_symbols): Skip .stab symbols.
+	(aout_link_add_symbols): Correctly distinguish .stab symbols.
+	(aout_link_write_other_symbol): Write 0 for desk and ovly fields.
+	(aout_link_write_symbols): Write 0 for desk and ovly fields;
+	correctly distinguish .stab symbols and select calculate their
+	section and value; and copy desc and ovly fields from input symbol
+	to output symbol.
+
+2020-06-04  Stephen Casner  <casner@acm.org>
+
+	* aoutx.h (translate_symbol_table): Comment had external and
+	internal swapped.
+	* pdp11.c (translate_symbol_table): Likewise.
+
+2020-06-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfxx-x86.h (elf_x86_link_hash_table): Remove target_id.
+	(is_x86_elf): Check elf.hash_table_id instead of target_id.
+	* elfxx-x86.c (_bfd_x86_elf_link_hash_table_create): Updated.
+
+2020-06-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26080
+	* elf-m10300.c (mn10300_elf_relocate_section): Resolve relocation
+	in debug section against symbol defined in shared library to 0.
+	* elf32-i386.c (elf_i386_check_relocs): Remove SEC_ALLOC check.
+	* elf32-lm32.c (lm32_elf_check_relocs): Likewise.
+	* elf32-m32r.c (m32r_elf_check_relocs): Likewise.
+	* elf32-nds32.c (nds32_elf_check_relocs): Likewise.
+	* elf32-nios2.c (nios2_elf32_check_relocs): Likewise.
+	* elf32-or1k.c (or1k_elf_check_relocs): Likewise.
+	* elf32-ppc.c (ppc_elf_check_relocs): Likewise.
+	* elf32-sh.c (sh_elf_check_relocs): Likewise.
+	* elf32-xtensa.c (elf_xtensa_check_relocs): Likewise.
+	* elf64-alpha.c (elf64_alpha_check_relocs): Likewise.
+	* elf64-ppc.c (ppc64_elf_check_relocs): Likewise.
+	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
+	* elfxx-mips.c (_bfd_mips_elf_check_relocs): Likewise.
+	* elf32-vax.c (elf_vax_check_relocs): Set non_got_ref for non-GOT
+	reference.
+	(elf_vax_adjust_dynamic_symbol): Generate a copy reloc only if
+	there is non-GOT reference.
+	* elflink.c (_bfd_elf_link_check_relocs): Skip non-loaded,
+	non-alloced sections.
+
+2020-06-03  Stephen Casner  <casner@acm.org>
+
+	Copy several years of fixes from bfd/aoutx.h to bfd/pdp11.c.
+
+	* pdp11.c (some_aout_object_p): 4c1534c7a2a - Don't set EXEC_P for
+	files with relocs.
+	(aout_get_external_symbols): 6b8f0fd579d - Return if count is zero.
+	0301ce1486b PR 22306 - Handle stringsize of zero, and error for any
+	other size that doesn't qcover the header word.
+	bf82069dce1 PR 23056 - Allocate an extra byte at the end of the
+	string table, and zero it.
+	(translate_symbol_table): 0d329c0a83a PR 22887 - Print an error
+	message and set bfd_error on finding an invalid name string offset.
+	(add_to_stringtab): INLINE -> inline
+	(pdp11_aout_swap_reloc_in): 116acb2c268 PR 22887 - Correct r_index
+	bound check.
+	(squirt_out_relocs): e2996cc315d PR 20921 - Check for and report
+	any relocs that could not be recognised.
+	92744f05809 PR 20929 - Check for relocs	without an associated symbol.
+	(find_nearest_line):  808346fcfcf PR 23055 - Check that the symbol
+	name exists and is long enough, before attempting to see if it is
+	for a .o file.
+	c3864421222 - Correct case for N_SO being the last symbol.
+	50455f1ab29 PR 20891 - Handle the case where the main file name
+	and the directory name are both empty.
+	e82ab856bb4 PR 20892 - Handle the case where function name is empty.
+	(aout_link_add_symbols): e517df3dbf7 PR 19629 - Check for out of
+	range string table offsets.
+	531336e3a0b PR 20909 - Fix off-by-one error in check for an
+	illegal string offset.
+	(aout_link_includes_newfunc): Add comment.
+	(pdp11_aout_link_input_section): ad756e3f9e6 - Return with an error
+	on unexpected relocation type rather than ASSERT.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26066
+	* elf32-nios2.c (nios2_elf32_size_dynamic_sections): Call
+	_bfd_elf_maybe_set_textrel to set DF_TEXTREL.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26066
+	* elf32-nios2.c (nios2_elf32_check_relocs): Skip non-loaded,
+	non-alloced sections.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf32-frv.c (elf32_frv_relocate_section): Don't generate
+	dynamic relocations for non SEC_ALLOC sections.
+
+2020-06-03  Gunther Nikl  <gnikl@justmail.de>
+
+	* aout64.c (BMAGIC, QMAGIC): Do not define.
+	* aoutx.h (N_IS_BMAGIC, N_SET_QMAGIC): New defines.
+	(NAME (aout, some_aout_object_p)): Use N_IS_QMAGIC and N_IS_BMAGIC
+	to check the file format.
+	(adjust_z_magic): Use N_SET_QMAGIC to set file format.
+	* i386aout.c (NO_WRITE_HEADER_KLUDGE): Delete define.
+	* libaout.h (NO_WRITE_HEADER_KLUDGE): Do not define.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf32-arc.c (elf_arc_relocate_section): Don't generate dynamic
+	relocations for non SEC_ALLOC sections.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf-bfd.h (_bfd_elf_maybe_set_textrel): New
+	* elf32-arm.c (maybe_set_textrel): Removed.
+	(elf32_arm_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-csky.c (maybe_set_textrel): Removed.
+	(csky_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-hppa.c (maybe_set_textrel): Removed.
+	(elf32_hppa_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-lm32.c (maybe_set_textrel): Removed.
+	(lm32_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-m32r.c (maybe_set_textrel): Removed.
+	(m32r_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-metag.c (maybe_set_textrel): Removed.
+	(elf_metag_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-nds32.c (maybe_set_textrel): Removed.
+	(nds32_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-or1k.c (maybe_set_textrel): Removed.
+	(or1k_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-ppc.c (maybe_set_textrel): Removed.
+	(ppc_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-s390.c (maybe_set_textrel): Removed.
+	(elf_s390_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-sh.c (maybe_set_textrel): Removed.
+	(sh_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-tic6x.c (maybe_set_textrel): Removed.
+	(elf32_tic6x_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf32-tilepro.c (maybe_set_textrel): Removed.
+	(tilepro_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf64-ppc.c (maybe_set_textrel): Removed.
+	(ppc64_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elf64-s390.c (maybe_set_textrel): Removed.
+	(elf_s390_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elfnn-aarch64.c (maybe_set_textrel): Removed.
+	(elfNN_aarch64_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elfnn-riscv.c (maybe_set_textrel): Removed.
+	(riscv_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elfxx-sparc.c (maybe_set_textrel): Removed.
+	(_bfd_sparc_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elfxx-tilegx.c (maybe_set_textrel): Removed.
+	(tilegx_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elfxx-x86.c (maybe_set_textrel): Removed.
+	(_bfd_x86_elf_size_dynamic_sections): Replace maybe_set_textrel
+	with _bfd_elf_maybe_set_textrel.
+	* elflink.c (_bfd_elf_maybe_set_textrel): New.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26067
+	* elf32-arm.c (elf32_arm_copy_indirect_symbol): Don't copy
+	dyn_relocs.
+	* elf32-csky.c (csky_elf_copy_indirect_symbol): Likewise.
+	* elf32-hppa.c (elf32_hppa_copy_indirect_symbol): Likewise.
+	* elf32-metag.c (elf_metag_copy_indirect_symbol): Likewise.
+	* elf32-microblaze.c (microblaze_elf_copy_indirect_symbol):
+	Likewise.
+	* elf32-nds32.c (nds32_elf_copy_indirect_symbol): Likewise.
+	* elf32-nios2.c (nios2_elf32_copy_indirect_symbol): Likewise.
+	* elf32-or1k.c (or1k_elf_copy_indirect_symbol): Likewise.
+	* elf32-s390.c (elf_s390_copy_indirect_symbol): Likewise.
+	* elf32-sh.c (sh_elf_copy_indirect_symbol): Likewise.
+	* elf32-tilepro.c (tilepro_elf_copy_indirect_symbol): Likewise.
+	* elf64-s390.c (elf_s390_copy_indirect_symbol): Likewise.
+	* elfnn-aarch64.c (elfNN_aarch64_copy_indirect_symbol): Likewise.
+	* elfnn-riscv.c (riscv_elf_copy_indirect_symbol): Likewise.
+	* elfxx-sparc.c (_bfd_sparc_elf_copy_indirect_symbol): Likewise.
+	* elfxx-tilegx.c (tilegx_elf_copy_indirect_symbol): Likewise.
+	* elfxx-x86.c (_bfd_x86_elf_copy_indirect_symbol): Likewise.
+	* elf32-lm32.c (lm32_elf_copy_indirect_symbol): Removed.
+	(elf_backend_copy_indirect_symbol): Likewise.
+	* elf32-m32r.c (m32r_elf_copy_indirect_symbol): Removed.
+	(elf_backend_copy_indirect_symbol): Likewise.
+	* elflink.c (_bfd_elf_link_hash_copy_indirect): Copy dyn_relocs.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26067
+	* elf-bfd.h (_bfd_elf_readonly_dynrelocs): New.
+	* elf32-arm.c (readonly_dynrelocs): Removed.
+	(maybe_set_textrel): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	* elf32-csky.c (readonly_dynrelocs): Removed.
+	(maybe_set_textrel): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	*  elf32-hppa.c(readonly_dynrelocs): Removed.
+	(alias_readonly_dynrelocs): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elf32-lm32.c (readonly_dynrelocs): Removed.
+	(lm32_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elf32-m32r.c (readonly_dynrelocs): Removed.
+	(m32r_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elf32-metag.c (readonly_dynrelocs): Removed.
+	(elf_metag_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elf32-microblaze.c (readonly_dynrelocs): Removed.
+	(microblaze_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	* elf32-nds32.c (readonly_dynrelocs): Removed.
+	(nds32_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elf32-or1k.c (readonly_dynrelocs): Removed.
+	(or1k_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	* elf32-ppc.c (readonly_dynrelocs): Removed.
+	(alias_readonly_dynrelocs): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	(ppc_elf_adjust_dynamic_symbol): Likewise.
+	(maybe_set_textrel): Likewise.
+	* elf32-s390.c (readonly_dynrelocs): Removed.
+	(elf_s390_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elf32-sh.c (readonly_dynrelocs): Removed.
+	(sh_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elf32-tic6x.c (readonly_dynrelocs): Removed.
+	(maybe_set_textrel): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	* elf32-tilepro.c (readonly_dynrelocs): Removed.
+	(tilepro_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elf64-ppc.c (readonly_dynrelocs): Removed.
+	(alias_readonly_dynrelocs): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	(ppc64_elf_adjust_dynamic_symbol): Likewise.
+	(maybe_set_textrel): Likewise.
+	* elf64-s390.c (readonly_dynrelocs): Removed.
+	(elf_s390_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elflink.c (_bfd_elf_readonly_dynrelocs): New.
+	* elfnn-aarch64.c (readonly_dynrelocs): Removed.
+	(maybe_set_textrel): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	* elfnn-riscv.c (readonly_dynrelocs): Removed.
+	(riscv_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elfxx-sparc.c (readonly_dynrelocs): Removed.
+	(_bfd_sparc_elf_adjust_dynamic_symbol): Replace
+	readonly_dynrelocs with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elfxx-tilegx.c (readonly_dynrelocs): Removed.
+	(tilegx_elf_adjust_dynamic_symbol): Replace readonly_dynrelocs
+	with _bfd_elf_readonly_dynrelocs.
+	(maybe_set_textrel): Likewise.
+	* elfxx-x86.c (readonly_dynrelocs): Removed.
+	(maybe_set_textrel): Replace readonly_dynrelocs with
+	_bfd_elf_readonly_dynrelocs.
+	(_bfd_x86_elf_adjust_dynamic_symbol): Likewise.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfxx-x86.h (GENERATE_DYNAMIC_RELOCATION_P): Silence
+	-fsanitize=undefined.
+
+2020-06-03  Alan Modra  <amodra@gmail.com>
+
+	PR 26069
+	PR 18758
+	* peicode.h (pe_ILF_make_a_section): Align data for compilers
+	other than gcc.
+	(pe_ILF_build_a_bfd): Likewise.
+
+2020-06-03  Alan Modra  <amodra@gmail.com>
+
+	PR 26069
+	* elf.c (_bfd_elf_close_and_cleanup): Free elf_shstrtab for
+	core files as well as objects.
+
+2020-06-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26067
+	* elf-bfd.h (elf_link_hash_entry): Add dyn_relocs after size.
+	* elf-s390-common.c (s390_elf_allocate_ifunc_dyn_relocs):
+	Updated.
+	* elf32-arc.c (elf_arc_link_hash_entry): Remove dyn_relocs.
+	(elf_arc_link_hash_newfunc): Updated.
+	* elf32-arm.c (elf32_arm_link_hash_entry): Remove dyn_relocs.
+	(elf32_arm_link_hash_newfunc): Updated.
+	(elf32_arm_copy_indirect_symbol): Likewise.
+	(elf32_arm_check_relocs): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs_for_symbol): Likewise.
+	* elf32-csky.c (csky_elf_link_hash_entry): Remove dyn_relocs.
+	(csky_elf_link_hash_newfunc): Updated.
+	(csky_allocate_dynrelocs): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(csky_elf_copy_indirect_symbol): Likewise.
+	* elf32-hppa.c (elf32_hppa_link_hash_entry): Remove dyn_relocs.
+	(hppa_link_hash_newfunc): Updated.
+	(elf32_hppa_copy_indirect_symbol): Likewise.
+	(elf32_hppa_hide_symbol): Likewise.
+	(elf32_hppa_adjust_dynamic_symbol): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(elf32_hppa_relocate_section): Likewise.
+	* elf32-i386.c (elf_i386_check_relocs): Likewise.
+	* elf32-lm32.c (elf_lm32_link_hash_entry): Removed.
+	(lm32_elf_link_hash_newfunc): Likewise.
+	(lm32_elf_link_hash_table_create): Updated.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(lm32_elf_copy_indirect_symbol): Likewise.
+	* elf32-m32r.c (elf_m32r_link_hash_entry): Removed.
+	(m32r_elf_link_hash_newfunc): Likewise.
+	(m32r_elf_link_hash_table_create): Updated.
+	(m32r_elf_copy_indirect_symbol): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elf32-metag.c (elf_metag_link_hash_entry): Remove dyn_relocs.
+	(metag_link_hash_newfunc): Updated.
+	(elf_metag_copy_indirect_symbol): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elf32-microblaze.c (elf32_mb_link_hash_entry): Remove
+	dyn_relocs.
+	(link_hash_newfunc): Updated.
+	(microblaze_elf_check_relocs): Likewise.
+	(microblaze_elf_copy_indirect_symbol): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elf32-nds32.c (elf_nds32_link_hash_entry): Remove dyn_relocs.
+	(nds32_elf_link_hash_newfunc): Updated.
+	(nds32_elf_copy_indirect_symbol): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(nds32_elf_check_relocs): Likewise.
+	* elf32-nios2.c (elf32_nios2_link_hash_entry): Remove dyn_relocs.
+	(link_hash_newfunc): Updated.
+	(nios2_elf32_copy_indirect_symbol): Likewise.
+	(nios2_elf32_check_relocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elf32-or1k.c (elf_or1k_link_hash_entry): Remove dyn_relocs.
+	(or1k_elf_link_hash_newfunc): Updated.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(or1k_elf_copy_indirect_symbol): Likewise.
+	* elf32-ppc.c (ppc_elf_link_hash_entry): Remove dyn_relocs.
+	(ppc_elf_link_hash_newfunc): Updated.
+	(ppc_elf_copy_indirect_symbol): Likewise.
+	(ppc_elf_check_relocs): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(ppc_elf_adjust_dynamic_symbol): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(ppc_elf_relocate_section): Likewise.
+	* elf32-s390.c (elf_s390_link_hash_entry): Remove dyn_relocs.
+	(link_hash_newfunc): Updated.
+	(elf_s390_copy_indirect_symbol): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(elf_s390_adjust_dynamic_symbol): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elf32-sh.c (elf_sh_link_hash_entry): Remove dyn_relocs.
+	(sh_elf_link_hash_newfunc): Updated.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(sh_elf_copy_indirect_symbol): Likewise.
+	(sh_elf_check_relocs): Likewise.
+	* elf32-tic6x.c (elf32_tic6x_link_hash_entry): Removed.
+	(elf32_tic6x_link_hash_newfunc): Likewise.
+	(elf32_tic6x_link_hash_table_create): Updated.
+	(readonly_dynrelocs): Likewise.
+	(elf32_tic6x_check_relocs): Likewise.
+	(elf32_tic6x_allocate_dynrelocs): Likewise.
+	* elf32-tilepro.c (tilepro_elf_link_hash_entry): Remove
+	dyn_relocs.
+	(link_hash_newfunc): Updated.
+	(tilepro_elf_copy_indirect_symbol): Likewise.
+	(tilepro_elf_check_relocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elf64-ppc.c (ppc_link_hash_entry): Remove dyn_relocs.
+	(ppc64_elf_copy_indirect_symbol): Updated.
+	(ppc64_elf_check_relocs): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(ppc64_elf_adjust_dynamic_symbol): Likewise.
+	(dec_dynrel_count): Likewise.
+	(allocate_dynrelocs): Likewise.
+	(ppc64_elf_relocate_section): Likewise.
+	* elf64-s390.c (elf_s390_link_hash_entry): Remove dyn_relocs.
+	(link_hash_newfunc): Updated.
+	(elf_s390_copy_indirect_symbol): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
+	* elfnn-aarch64.c (elf_aarch64_link_hash_entry): Remove
+	dyn_relocs.
+	(elfNN_aarch64_link_hash_newfunc): Updated.
+	(elfNN_aarch64_copy_indirect_symbol): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(need_copy_relocation_p): Likewise.
+	(elfNN_aarch64_allocate_dynrelocs): Likewise.
+	(elfNN_aarch64_allocate_ifunc_dynrelocs): Likewise.
+	* elfnn-riscv.c (riscv_elf_link_hash_entry): Remove dyn_relocs.
+	(link_hash_newfunc): Updated.
+	(riscv_elf_copy_indirect_symbol): Likewise.
+	(riscv_elf_check_relocs): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elfxx-sparc.c (_bfd_sparc_elf_link_hash_entry): Remove
+	dyn_relocs.
+	(link_hash_newfunc): Updated.
+	(_bfd_sparc_elf_copy_indirect_symbol): Likewise.
+	(_bfd_sparc_elf_check_relocs): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elfxx-tilegx.c (tilegx_elf_link_hash_entry): Remove dyn_relocs.
+	(link_hash_newfunc): Updated.
+	(tilegx_elf_copy_indirect_symbol): Likewise.
+	(tilegx_elf_check_relocs): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(allocate_dynrelocs): Likewise.
+	* elfxx-x86.c (elf_x86_allocate_dynrelocs): Likewise.
+	(readonly_dynrelocs): Likewise.
+	(_bfd_x86_elf_copy_indirect_symbol): Likewise.
+	* elfxx-x86.h (elf_x86_link_hash_entry): Remove dyn_relocs.
+
+2020-06-01  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_slurp_etir): Check bound for the current
+	command against cmd_length, not the end of record.  For
+	ETIR__C_STO_IMMR check size against cmd_length, mask repeat count
+	to 32-bits and break out on zero size.  Add ETIR__C_STC_LP_PSB
+	cmd_length test.
+
+2020-05-28  David Faust  <david.faust@oracle.com>
+
+	* elf64-bpf.c (bpf_elf_relocate_section): Fix handling of
+	R_BPF_INSN_{32,64} relocations.
+
+2020-05-28  Stephen Casner  <casner@acm.org>
+
+	* pdp11.c: Implement BRD_RELOC_32 to relocate the low 16 bits of
+	addreses in .long (used in testsuites) and .stab values.
+
+2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/22909
+	* elflink.c (bfd_elf_final_link): Use bfd_link_textrel_check.
+	Check bfd_link_dll when issue a DT_TEXTREL warning.
+	* elfxx-x86.c (maybe_set_textrel): Likewise.
+	(_bfd_x86_elf_size_dynamic_sections): Likewise.
+
+2020-05-26  Nick Clifton  <nickc@redhat.com>
+
+	* plugin.c (try_load_plugin): Extend error message when a plugin
+	fails to open.
+
+2020-05-23  Alan Modra  <amodra@gmail.com>
+
+	* bfdio.c (bfd_get_file_size): Don't segfault on NULL arch_header.
+
+2020-05-22  Alan Modra  <amodra@gmail.com>
+
+	PR 25882
+	* elf32-ppc.c (_bfd_elf_ppc_merge_fp_attributes): Don't init FP
+	attributes from shared libraries, and do not return an error if
+	they don't match.
+
+2020-05-21  Alan Modra  <amodra@gmail.com>
+
+	PR 25993
+	* opncls.c (_bfd_free_cached_info): Keep a copy of the bfd
+	filename.
+	(_bfd_delete_bfd): Free the copy.
+	(_bfd_new_bfd): Free nbfd->memory on error.
+
+2020-05-21  Alan Modra  <amodra@gmail.com>
+
+	* aoutx.h: Replace "if (x) free (x)" with "free (x)" throughout.
+	* archive.c, * bfd.c, * bfdio.c, * coff-alpha.c, * coff-ppc.c,
+	* coff-sh.c, * coff-stgo32.c, * coffcode.h, * coffgen.c,
+	* cofflink.c, * cpu-arm.c, * doc/chew.c, * dwarf2.c, * ecoff.c,
+	* ecofflink.c, * elf-eh-frame.c, * elf-m10200.c, * elf-m10300.c,
+	* elf-strtab.c, * elf.c, * elf32-arc.c, * elf32-arm.c,
+	* elf32-avr.c, * elf32-bfin.c, * elf32-cr16.c, * elf32-crx.c,
+	* elf32-epiphany.c, * elf32-ft32.c, * elf32-h8300.c,
+	* elf32-ip2k.c, * elf32-m32c.c, * elf32-m68hc11.c,
+	* elf32-m68k.c, * elf32-microblaze.c, * elf32-msp430.c,
+	* elf32-nds32.c, * elf32-nios2.c, * elf32-ppc.c, * elf32-pru.c,
+	* elf32-rl78.c, * elf32-rx.c, * elf32-sh.c, * elf32-spu.c,
+	* elf32-v850.c, * elf32-xtensa.c, * elf64-alpha.c,
+	* elf64-hppa.c, * elf64-ia64-vms.c, * elf64-mips.c
+	* elf64-mmix.c, * elf64-ppc.c, * elf64-sparc.c, * elfcode.h,
+	* elflink.c, * elfnn-ia64.c, * elfnn-riscv.c, * elfxx-mips.c,
+	* elfxx-x86.c, * format.c, * ihex.c, * libbfd.c, * linker.c,
+	* mmo.c, * opncls.c, * pdp11.c, * peXXigen.c, * pef.c,
+	* peicode.h, * simple.c, * som.c, * srec.c, * stabs.c, * syms.c,
+	* targets.c, * vms-lib.c, * xcofflink.c, * xtensa-isa.c: Likewise.
+
+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfxx-riscv.h (riscv_parse_subset_t): Add new callback function
+	get_default_version.  It is used to find the default version for
+	the specific extension.
+	* elfxx-riscv.c (riscv_parsing_subset_version): Remove the parameters
+	default_major_version and default_minor_version.  Add new bfd_boolean
+	parameter *use_default_version.  Set it to TRUE if we need to call
+	the callback rps->get_default_version to find the default version.
+	(riscv_parse_std_ext): Call rps->get_default_version if we fail to find
+	the default version in riscv_parsing_subset_version, and then call
+	riscv_add_subset to add the subset into subset list.
+	(riscv_parse_prefixed_ext): Likewise.
+	(riscv_std_z_ext_strtab): Support Zicsr extensions.
+	* elfnn-riscv.c (riscv_merge_std_ext): Use strcasecmp to compare the
+	strings rather than characters.
+	riscv_merge_arch_attr_info): The callback function get_default_version
+	is only needed for assembler, so set it to NULL int the linker.
+	* elfxx-riscv.c (riscv_estimate_digit): Remove the static.
+	* elfxx-riscv.h: Updated.
+
+2020-05-20  Alan Modra  <amodra@gmail.com>
+
+	PR 25993
+	* archive.c (_bfd_get_elt_at_filepos): Don't strdup filename,
+	use bfd_set_filename.
+	* elfcode.h (_bfd_elf_bfd_from_remote_memory): Likewise.
+	* mach-o.c (bfd_mach_o_fat_member_init): Likewise.
+	* opncls.c (bfd_fopen, bfd_openstreamr, bfd_openr_iovec, bfd_openw),
+	(bfd_create): Likewise.
+	(_bfd_delete_bfd): Don't free filename.
+	(bfd_set_filename): Copy filename param to bfd_alloc'd memory,
+	return pointer to the copy or NULL on alloc fail.
+	* vms-lib.c (_bfd_vms_lib_get_module): Free newname and test
+	result of bfd_set_filename.
+	* bfd-in2.h: Regenerate.
+
+2020-05-20  Alan Modra  <amodra@gmail.com>
+
+	PR 26011
+	* elf.c (_bfd_elf_get_reloc_upper_bound): Sanity check reloc
+	section size against file size.
+	(_bfd_elf_get_dynamic_reloc_upper_bound): Likewise.
+
+2020-05-19  Gunther Nikl  <gnikl@justmail.de>
+
+	PR 26005
+	* elf.c (bfd_section_from_shdr): Replace bfd_zmalloc with bfd_malloc
+	and memset when allocating memory for the sections_being_created
+	array.
+
+2020-05-19  Stafford Horne  <shorne@gmail.com>
+
+	* elf32-or1k.c (or1k_elf_finish_dynamic_symbol): Rename srela
+	to relgot.
+	(or1k_elf_relocate_section): Access srelgot via
+	htab->root.srelgot.  Add assertions for srelgot->contents.
+	Introduce local variable for srelgot to not reuse global
+	sreloc.
+	(or1k_elf_relocate_section): Fixup dynamic symbol detection.
+	(or1k_set_got_and_rela_sizes): New function.
+	(or1k_initial_exec_offset): New function.
+	(TLS_GD, TLS_IE, TLS_LD, TLS_LE): Redefine macros as masks.
+	(or1k_elf_relocate_section): Allow for TLS to handle multiple
+	model access.
+	(or1k_elf_check_relocs): Use OR to set TLS access.
+	(allocate_dynrelocs): Use or1k_set_got_and_rela_sizes to set
+	sizes.
+	(or1k_elf_size_dynamic_sections): Use
+	or1k_set_got_and_rela_sizes to set sizes.
+	(or1k_elf_relocate_section): Fixup PCREL relocation calculation.
+	(TCB_SIZE): New macro.
+	(tpoff): Use TCB_SIZE and alignment to calculate offset.
+	(allocate_dynrelocs, readonly_dynrelocs, or1k_elf_check_relocs)
+	(or1k_elf_size_dynamic_sections): Rename p to sec_relocs.
+	(allocate_dynrelocs): Rename s to splt or sgot based on usage.
+	(tpoff): Add dynamic boolean argument.
+	(or1k_elf_relocate_section): Pass dynamic flag to tpoff.
+
+2020-05-19  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>
+
+	* elfnn-aarch64.c (elfNN_aarch64_final_link_relocate): Club
+	BFD_RELOC_AARCH64_BRANCH19 and BFD_RELOC_AARCH64_TSTBR14
+	cases with BFD_RELOC_AARCH64_JUMP26.
+	(elfNN_aarch64_check_relocs): Likewise.
+
+2020-05-19  Alan Modra  <amodra@gmail.com>
+
+	* aix5ppc-core.c (xcoff64_core_file_matches_executable_p): Use
+	bfd_get_filename rather than accessing bfd->filename directly.
+	* aout-target.h (MY (object_p)): Likewise.
+	* aoutx.h (aout_find_nearest_line, aout_link_write_symbols): Likewise.
+	* archive.c (find_nested_archive, _bfd_generic_read_ar_hdr_mag),
+	(_bfd_construct_extended_name_table, _bfd_bsd44_write_ar_hdr),
+	(_bfd_archive_bsd44_construct_extended_name_table),
+	(_bfd_write_archive_contents, _bfd_compute_and_write_armap),
+	(_bfd_bsd_write_armap): Likewise.
+	* bfd.c (bfd_errmsg, _bfd_doprnt): Likewise.
+	* cache.c (bfd_open_file): Likewise.
+	* ecoff.c (_bfd_ecoff_write_armap): Likewise.
+	* ecofflink.c (bfd_ecoff_debug_accumulate_other): Likewise.
+	* elf32-bfin.c (bfinfdpic_relocate_section): Likewise.
+	* elf32-frv.c (elf32_frv_relocate_section): Likewise.
+	* elf32-hppa.c (elf32_hppa_final_link): Likewise.
+	* elf32-nds32.c (nds32_elf_output_symbol_hook),
+	(patch_tls_desc_to_ie): Likewise.
+	* elf32-spu.c (sort_bfds, print_one_overlay_section),
+	(spu_elf_auto_overlay): Likewise.
+	* elf64-hppa.c (elf_hppa_final_link): Likewise.
+	* elf64-ia64-vms.c (elf64_ia64_size_dynamic_sections): Likewise.
+	* elfcore.h (elf_core_file_matches_executable_p): Likewise.
+	* elflink.c (bfd_elf_size_dynamic_sections),
+	(elf_link_input_bfd): Likewise.
+	* linker.c (_bfd_generic_link_output_symbols): Likewise.
+	* mach-o.c (bfd_mach_o_follow_dsym),
+	(bfd_mach_o_close_and_cleanup): Likewise.
+	* opncls.c (_bfd_delete_bfd, _maybe_make_executable),
+	(find_separate_debug_file, get_build_id_name): Likewise.
+	* pdp11.c (aout_find_nearest_line, aout_link_write_symbols): Likewise.
+	* plugin.c (bfd_plugin_open_input): Likewise.
+	* rs6000-core.c (rs6000coff_core_file_matches_executable_p): Likewise.
+	* som.c (som_write_armap): Likewise.
+	* srec.c (srec_write_record, srec_write_symbols): Likewise.
+	* vms-lib.c (_bfd_vms_lib_get_imagelib_file),
+	(_bfd_vms_lib_write_archive_contents): Likewise.
+	* xcofflink.c (xcoff_link_add_dynamic_symbols): Likewise.
+
+2020-05-19  Alan Modra  <amodra@gmail.com>
+
+	PR 25713
+	* bfdio.c (_bfd_real_fopen): Typo fix.
+
+2020-05-18  Nick Clifton  <nickc@redhat.com>
+
+	PR 26005
+	* elf.c (bfd_section_from_shdr): Use bfd_malloc to allocate memory
+	for the sections_being_created array.
+
+2020-05-18  Alan Modra  <amodra@gmail.com>
+
+	* ecoff.c (ecoff_slurp_reloc_table): Malloc external_relocs so
+	they can be freed without also freeing internal_relocs.
+
+2020-05-18  Jaydeep Chauhan  <jaydeepchauhan1494@gmail.com>
+
+	PR 25713
+	* bfdio.c (_bfd_real_fopen): Convert UNIX style sirectory
+	separators into DOS style when creating a WIN32 fullpath.
+
+2020-05-14  Nelson Chu  <nelson.chu@sifive.com>
+
+	* elfnn-riscv.c (elfNN_riscv_mkobject):  New function.  We need this
+	to initialize RISC-V tdata.
+
+2020-05-12  Gunther Nikl  <gnikl@justmail.de>
+
+	* aoutx.h (NAME (aout, swap_std_reloc_out)): Reject an unsupported
+	relocation size.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (xlate_pcrel_opt): Handle lxvp and stxvp.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c: Rename powerxx to power10 throughout.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	PR 25961
+	* coffgen.c (coff_get_normalized_symtab): Check that buffer
+	contains required number of auxents before processing any auxent.
+	* coffswap.h (coff_swap_aux_in <C_FILE>): Only swap in extended
+	file name from auxents for PE.
+
+2020-05-04  Gunther Nikl  <gnikl@justmail.de>
+
+	* aout-cris.c (DEFAULT_ARCH): Delete define.
+	(MY_set_arch_mach): Likewise.
+	(SET_ARCH_MACH): Use bfd_set_arch_mach with an explicit architecture
+	of bfd_arch_cris.
+	(swap_ext_reloc_in): Add casts to r_index extraction. Mask valid bits
+	of r_type before the shift.
+
+2020-05-04  Wilco Dijkstra  <wdijkstr@arm.com>
+
+	PR ld/25665
+	* elfnn-aarch64.c (group_sections): Copy implementation from
+	elf32-arm.c.
+
+2020-05-01  Alan Modra  <amodra@gmail.com>
+
+	PR 25900
+	* elfnn-riscv.c (_bfd_riscv_relax_section): Check root.type before
+	accessing root.u.def of symbols.  Also check root.u.def.section
+	is non-NULL.  Reverse tests so as to make the logic positive.
+
+2020-05-01  Alan Modra  <amodra@gmail.com>
+
+	PR 25882
+	* elf32-tic6x.c (elf32_tic6x_merge_attributes): Don't transfer
+	Tag_ABI_PIC or Tag_ABI_PID from dynamic objects to the output.
+
+2020-05-01  Alan Modra  <amodra@gmail.com>
+
+	PR 25882
+	* elf32-bfin.c (elf32_bfin_merge_private_bfd_data): Add FIXME.
+	* elf32-frv.c (frv_elf_merge_private_bfd_data): Likewise.
+	* elfxx-mips.c (_bfd_mips_elf_merge_private_bfd_data): Likewise.
+	* elf32-nds32.c (nds32_elf_merge_private_bfd_data): Likewise.
+	* elf32-score.c (s3_elf32_score_merge_private_bfd_data): Likewise.
+	* elf32-score7.c (s7_elf32_score_merge_private_bfd_data): Likewise.
+	* elf32-sh.c (sh_elf_merge_private_data): Likewise.
+	* elf32-tic6x.c (elf32_tic6x_merge_attributes): Likewise.
+	* elf64-ia64-vms.c (elf64_ia64_merge_private_bfd_data): Likewise.
+	* elfnn-ia64.c (elfNN_ia64_merge_private_bfd_data): Likewise.
+
+2020-05-01  Alan Modra  <amodra@gmail.com>
+
+	PR 25882
+	* elf32-ppc.c (ppc_elf_merge_private_bfd_data): Ignore e_flags
+	from shared libraries.
+
+2020-04-29  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* elf32-xtensa.c (relax_section): Don't negate diff_value for
+	XTENSA_NDIFF relocations. Don't add sign bits whe diff_value
+	equals 0. Report overflow when the result has negative sign but
+	all significant bits are zero.
+
+2020-04-29  Gunther Nikl  <gnikl@justmail.de>
+
+	* aoutx.h (swap_std_reloc_out): Special case 64 bit relocations.
+	(aout_link_reloc_link_order): Likewise. Make r_length an unsigned.
+
+2020-04-28  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_slurp_etir): Correct divide by zero check.
+	Emit warning message.
+
+2020-04-27  Tamar Christina  <tamar.christina@arm.com>
+
+	* coff-i386.c (COFF_WITH_PE_BIGOBJ): New.
+	* coff-x86_64.c (COFF_WITH_PE_BIGOBJ): New.
+	* config.bfd (targ_selvecs): Rename x86_64_pe_be_vec
+	to x86_64_pe_big_vec as it not a big-endian format.
+	(vec i386_pe_big_vec): New.
+	* configure.ac: Likewise.
+	* targets.c: Likewise.
+	* configure: Regenerate.
+	* pe-i386.c (TARGET_SYM_BIG, TARGET_NAME_BIG,
+	COFF_WITH_PE_BIGOBJ): New.
+	* pe-x86_64.c (TARGET_SYM_BIG, TARGET_NAME_BIG):
+	New.
+	(x86_64_pe_be_vec): Moved.
+
+2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* elf-bfd.h (elfcore_write_arc_v2): Add prototype.
+	* elf.c (elfcore_grok_arc_v2): New function.
+	(elfcore_grok_note): Call the new function to handle the corresponding
+	note.
+	(elfcore_write_arc_v2): New function.
+	(elfcore_write_register_note): Call the new function to handle the
+	corresponding pseudo-sections.
+
+2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
+
+	PR ld/25861
+	* bfd-in2.h: Regenerated.
+	* elf32-xtensa.c (elf_howto_table): New entries for
+	R_XTENSA_PDIFF{8,16,32} and R_XTENSA_NDIFF{8,16,32}.
+	(elf_xtensa_reloc_type_lookup, elf_xtensa_do_reloc)
+	(relax_section): Add cases for R_XTENSA_PDIFF{8,16,32} and
+	R_XTENSA_NDIFF{8,16,32}.
+	* libbfd.h (bfd_reloc_code_real_names): Add names for
+	BFD_RELOC_XTENSA_PDIFF{8,16,32} and
+	BFD_RELOC_XTENSA_NDIFF{8,16,32}.
+	* reloc.c: Add documentation for BFD_RELOC_XTENSA_PDIFF{8,16,32}
+	and BFD_RELOC_XTENSA_NDIFF{8,16,32}.
+
+2020-04-21  Tamar Christina  <tamar.christina@arm.com>
+
+	PR binutils/24753
+	* compress.c (bfd_get_full_section_contents): Exclude sections with no
+	content.
+
+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25849
+	* elf-bfd.h (elf_backend_data): Add
+	elf_backend_strip_zero_sized_dynamic_sections.
+	(_bfd_elf_strip_zero_sized_dynamic_sections): New prototype.
+	* elf64-alpha.c (elf_backend_strip_zero_sized_dynamic_sections):
+	New macro.
+	* elflink.c (_bfd_elf_strip_zero_sized_dynamic_sections): New
+	function.
+	* elfxx-target.h (elf_backend_strip_zero_sized_dynamic_sections):
+	New macro.
+	(elfNN_bed): Add elf_backend_strip_zero_sized_dynamic_sections.
+
+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elf64-alpha.c (alpha_elf_reloc_entry): Replace reltext with
+	sec.
+	(elf64_alpha_check_relocs): Set sec instead of reltext.  Warn
+	DT_TEXTREL with -M.
+	(elf64_alpha_calc_dynrel_sizes): Warn DT_TEXTREL with -M.
+
+2020-04-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: Updated Serbian translation.
+
+2020-04-21  Alan Modra  <amodra@gmail.com>
+
+	* elf32-sh.c (sh_elf_relocate_section): Remove STO_SH5_ISA32
+	processing.
+
+2020-04-20  Stephen Casner  <casner@acm.org>
+
+	* pdp11.c (N_STAB): Modify value to avoid conflict with N_EXT
+	causing globals from linker script to be treated as debug symbols.
+	(translate_symbol_table): Don't sign-extend symbol values from 16
+	to 64 bits in nm output.
+
+2020-04-20  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_size_stubs): Strip relbrlt too.
+
+2020-04-18  Alan Modra  <amodra@gmail.com>
+
+	* section.c (bfd_is_const_section): Correct test for special
+	sections.
+	* bfd-in2.h: Regenerate.
+
+2020-04-17  Alan Modra  <amodra@gmail.com>
+
+	PR 25842
+	* elf.c (_bfd_elf_get_symbol_version_string): Don't segfault on
+	NULL nodename.
+
+2020-04-16  Nick Clifton  <nickc@redhat.com>
+
+	PR 25803
+	* elfxx-mips.c (_bfd_mips_elf_adjust_dynamic_symbol): Replace an
+	abort with a more helpful error message.
+
+2020-04-16  Alan Modra  <amodra@gmail.com>
+
+	PR 25827
+	* dwarf2.c (scan_unit_for_symbols): Wrap overlong lines.  Don't
+	strdup(0).
+
+2020-04-15  Fangrui Song <maskray@google.com>
+
+	PR binutils/24613
+	* coff-rs6000.c (xcoff_ppc_relocate_section): Change RM_GENERATE_ERROR
+	to RM_DIAGNOSE plus a check of warn_unresolved_syms.
+	* coff64-rs6000.c (xcoff_ppc_relocate_section): Likewise.
+	* elf-bfd.h (_bfd_elf_large_com_section): Likewise.
+	* elf32-m32r.c (m32r_elf_relocate_section): Likewise.
+	* elf32-score.c (s3_bfd_score_elf_relocate_section): Likewise.
+	* elf32-score7.c (s7_bfd_score_elf_relocate_section): Likewise.
+	* elf32-sh.c (sh_elf_relocate_section): Likewise.
+	* elf32-spu.c (spu_elf_relocate_section): Likewise.
+	* elf64-hppa.c (elf64_hppa_relocate_section): Likewise.
+	* elflink.c (elf_link_output_extsym): Likewise.
+	* elfxx-mips.c (mips_elf_calculate_relocation): Likewise.
+
+2020-04-15  Alan Modra  <amodra@gmail.com>
+
+	PR 25823
+	* peXXigen.c (_bfd_XXi_swap_sym_in <C_SECTION>): Don't use a
+	pointer into strings that may be freed for section name, always
+	allocate a new string.
+
+2020-04-14  Juan Manuel Guerrero  <juan.guerrero@gmx.de>
+            Jan W. Jagersma  <jwjagersma@gmail.com>
+
+	* coff-go32.c (COFF_GO32, IMAGE_SCN_LNK_NRELOC_OVFL)
+	(coff_SWAP_scnhdr_in, coff_SWAP_scnhdr_out): Define.
+	(_bfd_go32_swap_scnhdr_in, _bfd_go32_swap_scnhdr_out)
+	(_bfd_go32_mkobject): New functions.
+	* coff-stgo32.c (IMAGE_SCN_LNK_NRELOC_OVFL)
+	(coff_SWAP_scnhdr_in, coff_SWAP_scnhdr_out): Define.
+	(go32exe_mkobject): Call _bfd_go32_mkobject.
+	* coffcode.h (COFF_WITH_EXTENDED_RELOC_COUNTER): Define.
+	(coff_set_alignment_hook): Define function for COFF_GO32_EXE
+	and COFF_GO32.
+	(coff_write_relocs): Enable extended reloc counter code if
+	COFF_WITH_EXTENDED_RELOC_COUNTER is defined.  Test for obj_go32.
+	(coff_write_object_contents): Likewise.  Pad section headers
+	for COFF_GO32 and COFF_GO32EXE.  Use bfd_coff_swap_scnhdr_out
+	instead of coff_swap_scnhdr_out.
+	* cofflink.c (_bfd_coff_final_link): Test also for obj_go32 to
+	enable extended reloc counter.
+	* coffswap.h: (coff_swap_scnhdr_in, coff_swap_scnhdr_out):
+	Declare with ATTRIBUTE_UNUSED.
+	* libcoff-in.h: (struct coff_tdata): New field go32.
+	(obj_go32): Define.
+	* libcoff.h: Regenerate.
+
+2020-04-14  Fangrui Song  <maskray@google.com>
+
+	PR gas/25768
+	* elf.c (assign_section_numbers): Always set .stab sh_entsize to
+	12.
+
+2020-04-14  Stephen Casner  <casner@acm.org>
+
+	PR ld/25677
+	* pdp11.c: Add implementation of --imagic option.
+	(adjust_o_magic): Fix objcopy --extract-symbol test.
+	* libaout.h (enum aout_magic): Add i_magic.
+
+2020-04-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+	    Nick Clifton  <nickc@redhat.com>
+
+	* elf32-sparc.c (sparc_final_write_processing): Fix whitespace.
+	<0>: Ignore.
+	<default>: Error rather than abort.
+
+2020-04-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25767
+	* elf.c (_bfd_elf_fixup_group_sections): Remove zero-sized
+	relocation section from section group.
+
+2020-04-02  Jan W. Jagersma  <jwjagersma@gmail.com>
+
+	* bfdio.c (bfd_bread, bfd_tell, bfd_seek, bfd_mmap): Always add
+	bfd->origin to file offset.
+	* bfdwin.c (bfd_get_file_window): Likewise.
+	* bfd.c: Clarify the use of the bfd->origin field.
+	* bfd-in2.h: Regenerate.
+	* coff-i386.c: Don't include go32exe.h. Allow overriding
+	coff_write_object_contents via COFF_WRITE_CONTENTS.
+	* coff-stgo32.c (go32exe_cleanup, go32exe_mkobject)
+	(go32exe_write_object_contents): New functions.
+	(go32exe_temp_stub, go32exe_temp_stub_size): New static globals.
+	(COFF_WRITE_CONTENTS, GO32EXE_DEFAULT_STUB_SIZE): Define.
+	(create_go32_stub): Remove check for 2k size limit.  Read stub
+	from go32exe_temp_stub if present.
+	(go32_stubbed_coff_bfd_copy_private_bfd_data): Allocate and
+	copy variable-length stub.
+	(go32_check_format): Read stub to go32exe_temp_stub, set
+	origin, return go32exe_cleanup.
+	(adjust_filehdr_in_post, adjust_filehdr_out_pre)
+	(adjust_filehdr_out_post, adjust_scnhdr_in_post)
+	(adjust_scnhdr_out_pre, adjust_scnhdr_out_post)
+	(adjust_aux_in_post, adjust_aux_out_pre, adjust_aux_out_post):
+	Remove functions and their associated #defines.
+	* coffcode.h (coff_mkobject_hook): Remove stub copying code.
+	* libcoff-in.h: (struct coff_tdata): New field stub_size.
+	Rename field go32stub to stub.
+	* libcoff.h: Regenerate.
+	* coff-stgo32.c (go32_check_format): Rename to...
+	(go32exe_check_format): ...this.
+	(go32_stubbed_coff_bfd_copy_private_bfd_data): Rename to...
+	(go32exe_copy_private_bfd_data): ...this.
+	(stub_bytes): Rename to...
+	(go32exe_default_stub): ...this.
+	(create_go32_stub): Rename to...
+	(go32exe_create_stub): ...this.
+	* coff-stgo32.c (go32exe_copy_private_bfd_data): Avoid realloc
+	when possible.
+
+2020-04-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25749
+	PR ld/25754
+	* elf32-i386.c (elf_i386_convert_load_reloc): Convert load
+	relocation to R_386_32 for relocation against non-preemptible
+	absolute symbol.
+	(elf_i386_check_relocs): Call _bfd_elf_x86_valid_reloc_p.  Don't
+	allocate dynamic relocation for non-preemptible absolute symbol.
+	(elf_i386_relocate_section): Pass sec to
+	GENERATE_DYNAMIC_RELOCATION_P.
+	* elf64-x86-64.c (R_X86_64_converted_reloc_bit): Moved.
+	(elf_x86_64_convert_load_reloc): Covert load relocation to
+	R_X86_64_32S or R_X86_64_32 for relocation against non-preemptible
+	absolute symbol.  Don't convert to R_X86_64_32S nor R_X86_64_32
+	for non-preemptible absolute symbol if they overflow.
+	(elf_x86_64_check_relocs): Call _bfd_elf_x86_valid_reloc_p.  Set
+	tls_type for GOT slot to GOT_ABS for non-preemptible absolute
+	symbol.  Don't allocate dynamic relocation for non-preemptible
+	absolute symbol.
+	(elf_x86_64_relocate_section): Don't generate relative relocation
+	for GOTPCREL relocations aganst local absolute symbol.  Pass sec
+	to GENERATE_DYNAMIC_RELOCATION_P.
+	* elfxx-x86.c (elf_x86_allocate_dynrelocs): No dynamic relocation
+	against non-preemptible absolute symbol.
+	(_bfd_elf_x86_valid_reloc_p): New function.
+	(_bfd_x86_elf_size_dynamic_sections): No dynamic relocation for
+	GOT_ABS GOT slot.
+	* elfxx-x86.h (GENERATE_DYNAMIC_RELOCATION_P): Add an SEC
+	argument.  Don't generate dynamic relocation against
+	non-preemptible absolute symbol.
+	(ABS_SYMBOL_P): New.
+	(GENERATE_RELATIVE_RELOC_P): Don't generate relative relocation
+	against non-preemptible absolute symbol.
+	(GOT_ABS): New.
+	(R_X86_64_converted_reloc_bit): New.  Moved from elf64-x86-64.c.
+	(_bfd_elf_x86_valid_reloc_p): New.
+
+2020-04-01  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/16017
+	* elf32-arm.c (elf32_arm_populate_plt_entry): Set LSB of the PLT0
+	address in the GOT if in thumb only mode.
+
+2020-04-01  Tamar Christina  <tamar.christina@arm.com>
+
+	* elf32-arm.c (elf32_thumb2_plt_entry): Fix PC-rel offset.
+
+2020-04-01  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* mmo.c (mmo_scan): Create .text section only when needed, not
+	from the start.
+
+2020-03-31  Alan Modra  <amodra@gmail.com>
+
+	* coff-alpha.c (alpha_ecoff_get_elt_at_filepos): Correct bfd_bread
+	return value check.
+
+2020-03-31  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (image_write): Check bounds for sections without
+	contents too.  Error on non-zero write to section without
+	contents.
+	(_bfd_vms_slurp_etir): Check return of image_write* functions.
+
+2020-03-31  Alan Modra  <amodra@gmail.com>
+
+	* tekhex.c (pass_over): Check is_eof before reading buffer.
+
+2020-03-30  Nick Clifton  <nickc@redhat.com>
+
+	PR binutils/pr25662
+	* libcoff-in.h (struct pe_tdata): Rename the insert_timestamp
+	field to timestamp and make it an integer.
+	* libcoff.h: Regenerate.
+	* peXXigen.c (_bfd_XXi_only_swap_filehdr_out): Test the timestamp
+	field in the pe_data structure rather than the insert_timestamp
+	field.
+
+2020-03-30  Alan Modra  <amodra@gmail.com>
+
+	PR 25745
+	* elf64-ppc.c (ppc64_elf_build_stubs): Use asprintf to form
+	statistics message.
+
+2020-03-26  Nick Clifton  <nickc@redhat.com>
+
+	* cofflink.c (bfd_coff_get_internal_extra_pe_aouthdr): Delete.
+	* libbfd-in.h (bfd_coff_get_internal_extra_pe_aouthdr): Remove
+	prototype.
+	* libbfd.h: Regenerate.
+
+2020-03-26  Alan Modra  <amodra@gmail.com>
+
+	* i386msdos.c (msdos_object_p): Catch -1 return from bfd_bread.
+
+2020-03-26  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (dst_define_location): Limit size of dst_ptr_offsets
+	array.
+	(_bfd_vms_slurp_object_records): Rename "err" to "ok".
+
+2020-03-25  Nick Clifton  <nickc@redhat.com>
+
+	* cofflink.c (bfd_coff_get_internal_extra_pe_aouthdr): New
+	function.
+	* libbfd-in.h (bfd_coff_get_internal_extra_pe_aouthdr): Prototype.
+	* libbfd.h: Regenerate.
+
+2020-03-25  Shahab Vahedi  <shahab@synopsys.com>
+
+	* elf32-arc.c (PRINT_DEBUG_RELOC_INFO_BEFORE): Use the
+	correct field name in the output string.
+
+2020-03-25  Alan Modra  <amodra@gmail.com>
+
+	PR 25662
+	* elf.c (assign_file_positions_for_load_sections): Adjust offset
+	for SHT_NOBITS section if first in segment.
+
+2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25708
+	* elf-bfd.h (_bfd_elf_get_symbol_version_name): Renamed to ...
+	(_bfd_elf_get_symbol_version_string): This.
+	* elf.c (_bfd_elf_get_symbol_version_name): Renamed to ...
+	(_bfd_elf_get_symbol_version_string): This.
+	(bfd_elf_print_symbol): Pass TRUE to
+	_bfd_elf_get_symbol_version_string.
+	* libbfd-in.h (_bfd_nosymbols_get_symbol_version_string): Add a
+	bfd_boolean argument.
+	* syms.c (_bfd_nosymbols_get_symbol_version_string): Likewise.
+	* targets.c  (_bfd_get_symbol_version_string): Likewise.
+	(bfd_get_symbol_version_string): Likewise.
+	* bfd-in2.h: Regenerated.
+
+2020-03-24  Nick Clifton  <nickc@redhat.com>
+	    Jaydeep Chauhan  <jaydeepchauhan1494@gmail.com>
+
+	PR 25713
+	* bfdio.c (_bfd_real_fopen): Add code to handle long filenames on
+	Win32 systems.
+
+2020-03-24  Nick Clifton  <nickc@redhat.com>
+
+	PR 25681
+	* elf.c (_bfd_elf_map_sections_to_segments): When looking for a
+	segment to use for PT_GNU_RELRO, ignore empty sections in a
+	segment's current list.
+
+2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25717
+	* elf-bfd.h (elf_obj_tdata): Change num_group to unsigned int.
+
+2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25708
+	* elf-bfd.h (_bfd_elf_get_symbol_version_name): New.
+	* elf.c (_bfd_elf_get_symbol_version_name): New function.  Based
+	on the previous _bfd_elf_get_symbol_version_string.
+	(_bfd_elf_get_symbol_version_string): Use it.
+
+2020-03-24  Alan Modra  <amodra@gmail.com>
+
+	* archive.c (_bfd_generic_read_ar_hdr_mag): Sanity check extended
+	name size.  Use bfd_malloc rather than bfd_zmalloc, clearing just
+	struct areltdata.
+
+2020-03-23  Sebastian Huber  <sebastian.huber@embedded-brains.de>
+
+	* elflink.c (_bfd_elf_tls_setup): Mention .tdata in comment.
+
+2020-03-23  Alan Modra  <amodra@gmail.com>
+
+	* ecoff.c (_bfd_ecoff_slurp_armap): Sanity check parsed_size and
+	symbol count.  Allocate an extra byte to ensure name strings
+	are terminated.  Sanity check name offsets.  Release memory on
+	error return.
+
+2020-03-23  Alan Modra  <amodra@gmail.com>
+
+	* i386msdos.c (msdos_object_p): Don't access e_lfanew when that
+	field hasn't been read.  Remove unnecessary casts.
+
+2020-03-22  Alan Modra  <amodra@gmail.com>
+
+	* coff64-rs6000.c (xcoff64_slurp_armap): Ensure size is large
+	enough to read number of symbols.
+
+2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* configure.ac (HAVE_EXECUTABLE_SUFFIX): Removed.
+	(EXECUTABLE_SUFFIX): Likewise.
+	* config.in: Regenerated.
+	* configure: Likewise.
+	* plugin.c (bfd_plugin_close_and_cleanup): Defined as
+	_bfd_generic_close_and_cleanup.
+	(plugin_list_entry): Remove resolution_file, resolution_option,
+	real_bfd, real_nsyms, real_syms, lto_nsyms, lto_syms, gcc,
+	lto_wrapper, gcc_env and initialized,
+	(need_lto_wrapper_p): Removed.
+	(get_lto_wrapper): Likewise.
+	(setup_lto_wrapper_env): Likewise.
+	(register_all_symbols_read): Likewise.
+	(egister_cleanup): Likewise.
+	(get_symbols): Likewise.
+	(add_input_file): Likewise.
+	(bfd_plugin_set_program_name): Remove need_lto_wrapper.
+	(add_symbols): Updated.
+	(try_claim): Likewise.
+	(try_load_plugin): Likewise.
+	(bfd_plugin_canonicalize_symtab): Likewise.
+	* plugin.h (bfd_plugin_set_program_name): Remove int argument.
+	(plugin_data_struct): Remove real_bfd, real_nsyms and real_syms.
+
+2020-03-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25640
+	* plugin.c (plugin_list_entry): Add has_symbol_type.
+	(add_symbols_v2): New function.
+	(bfd_plugin_open_input): Don't invoke LTO wrapper if LTO plugin
+	provides symbol type.
+	(try_load_plugin): Add LDPT_ADD_SYMBOLS_V2.
+	(bfd_plugin_canonicalize_symtab): Use LTO plugin symbol type if
+	available.
+
+2020-03-20  Alan Modra  <amodra@gmail.com>
+
+	* coff-rs6000.c (_bfd_xcoff_slurp_armap): Ensure size is large
+	enough to read number of symbols.
+
+2020-03-20  Alan Modra  <amodra@gmail.com>
+
+	* elf.c (_bfd_elf_setup_sections): Don't test known non-NULL
+	backend functions for NULL before calling.
+	(copy_special_section_fields, _bfd_elf_copy_private_bfd_data),
+	(bfd_section_from_shdr, assign_section_numbers): Likewise.
+	* elfcode.h (elf_write_relocs, elf_slurp_reloc_table): Likewise.
+	* elfnn-ia64.c (ignore_errors): New function.
+	(elf_backend_link_order_error_handler): Redefine as ignore_errors.
+
+2020-03-19  Nick Clifton  <nickc@redhat.com>
+
+	PR 25676
+	* dwarf2.c (struct varinfo): Add unit_offset field to record the
+	location of the varinfo in the unit's debug info data.  Change the
+	type of the stack field to a boolean.
+	(lookup_var_by_offset): New function.  Returns the varinfo
+	structure for the variable described at the given offset in the
+	unit's debug info.
+	(scan_unit_for_symbols): Add support for variables which have the
+	DW_AT_specification attribute.
+
+2020-03-19  Nick Clifton  <nickc@redhat.com>
+
+	PR 25699
+	* elf.c (bfd_elf_set_group_contents): Replace assertion with an
+	error return.
+
+2020-03-19  Sebastian Huber  <sebastian.huber@embedded-brains.de>
+
+	* elfxx-riscv.c (riscv_parse_subset): Don't use C99.
+
+2020-03-18  Nick Clifton  <nickc@redhat.com>
+
+	PR 25673
+	* elf.c (_bfd_elf_write_secondary_reloc_section): Fix illegal
+	memory access when processing a corrupt secondary reloc section.
+
+2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* elf32-arm.c (arm_build_one_stub): Emit a fatal error message
+	instead of calling abort.
+	* elf32-csky.c (csky_build_one_stub): Likewise.
+	* elf32-hppa.c (hppa_build_one_stub): Likewise.
+	* elf32-m68hc11.c (m68hc11_elf_build_one_stub): Likewise.
+	* elf32-m68hc12.c (m68hc12_elf_build_one_stub): Likewise.
+	* elf32-metag.c (metag_build_one_stub): Likewise.
+	* elf32-nios2.c (nios2_build_one_stub): Likewise.
+	* elf64-ppc.c (ppc_build_one_stub): Likewise.
+	(ppc_size_one_stub): Likewise.
+	* elfnn-aarch64.c (aarch64_build_one_stub): Likewise.
+
+2020-03-17  Nick Clifton  <nickc@redhat.com>
+
+	PR 25688
+	* elf.c (_bfd_elf_copy_special_section_fields): Replace assertions
+	with error messages.
+
+2020-03-17  Nick Clifton  <nickc@redhat.com>
+
+	PR 25687
+	* elf.c (_bfd_elf_slurp_secondary_reloc_section): Remove redundant
+	free.  Add free on another failure path.
+
+2020-03-16  Alan Modra  <amodra@gmail.com>
+
+	PR 25675
+	* elf.c (elf_sort_segments): Don't call bfd_octets_per_byte unless
+	we have a non-zero section count.  Do lma comparison in octets.
+
+2020-03-16  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (dst_restore_location): Validate index into
+	dst_ptr_offsets array before accessing.  Return status.
+	(dst_retrieve_location): Similarly, making "loc" parameter a
+	pointer to return value.
+	(_bfd_vms_slurp_etir): Update calls to above functions.
+
+2020-03-14  Kamil Rytarowski  <n54@gmx.com>
+
+	* configure.ac: Include netbsd-core.lo for all NetBSD arm and mips
+	targets.
+	* configure: Regenerated.
+
+2020-03-14  Alan Modra  <amodra@gmail.com>
+
+	* section.c (BFD_FAKE_SECTIONS): Formatting.
+	* bfd-in2.h: Regenerate.
+
+2020-03-13  Kamil Rytarowski  <n54@gmx.com>
+
+	* elf.c (elfcore_grok_netbsd_note): Add support for
+	NT_NETBSDCORE_LWPSTATUS notes.
+
+2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* bfd-in2.h: Regenerate.
+	* section.c (asection): Add already_assigned field.
+	(BFD_FAKE_SECTION): Add default initializer for it.
+	* ecoff.c (bfd_debug_section): Initialize already_assigned field.
+	* elf32-arm.c (arm_build_one_stub): Add support for
+	non_contiguous_regions.
+	* elf32-csky.c (csky_build_one_stub): Likewise.
+	* elf32-hppa.c (hppa_build_one_stub): Likewise.
+	* elf32-m68hc11.c (m68hc11_elf_build_one_stub): Likewise.
+	* elf32-m68hc12.c (m68hc12_elf_build_one_stub): Likewise.
+	* elf32-metag.c (metag_build_one_stub): Likewise.
+	* elf32-nios2.c (nios2_build_one_stub): Likewise.
+	* elf64-ppc.c (ppc_build_one_stub): Likewise.
+	(ppc_size_one_stub): Likewise.
+	* elfnn-aarch64.c (aarch64_build_one_stub): Likewise.
+	* elflink.c (elf_link_input_bfd): Likewise.
+
+2020-03-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24920
+	* elf-linker-x86.h (elf_linker_x86_params): Add
+	static_before_all_inputs and has_dynamic_linker.
+	* elfxx-x86.c (_bfd_x86_elf_link_setup_gnu_properties): Report
+	dynamic input objects if -static is passed at command-line
+	before all input files without --dynamic-linker unless
+	--no-dynamic-linker is used.
+
+2020-03-13  Kamil Rytarowski  <n54@gmx.com>
+
+	* elf.c (elfcore_grok_netbsd_note): Add support for aarch64.
+
+2020-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* bfd.c (bfd_record_phdr): New local "opb".  Fix assignment of
+	"p_paddr" from "at".
+	* elfcode.h (bfd_from_remote_memory): Add units to several
+	parameters.  New local "opb".  Fix usage of p_align.  Fix
+	calculation of "localbase" from "ehdr_vma" and "p_vaddr".  Fix
+	call of target_read_memory.
+	* elflink.c (elf_fixup_link_order): Fix scope of "s" local.  Fix
+	calculation of "offset" and "output_offset".
+	(bfd_elf_final_link): New local "opb".  Fix calculation of "size"
+	from "offset" and fix calculation of "end" from "vma+size".  Fix
+	comparison between "sh_addr" and "vma"/"output_offset".
+	(bfd_elf_discard_info): Fix calculation of "eh_alignment".
+	* elf-bfd.h (struct elf_link_hash_table): Add unit to tls_size
+	member.
+	* elf.c (_bfd_elf_map_sections_to_segments): Add unit (bytes/
+	octets) to "wrap_to2 and "phdr_size" locals.  Fix calculation of
+	"wrap_to" value.  Add unit (bytes) to phdr_lma variable.  Fix
+	assignment of p_paddr from phdr_lma.  Fix comparison between
+	"lma+size" and "next->lma".
+	(elf_sort_segments): Fix assignment from p_paddr to lma.
+	(assign_file_positions_for_load_sections): Add unit (bytes) to
+	local "align".  Fix calculation of local "off_adjust".  Fix
+	calculation of local "filehdr_vaddr".
+	(assign_file_positions_for_non_load_sections): New local "opb".
+	Fix calculation of "end" from "p_size". Fix comparison between
+	"vma+SECTION_SIZE" and "start".  Fix calculation of "p_memsz"
+	from "end" and "p_vaddr".
+	(rewrite_elf_program_header): Fix comparison between p_vaddr and
+	vma.  Fix assignment to p_paddr from lma.  Fix comparison between
+	p_paddr and lma.  Fix assignment to p_paddr from lma.
+	* merge.c (sec_merge_emit): New local "opb". Convert
+	"alignment_power" to octets.
+	(_bfd_add_merge_section): New locals "alignment_power" and
+	"opb".  Fix comparison between "alignment_power" and
+	"sizeof(align)".
+	(_bfd_merge_sections): New local "opb".  Divide size by opb
+	before checking align mask.
+
+2020-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* elf.c (_bfd_elf_make_section_from_shdr): Introduce new temp
+	opb.  Divide Elf_Internal_Shdr::sh_addr by opb when setting
+	section LMA/VMA.
+	(_bfd_elf_make_section_from_phdr): Similarly.
+	(elf_fake_sections): Fix calculation of
+	Elf_Internal_shdr::sh_addr from section VMA.
+	(_bfd_elf_map_sections_to_segments): Fix mixup between octets
+	and bytes.
+	(assign_file_positions_for_load_sections): Fix calculations of
+	Elf_Internal_shdr::p_vaddr and p_paddr from section LMA/VMA.  Fix
+	comparison between program header address and section LMA.
+	(assign_file_positions_for_non_load_sections): Likewise.
+	(rewrite_elf_program_header): Likewise.  Introduce new temp opb.
+	(IS_CONTAINED_BY_VMA): Add parameter opb.
+	(IS_CONTAINED_BY_LMA,IS_SECTION_IN_INPUT_SEGMENT,
+	INCLUDE_SECTION_IN_SEGMENT): Likewise.
+	(copy_elf_program_header): Update call to ELF_SECTION_IN_SEGMENT.
+	Fix calculations of p_addr_valid and p_vaddr_offset.
+	* elflink.c (elf_link_add_object_symbols): Multiply section VMA
+	with octets per byte when comparing against p_vaddr.
+
+2020-03-11  Alan Modra  <amodra@gmail.com>
+
+	* som.c (setup_sections): Sanity check subspace.name.
+
+2020-03-11  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_inline_plt): Do increment rel in for loop.
+
+2020-03-10  Alan Modra  <amodra@gmail.com>
+
+	PR 25648
+	* ihex.c (ihex_write_object_contents): Don't assume ordering of
+	addresses here.
+
+2020-03-09  Alan Modra  <amodra@gmail.com>
+
+	* wasm-module.c (wasm_scan): Sanity check file name length
+	before allocating memory.  Move common section setup code.  Do
+	without bfd_tell to calculate section size.
+
+2020-03-06  Nick Clifton  <nickc@redhat.com>
+
+	* elf.c (_bfd_elf_set_section_contents): Replace call to abort
+	with error messages and failure return values.
+
+2020-03-05  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* elf32-xtensa.c (shrink_dynamic_reloc_sections): Shrink dynamic
+	relocation sections for any removed reference to a dynamic symbol.
+
+2020-03-05  Nick Clifton  <nickc@redhat.com>
+
+	* elf-bfd.h (struct elf_backend_data): Add new fields:
+	init_secondary_reloc_section, slurp_secondary_reloc_section,
+	write_secondary_reloc_section.
+	(_bfd_elf_init_secondary_reloc_section): Prototype.
+	(_bfd_elf_slurp_secondary_reloc_section): Prototype.
+	(_bfd_elf_write_secondary_reloc_section): Prototype.
+	* elf.c ( bfd_section_from_shdr): Invoke the new
+	init_secondary_reloc_section backend function, if defined, when a
+	second reloc section is encountered.
+	(swap_out_syms): Invoke the new symbol_section_index function, if
+	defined, when computing the section index of an OS/PROC specific
+	symbol.
+	(_bfd_elf_init_secondary_reloc_section): New function.
+	(_bfd_elf_slurp_secondary_reloc_section): New function.
+	(_bfd_elf_write_secondary_reloc_section): New function.
+	(_bfd_elf_copy_special_section_fields): New function.
+	* elfcode.h (elf_write_relocs): Invoke the new
+	write_secondary_relocs function, if defined, in order to emit
+	secondary relocs.
+	(elf_slurp_reloc_table): Invoke the new slurp_secondary_relocs
+	function, if defined, in order to read in secondary relocs.
+	* elfxx-target.h (elf_backend_copy_special_section_fields):
+	Provide a non-NULL default definition.
+	(elf_backend_init_secondary_reloc_section): Likewise.
+	(elf_backend_slurp_secondary_reloc_section): Likewise.
+	(elf_backend_write_secondary_reloc_section): Likewise.
+	(struct elf_backend_data elfNN_bed): Add initialisers for the new
+	fields.
+        * configure.ac (score_elf32_[bl]e_vec): Add elf64.lo
+        * configure: Regenerate.
+
+2020-03-05  Alan Modra  <amodra@gmail.com>
+
+	* archive64.c (_bfd_archive_64_bit_slurp_armap): Check parsed_size
+	against file size before allocating memory.  Use bfd_alloc rather
+	than bfd_zalloc for carsym/strings memory.
+
+2020-03-04  Alan Modra  <amodra@gmail.com>
+
+	* elf.c (elf_fake_sections): Ensure sh_addralign is such that
+	sh_addr mod sh_addalign is zero.
+
+2020-03-04  Alan Modra  <amodra@gmail.com>
+
+	* format.c (bfd_check_format_matches): Call cleanup on error exit.
+
+2020-03-03  Alan Modra  <amodra@gmail.com>
+
+	* format.c (struct bfd_preserve): Add cleanup field.
+	(bfd_preserve_save): Add cleanup param and save.
+	(bfd_preserve_restore): Return cleanup.
+	(bfd_preserve_finish): Call the cleanup for the discarded match.
+	(bfd_check_format_matches): Pass cleanup to bfd_preserve_save,
+	and clear when preserving a match.  Restore cleanup too when
+	restoring that match.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* cisco-core.c (cisco_core_file_p): Return bfd_cleanup.
+	* hpux-core.c (hpux_core_core_file_p): Update prototype.
+	* sco5-core.c (sco5_core_file_p): Return bfd_cleanup.
+	(core_sco5_vec): Correct initialisers.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* aix386-core.c (aix386_core_file_p): Return bfd_cleanup.
+	* aix5ppc-core.c (xcoff64_core_p): Likewise.
+	* cisco-core.c (cisco_core_file_validate): Likewise.
+	* hppabsd-core.c (hppabsd_core_core_file_p): Likewise.
+	* hpux-core.c (hpux_core_core_file_p): Likewise.
+	* irix-core.c (irix_core_core_file_p): Likewise.
+	* lynx-core.c (lynx_core_file_p): Likewise.
+	* netbsd-core.c (netbsd_core_file_p): Likewise.
+	* osf-core.c (osf_core_core_file_p): Likewise.
+	* ptrace-core.c (ptrace_unix_core_file_p): Likewise.
+	* sco5-core.c (sco5_core_file_p): Likewise.
+
+2020-03-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* trad-core.c (trad_unix_core_file_p): Return bfd_cleanup.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* targets.c (bfd_cleanup): New typedef.
+	(struct bfd <_bfd_check_format>): Return a bfd_cleanup.
+	* libbfd-in.h (_bfd_no_cleanup): Define.
+	* format.c (bfd_reinit): Add cleanup parameter, call it.
+	(bfd_check_format_matches): Set cleanup from _bfd_check_format
+	call and pass to bfd_reinit.  Delete temp, use abfd->xvec instead.
+	* aout-target.h (callback, object_p): Return bfd_cleanup.
+	* aout-tic30.c (tic30_aout_callback, tic30_aout_object_p): Likewise.
+	* archive.c (bfd_generic_archive_p): Likewise.
+	* binary.c (binary_object_p): Likewise.
+	* coff-alpha.c (alpha_ecoff_object_p): Likewise.
+	* coff-ia64.c (ia64coff_object_p): Likewise.
+	* coff-rs6000.c (_bfd_xcoff_archive_p, rs6000coff_core_p): Likewise.
+	* coff-sh.c (coff_small_object_p): Likewise.
+	* coff-stgo32.c (go32_check_format): Likewise.
+	* coff64-rs6000.c (xcoff64_archive_p, rs6000coff_core_p),
+	(xcoff64_core_p): Likewise.
+	* coffgen.c (coff_real_object_p, coff_object_p): Likewise.
+	* elf-bfd.h (bfd_elf32_object_p, bfd_elf32_core_file_p),
+	(bfd_elf64_object_p, bfd_elf64_core_file_p): Likewise.
+	* elfcode.h (elf_object_p): Likewise.
+	* elfcore.h (elf_core_file_p): Likewise.
+	* i386msdos.c (msdos_object_p): Likewise.
+	* ihex.c (ihex_object_p): Likewise.
+	* libaout.h (some_aout_object_p): Likewise.
+	* libbfd-in.h (bfd_generic_archive_p, _bfd_dummy_target),
+	(_bfd_vms_lib_alpha_archive_p, _bfd_vms_lib_ia64_archive_p): Likewise.
+	* libbfd.c (_bfd_dummy_target): Likewise.
+	* libcoff-in.h (coff_object_p): Likewise.
+	* mach-o-aarch64.c (bfd_mach_o_arm64_object_p),
+	(bfd_mach_o_arm64_core_p): Likewise.
+	* mach-o-arm.c (bfd_mach_o_arm_object_p),
+	(bfd_mach_o_arm_core_p): Likewise.
+	* mach-o-i386.c (bfd_mach_o_i386_object_p),
+	(bfd_mach_o_i386_core_p): Likewise.
+	* mach-o-x86-64.c (bfd_mach_o_x86_64_object_p),
+	(bfd_mach_o_x86_64_core_p): Likewise.
+	* mach-o.c (bfd_mach_o_header_p, bfd_mach_o_gen_object_p),
+	(bfd_mach_o_gen_core_p, bfd_mach_o_fat_archive_p): Likewise.
+	* mach-o.h (bfd_mach_o_object_p, bfd_mach_o_core_p),
+	(bfd_mach_o_fat_archive_p, bfd_mach_o_header_p): Likewise.
+	* mmo.c (mmo_object_p): Likewise.
+	* pef.c (bfd_pef_object_p, bfd_pef_xlib_object_p): Likewise.
+	* peicode.h (coff_real_object_p, pe_ILF_object_p),
+	(pe_bfd_object_p): Likewise.
+	* plugin.c (ld_plugin_object_p, bfd_plugin_object_p): Likewise.
+	* ppcboot.c (ppcboot_object_p): Likewise.
+	* rs6000-core.c (rs6000coff_core_p): Likewise.
+	* som.c (som_object_setup, som_object_p): Likewise.
+	* srec.c (srec_object_p, symbolsrec_object_p): Likewise.
+	* tekhex.c (tekhex_object_p): Likewise.
+	* vms-alpha.c (alpha_vms_object_p): Likewise.
+	* vms-lib.c (_bfd_vms_lib_archive_p, _bfd_vms_lib_alpha_archive_p),
+	(_bfd_vms_lib_ia64_archive_p, _bfd_vms_lib_txt_archive_p): Likewise.
+	* wasm-module.c (wasm_object_p): Likewise.
+	* xsym.c (bfd_sym_object_p): Likewise.
+	* xsym.h (bfd_sym_object_p): Likewise.
+	* aoutx.h (some_aout_object_p): Likewise, and callback parameter
+	return type.
+	* pdp11.c (some_aout_object_p): Likewise.
+	* plugin.c (register_ld_plugin_object_p): Update object_p
+	parameter type.
+	* plugin.h (register_ld_plugin_object_p): Likewise.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Regenerate.
+	* libcoff.h: Regenerate.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* coff-alpha.c (alpha_ecoff_le_vec): Add SEC_SMALL_DATA to
+	applicable section flags.
+	* coff-mips.c (mips_ecoff_le_vec, mips_ecoff_be_vec): Likewise.
+	(mips_ecoff_bele_vec): Likewise.
+	* coffcode.h (sec_to_styp_flags): Set SEC_SMALL_DATA for .sdata
+	and .sbss sections.
+	* ecoff.c (_bfd_ecoff_new_section_hook): Likewise.
+	(_bfd_ecoff_styp_to_sec_flags): Likewise.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* elf32-m32r.c (m32r_elf_section_flags): New function.
+	(elf_backend_section_flags): Define.
+	* elf32-nds32.c (nds32_elf_section_flags): New function.
+	(elf_backend_section_flags): Define.
+	* elf32-ppc.c (ppc_elf_section_from_shdr): Set SEC_SMALL_DATA for
+	.sbss and .sdata sections.
+	* elf32-v850.c (v850_elf_section_from_shdr): Set SEC_SMALL_DATA
+	for SHF_V850_GPREL sections.
+	* elf64-alpha.c (elf64_alpha_section_from_shdr): Delete outdated
+	FIXME.
+	* elf64-hppa.c (elf64_hppa_section_from_shdr): Set SEC_SMALL_DATA
+	for SHF_PARISC_SHORT sections.
+	* elf64-ppc.c (ppc64_elf_section_flags): New function.
+	(elf_backend_section_flags): Define.
+	* elfxx-mips.c (_bfd_mips_elf_section_from_shdr): Set SEC_SMALL_DATA
+	for SHF_MIPS_GPREL sections.  Delete FIXME.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* elf-bfd.h (elf_backend_section_flags): Remove flagword* param.
+	* elf.c (_bfd_elf_make_section_from_shdr): Set section flags before
+	calling elf_backend_section_flags with adjusted params.  Use
+	newsect->flags past that point.
+	(_bfd_elf_new_section_hook): Always set sh_type and sh_flags for
+	special sections.
+	(_bfd_elf_init_private_section_data): Allow normal sh_type sections
+	to have their type overridden, and all sh_flags but processor and
+	os specific.
+	* elf32-arm.c (elf32_arm_section_flags): Adjust for changed params.
+	* elf32-mep.c (mep_elf_section_flags): Likewise.
+	* elf32-nios2.c (nios2_elf32_section_flags): Likewise.
+	* elf64-alpha.c (elf64_alpha_section_flags): Likewise.
+	* elf64-ia64-vms.c (elf64_ia64_section_flags): Likewise.
+	* elfnn-ia64.c (elfNN_ia64_section_flags): Likewise.
+	* elfnn-aarch64.c (elfNN_aarch64_size_stubs): Exclude the linker
+	stub BFD and non-aarch64 input files when scanning for stubs.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* coff-alpha.c (alpha_ecoff_get_elt_at_filepos): Provide an upper
+	limit to decompressed element size.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* vms-lib.c (vms_traverse_index): Add recur_count param and
+	update calls.  Fail on excessive recursion.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (vms_get_remaining_object_record): Use
+	bfd_realloc_or_free rather than bfd_realloc.
+	(add_symbol_entry, vector_grow1, alpha_vms_slurp_relocs): Likewise.
+	(dst_define_location, parse_module): Likewise, and check realloc
+	return status before using memory.  Return status from function
+	adjusting all callers.
+
+2020-02-28  Alan Modra  <amodra@gmail.com>
+
+	* vms-lib.c (_bfd_vms_lib_archive_p): Free memory on error paths.
+
+2020-02-28  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (alpha_vms_object_p): Use _bfd_malloc_and_read.
+	Remove duplicate undersize check.
+
+2020-02-27  Alan Modra  <amodra@gmail.com>
+
+	PR 24511
+	* mmo.c (mmo_scan): Set SEC_DATA for .data.
+
+2020-02-27  Alan Modra  <amodra@gmail.com>
+
+	PR 24511
+	* syms.c (stt): Trim off all but 'e', 'i' and 'p' entries.
+	(coff_section_type): Adjust comment.
+	(decode_section_type): Likewise.  Call coff_section_type before
+	decode_section_type.
+	(bfd_decode_symclass): Use 'c' for common sections other than
+	the standard one.
+
+2020-02-27  Alan Modra  <amodra@gmail.com>
+
+	* coff-rs6000.c (_bfd_xcoff_read_ar_hdr): Put all data in one
+	malloc'd block.
+
+2020-02-27  Alan Modra  <amodra@gmail.com>
+
+	* bfd.c (bfd_stat_arch_elt): Use vector of containing archive,
+	if file is an archive element.
+	* bfd-in2.h: Regenerate.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* archive.c (do_slurp_bsd_armap): Increase minimum parsed_size, and
+	bfd_set_error on failing test.  Don't bother changing bfd_error on
+	file read error.  Check symdef_count is multiple of BSD_SYMDEF_SIZE.
+	Check sym name is within string buffer.  Use size_t for some vars.
+	(do_slurp_coff_armap): Use size_t for some variables, fix size of
+	int_buf.  Don't change bfd_error on file read error.  Use
+	_bfd_mul_overflow when calculating carsym buffer size.  Reorder
+	calculations to catch overflows before they occur.  malloc and
+	free raw armap rather than using bfd_alloc.  Read raw armap before
+	allocating carsym+strings buffer.
+	(_bfd_slurp_extended_name_table): Localize variables.  Check
+	name size against file size.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* vms-lib.c (vms_lib_read_index): Release correct buffer.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* elf32-rx.c (rx_elf_relocate_section): Use bfd_malloc rather than
+	malloc.  Check for NULL return from bfd_malloc.
+	(rx_table_find, rx_table_map): Likewise.
+	(rx_set_section_contents): Check bfd_alloc return.
+	(rx_dump_symtab): Don't alloc internal_syms or external_syms.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* aoutx.h: Indent labels correctly.  Format error strings.
+	* archive.c: Likewise.
+	* archive64.c: Likewise.
+	* coff-arm.c: Likewise.
+	* coff-rs6000.c: Likewise.
+	* coff-stgo32.c: Likewise.
+	* cpu-arm.c: Likewise.
+	* dwarf2.c: Likewise.
+	* elf-ifunc.c: Likewise.
+	* elf-properties.c: Likewise.
+	* elf-s390-common.c: Likewise.
+	* elf-strtab.c: Likewise.
+	* elf.c: Likewise.
+	* elf32-arm.c: Likewise.
+	* elf32-bfin.c: Likewise.
+	* elf32-cr16.c: Likewise.
+	* elf32-csky.c: Likewise.
+	* elf32-i386.c: Likewise.
+	* elf32-m68k.c: Likewise.
+	* elf32-msp430.c: Likewise.
+	* elf32-nds32.c: Likewise.
+	* elf32-nios2.c: Likewise.
+	* elf32-pru.c: Likewise.
+	* elf32-xtensa.c: Likewise.
+	* elf64-ia64-vms.c: Likewise.
+	* elf64-x86-64.c: Likewise.
+	* elfcode.h: Likewise.
+	* elfcore.h: Likewise.
+	* elflink.c: Likewise.
+	* elfnn-aarch64.c: Likewise.
+	* elfnn-ia64.c: Likewise.
+	* elfnn-riscv.c: Likewise.
+	* elfxx-mips.c: Likewise.
+	* elfxx-sparc.c: Likewise.
+	* elfxx-x86.c: Likewise.
+	* i386lynx.c: Likewise.
+	* merge.c: Likewise.
+	* pdp11.c: Likewise.
+	* plugin.c: Likewise.
+	* reloc.c: Likewise.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	PR 25593
+	* elf-bfd.h (struct elf_link_hash_table): Rename "loaded" to
+	"dyn_loaded".
+	(bfd_elf_add_dt_needed_tag): Declare.
+	* elf-strtab.c (_bfd_elf_strtab_restore): Handle NULL buf.
+	* elflink.c (bfd_elf_add_dt_needed_tag): Make global and rename
+	from elf_add_dt_needed_tag.  Remove soname and doit param.
+	(elf_link_add_object_symbols): Don't use elf_add_dt_needed_tag
+	to see whether as-needed lib is already loaded, use dyn_loaded
+	list instead.  When saving and restoring around as-needed lib
+	handle possibility that dynstr has not been initialised.  Don't
+	add DT_NEEDED tags here.  Limit dyn_loaded list to dynamic libs.
+	Mark libs loaded via DT_NEEDED entries of other libs with
+	DYN_NO_NEEDED if they should not be mentioned in DT_NEEDED of
+	the output.
+	(elf_link_check_versioned_symbol): Remove now unneccesary
+	DYNAMIC check when traversing dyn_loaded list.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* bfdio.c (bfd_get_file_size): Ignore bogus archive element sizes.
+
+2020-02-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25584
+	* plugin.c (need_lto_wrapper_p): New.
+	(bfd_plugin_set_program_name): Add an int argument to set
+	need_lto_wrapper_p.
+	(get_lto_wrapper): Return FALSE if need_lto_wrapper_p isn't
+	set.
+	* plugin.h (bfd_plugin_set_program_name): Add an int argument.
+
+2020-02-24  Alan Modra  <amodra@gmail.com>
+
+	* vms-lib.c (_bfd_vms_lib_archive_p): Correct overflow checks.
+
+2020-02-24  Alan Modra  <amodra@gmail.com>
+
+	* vms-lib.c (struct carsym_mem): Add limit.
+	(vms_add_index): Heed limit.
+	(vms_traverse_index): Catch buffer overflows.  Remove outdated fixme.
+	(vms_lib_read_index): Set up limit.  Catch 32-bit overflow.
+	Always return actual number read.
+	(_bfd_vms_lib_archive_p): Catch buffer overflows.  Replace
+	assertion with error exit.
+
+2020-02-22  Alan Modra  <amodra@gmail.com>
+
+	PR 25585
+	* elf.c (assign_file_positions_for_load_sections): Continue linking
+	on "PHDR segment not covered by LOAD segment" errors.
+
+2020-02-21  Alan Modra  <amodra@gmail.com>
+
+	* mach-o.c (bfd_mach_o_canonicalize_relocs): Fix ineffective
+	overflow check.
+	(bfd_mach_o_canonicalize_reloc): Likewise.
+	(bfd_mach_o_canonicalize_dynamic_reloc): Likewise.  Sanity check
+	counts and offsets against file size.
+	(bfd_mach_o_build_dysymtab): Fix ineffective overflow check.
+	(bfd_mach_o_mangle_sections): Remove unnecessary overflow check.
+	(bfd_mach_o_read_symtab_symbols): Sanity check count and offset
+	against file size.  Delete symbol table error message.
+	(bfd_mach_o_read_dysymtab): Sanity check counts and offsets
+	against file size.
+	(bfd_mach_o_read_symtab): Likewise.
+	(bfd_mach_o_read_command): Pass file size.
+	(bfd_mach_o_scan): Sanity check command count against file size.
+
+2020-02-21  Alan Modra  <amodra@gmail.com>
+
+	PR 25569
+	* aoutx.h (adjust_o_magic, adjust_z_magic, adjust_n_magic): Use
+	"text", "data" and "bss" section pointer vars.  Don't update
+	section size, just exec header sizes.
+	(adjust_sizes_and_vmas): Don't update text section size.  Set
+	initial exec header a_text.  Print exec headers sizes.
+	* pdp11.c (adjust_o_magic, adjust_z_magic, adjust_n_magic),
+	(adjust_sizes_and_vmas): Similarly.  Formatting.
+	(final_link): Correct final file extension.
+
+2020-02-20  Nick Clifton  <nickc@redhat.com>
+
+	* elf-bfd.h (struct elf_backend_data): Add symbol_section_index
+	callback.
+	* elfxx-target.h (elf_backend_symbol_section_index): Provide
+	default definition.
+	(elfNN_bed): Initialise the symbol_section_index field.
+	* elf.c (swap_out_syms): Call symbol_section_index, if defined, on
+	OS and PROC specific section indicies.  Warn if converting other
+	reserved incidies to SHN_ABS.
+
+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25537
+	* cpu-z80.c: Add machine type compatibility checking.
+
+2020-02-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25355
+	* plugin.c (plugin_list_entry): Remove handle.
+	(try_load_plugin): Call dlclose before return.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* libbfd-in.h (_bfd_constant_p): Define.
+	(_bfd_alloc_and_read, _bfd_malloc_and_read): Check read size against
+	file size before allocating memory.
+	* coffgen.c (_bfd_coff_get_external_symbols): Remove file size check.
+	* elf.c (bfd_elf_get_str_section): Likewise.
+	(_bfd_elf_slurp_version_tables): Likewise.
+	* libbfd.h: Regenerate.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* libbfd-in.h (_bfd_alloc_and_read, _bfd_malloc_and_read): New.
+	* aoutx.h (aout_get_external_symbols): Replace calls to
+	bfd_[m]alloc and bfd_bread with call to _bfd_[m]alloc_and_read.
+	(slurp_reloc_table): Likewise.
+	* archive.c (do_slurp_bsd_armap): Likewise.
+	(do_slurp_coff_armap): Likewise.
+	* archive64.c (_bfd_archive_64_bit_slurp_armap): Likewise.
+	* coff-rs6000.c (_bfd_xcoff_slurp_armap): Likewise.
+	* coff64-rs6000.c (xcoff64_slurp_armap): Likewise.
+	* coffcode.h (coff_set_arch_mach_hook, buy_and_read): Likewise.
+	* coffgen.c (coff_real_object_p, coff_object_p, build_debug_section),
+	(_bfd_coff_get_external_symbols): Likewise.
+	* ecoff.c (ecoff_slurp_symbolic_header),
+	(_bfd_ecoff_slurp_symbolic_info, ecoff_slurp_reloc_table),
+	(_bfd_ecoff_slurp_armap, ecoff_link_add_object_symbols, READ),
+	(ecoff_indirect_link_order): Likewise.
+	* elf.c (bfd_elf_get_str_section, setup_group, elf_read_notes),
+	(_bfd_elf_slurp_version_tables): Likewise.
+	* elf32-m32c.c (m32c_elf_relax_section): Likewise.
+	* elf32-rl78.c (rl78_elf_relax_section): Likewise.
+	* elf32-rx.c (elf32_rx_relax_section): Likewise.
+	* elf64-alpha.c (READ): Likewise.
+	* elf64-mips.c (mips_elf64_slurp_one_reloc_table): Likewise.
+	* elf64-sparc.c (elf64_sparc_slurp_one_reloc_table): Likewise.
+	* elfcode.h (elf_slurp_symbol_table),
+	(elf_slurp_reloc_table_from_section): Likewise.
+	* elflink.c (elf_link_add_object_symbols),
+	(elf_link_check_versioned_symbol): Likewise.
+	* elfxx-mips.c (READ): Likewise.
+	* i386lynx.c (slurp_reloc_table): Likewise.
+	* lynx-core.c (lynx_core_file_p): Likewise.
+	* mach-o.c (bfd_mach_o_canonicalize_relocs),
+	(bfd_mach_o_read_symtab_strtab, bfd_mach_o_alloc_and_read),
+	(bfd_mach_o_read_prebound_dylib, bfd_mach_o_read_dyld_content
+	* pdp11.c (aout_get_external_symbols, slurp_reloc_table
+	* pef.c (bfd_pef_print_loader_section, bfd_pef_scan_start_address),
+	(bfd_pef_parse_symbols): Likewise.
+	* peicode.h (pe_ILF_object_p, pe_bfd_object_p
+	* som.c (setup_sections, som_slurp_string_table),
+	(som_slurp_reloc_table, som_bfd_count_ar_symbols),
+	(som_bfd_fill_in_ar_symbols): Likewise.
+	* vms-alpha.c (module_find_nearest_line, evax_bfd_print_dst),
+	(evax_bfd_print_image): Likewise.
+	* vms-lib.c (_bfd_vms_lib_archive_p): Likewise.
+	* wasm-module.c (wasm_scan): Likewise.
+	* xcofflink.c (xcoff_link_add_symbols): Likewise.
+	* xsym.c (bfd_sym_read_name_table),
+	(bfd_sym_print_type_information_table_entry): Likewise.
+	* libbfd.h: Regenerate.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* aoutx.h (slurp_reloc_table): Allocate reloc_cache after
+	reading external relocs.
+	* ecoff.c (ecoff_slurp_reloc_table): Likewise.
+	* archive.c (_bfd_write_archive_contents): Don't twiddle bfd_error
+	after bfd_bread.
+	* archive64.c (_bfd_archive_64_bit_slurp_armap): Remove unnecessary
+	bfd_release.
+	* elf32-m32c.c (m32c_offset_for_reloc): Make shndx_buf a bfd_byte*.
+	(m32c_elf_relax_section): Likewise.
+	* elf32-rl78.c (rl78_offset_for_reloc): Likewise.
+	(rl78_elf_relax_section): Likewise.
+	* elf32-rx.c (rx_offset_for_reloc): Likewise.
+	(elf32_rx_relax_section): Likewise.
+	* mach-o.c (bfd_mach_o_alloc_and_read): Move earlier with better
+	parameter types and use..
+	(bfd_mach_o_read_dylinker, bfd_mach_o_read_dylib),
+	(bfd_mach_o_read_fvmlib, bfd_mach_o_read_str): ..in these functions.
+	* peicode.h (pe_bfd_object_p): Don't zero the part of opthdr
+	being read from file, just the extra.
+	* som.c (som_slurp_symbol_table): Allocate internal symbol buffer
+	after reading external syms.  Free on failure.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* coffcode.h (buy_and_read, coff_slurp_line_table),
+	(coff_slurp_symbol_table, coff_slurp_reloc_table): Replace
+	bfd_[z][m]alloc2 calls with _bfd_mul_overflow followed by the
+	corresponding bfd_alloc call.  Adjust variables to suit.
+	* coffgen.c (_bfd_coff_get_external_symbols): Likewise.
+	* ecoff.c (_bfd_ecoff_slurp_symbolic_info),
+	(_bfd_ecoff_slurp_symbol_table, READ): Likewise.
+	* elf.c (bfd_elf_get_elf_syms, setup_group, bfd_section_from_shdr),
+	(swap_out_syms, _bfd_elf_slurp_version_tables): Likewise.
+	* elf32-m32c.c (m32c_elf_relax_section): Likewise.
+	* elf32-rl78.c (rl78_elf_relax_section): Likewise.
+	* elf32-rx.c (elf32_rx_relax_section): Likewise.
+	* elf64-alpha.c (READ): Likewise.
+	* elfcode.h (elf_object_p, elf_write_relocs, elf_write_shdrs_and_ehdr),
+	(elf_slurp_symbol_table, elf_slurp_reloc_table),
+	(bfd_from_remote_memory): Likewise.
+	* elfcore.h (core_find_build_id): Likewise.
+	* elfxx-mips.c (READ): Likewise.
+	* mach-o.c (bfd_mach_o_mangle_sections),
+	(bfd_mach_o_read_symtab_symbols, bfd_mach_o_read_thread),
+	(bfd_mach_o_read_dysymtab, bfd_mach_o_flatten_sections),
+	(bfd_mach_o_scan, bfd_mach_o_fat_archive_p): Likewise.
+	* som.c (setup_sections, som_prep_for_fixups)
+	(som_build_and_write_symbol_table, som_slurp_symbol_table),
+	(som_slurp_reloc_table, som_bfd_count_ar_symbols),
+	(som_bfd_fill_in_ar_symbols, som_slurp_armap),
+	(som_bfd_ar_write_symbol_stuff): Likewise.
+	* vms-alpha.c (vector_grow1): Likewise.
+	* vms-lib.c (vms_add_index): Likewise.
+	* wasm-module.c (wasm_scan_name_function_section): Likewise.
+	* libbfd.c (bfd_malloc2, bfd_realloc2, bfd_zmalloc2): Delete.
+	* opncls.c (bfd_alloc2, bfd_zalloc2): Delete.
+	* libbfd-in.h (bfd_malloc2, bfd_realloc2, bfd_zmalloc2),
+	(bfd_alloc2, bfd_zalloc2): Delete.
+	(_bfd_mul_overflow): Define.
+	* libbfd.h: Regenerate.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* elf.c (bfd_section_from_shdr): Use bfd_zalloc rather than
+	bfd_zalloc2.
+	(assign_section_numbers): Likewise.
+	(elf_map_symbols): Likewise, and bfd_alloc rather than bfd_alloc2.
+	(_bfd_elf_map_sections_to_segments): Use bfd_malloc rather than
+	bfd_malloc2, size_t amt, and unsigned tls_count.
+	(rewrite_elf_program_header): Use bfd_malloc and size_t amt.
+	* elflink.c (elf_create_symbuf): Use bfd_malloc.
+	(elf_output_implib): Use bfd_alloc.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* bfd.c (struct bfd): Move format and direction to other
+	bitfields.  Add "size".
+	* bfdio.c (bfd_get_size): Cache size when not writing file.
+	* opncls.c (bfd_get_debug_link_info_1): Allow for bfd_get_size
+	returning zero, ie. unknown.
+	(bfd_get_alt_debug_link_info): Likewise.
+	* bfd-in2.h: Regenerate.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* coffgen.c (_bfd_coff_get_external_symbols): Don't call
+	bfd_get_file_size twice.
+	(_bfd_coff_read_string_table): Allow for bfd_get_file_size
+	zero, ie. unknown, return.
+	* elf-attrs.c (_bfd_elf_parse_attributes): Likewise.
+	* elfcode.h (elf_swap_shdr_in): Likewise.
+	(elf_object_p): Don't call bfd_get_file_size twice and correct
+	file size check.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* mach-o.c (bfd_mach_o_flatten_sections): Return a bfd_boolean,
+	FALSE if memory alloc fails.  Adjust calls.
+	* som.c (som_prep_for_fixups): Likewise.
+	* vms-alpha.c (alpha_vms_add_fixup_lp, alpha_vms_add_fixup_ca),
+	(alpha_vms_add_fixup_qr, alpha_vms_add_fixup_lr),
+	(alpha_vms_add_lw_reloc, alpha_vms_add_qw_reloc): Likewise.
+	* som.c (som_build_and_write_symbol_table): Return via error_return
+	on seek failure.
+	* vms-alpha.c (VEC_APPEND): Adjust for vector_grow1 changes.
+	(VEC_APPEND_EL): Delete.
+	(vector_grow1): Return pointer to element.  Catch overflow.
+	Return NULL on memory allocation failure.
+	(alpha_vms_add_fixup_lp): Replace VEC_APPEND_EL with VEC_APPEND.
+	(alpha_vms_add_fixup_ca): Likewise.
+	(alpha_vms_link_add_object_symbols): Check VEC_APPEND result
+	before using.
+	* elf.c (bfd_section_from_shdr): Check bfd_zalloc2 result.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* aix386-core.c (aix386_core_file_p): Use size_t for "amt".
+	* aout-target.h (object_p): Likewise.
+	* aout-tic30.c (tic30_aout_object_p): Likewise.
+	* aoutx.h (some_aout_object_p, mkobject, make_empty_symbol),
+	(emit_stringtab, write_syms, link_hash_table_create),
+	(aout_link_write_other_symbol): Likewise.
+	* archive.c (_bfd_generic_mkarchive, bfd_generic_archive_p),
+	(bfd_ar_hdr_from_filesystem, _bfd_write_archive_contents),
+	(_bfd_compute_and_write_armap): Likewise.
+	* archures.c (bfd_arch_list): Likewise.
+	* bfd.c (bfd_record_phdr): Likewise.
+	* binary.c (binary_canonicalize_symtab): Likewise.
+	* cisco-core.c (cisco_core_file_validate): Likewise.
+	* coff-arm.c (coff_arm_link_hash_table_create, find_thumb_glue),
+	(find_arm_glue, record_arm_to_thumb_glue),
+	(record_thumb_to_arm_glue): Likewise.
+	* coff-ppc.c (ppc_coff_link_hash_table_create, record_toc),
+	(ppc_allocate_toc_section): Likewise.
+	* coff-rs6000.c (_bfd_xcoff_mkobject, _bfd_xcoff_archive_p): Likewise.
+	* coff-sh.c (sh_relax_section): Likewise.
+	* coff64-rs6000.c (xcoff64_archive_p): Likewise.
+	* coffcode.h (handle_COMDAT, coff_new_section_hook),
+	(coff_set_alignment_hook, coff_mkobject),
+	(coff_compute_section_file_positions): Likewise.
+	* coffgen.c (coff_make_empty_symbol, coff_bfd_make_debug_symbol),
+	(coff_find_nearest_line_with_names),
+	( bfd_coff_set_symbol_class): Likewise.
+	* cofflink.c (_bfd_coff_link_hash_table_create),
+	(_bfd_coff_link_input_bfd): Likewise.
+	* dwarf1.c (alloc_dwarf1_unit, alloc_dwarf1_func): Likewise.
+	* dwarf2.c (read_abbrevs, read_attribute_value, add_line_info),
+	(build_line_info_table, sort_line_sequences),
+	(line_info_add_include_dir, line_info_add_file_name),
+	(decode_line_info, scan_unit_for_symbols, parse_comp_unit),
+	(place_sections, _bfd_dwarf2_slurp_debug_info): Likewise.
+	* ecoff.c (_bfd_ecoff_mkobject, _bfd_ecoff_make_empty_symbol),
+	(_bfd_ecoff_find_nearest_line),
+	(_bfd_ecoff_bfd_link_hash_table_create): Likewise.
+	* ecofflink.c (bfd_ecoff_debug_init): Likewise.
+	* elf-hppa.h (_bfd_elf_hppa_gen_reloc_type): Likewise.
+	* elf-m10300.c (mn10300_elf_relax_section),
+	(elf32_mn10300_link_hash_table_create): Likewise.
+	* elf-strtab.c (_bfd_elf_strtab_init): Likewise.
+	* elf.c (make_mapping, copy_elf_program_header): Likewise.
+	* elf32-arm.c (elf32_arm_link_hash_table_create),
+	(elf32_arm_setup_section_lists, elf32_arm_check_relocs),
+	(elf32_arm_new_section_hook): Likewise.
+	* elf32-avr.c (elf_avr_new_section_hook),
+	(elf32_avr_link_hash_table_create, get_local_syms),
+	(elf32_avr_setup_section_lists): Likewise.
+	* elf32-bfin.c (bfinfdpic_elf_link_hash_table_create),
+	(bfin_link_hash_table_create): Likewise.
+	* elf32-cr16.c (elf32_cr16_link_hash_table_create): Likewise.
+	* elf32-cris.c (elf_cris_link_hash_table_create): Likewise.
+	* elf32-csky.c (csky_elf_link_hash_table_create),
+	(csky_elf_check_relocs, elf32_csky_setup_section_lists): Likewise.
+	* elf32-frv.c (frvfdpic_elf_link_hash_table_create): Likewise.
+	* elf32-hppa.c (elf32_hppa_link_hash_table_create),
+	(elf32_hppa_setup_section_lists, get_local_syms): Likewise.
+	* elf32-i386.c (elf_i386_check_relocs): Likewise.
+	* elf32-lm32.c (lm32_elf_link_hash_table_create): Likewise.
+	* elf32-m32r.c (m32r_elf_link_hash_table_create),
+	(m32r_elf_check_relocs): Likewise.
+	* elf32-m68hc1x.c (m68hc11_elf_hash_table_create),
+	(elf32_m68hc11_setup_section_lists),
+	(elf32_m68hc11_size_stubs): Likewise.
+	* elf32-m68k.c (elf_m68k_link_hash_table_create): Likewise.
+	* elf32-metag.c (elf_metag_link_hash_table_create),
+	(elf_metag_setup_section_lists): Likewise.
+	* elf32-microblaze.c (microblaze_elf_link_hash_table_create),
+	(microblaze_elf_check_relocs): Likewise.
+	* elf32-nds32.c (nds32_elf_link_hash_table_create),
+	(nds32_elf_check_relocs): Likewise.
+	* elf32-nios2.c (nios2_elf32_setup_section_lists),
+	(get_local_syms, nios2_elf32_check_relocs),
+	(nios2_elf32_link_hash_table_create): Likewise.
+	* elf32-or1k.c (or1k_elf_link_hash_table_create),
+	(or1k_elf_check_relocs): Likewise.
+	* elf32-ppc.c (ppc_elf_modify_segment_map, update_plt_info): Likewise.
+	* elf32-pru.c (pru_elf32_link_hash_table_create): Likewise.
+	* elf32-s390.c (elf_s390_link_hash_table_create),
+	(elf_s390_check_relocs): Likewise.
+	* elf32-score.c (score_elf_create_got_section),
+	(s3_elf32_score_new_section_hook),
+	(elf32_score_link_hash_table_create): Likewise.
+	* elf32-score7.c (score_elf_create_got_section),
+	(s7_elf32_score_new_section_hook): Likewise.
+	* elf32-sh.c (sh_elf_link_hash_table_create),
+	(sh_elf_check_relocs): Likewise.
+	* elf32-tic6x.c (elf32_tic6x_link_hash_table_create),
+	(elf32_tic6x_new_section_hook, elf32_tic6x_check_relocs): Likewise.
+	* elf32-tilepro.c (tilepro_elf_link_hash_table_create),
+	(tilepro_elf_check_relocs): Likewise.
+	* elf32-v850.c (remember_hi16s_reloc): Likewise.
+	* elf32-vax.c (elf_vax_link_hash_table_create): Likewise.
+	* elf32-xtensa.c (elf_xtensa_link_hash_table_create),
+	(elf_xtensa_new_section_hook): Likewise.
+	* elf64-alpha.c (elf64_alpha_bfd_link_hash_table_create),
+	(get_got_entry, elf64_alpha_check_relocs): Likewise.
+	* elf64-hppa.c (elf64_hppa_hash_table_create): Likewise.
+	* elf64-ia64-vms.c (elf64_ia64_object_p): Likewise.
+	* elf64-mmix.c (mmix_elf_new_section_hook): Likewise.
+	* elf64-ppc.c (ppc64_elf_new_section_hook),
+	(ppc64_elf_link_hash_table_create, update_local_sym_info),
+	(update_plt_info, ppc64_elf_check_relocs): Likewise.
+	* elf64-s390.c (elf_s390_link_hash_table_create),
+	(elf_s390_check_relocs): Likewise.
+	* elf64-x86-64.c (elf_x86_64_check_relocs): Likewise.
+	* elflink.c (bfd_elf_link_record_local_dynamic_symbol),
+	(_bfd_elf_link_find_version_dependencies, elf_link_add_object_symbols),
+	(elf_link_add_archive_symbols, compute_bucket_count),
+	(bfd_elf_size_dynsym_hash_dynstr, _bfd_elf_link_hash_table_create),
+	(bfd_elf_get_bfd_needed_list, elf_link_swap_symbols_out),
+	(bfd_elf_final_link): Likewise.
+	* elfnn-aarch64.c (elfNN_aarch64_link_hash_table_create),
+	(elfNN_aarch64_setup_section_lists, elfNN_aarch64_check_relocs),
+	(elfNN_aarch64_new_section_hook): Likewise.
+	* elfnn-ia64.c (elfNN_ia64_object_p): Likewise.
+	* elfnn-riscv.c (riscv_elf_link_hash_table_create),
+	(riscv_elf_check_relocs): Likewise.
+	* elfxx-mips.c (_bfd_mips_elf_new_section_hook),
+	(_bfd_mips_elf_add_symbol_hook, _bfd_mips_elf_check_relocs),
+	(_bfd_mips_elf_modify_segment_map, _bfd_mips_elf_set_section_contents),
+	(_bfd_mips_elf_link_hash_table_create): Likewise.
+	* elfxx-sparc.c (_bfd_sparc_elf_link_hash_table_create),
+	(_bfd_sparc_elf_check_relocs),
+	(_bfd_sparc_elf_new_section_hook): Likewise.
+	* elfxx-tilegx.c (tilegx_elf_link_hash_table_create),
+	(tilegx_elf_check_relocs): Likewise.
+	* elfxx-x86.c (_bfd_x86_elf_link_hash_table_create): Likewise.
+	* format.c (bfd_check_format_matches): Likewise.
+	* hash.c (_bfd_stringtab_init): Likewise.
+	* ihex.c (ihex_scan): Likewise.
+	* irix-core.c (irix_core_core_file_p): Likewise.
+	* linker.c (bfd_wrapped_link_hash_lookup),
+	(_bfd_generic_link_hash_table_create),
+	(_bfd_generic_reloc_link_order): Likewise.
+	* lynx-core.c (lynx_core_file_p): Likewise.
+	* netbsd-core.c (netbsd_core_file_p): Likewise.
+	* osf-core.c (osf_core_core_file_p): Likewise.
+	* pdp11.c (some_aout_object_p, mkobject, make_empty_symbol),
+	(link_hash_table_create, aout_link_write_other_symbol): Likewise.
+	* peXXigen.c (_bfd_XX_bfd_copy_private_section_data): Likewise.
+	* peicode.h (pe_mkobject): Likewise.
+	* ppcboot.c (ppcboot_mkobject, ppcboot_canonicalize_symtab): Likewise.
+	* ptrace-core.c (ptrace_unix_core_file_p): Likewise.
+	* sco5-core.c (read_uarea): Likewise.
+	* som.c (hppa_som_gen_reloc_type, som_object_p, som_prep_headers),
+	(som_write_fixups, som_write_space_strings, som_write_symbol_strings),
+	(som_finish_writing, som_canonicalize_symtab, som_new_section_hook),
+	(som_bfd_copy_private_section_data, bfd_som_set_section_attributes),
+	(bfd_som_attach_aux_hdr, som_write_armap): Likewise.
+	* srec.c (srec_scan): Likewise.
+	* syms.c (_bfd_generic_make_empty_symbol): Likewise.
+	* targets.c (bfd_target_list): Likewise.
+	* tekhex.c (first_phase, tekhex_sizeof_headers): Likewise.
+	* trad-core.c (trad_unix_core_file_p): Likewise.
+	* vms-alpha.c (vms_initialize, alpha_vms_bfd_link_hash_table_create),
+	(vms_new_section_hook): Likewise.
+	* wasm-module.c (wasm_make_empty_symbol): Likewise.
+	* xcofflink.c (xcoff_get_section_contents),
+	(_bfd_xcoff_bfd_link_hash_table_create, xcoff_set_import_path),
+	(xcoff_find_function, bfd_xcoff_link_record_set, xcoff_build_ldsym),
+	(bfd_xcoff_size_dynamic_sections, xcoff_link_input_bfd): Likewise.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* elfxx-riscv.c (riscv_multi_letter_ext_valid_p): Don't use C99.
+
+2020-02-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* plugin.c (try_load_plugin): Make plugin_list_iter an argument
+	and use it if it isn't NULL.  Remove has_plugin_p argument.  Add
+	a build_list_p argument.  Don't search plugin_list.  Short circuit
+	when building the plugin list.
+	(has_plugin): Renamed to has_plugin_list.
+	(bfd_plugin_set_plugin): Don't set has_plugin.
+	(bfd_plugin_specified_p): Check plugin_list instead.
+	(build_plugin_list): New function.
+	(load_plugin): Call build_plugin_list and use plugin_list.
+
+2020-02-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25355
+	* plugin.c (try_claim): Always clean up for LTO wrapper.
+	(try_load_plugin): Treat each object as independent.  Create a
+	copy for plugin name.
+
+2020-02-11  Nick Clifton  <nickc@redhat.com>
+
+	* elf32-msp430.c (msp430_final_link_relocate): Always use longs
+	for addresses in print statements.
+	(msp430_elf_relax_delete_bytes): Likewise.
+	(msp430_elf_relax_add_words): Likewise.
+	(msp430_elf_relax_section): Likewise.
+
+2020-02-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* plugin.c (add_symbols): Clear plugin_data memory.
+
+2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25355
+	* configure.ac (HAVE_EXECUTABLE_SUFFIX): New AC_DEFINE.
+	(EXECUTABLE_SUFFIX): Likewise.
+	* config.in: Regenerated.
+	* configure: Likewise.
+	* plugin.c (bfd_plugin_close_and_cleanup): Removed.
+	(plugin_list_entry): Add all_symbols_read, cleanup_handler,
+	gcc, lto_wrapper, resolution_file, resolution_option, gcc_env,
+	real_bfd, real_nsyms, real_syms, lto_nsyms and lto_syms.
+	(get_lto_wrapper): New.
+	(setup_lto_wrapper_env): Likewise.
+	(current_plugin): Likewise.
+	(register_all_symbols_read): Likewise.
+	(register_cleanup): Likewise.
+	(get_symbols): Likewise.
+	(add_input_file): Likewise.
+	(bfd_plugin_close_and_cleanup): Likewise.
+	(claim_file): Removed.
+	(register_claim_file): Set current_plugin->claim_file.
+	(add_symbols): Make a copy of LTO symbols.  Set lto_nsyms and
+	lto_syms in current_plugin.
+	(try_claim): Use current_plugin->claim_file.  Call LTO plugin
+	all_symbols_read handler.  Copy real symbols to plugin_data.
+	Call LTO plugin cleanup handler.  Clean up for LTO wrapper.
+	(try_load_plugin): Don't reuse the previous plugin for LTO
+	wrapper.  Set up GCC LTO wrapper if possible.  Don't set
+	plugin_list_iter->claim_file.
+	(bfd_plugin_canonicalize_symtab): Use real LTO symbols if
+	possible.
+	* plugin.h (plugin_data_struct): Add real_bfd, real_nsyms and
+	real_syms.
+
+2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* elf32-msp430.c (msp430_elf_relax_section): Before relaxing a branch,
+	check if previous instruction matches a conditional jump inserted
+	earlier. Invert conditional jump and delete branch in this case.
+
+2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* elf32-msp430.c (msp430_elf_relax_add_two_words): Rename to
+	msp430_elf_relax_add_words. Support insertion of either one or two
+	words.
+	(msp430_elf_relax_section): Catch opcode of 0x3c00 when relocation
+	needs to be grown. Handle insertion of branch instruction to replace
+	jump.
+
+2020-02-10  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* elf32-msp430.c (msp430_final_link_relocate): Add printf statements for
+	debugging relocations.
+	(msp430_elf_relax_delete_bytes): Likewise.
+	(msp430_elf_relax_add_two_words): Likewise.
+	(msp430_elf_relax_section): Likewise.
+
+2020-02-10  Alan Modra  <amodra@gmail.com>
+
+	* archures.c: Wrap overlong z80 comments.
+	* bfd-in2.h: Regenerate.
+
+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25469
+	* archures.c: Add GBZ80 and Z80N machine values.
+	* reloc.c: Add BFD_RELOC_Z80_16_BE.
+	* coff-z80.c: Add support for new reloc.
+	* coffcode.h: Add support for new machine values.
+	* cpu-z80.c: Add support for new machine names.
+	* elf32-z80.c: Add support for new reloc.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Regenerate.
+
+2020-02-07  Nick Clifton  <nickc@redhat.com>
+
+	PR 23932
+	* elf.c (rewrite_elf_program_header): Do not complain if no
+	sections are mapped to a segment.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25490
+	* elflink.c (_bfd_elf_gc_mark_extra_sections): Issue an error
+	for garbage collection on __patchable_function_entries section
+	without linked-to section.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25381
+	* bfd-in2.h: Regenerated.
+	* elflink.c (_bfd_elf_gc_mark_extra_sections): Call mark_hook
+	on section if gc_mark of any of its linked-to sections is set
+	and don't set gc_mark again.
+	* section.c (asection): Add linked_to_symbol_name to map_head
+	union.
+
+2020-02-06  Maciej W. Rozycki  <macro@wdc.com>
+
+	* elf32-v850.c (v850_elf_relax_section): Fix the index used for
+	reporting an unrecognized instruction with R_V850_LONGJUMP.
+
+2020-02-05  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc_stub_plt_branch): Match comment with reality.
+
+2020-02-04  Alan Modra  <amodra@gmail.com>
+
+	* elf32-ppc.c (ppc_elf_relocate_section): After applying
+	R_PPC_VLE_ADDR20, goto copy_reloc.
+
+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* bfd-in2.h: Regenerated.
+	* section.c (SEC_ASSEMBLER_SECTION_ID): Fix a typo in comments.
+
+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25380
+	* bfd-in2.h: Regenerated.
+	* ecoff.c (bfd_debug_section): Add section_id.
+	* section.c (bfd_section): Add section_id.
+	(SEC_ASSEMBLER_SECTION_ID): New.
+	(BFD_FAKE_SECTION): Add section_id.
+
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	* config.bfd: Move the c30-aout and tic30-aout targets onto the
+	obsolete list.
+
+2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>
+
+	* elf-eh-frame.c (_bfd_elf_write_section_eh_frame): DW_EH_PE_datarel
+	encodings are relative to the GOT on nios2, too.
+
+2020-01-31  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (elf32-target.h, elf64-target.h): Don't use a temp
+	file.  Use $< and $@ in rules.
+	(elf32-aarch64.c, elf64-aarch64.c): Likewise.
+	(elf32-ia64.c, elf64-ia64.c): Likewise.
+	(elf32-riscv.c, elf64-riscv.c): Likewise.
+	(peigen.c, pepigen.c, pex64igen.c): Likewise.
+	(elf32-aarch64.c, elf64-aarch64.c): Don't emit $srcdir on #line.
+	(elf32-riscv.c, elf64-riscv.c): Likewise, and use $(SED).
+	(elf32-ia64.c, elf64-ia64.c): Do emit #line.
+	(peigen.c, pepigen.c, pex64igen.c): Likewise.
+	* Makefile.in: Regenerate.
+
+2020-01-31  Alan Modra  <amodra@gmail.com>
+
+	PR 4110
+	* elf.c (setup_group): Don't clear entire section contents,
+	just the padding after group flags.  Release alloc'd memory
+	after a seek or read failure.
+
+2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* peXXigen.c (pe_is_repro): New function.
+	(_bfd_XX_print_private_bfd_data_common): Note timestamp is
+	actually a build hash if PE_IMAGE_DEBUG_TYPE_REPRO is present.
+
+2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* peXXigen.c (debug_type_names): Add names for new debug data type
+	values.
+
+2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>
+
+	* peXXigen.c (pe_print_debugdata): Fix the iteration variable for
+	inner loop.  Fix a memory leak.
+
+2020-01-30  Alan Modra  <amodra@gmail.com>
+
+	* coffgen.c (coff_real_object_p): Don't clear obj_coff_keep_syms
+	or obj_coff_keep_strings here.
+	(coff_get_normalized_symtab): Free external syms directly.
+	* xcofflink.c (xcoff_link_input_bfd): Restore obj_coff_keep_syms
+	on error exit path.
+
+2020-01-27  Jim Wilson  <jimw@sifive.com>
+
+	* cpu-riscv.c (riscv_scan): New.
+	(N): Change bfd_default_scan to riscv_scan.
+
+2020-01-27  Andreas Schwab  <schwab@suse.de>
+
+	* Makefile.am (ALL_MACHINES): Remove cpu-plugin.lo.
+	(ALL_MACHINES_CFILES): Remove cpu-plugin.c.
+	* Makefile.in: Regenerate.
+	* cpu-plugin.c: Remove.
+	* archures.c (enum bfd_architecture): Remove bfd_arch_plugin.
+	(bfd_plugin_arch): Remove declaration.
+	* bfd-in2.h: Regenerate.
+	* po/SRC-POTFILES.in: Regenerate.
+
+2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	PR ld/25458
+	* elflink.c (_bfd_elf_gc_mark_rsec): Mark all weak aliases.
+
+2020-01-24  Jim Wilson  <jimw@sifive.com>
+
+	* elfxx-riscv.c (riscv_get_prefix_class): Format s case like others.
+	(riscv_parse_prefixed_ext): Fix s extension comment and reword to
+	avoid over long line.
+
+2020-01-24  Nick Clifton  <nickc@redhat.com>
+
+	PR 25447
+	* coffgen.c (_bfd_coff_close_and_cleanup): Do not clear the keep
+	syms and keep strings flags as these may have been set in order to
+	prevent a bogus call to free.
+
+2020-01-23  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2020-01-23  Alan Modra  <amodra@gmail.com>
+
+	PR 25444
+	* elf.c (assign_file_positions_for_load_sections): Avoid divide
+	by zero when p_align is zero.
+
+2020-01-22  Maxim Blinov  <maxim.blinov@embecosm.com>
+
+	* bfd/elfnn-riscv.c (riscv_skip_prefix): New.
+	(riscv_prefix_cmp): Likewise.
+	(riscv_non_std_ext_p): Deleted.
+	(riscv_std_sv_ext_p): Likewise.
+	(riscv_non_std_sv_ext_p): Likewise.
+	(riscv_merge_non_std_and_sv_ext): Rename to...
+	(riscv_merge_multi_letter_ext): and modified to use riscv_prefix_cmp.
+	(riscv_merge_arch_attr_info): Replace 3 calls to
+	riscv_merge_non_std_and_sv_ext with single call to
+	riscv_merge_multi_letter_ext.
+	* bfd/elfxx-riscv.c (riscv_parse_std_ext): Break if we
+	encounter a 'z' prefix.
+	(riscv_get_prefix_class): New function, return prefix class based
+	on first few characters of input string.
+	(riscv_parse_config): New structure to factor out minor differences
+	in extension class parsing behaviour.
+	(riscv_parse_sv_or_non_std_ext): Rename to...
+	(riscv_parse_prefixed_ext): and parameterise with
+	riscv_parse_config.
+	(riscv_std_z_ext_strtab, riscv_std_s_ext_strtab): New.
+	(riscv_multi_letter_ext_valid_p): New.
+	(riscv_ext_x_valid_p, riscv_ext_z_valid_p, riscv_ext_s_valid_p): New.
+	(riscv_parse_subset): Delegate all non-single-letter parsing work
+	to riscv_parse_prefixed_ext.
+	* bfd/elfxx-riscv.h (riscv_isa_ext_class): New type.
+	(riscv_get_prefix_class): Declare.
+
+2020-01-22  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (struct ppc_link_hash_table): Add tga_group.
+	(ppc64_elf_archive_symbol_lookup): Extract __tls_get_addr_opt for
+	__tls_get_addr_desc.
+	(ppc64_elf_size_stubs): Add section for linker generated
+	__tls_get_addr_desc wrapper function.  Loop at least once if
+	generating this function.
+	(emit_tga_desc, emit_tga_desc_eh_frame): New functions.
+	(ppc64_elf_build_stubs): Generate __tls_get_addr_desc.
+
+2020-01-22  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.h (struct ppc64_elf_params): Add no_tls_get_addr_regsave.
+	* elf64-ppc.c (struct ppc_link_hash_table): Add tga_desc and
+	tga_desc_fd.
+	(is_tls_get_addr): Match tga_desc and tga_desc_df too.
+	(STDU_R1_0R1, ADDI_R1_R1): Define.
+	(tls_get_addr_prologue, tls_get_addr_epilogue): New functions.
+	(ppc64_elf_tls_setup): Set up tga_desc and tga_desc_fd.  Indirect
+	tga_desc_fd to opt_fd, and tga_desc to opt.  Set
+	no_tls_get_addr_regsave.
+	(branch_reloc_hash_match): Add hash3 and hash4.
+	(ppc64_elf_tls_optimize): Handle tga_desc_fd and tga_desc too.
+	(ppc64_elf_size_dynamic_sections): Likewise.
+	(ppc64_elf_relocate_section): Likewise.
+	(plt_stub_size, build_plt_stub): Likewise.  Size regsave
+	__tls_get_addr stub.
+	(build_tls_get_addr_stub): Build regsave __tls_get_addr stub and
+	eh_frame.
+	(ppc_size_one_stub): Handle tga_desc_fd and tga_desc too.  Size
+	eh_frame for regsave __tls_get_addr.
+
+2020-01-22  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc64_elf_size_stubs): Correct condition under
+	which __tls_get_addr calls will be eliminated.
+
+2020-01-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/pt.po: Updates Portuguese translation.
+	* po/ru.po: Updated Russian translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-01-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25416
+	* elf64-x86-64.c (elf_x86_64_check_tls_transition): Support
+	"rex leal x@tlsdesc(%rip), %reg" and "call *x@tlsdesc(%eax)" in
+	X32 mode.
+	(elf_x86_64_relocate_section): In x32 mode, for GDesc -> LE
+	transition, relax "rex leal x@tlsdesc(%rip), %reg" to
+	"rex movl $x@tpoff, %reg", for GDesc -> IE transition, relax
+	"rex leal x@tlsdesc(%rip), %reg" to
+	"rex movl x@gottpoff(%rip), %eax".  For both transitions, relax
+	"call *(%eax)" to "nopl (%rax)".
+
+2020-01-20  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (LD_R11_0R3, CMPDI_R11_0, STD_R11_0R1, LD_R11_0R1),
+	(MTLR_R11): Don't define.
+	(LD_R0_0R3, CMPDI_R0_0): Define.
+	(build_tls_get_addr_stub): Don't use r11 in stub.
+
+2020-01-20  Alan Modra  <amodra@gmail.com>
+
+	* elf64-ppc.c (ppc_elf_hash_entry): New function, use throughout file.
+	(defined_sym_val, is_tls_get_addr): Likewise.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	* version.m4 (BFD_VERSION): Set to 2.34.50.
+	* configure: Regenerate.
+	* po/bfd.pot: Regenerate.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-17  Christian Biesinger  <cbiesinger@google.com>
+
+	* coff-arm.c: Fix spelling error (seperate).
+	* elfxx-riscv.c (riscv_parse_sv_or_non_std_ext): Fix spelling
+	error (seperate).
+	* sysdep.h (strnlen): Fix spelling error (seperate).
+
+2020-01-15  Lars Brinkhoff  <lars@nocrew.org>
+
+	PR 20694
+	* pdp11.c (TARGET_PAGE_SIZE): Set to 8192.
+
+2020-01-15  Alan Modra  <amodra@gmail.com>
+
+	PR 25384
+	* elf64-ppc.c (ELIMINATE_COPY_RELOCS): Update comment.
+	(ppc64_elf_adjust_dynamic_symbol): Don't allow .dynbss copies
+	of function symbols unless dot symbols are present.  Do warn
+	whenever one is created, regardles of whether a PLT entry is
+	also emitted for the function symbol.
+
+2020-01-14  Alan Modra  <amodra@gmail.com>
+
+	* som.c (som_bfd_count_ar_symbols): Error when file position
+	of symbols on chains is not strictly increasing.
+
+2020-01-14  Alan Modra  <amodra@gmail.com>
+
+	* vms.h (VMS_DEBUG): Define as 0.
+	* vms-alpha.c (image_write): Move debug output after bounds check.
+	Tidy bounds check.
+	(_bfd_vms_slurp_eihd): Warning fix.
+	(_bfd_vms_slurp_etir): Init variables to avoid bogus warnings.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_slurp_egsd): Ensure minimum size even
+	for "ignored" records.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* wasm-module.c (wasm_scan_name_function_section): Formatting.
+	Delete asect name check.  Move asect NULL check to wasm_object_p.
+	Correct bounds check of sizes against end.  Replace uses of
+	bfd_zalloc with bfd_alloc, zeroing only necessary bytes.  Use
+	just one bfd_release.
+	(wasm_scan): Don't use malloc/strdup for section names,
+	bfd_alloc instead.  Simplify code prefixing section name.
+	Formatting.  Don't attempt to free memory here..
+	(wasm_object_p): ..do so here.
+
+2020-01-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	PR ld/22269
+	* elf32-arm.c (elf32_arm_final_link_relocate): Use
+	UNDEFWEAK_NO_DYNAMIC_RELOC.
+	(allocate_dynrelocs_for_symbol): Likewise.
+
+2020-01-10  Tamar Christina  <tamar.christina@arm.com>
+
+	PR 25210
+	* elfnn-aarch64.c (_bfd_aarch64_create_stub_section): Remove elfclass.
+
+2020-01-10  Alan Modra  <amodra@gmail.com>
+
+	* coff-alpha.c (alpha_ecoff_object_p): Calculate size in bfd_size_type.
+
+2020-01-09  Nick Clifton  <nickc@redhat.com>
+
+	PR 25221
+	* bfd.c (bfd_convert_section_contents): Check for a compress
+	header size that is larger than the actual section size.
+
+2020-01-08  Alan Modra  <amodra@gmail.com>
+
+	PR 25351
+	* elflink.c (bfd_elf_final_link): Call _bfd_fix_excluded_sec_syms
+	after removing sections.
+
+2020-01-06  Jim Wilson  <jimw@sifive.com>
+
+	PR 25205
+	* elfnn-riscv.c (riscv_elf_relocate_section) <R_RISCV_CALL>: Add
+	check for !bfd_link_pic (info).
+	<R_RISCV_CALL_PLT>: Move next to R_RISCV_CALL.
+	<R_RISCV_JAL>: Add comment.
+	(_bfd_riscv_relax_section): For plt.offset check, add check for
+	bfd_link_pic (info).  Add comment.
+
+2020-01-06  Alan Modra  <amodra@gmail.com>
+
+	* format.c (bfd_check_format_matches): Ignore bfd_error on target
+	match failures.  Don't init to bfd_error_wrong_format before
+	calling _bfd_check_format.
+
+2020-01-06  Alan Modra  <amodra@gmail.com>
+
+	* vms-alpha.c (_bfd_vms_push, _bfd_vms_pop): Return pass/fail
+	status rather than exiting on stack overflow or underflow.
+	(_bfd_vms_slurp_etir): Adjust to suit.
+
+2020-01-06  Alan Modra  <amodra@gmail.com>
+
+	* som.c (som_bfd_fill_in_ar_symbols): Bounds check som_dict index.
+
+2020-01-06  Alan Modra  <amodra@gmail.com>
+
+	* mach-o.c (bfd_mach_o_read_dylinker): Don't read past end of
+	command.  Check name offset is within command.
+	(bfd_mach_o_read_dylib, bfd_mach_o_read_prebound_dylib),
+	(bfd_mach_o_read_prebind_cksum, bfd_mach_o_read_twolevel_hints),
+	(bfd_mach_o_read_fvmlib, bfd_mach_o_read_dysymtab),
+	(bfd_mach_o_read_symtab, bfd_mach_o_read_uuid),
+	(bfd_mach_o_read_linkedit, bfd_mach_o_read_str),
+	(bfd_mach_o_read_dyld_info, bfd_mach_o_read_version_min),
+	(bfd_mach_o_read_encryption_info, bfd_mach_o_read_source_version),
+	(bfd_mach_o_read_encryption_info_64, bfd_mach_o_read_main),
+	(bfd_mach_o_read_note, bfd_mach_o_read_build_version),
+	(bfd_mach_o_read_segment): Similarly.
+	(bfd_mach_o_read_thread): Properly bound check thread struct.
+	Don't repeat checks on second loop.
+	(bfd_mach_o_read_command): Fail on invalid command length.
+
+2020-01-04  Alan Modra  <amodra@gmail.com>
+
+	* format.c (bfd_check_format_matches): Add preserve_match.
+	Save initial bfd state in "preserve", matched bfd state in
+	"preserve_match".  Save just the first match.  Release
+	bfd_alloc memory.  Restore and finish preserved state as
+	appropriate on all function exit paths.
+
+2020-01-04  Alan Modra  <amodra@gmail.com>
+
+	* mmo.c (mmo_mkobject): Allocate tdata with bfd_zalloc.
+
+2020-01-04  Alan Modra  <amodra@gmail.com>
+
+	* coffgen.c (coff_real_object_p): Free malloc'd memory on target
+	match too.
+
+2020-01-03  Nick Clifton  <nickc@redhat.com>
+
+	PR 25307
+	(bfd_pef_parse_function_stubs): Correct the test that ensures that
+	there is enough data remaining in the code buffer before
+	attempting to read a function stub.
+
+2020-01-03  Nick Clifton  <nickc@redhat.com>
+
+	PR 25308
+	* elf-properties.c (_bfd_elf_convert_gnu_properties): Check the
+	return value from bfd_malloc.
+	* elf32-arm.c (bfd_elf32_arm_vfp11_fix_veneer_locations): Likewise.
+	(bfd_elf32_arm_stm32l4xx_fix_veneer_locations): Likewise.
+	(elf32_arm_filter_cmse_symbols): Likewise.
+	(elf32_arm_write_section): Likewise.
+	* mach-o.c (bfd_mach_o_core_fetch_environment): Likewise.
+	(bfd_mach_o_follow_dsym): Likewise.
+	* pef.c (bfd_pef_print_loader_section): Likewise.
+	(bfd_pef_scan_start_address): Likewise.
+	(bfd_pef_parse_function_stubs): Likewise.
+	(bfd_pef_parse_symbols): Likewise.
+
+2020-01-03  Sergei Trofimovich  <siarheit@google.com>
+
+        * elfnn-ia64.c (elfNN_ia64_merge_private_bfd_data): don't fail
+        on binary inputs ld/PR25316.
+        (is_ia64_elf): new helper to filter on ia64 objects.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* mach-o.c (cpusubtype, bfd_mach_o_header_p): Insert underscore
+	in parameter names.
+	(bfd_mach_o_scan): Insert underscore in two variable names.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* Makefile.am: Add z80-elf target support.
+	* configure.ac: Likewise.
+	* targets.c: Likewise.
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+	* config.bfd: Add z80-elf target support and new arches: ez80 and
+	z180.
+	* elf32-z80.c: New file.
+	* archures.c: Add new z80 architectures: eZ80 and Z180.
+	* coffcode.h: Likewise.
+	* cpu-z80.c: Likewise.
+	* coff-z80.c: Add new relocations for Z80 target and local label
+	check.
+	* reloc.c: Add new relocs.
+	* bfd-in2.h: Regenerate.
+	* libbfd.h: Regenerate.
+
+2020-01-02  Tamar Christina  <tamar.christina@arm.com>
+
+	PR 25210
+	PR 24753
+	* elfnn-aarch64.c (_bfd_aarch64_create_stub_section): Set ELF class.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/bfd/ChangeLog-2014 b/bfd/ChangeLog-2014
index 02b1ef7d958..d35ff8cc1ef 100644
--- a/bfd/ChangeLog-2014
+++ b/bfd/ChangeLog-2014
@@ -621,7 +621,7 @@
 
 	PR binutils/17512
 	* coffgen.c (coff_get_normalized_symtab): Check for an excessive
-	number of auxillary entries.
+	number of auxiliary entries.
 	* ieee.c (next_byte): Convert to a function.  Return FALSE if the
 	next byte is beyond the end of the buffer.
 	(parse_int): Test the return value of next_byte.
diff --git a/bfd/ChangeLog-2009 b/bfd/ChangeLog-2009
index a3f7b24e9d1..1f7f522e693 100644
--- a/bfd/ChangeLog-2009
+++ b/bfd/ChangeLog-2009
@@ -3868,15 +3868,15 @@
 	* coffcode.h (coff_pointerize_aux_hook): Update CSECT_SYM_P to
 	check whether a symbol has csect information.
 	(coff_print_aux): Likewise.
-	* coff-rs6000.c (_bfd_xcoff_swap_aux_in): Handle auxillary csect
+	* coff-rs6000.c (_bfd_xcoff_swap_aux_in): Handle auxiliary csect
 	information for C_AIX_WEAKEXT too.
 	(_bfd_xcoff_swap_aux_out): Likewise.
 	(xcoff_reloc_type_br): Handle defweak symbols too.
-	* coff64-rs6000.c (_bfd_xcoff64_swap_aux_in): Handle auxillary csect
+	* coff64-rs6000.c (_bfd_xcoff64_swap_aux_in): Handle auxiliary csect
 	information for C_AIX_WEAKEXT too.
 	(_bfd_xcoff64_swap_aux_out): Likewise.
 	(xcoff64_reloc_type_br): Handle defweak symbols too.
-	* coffgen.c (coff_print_symbol): Handle auxillary function
+	* coffgen.c (coff_print_symbol): Handle auxiliary function
 	information for C_AIX_WEAKEXT too.
 	* xcofflink.c (_bfd_xcoff_canonicalize_dynamic_symtab): Set BSF_WEAK
 	instead of BSF_GLOBAL if the L_WEAK flag is set.
@@ -3942,7 +3942,7 @@
 	objects in a dynamic link, rather than checking whether csectpp
 	is null.  Always allocate debug_index for other objects,
 	and always go through the loop.  Update the type of debug_index
-	after the change above.  Read the auxillary csect information
+	after the change above.  Read the auxiliary csect information
 	and use xcoff_keep_symbol_p to decide whether a symbol should
 	be kept.  Set its debug_index to -2 if not.
 	(xcoff_link_input_bfd): Update the type of debug_index after
diff --git a/opcodes/ChangeLog-2020 b/opcodes/ChangeLog-2020
new file mode 100644
index 00000000000..92a95254a54
--- /dev/null
+++ b/opcodes/ChangeLog-2020
@@ -0,0 +1,3281 @@
+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (riscv_opcodes): Add sext.[bh] and zext.[bhw].
+
+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>
+
+	* disassemble.h (riscv_get_disassembler): Declare.
+	* disassemble.c (disassembler): Changed to riscv_get_disassembler.
+	* riscv-dis.c (riscv_get_disassembler): Check the elf privileged spec
+	attributes before calling print_insn_riscv.
+	(parse_riscv_dis_option): Same as the assembler, the priority of elf
+	attributes are higher than the options.  If we find the privileged
+	attributes, but the -Mpriv-spec= is different, then output error/warning
+	and still use the elf attributes set.
+
+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (riscv_opcodes): Control fence.i and csr instructions by
+	zifencei and zicsr.
+
+2020-12-04  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* s390-opc.txt: Add risbgz and risbgnz.
+	* s390-opc.c (U6_26): New operand type.
+	(INSTR_RIE_RRUUU2, MASK_RIE_RRUUU2): New instruction format and
+	mask.
+
+2020-12-03  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* s390-opc.txt: Add extended mnemonics.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (riscv_ext_version_table): Remove the p, v, n
+	and their versions.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (riscv_ext_version_table): Add zifencei.
+
+2020-11-28 Borislav Petkov  <bp@suse.de>
+
+	* i386-dis.c (print_insn): Set active_seg_prefix for branch hint insns
+	to not dump branch hint prefixes 0x2E and 0x3E as unused prefixes.
+
+2020-11-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-tbl.h (FLAGM): Handle for FLAGM feature.
+	(struct aarch64_opcode):  Move FLAGM instructions from V8_4_INSN to
+	FLAGM_INSN.
+	(AARCH64_FEATURE_FLAGMANIP): Update comment for FEAT_FlagM2.
+
+2020-11-14  Borislav Petkov  <bp@suse.de>
+
+	* i386-dis.c (ckprefix): Do not assign active_seg_prefix in
+	64-bit addressing mode.
+	(NOTRACK_Fixup): Test prefixes for PREFIX_DS, instead of
+	active_seg_prefix.
+
+2020-11-11  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-tbl.h: Enable -march=armv8.6-a+ls64.
+
+2020-11-09  Spencer E. Olson  <olsonse@umich.edu>
+
+	* pru-opc.c: Add opcode description for LMBD (left-most bit
+	detect).
+
+2020-11-09  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c: Add ACCDATA_EL1 system register
+
+2020-11-09  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c (aarch64_print_operand): Support operand AARCH64_OPND_Rt_LS64
+	print.
+	* aarch64-tbl.h (struct aarch64_opcode): Update _LS64_INSN instructions with
+	Rt_ls64 operands.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-11-06  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-tbl.h (PAC): Handle for PAC feature.
+	(PAC_INSN): New PAC instruction.
+	(struct aarch64_opcode):  Move PAC instructions from V8_3_INSN to
+	PAC_INSN.
+
+2020-11-04  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c: Add RAS 1.1 new system registers: ERXPFGCTL_EL1,
+	ERXPFGCDN_EL1, ERXMISC2_EL1, ERXMISC3_EL1 and ERXPFGF_EL1.
+
+2020-11-03  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-tbl.h (QL_X2NIL): New qualifier for 64-byte stores.
+	(LS64): Handler with +ls64 feature flags.
+	(_LS64_INSN): New instruction group macro.
+	(struct aarch64_opcode): Add LS64 instructions.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-10-30  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch65-tbl.h (struct aarch64_opcode): New instruction WFIT.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c (aarch64_print_operand): CSR PDEC operand print-out.
+	* aarch64-tbl.h (CSRE): New CSRE feature handler.
+	(_CSRE_INSN): New CSRE instruction type.
+	(struct aarch64_opcode): New 'csre' entry for a CSRE CLI feature.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-tbl.h (struct aarch64_opcode): Add new WFET instruction encoding
+	and operand description.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* csky-opc.h (csky_v2_opcodes): Change plsl.u16 to plsl.16.
+
+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* csky-dis.c (csky_output_operand): Add handler for
+	OPRND_TYPE_IMM5b_VSH and OPRND_TYPE_VREG_WITH_INDEX.
+	* csky-opc.h (OPRND_TYPE_VREG_WITH_INDEX): New enum.
+	(OPRND_TYPE_IMM5b_VSH): New enum. (csky_v2_opcodes): Fix and add
+	some instructions for VDSPV1.
+
+2020-10-26  Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c: Change "XV" to print "{vex}" pseudo prefix. 
+
+2020-10-23  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-asm.c (aarch64_ins_barrier_dsb_nxs): New inserter.
+	* aarch64-asm.h (AARCH64_DECL_OPD_INSERTER): New inserter
+	ins_barrier_dsb_nx.
+	* aarch64-dis.c (aarch64_ext_barrier_dsb_nxs): New extractor.
+	* aarch64-dis.h (AARCH64_DECL_OPD_EXTRACTOR): New extractor
+	ext_barrier_dsb_nx.
+	* aarch64-opc.c (aarch64_print_operand): New options table
+	aarch64_barrier_dsb_nxs_options.
+	* aarch64-opc.h (enum aarch64_field_kind): New field name FLD_CRm_dsb_nxs.
+	* aarch64-tbl.h (struct aarch64_opcode): Define DSB nXS barrier
+	Armv8.7-a instruction.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* po/es.po: Remove the duplicated entry.
+
+2020-10-20  Dr. David Alan Gilbert  <dgilbert@redhat.com>
+
+	* po/es.po: Fix printf format.
+
+2020-10-20  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>
+
+	* i386-dis.c (rm_table): Add tlbsync, snp, invlpgb.
+	* i386-gen.c (cpu_flag_init): Add new CPU_INVLPGB_FLAGS,
+	CPU_TLBSYNC_FLAGS, and CPU_SNP_FLAGS.
+	Add CPU_ZNVER3_FLAGS.
+	(cpu_flags): Add CpuINVLPGB, CpuTLBSYNC, CpuSNP.
+	* i386-opc.h: Add CpuINVLPGB, CpuTLBSYNC, CpuSNP.
+	* i386-opc.tbl: Add invlpgb, tlbsync, psmash, pvalidate,
+	rmpupdate, rmpadjust.
+	* i386-init.h: Re-generated.
+	* i386-tbl.h: Re-generated.
+
+2020-10-16  Lili Cui  <lili.cui@intel.com>
+
+	* i386-opc.tbl: Rename CpuVEX_PREFIX to PseudoVexPrefix
+	and move it from cpu_flags to opcode_modifiers.
+	Use VexW0 and VexVVVV in the AVX-VNNI instructions.
+	* i386-gen.c: Likewise.
+	* i386-opc.h: Likewise.
+	* i386-opc.h: Likewise.
+	* i386-init.h: Regenerated.
+	* i386-tbl.h: Likewise.
+
+2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-tbl.h (ARMV8_7): New macro.
+
+2020-10-14  H.J. Lu  <hongjiu.lu@intel.com>
+	    Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (PREFIX_VEX_0F3850): New.
+	(PREFIX_VEX_0F3851): Likewise.
+	(PREFIX_VEX_0F3852): Likewise.
+	(PREFIX_VEX_0F3853): Likewise.
+	(VEX_W_0F3850_P_2): Likewise.
+	(VEX_W_0F3851_P_2): Likewise.
+	(VEX_W_0F3852_P_2): Likewise.
+	(VEX_W_0F3853_P_2): Likewise.
+	(prefix_table): Add PREFIX_VEX_0F3850, PREFIX_VEX_0F3851,
+	PREFIX_VEX_0F3852 and PREFIX_VEX_0F3853.
+	(vex_table): Add VEX_W_0F3850_P_2, VEX_W_0F3851_P_2,
+	VEX_W_0F3852_P_2 and VEX_W_0F3853_P_2.
+	(putop): Add support for "XV" to print "{vex3}" pseudo prefix.
+	* i386-gen.c (cpu_flag_init): Clear the CpuAVX_VNNI bit in
+	CPU_UNKNOWN_FLAGS.  Add CPU_AVX_VNNI_FLAGS and
+	CPU_ANY_AVX_VNNI_FLAGS.
+	(cpu_flags): Add CpuAVX_VNNI and CpuVEX_PREFIX.
+	* i386-opc.h (CpuAVX_VNNI): New.
+	(CpuVEX_PREFIX): Likewise.
+	(i386_cpu_flags): Add cpuavx_vnni and cpuvex_prefix.
+	* i386-opc.tbl: Add Intel AVX VNNI instructions.
+	* i386-init.h: Regenerated.
+	* i386-tbl.h: Likewise.
+
+2020-10-14  Lili Cui  <lili.cui@intel.com>
+	    H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-dis.c (PREFIX_0F3A0F): New.
+	(MOD_0F3A0F_PREFIX_1): Likewise.
+	(REG_0F3A0F_PREFIX_1_MOD_3): Likewise.
+	(RM_0F3A0F_P_1_MOD_3_REG_0): Likewise.
+	(prefix_table): Add PREFIX_0F3A0F.
+	(mod_table): Add MOD_0F3A0F_PREFIX_1.
+	(reg_table): Add REG_0F3A0F_PREFIX_1_MOD_3.
+	(rm_table): Add RM_0F3A0F_P_1_MOD_3_REG_0.
+	* i386-gen.c (cpu_flag_init): Add HRESET_FLAGS,
+	CPU_ANY_HRESET_FLAGS.
+	(cpu_flags): Add CpuHRESET.
+	(output_i386_opcode): Allow 4 byte base_opcode.
+	* i386-opc.h (enum): Add CpuHRESET.
+	(i386_cpu_flags): Add cpuhreset.
+	* i386-opc.tbl: Add Intel HRESET instruction.
+	* i386-init.h: Regenerate.
+	* i386-tbl.h: Likewise.
+
+2020-10-14  Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (enum): Add
+	PREFIX_MOD_3_0F01_REG_5_RM_4,
+	PREFIX_MOD_3_0F01_REG_5_RM_5,
+	PREFIX_MOD_3_0F01_REG_5_RM_6,
+	PREFIX_MOD_3_0F01_REG_5_RM_7,
+	X86_64_0F01_REG_5_MOD_3_RM_4_PREFIX_1,
+	X86_64_0F01_REG_5_MOD_3_RM_5_PREFIX_1,
+	X86_64_0F01_REG_5_MOD_3_RM_6_PREFIX_1,
+	X86_64_0F01_REG_5_MOD_3_RM_7_PREFIX_1,
+	X86_64_0FC7_REG_6_MOD_3_PREFIX_1.
+	(prefix_table): New instructions (see prefixes above).
+	(rm_table): Likewise
+	* i386-gen.c (cpu_flag_init): Add CPU_UINTR_FLAGS,
+	CPU_ANY_UINTR_FLAGS.
+	(cpu_flags): Add CpuUINTR.
+	* i386-opc.h (enum): Add CpuUINTR.
+	(i386_cpu_flags): Add cpuuintr.
+	* i386-opc.tbl: Add UINTR insns.
+	* i386-init.h: Regenerate.
+	* i386-tbl.h: Likewise.
+
+2020-10-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-gen.c (process_i386_opcode_modifier): Return 1 for
+	non-VEX/EVEX/prefix encoding.
+	(output_i386_opcode): Fail if non-VEX/EVEX/prefix base_opcode
+	has a prefix byte.
+	* i386-opc.tbl: Replace the prefix byte in non-VEX/EVEX
+	base_opcode with PREFIX_0X66, PREFIX_0XF2 or PREFIX_0XF3.
+	* i386-tbl.h: Regenerated.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-gen.c (opcode_modifiers): Replace VexOpcode with
+	OpcodePrefix.
+	* i386-opc.h (VexOpcode): Renamed to ...
+	(OpcodePrefix): This.
+	(PREFIX_NONE): New.
+	(PREFIX_0X66): Likewise.
+	(PREFIX_0XF2): Likewise.
+	(PREFIX_0XF3): Likewise.
+	* i386-opc.tbl (Prefix_0X66): New.
+	(Prefix_0XF2): Likewise.
+	(Prefix_0XF3): Likewise.
+	Replace VexOpcode= with OpcodePrefix=.  Use Prefix_0X66 on xorpd.
+	Use Prefix_0XF3 on cvtdq2pd.  Use Prefix_0XF2 on cvtpd2dq.
+	* i386-tbl.h: Regenerated.
+
+2020-10-08  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c: Add BRBE system registers.
+
+2020-10-08  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c: New CSRE system registers defined.
+
+2020-10-05  Samanta Navarro  <ferivoz@riseup.net>
+
+	* cgen-asm.c: Fix spelling mistakes.
+	* cgen-dis.c: Fix spelling mistakes.
+	* tic30-dis.c: Fix spelling mistakes.
+
+2020-10-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26704
+	* i386-dis.c (putop): Always display suffix for %LQ in 64bit.
+
+2020-10-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26705
+	* i386-dis.c (print_insn): Clear modrm if not needed.
+	(putop): Check need_modrm for modrm.mod != 3.  Don't check
+	need_modrm for modrm.mod == 3.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c: Added ETMv4 system registers TRCACATRn, TRCACVRn,
+	TRCAUTHSTATUS, TRCAUXCTLR, TRCBBCTLR, TRCCCCTLR, TRCCIDCCTLR0, TRCCIDCCTLR1,
+	TRCCIDCVRn, TRCCIDR0, TRCCIDR1, TRCCIDR2, TRCCIDR3, TRCCLAIMCLR, TRCCLAIMSET,
+	TRCCNTCTLRn, TRCCNTRLDVRn, TRCCNTVRn, TRCCONFIGR, TRCDEVAFF0, TRCDEVAFF1,
+	TRCDEVARCH, TRCDEVID, TRCDEVTYPE, TRCDVCMRn, TRCDVCVRn, TRCEVENTCTL0R,
+	TRCEVENTCTL1R, TRCEXTINSELR, TRCIDR0, TRCIDR1, TRCIDR2, TRCIDR3, TRCIDR4,
+	TRCIDR5, TRCIDR6, TRCIDR7, TRCIDR8, TRCIDR9, TRCIDR10, TRCIDR11, TRCIDR12,
+	TRCIDR13, TRCIMSPEC0, TRCIMSPECn, TRCITCTRL, TRCLAR WOTRCLSR, TRCOSLAR
+	WOTRCOSLSR, TRCPDCR, TRCPDSR, TRCPIDR0, TRCPIDR1, TRCPIDR2, TRCPIDR3,
+	TRCPIDR4, TRCPIDR[5,6,7], TRCPRGCTLR, TRCP,CSELR, TRCQCTLR, TRCRSCTLRn,
+	TRCSEQEVRn, TRCSEQRSTEVR, TRCSEQSTR, TRCSSCCRn, TRCSSCSRn, TRCSSPCICRn,
+	TRCSTALLCTLR, TRCSTATR, TRCSYNCPR, TRCTRACEIDR,  TRCTSCTLR, TRCVDARCCTLR,
+	TRCVDCTLR, TRCVDSACCTLR, TRCVICTLR, TRCVIIECTLR, TRCVIPCSSCTLR, TRCVISSCTLR,
+	TRCVMIDCCTLR0, TRCVMIDCCTLR1 and TRCVMIDCVRn.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c: Add ETE system registers TRCEXTINSELR<0-3> and TRCRSR.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c: Add TRBE system registers TRBIDR_EL1 , TRBBASER_EL1 ,
+	TRBLIMITR_EL1 , TRBMAR_EL1 , TRBPTR_EL1, TRBSR_EL1 and TRBTRG_EL1.
+
+2020-09-26  Alan Modra  <amodra@gmail.com>
+
+	* csky-opc.h: Formatting.
+	(GENERAL_REG_BANK): Correct spelling.  Update use throughout file.
+	(get_register_name): Mask arch with CSKY_ARCH_MASK for shift,
+	and shift 1u.
+	(get_register_number): Likewise.
+	* csky-dis.c (get_gr_name, get_cr_name): Don't mask mach_flag.
+
+2020-09-24  Lili Cui  <lili.cui@intel.com>
+
+	PR 26654
+	* i386-dis.c (enum): Put MOD_VEX_0F38* together.
+
+2020-09-24  Andrew Burgess <andrew.burgess@embecosm.com>
+
+	* csky-dis.c (csky_output_operand): Enclose body of if in curly
+	braces.
+
+2020-09-24  Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (enum): Add PREFIX_0F01_REG_1_RM_5,
+	PREFIX_0F01_REG_1_RM_6, PREFIX_0F01_REG_1_RM_7,
+	X86_64_0F01_REG_1_RM_5_P_2, X86_64_0F01_REG_1_RM_6_P_2,
+	X86_64_0F01_REG_1_RM_7_P_2.
+	(prefix_table): Likewise.
+	(x86_64_table): Likewise.
+	(rm_table): Likewise.
+	* i386-gen.c (cpu_flag_init): Add CPU_TDX_FLAGS
+	and CPU_ANY_TDX_FLAGS.
+	(cpu_flags): Add CpuTDX.
+	* i386-opc.h (enum): Add CpuTDX.
+	(i386_cpu_flags): Add cputdx.
+	* i386-opc.tbl: Add TDX insns.
+	* i386-init.h: Regenerate.
+	* i386-tbl.h: Likewise.
+
+2020-09-17 Cooper Qu <<cooper.qu@linux.alibaba.com>>
+
+	* csky-dis.c (using_abi): New.
+	(parse_csky_dis_options): New function.
+	(get_gr_name): New function.
+	(get_cr_name): New function.
+	(csky_output_operand): Use get_gr_name and get_cr_name to
+	disassemble and add handle of OPRND_TYPE_IMM5b_LS.
+	(print_insn_csky): Parse disassembler options.
+	* csky-opc.h (OPRND_TYPE_IMM5b_LS): New enum.
+	(GENARAL_REG_BANK): Define.
+	(REG_SUPPORT_ALL): Define.
+	(REG_SUPPORT_ALL): New.
+	(ASH): Define.
+	(REG_SUPPORT_A): Define.
+	(REG_SUPPORT_B): Define.
+	(REG_SUPPORT_C): Define.
+	(REG_SUPPORT_D): Define.
+	(REG_SUPPORT_E): Define.
+	(csky_abiv1_general_regs): New.
+	(csky_abiv1_control_regs): New.
+	(csky_abiv2_general_regs): New.
+	(csky_abiv2_control_regs): New.
+	(get_register_name): New function.
+	(get_register_number): New function.
+	(csky_get_general_reg_name): New function.
+	(csky_get_general_regno): New function.
+	(csky_get_control_reg_name): New function.
+	(csky_get_control_regno): New function.
+	(csky_v2_opcodes): Prefer two oprerans format for bclri and
+	bseti, strengthen the operands legality check of addc, zext
+	and sext.
+
+2020-09-23  Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (enum): Add REG_0F38D8_PREFIX_1,
+	MOD_0F38FA_PREFIX_1, MOD_0F38FB_PREFIX_1,
+	MOD_0F38DC_PREFIX_1, MOD_0F38DD_PREFIX_1,
+	MOD_0F38DE_PREFIX_1, MOD_0F38DF_PREFIX_1,
+	PREFIX_0F38D8, PREFIX_0F38FA, PREFIX_0F38FB.
+	(reg_table): New instructions (see prefixes above).
+	(prefix_table): Likewise.
+	(three_byte_table): Likewise.
+	(mod_table): Likewise
+	* i386-gen.c (cpu_flag_init): Add CPU_KL_FLAGS, CPU_WIDE_KL_FLAGS,
+	CPU_ANY_KL_FLAGS and CPU_ANY_WIDE_KL_FLAGS.
+	(cpu_flags): Likewise.
+	(operand_type_init): Likewise.
+	* i386-opc.h (enum): Add CpuKL and CpuWide_KL.
+	(i386_cpu_flags): Add cpukl and cpuwide_kl.
+	* i386-opc.tbl: Add KL and WIDE_KL insns.
+	* i386-init.h: Regenerate.
+	* i386-tbl.h: Likewise.
+
+2020-09-21  Alan Modra  <amodra@gmail.com>
+
+	* rx-dis.c (flag_names): Add missing comma.
+	(register_names, flag_names, double_register_names),
+	(double_register_high_names, double_register_low_names),
+	(double_control_register_names, double_condition_names): Remove
+	trailing commas.
+
+2020-09-18  David Faust  <david.faust@oracle.com>
+
+	* bpf-desc.c: Regenerate.
+	* bpf-desc.h: Likewise.
+	* bpf-opc.c: Likewise.
+	* bpf-opc.h: Likewise.
+
+2020-09-16  Andrew Burgess <andrew.burgess@embecosm.com>
+
+	* csky-dis.c (csky_get_disassembler): Don't return NULL when there
+	is no BFD.
+
+2020-09-16  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (ppc_symbol_is_valid): Adjust elf_symbol_from invocation.
+
+2020-09-10  Nick Clifton  <nickc@redhat.com>
+
+	* ppc-dis.c (ppc_symbol_is_valid): New function.  Returns false
+	for hidden, local, no-type symbols.
+	(disassemble_init_powerpc): Point the symbol_is_valid field in the
+	info structure at the new function.
+
+2020-09-10  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-opc.h (csky_v2_opcodes): Add L2Cache instructions.
+	* testsuite/gas/csky/cskyv2_ck860.d : Adjust to icache.iva
+	opcode fixing.
+
+2020-09-10  Nick Clifton  <nickc@redhat.com>
+
+	* csky-dis.c (csky_output_operand): Coerce the immediate values to
+	long before printing.
+
+2020-09-10  Alan Modra  <amodra@gmail.com>
+
+	* csky-dis.c (csky_output_operand): Don't sprintf str to itself.
+
+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-opc.h (csky_v2_opcodes): Change mvtc and mulsw's
+	ISA flag.
+
+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-dis.c (csky_output_operand): Add handlers for
+	OPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI and
+	OPRND_TYPE_DFLOAT_FMOVI. Refine OPRND_TYPE_FREGLIST_DASH
+	to support FPUV3 instructions.
+	* csky-opc.h (enum operand_type): New enum OPRND_TYPE_IMM9b,
+	OPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI and
+	OPRND_TYPE_DFLOAT_FMOVI.
+	(OPRND_MASK_4_5, OPRND_MASK_6, OPRND_MASK_6_7, OPRND_MASK_6_8,
+	 OPRND_MASK_7, OPRND_MASK_7_8, OPRND_MASK_17_24,
+	 OPRND_MASK_20, OPRND_MASK_20_21, OPRND_MASK_20_22,
+	 OPRND_MASK_20_23, OPRND_MASK_20_24, OPRND_MASK_20_25,
+	 OPRND_MASK_0_3or5_8, OPRND_MASK_0_3or6_7, OPRND_MASK_0_3or25,
+	 OPRND_MASK_0_4or21_24, OPRND_MASK_5or20_21,
+	 OPRND_MASK_5or20_22, OPRND_MASK_5or20_23, OPRND_MASK_5or20_24,
+	 OPRND_MASK_5or20_25, OPRND_MASK_8_9or21_25,
+	 OPRND_MASK_8_9or16_25, OPRND_MASK_4_6or20, OPRND_MASK_5_7or20,
+	 OPRND_MASK_4_5or20or25, OPRND_MASK_4_6or20or25,
+	 OPRND_MASK_4_7or20or25, OPRND_MASK_6_9or17_24,
+	 OPRND_MASK_6_7or20, OPRND_MASK_6or20, OPRND_MASK_7or20,
+	 OPRND_MASK_5or8_9or16_25, OPRND_MASK_5or8_9or20_25): Define.
+	(csky_v2_opcodes): Add FPUV3 instructions.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* aarch64-dis.c (print_operands): Pass CPU features to
+	aarch64_print_operand().
+	* aarch64-opc.c (aarch64_print_operand): Use CPU features to determine
+	preferred disassembly of system registers.
+	(SR_RNG): Refactor to use new SR_FEAT2 macro.
+	(SR_FEAT2): New.
+	(SR_V8_1_A): New.
+	(SR_V8_4_A): New.
+	(SR_V8_A): New.
+	(SR_V8_R): New.
+	(SR_EXPAND_ELx): New.
+	(SR_EXPAND_EL12): New.
+	(aarch64_sys_regs): Specify which registers are only on
+	A-profile, add R-profile system registers.
+	(ENC_BARLAR): New.
+	(PRBARn_ELx): New.
+	(PRLARn_ELx): New.
+	(aarch64_sys_ins_reg_supported_p): Reject EL3 registers for
+	Armv8-R AArch64.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* aarch64-tbl.h (aarch64_feature_v8_r): New.
+	(ARMV8_R): New.
+	(V8_R_INSN): New.
+	(aarch64_opcode_table): Add dfb.
+	* aarch64-opc-2.c: Regenerate.
+	* aarch64-asm-2.c: Regenerate.
+	* aarch64-dis-2.c: Regenerate.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* aarch64-dis.c (arch_variant): New.
+	(determine_disassembling_preference): Disassemble according to
+	arch variant.
+	(select_aarch64_variant): New.
+	(print_insn_aarch64): Set feature set.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* v850-opc.c (insert_i5div1, insert_i5div2, insert_i5div3),
+	(insert_d5_4, insert_d8_6, insert_d8_7, insert_v8, insert_d9),
+	(insert_u16_loop, insert_d16_15, insert_d16_16, insert_d17_16),
+	(insert_d22, insert_d23, insert_d23_align1, insert_i9, insert_u9),
+	(insert_spe, insert_r4, insert_POS, insert_WIDTH, insert_SELID),
+	(insert_VECTOR8, insert_VECTOR5, insert_CACHEOP, insert_PREFOP),
+	(nsert_IMM10U, insert_SRSEL1, insert_SRSEL2): Use unsigned long
+	for value parameter and update code to suit.
+	(extract_d9, extract_d16_15, extract_d16_16, extract_d17_16),
+	(extract_d22, extract_d23, extract_i9): Use unsigned long variables.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* i386-dis.c (OP_E_memory): Don't cast to signed type when
+	negating.
+	(get32, get32s): Use unsigned types in shift expressions.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* csky-dis.c (print_insn_csky): Use unsigned type for "given".
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* crx-dis.c: Whitespace.
+	(print_arg): Use unsigned type for longdisp and mask variables,
+	and for left shift constant.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* cgen-ibld.in (insert_normal, extract_normal): Use 1UL in left shift.
+	* bpf-ibld.c: Regenerate.
+	* epiphany-ibld.c: Regenerate.
+	* fr30-ibld.c: Regenerate.
+	* frv-ibld.c: Regenerate.
+	* ip2k-ibld.c: Regenerate.
+	* iq2000-ibld.c: Regenerate.
+	* lm32-ibld.c: Regenerate.
+	* m32c-ibld.c: Regenerate.
+	* m32r-ibld.c: Regenerate.
+	* mep-ibld.c: Regenerate.
+	* mt-ibld.c: Regenerate.
+	* or1k-ibld.c: Regenerate.
+	* xc16x-ibld.c: Regenerate.
+	* xstormy16-ibld.c: Regenerate.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* bfin-dis.c (MASKBITS): Use SIGNBIT.
+
+2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-opc.h (csky_v2_opcodes): Move divul and divsl
+	to CSKYV2_ISA_3E3R3 instruction set.
+
+2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-opc.h (csky_v2_opcodes): Fix Encode of mulsws.
+
+2020-09-01  Alan Modra  <amodra@gmail.com>
+
+	* mep-ibld.c: Regenerate.
+
+2020-08-31  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-dis.c (csky_output_operand): Assign dis_info.value for
+	OPRND_TYPE_VREG.
+
+2020-08-30  Alan Modra  <amodra@gmail.com>
+
+	* cr16-dis.c: Formatting.
+	(parameter): Delete struct typedef.  Use dwordU instead
+	throughout file.
+	(make_argument <arg_idxr>): Simplify detection of cbitb, sbitb
+	and tbitb.
+	(make_argument <arg_cr>): Extract 20-bit field not 16-bit.
+
+2020-08-29  Alan Modra  <amodra@gmail.com>
+
+	PR 26446
+	* csky-opc.h (MAX_OPRND_NUM): Define to 5.
+	(union csky_operand): Use MAX_OPRND_NUM to size oprnds array.
+
+2020-08-28  Alan Modra  <amodra@gmail.com>
+
+	PR 26449
+	PR 26450
+	* cgen-ibld.in (insert_1): Use 1UL in forming mask.
+	(extract_normal): Likewise.
+	(insert_normal): Likewise, and move past zero length test.
+	(put_insn_int_value): Handle mask for zero length, use 1UL.
+	* bpf-ibld.c, * epiphany-ibld.c, * fr30-ibld.c, * frv-ibld.c,
+	* ip2k-ibld.c, * iq2000-ibld.c, * lm32-ibld.c, * m32c-ibld.c,
+	* m32r-ibld.c, * mep-ibld.c, * mt-ibld.c, * or1k-ibld.c,
+	* xc16x-ibld.c, * xstormy16-ibld.c: Regenerate.
+
+2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-dis.c (CSKY_DEFAULT_ISA): Define.
+	(csky_dis_info): Add member isa.
+	(csky_find_inst_info): Skip instructions that do not belong to
+	current CPU.
+	(csky_get_disassembler): Get infomation from attribute section.
+	(print_insn_csky): Set defualt ISA flag.
+	* csky.h (CSKY_ISA_VDSP_2): Rename from CSKY_ISA_VDSP_V2.
+	* csky-opc.h (struct csky_opcode): Change isa_flag16 and
+	isa_flag32'type to unsigned 64 bits.
+
+2020-08-26  Jose E. Marchesi  <jemarch@gnu.org>
+
+	* disassemble.c (enum epbf_isa_attr): Add ISA_XBPFBE, ISA_EBPFMAX.
+
+2020-08-26  David Faust  <david.faust@oracle.com>
+
+	* bpf-desc.c: Regenerate.
+	* bpf-desc.h: Likewise.
+	* bpf-opc.c: Likewise.
+	* bpf-opc.h: Likewise.
+	* disassemble.c (disassemble_init_for_target): Set bits for xBPF
+	ISA when appropriate.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26504
+	* vax-dis.c (parse_disassembler_options): Always add at least one
+	to entry_addr_total_slots.
+
+2020-08-24  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-dis.c (csky_find_inst_info): Skip CK860's instructions
+	in other CPUs to speed up disassembling.
+	* csky-opc.h (csky_v2_opcodes): Add CK860's instructions,
+	Change plsli.u16 to plsli.16, change sync's operand format.
+
+2020-08-21  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-opc.h (csky_v2_opcodes): Add instruction bnezad.
+
+2020-08-21  Nick Clifton  <nickc@redhat.com>
+
+	* aarch64-dis.c (get_sym_code_type): Return FALSE for non-ELF
+	symbols.
+
+2020-08-21  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* csky-opc.h (csky_v2_opcodes): Add two operands form for bloop.
+
+2020-08-19  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Replace OBF with BF for vcmpsq,
+	vcmpuq and xvtlsbb.
+
+2020-08-18  Peter Bergner  <bergner@linux.ibm.com>
+
+	* ppc-opc.c (powerpc_opcodes) <xvcvbf16sp>: Rename from this...
+	<xvcvbf16spn>: ...to this.
+
+2020-08-12  Alex Coplan  <alex.coplan@arm.com>
+
+	* aarch64-opc.c (aarch64_sys_regs): Add MPAM registers.
+
+2020-08-12  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: Updated Serbian translation.
+
+2020-08-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Move cctpl, cctpm and cctph.
+
+2020-08-10  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* aarch64-opc.c (aarch64_print_operand):
+	(aarch64_sys_reg_deprecated_p): Functions paramaters changed.
+	(aarch64_sys_reg_supported_p): Function removed.
+	(aarch64_sys_ins_reg_supported_p): Functions paramaters changed.
+	(aarch64_sys_ins_reg_supported_p): Merged aarch64_sys_reg_supported_p
+	into this function.
+
+2020-08-10  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Add many mtspr and mfspr extended
+	instructions.
+
+2020-08-10  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Add exser, msgsndu, msgclru.
+	Enable icbt for power5, miso for power8.
+
+2020-08-10  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Prioritise mtfprd and mtvrd over
+	mtvsrd, and similarly for mfvsrd.
+
+2020-08-04  Christian Groessler  <chris@groessler.org>
+	    Tadashi G. Takaoka <tadashi.g.takaoka@gmail.com>
+
+	* z8kgen.c (opt): Fix "sout imm16,rs" and "soutb imm16,rbs"
+	opcodes (special "out" to absolute address).
+	* z8k-opc.h: Regenerate.
+
+2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26305
+	* i386-opc.h (Prefix_Disp8): New.
+	(Prefix_Disp16): Likewise.
+	(Prefix_Disp32): Likewise.
+	(Prefix_Load): Likewise.
+	(Prefix_Store): Likewise.
+	(Prefix_VEX): Likewise.
+	(Prefix_VEX3): Likewise.
+	(Prefix_EVEX): Likewise.
+	(Prefix_REX): Likewise.
+	(Prefix_NoOptimize): Likewise.
+	* i386-opc.tbl: Use Prefix_XXX on pseudo prefixes.  Add {disp16}.
+	* i386-tbl.h: Regenerated.
+
+2020-07-29  Andreas Arnez  <arnez@linux.ibm.com>
+
+	* s390-mkopc.c (insertExpandedMnemonic): Handle unreachable
+	default case with abort() instead of printing an error message and
+	continuing, to avoid a maybe-uninitialized warning.
+
+2020-07-24  Nick Clifton  <nickc@redhat.com>
+
+	* po/de.po: Updated German translation.
+
+2020-07-21  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_E_memory): Revert previous change.
+
+2020-07-15  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26237
+	* i386-dis.c (OP_E_memory): Don't display eiz with no scale
+	without base nor index registers.
+
+2020-07-15  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (putop): Move 'V' and 'W' handling.
+
+2020-07-15  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (dis386): Adjust 'V' description. Use P-based
+	construct for push/pop of register.
+	(putop): Honor cond when handling 'P'. Drop handling of plain
+	'V'.
+
+2020-07-15  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (dis386): Adjust 'P', 'T', 'U', and '@'
+	description. Drop '&' description. Use P for push of immediate,
+	pushf/popf, enter, and leave. Use %LP for lret/retf.
+	(dis386_twobyte): Use P for push/pop of fs/gs.
+	(reg_table): Use P for push/pop. Use @ for near call/jmp.
+	(x86_64_table): Use P for far call/jmp.
+	(putop): Drop handling of 'U' and '&'. Move and adjust handling
+	of '@'. Adjust handling of 'P' and 'T'. Drop case_P and case_Q
+	labels.
+	(OP_J): Drop marking of REX_W as used for v_mode (ISA-dependent)
+	and dqw_mode (unconditional).
+
+2020-07-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26237
+	* i386-dis.c (OP_E_memory): Without base nor index registers,
+	32-bit displacement to 64 bits.
+
+2020-07-14  Claudiu Zissulescu  <claziss@gmail.com>
+
+	* arc-dis.c (print_insn_arc): Detect and emit a warning when a
+	faulty double register pair is detected.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_D): Print dr<N> instead of db<N> in Intel mode.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_R, Rm): Delete.
+	(MOD_0F24, MOD_0F26): Rename to ...
+	(X86_64_0F24, X86_64_0F26): ... respectively.
+	(dis386): Update 'L' and 'Z' comments.
+	(dis386_twobyte): Replace Rm by Em. Change opcode 0F24 and 0F26
+	table references.
+	(mod_table): Move opcode 0F24 and 0F26 entries ...
+	(x86_64_table): ... here.
+	(putop): Drop handling of 'L'. Set modrm.mod to 3 for 'Z'. Move
+	'Z' case block.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (Rd, Rdq, MaskR): Delete.
+	(MOD_EVEX_0F3828_P_1, MOD_EVEX_0F382A_P_1_W_1,
+	MOD_EVEX_0F3838_P_1, MOD_EVEX_0F383A_P_1_W_0,
+	MOD_EVEX_0F387A_W_0, MOD_EVEX_0F387B_W_0,
+	MOD_EVEX_0F387C): New enumerators.
+	(reg_table): Use Edq for rdssp.
+	(prefix_table): Use Edq for incssp.
+	(mod_table): Use Rm for move to/from %tr. Use MaskE for kand*,
+	kandn*, knot*, kor*, kxnor*, kxor*, kadd*, kunpck*, kortest*,
+	ktest*, and kshift*. Use Edq / MaskE for kmov*.
+	* i386-dis-evex.h: Reference mod_table[] for opcode 0F387C.
+	* i386-dis-evex-mod.h: New entries for opcodes 0F3828, 0F382A,
+	0F3838, 0F383A, 0F387A, 0F387B, and 0F387C.
+	* i386-dis-evex-prefix.h: Reference mod_table[] for opcodes
+	0F3828_P_1 and 0F3838_P_1.
+	* i386-dis-evex-w.h: Reference mod_table[] for opcodes
+	0F382A_P_1, 0F383A_P_1, 0F387A, and 0F387B.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PREFIX_0F01_REG_7_MOD_3_RM_3,
+	PREFIX_0FAE_REG_5_MOD_0, PREFIX_0FC3_MOD_0, PREFIX_0F38C8,
+	PREFIX_0F38C9, PREFIX_0F38CA, PREFIX_0F38CB, PREFIX_0F38CC,
+	PREFIX_0F38CD, PREFIX_0F38F9, PREFIX_0F3ACC, PREFIX_VEX_0F77,
+	PREFIX_VEX_0F38F2, PREFIX_VEX_0F38F3_REG_1,
+	PREFIX_VEX_0F38F3_REG_2, PREFIX_VEX_0F38F3_REG_3): Delete.
+	(MOD_0F38F9_PREFIX_0, VEX_LEN_0F77_P_0, VEX_LEN_0F38F2_P_0,
+	VEX_LEN_0F38F3_R_1_P_0, VEX_LEN_0F38F3_R_2_P_0,
+	VEX_LEN_0F38F3_R_3_P_0): Rename to ...
+	(MOD_0F38F9, VEX_LEN_0F77, VEX_LEN_0F38F2, VEX_LEN_0F38F3_R_1,
+	VEX_LEN_0F38F3_R_2, VEX_LEN_0F38F3_R_3): ... these respectively.
+	(reg_table, prefix_table, three_byte_table, vex_table,
+	vex_len_table, mod_table, rm_table): Replace / remove respective
+	entries.
+	(intel_operand_size, OP_E_register, OP_G): Avoid undue setting
+	of PREFIX_DATA in used_prefixes.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (MOD_VEX_0F3A30_L_0_W_0, MOD_VEX_0F3A30_L_0_W_1,
+	MOD_VEX_0F3A31_L_0_W_0, MOD_VEX_0F3A31_L_0_W_1,
+	MOD_VEX_0F3A32_L_0_W_0, MOD_VEX_0F3A32_L_0_W_1,
+	MOD_VEX_0F3A33_L_0_W_0, MOD_VEX_0F3A33_L_0_W_1): Replace by ...
+	(MOD_VEX_0F3A30_L_0, MOD_VEX_0F3A31_L_0,
+	MOD_VEX_0F3A32_L_0, MOD_VEX_0F3A33_L_0): ... these.
+	(VEX_W_0F3A30_L_0, VEX_W_0F3A31_L_0, VEX_W_0F3A32_L_0,
+	VEX_W_0F3A33_L_0): Delete.
+	(dis386): Adjust "BW" description.
+	(vex_len_table): Refer to mod_table[] for opcodes 0F3A30,
+	0F3A31, 0F3A32, and 0F3A33.
+	(vex_w_table): Delete opcode 0F3A30, 0F3A31, 0F3A32, and 0F3A33
+	entries.
+	(mod_table): Replace opcode 0F3A30, 0F3A31, 0F3A32, and 0F3A33
+	entries.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PREFIX_0F6C, PREFIX_0F6D, PREFIX_0F73_REG_3,
+	PREFIX_0F73_REG_7, PREFIX_0F3810, PREFIX_0F3814, PREFIX_0F3815,
+	PREFIX_0F3817, PREFIX_0F3820, PREFIX_0F3821, PREFIX_0F3822,
+	PREFIX_0F3823, PREFIX_0F3824, PREFIX_0F3825, PREFIX_0F3828,
+	PREFIX_0F3829, PREFIX_0F382A, PREFIX_0F382B, PREFIX_0F3830,
+	PREFIX_0F3831, PREFIX_0F3832, PREFIX_0F3833, PREFIX_0F3834,
+	PREFIX_0F3835, PREFIX_0F3837, PREFIX_0F3838, PREFIX_0F3839,
+	PREFIX_0F383A, PREFIX_0F383B, PREFIX_0F383C, PREFIX_0F383D,
+	PREFIX_0F383E, PREFIX_0F383F, PREFIX_0F3840, PREFIX_0F3841,
+	PREFIX_0F3880, PREFIX_0F3881, PREFIX_0F3882, PREFIX_0F38CF,
+	PREFIX_0F38DB, PREFIX_0F38DC, PREFIX_0F38DD, PREFIX_0F38DE,
+	PREFIX_0F38DF, PREFIX_0F38F5, PREFIX_0F3A08, PREFIX_0F3A09,
+	PREFIX_0F3A0A, PREFIX_0F3A0B, PREFIX_0F3A0C, PREFIX_0F3A0D,
+	PREFIX_0F3A0E, PREFIX_0F3A14, PREFIX_0F3A15, PREFIX_0F3A16,
+	PREFIX_0F3A17, PREFIX_0F3A20, PREFIX_0F3A21, PREFIX_0F3A22,
+	PREFIX_0F3A40, PREFIX_0F3A41, PREFIX_0F3A42, PREFIX_0F3A44,
+	PREFIX_0F3A60, PREFIX_0F3A61, PREFIX_0F3A62, PREFIX_0F3A63,
+	PREFIX_0F3ACE, PREFIX_0F3ACF, PREFIX_0F3ADF, PREFIX_VEX_0F60,
+	PREFIX_VEX_0F61, PREFIX_VEX_0F62, PREFIX_VEX_0F63,
+	PREFIX_VEX_0F64, PREFIX_VEX_0F65, PREFIX_VEX_0F66,
+	PREFIX_VEX_0F67, PREFIX_VEX_0F68, PREFIX_VEX_0F69,
+	PREFIX_VEX_0F6A, PREFIX_VEX_0F6B, PREFIX_VEX_0F6C,
+	PREFIX_VEX_0F6D, PREFIX_VEX_0F6E, PREFIX_VEX_0F71_REG_2,
+	PREFIX_VEX_0F71_REG_4, PREFIX_VEX_0F71_REG_6,
+	PREFIX_VEX_0F72_REG_2, PREFIX_VEX_0F72_REG_4,
+	PREFIX_VEX_0F72_REG_6, PREFIX_VEX_0F73_REG_2,
+	PREFIX_VEX_0F73_REG_3, PREFIX_VEX_0F73_REG_6,
+	PREFIX_VEX_0F73_REG_7, PREFIX_VEX_0F74,
+	PREFIX_VEX_0F75, PREFIX_VEX_0F76, PREFIX_VEX_0FC4,
+	PREFIX_VEX_0FC5, PREFIX_VEX_0FD1, PREFIX_VEX_0FD2,
+	PREFIX_VEX_0FD3, PREFIX_VEX_0FD4, PREFIX_VEX_0FD5,
+	PREFIX_VEX_0FD6, PREFIX_VEX_0FD7, PREFIX_VEX_0FD8,
+	PREFIX_VEX_0FD9, PREFIX_VEX_0FDA, PREFIX_VEX_0FDB,
+	PREFIX_VEX_0FDC, PREFIX_VEX_0FDD, PREFIX_VEX_0FDE,
+	PREFIX_VEX_0FDF, PREFIX_VEX_0FE0, PREFIX_VEX_0FE1,
+	PREFIX_VEX_0FE2, PREFIX_VEX_0FE3, PREFIX_VEX_0FE4,
+	PREFIX_VEX_0FE5, PREFIX_VEX_0FE7, PREFIX_VEX_0FE8,
+	PREFIX_VEX_0FE9, PREFIX_VEX_0FEA, PREFIX_VEX_0FEB,
+	PREFIX_VEX_0FEC, PREFIX_VEX_0FED, PREFIX_VEX_0FEE,
+	PREFIX_VEX_0FEF, PREFIX_VEX_0FF1, PREFIX_VEX_0FF2,
+	PREFIX_VEX_0FF3, PREFIX_VEX_0FF4, PREFIX_VEX_0FF5,
+	PREFIX_VEX_0FF6, PREFIX_VEX_0FF7, PREFIX_VEX_0FF8,
+	PREFIX_VEX_0FF9, PREFIX_VEX_0FFA, PREFIX_VEX_0FFB,
+	PREFIX_VEX_0FFC, PREFIX_VEX_0FFD, PREFIX_VEX_0FFE,
+	PREFIX_VEX_0F3800, PREFIX_VEX_0F3801, PREFIX_VEX_0F3802,
+	PREFIX_VEX_0F3803, PREFIX_VEX_0F3804, PREFIX_VEX_0F3805,
+	PREFIX_VEX_0F3806, PREFIX_VEX_0F3807, PREFIX_VEX_0F3808,
+	PREFIX_VEX_0F3809, PREFIX_VEX_0F380A, PREFIX_VEX_0F380B,
+	PREFIX_VEX_0F380C, PREFIX_VEX_0F380D, PREFIX_VEX_0F380E,
+	PREFIX_VEX_0F380F, PREFIX_VEX_0F3813, PREFIX_VEX_0F3816,
+	PREFIX_VEX_0F3817, PREFIX_VEX_0F3818, PREFIX_VEX_0F3819,
+	PREFIX_VEX_0F381A, PREFIX_VEX_0F381C, PREFIX_VEX_0F381D,
+	PREFIX_VEX_0F381E, PREFIX_VEX_0F3820, PREFIX_VEX_0F3821,
+	PREFIX_VEX_0F3822, PREFIX_VEX_0F3823, PREFIX_VEX_0F3824,
+	PREFIX_VEX_0F3825, PREFIX_VEX_0F3828, PREFIX_VEX_0F3829,
+	PREFIX_VEX_0F382A, PREFIX_VEX_0F382B, PREFIX_VEX_0F382C,
+	PREFIX_VEX_0F382D, PREFIX_VEX_0F382E, PREFIX_VEX_0F382F,
+	PREFIX_VEX_0F3830, PREFIX_VEX_0F3831, PREFIX_VEX_0F3832,
+	PREFIX_VEX_0F3833, PREFIX_VEX_0F3834, PREFIX_VEX_0F3835,
+	PREFIX_VEX_0F3836, PREFIX_VEX_0F3837, PREFIX_VEX_0F3838,
+	PREFIX_VEX_0F3839, PREFIX_VEX_0F383A, PREFIX_VEX_0F383B,
+	PREFIX_VEX_0F383C, PREFIX_VEX_0F383D, PREFIX_VEX_0F383E,
+	PREFIX_VEX_0F383F, PREFIX_VEX_0F3840, PREFIX_VEX_0F3841,
+	PREFIX_VEX_0F3845, PREFIX_VEX_0F3846, PREFIX_VEX_0F3847,
+	PREFIX_VEX_0F3858, PREFIX_VEX_0F3859, PREFIX_VEX_0F385A,
+	PREFIX_VEX_0F3878, PREFIX_VEX_0F3879, PREFIX_VEX_0F388C,
+	PREFIX_VEX_0F388E, PREFIX_VEX_0F3890, PREFIX_VEX_0F3891,
+	PREFIX_VEX_0F3892, PREFIX_VEX_0F3893, PREFIX_VEX_0F3896,
+	PREFIX_VEX_0F3897, PREFIX_VEX_0F3898, PREFIX_VEX_0F3899,
+	PREFIX_VEX_0F389A, PREFIX_VEX_0F389B, PREFIX_VEX_0F389C,
+	PREFIX_VEX_0F389D, PREFIX_VEX_0F389E, PREFIX_VEX_0F389F,
+	PREFIX_VEX_0F38A6, PREFIX_VEX_0F38A7, PREFIX_VEX_0F38A8,
+	PREFIX_VEX_0F38A9, PREFIX_VEX_0F38AA, PREFIX_VEX_0F38AB,
+	PREFIX_VEX_0F38AC, PREFIX_VEX_0F38AD, PREFIX_VEX_0F38AE,
+	PREFIX_VEX_0F38AF, PREFIX_VEX_0F38B6, PREFIX_VEX_0F38B7,
+	PREFIX_VEX_0F38B8, PREFIX_VEX_0F38B9, PREFIX_VEX_0F38BA,
+	PREFIX_VEX_0F38BB, PREFIX_VEX_0F38BC, PREFIX_VEX_0F38BD,
+	PREFIX_VEX_0F38BE, PREFIX_VEX_0F38BF, PREFIX_VEX_0F38CF,
+	PREFIX_VEX_0F38DB, PREFIX_VEX_0F38DC, PREFIX_VEX_0F38DD,
+	PREFIX_VEX_0F38DE, PREFIX_VEX_0F38DF, PREFIX_VEX_0F3A00,
+	PREFIX_VEX_0F3A01, PREFIX_VEX_0F3A02, PREFIX_VEX_0F3A04,
+	PREFIX_VEX_0F3A05, PREFIX_VEX_0F3A06, PREFIX_VEX_0F3A08,
+	PREFIX_VEX_0F3A09, PREFIX_VEX_0F3A0A, PREFIX_VEX_0F3A0B,
+	PREFIX_VEX_0F3A0C, PREFIX_VEX_0F3A0D, PREFIX_VEX_0F3A0E,
+	PREFIX_VEX_0F3A0F, PREFIX_VEX_0F3A14, PREFIX_VEX_0F3A15,
+	PREFIX_VEX_0F3A16, PREFIX_VEX_0F3A17, PREFIX_VEX_0F3A18,
+	PREFIX_VEX_0F3A19, PREFIX_VEX_0F3A1D, PREFIX_VEX_0F3A20,
+	PREFIX_VEX_0F3A21, PREFIX_VEX_0F3A22, PREFIX_VEX_0F3A30,
+	PREFIX_VEX_0F3A31, PREFIX_VEX_0F3A32, PREFIX_VEX_0F3A33,
+	PREFIX_VEX_0F3A38, PREFIX_VEX_0F3A39, PREFIX_VEX_0F3A40,
+	PREFIX_VEX_0F3A41, PREFIX_VEX_0F3A42, PREFIX_VEX_0F3A44,
+	PREFIX_VEX_0F3A46, PREFIX_VEX_0F3A48, PREFIX_VEX_0F3A49,
+	PREFIX_VEX_0F3A4A, PREFIX_VEX_0F3A4B, PREFIX_VEX_0F3A4C,
+	PREFIX_VEX_0F3A5C, PREFIX_VEX_0F3A5D, PREFIX_VEX_0F3A5E,
+	PREFIX_VEX_0F3A5F, PREFIX_VEX_0F3A60, PREFIX_VEX_0F3A61,
+	PREFIX_VEX_0F3A62, PREFIX_VEX_0F3A63, PREFIX_VEX_0F3A68,
+	PREFIX_VEX_0F3A69, PREFIX_VEX_0F3A6A, PREFIX_VEX_0F3A6B,
+	PREFIX_VEX_0F3A6C, PREFIX_VEX_0F3A6D, PREFIX_VEX_0F3A6E,
+	PREFIX_VEX_0F3A6F, PREFIX_VEX_0F3A78, PREFIX_VEX_0F3A79,
+	PREFIX_VEX_0F3A7A, PREFIX_VEX_0F3A7B, PREFIX_VEX_0F3A7C,
+	PREFIX_VEX_0F3A7D, PREFIX_VEX_0F3A7E, PREFIX_VEX_0F3A7F,
+	PREFIX_VEX_0F3ACE, PREFIX_VEX_0F3ACF, PREFIX_VEX_0F3ADF,
+	PREFIX_EVEX_0F64, PREFIX_EVEX_0F65, PREFIX_EVEX_0F66,
+	PREFIX_EVEX_0F6E, PREFIX_EVEX_0F71_REG_2,
+	PREFIX_EVEX_0F71_REG_4, PREFIX_EVEX_0F71_REG_6,
+	PREFIX_EVEX_0F72_REG_0, PREFIX_EVEX_0F72_REG_1,
+	PREFIX_EVEX_0F72_REG_2, PREFIX_EVEX_0F72_REG_4,
+	PREFIX_EVEX_0F72_REG_6, PREFIX_EVEX_0F73_REG_2,
+	PREFIX_EVEX_0F73_REG_3, PREFIX_EVEX_0F73_REG_6,
+	PREFIX_EVEX_0F73_REG_7, PREFIX_EVEX_0F74, PREFIX_EVEX_0F75,
+	PREFIX_EVEX_0F76, PREFIX_EVEX_0FC4, PREFIX_EVEX_0FC5,
+	PREFIX_EVEX_0FD6, PREFIX_EVEX_0FDB, PREFIX_EVEX_0FDF,
+	PREFIX_EVEX_0FE2, PREFIX_EVEX_0FE7, PREFIX_EVEX_0FEB,
+	PREFIX_EVEX_0FEF, PREFIX_EVEX_0F380D, PREFIX_EVEX_0F3816,
+	PREFIX_EVEX_0F3819, PREFIX_EVEX_0F381A, PREFIX_EVEX_0F381B,
+	PREFIX_EVEX_0F381E, PREFIX_EVEX_0F381F, PREFIX_EVEX_0F382C,
+	PREFIX_EVEX_0F382D, PREFIX_EVEX_0F3836, PREFIX_EVEX_0F3837,
+	PREFIX_EVEX_0F383B, PREFIX_EVEX_0F383D, PREFIX_EVEX_0F383F,
+	PREFIX_EVEX_0F3840, PREFIX_EVEX_0F3842, PREFIX_EVEX_0F3843,
+	PREFIX_EVEX_0F3844, PREFIX_EVEX_0F3845, PREFIX_EVEX_0F3846,
+	PREFIX_EVEX_0F3847, PREFIX_EVEX_0F384C, PREFIX_EVEX_0F384D,
+	PREFIX_EVEX_0F384E, PREFIX_EVEX_0F384F, PREFIX_EVEX_0F3850,
+	PREFIX_EVEX_0F3851, PREFIX_EVEX_0F3854, PREFIX_EVEX_0F3855,
+	PREFIX_EVEX_0F3859, PREFIX_EVEX_0F385A, PREFIX_EVEX_0F385B,
+	PREFIX_EVEX_0F3862, PREFIX_EVEX_0F3863, PREFIX_EVEX_0F3864,
+	PREFIX_EVEX_0F3865, PREFIX_EVEX_0F3866, PREFIX_EVEX_0F3870,
+	PREFIX_EVEX_0F3871, PREFIX_EVEX_0F3873, PREFIX_EVEX_0F3875,
+	PREFIX_EVEX_0F3876, PREFIX_EVEX_0F3877, PREFIX_EVEX_0F387A,
+	PREFIX_EVEX_0F387B, PREFIX_EVEX_0F387C, PREFIX_EVEX_0F387D,
+	PREFIX_EVEX_0F387E, PREFIX_EVEX_0F387F, PREFIX_EVEX_0F3883,
+	PREFIX_EVEX_0F3888, PREFIX_EVEX_0F3889, PREFIX_EVEX_0F388A,
+	PREFIX_EVEX_0F388B, PREFIX_EVEX_0F388D, PREFIX_EVEX_0F388F,
+	PREFIX_EVEX_0F3890, PREFIX_EVEX_0F3891, PREFIX_EVEX_0F3892,
+	PREFIX_EVEX_0F3893, PREFIX_EVEX_0F38A0, PREFIX_EVEX_0F38A1,
+	PREFIX_EVEX_0F38A2, PREFIX_EVEX_0F38A3, PREFIX_EVEX_0F38B4,
+	PREFIX_EVEX_0F38B5, PREFIX_EVEX_0F38C4,
+	PREFIX_EVEX_0F38C6_REG_1, PREFIX_EVEX_0F38C6_REG_2,
+	PREFIX_EVEX_0F38C6_REG_5, PREFIX_EVEX_0F38C6_REG_6,
+	PREFIX_EVEX_0F38C7_REG_1, PREFIX_EVEX_0F38C7_REG_2,
+	PREFIX_EVEX_0F38C7_REG_5, PREFIX_EVEX_0F38C7_REG_6,
+	PREFIX_EVEX_0F38C8, PREFIX_EVEX_0F38CA, PREFIX_EVEX_0F38CB,
+	PREFIX_EVEX_0F38CC, PREFIX_EVEX_0F38CD, PREFIX_EVEX_0F3A00,
+	PREFIX_EVEX_0F3A01, PREFIX_EVEX_0F3A03, PREFIX_EVEX_0F3A05,
+	PREFIX_EVEX_0F3A08, PREFIX_EVEX_0F3A09, PREFIX_EVEX_0F3A0A,
+	PREFIX_EVEX_0F3A0B, PREFIX_EVEX_0F3A14, PREFIX_EVEX_0F3A15,
+	PREFIX_EVEX_0F3A16, PREFIX_EVEX_0F3A17, PREFIX_EVEX_0F3A18,
+	PREFIX_EVEX_0F3A19, PREFIX_EVEX_0F3A1A, PREFIX_EVEX_0F3A1B,
+	PREFIX_EVEX_0F3A1E, PREFIX_EVEX_0F3A1F, PREFIX_EVEX_0F3A20,
+	PREFIX_EVEX_0F3A21, PREFIX_EVEX_0F3A22, PREFIX_EVEX_0F3A23,
+	PREFIX_EVEX_0F3A25, PREFIX_EVEX_0F3A26, PREFIX_EVEX_0F3A27,
+	PREFIX_EVEX_0F3A38, PREFIX_EVEX_0F3A39, PREFIX_EVEX_0F3A3A,
+	PREFIX_EVEX_0F3A3B, PREFIX_EVEX_0F3A3E, PREFIX_EVEX_0F3A3F,
+	PREFIX_EVEX_0F3A42, PREFIX_EVEX_0F3A43, PREFIX_EVEX_0F3A50,
+	PREFIX_EVEX_0F3A51, PREFIX_EVEX_0F3A54, PREFIX_EVEX_0F3A55,
+	PREFIX_EVEX_0F3A56, PREFIX_EVEX_0F3A57, PREFIX_EVEX_0F3A66,
+	PREFIX_EVEX_0F3A67, PREFIX_EVEX_0F3A70, PREFIX_EVEX_0F3A71,
+	PREFIX_EVEX_0F3A72, PREFIX_EVEX_0F3A73): Delete.
+	(MOD_0F382A_PREFIX_2, MOD_0F38F5_PREFIX_2,
+	MOD_VEX_0FD7_PREFIX_2, MOD_VEX_0FE7_PREFIX_2,
+	MOD_VEX_0F381A_PREFIX_2, MOD_VEX_0F382A_PREFIX_2,
+	MOD_VEX_0F382C_PREFIX_2, MOD_VEX_0F382D_PREFIX_2,
+	MOD_VEX_0F382E_PREFIX_2, MOD_VEX_0F382F_PREFIX_2,
+	MOD_VEX_0F385A_PREFIX_2, MOD_VEX_0F388C_PREFIX_2,
+	MOD_VEX_0F388E_PREFIX_2, MOD_VEX_W_0_0F3A30_P_2_LEN_0,
+	MOD_VEX_W_1_0F3A30_P_2_LEN_0, MOD_VEX_W_0_0F3A31_P_2_LEN_0,
+	MOD_VEX_W_1_0F3A31_P_2_LEN_0, MOD_VEX_W_0_0F3A32_P_2_LEN_0,
+	MOD_VEX_W_1_0F3A32_P_2_LEN_0, MOD_VEX_W_0_0F3A33_P_2_LEN_0,
+	MOD_VEX_W_1_0F3A33_P_2_LEN_0, MOD_EVEX_0F381A_P_2_W_0,
+	MOD_EVEX_0F381A_P_2_W_1, MOD_EVEX_0F381B_P_2_W_0,
+	MOD_EVEX_0F381B_P_2_W_1, MOD_EVEX_0F385A_P_2_W_0,
+	MOD_EVEX_0F385A_P_2_W_1, MOD_EVEX_0F385B_P_2_W_0,
+	MOD_EVEX_0F385B_P_2_W_1, VEX_LEN_0F6E_P_2,
+	VEX_LEN_0FC4_P_2, VEX_LEN_0FC5_P_2, VEX_LEN_0FD6_P_2,
+	VEX_LEN_0FF7_P_2, VEX_LEN_0F3816_P_2, VEX_LEN_0F3819_P_2,
+	VEX_LEN_0F381A_P_2_M_0, VEX_LEN_0F3836_P_2,
+	VEX_LEN_0F3841_P_2, VEX_LEN_0F385A_P_2_M_0,
+	VEX_LEN_0F38DB_P_2, VEX_LEN_0F3A00_P_2, VEX_LEN_0F3A01_P_2,
+	VEX_LEN_0F3A06_P_2, VEX_LEN_0F3A14_P_2, VEX_LEN_0F3A15_P_2,
+	VEX_LEN_0F3A16_P_2, VEX_LEN_0F3A17_P_2, VEX_LEN_0F3A18_P_2,
+	VEX_LEN_0F3A19_P_2, VEX_LEN_0F3A20_P_2, VEX_LEN_0F3A21_P_2,
+	VEX_LEN_0F3A22_P_2, VEX_LEN_0F3A30_P_2, VEX_LEN_0F3A31_P_2,
+	VEX_LEN_0F3A32_P_2, VEX_LEN_0F3A33_P_2, VEX_LEN_0F3A38_P_2,
+	VEX_LEN_0F3A39_P_2, VEX_LEN_0F3A41_P_2, VEX_LEN_0F3A46_P_2,
+	VEX_LEN_0F3A60_P_2, VEX_LEN_0F3A61_P_2, VEX_LEN_0F3A62_P_2,
+	VEX_LEN_0F3A63_P_2, VEX_LEN_0F3ADF_P_2, EVEX_LEN_0F6E_P_2,
+	EVEX_LEN_0FC4_P_2, EVEX_LEN_0FC5_P_2, EVEX_LEN_0FD6_P_2,
+	EVEX_LEN_0F3816_P_2, EVEX_LEN_0F3819_P_2_W_0,
+	EVEX_LEN_0F3819_P_2_W_1, EVEX_LEN_0F381A_P_2_W_0_M_0,
+	EVEX_LEN_0F381A_P_2_W_1_M_0, EVEX_LEN_0F381B_P_2_W_0_M_0,
+	EVEX_LEN_0F381B_P_2_W_1_M_0, EVEX_LEN_0F3836_P_2,
+	EVEX_LEN_0F385A_P_2_W_0_M_0, EVEX_LEN_0F385A_P_2_W_1_M_0,
+	EVEX_LEN_0F385B_P_2_W_0_M_0, EVEX_LEN_0F385B_P_2_W_1_M_0,
+	EVEX_LEN_0F38C6_REG_1_PREFIX_2, EVEX_LEN_0F38C6_REG_2_PREFIX_2,
+	EVEX_LEN_0F38C6_REG_5_PREFIX_2, EVEX_LEN_0F38C6_REG_6_PREFIX_2,
+	EVEX_LEN_0F38C7_R_1_P_2_W_0, EVEX_LEN_0F38C7_R_1_P_2_W_1,
+	EVEX_LEN_0F38C7_R_2_P_2_W_0, EVEX_LEN_0F38C7_R_2_P_2_W_1,
+	EVEX_LEN_0F38C7_R_5_P_2_W_0, EVEX_LEN_0F38C7_R_5_P_2_W_1,
+	EVEX_LEN_0F38C7_R_6_P_2_W_0, EVEX_LEN_0F38C7_R_6_P_2_W_1,
+	EVEX_LEN_0F3A00_P_2_W_1, EVEX_LEN_0F3A01_P_2_W_1,
+	EVEX_LEN_0F3A14_P_2, EVEX_LEN_0F3A15_P_2, EVEX_LEN_0F3A16_P_2,
+	EVEX_LEN_0F3A17_P_2, EVEX_LEN_0F3A18_P_2_W_0,
+	EVEX_LEN_0F3A18_P_2_W_1, EVEX_LEN_0F3A19_P_2_W_0,
+	EVEX_LEN_0F3A19_P_2_W_1, EVEX_LEN_0F3A1A_P_2_W_0,
+	EVEX_LEN_0F3A1A_P_2_W_1, EVEX_LEN_0F3A1B_P_2_W_0,
+	EVEX_LEN_0F3A1B_P_2_W_1, EVEX_LEN_0F3A20_P_2,
+	EVEX_LEN_0F3A21_P_2_W_0, EVEX_LEN_0F3A22_P_2,
+	EVEX_LEN_0F3A23_P_2_W_0, EVEX_LEN_0F3A23_P_2_W_1,
+	EVEX_LEN_0F3A38_P_2_W_0, EVEX_LEN_0F3A38_P_2_W_1,
+	EVEX_LEN_0F3A39_P_2_W_0, EVEX_LEN_0F3A39_P_2_W_1,
+	EVEX_LEN_0F3A3A_P_2_W_0, EVEX_LEN_0F3A3A_P_2_W_1,
+	EVEX_LEN_0F3A3B_P_2_W_0, EVEX_LEN_0F3A3B_P_2_W_1,
+	EVEX_LEN_0F3A43_P_2_W_0, EVEX_LEN_0F3A43_P_2_W_1
+	VEX_W_0F380C_P_2, VEX_W_0F380D_P_2, VEX_W_0F380E_P_2,
+	VEX_W_0F380F_P_2, VEX_W_0F3813_P_2, VEX_W_0F3816_P_2,
+	VEX_W_0F3818_P_2, VEX_W_0F3819_P_2,
+	VEX_W_0F381A_P_2_M_0_L_0, VEX_W_0F382C_P_2_M_0,
+	VEX_W_0F382D_P_2_M_0, VEX_W_0F382E_P_2_M_0,
+	VEX_W_0F382F_P_2_M_0, VEX_W_0F3836_P_2,
+	VEX_W_0F3846_P_2, VEX_W_0F3858_P_2, VEX_W_0F3859_P_2,
+	VEX_W_0F385A_P_2_M_0_L_0, VEX_W_0F3878_P_2,
+	VEX_W_0F3879_P_2, VEX_W_0F38CF_P_2, VEX_W_0F3A00_P_2,
+	VEX_W_0F3A01_P_2, VEX_W_0F3A02_P_2, VEX_W_0F3A04_P_2,
+	VEX_W_0F3A05_P_2, VEX_W_0F3A06_P_2_L_0,
+	VEX_W_0F3A18_P_2_L_0, VEX_W_0F3A19_P_2_L_0,
+	VEX_W_0F3A1D_P_2, VEX_W_0F3A30_P_2_LEN_0,
+	VEX_W_0F3A31_P_2_LEN_0, VEX_W_0F3A32_P_2_LEN_0,
+	VEX_W_0F3A33_P_2_LEN_0, VEX_W_0F3A38_P_2_L_0,
+	VEX_W_0F3A39_P_2_L_0, VEX_W_0F3A46_P_2_L_0,
+	VEX_W_0F3A4A_P_2, VEX_W_0F3A4B_P_2, VEX_W_0F3A4C_P_2,
+	VEX_W_0F3ACE_P_2, VEX_W_0F3ACF_P_2, EVEX_W_0F66_P_2,
+	EVEX_W_0F72_R_2_P_2, EVEX_W_0F72_R_6_P_2,
+	EVEX_W_0F73_R_2_P_2, EVEX_W_0F73_R_6_P_2,
+	EVEX_W_0F76_P_2, EVEX_W_0FD6_P_2, EVEX_W_0FE7_P_2,
+	EVEX_W_0F380D_P_2, EVEX_W_0F3819_P_2,
+	EVEX_W_0F381A_P_2, EVEX_W_0F381B_P_2,
+	EVEX_W_0F381E_P_2, EVEX_W_0F381F_P_2,
+	EVEX_W_0F3837_P_2, EVEX_W_0F3859_P_2,
+	EVEX_W_0F385A_P_2, EVEX_W_0F385B_P_2,
+	EVEX_W_0F3870_P_2, EVEX_W_0F387A_P_2,
+	EVEX_W_0F387B_P_2, EVEX_W_0F3883_P_2,
+	EVEX_W_0F3891_P_2, EVEX_W_0F3893_P_2,
+	EVEX_W_0F38A1_P_2, EVEX_W_0F38A3_P_2,
+	EVEX_W_0F38C7_R_1_P_2, EVEX_W_0F38C7_R_2_P_2,
+	EVEX_W_0F38C7_R_5_P_2, EVEX_W_0F38C7_R_6_P_2,
+	EVEX_W_0F3A00_P_2, EVEX_W_0F3A01_P_2,
+	EVEX_W_0F3A05_P_2, EVEX_W_0F3A08_P_2,
+	EVEX_W_0F3A09_P_2, EVEX_W_0F3A0A_P_2,
+	EVEX_W_0F3A0B_P_2, EVEX_W_0F3A18_P_2,
+	EVEX_W_0F3A19_P_2, EVEX_W_0F3A1A_P_2,
+	EVEX_W_0F3A1B_P_2, EVEX_W_0F3A21_P_2,
+	EVEX_W_0F3A23_P_2, EVEX_W_0F3A38_P_2,
+	EVEX_W_0F3A39_P_2, EVEX_W_0F3A3A_P_2,
+	EVEX_W_0F3A3B_P_2, EVEX_W_0F3A42_P_2,
+	EVEX_W_0F3A43_P_2, EVEX_W_0F3A70_P_2,
+	EVEX_W_0F3A72_P_2): Rename to ...
+	(MOD_0F382A, MOD_0F38F5, MOD_VEX_0FD7, MOD_VEX_0FE7,
+	MOD_VEX_0F381A, MOD_VEX_0F382A, MOD_VEX_0F382C, MOD_VEX_0F382D,
+	MOD_VEX_0F382E, MOD_VEX_0F382F, MOD_VEX_0F385A, MOD_VEX_0F388C,
+	MOD_VEX_0F388E, MOD_VEX_0F3A30_L_0_W_0,
+	MOD_VEX_0F3A30_L_0_W_1, MOD_VEX_0F3A31_L_0_W_0,
+	MOD_VEX_0F3A31_L_0_W_1, MOD_VEX_0F3A32_L_0_W_0,
+	MOD_VEX_0F3A32_L_0_W_1, MOD_VEX_0F3A33_L_0_W_0,
+	MOD_VEX_0F3A33_L_0_W_1, MOD_EVEX_0F381A_W_0,
+	MOD_EVEX_0F381A_W_1, MOD_EVEX_0F381B_W_0, MOD_EVEX_0F381B_W_1,
+	MOD_EVEX_0F385A_W_0, MOD_EVEX_0F385A_W_1, MOD_EVEX_0F385B_W_0,
+	MOD_EVEX_0F385B_W_1, VEX_LEN_0F6E, VEX_LEN_0FC4, VEX_LEN_0FC5,
+	VEX_LEN_0FD6, VEX_LEN_0FF7, VEX_LEN_0F3816, VEX_LEN_0F3819,
+	VEX_LEN_0F381A_M_0, VEX_LEN_0F3836, VEX_LEN_0F3841,
+	VEX_LEN_0F385A_M_0, VEX_LEN_0F38DB, VEX_LEN_0F3A00,
+	VEX_LEN_0F3A01, VEX_LEN_0F3A06, VEX_LEN_0F3A14, VEX_LEN_0F3A15,
+	VEX_LEN_0F3A16, VEX_LEN_0F3A17, VEX_LEN_0F3A18, VEX_LEN_0F3A19,
+	VEX_LEN_0F3A20, VEX_LEN_0F3A21, VEX_LEN_0F3A22, VEX_LEN_0F3A30,
+	VEX_LEN_0F3A31, VEX_LEN_0F3A32, VEX_LEN_0F3A33, VEX_LEN_0F3A38,
+	VEX_LEN_0F3A39, VEX_LEN_0F3A41, VEX_LEN_0F3A46, VEX_LEN_0F3A60,
+	VEX_LEN_0F3A61, VEX_LEN_0F3A62, VEX_LEN_0F3A63, VEX_LEN_0F3ADF,
+	EVEX_LEN_0F6E, EVEX_LEN_0FC4, EVEX_LEN_0FC5, EVEX_LEN_0FD6,
+	EVEX_LEN_0F3816, EVEX_LEN_0F3819_W_0, EVEX_LEN_0F3819_W_1,
+	EVEX_LEN_0F381A_W_0_M_0, EVEX_LEN_0F381A_W_1_M_0,
+	EVEX_LEN_0F381B_W_0_M_0, EVEX_LEN_0F381B_W_1_M_0,
+	EVEX_LEN_0F3836, EVEX_LEN_0F385A_W_0_M_0,
+	EVEX_LEN_0F385A_W_1_M_0, EVEX_LEN_0F385B_W_0_M_0,
+	EVEX_LEN_0F385B_W_1_M_0, EVEX_LEN_0F38C6_R_1_M_0,
+	EVEX_LEN_0F38C6_R_2_M_0, EVEX_LEN_0F38C6_R_5_M_0,
+	EVEX_LEN_0F38C6_R_6_M_0, EVEX_LEN_0F38C7_R_1_M_0_W_0,
+	EVEX_LEN_0F38C7_R_1_M_0_W_1, EVEX_LEN_0F38C7_R_2_M_0_W_0,
+	EVEX_LEN_0F38C7_R_2_M_0_W_1, EVEX_LEN_0F38C7_R_5_M_0_W_0,
+	EVEX_LEN_0F38C7_R_5_M_0_W_1, EVEX_LEN_0F38C7_R_6_M_0_W_0,
+	EVEX_LEN_0F38C7_R_6_M_0_W_1, EVEX_LEN_0F3A00_W_1,
+	EVEX_LEN_0F3A01_W_1, EVEX_LEN_0F3A14, EVEX_LEN_0F3A15,
+	EVEX_LEN_0F3A16, EVEX_LEN_0F3A17, EVEX_LEN_0F3A18_W_0,
+	EVEX_LEN_0F3A18_W_1, EVEX_LEN_0F3A19_W_0,
+	EVEX_LEN_0F3A19_W_1, EVEX_LEN_0F3A1A_W_0,
+	EVEX_LEN_0F3A1A_W_1, EVEX_LEN_0F3A1B_W_0,
+	EVEX_LEN_0F3A1B_W_1, EVEX_LEN_0F3A20, EVEX_LEN_0F3A21_W_0,
+	EVEX_LEN_0F3A22, EVEX_LEN_0F3A23_W_0, EVEX_LEN_0F3A23_W_1,
+	EVEX_LEN_0F3A38_W_0, EVEX_LEN_0F3A38_W_1,
+	EVEX_LEN_0F3A39_W_0, EVEX_LEN_0F3A39_W_1,
+	EVEX_LEN_0F3A3A_W_0, EVEX_LEN_0F3A3A_W_1,
+	EVEX_LEN_0F3A3B_W_0, EVEX_LEN_0F3A3B_W_1,
+	EVEX_LEN_0F3A43_W_0, EVEX_LEN_0F3A43_W_1
+	VEX_W_0F380C, VEX_W_0F380D, VEX_W_0F380E, VEX_W_0F380F,
+	VEX_W_0F3813, VEX_W_0F3816_L_1, VEX_W_0F3818,
+	VEX_W_0F3819_L_1, VEX_W_0F381A_M_0_L_1, VEX_W_0F382C_M_0,
+	VEX_W_0F382D_M_0, VEX_W_0F382E_M_0, VEX_W_0F382F_M_0,
+	VEX_W_0F3836, VEX_W_0F3846, VEX_W_0F3858, VEX_W_0F3859,
+	VEX_W_0F385A_M_0_L_0, VEX_W_0F3878, VEX_W_0F3879,
+	VEX_W_0F38CF, VEX_W_0F3A00_L_1, VEX_W_0F3A01_L_1,
+	VEX_W_0F3A02, VEX_W_0F3A04, VEX_W_0F3A05, VEX_W_0F3A06_L_1,
+	VEX_W_0F3A18_L_1, VEX_W_0F3A19_L_1, VEX_W_0F3A1D,
+	VEX_W_0F3A30_L_0, VEX_W_0F3A31_L_0, VEX_W_0F3A32_L_0,
+	VEX_W_0F3A33_L_0, VEX_W_0F3A38_L_1, VEX_W_0F3A39_L_1,
+	VEX_W_0F3A46_L_1, VEX_W_0F3A4A, VEX_W_0F3A4B, VEX_W_0F3A4C,
+	VEX_W_0F3ACE, VEX_W_0F3ACF, EVEX_W_0F66, EVEX_W_0F72_R_2,
+	EVEX_W_0F72_R_6, EVEX_W_0F73_R_2, EVEX_W_0F73_R_6,
+	EVEX_W_0F76, EVEX_W_0FD6_L_0, EVEX_W_0FE7, EVEX_W_0F380D,
+	EVEX_W_0F3819, EVEX_W_0F381A, EVEX_W_0F381B, EVEX_W_0F381E,
+	EVEX_W_0F381F, EVEX_W_0F3837, EVEX_W_0F3859, EVEX_W_0F385A,
+	EVEX_W_0F385B, EVEX_W_0F3870, EVEX_W_0F387A, EVEX_W_0F387B,
+	EVEX_W_0F3883, EVEX_W_0F3891, EVEX_W_0F3893, EVEX_W_0F38A1,
+	EVEX_W_0F38A3, EVEX_W_0F38C7_R_1_M_0,
+	EVEX_W_0F38C7_R_2_M_0, EVEX_W_0F38C7_R_5_M_0,
+	EVEX_W_0F38C7_R_6_M_0, EVEX_W_0F3A00, EVEX_W_0F3A01,
+	EVEX_W_0F3A05, EVEX_W_0F3A08, EVEX_W_0F3A09, EVEX_W_0F3A0A,
+	EVEX_W_0F3A0B, EVEX_W_0F3A18, EVEX_W_0F3A19, EVEX_W_0F3A1A,
+	EVEX_W_0F3A1B, EVEX_W_0F3A21, EVEX_W_0F3A23, EVEX_W_0F3A38,
+	EVEX_W_0F3A39, EVEX_W_0F3A3A, EVEX_W_0F3A3B, EVEX_W_0F3A42,
+	EVEX_W_0F3A43, EVEX_W_0F3A70, EVEX_W_0F3A72): ... these
+	respectively.
+	(dis386_twobyte, three_byte_table, vex_table, vex_len_table,
+	vex_w_table, mod_table): Replace / remove respective entries.
+	(print_insn): Move up dp->prefix_requirement handling. Handle
+	PREFIX_DATA.
+	* i386-dis-evex.h, i386-dis-evex-len.h, i386-dis-evex-mod.h,
+	i386-dis-evex-prefix.h, i386-dis-evex-reg.h, i386-dis-evex-w.h:
+	Replace / remove respective entries.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PREFIX_EVEX_0F2C, PREFIX_EVEX_0F2D,
+	PREFIX_EVEX_0F2E, PREFIX_EVEX_0F2F): Delete.
+	(prefix_table): Add EXxEVexS operand to vcvttss2si, vcvttsd2si,
+	vcvtss2si, vcvtsd2si, vucomiss, and vucomisd table entries.
+	Retain X macro and PREFIX_OPCODE use from tjhe EVEX table for
+	the latter two.
+	* i386-dis-evex.h (evex_table): Reference VEX table for opcodes
+	0F2C, 0F2D, 0F2E, and 0F2F.
+	* i386-dis-evex-prefix.h: Delete opcode 0F2C, 0F2D, 0F2E, and
+	0F2F table entries.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_VexR, VexScalarR): New.
+	(OP_EX_Vex, OP_XMM_Vex, EXdVexScalarS, EXqVexScalarS,
+	XMVexScalar, d_scalar_swap_mode, q_scalar_swap_mode,
+	need_vex_reg): Delete.
+	(prefix_table): Replace VexScalar by VexScalarR and
+	XMVexScalar by XMScalar for vmovss and vmovsd. Replace
+	EXdVexScalarS by EXdS and EXqVexScalarS by EXqS.
+	(vex_len_table): Replace EXqVexScalarS by EXqS.
+	(get_valid_dis386): Don't set need_vex_reg.
+	(print_insn): Don't initialize need_vex_reg.
+	(intel_operand_size, OP_E_memory): Drop d_scalar_swap_mode and
+	q_scalar_swap_mode cases.
+	(OP_EX): Don't check for d_scalar_swap_mode and
+	q_scalar_swap_mode.
+	(OP_VEX): Done check need_vex_reg.
+	* i386-dis-evex-w.h: Replace VexScalar by VexScalarR and
+	XMVexScalar by XMScalar for vmovss and vmovsd. Replace
+	EXdVexScalarS by EXdS and EXqVexScalarS by EXqS.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (Vex128, Vex256, vex128_mode, vex256_mode): Delete.
+	(VEX_W_0F381A_P_2_M_0, VEX_W_0F385A_P_2_M_0, VEX_W_0F3A06_P_2,
+	VEX_W_0F3A18_P_2, VEX_W_0F3A19_P_2, VEX_W_0F3A38_P_2,
+	VEX_W_0F3A39_P_2, VEX_W_0F3A46_P_2): Rename to ...
+	(VEX_W_0F381A_P_2_M_0_L_0, VEX_W_0F385A_P_2_M_0_L_0,
+	VEX_W_0F3A06_P_2_L_0, VEX_W_0F3A18_P_2_L_0,
+	VEX_W_0F3A19_P_2_L_0, VEX_W_0F3A38_P_2_L_0,
+	VEX_W_0F3A39_P_2_L_0, VEX_W_0F3A46_P_2_L_0): ... respectively.
+	(vex_table): Replace Vex128 by Vex.
+	(vex_len_table): Likewise. Adjust referenced enum names.
+	(vex_w_table): Replace Vex128 and Vex256 by Vex. Adjust
+	referenced enum names.
+	(OP_VEX): Drop vex128_mode and vex256_mode cases.
+	* i386-dis-evex-len.h (evex_len_table): Replace Vex128 by Vex.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (dis386): "LW" description now applies to "DQ".
+	(putop): Handle "DQ". Don't handle "LW" anymore.
+	(prefix_table, mod_table): Replace %LW by %DQ.
+	* i386-dis-evex-len.h, i386-dis-evex-prefix.h: Likewise.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_E_memory): Move xmm_mw_mode, xmm_mb_mode,
+	dqd_mode, xmm_md_mode, d_mode, d_swap_mode, and
+	d_scalar_swap_mode case handling. Move shift adjsutment into
+	the case its applicable to.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EVEX_W_0F3862_P_2, EVEX_W_0F3863_P_2): Delete.
+	(EXbScalar, EXwScalar): Fold to ...
+	(EXbwUnit): ... this.
+	(b_scalar_mode, w_scalar_mode): Fold to ...
+	(bw_unit_mode): ... this.
+	(intel_operand_size, OP_E_memory): Replace b_scalar_mode /
+	w_scalar_mode handling by bw_unit_mode one.
+	* i386-dis-evex-w.h: Move entries for opcodes 0F3862 and 0F3863
+	...
+	* i386-dis-evex-prefix.h: ... here.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PCMPESTR_Fixup): Delete.
+	(dis386): Adjust "LQ" description.
+	(prefix_table): Make %LQ apply to AT&T case only for cvtsi2ss,
+	cvtsi2sd, ptwrite, vcvtsi2ss, and vcvtsi2sd. Replace use of
+	PCMPESTR_Fixup by !%LQ and EXx for pcmpestrm, pcmpestri,
+	vpcmpestrm, and vpcmpestri.
+	(putop): Honor "cond" when handling LQ.
+	* i386-dis-evex-prefix.h: Make %LQ apply to AT&T case only for
+	vcvtsi2ss and vcvtusi2ss.
+	* i386-dis-evex-w.h: Make %LQ apply to AT&T case only for
+	vcvtsi2sd and vcvtusi2sd.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (VCMP_Fixup, VCMP): Delete.
+	(simd_cmp_op): Add const.
+	(vex_cmp_op): Move up and drop initial 8 entries. Add const.
+	(CMP_Fixup): Handle VEX case.
+	(prefix_table): Replace VCMP by CMP.
+	* i386-dis-evex-prefix.h, i386-dis-evex-w.h: Likewise.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (MOVBE_Fixup): Delete.
+	(Mv): Define.
+	(prefix_table): Use Mv for movbe entries.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (CRC32_Fixup): Delete.
+	(prefix_table): Use Eb/Ev for crc32 entries.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_E_register, OP_G, OP_REG, CRC32_Fixup):
+	Conditionalize invocations of "USED_REX (0)".
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (eBX, eCX, eDX, eSP, eBP, eSI, eDI, DL, BL, AH,
+	CH, DH, BH, AX, DX): Delete.
+	(OP_IMREG): Drop handling of eBX_reg, eCX_reg, eDX_reg, eSP_reg,
+	eBP_reg, eSI_reg, eDI_reg, dl_reg, bl_reg, ah_reg, ch_reg,
+	dh_reg, bh_reg, ax_reg, and dx_reg. Simplify what's left.
+
+2020-07-10  Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (TMM): New.
+	(EXtmm): Likewise.
+	(VexTmm): Likewise.
+	(MVexSIBMEM): Likewise.
+	(tmm_mode): Likewise.
+	(vex_sibmem_mode): Likewise.
+	(REG_VEX_0F3849_X86_64_P_0_W_0_M_1): Likewise.
+	(MOD_VEX_0F3849_X86_64_P_0_W_0): Likewise.
+	(MOD_VEX_0F3849_X86_64_P_2_W_0): Likewise.
+	(MOD_VEX_0F3849_X86_64_P_3_W_0): Likewise.
+	(MOD_VEX_0F384B_X86_64_P_1_W_0): Likewise.
+	(MOD_VEX_0F384B_X86_64_P_2_W_0): Likewise.
+	(MOD_VEX_0F384B_X86_64_P_3_W_0): Likewise.
+	(MOD_VEX_0F385C_X86_64_P_1_W_0): Likewise.
+	(MOD_VEX_0F385E_X86_64_P_0_W_0): Likewise.
+	(MOD_VEX_0F385E_X86_64_P_1_W_0): Likewise.
+	(MOD_VEX_0F385E_X86_64_P_2_W_0): Likewise.
+	(MOD_VEX_0F385E_X86_64_P_3_W_0): Likewise.
+	(RM_VEX_0F3849_X86_64_P_0_W_0_M_1_R_0): Likewise.
+	(PREFIX_VEX_0F3849_X86_64): Likewise.
+	(PREFIX_VEX_0F384B_X86_64): Likewise.
+	(PREFIX_VEX_0F385C_X86_64): Likewise.
+	(PREFIX_VEX_0F385E_X86_64): Likewise.
+	(X86_64_VEX_0F3849): Likewise.
+	(X86_64_VEX_0F384B): Likewise.
+	(X86_64_VEX_0F385C): Likewise.
+	(X86_64_VEX_0F385E): Likewise.
+	(VEX_LEN_0F3849_X86_64_P_0_W_0_M_0): Likewise.
+	(VEX_LEN_0F3849_X86_64_P_0_W_0_M_1_REG_0_RM_0): Likewise.
+	(VEX_LEN_0F3849_X86_64_P_2_W_0_M_0): Likewise.
+	(VEX_LEN_0F3849_X86_64_P_3_W_0_M_0): Likewise.
+	(VEX_LEN_0F384B_X86_64_P_1_W_0_M_0): Likewise.
+	(VEX_LEN_0F384B_X86_64_P_2_W_0_M_0): Likewise.
+	(VEX_LEN_0F384B_X86_64_P_3_W_0_M_0): Likewise.
+	(VEX_LEN_0F385C_X86_64_P_1_W_0_M_0): Likewise.
+	(VEX_LEN_0F385E_X86_64_P_0_W_0_M_0): Likewise.
+	(VEX_LEN_0F385E_X86_64_P_1_W_0_M_0): Likewise.
+	(VEX_LEN_0F385E_X86_64_P_2_W_0_M_0): Likewise.
+	(VEX_LEN_0F385E_X86_64_P_3_W_0_M_0): Likewise.
+	(VEX_W_0F3849_X86_64_P_0): Likewise.
+	(VEX_W_0F3849_X86_64_P_2): Likewise.
+	(VEX_W_0F3849_X86_64_P_3): Likewise.
+	(VEX_W_0F384B_X86_64_P_1): Likewise.
+	(VEX_W_0F384B_X86_64_P_2): Likewise.
+	(VEX_W_0F384B_X86_64_P_3): Likewise.
+	(VEX_W_0F385C_X86_64_P_1): Likewise.
+	(VEX_W_0F385E_X86_64_P_0): Likewise.
+	(VEX_W_0F385E_X86_64_P_1): Likewise.
+	(VEX_W_0F385E_X86_64_P_2): Likewise.
+	(VEX_W_0F385E_X86_64_P_3): Likewise.
+	(names_tmm): Likewise.
+	(att_names_tmm): Likewise.
+	(intel_operand_size): Handle void_mode.
+	(OP_XMM): Handle tmm_mode.
+	(OP_EX): Likewise.
+	(OP_VEX): Likewise.
+	* i386-gen.c (cpu_flag_init): Add entries for CpuAMX_INT8,
+	CpuAMX_BF16 and CpuAMX_TILE.
+	(operand_type_shorthands): Add RegTMM.
+	(operand_type_init): Likewise.
+	(operand_types): Add Tmmword.
+	(cpu_flag_init): Add CPU_AMX_INT8, CpuAMX_BF16 and CpuAMX_TILE.
+	(cpu_flags): Add CpuAMX_INT8, CpuAMX_BF16 and CpuAMX_TILE.
+	* i386-opc.h (CpuAMX_INT8): New.
+	(CpuAMX_BF16): Likewise.
+	(CpuAMX_TILE): Likewise.
+	(SIBMEM): Likewise.
+	(Tmmword): Likewise.
+	(i386_cpu_flags): Add cpuamx_int8, cpuamx_bf16 and cpuamx_tile.
+	(i386_opcode_modifier): Extend width of fields vexvvvv and sib.
+	(i386_operand_type): Add tmmword.
+	* i386-opc.tbl: Add AMX instructions.
+	* i386-reg.tbl: Add AMX registers.
+	* i386-init.h: Regenerated.
+	* i386-tbl.h: Likewise.
+
+2020-07-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_LWPCB_E, OP_LWP_E): Delete.
+	(REG_XOP_LWPCB, REG_XOP_LWP, REG_XOP_TBM_01, REG_XOP_TBM_02):
+	Rename to ...
+	(REG_0FXOP_09_12_M_1_L_0, REG_0FXOP_0A_12_L_0,
+	REG_0FXOP_09_01_L_0, REG_0FXOP_09_02_L_0): ... these
+	respectively.
+	(MOD_VEX_0FXOP_09_12, VEX_LEN_0FXOP_08_85, VEX_LEN_0FXOP_08_86,
+	VEX_LEN_0FXOP_08_87, VEX_LEN_0FXOP_08_8E, VEX_LEN_0FXOP_08_8F,
+	VEX_LEN_0FXOP_08_95, VEX_LEN_0FXOP_08_96, VEX_LEN_0FXOP_08_97,
+	VEX_LEN_0FXOP_08_9E, VEX_LEN_0FXOP_08_9F, VEX_LEN_0FXOP_08_A3,
+	VEX_LEN_0FXOP_08_A6, VEX_LEN_0FXOP_08_B6, VEX_LEN_0FXOP_08_C0,
+	VEX_LEN_0FXOP_08_C1, VEX_LEN_0FXOP_08_C2, VEX_LEN_0FXOP_08_C3,
+	VEX_LEN_0FXOP_09_01, VEX_LEN_0FXOP_09_02, VEX_LEN_0FXOP_09_12_M_1,
+	VEX_LEN_0FXOP_09_90, VEX_LEN_0FXOP_09_91, VEX_LEN_0FXOP_09_92,
+	VEX_LEN_0FXOP_09_93, VEX_LEN_0FXOP_09_94, VEX_LEN_0FXOP_09_95,
+	VEX_LEN_0FXOP_09_96, VEX_LEN_0FXOP_09_97, VEX_LEN_0FXOP_09_98,
+	VEX_LEN_0FXOP_09_99, VEX_LEN_0FXOP_09_9A, VEX_LEN_0FXOP_09_9B,
+	VEX_LEN_0FXOP_09_C1, VEX_LEN_0FXOP_09_C2, VEX_LEN_0FXOP_09_C3,
+	VEX_LEN_0FXOP_09_C6, VEX_LEN_0FXOP_09_C7, VEX_LEN_0FXOP_09_CB,
+	VEX_LEN_0FXOP_09_D1, VEX_LEN_0FXOP_09_D2, VEX_LEN_0FXOP_09_D3,
+	VEX_LEN_0FXOP_09_D6, VEX_LEN_0FXOP_09_D7, VEX_LEN_0FXOP_09_DB,
+	VEX_LEN_0FXOP_09_E1, VEX_LEN_0FXOP_09_E2, VEX_LEN_0FXOP_09_E3,
+	VEX_LEN_0FXOP_0A_12, VEX_W_0FXOP_08_85_L_0,
+	VEX_W_0FXOP_08_86_L_0, VEX_W_0FXOP_08_87_L_0,
+	VEX_W_0FXOP_08_8E_L_0, VEX_W_0FXOP_08_8F_L_0,
+	VEX_W_0FXOP_08_95_L_0, VEX_W_0FXOP_08_96_L_0,
+	VEX_W_0FXOP_08_97_L_0, VEX_W_0FXOP_08_9E_L_0,
+	VEX_W_0FXOP_08_9F_L_0, VEX_W_0FXOP_08_A6_L_0,
+	VEX_W_0FXOP_08_B6_L_0, VEX_W_0FXOP_08_C0_L_0,
+	VEX_W_0FXOP_08_C1_L_0, VEX_W_0FXOP_08_C2_L_0,
+	VEX_W_0FXOP_08_C3_L_0, VEX_W_0FXOP_08_CC_L_0,
+	VEX_W_0FXOP_08_CD_L_0, VEX_W_0FXOP_08_CE_L_0,
+	VEX_W_0FXOP_08_CF_L_0, VEX_W_0FXOP_08_EC_L_0,
+	VEX_W_0FXOP_08_ED_L_0, VEX_W_0FXOP_08_EE_L_0,
+	VEX_W_0FXOP_08_EF_L_0, VEX_W_0FXOP_09_C1_L_0,
+	VEX_W_0FXOP_09_C2_L_0, VEX_W_0FXOP_09_C3_L_0,
+	VEX_W_0FXOP_09_C6_L_0, VEX_W_0FXOP_09_C7_L_0,
+	VEX_W_0FXOP_09_CB_L_0, VEX_W_0FXOP_09_D1_L_0,
+	VEX_W_0FXOP_09_D2_L_0, VEX_W_0FXOP_09_D3_L_0,
+	VEX_W_0FXOP_09_D6_L_0, VEX_W_0FXOP_09_D7_L_0,
+	VEX_W_0FXOP_09_DB_L_0, VEX_W_0FXOP_09_E1_L_0,
+	VEX_W_0FXOP_09_E2_L_0, VEX_W_0FXOP_09_E3_L_0): New enumerators.
+	(reg_table): Re-order XOP entries. Adjust their operands.
+	(xop_table): Replace 08_85, 08_86, 08_87, 08_8E, 08_8F, 08_95,
+	08_96, 08_97, 08_9E, 08_9F, 08_A3, 08_A6, 08_B6, 08_C0, 08_C1,
+	08_C2, 08_C3, 09_01, 09_02, 09_12, 09_90, 09_91, 09_92, 09_93,
+	09_94, 09_95, 09_96, 09_97, 09_98, 09_99, 09_9A, 09_9B, 09_C1,
+	09_C2, 09_C3, 09_C6, 09_C7, 09_CB, 09_D1, 09_D2, 09_D3, 09_D6,
+	09_D7, 09_DB, 09_E1, 09_E2, 09_E3, and VEX_LEN_0FXOP_0A_12
+	entries by references ...
+	(vex_len_table): ... to resepctive new entries here. For several
+	new and existing entries reference ...
+	(vex_w_table): ... new entries here.
+	(mod_table): New MOD_VEX_0FXOP_09_12 entry.
+
+2020-07-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (XMVexScalarI4): Define.
+	(VEX_LEN_0F3A6A_P_2, VEX_LEN_0F3A6B_P_2, VEX_LEN_0F3A6E_P_2,
+	VEX_LEN_0F3A6F_P_2, VEX_LEN_0F3A7A_P_2, VEX_LEN_0F3A7B_P_2,
+	VEX_LEN_0F3A7E_P_2, VEX_LEN_0F3A7F_P_2): Delete.
+	(vex_len_table): Move scalar FMA4 entries ...
+	(prefix_table): ... here.
+	(OP_REG_VexI4): Handle scalar_mode.
+	* i386-opc.tbl: Use VexLIG for scalar FMA4 insns.
+	* i386-tbl.h: Re-generate.
+
+2020-07-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_Vex_2src_1, OP_Vex_2src_2, Vex_2src_1,
+	Vex_2src_2): Delete.
+	(OP_VexW, VexW): New.
+	(xop_table): Use EXx for rotates by immediate. Use EXx and VexW
+	for shifts and rotates by register.
+
+2020-07-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_EX_VexImmW, OP_XMM_VexW, EXVexImmW, XMVexW,
+	VEX_W_0F3A48_P_2, VEX_W_0F3A49_P_2, vex_w_done, get_vex_imm8,
+	OP_EX_VexReg): Delete.
+	(OP_VexI4, VexI4): New.
+	(vex_w_table): Move vpermil2ps and vpermil2pd entries ...
+	(prefix_table): ... here.
+	(print_insn): Drop setting of vex_w_done.
+
+2020-07-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_EX_VexW, EXVexW, EXdVexW, EXqVexW): Delete.
+	(prefix_table, vex_len_table): Replace operands for FMA4 insns.
+	(xop_table): Replace operands of 4-operand insns.
+	(OP_REG_VexI4): Move VEX.W based operand swaping here.
+
+2020-07-07  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* arc-opc.c (insert_rbd): New function.
+	(RBD): Define.
+	(RBDdup): Likewise.
+	* arc-tbl.h (vadd2, vadd4h, vmac2h, vmpy2h, vsub4h): Update
+	instructions.
+
+2020-07-07  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EVEX_W_0F3826_P_1, EVEX_W_0F3826_P_2,
+	EVEX_W_0F3828_P_1, EVEX_W_0F3829_P_1, EVEX_W_0F3854_P_2,
+	EVEX_W_0F3866_P_2, EVEX_W_0F3875_P_2, EVEX_W_0F387D_P_2,
+	EVEX_W_0F388D_P_2, EVEX_W_0F3A3E_P_2, EVEX_W_0F3A3F_P_2):
+	Delete.
+	(putop): Handle "BW".
+	* i386-dis-evex-w.h: Move entries for opcodes 0F3826, 0F3826,
+	0F3828, 0F3829, 0F3854, 0F3866, 0F3875, 0F387D, 0F388D, 0F3A3E,
+	and 0F3A3F ...
+	* i386-dis-evex-prefix.h: ... here.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (VEX_LEN_0FXOP_09_80, VEX_LEN_0FXOP_09_81): Delete.
+	(VEX_LEN_0FXOP_09_82_W_0, VEX_LEN_0FXOP_09_83_W_0,
+	VEX_W_0FXOP_09_80, VEX_W_0FXOP_09_81, VEX_W_0FXOP_09_82,
+	VEX_W_0FXOP_09_83): New enumerators.
+	(xop_table): Reference the above.
+	(vex_len_table): Replace vfrczp* entries by vfrczs* ones.
+	(vex_w_table): New VEX_W_0FXOP_09_80, VEX_W_0FXOP_09_81,
+	VEX_W_0FXOP_09_82, and VEX_W_0FXOP_09_83 entries.
+	(get_valid_dis386): Return bad_opcode for XOP.PP != 0.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EVEX_W_0F3838_P_1,
+	EVEX_W_0F3839_P_1, EVEX_W_0F3840_P_2, EVEX_W_0F3855_P_2,
+	EVEX_W_0F3868_P_3, EVEX_W_0F3871_P_2, EVEX_W_0F3873_P_2,
+	EVEX_W_0F3A50_P_2, EVEX_W_0F3A51_P_2, EVEX_W_0F3A56_P_2,
+	EVEX_W_0F3A57_P_2, EVEX_W_0F3A66_P_2, EVEX_W_0F3A67_P_2,
+	EVEX_W_0F3A71_P_2, EVEX_W_0F3A73_P_2): Delete.
+	(putop): Centralize management of last[]. Delete SAVE_LAST.
+	* i386-dis-evex-w.h: Move entries for opcodes 0F3838, 0F3839,
+	0F3840, 0F3855, 0F3868, 0F3871, 0F3873, 0F3A50, 0F3A51, 0F3A56,
+	0F3A57, 0F3A66, 0F3A67,	0F3A71, and 0F3A73 ...
+	* i386-dis-evex-prefix.h: here.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (MOD_EVEX_0F381A_P_2_W_0, MOD_EVEX_0F381A_P_2_W_1,
+	MOD_EVEX_0F381B_P_2_W_0, MOD_EVEX_0F381B_P_2_W_1,
+	MOD_EVEX_0F385A_P_2_W_0, MOD_EVEX_0F385A_P_2_W_1,
+	MOD_EVEX_0F385B_P_2_W_0, MOD_EVEX_0F385B_P_2_W_1): New
+	enumerators.
+	(EVEX_LEN_0F381A_P_2_W_0, EVEX_LEN_0F381A_P_2_W_1,
+	EVEX_LEN_0F381B_P_2_W_0, EVEX_LEN_0F381B_P_2_W_1,
+	EVEX_LEN_0F385A_P_2_W_0, EVEX_LEN_0F385A_P_2_W_1,
+	EVEX_LEN_0F385B_P_2_W_0, EVEX_LEN_0F385B_P_2_W_1): Rename to ...
+	(EVEX_LEN_0F381A_P_2_W_0_M_0, EVEX_LEN_0F381A_P_2_W_1_M_0,
+	EVEX_LEN_0F381B_P_2_W_0_M_0, EVEX_LEN_0F381B_P_2_W_1_M_0,
+	EVEX_LEN_0F385A_P_2_W_0_M_0, EVEX_LEN_0F385A_P_2_W_1_M_0,
+	EVEX_LEN_0F385B_P_2_W_0_M_0, EVEX_LEN_0F385B_P_2_W_1_M_0): ...
+	these, respectively.
+	* i386-dis-evex-len.h: Adjust comments.
+	* i386-dis-evex-mod.h: New MOD_EVEX_0F381A_P_2_W_0,
+	MOD_EVEX_0F381A_P_2_W_1, MOD_EVEX_0F381B_P_2_W_0,
+	MOD_EVEX_0F381B_P_2_W_1, MOD_EVEX_0F385A_P_2_W_0,
+	MOD_EVEX_0F385A_P_2_W_1, MOD_EVEX_0F385B_P_2_W_0, and
+	MOD_EVEX_0F385B_P_2_W_1 table entries.
+	* i386-dis-evex-w.h: Reference mod_table[] for
+	EVEX_W_0F381A_P_2, EVEX_W_0F381B_P_2, EVEX_W_0F385A_P_2, and
+	EVEX_W_0F385B_P_2.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis-evex-len.h (vbroadcastf32x8, vbroadcasti32x8,
+	vinsertf32x8, vinsertf64x4, vextractf32x8, vextractf64x4): Use
+	EXymm.
+	(vinserti32x8, vinserti64x4, vextracti32x8, vextracti64x4):
+	Likewise. Mark 256-bit entries invalid.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PREFIX_EVEX_0F62, PREFIX_EVEX_0F6A,
+	PREFIX_EVEX_0F6B, PREFIX_EVEX_0F6C, PREFIX_EVEX_0F6D,
+	PREFIX_EVEX_0FD2, PREFIX_EVEX_0FD3, PREFIX_EVEX_0FD4,
+	PREFIX_EVEX_0FF2, PREFIX_EVEX_0FF3, PREFIX_EVEX_0FF4,
+	PREFIX_EVEX_0FFA, PREFIX_EVEX_0FFB, PREFIX_EVEX_0FFE,
+	PREFIX_EVEX_0F382B): Delete.
+	(EVEX_W_0F62_P_2, EVEX_W_0F6A_P_2, EVEX_W_0F6B_P_2,
+	EVEX_W_0F6C_P_2, EVEX_W_0F6D_P_2, EVEX_W_0FD2_P_2,
+	EVEX_W_0FD3_P_2, EVEX_W_0FD4_P_2, EVEX_W_0FF2_P_2,
+	EVEX_W_0FF3_P_2, EVEX_W_0FF4_P_2, EVEX_W_0FFA_P_2,
+	EVEX_W_0FFB_P_2, EVEX_W_0FFE_P_2, EVEX_W_0F382B_P_2): Rename
+	to ...
+	(EVEX_W_0F62, EVEX_W_0F6A, EVEX_W_0F6B, EVEX_W_0F6C,
+	EVEX_W_0F6D, EVEX_W_0FD2, EVEX_W_0FD3, EVEX_W_0FD4,
+	EVEX_W_0FF2, EVEX_W_0FF3, EVEX_W_0FF4, EVEX_W_0FFA,
+	EVEX_W_0FFB, EVEX_W_0FFE, EVEX_W_0F382B): ... these
+	respectively.
+	* i386-dis-evex.h (evex_table): Reference VEX_W table entries
+	for opcodes 0F62, 0F6A, 0F6B, 0F6C, 0F6D, 0FD2, 0FD3, 0FD4,
+	0FF2, 0FF3, 0FF4, 0FFA, 0FFB, 0FFE, 0F382B.
+	* i386-dis-evex-prefix.h (PREFIX_EVEX_0F62, PREFIX_EVEX_0F6A,
+	PREFIX_EVEX_0F6B, PREFIX_EVEX_0F6C, PREFIX_EVEX_0F6D,
+	PREFIX_EVEX_0FD2, PREFIX_EVEX_0FD3, PREFIX_EVEX_0FD4,
+	PREFIX_EVEX_0FF2, PREFIX_EVEX_0FF3, PREFIX_EVEX_0FF4,
+	PREFIX_EVEX_0FFA, PREFIX_EVEX_0FFB, PREFIX_EVEX_0FFE,
+	PREFIX_EVEX_0F382B): Remove table entries.
+	* i386-dis-evex-w.h: Reference VEX table entries for opcodes
+	0F62, 0F6A, 0F6B, 0F6C, 0F6D, 0FD2, 0FD3, 0FD4, 0FF2, 0FF3,
+	0FF4, 0FFA, 0FFB, 0FFE, 0F382B.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EVEX_LEN_0F3816_P_2, EVEX_LEN_0F3836_P_2,
+	EVEX_LEN_0F3A00_P_2_W_1, EVEX_LEN_0F3A01_P_2_W_1): New
+	enumerators.
+	* i386-dis-evex-len.h (evex_len_table): New EVEX_LEN_0F3816_P_2,
+	EVEX_LEN_0F3836_P_2, EVEX_LEN_0F3A00_P_2_W_1, and
+	EVEX_LEN_0F3A01_P_2_W_1 table entries.
+	* i386-dis-evex-prefix.h, i386-dis-evex-w.h: Reference the above
+	entries.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EVEX_LEN_0FC4_P_2, EVEX_LEN_0FC5_P_2,
+	EVEX_LEN_0F3A14_P_2, EVEX_LEN_0F3A15_P_2, EVEX_LEN_0F3A16_P_2,
+	EVEX_LEN_0F3A17_P_2, EVEX_LEN_0F3A20_P_2,
+	EVEX_LEN_0F3A21_P_2_W_0, EVEX_LEN_0F3A22_P_2): New enumerators.
+	* i386-dis-evex-len.h (evex_len_table): New EVEX_LEN_0FC4_P_2,
+	EVEX_LEN_0FC5_P_2, EVEX_LEN_0F3A14_P_2, EVEX_LEN_0F3A15_P_2,
+	EVEX_LEN_0F3A16_P_2, EVEX_LEN_0F3A17_P_2, EVEX_LEN_0F3A20_P_2,
+	EVEX_LEN_0F3A21_P_2_W_0, and EVEX_LEN_0F3A22_P_2 table entries.
+	* i386-dis-evex-prefix.h, i386-dis-evex-w.h: Reference the above
+	entries.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PREFIX_EVEX_0F3A1D, EVEX_W_0F3A1D_P_2): Delete.
+	(VEX_W_0F3813_P_2, VEX_W_0F3A1D_P_2): New enumerators.
+	(prefix_table): Reference VEX_W_0F3813_P_2 and VEX_W_0F3A1D_P_2
+	respectively.
+	(vex_w_table): New VEX_W_0F3813_P_2 and VEX_W_0F3A1D_P_2 table
+	entries.
+	* i386-dis-evex.h (evex_table): Reference VEX table entry for
+	opcode 0F3A1D.
+	* i386-dis-evex-prefix.h (PREFIX_EVEX_0F3A1D): Delete table
+	entry.
+	* i386-dis-evex-w.h (EVEX_W_0F3A1D_P_2): Likewise.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PREFIX_EVEX_0F60, PREFIX_EVEX_0F61,
+	PREFIX_EVEX_0F63, PREFIX_EVEX_0F67, PREFIX_EVEX_0F68,
+	PREFIX_EVEX_0F69, PREFIX_EVEX_0FD1, PREFIX_EVEX_0FD5,
+	PREFIX_EVEX_0FD8, PREFIX_EVEX_0FD9, PREFIX_EVEX_0FDA,
+	PREFIX_EVEX_0FDC, PREFIX_EVEX_0FDD, PREFIX_EVEX_0FDE,
+	PREFIX_EVEX_0FE0, PREFIX_EVEX_0FE1, PREFIX_EVEX_0FE3,
+	PREFIX_EVEX_0FE4, PREFIX_EVEX_0FE5, PREFIX_EVEX_0FE8,
+	PREFIX_EVEX_0FE9, PREFIX_EVEX_0FEA, PREFIX_EVEX_0FEC,
+	PREFIX_EVEX_0FED, PREFIX_EVEX_0FEE, PREFIX_EVEX_0FF1,
+	PREFIX_EVEX_0FF5, PREFIX_EVEX_0FF6, PREFIX_EVEX_0FF8,
+	PREFIX_EVEX_0FF9, PREFIX_EVEX_0FFC, PREFIX_EVEX_0FFD,
+	PREFIX_EVEX_0F3800, PREFIX_EVEX_0F3804, PREFIX_EVEX_0F380B,
+	PREFIX_EVEX_0F380C, PREFIX_EVEX_0F3818, PREFIX_EVEX_0F381C,
+	PREFIX_EVEX_0F381D, PREFIX_EVEX_0F383C, PREFIX_EVEX_0F383E,
+	PREFIX_EVEX_0F3858, PREFIX_EVEX_0F3878, PREFIX_EVEX_0F3879,
+	PREFIX_EVEX_0F3896, PREFIX_EVEX_0F3897, PREFIX_EVEX_0F3898,
+	PREFIX_EVEX_0F3899, PREFIX_EVEX_0F389C, PREFIX_EVEX_0F389D,
+	PREFIX_EVEX_0F389E, PREFIX_EVEX_0F389F, PREFIX_EVEX_0F38A6,
+	PREFIX_EVEX_0F38A7, PREFIX_EVEX_0F38A8, PREFIX_EVEX_0F38A9,
+	PREFIX_EVEX_0F38AC, PREFIX_EVEX_0F38AD, PREFIX_EVEX_0F38AE,
+	PREFIX_EVEX_0F38AF, PREFIX_EVEX_0F38B6, PREFIX_EVEX_0F38B7,
+	PREFIX_EVEX_0F38B8, PREFIX_EVEX_0F38B9, PREFIX_EVEX_0F38BA,
+	PREFIX_EVEX_0F38BB, PREFIX_EVEX_0F38BC, PREFIX_EVEX_0F38BD,
+	PREFIX_EVEX_0F38BE, PREFIX_EVEX_0F38BF, PREFIX_EVEX_0F38CF,
+	PREFIX_EVEX_0F38DC, PREFIX_EVEX_0F38DD, PREFIX_EVEX_0F38DE,
+	PREFIX_EVEX_0F38DF, PREFIX_EVEX_0F3A04, PREFIX_EVEX_0F3A0F,
+	PREFIX_EVEX_0F3A44, PREFIX_EVEX_0F3ACE, PREFIX_EVEX_0F3ACF,
+	EVEX_W_0F380C_P_2, EVEX_W_0F3818_P_2, EVEX_W_0F3858_P_2,
+	EVEX_W_0F3878_P_2, EVEX_W_0F3879_P_2, EVEX_W_0F3A04_P_2,
+	EVEX_W_0F3ACE_P_2, EVEX_W_0F3ACF_P_2): Delete.
+	(prefix_table): Add EXxEVexR to FMA table entries.
+	(OP_Rounding): Move abort() invocation.
+	* i386-dis-evex.h (evex_table): Reference VEX table for opcodes
+	0F60, 0F61, 0F63, 0F67, 0F68, 0F69, 0FD1, 0FD5, 0FD8, 0FD9,
+	0FDA, 0FDC, 0FDD, 0FDE, 0FE0, 0FE1, 0FE3, 0FE4, 0FE5, 0FE8,
+	0FE9, 0FEA, 0FEC, 0FED, 0FEE, 0FF1, 0FF5, 0FF6, 0FF8, 0FF9,
+	0FFC, 0FFD, 0F3800, 0F3804, 0F380B, 0F380C, 0F3818, 0F381C,
+	0F381D, 0F383C, 0F383E, 0F3858, 0F3878, 0F3879, 0F3896, 0F3897,
+	0F3898, 0F3899, 0F389C, 0F389D, 0F389E, 0F389F, 0F38A6, 0F38A7,
+	0F38A8, 0F38A9, 0F38AC, 0F38AD, 0F38AE, 0F38AF, 0F38B6, 0F38B7,
+	0F38B8, 0F38B9, 0F38BA, 0F38BB, 0F38BC, 0F38BD, 0F38BE, 0F38BF,
+	0F38CF, 0F38DC, 0F38DD, 0F38DE, 0F38DF, 0F3A04, 0F3A0F, 0F3A44,
+	0F3ACE, 0F3ACF.
+	* i386-dis-evex-prefix.h (PREFIX_EVEX_0F60, PREFIX_EVEX_0F61,
+	PREFIX_EVEX_0F63, PREFIX_EVEX_0F67, PREFIX_EVEX_0F68,
+	PREFIX_EVEX_0F69, PREFIX_EVEX_0FD1, PREFIX_EVEX_0FD5,
+	PREFIX_EVEX_0FD8, PREFIX_EVEX_0FD9, PREFIX_EVEX_0FDA,
+	PREFIX_EVEX_0FDC, PREFIX_EVEX_0FDD, PREFIX_EVEX_0FDE,
+	PREFIX_EVEX_0FE0, PREFIX_EVEX_0FE1, PREFIX_EVEX_0FE3,
+	PREFIX_EVEX_0FE4, PREFIX_EVEX_0FE5, PREFIX_EVEX_0FE8,
+	PREFIX_EVEX_0FE9, PREFIX_EVEX_0FEA, PREFIX_EVEX_0FEC,
+	PREFIX_EVEX_0FED, PREFIX_EVEX_0FEE, PREFIX_EVEX_0FF1,
+	PREFIX_EVEX_0FF5, PREFIX_EVEX_0FF6, PREFIX_EVEX_0FF8,
+	PREFIX_EVEX_0FF9, PREFIX_EVEX_0FFC, PREFIX_EVEX_0FFD,
+	PREFIX_EVEX_0F3800, PREFIX_EVEX_0F3804, PREFIX_EVEX_0F380B,
+	PREFIX_EVEX_0F380C, PREFIX_EVEX_0F3818, PREFIX_EVEX_0F381C,
+	PREFIX_EVEX_0F381D, PREFIX_EVEX_0F383C, PREFIX_EVEX_0F383E,
+	PREFIX_EVEX_0F3858, PREFIX_EVEX_0F3878, PREFIX_EVEX_0F3879,
+	PREFIX_EVEX_0F3896, PREFIX_EVEX_0F3897, PREFIX_EVEX_0F3898,
+	PREFIX_EVEX_0F3899, PREFIX_EVEX_0F389C, PREFIX_EVEX_0F389D,
+	PREFIX_EVEX_0F389E, PREFIX_EVEX_0F389F, PREFIX_EVEX_0F38A6,
+	PREFIX_EVEX_0F38A7, PREFIX_EVEX_0F38A8, PREFIX_EVEX_0F38A9,
+	PREFIX_EVEX_0F38AC, PREFIX_EVEX_0F38AD, PREFIX_EVEX_0F38AE,
+	PREFIX_EVEX_0F38AF, PREFIX_EVEX_0F38B6, PREFIX_EVEX_0F38B7,
+	PREFIX_EVEX_0F38B8, PREFIX_EVEX_0F38B9, PREFIX_EVEX_0F38BA,
+	PREFIX_EVEX_0F38BB, PREFIX_EVEX_0F38BC, PREFIX_EVEX_0F38BD,
+	PREFIX_EVEX_0F38BE, PREFIX_EVEX_0F38BF, PREFIX_EVEX_0F38CF,
+	PREFIX_EVEX_0F38DC, PREFIX_EVEX_0F38DD, PREFIX_EVEX_0F38DE,
+	PREFIX_EVEX_0F38DF, PREFIX_EVEX_0F3A04, PREFIX_EVEX_0F3A0F,
+	PREFIX_EVEX_0F3A44, PREFIX_EVEX_0F3ACE, PREFIX_EVEX_0F3ACF):
+	Delete table entries.
+	* i386-dis-evex-w.h (EVEX_W_0F380C_P_2, EVEX_W_0F3818_P_2,
+	EVEX_W_0F3858_P_2, EVEX_W_0F3878_P_2, EVEX_W_0F3879_P_2,
+	EVEX_W_0F3A04_P_2, EVEX_W_0F3ACE_P_2, EVEX_W_0F3ACF_P_2):
+	Likewise.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EXqScalarS): Delete.
+	(vex_len_table): Replace EXqScalarS by EXqVexScalarS.
+	* i386-dis-evex-w.h (vmovq): Use EXqVexScalarS.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (safe-ctype.h): Include.
+	(EXdScalar, EXqScalar): Delete.
+	(d_scalar_mode, q_scalar_mode): Delete.
+	(prefix_table, vex_len_table): Use EXxmm_md in place of
+	EXdScalar and EXxmm_mq in place of EXqScalar.
+	(intel_operand_size, OP_E_memory, OP_EX): Remove uses of
+	d_scalar_mode and q_scalar_mode.
+	* i386-dis-evex-w.h (vmovss): Use EXxmm_md.
+	(vmovsd): Use EXxmm_mq.
+
+2020-07-06  Yuri Chornoivan  <yurchor@ukr.net>
+
+	PR 26204
+	* arc-dis.c: Fix spelling mistake.
+	* po/opcodes.pot: Regenerate.
+
+2020-07-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/pt_BR.po: Updated Brazilian Portugugese translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/opcodes.pot: Regenerate.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-07-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-gen.c (opcode_modifiers): Add VexSwapSources.
+	* i386-opc.h (VexSwapSources): New.
+	(i386_opcode_modifier): Add vexswapsources.
+	* i386-opc.tbl: Add VexSwapSources to BMI2 and BMI instructions
+	with two source operands swapped.
+	* i386-tbl.h: Regenerated.
+
+2020-06-30  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-dis.c (print_insn_args, case 'E'): Updated.  Let the
+	unprivileged CSR can also be initialized.
+
+2020-06-29  Alan Modra  <amodra@gmail.com>
+
+	* arm-dis.c: Use C style comments.
+	* cr16-opc.c: Likewise.
+	* ft32-dis.c: Likewise.
+	* moxie-opc.c: Likewise.
+	* tic54x-dis.c: Likewise.
+	* s12z-opc.c: Remove useless comment.
+	* xgate-dis.c: Likewise.
+
+2020-06-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-opc.tbl: Add a blank line.
+
+2020-06-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-gen.c (opcode_modifiers): Replace VecSIB with SIB.
+	(VecSIB128): Renamed to ...
+	(VECSIB128): This.
+	(VecSIB256): Renamed to ...
+	(VECSIB256): This.
+	(VecSIB512): Renamed to ...
+	(VECSIB512): This.
+	(VecSIB): Renamed to ...
+	(SIB): This.
+	(i386_opcode_modifier): Replace vecsib with sib.
+	* i386-opc.tbl (VecSIB128): New.
+	(VecSIB256): Likewise.
+	(VecSIB512): Likewise.
+	Replace VecSIB=1, VecSIB=2 and VecSIB=3 with VecSIB128, VecSIB256
+	and VecSIB512, respectively.
+
+2020-06-26  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c: Adjust description of I macro.
+	(x86_64_table): Drop use of I.
+	(float_mem): Replace use of I.
+	(putop): Remove handling of I. Adjust setting/clearing of "alt".
+
+2020-06-26  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c: (print_insn): Avoid straight assignment to
+	priv.orig_sizeflag when processing -M sub-options.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c: Adjust description of J macro.
+	(dis386, x86_64_table, mod_table): Replace J.
+	(putop): Remove handling of J.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c: (float_mem): Reduce alternatives for fstpt and fldpt.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c: Adjust description of "LQ" macro.
+	(dis386_twobyte): Use LQ for sysret.
+	(putop): Adjust handling of LQ.
+
+2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c: Move the structures and functions to bfd/elfxx-riscv.c.
+	* riscv-dis.c: Include elfxx-riscv.h.
+
+2020-06-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-dis.c (prefix_table): Revert the last vmgexit change.
+
+2020-06-17  Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (prefix_table): Delete the incorrect vmgexit.
+
+2020-06-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26115
+	* i386-dis.c (prefix_table): Replace xsuspldtrk with xsusldtrk.
+	* i386-opc.tbl: Likewise.
+	* i386-tbl.h: Regenerated.
+
+2020-06-12  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (priv_specs): Remove v1.9 and PRIV_SPEC_CLASS_1P9.
+
+2020-06-11  Alex Coplan  <alex.coplan@arm.com>
+
+	* aarch64-opc.c (SYSREG): New macro for describing system registers.
+	(SR_CORE): Likewise.
+	(SR_FEAT): Likewise.
+	(SR_RNG): Likewise.
+	(SR_V8_1): Likewise.
+	(SR_V8_2): Likewise.
+	(SR_V8_3): Likewise.
+	(SR_V8_4): Likewise.
+	(SR_PAN): Likewise.
+	(SR_RAS): Likewise.
+	(SR_SSBS): Likewise.
+	(SR_SVE): Likewise.
+	(SR_ID_PFR2): Likewise.
+	(SR_PROFILE): Likewise.
+	(SR_MEMTAG): Likewise.
+	(SR_SCXTNUM): Likewise.
+	(aarch64_sys_regs): Refactor to store feature information in the table.
+	(aarch64_sys_reg_supported_p): Collapse logic for system registers
+	that now describe their own features.
+	(aarch64_pstatefield_supported_p): Likewise.
+
+2020-06-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-dis.c (prefix_table): Fix a typo in comments.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (rex_ignored): Delete.
+	(ckprefix): Drop rex_ignored initialization.
+	(get_valid_dis386): Drop setting of rex_ignored.
+	(print_insn): Drop checking of rex_ignored. Don't record data
+	size prefix as used with VEX-and-alike encodings.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (MOD_0F12_PREFIX_2, MOD_0F16_PREFIX_2,
+	MOD_VEX_0F12_PREFIX_2, MOD_VEX_0F16_PREFIX_2): New enumerators.
+	(VEX_LEN_0F12_P_2, VEX_LEN_0F16_P_2): Delete.
+	(VEX_LEN_0F12_P_2_M_0, VEX_LEN_0F16_P_2_M_0): Define.
+	(prefix_table): Decode MOD for cases 2 of opcodes 0F12, 0F16,
+	VEX_0F12, and VEX_0F16.
+	(vex_len_table): Use X for vmovlp* and vmovh*s. Drop
+	VEX_LEN_0F12_P_2 and VEX_LEN_0F16_P_2 entries.
+	(mod_table): Use X for movlpX and movhpX. Drop PREFIX_OPCODE
+	from movlps and movhlps. New MOD_0F12_PREFIX_2,
+	MOD_0F16_PREFIX_2, MOD_VEX_0F12_PREFIX_2, and
+	MOD_VEX_0F16_PREFIX_2 entries.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (MOD_EVEX_0F12_PREFIX_2, MOD_EVEX_0F13,
+	MOD_EVEX_0F16_PREFIX_2, MOD_EVEX_0F17, MOD_EVEX_0F2B): New enumerators.
+	(PREFIX_EVEX_0F13, PREFIX_EVEX_0F14, PREFIX_EVEX_0F15,
+	PREFIX_EVEX_0F17, PREFIX_EVEX_0F28, PREFIX_EVEX_0F29,
+	PREFIX_EVEX_0F2B, PREFIX_EVEX_0F54, PREFIX_EVEX_0F55,
+	PREFIX_EVEX_0F56, PREFIX_EVEX_0F57, PREFIX_EVEX_0FC6,
+	EVEX_W_0F10_P_0, EVEX_W_0F10_P_2, EVEX_W_0F11_P_0,
+	EVEX_W_0F11_P_2, EVEX_W_0F12_P_0_M_0, EVEX_W_0F12_P_2,
+	EVEX_W_0F13_P_0, EVEX_W_0F13_P_2, EVEX_W_0F14_P_0,
+	EVEX_W_0F14_P_2, EVEX_W_0F15_P_0, EVEX_W_0F15_P_2,
+	EVEX_W_0F16_P_0_M_0, EVEX_W_0F16_P_2, EVEX_W_0F17_P_0,
+	EVEX_W_0F17_P_2, EVEX_W_0F28_P_0, EVEX_W_0F28_P_2,
+	EVEX_W_0F29_P_0, EVEX_W_0F29_P_2, EVEX_W_0F2B_P_0,
+	EVEX_W_0F2B_P_2, EVEX_W_0F2E_P_0, EVEX_W_0F2E_P_2,
+	EVEX_W_0F2F_P_0, EVEX_W_0F2F_P_2, EVEX_W_0F51_P_0,
+	EVEX_W_0F51_P_2, EVEX_W_0F54_P_0, EVEX_W_0F54_P_2,
+	EVEX_W_0F55_P_0, EVEX_W_0F55_P_2, EVEX_W_0F56_P_0,
+	EVEX_W_0F56_P_2, EVEX_W_0F57_P_0, EVEX_W_0F57_P_2,
+	EVEX_W_0F58_P_0, EVEX_W_0F58_P_2, EVEX_W_0F59_P_0,
+	EVEX_W_0F59_P_2, EVEX_W_0F5C_P_0, EVEX_W_0F5C_P_2,
+	EVEX_W_0F5D_P_0, EVEX_W_0F5D_P_2, EVEX_W_0F5E_P_0,
+	EVEX_W_0F5E_P_2, EVEX_W_0F5F_P_0, EVEX_W_0F5F_P_2,
+	EVEX_W_0FC2_P_0, EVEX_W_0FC2_P_2, EVEX_W_0FC6_P_0,
+	EVEX_W_0FC6_P_2): Delete.
+	(print_insn): Add EVEX.W vs embedded prefix consistency check
+	to prefix validation.
+	* i386-dis-evex.h (evex_table): Don't further descend for
+	vunpcklpX, vunpckhpX, vmovapX, vandpX, vandnpX, vorpX, vxorpX,
+	and vshufpX. Continue with MOD decoding for opcodes 0F13, 0F17,
+	and 0F2B.
+	* i386-dis-evex-mod.h: Add/adjust vmovlpX/vmovhpX entries.
+	* i386-dis-evex-prefix.h: Don't further descend for vmovupX,
+	vucomisX, vcomisX, vsqrtpX, vaddpX, vmulpX, vsubpX, vminpX,
+	vdivpX, vmaxpX, and vcmppX. Continue with MOD decoding for cases
+	2 of PREFIX_EVEX_0F12, PREFIX_EVEX_0F16, and PREFIX_EVEX_0F29.
+	Drop PREFIX_EVEX_0F13, PREFIX_EVEX_0F14, PREFIX_EVEX_0F15,
+	PREFIX_EVEX_0F17, PREFIX_EVEX_0F28, PREFIX_EVEX_0F2B,
+	PREFIX_EVEX_0F54, PREFIX_EVEX_0F55, PREFIX_EVEX_0F56,
+	PREFIX_EVEX_0F57, and PREFIX_EVEX_0FC6 entries.
+	* i386-dis-evex-w.h: Drop EVEX_W_0F10_P_0, EVEX_W_0F10_P_2,
+	EVEX_W_0F11_P_0, EVEX_W_0F11_P_2, EVEX_W_0F12_P_0_M_0,
+	EVEX_W_0F12_P_2, EVEX_W_0F12_P_3, EVEX_W_0F13_P_0,
+	EVEX_W_0F13_P_2, EVEX_W_0F14_P_0, EVEX_W_0F14_P_2,
+	EVEX_W_0F15_P_0, EVEX_W_0F15_P_2, EVEX_W_0F16_P_0_M_0,
+	EVEX_W_0F16_P_2, EVEX_W_0F17_P_0, EVEX_W_0F17_P_2,
+	EVEX_W_0F28_P_0, EVEX_W_0F28_P_2, EVEX_W_0F29_P_0,
+	EVEX_W_0F29_P_2, EVEX_W_0F2B_P_0, EVEX_W_0F2B_P_2,
+	EVEX_W_0F2E_P_0, EVEX_W_0F2E_P_2, EVEX_W_0F2F_P_0,
+	EVEX_W_0F2F_P_2, EVEX_W_0F51_P_0, EVEX_W_0F51_P_2,
+	EVEX_W_0F54_P_0, EVEX_W_0F54_P_2, EVEX_W_0F55_P_0,
+	EVEX_W_0F55_P_2, EVEX_W_0F56_P_0, EVEX_W_0F56_P_2,
+	EVEX_W_0F57_P_0, EVEX_W_0F57_P_2, EVEX_W_0F58_P_0,
+	EVEX_W_0F58_P_2, EVEX_W_0F59_P_0, EVEX_W_0F59_P_2,
+	EVEX_W_0F5C_P_0, EVEX_W_0F5C_P_2, EVEX_W_0F5D_P_0,
+	EVEX_W_0F5D_P_2, EVEX_W_0F5E_P_0, EVEX_W_0F5E_P_2,
+	EVEX_W_0F5F_P_0, EVEX_W_0F5F_P_2, EVEX_W_0FC2_P_0,
+	EVEX_W_0FC2_P_2, EVEX_W_0FC6_P_0, and EVEX_W_0FC6_P_2 entries.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (vex_table): Use PREFIX_OPCODE for vunpcklpX,
+	vunpckhpX, vmovapX, vandpX, vandnpX, vorpX, vxorpX and vshufpX.
+	(vex_len_table) : Likewise for vmovlpX, vmovhpX, vmovntpX, and
+	vmovmskpX.
+	(print_insn): Drop pointless check against bad_opcode. Split
+	prefix validation into legacy and VEX-and-alike parts.
+	(putop): Re-work 'X' macro handling.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (MOD_0F51): Rename to ...
+	(MOD_0F50): ... this.
+
+2020-06-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* arm-dis.c (arm_opcodes): Add dfb.
+	(thumb32_opcodes): Add dfb.
+
+2020-06-08  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.h (reg_entry): Const-qualify reg_name field.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (ppc_opts): Accept -mpwr10/-Mpwr10.
+
+2020-06-05  Alan Modra  <amodra@gmail.com>
+
+	* cgen-dis.c (hash_insn_array): Increase size of buf.  Assert
+	size is large enough.
+
+2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* disassemble.c (disassemble_init_for_target): Set endian_code for
+	bpf targets.
+	* bpf-desc.c: Regenerate.
+	* bpf-opc.c: Likewise.
+	* bpf-dis.c: Likewise.
+
+2020-06-03  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* cgen-opc.c (cgen_get_insn_value): Get an `endian' argument.
+	(cgen_put_insn_value): Likewise.
+	(cgen_lookup_insn): Pass endianness to cgen_{get,put}_insn_value.
+	* cgen-dis.in (print_insn): Likewise.
+	* cgen-ibld.in (insert_1): Likewise.
+	(insert_1): Likewise.
+	(insert_insn_normal): Likewise.
+	(extract_1): Likewise.
+	* bpf-dis.c: Regenerate.
+	* bpf-ibld.c: Likewise.
+	* bpf-ibld.c: Likewise.
+	* cgen-dis.in: Likewise.
+	* cgen-ibld.in: Likewise.
+	* cgen-opc.c: Likewise.
+	* epiphany-dis.c: Likewise.
+	* epiphany-ibld.c: Likewise.
+	* fr30-dis.c: Likewise.
+	* fr30-ibld.c: Likewise.
+	* frv-dis.c: Likewise.
+	* frv-ibld.c: Likewise.
+	* ip2k-dis.c: Likewise.
+	* ip2k-ibld.c: Likewise.
+	* iq2000-dis.c: Likewise.
+	* iq2000-ibld.c: Likewise.
+	* lm32-dis.c: Likewise.
+	* lm32-ibld.c: Likewise.
+	* m32c-dis.c: Likewise.
+	* m32c-ibld.c: Likewise.
+	* m32r-dis.c: Likewise.
+	* m32r-ibld.c: Likewise.
+	* mep-dis.c: Likewise.
+	* mep-ibld.c: Likewise.
+	* mt-dis.c: Likewise.
+	* mt-ibld.c: Likewise.
+	* or1k-dis.c: Likewise.
+	* or1k-ibld.c: Likewise.
+	* xc16x-dis.c: Likewise.
+	* xc16x-ibld.c: Likewise.
+	* xstormy16-dis.c: Likewise.
+	* xstormy16-ibld.c: Likewise.
+
+2020-06-04  Jose E. Marchesi  <jemarch@gnu.org>
+
+	* cgen-dis.in (cpu_desc_list): New field `insn_endian'.
+	(print_insn_): Handle instruction endian.
+	* bpf-dis.c: Regenerate.
+	* bpf-desc.c: Regenerate.
+	* epiphany-dis.c: Likewise.
+	* epiphany-desc.c: Likewise.
+	* fr30-dis.c: Likewise.
+	* fr30-desc.c: Likewise.
+	* frv-dis.c: Likewise.
+	* frv-desc.c: Likewise.
+	* ip2k-dis.c: Likewise.
+	* ip2k-desc.c: Likewise.
+	* iq2000-dis.c: Likewise.
+	* iq2000-desc.c: Likewise.
+	* lm32-dis.c: Likewise.
+	* lm32-desc.c: Likewise.
+	* m32c-dis.c: Likewise.
+	* m32c-desc.c: Likewise.
+	* m32r-dis.c: Likewise.
+	* m32r-desc.c: Likewise.
+	* mep-dis.c: Likewise.
+	* mep-desc.c: Likewise.
+	* mt-dis.c: Likewise.
+	* mt-desc.c: Likewise.
+	* or1k-dis.c: Likewise.
+	* or1k-desc.c: Likewise.
+	* xc16x-dis.c: Likewise.
+	* xc16x-desc.c: Likewise.
+	* xstormy16-dis.c: Likewise.
+	* xstormy16-desc.c: Likewise.
+
+2020-06-03  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: Updated Serbian translation.
+
+2020-06-03  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (riscv_get_isa_spec_class): Change bfd_boolean to int.
+	(riscv_get_priv_spec_class): Likewise.
+
+2020-06-01  Alan Modra  <amodra@gmail.com>
+
+	* bpf-desc.c: Regenerate.
+
+2020-05-28  Jose E. Marchesi  <jose.marchesi@oracle.com>
+	    David Faust <david.faust@oracle.com>
+
+	* bpf-desc.c: Regenerate.
+	* bpf-opc.h: Likewise.
+	* bpf-opc.c: Likewise.
+	* bpf-dis.c: Likewise.
+
+2020-05-28  Alan Modra  <amodra@gmail.com>
+
+	* nios2-dis.c (nios2_print_insn_arg): Avoid shift left of negative
+	values.
+
+2020-05-28  Alan Modra  <amodra@gmail.com>
+
+	* ns32k-dis.c (print_insn_arg): Handle d value of 'f' for
+	immediates.
+	(print_insn_ns32k): Revert last change.
+
+2020-05-28  Nick Clifton  <nickc@redhat.com>
+
+	* ns32k-dis.c (print_insn_ns32k): Change the arg_bufs array to
+	static.
+
+2020-05-26  Sandra Loosemore  <sandra@codesourcery.com>
+
+	Fix extraction of signed constants in nios2 disassembler (again).
+
+	* nios2-dis.c (nios2_print_insn_arg): Add explicit casts to
+	extractions of signed fields.
+
+2020-05-26  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>
+
+	* s390-opc.txt: Relocate vector load/store instructions with
+	additional alignment parameter and change architecture level
+	constraint from z14 to z13.
+
+2020-05-21  Alan Modra  <amodra@gmail.com>
+
+	* arc-ext.c: Replace "if (x) free (x)" with "free (x)" throughout.
+	* sparc-dis.c: Likewise.
+	* tic4x-dis.c: Likewise.
+	* xtensa-dis.c: Likewise.
+	* bpf-desc.c: Regenerate.
+	* epiphany-desc.c: Regenerate.
+	* fr30-desc.c: Regenerate.
+	* frv-desc.c: Regenerate.
+	* ip2k-desc.c: Regenerate.
+	* iq2000-desc.c: Regenerate.
+	* lm32-desc.c: Regenerate.
+	* m32c-desc.c: Regenerate.
+	* m32r-desc.c: Regenerate.
+	* mep-asm.c: Regenerate.
+	* mep-desc.c: Regenerate.
+	* mt-desc.c: Regenerate.
+	* or1k-desc.c: Regenerate.
+	* xc16x-desc.c: Regenerate.
+	* xstormy16-desc.c: Regenerate.
+
+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (riscv_ext_version_table): The table used to store
+	all information about the supported spec and the corresponding ISA
+	versions.  Currently, only Zicsr is supported to verify the
+	correctness of Z sub extension settings.  Others will be supported
+	in the future patches.
+	(struct isa_spec_t, isa_specs): List for all supported ISA spec
+	classes and the corresponding strings.
+	(riscv_get_isa_spec_class): New function.  Get the corresponding ISA
+	spec class by giving a ISA spec string.
+	* riscv-opc.c (struct priv_spec_t): New structure.
+	(struct priv_spec_t priv_specs): List for all supported privilege spec
+	classes and the corresponding strings.
+	(riscv_get_priv_spec_class): New function.  Get the corresponding
+	privilege spec class by giving a spec string.
+	(riscv_get_priv_spec_name): New function.  Get the corresponding
+	privilege spec string by giving a CSR version class.
+	* riscv-dis.c: Updated since DECLARE_CSR is changed.
+	* riscv-dis.c: Add new disassembler option -Mpriv-spec to dump the CSR
+	according to the chosen version.  Build a hash table riscv_csr_hash to
+	store the valid CSR for the chosen pirv verison.  Dump the direct
+	CSR address rather than it's name if it is invalid.
+	(parse_riscv_dis_option_without_args): New function.  Parse the options
+	without arguments.
+	(parse_riscv_dis_option): Call parse_riscv_dis_option_without_args to
+	parse the options without arguments first, and then handle the options
+	with arguments.  Add the new option -Mpriv-spec, which has argument.
+	* riscv-dis.c (print_riscv_disassembler_options): Add description
+	about the new OBJDUMP option.
+
+2020-05-19  Peter Bergner  <bergner@linux.ibm.com>
+
+	* ppc-opc.c (insert_ls, extract_ls): Handle 3-bit L fields and new
+	WC values on POWER10 sync, dcbf  and wait instructions.
+	(insert_pl, extract_pl): New functions.
+	(L2OPT, LS, WC): Use insert_ls and extract_ls.
+	(LS3): New , 3-bit L for sync.
+	(LS3, L3OPT): New, 3-bit L for sync and dcbf.
+	(SC2, PL): New, 2-bit SC and PL for sync and wait.
+	(XWCPL_MASK, XL3RT_MASK, XSYNCLS_MASK): New instruction masks.
+	(XOPL3, XWCPL, XSYNCLS): New opcode macros.
+	(powerpc_opcodes) <dcbflp, dcbfps, dcbstps pause_short, phwsync,
+	plwsync, stcisync, stncisync, stsync, waitrsv>: New extended mnemonics.
+	<wait>: Enable PL operand on POWER10.
+	<dcbf>: Enable L3OPT operand on POWER10.
+	<sync>: Enable SC2 operand on POWER10.
+
+2020-05-19  Stafford Horne  <shorne@gmail.com>
+
+	PR 25184
+	* or1k-asm.c: Regenerate.
+	* or1k-desc.c: Regenerate.
+	* or1k-desc.h: Regenerate.
+	* or1k-dis.c: Regenerate.
+	* or1k-ibld.c: Regenerate.
+	* or1k-opc.c: Regenerate.
+	* or1k-opc.h: Regenerate.
+	* or1k-opinst.c: Regenerate.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc (powerpc_opcodes): Add xscmpeqqp, xscmpgeqp, xscmpgtqp,
+	xsmaxcqp, xsmincqp.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Add lxvrbx, lxvrhx, lxvrwx, lxvrdx,
+	stxvrbx, stxvrhx, stxvrwx, stxvrdx.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Add xvtlsbb.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Add vstribl, vstribr, vstrihl, vstrihr,
+	vclrlb, vclrrb, vstribl., vstribr., vstrihl., vstrihr..
+
+2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+
+	* ppc-opc.c (powerpc_opcodes) <setbc, setbcr, setnbc, setnbcr>: New
+	mnemonics.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (UIM8, P_U8XX4_MASK): Define.
+	(powerpc_opcodes): Add vgnb, vcfuged, vpextd, vpdepd, vclzdm,
+	vctzdm, cntlzdm, pdepd, pextd, cfuged, cnttzdm.
+	(prefix_opcodes): Add xxeval.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Add xxgenpcvbm, xxgenpcvhm,
+	xxgenpcvwm, xxgenpcvdm.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (MP, VXVAM_MASK): Define.
+	(VXVAPS_MASK): Use VXVA_MASK.
+	(powerpc_opcodes): Add mtvsrbmi, vexpandbm, vexpandhm, vexpandwm,
+	vexpanddm, vexpandqm, vextractbm, vextracthm, vextractwm,
+	vextractdm, vextractqm, mtvsrbm, mtvsrhm, mtvsrwm, mtvsrdm, mtvsrqm,
+	vcntmbb, vcntmbh, vcntmbw, vcntmbd.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+	    Peter Bergner  <bergner@linux.ibm.com>
+
+	* ppc-opc.c (insert_xa6a, extract_xa6a, insert_xb6a, extract_xb6a):
+	New functions.
+	(powerpc_operands): Define ACC, PMSK8, PMSK4, PMSK2, XMSK, YMSK,
+	YMSK2, XA6a, XA6ap, XB6a entries.
+	(PMMIRR, P_X_MASK, P_XX1_MASK, P_GER_MASK): Define
+	(P_GER2_MASK, P_GER4_MASK, P_GER8_MASK, P_GER64_MASK): Define.
+	(PPCVSX4): Define.
+	(powerpc_opcodes): Add xxmfacc, xxmtacc, xxsetaccz,
+	xvi8ger4pp, xvi8ger4, xvf16ger2pp, xvf16ger2, xvf32gerpp, xvf32ger,
+	xvi4ger8pp, xvi4ger8, xvi16ger2spp, xvi16ger2s, xvbf16ger2pp,
+	xvbf16ger2, xvf64gerpp, xvf64ger, xvi16ger2, xvf16ger2np,
+	xvf32gernp, xvi8ger4spp, xvi16ger2pp, xvbf16ger2np, xvf64gernp,
+	xvf16ger2pn, xvf32gerpn, xvbf16ger2pn, xvf64gerpn, xvf16ger2nn,
+	xvf32gernn, xvbf16ger2nn, xvf64gernn, xvcvbf16sp, xvcvspbf16.
+	(prefix_opcodes): Add pmxvi8ger4pp, pmxvi8ger4, pmxvf16ger2pp,
+	pmxvf16ger2, pmxvf32gerpp, pmxvf32ger, pmxvi4ger8pp, pmxvi4ger8,
+	pmxvi16ger2spp, pmxvi16ger2s, pmxvbf16ger2pp, pmxvbf16ger2,
+	pmxvf64gerpp, pmxvf64ger, pmxvi16ger2, pmxvf16ger2np, pmxvf32gernp,
+	pmxvi8ger4spp, pmxvi16ger2pp, pmxvbf16ger2np, pmxvf64gernp,
+	pmxvf16ger2pn, pmxvf32gerpn, pmxvbf16ger2pn, pmxvf64gerpn,
+	pmxvf16ger2nn, pmxvf32gernn, pmxvbf16ger2nn, pmxvf64gernn.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (insert_imm32, extract_imm32): New functions.
+	(insert_xts, extract_xts): New functions.
+	(IMM32, UIM3, IX, UIM5, SH3, XTS, P8RR): Define.
+	(P_XX4_MASK, P_UXX4_MASK, VSOP, P_VS_MASK, P_VSI_MASK): Define.
+	(VXRC_MASK, VXSH_MASK): Define.
+	(powerpc_opcodes): Add vinsbvlx, vsldbi, vextdubvlx, vextdubvrx,
+	vextduhvlx, vextduhvrx, vextduwvlx, vextduwvrx, vextddvlx,
+	vextddvrx, vinshvlx, vinswvlx, vinsw, vinsbvrx, vinshvrx,
+	vinswvrx, vinsd, vinsblx, vsrdbi, vinshlx, vinswlx, vinsdlx,
+	vinsbrx, vinshrx, vinswrx, vinsdrx, lxvkq.
+	(prefix_opcodes): Add xxsplti32dx, xxspltidp, xxspltiw, xxblendvb,
+	xxblendvh, xxblendvw, xxblendvd, xxpermx.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Add vrlq, vdivuq, vmsumcud, vrlqmi,
+	vmuloud, vcmpuq, vslq, vdivsq, vcmpsq, vrlqnm, vcmpequq, vmulosd,
+	vsrq, vdiveuq, vcmpgtuq, vmuleud, vsraq, vdivesq, vcmpgtsq, vmulesd,
+	vcmpequq., vextsd2q, vmoduq, vcmpgtuq., vmodsq, vcmpgtsq., xscvqpuqz,
+	xscvuqqp, xscvqpsqz, xscvsqqp, dcffixqq, dctfixqq.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (insert_xtp, extract_xtp): New functions.
+	(XTP, DQXP, DQXP_MASK): Define.
+	(powerpc_opcodes): Add lxvp, stxvp, lxvpx, stxvpx.
+	(prefix_opcodes): Add plxvp and pstxvp.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-opc.c (powerpc_opcodes): Add vdivuw, vdivud, vdivsw, vmulld,
+	vdivsd, vmulhuw, vdiveuw, vmulhud, vdiveud, vmulhsw, vdivesw,
+	vmulhsd, vdivesd, vmoduw, vmodud, vmodsw, vmodsd.
+
+2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+
+	* ppc-opc.c (powerpc_opcodes) <brd, brh, brw>: New mnemonics.
+
+2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+
+	* ppc-opc.c (insert_l1opt, extract_l1opt): New functions.
+	(L1OPT): Define.
+	(powerpc_opcodes) <paste.>: Add L operand for cpu POWER10.
+
+2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+
+	* ppc-opc.c (powerpc_opcodes) <slbiag>: Add variant with L operand.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (powerpc_init_dialect): Default to "power10".
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (ppc_opts): Add "power10" entry.
+	(print_insn_powerpc): Update for PPC_OPCODE_POWER10 renaming.
+	* ppc-opc.c (POWER10): Rename from POWERXX.  Update all uses.
+
+2020-05-11  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2020-04-30  Alex Coplan  <alex.coplan@arm.com>
+
+	* aarch64-opc.h (enum aarch64_field_kind): Add FLD_imm16_2.
+	* aarch64-opc.c (fields): Add entry for FLD_imm16_2.
+	(operand_general_constraint_met_p): validate
+	AARCH64_OPND_UNDEFINED.
+	* aarch64-tbl.h (aarch64_opcode_table): Add udf instruction, entry
+	for FLD_imm16_2.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-04-29  Nick Clifton  <nickc@redhat.com>
+
+	PR 22699
+	* sh-opc.h: Also use unsigned 8-bit immediate values for the LDRC
+	and SETRC insns.
+
+2020-04-29  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2020-04-29  Nick Clifton  <nickc@redhat.com>
+
+	PR 22699
+	* sh-opc.h (IMM0_8): Replace with IMM0_8S and IMM0_8U.  Use
+	IMM0_8S for arithmetic insns and IMM0_8U for logical insns.
+	* sh-dis.c (print_insn_sh): Change IMM0_8 case to IMM0_8S and add
+	IMM0_8U case.
+
+2020-04-21  Andreas Schwab  <schwab@linux-m68k.org>
+
+	PR 25848
+	* m68k-opc.c (m68k_opcodes): Allow pc-rel for second operand of
+	cmpi only on m68020up and cpu32.
+
+2020-04-20  Sudakshina Das  <sudi.das@arm.com>
+
+	* aarch64-asm.c (aarch64_ins_none): New.
+	* aarch64-asm.h (ins_none): New declaration.
+	* aarch64-dis.c (aarch64_ext_none): New.
+	* aarch64-dis.h (ext_none): New declaration.
+	* aarch64-opc.c (aarch64_print_operand): Update case for
+	AARCH64_OPND_BARRIER_PSB.
+	* aarch64-tbl.h (aarch64_opcode_table): Add tsb.
+	(AARCH64_OPERANDS): Update inserter/extracter for
+	AARCH64_OPND_BARRIER_PSB to use new dummy functions.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-04-20  Sudakshina Das  <sudi.das@arm.com>
+
+	* aarch64-tbl.h (aarch64_feature_bti, BTI, BTI_INSN): Remove.
+	(aarch64_feature_ras, RAS): Likewise.
+	(aarch64_feature_stat_profile, STAT_PROFILE): Likewise.
+	(aarch64_opcode_table): Update bti, xpaclri, pacia1716, pacib1716,
+	autia1716, autib1716, esb, psb, dgh, paciaz, paciasp, pacibz, pacibsp,
+	autiaz, autiasp, autibz, autibsp to be CORE_INSN.
+	* aarch64-asm-2.c: Regenerated.
+	* aarch64-dis-2.c: Regenerated.
+	* aarch64-opc-2.c: Regenerated.
+
+2020-04-17  Fredrik Strupe  <fredrik@strupe.net>
+
+	* arm-dis.c (neon_opcodes): Fix VDUP instruction masks.
+	(print_insn_neon): Support disassembly of conditional
+	instructions.
+
+2020-02-16  David Faust  <david.faust@oracle.com>
+
+	* bpf-desc.c: Regenerate.
+	* bpf-desc.h: Likewise.
+	* bpf-opc.c: Regenerate.
+	* bpf-opc.h: Likewise.
+
+2020-04-07  Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (enum): Add PREFIX_0F01_REG_5_MOD_3_RM_1,
+	(prefix_table): New instructions (see prefixes above).
+	(rm_table): Likewise
+	* i386-gen.c (cpu_flag_init): Add CPU_TSXLDTRK_FLAGS,
+	CPU_ANY_TSXLDTRK_FLAGS.
+	(cpu_flags): Add CpuTSXLDTRK.
+	* i386-opc.h (enum): Add CpuTSXLDTRK.
+	(i386_cpu_flags): Add cputsxldtrk.
+	* i386-opc.tbl: Add XSUSPLDTRK insns.
+	* i386-init.h: Regenerate.
+	* i386-tbl.h: Likewise.
+
+2020-04-02  Lili Cui  <lili.cui@intel.com>
+
+	* i386-dis.c (prefix_table): New instructions serialize.
+	* i386-gen.c (cpu_flag_init): Add CPU_SERIALIZE_FLAGS,
+	CPU_ANY_SERIALIZE_FLAGS.
+	(cpu_flags): Add CpuSERIALIZE.
+	* i386-opc.h (enum): Add CpuSERIALIZE.
+	(i386_cpu_flags): Add cpuserialize.
+	* i386-opc.tbl: Add SERIALIZE insns.
+	* i386-init.h: Regenerate.
+	* i386-tbl.h: Likewise.
+
+2020-03-26  Alan Modra  <amodra@gmail.com>
+
+	* disassemble.h (opcodes_assert): Declare.
+	(OPCODES_ASSERT): Define.
+	* disassemble.c: Don't include assert.h.  Include opintl.h.
+	(opcodes_assert): New function.
+	* h8300-dis.c (bfd_h8_disassemble_init): Use OPCODES_ASSERT.
+	(bfd_h8_disassemble): Reduce size of data array.  Correctly
+	calculate maxlen.  Omit insn decoding when insn length exceeds
+	maxlen.  Exit from nibble loop when looking for E, before
+	accessing next data byte.  Move processing of E outside loop.
+	Replace tests of maxlen in loop with assertions.
+
+2020-03-26  Alan Modra  <amodra@gmail.com>
+
+	* arc-dis.c (find_format): Init needs_limm.  Simplify use of limm.
+
+2020-03-25  Alan Modra  <amodra@gmail.com>
+
+	* z80-dis.c (suffix): Init mybuf.
+
+2020-03-22  Alan Modra  <amodra@gmail.com>
+
+	* h8300-dis.c (bfd_h8_disassemble): Limit data[] access to that
+	successflly read from section.
+
+2020-03-22  Alan Modra  <amodra@gmail.com>
+
+	* arc-dis.c (find_format): Use ISO C string concatenation rather
+	than line continuation within a string.  Don't access needs_limm
+	before testing opcode != NULL.
+
+2020-03-22  Alan Modra  <amodra@gmail.com>
+
+	* ns32k-dis.c (print_insn_arg): Update comment.
+	(print_insn_ns32k): Reduce size of index_offset array, and
+	initialize, passing -1 to print_insn_arg for args that are not
+	an index.  Don't exit arg loop early.  Abort on bad arg number.
+
+2020-03-22  Alan Modra  <amodra@gmail.com>
+
+	* s12z-dis.c (abstract_read_memory): Don't print error on EOI.
+	* s12z-opc.c: Formatting.
+	(operands_f): Return an int.
+	(opr_n_bytes_p1): Return -1 on reaching buffer memory limit.
+	(opr_n_bytes2, bfextins_n_bytes, mul_n_bytes, bm_n_bytes),
+	(shift_n_bytes, mov_imm_opr_n_bytes, loop_prim_n_bytes),
+	(exg_sex_discrim): Likewise.
+	(create_immediate_operand, create_bitfield_operand),
+	(create_register_operand_with_size, create_register_all_operand),
+	(create_register_all16_operand, create_simple_memory_operand),
+	(create_memory_operand, create_memory_auto_operand): Don't
+	segfault on malloc failure.
+	(z_ext24_decode): Return an int status, negative on fail, zero
+	on success.
+	(x_imm1, imm1_decode, trap_decode, z_opr_decode, z_opr_decode2),
+	(imm1234, reg_s_imm, reg_s_opr, z_imm1234_8base, z_imm1234_0base),
+	(z_tfr, z_reg, reg_xy, lea_reg_xys_opr, lea_reg_xys, rel_15_7),
+	(decode_rel_15_7, cmp_xy, sub_d6_x_y, sub_d6_y_x),
+	(ld_18bit_decode, mul_decode, bm_decode, bm_rel_decode),
+	(mov_imm_opr, ld_18bit_decode, exg_sex_decode),
+	(loop_primitive_decode, shift_decode, psh_pul_decode),
+	(bit_field_decode): Similarly.
+	(z_decode_signed_value, decode_signed_value): Similarly.  Add arg
+	to return value, update callers.
+	(x_opr_decode_with_size): Check all reads, returning NULL on fail.
+	Don't segfault on NULL operand.
+	(decode_operation): Return OP_INVALID on first fail.
+	(decode_s12z): Check all reads, returning -1 on fail.
+
+2020-03-20  Alan Modra  <amodra@gmail.com>
+
+	* metag-dis.c (print_insn_metag): Don't ignore status from
+	read_memory_func.
+
+2020-03-20  Alan Modra  <amodra@gmail.com>
+
+	* nds32-dis.c (print_insn_nds32): Remove unnecessary casts.
+	Initialize parts of buffer not written when handling a possible
+	2-byte insn at end of section.  Don't attempt decoding of such
+	an insn by the 4-byte machinery.
+
+2020-03-20  Alan Modra  <amodra@gmail.com>
+
+	* ppc-dis.c (print_insn_powerpc): Only clear needed bytes of
+	partially filled buffer.  Prevent lookup of 4-byte insns when
+	only VLE 2-byte insns are possible due to section size.  Print
+	".word" rather than ".long" for 2-byte leftovers.
+
+2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25641
+	* z80-dis.c: Fix disassembling ED+A4/AC/B4/BC opcodes.
+
+2020-03-13  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (X86_64_0D): Rename to ...
+	(X86_64_0E): ... this.
+
+2020-03-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* Makefile.am ($(srcdir)/i386-init.h): Also pass -P to $(CPP).
+	* Makefile.in: Regenerated.
+
+2020-03-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (avx_irel): New. Use is for AVX512 vpcmp*
+	3-operand pseudos.
+	* i386-tbl.h: Re-generate.
+
+2020-03-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (xop_elem, xop_irel, xop_sign): New. Use them for XOP vpcom*,
+	vprot*, vpsha*, and vpshl*.
+	* i386-tbl.h: Re-generate.
+
+2020-03-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (avx_frel): New. Use it for AVX/AVX512 vcmpps,
+	vcmpss, vcmppd, and vcmpsd 3-operand pseudo-ops.
+	* i386-tbl.h: Re-generate.
+
+2020-03-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (set_bitfield): Ignore zero-length field names.
+	* i386-opc.tbl (sse_frel): New. Use it for SSE/SSE2 cmpps,
+	cmpss, cmppd, and cmpsd 2-operand pseudo-ops.
+	* i386-tbl.h: Re-generate.
+
+2020-03-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (struct template_arg, struct template_instance,
+	struct template_param, struct template, templates,
+	parse_template, expand_templates): New.
+	(process_i386_opcodes): Various local variables moved to
+	expand_templates. Call parse_template and expand_templates.
+	* i386-opc.tbl (cc): New. Use it for Jcc, SETcc, and CMOVcc.
+	* i386-tbl.h: Re-generate.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (vcvtdq2pd, vcvtps2pd, vcvtudq2pd, vcvtps2ph,
+	vcvtps2qq, vcvtps2uqq, vcvttps2qq, vcvttps2uqq): Fold separate
+	register and memory source templates. Replace VexW= by VexW*
+	where applicable.
+	* i386-tbl.h: Re-generate.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl: Drop IgnoreSize from various SIMD insns. Replace
+	VexW= by VexW* and VexVVVV=1 by just VexVVVV where applicable.
+	* i386-tbl.h: Re-generate.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (fildll, fistpll, fisttpll): Add ATTSyntax.
+	* i386-tbl.h: Re-generate.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (movq): Drop NoRex64 from XMM/XMM SSE2AVX variants.
+	(movmskps, pextrw, pinsrw, pmovmskb, movmskpd, extractps,
+	pextrb, pinsrb, roundsd): Drop NoRex64 and where applicable use
+	VexW0 on SSE2AVX variants.
+	(vmovq): Drop NoRex64 from XMM/XMM variants.
+	(vextractps, vmovmskpd, vmovmskps, vpextrb, vpextrw, vpinsrb,
+	vpinsrw, vpmovmskb, vroundsd, vpmovmskb): Drop NoRex64 and where
+	applicable use VexW0.
+	* i386-tbl.h: Re-generate.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (opcode_modifiers): Remove Rex64 field.
+	* i386-opc.h (Rex64): Delete.
+	(struct i386_opcode_modifier): Remove rex64 field.
+	* i386-opc.tbl (crc32): Drop Rex64.
+	Replace Rex64 with Size64 everywhere else.
+	* i386-tbl.h: Re-generate.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (OP_E_memory): Exclude recording of used address
+	prefix for "bnd" modes only in 64-bit mode. Don't decode 16-bit
+	addressed memory operands for MPX insns.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (movmskps, mwait, vmread, vmwrite, invept,
+	invvpid, invpcid, rdfsbase, rdgsbase, wrfsbase, wrgsbase, adcx,
+	adox, mwaitx, rdpid, movdiri): Add IgnoreSize.
+	(ptwrite): Split into non-64-bit and 64-bit forms.
+	* i386-tbl.h: Re-generate.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (tpause, umwait): Add IgnoreSize. Add 3-operand
+	template.
+	* i386-tbl.h: Re-generate.
+
+2020-03-04  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (PREFIX_0F01_REG_3_RM_1): New.
+	(prefix_table): Move vmmcall here. Add vmgexit.
+	(rm_table): Replace vmmcall entry by prefix_table[] escape.
+	* i386-gen.c (cpu_flag_init): Add CPU_SEV_ES_FLAGS entry.
+	(cpu_flags): Add CpuSEV_ES entry.
+	* i386-opc.h (CpuSEV_ES): New.
+	(union i386_cpu_flags): Add cpusev_es field.
+	* i386-opc.tbl (vmgexit): New.
+	* i386-init.h, i386-tbl.h: Re-generate.
+
+2020-03-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-gen.c (opcode_modifiers): Replace IgnoreSize/DefaultSize
+	with MnemonicSize.
+	* i386-opc.h (IGNORESIZE): New.
+	(DEFAULTSIZE): Likewise.
+	(IgnoreSize): Removed.
+	(DefaultSize): Likewise.
+	(MnemonicSize): New.
+	(i386_opcode_modifier): Replace ignoresize/defaultsize with
+	mnemonicsize.
+	* i386-opc.tbl (IgnoreSize): New.
+	(DefaultSize): Likewise.
+	* i386-tbl.h: Regenerated.
+
+2020-03-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25627
+	* z80-dis.c: Fix disassembly of LD IY,(HL) and D (HL),IX
+	instructions.
+
+2020-03-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25622
+	* i386-opc.tbl: Add IgnoreSize to cvtsi2sd, cvtsi2ss, vcvtsi2sd,
+	vcvtsi2ss, vcvtusi2sd and vcvtusi2ss for AT&T syntax.
+	* i386-tbl.h: Regenerated.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* aarch64-asm.c: Indent labels correctly.
+	* aarch64-dis.c: Likewise.
+	* aarch64-gen.c: Likewise.
+	* aarch64-opc.c: Likewise.
+	* alpha-dis.c: Likewise.
+	* i386-dis.c: Likewise.
+	* nds32-asm.c: Likewise.
+	* nfp-dis.c: Likewise.
+	* visium-dis.c: Likewise.
+
+2020-02-25  Claudiu Zissulescu <claziss@gmail.com>
+
+	* arc-regs.h (int_vector_base): Make it available for all ARC
+	CPUs.
+
+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-dis.c (print_insn_args): Updated since the DECLARE_CSR is
+	changed.
+
+2020-02-19  Nelson Chu  <nelson.chu@sifive.com>
+
+	* riscv-opc.c (riscv_opcodes): Convert add/addi to the compressed
+	c.mv/c.li if rs1 is zero.
+
+2020-02-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-gen.c (cpu_flag_init): Replace CpuABM with
+	CpuLZCNT|CpuPOPCNT.  Add CpuPOPCNT to CPU_SSE4_2_FLAGS.  Add
+	CPU_POPCNT_FLAGS.
+	(cpu_flags): Remove CpuABM.  Add CpuPOPCNT.
+	* i386-opc.h (CpuABM): Removed.
+	(CpuPOPCNT): New.
+	(i386_cpu_flags): Remove cpuabm.  Add cpupopcnt.
+	* i386-opc.tbl: Replace CpuABM|CpuSSE4_2 with CpuPOPCNT on
+	popcnt.  Remove CpuABM from lzcnt.
+	* i386-init.h: Regenerated.
+	* i386-tbl.h: Likewise.
+
+2020-02-17  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (vcvtsi2sd, vcvtsi2ss, vcvtusi2sd, vcvtusi2ss):
+	Fold CpuNo64 and Cpu64 templates. Use VexLIG/EVexLIG and VexW0/
+	VexW1 instead of open-coding them.
+	* i386-tbl.h: Re-generate.
+
+2020-02-17  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (AddrPrefixOpReg): Define.
+	(monitor, invlpga, vmload, vmrun, vmsave, clzero, monitorx,
+	umonitor, movdir64b, enqcmd, enqcmds): Fold Cpu64 and CpuNo64
+	templates. Drop NoRex64.
+	* i386-tbl.h: Re-generate.
+
+2020-02-17  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/6518
+	* i386-opc.tbl (vcvtpd2dq, vcvtpd2ps, vcvttpd2dq, vcvtpd2udq,
+	vcvttpd2udq, vcvtqq2ps, vcvtuqq2ps): Split XMM/YMM source forms
+	into Intel syntax instance (with Unpsecified) and AT&T one
+	(without).
+	(vcvtneps2bf16): Likewise, along with folding the two so far
+	separate ones.
+	* i386-tbl.h: Re-generate.
+
+2020-02-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-gen.c (cpu_flag_init): Remove CPU_ANY_SSE3_FLAGS from
+	CPU_ANY_SSE4A_FLAGS.
+
+2020-02-17  Alan Modra  <amodra@gmail.com>
+
+	* i386-gen.c (cpu_flag_init): Correct last change.
+
+2020-02-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-gen.c (cpu_flag_init): Add CPU_ANY_SSE4A_FLAGS.  Remove
+	CPU_ANY_SSE4_FLAGS.
+
+2020-02-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-opc.tbl (movsx): Remove Intel syntax comments.
+	(movzx): Likewise.
+
+2020-02-14  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/25438
+	* i386-opc.tbl (movsx): Fold patterns. Also allow Reg32 as
+	destination for Cpu64-only variant.
+	(movzx): Fold patterns.
+	* i386-tbl.h: Re-generate.
+
+2020-02-13  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (cpu_flag_init): Move CpuSSE4a from
+	CPU_ANY_SSE_FLAGS entry to CPU_ANY_SSE3_FLAGS one. Add
+	CPU_ANY_SSE4_FLAGS entry.
+	* i386-init.h: Re-generate.
+
+2020-02-12  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (vfpclasspd, vfpclassps): Add Intel sytax form
+	with Unspecified, making the present one AT&T syntax only.
+	* i386-tbl.h: Re-generate.
+
+2020-02-12  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (jmp): Fold CpuNo64 and Amd64 direct variants.
+	* i386-tbl.h: Re-generate.
+
+2020-02-12  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/24546
+	* i386-dis.c (putop): Handle REX.W in '^' case for Intel64 mode.
+	* i386-opc.tbl (lfs, lgs, lss, lcall, ljmp): Split into
+	Amd64 and Intel64 templates.
+	(call, jmp): Likewise for far indirect variants. Dro
+	Unspecified.
+	* i386-tbl.h: Re-generate.
+
+2020-02-11  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-gen.c (opcode_modifiers): Remove ShortForm entry.
+	* i386-opc.h (ShortForm): Delete.
+	(struct i386_opcode_modifier): Remove shortform field.
+	* i386-opc.tbl (mov, movabs, push, pop, xchg, inc, dec, fld,
+	fst, fstp, fxch, fcom, fcomp, fucom, fucomp, fadd, faddp, fsub,
+	fsubp, fsubr, fsubrp, fmul, fmulp, fdiv, fdivp, fdivr, fdivrp,
+	ffreep, bswap, fcmov*, fcomi, fcomip, fucomi, fucomip, movq):
+	Drop ShortForm.
+	* i386-tbl.h: Re-generate.
+
+2020-02-11  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (fcomi, fucomi, fcomip, fcompi, fucomip,
+	fucompi): Drop ShortForm from operand-less templates.
+	* i386-tbl.h: Re-generate.
+
+2020-02-11  Alan Modra  <amodra@gmail.com>
+
+	* cgen-ibld.in (extract_normal): Set *valuep on all return paths.
+	* bpf-ibld.c, * epiphany-ibld.c, * fr30-ibld.c, * frv-ibld.c,
+	* ip2k-ibld.c, * iq2000-ibld.c, * lm32-ibld.c, * m32c-ibld.c,
+	* m32r-ibld.c, * mep-ibld.c, * mt-ibld.c, * or1k-ibld.c,
+	* xc16x-ibld.c, * xstormy16-ibld.c: Regenerate.
+
+2020-02-10  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* arm-dis.c (print_insn_cde): Define 'V' parse character.
+	(cde_opcodes): Add VCX* instructions.
+
+2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>
+	    Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* arm-dis.c (struct cdeopcode32): New.
+	(CDE_OPCODE): New macro.
+	(cde_opcodes): New disassembly table.
+	(regnames): New option to table.
+	(cde_coprocs): New global variable.
+	(print_insn_cde): New
+	(print_insn_thumb32): Use print_insn_cde.
+	(parse_arm_disassembler_options): Parse coprocN args.
+
+2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25516
+	* i386-gen.c (opcode_modifiers): Replace AMD64 and Intel64
+	with ISA64.
+	* i386-opc.h (AMD64): Removed.
+	(Intel64): Likewose.
+	(AMD64): New.
+	(INTEL64): Likewise.
+	(INTEL64ONLY): Likewise.
+	(i386_opcode_modifier): Replace amd64 and intel64 with isa64.
+	* i386-opc.tbl (Amd64): New.
+	(Intel64): Likewise.
+	(Intel64Only): Likewise.
+	Replace AMD64 with Amd64.  Update sysenter/sysenter with
+	Cpu64 and Intel64Only.  Remove AMD64 from sysenter/sysenter.
+	* i386-tbl.h: Regenerated.
+
+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25469
+	* z80-dis.c: Add support for GBZ80 opcodes.
+
+2020-02-04  Alan Modra  <amodra@gmail.com>
+
+	* d30v-dis.c (print_insn): Make "val" and "opnum" unsigned.
+
+2020-02-03  Alan Modra  <amodra@gmail.com>
+
+	* m32c-ibld.c: Regenerate.
+
+2020-02-01  Alan Modra  <amodra@gmail.com>
+
+	* frv-ibld.c: Regenerate.
+
+2020-01-31  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EXxmm_mdq, xmm_mdq_mode): Delete.
+	(intel_operand_size, OP_EX): Drop xmm_mdq_mode case label.
+	(OP_E_memory): Replace xmm_mdq_mode case label by
+	vex_scalar_w_dq_mode one.
+	* i386-dis-evex-prefix.h: Replace EXxmm_mdq by EXVexWdqScalar.
+
+2020-01-31  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (EXVexWdq, vex_w_dq_mode): Delete.
+	(vex_vsib_d_w_dq_mode, vex_vsib_q_w_dq_mode,
+	vex_scalar_w_dq_mode): Don't refer to vex_w_dq_mode in comments.
+	(intel_operand_size): Drop vex_w_dq_mode case label.
+
+2020-01-31  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* aarch64-tbl.h (aarch64_opcode): Set C_MAX_ELEM for SVE bfcvt.
+	Remove C_SCAN_MOVPRFX for SVE bfcvtnt.
+
+2020-01-30  Alan Modra  <amodra@gmail.com>
+
+	* m32c-ibld.c: Regenerate.
+
+2020-01-30  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* bpf-opc.c: Regenerate.
+
+2020-01-30  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (X86_64_C2, X86_64_C3): New enumerators.
+	(dis386): Use them to replace C2/C3 table entries.
+	(x86_64_table): Add X86_64_C2 and X86_64_C3 entries.
+	* i386-opc.tbl (ret): Split Cpu64 entries into AMD64 and Intel64
+	ones. Use Size64 instead of DefaultSize on Intel64 ones.
+	* i386-tbl.h: Re-generate.
+
+2020-01-30  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (call): Drop DefaultSize from Intel64 JumpDword
+	forms.
+	(fldenv, fnstenv, fstenv, fnsave, fsave, frstor): Drop
+	DefaultSize.
+	* i386-tbl.h: Re-generate.
+
+2020-01-30  Alan Modra  <amodra@gmail.com>
+
+	* tic4x-dis.c (tic4x_dp): Make unsigned.
+
+2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
+	    Jan Beulich  <jbeulich@suse.com>
+
+	PR binutils/25445
+	* i386-dis.c (MOVSXD_Fixup): New function.
+	(movsxd_mode): New enum.
+	(x86_64_table): Use MOVSXD_Fixup and movsxd_mode on movsxd.
+	(intel_operand_size): Handle movsxd_mode.
+	(OP_E_register): Likewise.
+	(OP_G): Likewise.
+	* i386-opc.tbl: Remove Rex64 and allow 32-bit destination
+	register on movsxd.  Add movsxd with 16-bit destination register
+	for AMD64 and Intel64 ISAs.
+	* i386-tbl.h: Regenerated.
+
+2020-01-27  Tamar Christina  <tamar.christina@arm.com>
+
+	PR 25403
+	* aarch64-tbl.h (struct aarch64_opcode): Re-order cfinv.
+	* aarch64-asm-2.c: Regenerate
+	* aarch64-dis-2.c: Likewise.
+	* aarch64-opc-2.c: Likewise.
+
+2020-01-21  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (sysret): Drop DefaultSize.
+	* i386-tbl.h: Re-generate.
+
+2020-01-21  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (vcvtneps2bf16x): Add Broadcast, Xmmword, and
+	Dword.
+	(vcvtneps2bf16y): Add Broadcast, Ymmword, and Dword.
+	* i386-tbl.h: Re-generate.
+
+2020-01-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/de.po: Updated German translation.
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-01-20  Alan Modra  <amodra@gmail.com>
+
+	* hppa-dis.c (fput_const): Remove useless cast.
+
+2020-01-20  Alan Modra  <amodra@gmail.com>
+
+	* arm-dis.c (print_insn_arm): Wrap 'T' value.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/opcodes.pot: Regenerate.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-17  Christian Biesinger  <cbiesinger@google.com>
+
+	* opintl.h: Fix spelling error (seperate).
+
+2020-01-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* i386-opc.tbl: Add {vex} pseudo prefix.
+	* i386-tbl.h: Regenerated.
+
+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	PR 25376
+	* arm-dis.c (coprocessor_opcodes): Use CORE_HIGH for MVE bits.
+	(neon_opcodes): Likewise.
+	(select_arm_features): Make sure we enable MVE bits when selecting
+	armv8.1-m.main.  Make sure we do not enable MVE bits when not selecting
+	any architecture.
+
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl: Drop stale comment from XOP section.
+
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (movq): Add VexWIG to SSE2AVX XMM->XMM forms.
+	(extractps): Add VexWIG to SSE2AVX forms.
+	* i386-tbl.h: Re-generate.
+
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-opc.tbl (pextrq, pinsrq): Drop IgnoreSize and Qword. Drop
+	Size64 from and use VexW1 on SSE2AVX forms.
+	(vpextrq, vpinsrq): Drop IgnoreSize and Qword. Drop Size64 from
+	VEX-encoded forms. Add Cpu64 to EVEX-encoded forms. Use VexW1.
+	* i386-tbl.h: Re-generate.
+
+2020-01-15  Alan Modra  <amodra@gmail.com>
+
+	* tic4x-dis.c (tic4x_version): Make unsigned long.
+	(optab, optab_special, registernames): New file scope vars.
+	(tic4x_print_register): Set up registernames rather than
+	malloc'd registertable.
+	(tic4x_disassemble): Delete optable and optable_special.  Use
+	optab and optab_special instead.  Throw away old optab,
+	optab_special and registernames when info->mach changes.
+
+2020-01-14  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25377
+	* z80-dis.c (suffix): Use .db instruction to generate double
+	prefix.
+
+2020-01-14  Alan Modra  <amodra@gmail.com>
+
+	* z8k-dis.c (unpack_instr): Formatting.  Cast unsigned short
+	values to unsigned before shifting.
+
+2020-01-13  Thomas Troeger  <tstroege@gmx.de>
+
+	* arm-dis.c (print_insn_arm): Fill in insn info fields for control
+	flow instructions.
+	(print_insn_thumb16, print_insn_thumb32): Likewise.
+	(print_insn): Initialize the insn info.
+	* i386-dis.c (print_insn): Initialize the insn info fields, and
+	detect jumps.
+
+2020-01-13  Claudiu Zissulescu <claziss@gmail.com>
+
+	* arc-opc.c (C_NE): Make it required.
+
+2020-01-13  Claudiu Zissulescu <claziss@gmail.com>
+
+	* opcode/arc-dis.c (regnames): Correct ACCL/ACCH naming, fix typo
+	reserved register name.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* ns32k-dis.c (Is_gen): Use strchr, add 'f'.
+	(print_insn_ns32k): Adjust ioffset for 'f' index_offset.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* wasm32-dis.c (print_insn_wasm32): Localise variables.  Store
+	result of wasm_read_leb128 in a uint64_t and check that bits
+	are not lost when copying to other locals.  Use uint32_t for
+	most locals.  Use PRId64 when printing int64_t.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* score-dis.c: Formatting.
+	* score7-dis.c: Formatting.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* score-dis.c (print_insn_score48): Use unsigned variables for
+	unsigned values.  Don't left shift negative values.
+	(print_insn_score32): Likewise.
+	* score7-dis.c (print_insn_score32, print_insn_score16): Likewise.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* tic4x-dis.c (tic4x_print_register): Remove dead code.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* fr30-ibld.c: Regenerate.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* xgate-dis.c (print_insn): Don't left shift signed value.
+	(ripBits): Formatting, use 1u.
+
+2020-01-10  Alan Modra  <amodra@gmail.com>
+
+	* tilepro-opc.c (parse_insn_tilepro): Make opval unsigned.
+	* tilegx-opc.c (parse_insn_tilegx): Likewise.  Delete raw_opval.
+
+2020-01-10  Alan Modra  <amodra@gmail.com>
+
+	* m10300-dis.c (disassemble): Move extraction of DREG, AREG, RREG,
+	and XRREG value earlier to avoid a shift with negative exponent.
+	* m10200-dis.c (disassemble): Similarly.
+
+2020-01-09  Nick Clifton  <nickc@redhat.com>
+
+	PR 25224
+	* z80-dis.c (ld_ii_ii): Use correct cast.
+
+2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25224
+	* z80-dis.c (ld_ii_ii): Use character constant when checking
+	opcode byte value.
+
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
+
+	* i386-dis.c (SEP_Fixup): New.
+	(SEP): Define.
+	(dis386_twobyte): Use it for sysenter/sysexit.
+	(enum x86_64_isa): Change amd64 enumerator to value 1.
+	(OP_J): Compare isa64 against intel64 instead of amd64.
+	* i386-opc.tbl (sysenter, sysexit): Split into AMD64 and Intel64
+	forms.
+	* i386-tbl.h: Re-generate.
+
+2020-01-08  Alan Modra  <amodra@gmail.com>
+
+	* z8k-dis.c: Include libiberty.h
+	(instr_data_s): Make max_fetched unsigned.
+	(z8k_lookup_instr): Make nibl_index and tabl_index unsigned.
+	Don't exceed byte_info bounds.
+	(output_instr): Make num_bytes unsigned.
+	(unpack_instr): Likewise for nibl_count and loop.
+	* z8kgen.c (gas <opcode_entry_type>): Make noperands, length and
+	idx unsigned.
+	* z8k-opc.h: Regenerate.
+
+2020-01-07  Shahab Vahedi  <shahab@synopsys.com>
+
+	* arc-tbl.h (llock): Use 'LLOCK' as class.
+	(llockd): Likewise.
+	(scond): Use 'SCOND' as class.
+	(scondd): Likewise.
+	(llockd): Set data_size_mode to 'C_ZZ_D' which is 64-bit.
+	(scondd): Likewise.
+
+2020-01-06  Alan Modra  <amodra@gmail.com>
+
+	* m32c-ibld.c: Regenerate.
+
+2020-01-06  Alan Modra  <amodra@gmail.com>
+
+	PR 25344
+	* z80-dis.c (suffix): Don't use a local struct buffer copy.
+	Peek at next byte to prevent recursion on repeated prefix bytes.
+	Ensure uninitialised "mybuf" is not accessed.
+	(print_insn_z80): Don't zero n_fetch and n_used here,..
+	(print_insn_z80_buf): ..do it here instead.
+
+2020-01-04  Alan Modra  <amodra@gmail.com>
+
+	* m32r-ibld.c: Regenerate.
+
+2020-01-04  Alan Modra  <amodra@gmail.com>
+
+	* cr16-dis.c (cr16_match_opcode): Avoid shift left of signed value.
+
+2020-01-04  Alan Modra  <amodra@gmail.com>
+
+	* crx-dis.c (match_opcode): Avoid shift left of signed value.
+
+2020-01-04  Alan Modra  <amodra@gmail.com>
+
+	* d30v-dis.c (print_insn): Avoid signed overflow in left shift.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* aarch64-tbl.h (aarch64_opcode_table): Use
+	SVE_ADDR_RX_LSL{1,2,3} for LD1RO{H,W,D}.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* aarch64-tbl.h (aarch64_opcode_table): Correct SIMD
+	forms of SUDOT and USDOT.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* aarch64-tbl.h (aarch64_opcode_table): Drop 'i' from
+	uzip{1,2}.
+	* aarch64-dis-2.c: Re-generate.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* aarch64-tbl.h (aarch64_opcode_table): Correct 64-bit
+	FMMLA encoding.
+	* aarch64-dis-2.c: Re-generate.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* z80-dis.c: Add support for eZ80 and Z80 instructions.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/opcodes/ChangeLog-2016 b/opcodes/ChangeLog-2016
index fd78dd385b8..b482a7520aa 100644
--- a/opcodes/ChangeLog-2016
+++ b/opcodes/ChangeLog-2016
@@ -1898,7 +1898,7 @@
 	(create_map): Zero initialize instruction fields.
 	(arcExtMap_instName): Remove.
 	(arcExtMap_insn): New function.
-	(dump_ARC_extmap): More info while debuging.
+	(dump_ARC_extmap): More info while debugging.
 	(arcExtMap_genOpcode): New function.
 	* arc-dis.c (find_format): New function.
 	(print_insn_arc): Use find_format.
diff --git a/binutils/ChangeLog-2017 b/binutils/ChangeLog-2017
index 714b20d9748..01a15e3bef1 100644
--- a/binutils/ChangeLog-2017
+++ b/binutils/ChangeLog-2017
@@ -1126,7 +1126,7 @@
 
 	PR binutils/21437
 	* readelf.c (process_version_sections): Check for underflow when
-	computing the start address of the auxillary version data.
+	computing the start address of the auxiliary version data.
 
 2017-04-28  Nick Clifton  <nickc@redhat.com>
 
@@ -1762,7 +1762,7 @@
 2017-02-13  Nick Clifton  <nickc@redhat.com>
 
 	PR binutils/21148
-	* readelf.c (process_version_sections): Include size of auxillary
+	* readelf.c (process_version_sections): Include size of auxiliary
 	version information when checking for buffer overflow.
 
 2017-02-13  Nick Clifton  <nickc@redhat.com>
diff --git a/binutils/ChangeLog-2020 b/binutils/ChangeLog-2020
new file mode 100644
index 00000000000..7bd55845686
--- /dev/null
+++ b/binutils/ChangeLog-2020
@@ -0,0 +1,2080 @@
+2020-12-31  Alan Modra  <amodra@gmail.com>
+
+	PR 27128
+	* nm.c (print_symname): Append version string to symbol name
+	before printing the lot under control of "form".  Append version
+	to demangled names too.
+
+2020-12-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfedit (usage): Pass osabi to reconcat.
+
+2020-12-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Pass
+	$gcc_gas_flag to target_compile.
+
+2020-12-24  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (INT64_MIN): Define if not already defined.
+	(print_vms_time): Catch 64-bit overflow when converting from
+	vms time to posix time.  Don't segfault if gmtime returns NULL.
+
+2020-12-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention LAM_U48 and LAM_U57 support.
+	* elfedit.c (elf_x86_feature): Support lam_u48 and lam_u57.
+	(usage): Add lam_u48 and lam_u57.
+	* readelf.c (decode_x86_feature_1): Support LAM_U48 and LAM_U57.
+	* doc/binutils.texi: Update elfedit with lam_u48 and lam_u57
+	support.
+	* testsuite/binutils-all/x86-64/lam-u48.d: New file.
+	* testsuite/binutils-all/x86-64/lam-u48.s: Likewise.
+	* testsuite/binutils-all/x86-64/lam-u57.d: Likewise.
+	* testsuite/binutils-all/x86-64/lam-u57.s: Likewise.
+
+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>
+
+	* readelf.c (get_dynamic_type): Handle DT_GNU_FLAGS_1.
+	(process_dynamic_section): Likewise.
+
+2020-12-11  Cary Coutant  <ccoutant@gmail.com>
+
+	* readelf.c (get_machine_name): Update list of e_machine values.
+
+2020-12-11  Sebastian Huber  <sebastian.huber@embedded-brains.de>
+
+	* ar.c (write_archive): Cast iostream pointer to FILE *.
+	* arsup.c (ar_save): Likewise.
+	* objcopy.c (copy_file): Likewise.
+
+2020-12-07  Nick Clifton  <nickc@redhat.com>
+
+	* objcopy.c (is_mergeable_note_section): Remove reference to
+	SHF_GNU_BUILD_NOTE.
+
+2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>
+
+	PR 26945
+	* ar.c
+	(write_archive) [!defined (_WIN32) || defined (__CYGWIN32__)]:
+	Initialize TARGET_STAT and OFD to pass to SMART_RENAME.
+	* arsup.c
+	(ar_save) [defined (_WIN32) || defined (__CYGWIN32__)]:
+	Likewise.
+	* bucomm.h (smart_rename): Add new arguments to declaration.
+	* objcopy.c
+	(strip_main)[defined (_WIN32) || defined (__CYGWIN32__)]:
+	Initialize COPYFD and pass to SMART_RENAME.
+	(copy_main) [defined (_WIN32) || defined (__CYGWIN32__)]:
+	Likewise.
+	* rename.c (try_preserve_permissions): New function.
+	(smart_rename): Use it and add new arguments.
+
+2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>
+
+	PR 26945
+	* objcopy.c (copy_file): New argument IN_STAT.  Return stat of
+	ibfd through it.
+	(strip_main): Remove redundant stat calls.  adjust copy_file
+	calls.
+	(copy_main): Likewise.
+
+2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>
+
+	PR 26945
+	* bucomm.c (make_tempname): Add argument to return file
+	descriptor.
+	* bucomm.h (make_tempname): Likewise.
+	* ar.c: Include libbfd.h.
+	(write_archive): Adjust for change in make_tempname.  Call
+	bfd_fdopenw instead of bfd_openw.
+	* objcopy.c: Include libbfd.h.
+	(copy_file): New argument OFD.  Use bfd_fdopenw instead of
+	bfd_openw.
+	(strip_main): Adjust for change in make_tempname and
+	copy_file.
+	(copy_main): Likewise.
+
+
+2020-12-07  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release (point releases): Add a note to
+	update the milestone list on sourceware's bugzilla.
+
+2020-12-04  Alan Modra  <amodra@gmail.com>
+
+	* dwarf.c (frame_display_row): Do without static variable "sloc".
+	(cu_tu_indexes_read): Move to file scope.
+	(free_debug_memory): Reset it here, along with level_type_signed.
+	Free and clear a number of other static variables.
+	* readelf.c (arm_attr_public_tag <table>): Constify, updating..
+	(arm_attr_tag_*): ..all these uses.
+	(process_mips_specific): Free "rels" on error path.
+
+2020-11-27  Nick Clifton  <nickc@redhat.com>
+
+	PR 26865
+	* windres.c (main): If the preprocessor name includes spaces,
+	ensure that it is quoted.
+
+2020-11-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* testsuite/lib/binutils-common.exp (supports_noinit_section): New.
+	(supports_persistent_section): New.
+
+2020-11-23  Nick Alcock  <nick.alcock@oracle.com>
+
+	* readelf.c (dump_section_as_ctf): Call ctf_arc_symsect_endianness.
+
+2020-11-25  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/nm.exp (ifunc): xfail more targets.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* readelf.c (dump_section_as_ctf): Use .dynsym and .dynstr, not
+	.symtab and .strtab.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (dump_ctf): Report errors from ctf_archive_iter.
+	* readelf.c (dump_section_as_ctf): Likewise.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (dump_ctf): Use ctf_dict_open, not
+	ctf_arc_open_by_name.
+	* readelf.c (dump_section_as_ctf): Likewise.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (dump_ctf_errs): Rename ctf_file_t to ctf_dict_t.
+	(dump_ctf_archive_member): Likewise.
+	(dump_ctf): Likewise. Use ctf_dict_close, not ctf_file_close.
+	* readelf.c (dump_ctf_errs): Rename ctf_file_t to ctf_dict_t.
+	(dump_ctf_archive_member): Likewise.
+	(dump_section_as_ctf): Likewise.  Use ctf_dict_close, not
+	ctf_file_close.
+
+2020-11-20  Nick Clifton  <nickc@redhat.com>
+
+	PR 22967
+	* nm.c (ifunc_type_chars): New variable.
+	(long_options): Add --ifunc-chars.
+	(print_symbol): Use ifunc_type_chars for ifunc symbols.
+	(main): Handle the new option.
+	* doc/binutils.texi: Document the new option.
+	* configure.ac: Add --enable-f-for-ifunc-symbols option which
+	changes the default symbol displayed by nm.
+	* NEWS: Mention the new feature.
+	* testsuite/binutils-all/nm.exp: Test the new feature.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+
+2020-11-20  Linda Zhang  <lindasc@qq.com>
+
+	PR 20979
+	* dllwrap.c (main): Deprecate and warn the use of dllwrap.
+
+2020-11-20  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* testsuite/binutils-all/readelf-maskos-1a.d: Fix test for unrecognized
+	bit set in SHF_MASKOS range.
+	* testsuite/binutils-all/readelf-maskos-1b.d: Likewise.
+	* testsuite/binutils-all/readelf-maskos-unknown.s: New test.
+
+2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* NEWS: Announce SHF_GNU_RETAIN support.
+	* readelf.c (get_elf_section_flags): Handle SHF_GNU_RETAIN.
+	Recognize SHF_GNU_RETAIN and SHF_GNU_MBIND only for supported OSABIs.
+	* testsuite/binutils-all/readelf.exp: Run new tests.
+	Don't run run_dump_test when there isn't an assembler available.
+	* testsuite/lib/binutils-common.exp (supports_gnu_osabi): Adjust
+	comment.
+	* testsuite/binutils-all/readelf-maskos-1a.d: New test.
+	* testsuite/binutils-all/readelf-maskos-1b.d: New test.
+	* testsuite/binutils-all/readelf-maskos.s: New test.
+	* testsuite/binutils-all/retain1.s: New test.
+	* testsuite/binutils-all/retain1a.d: New test.
+	* testsuite/binutils-all/retain1b.d: New test.
+
+2020-11-17  Howard Chu  <hyc@symas.com>
+
+	* ar.c (main): Place the libdeps record in the second archive
+	slot.
+
+2020-11-13  Nick Clifton  <nickc@redhat.com>
+
+	PR 26829
+	* dwarf.c (struct dwo_info): Add cu_offset field.
+	(add_dwo_info): Add cu_offset parameter.  Record in new dwo_info
+	struct.
+	(add_dwo_name): Add cu_offset field.
+	(add_dwo_dir): Add cu_offset field.
+	(add_dwo_id): Add cu_offset field.
+	(read_and_display_attr_value): Pass cu_offset to dwo recording
+	functions.
+	(load_separate_debug_files): Accumulate name, dir and id values
+	and display once for each CU.
+	* testsuite/binutils-all/dwo.sL Use a separate CU for the second
+	dwo link.
+	* testsuite/binutils-all/readelf.k2: Update expected output.
+
+2020-11-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>
+
+	* dwarf.c (display_debug_rnglists_list): Only bias the
+	DW_RLS_offset_pair with the base address.
+
+2020-11-10  Nick Clifton  <nickc@redhat.com>
+
+	* dwarf.c (skip_attr_bytes): Correctly handle DW_FORM_ref8.
+	(get_type_abbrev_from_form): Accept DW_FORM_ref8.
+
+2020-11-09  Andreas Schwab  <schwab@linux-m68k.org>
+
+	* Makefile.am (development.exp): Fix regexp.
+	* Makefile.in: Regenerate.
+
+2020-11-09  Nick Clifton  <nickc@redhat.com>
+
+	PR 26847
+	* dwarf.c (read_and_display_attr_value): In wide mode, display the
+	name of the form.
+
+2020-11-09  Alan Modra  <amodra@gmail.com>
+
+	* elfedit (usage): Avoid false positive "may be used uninitialised".
+	Don't leak memory.
+
+2020-11-09  Howard Chu  <hyc@symas.com>
+
+	* ar.c (main): Use plugin_target rather than "target" when
+	resetting libdeps_bfd target.
+
+2020-11-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfedit.c: Include "libiberty.h".
+	(usage): Update help message.
+
+2020-11-03  Howard Chu  <hyc@symas.com>
+
+	* ar.c (long_options): Add --record-libdeps.
+	(usage): Mention the new option.
+	(decode_options): Handle the new option.
+	(replace_members): If necessary, create a bfd to hold the libdeps
+	description.
+	* binemul.c (ar_emul_append_bfd): New function.
+	(ar_emul_replace_bfd): New function.
+	(ar_emul_default_append): Replace file_name and target arguments
+	with new_bfd argument.
+	(ar_emul_default_replace): Likewise.
+	* binemul.h: Update prototypes.
+	(struct bin_emulation_xfer_struct): Update fields.
+	* doc/binutils.texi: Document the new option.
+	* NEWS: Mention the new feature.
+	* emul_aix.c (ar_emul_aix_append): Update.
+	(ar_emul_aix_replace): Likewise.
+	* testsuite/binutils-all/ar.exp: Add test of new feature.
+
+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* readelf.c (decode_x86_isa): Handle
+	* GNU_PROPERTY_X86_ISA_1_BASELINE.
+	* testsuite/binutils-all/i386/empty.d: Updated.
+	* testsuite/binutils-all/i386/ibt.d: Likewise.
+	* testsuite/binutils-all/i386/pr21231a.d: Likewise.
+	* testsuite/binutils-all/i386/pr21231b.d: Likewise.
+	* testsuite/binutils-all/i386/shstk.d: Likewise.
+	* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/empty.d: Likewise.
+	* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/ibt.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.
+	* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/shstk.d: Likewise.
+
+2020-10-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26808
+	* dwarf.c (abbrev_list): Add abbrev_base.
+	(new_abbrev_list): Add an abbrev_base argument and record it.
+	(find_abbrev_list_by_abbrev_offset): Add an abbrev_base argument
+	and match it.
+	(process_debug_info): Pass abbrev_base to new_abbrev_list and
+	find_abbrev_list_by_abbrev_offset.
+	(display_debug_abbrev): Pass 0 abbrev_base to new_abbrev_list
+	and find_abbrev_list_by_abbrev_offset.
+	* testsuite/binutils-all/x86-64/pr26808.dump: New file.
+	* testsuite/binutils-all/x86-64/pr26808.dwp.bz2: Likewise.
+	* testsuite/binutils-all/x86-64/x86-64.exp: Run PR binutils/26808
+	test.
+
+2020-10-29  Nick Clifton  <nickc@redhat.com>
+
+	PR 26805
+	* objcopy.c (is_dwo_section): Check for missing or short section
+	names.
+
+2020-10-26  Andreas Rammhold <andreas@rammhold.de>
+
+	* README-how-to-make-a-release: Use sha256sum instead of md5sum.
+
+2020-10-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 26795
+	* elfedit.c (process_archive): Remove spurious call to free().
+
+2020-10-27  Nick Clifton  <nickc@redhat.com>
+
+	* dwarf.c (struct abbrev_list): New structure.  Used to collect
+	lists of abbreviation sets.
+	(struct abbrev_map): New structure.  Used to map CU offsets to
+	abbreviation offsets.
+	(record_abbrev_list): New function.  A new entry to an
+	abbreviation list.
+	(free_all_abbrevs): Update to free abbreviation lists.
+	(new_abbrev_list): New function.  Start a new abbreviation
+	list.
+	(find_abbrev_list_by_abbrev_offset): New function.
+	(find_abbrev_map_by_offset): New function.
+	(add_abbrev): Add abbrev_list parameter.
+	(add_abbrev_attr): Likewise.
+	(process_abbrev_section): Rename to process_abbrev_set and add
+	list parameter.
+	(get_type_abbrev_from_form): New function.  Attempts to decode the
+	forms used by DW_AT_type attributes.
+	(get_type_signedness): Display type names if operating in wide
+	mode.  Use get_type_abbrev_from_form.
+	(read_and_display_attr_value): Use get_type_abbrev_from_form.
+	(process_debug_info): Pre-parse the CU headers to collate all the
+	abbrevs before starting the main scan.
+	(process_debug_abbrev): Do not free any loaded abbrevs.
+	(free_debug_memory): Free the abbrev maps.
+
+2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/binutils-all/objcopy.exp (objcopy_test): Report
+	error message on error.
+
+2020-10-22  Dr. David Alan Gilbert  <dgilbert@redhat.com>
+
+	* windmc.c (write_header_define): Fix printf format.
+	(write_header): Likewise.
+
+2020-10-21  Nick Clifton  <nickc@redhat.com>
+
+	* dwarf.c (skip_attr_bytes): Accept DWARF versions higher than 4
+	when processing the DW_FORM_ref_addr form.
+	Skip bytes in DW_FORM_block and DW_FORM_exprloc forms.
+	Handle DW_FORM_indirect.
+	(get_type_signedness): Allow a limited amount of recursion.
+	Do not attempt to decode types that use the DW_FORM_ref_addr form.
+	(read_and_display_attr_value): 	Do not attempt to decode types
+	that use the DW_FORM_ref_addr form.
+
+2020-10-20  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c: Delete whitespace at end of line throughout.
+	(SECTION_NAME, SECTION_NAME_VALID): New.
+	(SECTION_NAME_PRINT): Rename from SECTION_NAME.  Formatting.
+	(printable_section_name, dump_relocations): Use SECTION_NAME_PRINT.
+	(process_section_headers, process_section_groups): Likewise.
+	(shdr_to_ctf_sect): Likewise.
+	(find_section, find_section_in_set): Use SECTION_NAME_VALID.
+	(ia64_process_unwind, hppa_process_unwind): Likewise.
+	(display_debug_section, initialise_dumps_byname): Likewise.
+	(process_lto_symbol_tables): Likewise.  Check trailing period of
+	lto symbol table names.
+	(display_lto_symtab): Use sizeof instead of strlen.
+
+2020-10-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* MAINTAINERS (RISC-V): Add myself as RISC-V co-maintainer.
+
+2020-10-19  Nick Clifton  <nickc@redhat.com>
+
+	* readelf.c (do_lto_syms): New local.
+	(long_option_values): Add OPTION_LTO_SYMS.
+	(options): Add --lto-syms.
+	(usage): Mention the new option.
+	(parse_args): Parse the new option.
+	(get_lto_kind): New function.
+	(get_lto_visibility): New function.
+	(get_lto_sym_type): New function.
+	(display_lto_symtab): New function - displays the contents of an
+	LTo symbol table section.
+	(process_lto_symbol_tables): New functions.  Calls
+	dipslay_lto_symtab on any LTO symbol table section.
+	(process_object_file): Call process_lto_symbol_tables.
+	* doc/binutils.texi: Document the new option.
+	* NEWS: Mention the new feature.
+
+2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* readelf.c (decode_x86_compat_2_isa): New function.
+	(decode_x86_isa): Updated for new X86_ISA_1_XXX bits.
+	(decode_x86_feature_1): Handle GNU_PROPERTY_X86_FEATURE_2_MASK.
+	(print_gnu_property_note): Handle X86_COMPAT_2_ISA_1_USED,
+	and X86_COMPAT_2_ISA_1_NEEDED.
+	* testsuite/binutils-all/i386/pr21231b.s: Updated to the current
+	GNU_PROPERTY_X86_ISA_1_USED and GNU_PROPERTY_X86_ISA_1_NEEDED
+	values.
+	* testsuite/binutils-all/x86-64/pr21231b.s: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a.s: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494b.s: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c.s: Likewise.
+	* testsuite/binutils-all/i386/empty.d: Updated.
+	* testsuite/binutils-all/i386/ibt.d: Likewise.
+	* testsuite/binutils-all/i386/pr21231a.d: Likewise.
+	* testsuite/binutils-all/i386/pr21231b.d: Likewise.
+	* testsuite/binutils-all/i386/shstk.d: Likewise.
+	* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/empty.d: Likewise.
+	* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/ibt.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.
+	* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/shstk.d: Likewise.
+
+2020-10-06  Nick Clifton  <nickc@redhat.com>
+
+	* objcopy.c (copy_object): Compare input and output sections by
+	pointer rather than name.
+
+2020-10-05  Nick Clifton  <nickc@redhat.com>
+
+	PR 26698
+	* windmc.c (mc_unify_path): Fix typo checking character at end of
+	pathname.
+
+2020-10-05  Samanta Navarro  <ferivoz@riseup.net>
+
+	* doc/binutils.texi: Fix spelling mistakes.
+
+2020-09-29  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf.c (display_loclists_list): Handle DW_LLE_start_end and
+	DW_LLE_start_length. Only add base_address for DW_LLE_offset_pair.
+
+2020-09-25  Alan Modra  <amodra@gmail.com>
+
+	* elfcomm.c (byte_put_little_endian, byte_put_big_endian): Support
+	more field sizes.
+	* readelf.c (target_specific_reloc_handling <MSP430>): Limit
+	allowed reloc_size.  Don't read_leb128 outside of section.
+
+2020-09-23  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf.c (process_debug_info): Print Unit Type for DWARF5.
+	* testsuite/binutils-all/dw5.W: Adjust expected output.
+	* testsuite/binutils-all/dwarf-attributes.W: Likewise.
+
+2020-09-23  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf.c (read_and_display_attr_value): Handle DW_FORM_ref_addr
+	for dwarf_version 5 just as version 3 and 4 (only 2 is
+	different).
+	(process_debug_info): Allow DW_UT_partial.
+
+2020-09-24  Nick Clifton  <nickc@redhat.com>
+
+	PR 26662
+	* doc/binutils.texi (nm): Document that 'c' is used for small
+	common symbols.
+
+2020-09-21  Ludovic Courtès  <ludo@gnu.org>
+
+	* doc/binutils.texi (objcopy, strip): Say that
+        '--strip-unneeded' implies '--strip-debug'.
+
+2020-09-16  Anatoly Parshintsev  <kupokupokupopo@gmail.com>
+
+       * verilog.c (verilog_write_address): Properly handle 64-bit
+	addresses to avoid truncation of the high part.
+
+2020-09-16  Alan Modra  <amodra@gmail.com>
+
+	* nm.c (print_symbol): Adjust elf_symbol_from invocation.
+	* objcopy.c (is_hidden_symbol): Likewise.
+
+2020-09-15  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release (https): Add a reminder to create a
+	new Bugzilla tag for the point release, once it has been published.
+
+2020-09-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* readelf.c (get_note_type): Support NT_X86_CET.
+
+2020-09-11  Nick Clifton  <nickc@redhat.com>
+
+	PR 26595
+	* dwarf.c (load_separate_debug_info): Return NULL rather than
+	FALSE in error situations.
+	(load_separate_debug_file): Move code to load debug links to ...
+	(check_for_and_load_links): ... here.  New function.  Load
+	separate debug information pointed to by debuglink and
+	debugaltlink sections.  Recursively scan newly loaded debug
+	information for more links and load them too.
+
+2020-09-09  Alan Modra  <amodra@gmail.com>
+
+	PR 26578
+	* dwarf.c (parse_gnu_debugaltlink): Don't alloc build_id_data.
+	(load_separate_debug_files): Use a stack var for build_id_data.
+
+2020-09-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26587
+	* testsuite/binutils-all/objcopy.exp: Pass --disable-reloc-section
+	to ld on PE targets for PR 25662 test.
+
+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+	Kuan-Lin Chen  <kuanlinchentw@gmail.com>
+
+	* readelf.c (target_specific_reloc_handling): Handle
+	R_MSP430{,X}_GNU_{SET,SUB}_ULEB128.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (disassemble_bytes): Use an unsigned type for "addend".
+
+2020-08-30  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (print_gnu_build_attribute_name): Use unsigned long
+	long for "bytes".
+
+2020-08-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 26548
+	* dwarf.c (read_leb128): When checking for overflow of a signed
+	read, use a signed shift.
+
+2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* readelf.c (get_csky_section_type_name): New.
+	(get_section_type_name): Add handler for CSKY.
+	(display_csky_attribute): New.
+	(process_arch_specific): Add handler for CSKY.
+	* testsuite/binutils-all/strip-3.d: Remove .csky.attributes
+	section.
+
+2020-08-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* readelf.c (get_msp430x_section_type_name): Rename to ...
+	(get_msp430_section_type_name): ... this.
+	(get_section_type_name): Use get_msp430_section_type_name.
+	(display_msp430x_attribute): Rename to ...
+	(display_msp430_attribute): ... this.
+	(process_arch_specific): Use display_msp430_attribute.
+
+2020-08-27  John David Anglin  <danglin@gcc.gnu.org>
+
+	PR 26356
+	* testsuite/binutils-all/objcopy.exp (objcopy --reverse-bytes): Add
+	"-j $PRIVATE$" to command on hppa*-*-hpux*.
+	* testsuite/lib/utils-lib.exp (default_binutils_run): Remove existing
+	dollar-sign quotes before quoting.  Do this prior to generating log
+	output.
+
+2020-08-27  Ralf Habacker  <ralf.habacker@freenet.de>
+
+	PR 26088
+	* mclex.c (skip_until_eol): If eol was found, increment line
+	number.
+
+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (dump_ctf_errs): Unquote CTF error messages.
+	* readelf.c (dump_ctf_errs): Likewise.
+
+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (dump_ctf_archive_member): Move error-
+	reporting...
+	(dump_ctf_errs): ... into this separate function.
+	(dump_ctf): Call it on open errors.
+	* readelf.c (dump_ctf_archive_member): Move error-
+	reporting...
+	(dump_ctf_errs): ... into this separate function.  Support
+	calls with NULL fp. Adjust for new err parameter to
+	ctf_errwarning_next.
+	(dump_section_as_ctf): Call it on open errors.
+
+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>
+
+	* Makefile.am (readelf_LDADD): Move $(LIBINTL) after $(LIBCTF_NOBFD).
+	* Makefile.in: Regenerated.
+
+2020-08-26  Nick Clifton  <nickc@redhat.com>
+
+	PR 26405
+	* readelf.c (get_segment_type): Handle OpenBSD segment types.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26412
+	* objcopy.c (copy_object): Don't fwrite NULL contents.
+
+2020-08-26  Katayama Hirofumi  <katayama.hirofumi.mz@gmail.com>
+
+	PR 26340
+	* rcparse.y (AUTOCHECKBOX): Add WS_TABSTOP to the base style.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (dump_section_as_strings) Avoid false positive
+	"may be used uninitialised".
+
+2020-08-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26382
+	* nm.c (print_symname): Display only one '@' for undefined
+	versioned symbols.
+	* doc/binutils.texi: Update nm version information.
+
+2020-08-21  Mark Wielaard  <mark@klomp.org>
+
+	* testsuite/binutils-all/readelf.exp (readelf_wi_test): Also
+	recognize DW_LANG_C11.
+
+2020-08-19  Alan Modra  <amodra@gmail.com>
+
+	PR 26349
+	* readelf.c (dump_relocations): Use BFD_VMA_FMT to print offset
+	and info fields.
+	(dump_section_as_strings): Don't use %tx to display offset.
+
+2020-08-14  Alan Modra  <amodra@gmail.com>
+
+	PR 26388
+	* dwarf.c (free_debug_memory): Free alloc_num_debug_info_entries
+	of debug_information.  Correct test of max_loc_offsets and
+	max_range_lists.
+	* rddbg.c (read_debugging_info): Free dhandle on error.
+
+2020-08-14  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/mangled.s: Use dc.a rather than dc.d.
+
+2020-08-13  Alan Modra  <amodra@gmail.com>
+
+	PR 26348
+	* objcopy.c (copy_object): Report file name with endian error.
+	Error and return on abfd->read_only.
+
+2020-08-12  Tom Tromey  <tromey@adacore.com>
+
+	* dwarf-mode.el (Version): Now 1.6.
+	(dwarf-die-button-action): Tighten DIE reference regexp.
+	(dwarf-font-lock-keywords): Update name regexp.
+
+2020-08-12  Nick Clifton  <nickc@redhat.com>
+
+	PR binutils/26331
+	* readelf.c (do_demangle): New option flag.
+	(print_symbol): If do_demangle is enabled, demangle the symbol.
+	(enum long_option_values): New enum to hold long option values.
+	(options): Add demangle, no-demangle, recursion-limit and
+	no-recursion-limit options.  Alpha sort the table.
+	(usage): Describe the new options.
+	(parse_args): Handle the new options.
+	* NEWS: Mention the new feature.
+	* doc/binutils.texi: Document the new feature.
+	* testsuite/binutils-all/readelf.exp: Test the new feature.
+	* testsuite/binutils-all/mangled.s: New file - assembler source.
+	* testsuite/binutils-all/readelf.demangled: New file - expected
+	output from readelf.
+
+2020-08-12  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: Updated Serbian translation.
+
+2020-08-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26302
+	* nm.c (with_symbol_versions): Removed.
+	(long_option_values): Add OPTION_WITH_SYMBOL_VERSIONS.
+	(long_options): Update --with-symbol-versions entry.
+	(print_symbol): Remove the with_symbol_versions check.
+	(main): Add OPTION_WITH_SYMBOL_VERSIONS for backward
+	compatibility.
+	* doc/binutils.texi: Remove --with-symbol-versions.
+
+2020-08-05  Alan Modra  <amodra@gmail.com>
+
+	PR 26337
+	* objdump.c (load_specific_debug_section): Revert last change.
+
+2020-08-05  Alan Modra  <amodra@gmail.com>
+
+	PR 26337
+	* objdump.c (load_specific_debug_section): Don't malloc space for
+	section contents, use bfd_malloc_and_get_section.
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.
+	* Makefile.in, doc/Makefile.in: Regenerate.
+	* configure: Regenerate.
+
+2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/binutils-all/i386/compressed-1a.d: Pass --gdwarf-3
+	to assembler.
+	* testsuite/binutils-all/i386/compressed-1b.d: Likewise.
+	* testsuite/binutils-all/i386/compressed-1c.d: Likewise.
+	* testsuite/binutils-all/x86-64/compressed-1a.d: Likewise.
+	* testsuite/binutils-all/x86-64/compressed-1b.d: Likewise.
+	* testsuite/binutils-all/x86-64/compressed-1c.d: Likewise.
+
+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/binutils-all/mips/global-local-symtab-sort-o32.d:
+	New test.
+	* testsuite/binutils-all/mips/global-local-symtab-sort-o32t.d:
+	New test.
+	* testsuite/binutils-all/mips/global-local-symtab-sort-n32.d:
+	New test.
+	* testsuite/binutils-all/mips/global-local-symtab-sort-n32t.d:
+	New test.
+	* testsuite/binutils-all/mips/global-local-symtab-sort-n64.d:
+	New test.
+	* testsuite/binutils-all/mips/global-local-symtab-sort-n64t.d:
+	New test.
+	* testsuite/binutils-all/mips/global-local-symtab-final-o32.d:
+	New test.
+	* testsuite/binutils-all/mips/global-local-symtab-final-n32.d:
+	New test.
+	* testsuite/binutils-all/mips/global-local-symtab-final-n64.d:
+	New test.
+	* testsuite/binutils-all/mips/mips.exp: Run the new tests.
+
+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/binutils-all/mips/global-local-symtab-o32.d: New
+	test.
+	* testsuite/binutils-all/mips/global-local-symtab-o32t.d: New
+	test.
+	* testsuite/binutils-all/mips/global-local-symtab-n32.d: New
+	test.
+	* testsuite/binutils-all/mips/global-local-symtab-n32t.d: New
+	test.
+	* testsuite/binutils-all/mips/global-local-symtab-n64.d: New
+	test.
+	* testsuite/binutils-all/mips/mips.exp: Run the new tests.
+
+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26301
+	* configure: Regenerated.
+
+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26301
+	* configure: Regenerated.
+
+2020-07-27  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (dump_section): Don't return without calling
+	process_section_p.
+
+2020-07-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* doc/binutils.texi: Replace preceeded with preceded.
+
+2020-07-26  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/binutils-all/mips/mips.exp (run_dump_test_abi)
+	(run_dump_test_o32, run_dump_test_n32, run_dump_test_n64): New
+	procedures.
+	(has_newabi): Remove variable.
+	(has_abi, abi_asflags, abi_ldflags): New associative array
+	variables.
+	(irixemul): New variable.
+	Replace `run_dump_test' calls where applicable throughout with
+	`run_dump_test_o32', `run_dump_test_n32' and `run_dump_test_n64'
+	as appropriate.  Use `noarch' for tests that require their own
+	architecture setting.
+	* testsuite/binutils-all/mips/mips-ase-1.d: Remove GAS flags.
+	* testsuite/binutils-all/mips/mips-ase-2.d: Likewise.
+	* testsuite/binutils-all/mips/mips-ase-3.d: Likewise.
+	* testsuite/binutils-all/mips/mips-note-2-n32.d: Likewise.
+	* testsuite/binutils-all/mips/mips-note-2-n64.d: Likewise.
+	* testsuite/binutils-all/mips/mips-note-2.d: Likewise.
+	* testsuite/binutils-all/mips/mips-note-2r-n32.d: Likewise.
+	* testsuite/binutils-all/mips/mips-note-2r-n64.d: Likewise.
+	* testsuite/binutils-all/mips/mips-note-2r.d: Likewise.
+	* testsuite/binutils-all/mips/mips-reginfo-n32.d: Likewise.
+	* testsuite/binutils-all/mips/mips-reginfo.d: Likewise.
+	* testsuite/binutils-all/mips/mips16-extend-noinsn.d: Likewise.
+	* testsuite/binutils-all/mips/mips16-pcrel.d: Likewise.
+	* testsuite/binutils-all/mips/mips16-alias.d: Remove `-32' from
+	GAS flags.
+	* testsuite/binutils-all/mips/mips16-extend-insn.d: Likewise.
+	* testsuite/binutils-all/mips/mips16-noalias.d: Likewise.
+	* testsuite/binutils-all/mips/mips16-undecoded.d: Likewise.
+	* testsuite/binutils-all/mips/mips16e2-extend-insn.d: Likewise.
+	* testsuite/binutils-all/mips/mips16e2-undecoded.d: Likewise.
+	* testsuite/binutils-all/mips/mixed-micromips.d: Likewise.
+	* testsuite/binutils-all/mips/mixed-mips16.d: Likewise.
+
+2020-07-24  Aaron Merey  <amerey@redhat.com>
+
+	* Makefile.am: Replace LIBDEBUGINFOD with DEBUGINFOD_LIBS.
+	* Makefile.in: Rebuild.
+	* configure: Rebuild.
+	* doc/Makefile.in: Rebuild.
+
+2020-07-24  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Various small updates whilst
+	creating the 2.35 release.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/lib/binutils-common.exp (run_dump_test): Add 'cc'
+	option.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (dump_ctf_archive_member): Remove linefeeds.
+	(dump_ctf): Likewise.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* objdump.c (ctf_archive_member): Print CTF errors and warnings.
+	* readelf.c (dump_ctf_archive_member): Likewise.
+
+2020-07-22  Nick Clifton  <nickc@redhat.com>
+
+	* readelf.c (parse_args): Silence potential warnings about a
+	memory resource leak when allocating space for ctf option values.
+	(dump_section_as_ctf): Fix typo checking dump_ctf_strtab_name
+	variable.
+
+2020-07-21  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2020-07-14  Claudiu Zissulescu  <claziss@gmail.com>
+
+	* testsuite/binutils-all/arc/double_regs.s: New test.
+	* testsuite/binutils-all/arc/objdump.exp: Add the above test.
+
+2020-07-13  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2020-07-13  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (is_pecoff_format): Accept
+	optional machine-os arg.
+
+2020-07-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* readelf.c (decode_x86_feature_2): Handle
+	GNU_PROPERTY_X86_FEATURE_2_TMM.
+
+2020-07-10  Tom de Vries  <tdevries@suse.de>
+
+	* dwarf.c (display_debug_lines_decoded): Don't emit meaningless
+	information in the end_sequence row.
+	* testsuite/binutils-all/dw5.W: Update.
+	* testsuite/binutils-all/objdump.WL: Update.
+
+2020-07-09  Alan Modra  <amodra@gmail.com>
+
+	* dlltool.c: Remove powerpc PE support and comments.
+	* configure.ac: Remove powerpc PE dlltool config.
+	* configure: Regenerate.
+
+2020-07-09  Nick Clifton  <nickc@redhat.com>
+
+	* rclex.c: Add OWNERDRAW keyword.
+	* rcparse.y: Add OWNERDRAW token.
+	(menuitem_flag) Add BITMAP and OWNERDRAW entries.
+	* resrc.c (write_rc_menuitems): Add support for OWNERDRAW and
+	BITMAP flags.
+	* windres.c (extended_menuitems): Likewise.
+	* testsuite/binutils-all/windres/menuitem_flags.rc: New test.
+
+2020-07-09  Alan Modra  <amodra@gmail.com>
+
+	* readelf (slurp_hppa_unwind_table): Set table_len before use
+	in relocation sanity checks.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/ar.exp: Use is_xcoff_format.
+	* testsuite/binutils-all/nm.exp: Likewise.
+	* testsuite/binutils-all/copy-2.d: Run only for elf and pe targets.
+	* testsuite/binutils-all/copy-3.d: Run only for elf targets.
+	* testsuite/binutils-all/set-section-alignment.d: Likewise.
+	* testsuite/binutils-all/copy-4.d: Don't run for xcoff.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (is_xcoff_format): New.
+	* testsuite/binutils-all/objcopy.exp (pr25662): Exclude xcoff.
+
+2020-07-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/bg.po: Updated Bulgarian translation.
+	* po/pt.po: Updated Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-07-06  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (print_dynamic_symbol): Don't sprintf to buffer to
+	find string length.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/binutils.pot: Regenerate.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-07-02  Nick Clifton  <nickc@redhat.com>
+
+	PR 26028
+	* readelf.c (print_symbol): Handle truncation of symbol names.
+	(options): Add -T/--silent-truncation option.
+	(parse_args): Handle the option.
+	(print_dynamic_symbol): Correct calculation of width available to
+	display symbol name.
+	* doc/binutils.texi: Document the -T option to readelf.
+	* NEWS: Mention the new feature.
+
+2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention x86 NaCl target support removal.
+	* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): Remove
+	x86 NaCl target support.
+	* testsuite/binutils-all/elfedit-1.d: Likewise.
+	* testsuite/binutils-all/i386/i386.exp: Likewise.
+	* testsuite/binutils-all/x86-64/objects.exp: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.
+	* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.
+	* testsuite/binutils-all/x86-64/x86-64.exp: Likewise.
+
+2020-06-30  Nick Clifton  <nickc@redhat.com>
+
+	* dwarf.c (read_and_display_attr_value): Support
+	DW_FORM_GNU_strp_alt when used with DW_AT_dwo_name and
+	DW_AT_comp_dir.
+
+2020-06-30  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/readelf.exp (readelf_dump_test): Remove
+	xfail for nds32.
+
+2020-06-29  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* dwarf.c (display_debug_str_offsets): Rename local variable
+	index to idx.  Move to top of function.
+
+2020-06-29  Alan Modra  <amodra@gmail.com>
+
+	* dwarf.c: Use C style comments.
+	* resrc.c: Likewise.
+
+2020-06-27  Alan Modra  <amodra@gmail.com>
+
+	* elfcomm.c (setup_nested_archive): Set nested_arch->file to NULL
+	after freeing.
+	(release_archive): Set fields of arch to NULL after freeing.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* readelf.c (dump_section_as_ctf): Support .ctf archives using
+	ctf_arc_bufopen.  Automatically load the .ctf member of such
+	archives as the parent of all other members, unless specifically
+	overridden via --ctf-parent.  Split out dumping code into...
+	(dump_ctf_archive_member): ... here, as in objdump, and call
+	it once per archive member.
+	(dump_ctf_indent_lines): Code style fix.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac [--enable-libctf]: New, default yes.
+	Set ENABLE_LIBCTF accordingly.
+	* Makefile.am [!ENABLE_LIBCTF]: Empty LIBCTF and LIBCTF_NOBFD.
+	* configure: Regenerate.
+	* config.in: Regenerate.
+	* Makefile.in: Regenerate.
+	* aclocal.m4: Regenerate.
+	* objdump.c (usage): Conditionalize portions on ENABLE_LIBCTF.
+	(option_values): Likewise.
+	(long_options): Likewise.
+	(main): Likewise.
+	(dump_ctf_indent_lines): Conditionalize out when !ENABLE_LIBCTF.
+	(make_ctfsect): Likewise.
+	(dump_ctf_archive_member): Likewise.
+	(dump_ctf) [ENABLE_LIBCTF]: Likewise.
+	(dump_ctf) [!ENABLE_LIBCTF]: New empty stub.
+	* readelf.c (options): Conditionalize portions on ENABLE_LIBCTF.
+	(usage): Likewise.
+	(process_section_contents): Likewise.
+	(shdr_to_ctf_sect): Conditionalize out when !ENABLE_LIBCTF.
+	(dump_ctf_indent_lines): Likewise.
+	(dump_section_as_ctf) [ENABLE_LIBCTF]: Likewise.
+
+2020-06-26  Jan Beulich  <jbeulich@suse.com>
+
+	* doc/binutils.texi: Adjust description of x86's -Msuffix. Drop
+	redundant text from x86 specific part of -M section.
+
+2020-06-26  Pat Bernardi  <bernardi@adacore.com>
+
+	* readelf.c (display_m68k_gnu_attribute): New function.
+	(process_arch_specific): Call display_m68k_gnu_attribute for EM_68K.
+
+2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26160
+	* testsuite/binutils-all/pr26160.dwp.bz2: New file.
+	* testsuite/binutils-all/pr26160.r: Likewise.
+	* testsuite/binutils-all/readelf.exp: Run PR binutils/26160 test.
+
+2020-06-23  Nick Clifton  <nickc@redhat.com>
+
+	PR 26160
+	* dwarf.c (fetch_indexed_string): Detect and handle old style
+	.debug_str_offset tables.
+	(display_debug_str_offsets): Likewise.  Also add support for
+	.debug_str_offsets.dwo sections.
+
+2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26112
+	* testsuite/binutils-all/pr26112.o.bz2: New file.
+	* testsuite/binutils-all/pr26112.r: Likewise.
+	* testsuite/binutils-all/readelf.exp: Run PR binutils/26112 test.
+
+2020-06-23  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/objdump.exp (bintest.a): Correct
+	remote_file delete command.
+
+2020-06-22  Nick Clifton  <nickc@redhat.com>
+
+	PR 26112
+	* dwarf.c (display_debug_str_offsets): Add code to display the
+	contents of the .debug_str_offsets section.
+	(display_debug_macro): Add support for DW_MACRO_define_strx and
+	DW_MACRO_undef_strx.
+
+2020-06-22  Saagar Jha  <saagar@saagarjha.com>
+
+	* od-macho.c: Dump linkedit data for new load commands.
+
+2020-06-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.
+	* testsuite/lib/binutils-common.exp (check_relro_support): New proc.
+	(run_dump_test): Use check_relro_support to decide whether to pass
+	extra ld option "-z norelro".
+
+2020-06-11  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_mips_specific): Don't alloc memory for
+	Elf_Internal_Options.
+
+2020-06-11  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_mips_specific): Assert size of internal
+	types match size of external types, and simplify allocation of
+	internal buffer.  Catch possible integer overflow when sanity
+	checking option size.  Don't assume options are a regular array.
+	Sanity check reginfo option against option size.  Use PRI macros
+	when printing.
+
+2020-06-10  Ralf Habacker  <ralf.habacker@freenet.de>
+
+	PR 26082
+	* mclex.c (yylex): Reject lines that reach end-of-file without a
+	terminating newline character.
+
+2020-06-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 26093
+	* doc/binutils.texi (strings): Fix typo.
+
+2020-06-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 26086
+	* dwarf.c (process_debug_info): Check that there is space in the
+	debug_information array before filling in an entry.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* doc/binutils.texi (PowerPC -M option): Mention power10 and pwr10.
+
+2020-06-05  Joel Anderson  <joelanderson333@gmail.com>
+
+	PR 26082
+	* mclex.c (yylex): Add test for an empty input stream.
+
+2020-06-04  Stephen Casner  <casner@acm.org>
+
+	* testsuite/binutils-all/pr25662-pdp11.s: Alternate source file
+	for test using section pseudo-ops compatible with pdp11.
+	* testsuite/binutils-all/objcopy.exp: Select alternate source.
+
+2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* objdump.c (disassemble_data): Set disasm_info.endian_code to
+	disasm_info.endian after the latter is initialized to the
+	endianness reported by BFD.
+
+2020-06-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/i386/i386.exp: Remove global directive
+	outside proc body.
+	* testsuite/binutils-all/x86-64/objects.exp: Likewise.
+	* testsuite/binutils-all/x86-64/x86-64.exp: Likewise.
+
+2020-06-03  Joel Anderson  <joelanderson333@gmail.com>
+
+	* windmc.h (struct mc_node): Add id_typecast field.
+	* mcparse.y (message): Initialise the id_typecast field.
+	* windmc.c (write_dbg): Use the id_typecast field as a parameter
+	when calling write_dbg_define.
+	(write_header): Likewise.
+
+2020-06-03  Alan Modra  <amodra@gmail.com>
+
+	PR 26069
+	* objcopy.c (copy_relocations_in_section): Free relpp on error.
+	Don't accidentally free isection->orelocation.
+
+2020-06-02  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/ar.exp (obj): Set up object file name
+	extension.  Use throughout.  Don't completely exclude non-ELF
+	alpha targets.  Run long_filenames test for tic30.  Exclude thin
+	archive tests for aix, ecoff and vms.
+	* estsuite/binutils-all/objdump.exp (obj): Set up object file name
+	extension.  Use throughout.  Don't exclude non-ELF alpha targets
+	from "bintest.a".
+
+2020-05-28  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* MAINTAINERS (Xtensa): Add myself as maintainer.
+
+2020-05-23  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/ar.exp (many_files): New test.
+
+2020-05-21  Alan Modra  <amodra@gmail.com>
+
+	* addr2line.c: Replace "if (x) free (x)" with "free (x)" throughout.
+	* dlltool.c: Likewise.
+	* elfcomm.c: Likewise.
+	* rddbg.c: Likewise.
+	* readelf.c: Likewise.
+	* stabs.c: Likewise.
+	* windmc.c: Likewise.
+	* windres.c: Likewise.
+	* wrstabs.c: Likewise.
+
+2020-05-21  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (get_num_dynamic_syms): Bounds check mipsxlat array
+	access.
+
+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* dwarf.c: Updated since DECLARE_CSR is changed.
+
+2020-05-19  H.J. Lu  <hjl.tools@gmail.com>
+
+	PR binutils/25809
+	* readelf.c (process_program_headers): Warn if the PT_DYNAMIC
+	segment doesn't match the .dynamic section and checks are
+	enabled.
+	(struct filedata): Add dynamic_symtab_section and
+	dynamic_strtab_section fields.
+	(process_section_headers): Set dynamic_symtab_section to the
+	.dynsym section.  Set dynamic_strtab_section to the .dynstr
+	section.
+	(process_dynamic_section): Warn if the .dynsym section doesn't
+	match DT_SYMTAB and DT_SYMENT or the .dynstr section doesn't
+	DT_STRTAB and DT_STRSZ.  But only if checks are enabled.
+
+2020-05-19  Alan Modra  <amodra@gmail.com>
+
+	* ar.c (map_over_members, get_pos_bfd, delete_members, move_members),
+	(replace_members): Use bfd_get_filename rather than accessing
+	bfd->filename directly.
+	* arsup.c (map_over_list, ar_delete, ar_replace, ar_extract): Likewise.
+	* binemul.c (do_ar_emul_append): Likewise.
+	* coffgrok.c (coff_grok): Likewise.
+
+2020-05-18  Stafford Horne  <shorne@gmail.com>
+
+	* MAINTAINERS (OR1K): Add myself as maintainer.
+
+2020-05-07  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* doc/binutils.texi: Mention 'entry address' in the set-start and
+	adjust-start options descriptions.
+
+2020-05-05  Nick Clifton  <nickc@redhat.com>
+
+	* dwarf.c (do_checks): New global variable.
+	(display_formatted_table): Warn about an unexpected number of
+	columns in the table, if checks are enabled.  Do not complain
+	about the lack of data following the number of entries in the
+	table if the table is empty.
+	(display_debug_lines_decoded): Only warn about an unexpected
+	number of columns in a table if checks are enabled.
+	* dwarf.h (do_checks): Add a prototype.
+	* elfcomm.c (error): Remove weak attribute.
+	(warn): Likewise.
+	* readelf.c (do_checks): Delete.
+	(warn): Delete.
+	(process_section_headers): Only warn about empty sections if
+	checks are enabled.
+
+2020-05-04  Fangrui Song   <maskray@google.com>
+
+	* objcopy.c (copy_object): Allow empty section.
+	* testsuite/binutils-all/update-section.exp: Add test.
+
+2020-05-04  Nick Clifton  <nickc@redhat.com>
+
+	PR 25917
+	* dwarf.c (display_debug_lines_decoded): Warn if encountering a
+	supicious number of entries for DWARF-5 format directory and file
+	name tables.  Do not display file name table header if the table
+	is empty.  Do not allocate space for empty tables.
+
+2020-05-04  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_nds32_specific): Check size of .nds32_e_flags
+	section.  Don't assume endian of host matches nds32 target.  Free
+	buffer.
+
+2020-05-01  Alan Modra  <amodra@gmail.com>
+	    Haim Shimonovich  <Haim.Shimonovich@ceva-dsp.com>
+
+	* objdump.c (disassemble_bytes): Don't scan for zeros when
+	disassembling zeros.  Translate "resuming at file offset" message.
+	Formatting.  Replace some signed variables with unsigned.
+
+2020-04-30  Alex Coplan  <alex.coplan@arm.com>
+
+	* testsuite/binutils-all/aarch64/in-order-all.d: Update to use new
+	disassembly.
+	* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.
+
+2020-04-30  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/lib/binutils-common.exp (check_pie_support): New
+	proc.
+
+2020-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* dwarf.c (display_debug_ranges): Ignore duplicate entries in
+	range_entries for the same offset.
+
+2020-04-29  Nick Clifton  <nickc@redhat.com>
+
+	* readelf.c (warn): New function - like elfcomm.c version but only
+	produces output if warnings are enabled.
+	(struct options): Add --lint and --enable-checks.
+	(usage): Add entry for --lint.
+	(parse_args): Handle -L.  If checks are enabled but no dumps have
+	been selected then enable all dumps.
+	(process_section_headers): Replace long if-then-else sequence with
+	a switch.  Add warning messages for empty SHT_REL, SHT_RELA and
+	SHT_PROGBITS sections.
+	(process_file): Do not complain if the file is an archive and lint
+	mode has been enabled.
+	* elfcomm.c (error): Make the function weak.
+	(warn): Likewise.
+	* NEWS: Mention the new feature.
+	* doc/binutils.texi: Document the new feature.
+	* dwarf.h (report_leb_status): Add file name and line number
+	parameters.  Include them in the diagnostic output.
+	(READ_ULEB): Pass file and line number to report_leb_status.
+	(READ_SLEB): Likewise.
+	* dwarf.c (read_and_print_leb128): Pass file and line number to
+	report_leb_status.
+	* testsuite/binutils-all/readelf.exp: Add test of new feature.
+	* testsuite/binutils-all/zero-sec.s: New test source file.
+	* testsuite/binutils-all/zero-sec.r: Expected output from new
+	test.
+
+2020-04-29  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: Updated Serbian translation.
+
+2020-04-26  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (get_num_dynamic_syms): Check DT_MIPS_XHASH was
+	read before dereferencing, and gracefully return.  Remove
+	gnu_hash_error variable.  Free gnu hash arrays if number of
+	syms found is zero.
+
+2020-04-24  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (get_num_dynamic_syms): Check for nbuckets and nchains
+	non-zero.
+	(process_dynamic_section): Call get_num_dynamic_syms once rather
+	than in segment loop.  Break out of segment loop on a successful
+	load of dynamic symbols.  Formatting.
+	(process_object): Return error status from process_dynamic_section.
+
+2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>
+
+	* elf-bfd.h (elfcore_write_arc_v2): Add prototype.
+	* elf.c (elfcore_grok_arc_v2): New function.
+	(elfcore_grok_note): Call the new function to handle the corresponding
+	note.
+	(elfcore_write_arc_v2): New function.
+	(elfcore_write_register_note): Call the new function to handle the
+	corresponding pseudo-sections.
+
+2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
+
+	PR ld/25861
+	* readelf.c (is_none_reloc): Recognize
+	BFD_RELOC_XTENSA_PDIFF{8,16,32} and
+	BFD_RELOC_XTENSA_NDIFF{8,16,32}.
+
+2020-04-22  Nick Clifton  <nickc@redhat.com>
+
+	* MAINTAINERS: Remove Chris Faylor as the ix86 PE maintainer.
+
+2020-04-22  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (archive_file_offset, archive_file_size, dynamic_addr),
+	(dynamic_size, dynamic_nent, dynamic_strings, dynamic_strings_length),
+	(num_dynamic_syms, nbuckets, nchains, buckets, chains),
+	(ngnubuckets, gnubuckets, gnuchains, mipsxlat, ngnuchains),
+	(gnusymidx, dynamic_symbols, dynamic_syminfo, dynamic_syminfo_offset),
+	(dynamic_syminfo_nent, program_interpreter, dynamic_info),
+	(dynamic_info_DT_GNU_HASH, dynamic_info_DT_MIPS_XHASH, version_info),
+	(dynamic_section, symtab_shndx_list, group_count, section_groups),
+	(section_headers_groups): Move to struct filedata.  Update use
+	throughout file.
+
+2020-04-22  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (struct dump_data): New, used..
+	(cmdline): ..here, and..
+	(struct filedata): ..here.  Adjust all uses.
+	(request_dump_bynumber, request_dump, parse_args): Pass in a
+	struct dump_data* rather than Filedata*.  Adjust callers.
+	(main): Don't set cmdline.file_name.
+
+2020-04-20  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_symbol_table): Clear ngnuchains, ngnubuckets
+	and nbuckets.
+
+2020-04-20  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_section_headers): Free dynamic symbols etc.
+	earlier.
+
+2020-04-20  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (get_num_dynamic_syms): Formatting.  Don't return
+	on error without freeing.
+	(process_dynamic_section): Don't recreate dynamic symbols from
+	dynamic tag info when the dynamic symbols have already been
+	read via section headers.
+
+2020-04-17  Fredrik Strupe  <fredrik@strupe.net>
+
+	* testsuite/binutils-all/arm/vdup-cond.d: New test for testing that
+	conditional VDUP instructions are disassembled correctly.
+	* testsuite/binutils-all/arm/vdup-cond.s: New file used by
+	vdup-cond.d.
+	* testsuite/binutils-all/arm/vdup-thumb.d: New test for testing
+	that VDUP instructions (which are conditional in A32) can be
+	disassembled in thumb mode.
+	* testsuite/binutils-all/arm/vdup-cond.s: New file used by
+	vdup-thumb.d.
+
+2020-04-17  Alan Modra  <amodra@gmail.com>
+
+	PR 25840
+	* debug.c (debug_class_type_samep): Don't segfault on NULL type.
+
+2020-04-16  Alan Modra  <amodra@gmail.com>
+
+	* doc/binutils.texi: Mention --no-show-raw-insn in objdump
+	--no-addresses description.
+
+2020-04-15  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (no_addresses): New static var.
+	(usage): Print help for --no-addresses.
+	(long_options): Add --no-addresses entry.
+	(objdump_print_addr_with_sym, objdump_print_addr): Omit symbol address.
+	(disassemble_bytes): Don't print current line address, or reloc
+	address.
+	* doc/binutils.texi: Document objdump --no-addresses.
+
+2020-04-15  Alan Modra  <amodra@gmail.com>
+
+	PR 25822
+	* readelf.c (get_num_dynamic_syms): Don't set num_of_syms when
+	reading buckets or chains fails.
+
+2020-04-15  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_symbol_table): Zero gnubuckets, gnuchains
+	etc. after freeing.
+
+2020-04-15  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (get_group_flags): Translate text.
+	(get_file_type, get_symbol_binding, get_symbol_type),
+	(get_ppc64_symbol_other, get_symbol_other): Increase size of buffer.
+
+2020-04-15  Alan Modra  <amodra@gmail.com>
+
+	PR 25821
+	* readelf.c (get_num_dynamic_syms): Typo fix.
+
+2020-04-14  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_mips_specific): Free eopt and iopt.  Avoid
+	possibility of overflow when checking number of conflicts.
+
+2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25707
+	* readelf.c (nbuckets): New.
+	(nchains): Likewise.
+	(buckets): Likewise.
+	(chains): Likewise.
+	(ngnubuckets): Likewise.
+	(gnubuckets): Likewise.
+	(gnuchains): Likewise.
+	(mipsxlat): Likewise.
+	(ngnuchains): Likewise.
+	(gnusymidx): Likewise.
+	(VALID_SYMBOL_NAME): Likewise.
+	(VALID_DYNAMIC_NAME): Use it.
+	(get_dynamic_data): Moved before process_dynamic_section.
+	(get_num_dynamic_syms): New function.
+	(process_dynamic_section): Use DT_SYMTAB, DT_SYMENT, DT_HASH,
+	DT_GNU_HASH and DT_MIPS_XHASH to reconstruct dynamic symbol
+	table.  Use DT_STRTAB and DT_STRSZ to reconstruct dynamic string
+	table.
+	(get_symbol_index_type): Don't print "bad section index" when
+	there is no section header.
+	(print_dynamic_symbol): Rewrite.
+	(process_symbol_table): Call print_dynamic_symbol to dump dynamic
+	symbol table.
+
+2020-04-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* testsuite/lib/binutils-common.exp (supports_gnu_osabi): Don't
+	enable on *-*-solaris*.
+
+2020-03-30  Nick Clifton  <nickc@redhat.com>
+
+	PR binutils/25662
+	* objcopy.c (copy_object): When copying PE format files set the
+	timestamp field in the pe_data structure if the preserve_dates
+	flag is set.
+	* testsuite/binutils-all/objcopy.exp (objcopy_test) Use
+	--preserve-dates in place of the -p option, in order to make its
+	effect more obvious.
+
+2020-03-28  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/objcopy.exp (objcopy_test): Only
+	clear_xfail hppa*-*-*elf*.  Revert mips xfails.
+
+2020-03-28  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/binutils-all/objcopy.exp (objcopy_test): Move xfails
+	from here to calls.  Remove "m8*-*-*" entry.  Don't xfail tic54x
+	but do xfail spu, mipstx39 and mips-sgi-irix for the executable
+	test.  Pass "-p" to objcopy for the executable test.
+
+2020-03-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	PR binutils/25662
+	* testsuite/binutils-all/objcopy.exp (objcopy_test): Add argument to
+	specify whether an object file or executable should be built and tested.
+	Change test names to report whether an object file or executable is
+	being tested.
+	* testsuite/binutils-all/pr25662.ld: New test.
+	* testsuite/binutils-all/pr25662.s: New test.
+
+2020-03-27  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_archive): Don't double free qualified_name.
+	Don't break out of loop with "negative" archive_file_size, just
+	set file offset to max.
+
+2020-03-25  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_archive): Prevent endless loop.
+
+2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25708
+	* nm.c (print_symname): Replace _bfd_elf_get_symbol_version_name
+	with bfd_get_symbol_version_string.
+	(print_symbo): Pass TRUE to bfd_get_symbol_version_string.
+	* objdump.c (objdump_print_symname): Likewise.
+
+2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25708
+	* nm.c (SYM_NAME): Removed.
+	(print_symname): Add a pointer to struct extended_symbol_info
+	argument.  Call _bfd_elf_get_symbol_version_name to get symbol
+	version.
+	(print_symdef_entry): Pass NULL to print_symname.
+	(print_symbol_info_bsd): Update call to print_symname.
+	(print_symbol_info_sysv): Likewise.
+	(print_symbol_info_posix): Likewise.
+
+2020-03-24  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_mips_specific): Free iconf on error path.
+
+2020-03-23  Nick Clifton  <nickc@redhat.com>
+
+	PR 25714
+	* wrstabs.c (stab_pop_type): Replace assertion with error return.
+	* write_stabs_in_sections_debugging_info: Likewise.
+	* stab_enum_type: Likewise.
+	* stab_modify_type: Likewise.
+	* stab_struct_field: Likewise.
+	* stab_end_struct_type: Likewise.
+	* stab_start_class_type: Likewise.
+	* stab_class_static_member: Likewise.
+	* stab_class_baseclass: Likewise.
+	* stab_class_start_method: Likewise.
+	* stab_class_method_var: Likewise.
+	* stab_class_end_method: Likewise.
+	* stab_end_class_type: Likewise.
+	* stab_typedef_type: Likewise.
+	* stab_start_function: Likewise.
+	* stab_end_block: Likewise.
+	* stab_lineno: Likewise.
+
+2020-03-20  Nick Clifton  <nickc@redhat.com>
+
+	* readelf.c (get_compression_header): Add ATTRIBUTE_WARN_UNUSED_RESULT.
+	(process_section_headers): Check the return value from
+	get_compression_header.
+	(dump_section_as_strings): Likewise.
+	(dump_section_as_bytes): Likewise.
+	(load_specific_debug_section): Likewise.
+
+2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* ar.c (main): Update bfd_plugin_set_program_name call.
+	* nm.c (main): Likewise.
+
+2020-03-19  Nick Clifton  <nickc@redhat.com>
+
+	PR 25676
+	* testsuite/binutils-all/dw4.s: New test source file.
+	* testsuite/binutils-all/nm.exp: Run the new test.
+
+2020-03-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* readelf.c (process_symbol_table): Use unsigned long for si.
+
+2020-03-19  Alan Modra  <amodra@gmail.com>
+
+	* elfcomm.c: Don't include bfd.h or bucomm.h.
+	(program_name): Declare.
+	(process_archive_index_and_symbols): Replace bfd_boolean with int,
+	and substitute FALSE and TRUE.
+	(setup_archive, setup_nested_archive): Likewise.
+	* elfcomm.h: Likewise.
+
+2020-03-19  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_archive): Always return via path freeing
+	memory.  Formatting.
+
+2020-03-19  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_netbsd_elf_note): Validate descsz before
+	accessing descdata.  Formatting.
+
+2020-03-19  Alan Modra  <amodra@gmail.com>
+
+	* elfcomm.c (setup_archive): Make file_size an off_t.  Comment.
+	* elfcomm.h (setup_archive): Update prototype.
+
+2020-03-16  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (get_symbols): New function.
+	(process_relocs, ia64_process_unwind, hppa_process_unwind),
+	(arm_process_unwind, get_symbol_for_build_attribute): Use it.
+
+2020-03-16  Alan Modra  <amodra@gmail.com>
+
+	* unwind-ia64.c (unw_decode_uleb128): Prevent overlarge shifts.
+	Detect shift overflows and check that terminating byte is found.
+	Print an error on a bad uleb128.
+
+2020-03-14  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_file): Clean ba_cache.
+
+2020-03-14  Alan Modra  <amodra@gmail.com>
+
+	* elfcomm.h (setup_archive): Update prototype.
+	* elfcomm.c (setup_archive): Add file_size parameter and sanity
+	check longnames_size.
+	(setup_nested_archive): Get file size and pass to setup_archive.
+	* elfedit.c (process_archive): Likewise.
+	* readelf.c (process_archive): Pass filedata->file_size to
+	setup_archive.
+
+2020-03-14  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (dump_section_as_strings): Free memory on error exit.
+	(dump_section_as_bytes, process_notes_at): Likewise.
+	(get_build_id): Free enote.
+
+2020-03-13  Kamil Rytarowski  <n54@gmx.com>
+
+	* readelf.c (get_netbsd_elfcore_note_type): Add support for
+	NT_NETBSDCORE_LWPSTATUS notes.
+
+2020-03-13  Alan Modra  <amodra@gmail.com>
+
+	* elfcomm.c (get_archive_member_name): Always return malloc'd
+	string or NULL.
+	* elfedit.c (process_archive): Tidy memory on all return paths.
+	* readelf.c (process_archive): Likewise.
+	(process_symbol_table): Likewise.
+	(ba_cache): New, replacing ..
+	(get_symbol_for_build_attribute): ..static vars here.  Free
+	strtab and symtab before loading new ones.  Reject symtab without
+	valid strtab in loop, breaking out of loop on valid symtab.
+	(process_file): Free ba_cache symtab and strtab here, resetting
+	ba_cache.
+
+2020-03-12  Alan Modra  <amodra@gmail.com>
+
+	* readelf.c (process_section_headers): Don't just set
+	filedata->section_headers NULL, free it first.  Similarly for
+	dynamic_symbols, dynamic_strings, dynamic_syminfo and
+	symtab_shndx_list.  Zero associated counts too.
+	(process_object): Free symtab_shndx_list.
+	(process_file): Free various allocated filedata tables.
+
+2020-03-11  Nick Clifton  <nickc@redhat.com>
+
+	PR 25611
+	PR 25614
+	* dwarf.h (DWARF2_Internal_LineInfo): Add li_address_size and
+	li_segment_size fields.
+	* dwarf.c (read_debug_line_header): Record the address size and
+	segment selector size values (if present) in the lineinfo
+	structure.
+	(display_formatted_table): Warn if the format count is empty but
+	the table itself is not empty.
+	Display the format count and entry count at the start of the table
+	dump.
+	(display_debug_lines_raw): Display the address size and segement
+	selector size fields, if present.
+	* testsuite/binutils-all/dw5.W: Update expected output.
+
+2020-03-11  Alan Modra  <amodra@gmail.com>
+
+	PR 25651
+	* objcopy.c (copy_object): Test "gaps" not gap_fill_set or
+	pad_to_set on second block of code dealing with padding.
+	Replace "c" with "num_sec" and don't recalculate number of
+	sections on second block.  Size arrays using sizeof (element)
+	rather than sizeof (element type).
+
+2020-03-10  Alan Modra  <amodra@gmail.com>
+
+	* objdump.c (disassemble_section): Don't call qsort unless
+	sym count is at least two.
+	(disassemble_data): Don't call memcpy with NULL src.
+
+2020-03-09  Alan Modra  <amodra@gmail.com>
+
+	PR 25645
+	* readelf.c (dump_ia64_vms_dynamic_fixups): Pass size and nmemb
+	to get_data rather than multiplying.
+	(dump_ia64_vms_dynamic_relocs): Likewise.
+	(process_version_sections): Correct order of size and nmemb args
+	in get_data call.
+	(process_mips_specific): Likewise.
+
+2020-03-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* readelf.c (get_dynamic_data): Replace "memory chekers" with
+	"memory checkers" in comments.
+
+2020-03-06  Simon Marchi  <simon.marchi@efficios.com>
+
+	PR 25491
+	* doc/Makefile.am: Rename MOSTLYCLEANFILES to MAINTAINERCLEANFILES.
+	* doc/Makefile.in: Re-generate.
+
+2020-03-06  Nick Clifton  <nickc@redhat.com>
+
+	* objcopy.c (check_new_section_flags): New function.  Reject the
+	SEC_COFF_SHARED flag if the target is not a COFF binary.
+	(copy_object): Call check_new_section_flags.
+	(setup_section): Likewise.
+	* doc/binutils.texi (objcopy): Add a note that the 'share' section
+	flag cannot be applied to ELF binaries.
+
+2020-03-06  Alan Modra  <amodra@gmail.com>
+
+	PR 25637
+	* objcopy.c (filter_symbols): Correct rem_leading_char logic.
+
+2020-03-05  Alan Modra  <amodra@gmail.com>
+
+	PR 25629
+	* objcopy.c (filter_symbols): Don't segfault on NULL
+	prefix_symbols_string.
+
+2020-03-04  Christian Eggers  <ceggers@gmx.de>
+
+	* objcopy.c (copy_object): Convert from bytes to octets for
+	--gap-fill and --pad-to.
+
+2020-03-03  Nick Clifton  <nickc@redhat.com>
+
+	PR 25625
+	* prdbg.c (pr_tag_type): Remove call to abort.
+
+2020-03-02  Aaron Merey  <amerey@redhat.com>
+
+	* binutils/testsuite/binutils-all/debuginfod.exp: Improve port
+	selection.
+
+2020-03-02  Nick Clifton  <nickc@redhat.com>
+
+	PR 25543
+	* readelf.c (dump_section_as_strings): Display new-line characters
+	as \n and then insert a line break.
+	* testsuite/binutils-all/pr25543.s: New test.
+	* testsuite/binutils-all/pr25543.d: Test driver.
+	* testsuite/binutils-all/readelf.exp: Run the new test.
+
+2020-02-27  Nick Clifton  <nickc@redhat.com>
+
+	PR 25526
+	* readelf.c (process_ia64_vms_dynamic_relocs): Check to see if
+	get_data is unable to load the string table.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* elfedit.c: Indent labels correctly.
+	* readelf.c: Likewise.
+	* resres.c: Likewise.
+
+2020-02-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25584
+	* ar.c (main): Pass 0 to bfd_plugin_set_program_name.
+	* nm.c (main): Pass 1 to bfd_plugin_set_program_name.
+
+2020-02-24  Nick Clifton  <nickc@redhat.com>
+
+	PR 25499
+	* doc/binutils.texi (objdump): Fix typo in description of
+	objdump's -g option.
+
+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* dwarf.c (regname_internal_riscv): Updated since the DECLARE_CSR
+	is changed.
+
+2020-02-19  Jordan Rupprecht  <rupprecht@google.com>
+
+	* objdump.c (show_line): call bfd_demangle when using do_demangle.
+
+2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* configure: Regenerate.
+
+2020-02-10  Fangrui Song   <maskray@google.com>
+
+	* objcopy.c (parse_flags): Handle "exclude".
+	* doc/binutils.texi: Document the support.
+
+2020-02-10  Aaron Merey  <amerey@redhat.com>
+
+	* binutils/testsuite/binutils-all/debuginfod.exp:
+	Replace set ::env with setenv.
+	Start server before setting environment variable.
+	Specify tmpdir as the location of the server's
+	database.
+	Check additional server metrics at start-up.
+
+2020-02-07  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Add note about updating the
+	GAS/NEWS URL in the next release.
+
+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25469
+	* readelf.c (get_machine_flags): Add support for Z80N machine
+	number.
+
+2020-02-07  Nick Clifton  <nickc@redhat.com>
+
+	* dwarf.c (display_debug_lines_decoded): Force a NUL termination
+	of the truncated file name.
+
+2020-02-06  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* objdump.c (print_jump_visualisation): New function.
+	(disassemble_bytes): Call new function.
+
+2020-02-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (match_target): Accept '!' before
+	TCL procedure.
+	(supports_gnu_osabi): New procedure.
+	(is_generic): New, from ld-lib.exp.
+	(supports_gnu_unique): Use the above.
+
+2020-02-04  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (CFILES): Add od-elf32_avr.c.
+	* Makefile.in: Regenerate.
+	* po/POTFILES.in: Regenerate.
+
+2020-02-03  Andreas Schwab  <schwab@linux-m68k.org>
+
+	* readelf.c (dump_relocations, dump_relocations)
+	(decode_arm_unwind_bytecode, process_dynamic_section)
+	(get_symbol_visibility, get_alpha_symbol_other): Add newline to
+	error message.
+
+2020-02-03  Sergei Trofimovich  <siarheit@google.com>
+
+	* coffdump.c (program_name): Drop redundant definition.
+	* srconv.c (program_name): Likewise
+	* sysdump.c (program_name): Likewise
+
+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25380
+	* objdump.c (sym_ok): Return FALSE if 2 sections are in the
+	same file with different section pointers.
+
+2020-02-01  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Update with more details on the
+	release making process.
+
+2020-01-31  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2020-01-28  Nick Clifton  <nickc@redhat.com>
+
+	* readelf.c (get_build_id): Simplify warning message about corrupt
+	notes encountered whilst scanning for the build-id.
+
+2020-01-27  Roland McGrath  <mcgrathr@google.com>
+
+	* objcopy.c (compare_gnu_build_notes): Fix comparison results
+	for overlapping ranges so that (A == B) == (B == A) holds.
+
+2020-01-27  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/binutils-common.exp (big_or_little_endian): Replace
+	case statement with switch statement.
+
+2020-01-24  Nick Clifton  <nickc@redhat.com>
+
+	* readelf.c (get_build_id): Fix warning messages about corrupt
+	notes.
+
+2020-01-23  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2020-01-22  Yuri Chornoivan  <yurchor@mageia.org>
+
+	PR 25417
+	* readelf.c (get_alpha_symbol_other): Fix error message typo.
+
+2020-01-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/pt.po: Updated Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	* README-how-to-make-a-release: Update notes on how to cut a
+	branch for a release.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/binutils.pot: Regenerate.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-17  Thomas Troeger  <tstroege@gmx.de>
+
+	* objdump.c (jump_info_visualize_address): Discard jumps that are
+	no longer needed.
+	(disassemble_bytes): Only compute the maximum level if jumps were
+	detected.
+
+2020-01-13  Nick Clifton  <nickc@redhat.com>
+
+	* objdump.c (disassemble_bytes): Remove C99-ism.
+	* testsuite/binutils-all/debuginfod.exp: New tests.
+
+2020-01-13  Thomas Troeger  <tstroege@gmx.de>
+
+	* objdump.c (visualize_jumps, color_output, extended_color_output)
+	(detected_jumps): New variables.
+	(usage): Add the new jump visualization options.
+	(option_values): Add new option value.
+	(long_options): Add the new option.
+	(jump_info_new, jump_info_free): New functions.
+	(jump_info_min_address, jump_info_max_address): Likewise.
+	(jump_info_end_address, jump_info_is_start_address): Likewise.
+	(jump_info_is_end_address, jump_info_size): Likewise.
+	(jump_info_unlink, jump_info_insert): Likewise.
+	(jump_info_add_front, jump_info_move_linked): Likewise.
+	(jump_info_intersect, jump_info_merge): Likewise.
+	(jump_info_sort, jump_info_visualize_address): Likewise.
+	(disassemble_jumps): New function - used to locate jumps.
+	(disassemble_bytes): Add ascii art generation.
+	(disassemble_section): Add scan to locate jumps.
+	(main): Parse the new visualization option.
+	* doc/binutils.texi: Document the new feature.
+	* NEWS: Mention the new feature.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	PR 25360
+	PR 25361
+	* dwarf.c (display_debug_frames): Move fde_fc earlier.  Free
+	fde_fc col_type and col_offset.
+	* readelf.c (apply_relocations): Move symsec check earlier.
+	(free_debug_section): Free reloc_info.
+	(process_notes_at): Free pnotes on error path.
+	(process_object): Free dump_sects here..
+	(process_archive): ..not here.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	PR 25362
+	* nm.c (display_rel_file): Free dyn_syms.
+
+2020-01-09  Nick Clifton  <nickc@redhat.com>
+
+	PR 25220
+	* objcopy.c (empty_name): New variable.
+	(need_sym_before): Prevent an attempt to free a static variable.
+	(filter_symbols): Avoid strcmp test by checking for pointer
+	equality.
+
+2020-01-09  Nick Clifton  <nickc@redhat.com>
+
+	* po/zh_TW.po: Updated Traditional Chinese translation.
+
+2020-01-09  Aaron Merey  <amerey@redhat.com>
+
+        * Makefile.am (readelf_LDADD, objdump_LDADD): Add libdebuginfod.
+        * Makefile.in: Regenerate.
+        * NEWS: Update.
+        * config.in: Regenerate.
+        * configure: Regenerate.
+        * configure.ac: Call AC_DEBUGINFOD.
+        * doc/Makefile.in: Regenerate.
+        * doc/binutils.texi: Add section on using binutils
+        with debuginfod.
+        * dwarf.c (debuginfod_fetch_separate_debug_info): New function.
+        Query debuginfod servers for the target debug file.
+        (load_separate_debug_info): Call
+        debuginfod_fetch_separate_debug_info if configured with
+        debuginfod.
+        (load_separate_debug_files): Add file argument to
+        load_separate_debug_info calls.
+        * dwarf.h (get_build_id): Add declaration.
+        * objdump.c (get_build_id): New function. Get build-id of file.
+        * readelf.c (get_build_id): Likewise.
+        * testsuite/binutils-all/debuginfod.exp: New tests.
+        * testsuite/binutils-all/linkdebug.s: Add .note.gnu.build-id
+        section.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* readelf.c: Add support for new Z*) relocations and machine
+	types.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/binutils/ChangeLog-2011 b/binutils/ChangeLog-2011
index c92d0d36ea8..f73fd1ecefe 100644
--- a/binutils/ChangeLog-2011
+++ b/binutils/ChangeLog-2011
@@ -455,7 +455,7 @@
 	in the file.
 	(arm_process_unwind): Likewise.
 	(ia64_process_unwind): Likewise.
-	Set the size of the unwind auxillary information to 0 if the data
+	Set the size of the unwind auxiliary information to 0 if the data
 	could not be read.
 	(load_specific_debug_section): Handle a failure to read in the
 	section.
diff --git a/elfcpp/ChangeLog-2020 b/elfcpp/ChangeLog-2020
new file mode 100644
index 00000000000..0ae886e1780
--- /dev/null
+++ b/elfcpp/ChangeLog-2020
@@ -0,0 +1,96 @@
+2020-12-15  Cary Coutant  <ccoutant@gmail.com>
+
+	* elfcpp.h (class Ehdr): Add get_ei_osabi and get_ei_abiversion methods.
+
+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>
+
+	* elfcpp.h (enum DT): New enum member DT_GNU_FLAGS_1.
+	(enum DF_GNU_1): New enum DF_GNU_1 containing DF_GNU_1_UNIQUE.
+
+2020-12-14  H.J. Lu  <hjl.tools@gmail.com>
+	    Cary Coutant  <ccoutant@gmail.com>
+
+	PR gold/27039
+	* elfcpp.h (SHF): Add SHF_GNU_RETAIN.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* elfcpp.h (GNU_PROPERTY_X86_ISA_1_USED): Renamed to ...
+	(GNU_PROPERTY_X86_COMPAT_ISA_1_USED): This.
+	(GNU_PROPERTY_X86_ISA_1_NEEDED): Renamed to ...
+	(GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED): This.
+	(GNU_PROPERTY_X86_UINT32_AND_LO): New.
+	(GNU_PROPERTY_X86_UINT32_AND_HI): Likewise.
+	(GNU_PROPERTY_X86_UINT32_OR_LO): Likewise.
+	(GNU_PROPERTY_X86_UINT32_OR_HI): Likewise.
+	(GNU_PROPERTY_X86_UINT32_OR_AND_LO): Likewise.
+	(GNU_PROPERTY_X86_UINT32_OR_AND_HI): Likewise.
+	(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): New.
+	(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): Likewise.
+	(GNU_PROPERTY_X86_FEATURE_1_AND): Updated to
+	(GNU_PROPERTY_X86_UINT32_AND_LO + 0).
+	(GNU_PROPERTY_X86_ISA_1_NEEDED): New.  Defined to
+	GNU_PROPERTY_X86_UINT32_OR_LO + 2.
+	(GNU_PROPERTY_X86_FEATURE_2_NEEDED): New.  Defined to
+	(GNU_PROPERTY_X86_UINT32_OR_LO + 1).
+	(GNU_PROPERTY_X86_ISA_1_USED): New.  Defined to
+	GNU_PROPERTY_X86_UINT32_OR_AND_LO + 2.
+	(GNU_PROPERTY_X86_FEATURE_2_USED): New.  Defined to
+	(GNU_PROPERTY_X86_UINT32_OR_AND_LO + 1).
+
+2020-09-25  Alan Modra  <amodra@gmail.com>
+
+	* dwarf.h (DW_FIRST_UT, DW_UT, DW_END_UT): Define.
+
+2020-08-26  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+        * elfcpp.h (enum SHT): New enum SHT_CSKY_ATTRIBUTES.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* elfcpp_swap.h (bswap_16): Do not assume that presence of
+	<byteswap.h> means this is declared.  Make static inline, matching
+	recent change to libctf, since there is no non-inline definition
+	of these functions.
+	(bswap_32): Likewise.
+	(bswap_64): Likewise.
+
+2020-06-18  Fangrui Song  <i@maskray.me>
+
+	PR gold/26039
+	* elfcpp.h (enum DF_1): New enum member DF_1_PIE.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.h: Rename
+	R_PPC64_GOT_TLSGD34 to R_PPC64_GOT_TLSGD_PCREL34,
+	R_PPC64_GOT_TLSLD34 to R_PPC64_GOT_TLSLD_PCREL34,
+	R_PPC64_GOT_TPREL34 to R_PPC64_GOT_TPREL_PCREL34, and
+	R_PPC64_GOT_DTPREL34 to R_PPC64_GOT_DTPREL_PCREL34.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/gas/ChangeLog-2020 b/gas/ChangeLog-2020
new file mode 100644
index 00000000000..369cfeef8b2
--- /dev/null
+++ b/gas/ChangeLog-2020
@@ -0,0 +1,6119 @@
+2020-12-18  Alan Modra  <amodra@gmail.com>
+
+	* ecoff.c (ecoff_frob_symbol): Rename scom_section to
+	ecoff_scom_section, move to file scope and statically initialise.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c (obj_elf_section): Don't set elf_osabi here.
+	(obj_elf_type): Likewise.
+
+2020-12-15  Alan Modra  <amodra@gmail.com>
+
+	PR 27071
+	* config/obj-elf.c (elf_obj_symbol_clone_hook): New function.
+	(elf_format_ops): Set symbol_clone_hook.
+	* config/obj-elf.h (elf_obj_symbol_clone_hook): Declare.
+	(obj_symbol_clone_hook): Define.
+	* listing.c (buffer_line): Avoid integer overflow on paper_width
+	set to zero.
+
+2020-12-14  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/section27.s: Reorder .text, .data and .bss
+	so that output section order does not depend on those sections
+	being already created.  Use ".section .text" rather than ".text".
+
+2020-12-13  Borislav Petkov  <bp@suse.de>
+
+	* testsuite/gas/i386/align-branch-9.s: Don't use labels that are
+	automatically local for ELF targets.
+	* testsuite/gas/i386/branch.s: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-9.s: Likewise.
+	* testsuite/gas/i386/x86-64-branch.s: Likewise.
+	* testsuite/gas/i386/align-branch-9.d: Adjust to match more targets.
+	* testsuite/gas/i386/branch.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-branch.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-9.d: Likewise.
+	* testsuite/gas/i386/x86-64-branch.d: Likewise.
+
+2020-12-11  Sergey Belyashov  <sergey.belyashov@gmail.com>
+	    Nick Clifton  <nickc@redhat.com>
+
+	PR 27047
+	* config/tc-z80.c (s_bss): New function.
+	(md_pseudo_table): Add bss entry.
+
+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (riscv_ext): New function.  Use md_assemblef
+	to expand the zext and sext pseudos, to give them a chance to be
+	expanded into c-ext instructions.
+	(macro): Handle M_ZEXTH, M_ZEXTW, M_SEXTB and M_SEXTH.
+	* testsuite/gas/riscv/ext.s: New testcase.
+	* testsuite/gas/riscv/ext-32.d: Likewise.
+	* testsuite/gas/riscv/ext-64.d: Likewise.
+
+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (riscv_multi_subset_supports): Handle INSN_CLASS_ZICSR
+	and INSN_CLASS_ZIFENCEI.
+	* testsuite/gas/riscv/march-imply-i.s: New testcase.
+	* testsuite/gas/riscv/march-imply-i2p0-01.d: New testcase.  The version
+	of i is less than 2.1, and zi* are supported in the chosen spec, so
+	enable the fence.i and csr instructions, also output the implicit zi* to
+	the arch string.
+	* testsuite/gas/riscv/march-imply-i2p0-02.d: Likewise, but the zi* are
+	not supported in the spec 2.2.  Enable the related instructions since
+	i's version is less than 2.1, but do not output them.
+	* testsuite/gas/riscv/march-imply-i2p1-01.d: New testcase.  The version
+	of i is 2.1, so don't add it's implicit zi*, and disable the related
+	instructions.
+	* testsuite/gas/riscv/march-imply-i2p1-01.l: Likewise.
+	* testsuite/gas/riscv/march-imply-i2p1-02.d: Likewise, and set the zi*
+	explicitly, so enable the related instructions.
+	* testsuite/gas/riscv/march-imply-i2p0.d: Removed.
+	* testsuite/gas/riscv/march-imply-i2p1.d: Removed.
+
+2020-12-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/obj-elf.c (SEC_ASSEMBLER_SHF_MASK): New.
+	(get_section_by_match): Also check if SEC_ASSEMBLER_SHF_MASK of
+	sh_flags matches.  Rename info to sh_info.
+	(obj_elf_change_section): Don't check previous SHF_GNU_RETAIN.
+	Rename info to sh_info.
+	(obj_elf_section): Rename info to sh_info.  Set sh_flags for
+	SHF_GNU_RETAIN.
+	* config/obj-elf.h (elf_section_match): Rename info to sh_info.
+	Add sh_flags.
+	* testsuite/gas/elf/elf.exp: Run section27.
+	* testsuite/gas/elf/section24b.d: Updated.
+	* testsuite/gas/elf/section27.d: New file.
+	* testsuite/gas/elf/section27.s: Likewise.
+
+2020-12-04  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* testsuite/gas/s390/zarch-z10.s: Add tests for risbgz.
+	* testsuite/gas/s390/zarch-z10.d: Add regexp for risbgz.
+	* testsuite/gas/s390/zarch-zEC12.s: Add tests for risbgnz.
+	* testsuite/gas/s390/zarch-zEC12.d: Add regexp for risbgnz.
+
+2020-12-03  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* testsuite/gas/s390/esa-g5.s: Test new extended mnemonics.
+	* testsuite/gas/s390/esa-g5.d: Likewise.
+	* testsuite/gas/s390/esa-z900.s: Likewise.
+	* testsuite/gas/s390/esa-z900.d: Likewise.
+	* testsuite/gas/s390/zarch-z900.s: Likewise.
+	* testsuite/gas/s390/zarch-z900.d: Likewise.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/gas/riscv/attribute-10.d: Updated.
+	* testsuite/gas/riscv/march-imply-g.d: New testcase for g.
+	* testsuite/gas/riscv/march-imply-unsupported.d: The zicsr and zifencei
+	are not supported in the ISA spec v2.2, so don't add and output them.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (riscv_subset_supports): Updated.
+	* testsuite/gas/riscv/march-imply-i2p0.d: New testcase.  Need to
+	add the implicit zicsr and zifencei when i's version less than 2.1.
+	* testsuite/gas/riscv/march-imply-i2p1.d: New testcase.
+	* testsuite/gas/riscv/march-imply-d.d: Likewise.
+	* testsuite/gas/riscv/march-imply-f.d: Likewise.
+	* testsuite/gas/riscv/march-imply-q.d: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32iq.l: Updated.
+	* testsuite/gas/riscv/march-fail-rv32id.d: Removed.
+	* testsuite/gas/riscv/march-fail-rv32id.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv64iq.d: Likewise.
+	* testsuite/gas/riscv/march-fail-rv64iq.l: Likewise.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (riscv_get_default_ext_version):
+	Change the version type from unsigned to int.
+	(riscv_set_arch): Use as_bad rather than as_fatal to
+	report more errors.
+	* testsuite/gas/riscv/attribute-02.d: Updated since x must be
+	set with versions.
+	* testsuite/gas/riscv/attribute-03.d: Likewise.
+	* testsuite/gas/riscv/march-ok-two-nse.d: Likewise.
+	* testsuite/gas/riscv/attribute-09.d: zicsr wasn't supported
+	in the spec 2.2, so choose the newer spec.
+	* testsuite/gas/riscv/march-fail-base-01.l: Updated since as_bad.
+	* testsuite/gas/riscv/march-fail-base-02.l: Likewise.
+	* testsuite/gas/riscv/march-fail-order-std.l: Likewise.
+	* testsuite/gas/riscv/march-fail-order-x.l: Likewise.
+	* testsuite/gas/riscv/march-fail-order-z.l: Likewise.
+	* testsuite/gas/riscv/march-fail-porder.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32ef.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32id.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32iq.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv64iq.l: Likewise.
+	* testsuite/gas/riscv/march-fail-single-char.l: Likewise.
+	* testsuite/gas/riscv/march-fail-unknown-std.l: Likewise.
+	* testsuite/gas/riscv/march-fail-unknown.l: Likewise.
+	* testsuite/gas/riscv/march-fail-uppercase.l: Likewise.
+	* testsuite/gas/riscv/march-fail-version.l: Likewise.
+	* testsuite/gas/riscv/march-fail-isa-spec.d: Likewise.
+	* testsuite/gas/riscv/march-fail-isa-spec.l: Likewise.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/gas/riscv/march-fail-order-z.d: New testcase, check
+	orders of prefixed z extensions.
+	* testsuite/gas/riscv/march-fail-order-z.l: Likewise.
+	* testsuite/gas/riscv/march-fail-single-char-h.d: New testcase.
+	* testsuite/gas/riscv/march-fail-single-char.l: Updated.
+	* testsuite/gas/riscv/march-fail-unknown-h.d: New testcase.
+	* testsuite/gas/riscv/march-fail-unknown.l: Updated.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/gas/riscv/march-fail-uppercase-base.d: Updated.
+	* testsuite/gas/riscv/march-fail-uppercase.l: Updated.
+	* testsuite/gas/riscv/march-fail-uppercase-x.d: New testcase.
+
+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>
+
+	(These are new testcases that cover more cases)
+	* testsuite/gas/riscv/march-fail-base-01.d: The first extension must
+	be e, i or g.
+	* testsuite/gas/riscv/march-fail-base-01.l: Likewise.
+	* testsuite/gas/riscv/march-fail-base-02.d: rv64e is an invalid base ISA.
+	* testsuite/gas/riscv/march-fail-base-02.l: Likewise.
+	* testsuite/gas/riscv/march-fail-order-std.d: Check orders of standard
+	extensions.
+	* testsuite/gas/riscv/march-fail-order-std.l: Likewise.
+	* testsuite/gas/riscv/march-fail-order-x.d: Check orders of prefixed
+	x extensions.
+	* testsuite/gas/riscv/march-fail-order-x.l: Likewise.
+	* testsuite/gas/riscv/march-fail-porder-x-std.d: Check orders when
+	standard and prefixed extensions are set at the same time.
+	* testsuite/gas/riscv/march-fail-porder-x-z.d: Likewise.
+	* testsuite/gas/riscv/march-fail-porder-z-std.d: Likewise.
+	* testsuite/gas/riscv/march-fail-porder.l: Likewise.
+	* testsuite/gas/riscv/march-fail-single-char-s.d: Only standard
+	extensions can use single char.
+	* testsuite/gas/riscv/march-fail-single-char-x.d: Likewise.
+	* testsuite/gas/riscv/march-fail-single-char-z.d: Likewise.
+	* testsuite/gas/riscv/march-fail-single-char.l: Likewise.
+	* testsuite/gas/riscv/march-fail-unknown-s.d: All extensions
+	should be known, except the non-standard x extensions.
+	* testsuite/gas/riscv/march-fail-unknown-std.d: Likewise.
+	* testsuite/gas/riscv/march-fail-unknown-std.l: Likewise.
+	* testsuite/gas/riscv/march-fail-unknown-z.d: Likewise.
+	* testsuite/gas/riscv/march-fail-unknown.l: Likewise.
+	* testsuite/gas/riscv/march-fail-uppercase-base.d: Do not
+	allow any uppercase in the arch string.
+	* testsuite/gas/riscv/march-fail-uppercase-std.d: Likewise.
+	* testsuite/gas/riscv/march-fail-uppercase-z.d: Likewise.
+	* testsuite/gas/riscv/march-fail-uppercase.l: Likewise.
+	* testsuite/gas/riscv/march-fail-version-x.d: Failed to set versions.
+	* testsuite/gas/riscv/march-fail-version-z.d: Likewise.
+	* testsuite/gas/riscv/march-fail-version.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32ef.l: Updated.
+	* testsuite/gas/riscv/march-fail-rv32id.d: Need f-ext.
+	* testsuite/gas/riscv/march-fail-rv32iq.d: Should be rv64.
+	* testsuite/gas/riscv/march-fail-rv32iq.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv64iq.d: Need d-ext and f-ext.
+	* testsuite/gas/riscv/march-fail-rv64iq.l: Likewise.
+
+	(The following testcases are removed and covered by new testcases)
+	* testsuite/gas/riscv/march-fail-rv32i.d: march-fail-uppercase-base.
+	* testsuite/gas/riscv/march-fail-rv32i.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32iam.d: march-fail-order-std.
+	* testsuite/gas/riscv/march-fail-rv32iam.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32ic.d: march-fail-uppercase-std.
+	* testsuite/gas/riscv/march-fail-rv32ic.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32icx2p.d: march-fail-version-x.
+	* testsuite/gas/riscv/march-fail-rv32icx2p.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv32imc.d: march-fail-order-std.
+	* testsuite/gas/riscv/march-fail-rv32imc.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv64I.d: march-fail-uppercase-std.
+	* testsuite/gas/riscv/march-fail-rv64I.l: Likewise.
+	* testsuite/gas/riscv/march-fail-rv64e.d: march-fail-base-02.
+	* testsuite/gas/riscv/march-fail-rv64e.l: Likewise.
+	* testsuite/gas/riscv/march-fail-s-with-version.d: march-fail-unknown-s.
+	* testsuite/gas/riscv/march-fail-s-with-version.l: Likewise.
+	* testsuite/gas/riscv/march-fail-s.d: march-fail-unknown-s.
+	* testsuite/gas/riscv/march-fail-s.l: Likewise.
+	* testsuite/gas/riscv/march-fail-sx.d: march-fail-unknown-s.
+	* testsuite/gas/riscv/march-fail-sx.l: Likewise.
+
+2002-11-29  Borislav Petkov  <bp@suse.de>
+
+	* testsuite/gas/i386/branch.d: Add new branch insns test.
+	* testsuite/gas/i386/branch.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Insert the new branch test.
+	* testsuite/gas/i386/x86-64-branch.d: Test for branch hints insns.
+	* testsuite/gas/i386/x86-64-branch.s: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-branch.d: Likewise.
+
+2020-11-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* testsuite/gas/elf/elf.exp: Run new tests.
+	* testsuite/gas/elf/section25.d: New test.
+	* testsuite/gas/elf/section25.s: New test.
+	* testsuite/gas/elf/section26.d: New test.
+	* testsuite/gas/elf/section26.s: New test.
+
+2020-11-25  Alan Modra  <amodra@gmail.com>
+
+	* output-file.c (output_file_close): Remove "can't close" from
+	error message.
+	* testsuite/gas/mips/reginfo-2.l: Update expected output.
+
+2020-11-04  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-aarch64.c (aarch64_cpus): Add Cortex-A78C.
+	* doc/c-aarch64.texi: Document -mcpu=cortex-a78c.
+	* doc/NEWS: Update news.
+
+2020-11-19  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* testsuite/gas/elf/section22.d: Allow FreeBSD OSABI in readelf
+	output.
+	* testsuite/gas/elf/section23a.d: Likewise.
+	* testsuite/gas/elf/section24a.d: Likewise.
+
+2020-11-18  Alan Modra  <amodra@gmail.com>
+
+	* doc/as.texi (.nop): Document optional size arg.
+	* dwarf2dbg.c (dwarf2_gen_line_info_1): Only check SEC_ALLOC
+	when ELF.  Warn whenever dwarf line number information is ignored.
+	* frags.c (frag_offset_ignore_align_p): New function.
+	* frags.h (frag_offset_ignore_align_p): Declare.
+	* read.c (s_nop): Extend to support optional size arg.
+	* testsuite/gas/elf/dwarf2-20.d: Expect warnings, and exact range.
+	* testsuite/gas/elf/dwarf2-20.s: Emit 16 bytes worth of nops.
+	* testsuite/gas/m68hc11/indexed12.d: Expect warnings.
+
+2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+	H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Announce SHF_GNU_RETAIN support.
+	* config/obj-elf.c (obj_elf_change_section): Merge SHF_GNU_RETAIN bit
+	between section declarations.
+	(obj_elf_parse_section_letters): Handle 'R' flag.
+	Handle numeric flag values within the SHF_MASKOS range.
+	(obj_elf_section): Validate SHF_GNU_RETAIN usage.
+	* doc/as.texi: Document 'R' flag to .section directive.
+	* testsuite/gas/elf/elf.exp: Run new tests.
+	* testsuite/gas/elf/section10.d: Unset SHF_GNU_RETAIN bit.
+	* testsuite/gas/elf/section10.s: Likewise.
+	* testsuite/gas/elf/section22.d: New test.
+	* testsuite/gas/elf/section22.s: New test.
+	* testsuite/gas/elf/section23.s: New test.
+	* testsuite/gas/elf/section23a.d: New test.
+	* testsuite/gas/elf/section23b.d: New test.
+	* testsuite/gas/elf/section23b.err: New test.
+	* testsuite/gas/elf/section24.s: New test.
+	* testsuite/gas/elf/section24a.d: New test.
+	* testsuite/gas/elf/section24b.d: New test.
+
+2020-11-13  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Update news.
+	* config/tc-aarch64.c: Add option +pauth to -march.
+	* doc/c-aarch64.texi: Update docs.
+	* testsuite/gas/aarch64/pac-feat.d: New test.
+	* testsuite/gas/aarch64/pac-feat.s: New test.
+
+2020-11-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Update news.
+	* config/tc-aarch64.c: New feature flag +flagm.
+	* doc/c-aarch64.texi: Update docs.
+	* testsuite/gas/aarch64/flagm.d: New test.
+	* testsuite/gas/aarch64/flagm.s: New test.
+
+2020-11-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-arm.c (arm_cpus): Add Cortex-A78C.
+	* doc/c-arm.texi: Document -mcpu=cortex-a78c.
+	* testsuite/gas/arm/cpu-cortex-a78c.d: New test.
+
+2020-11-14  Borislav Petkov  <bp@suse.de>
+
+	* testsuite/gas/i386/x86-64-segovr.d: Adjust regexes.
+	* testsuite/gas/i386/x86-64-nops.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-1.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-1-g64.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-1-core2.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-1-k8.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-2.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-4.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-4-core2.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-4-k8.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-5-k8.d: Likewise.
+	* testsuite/gas/i386/x86-64-nops-7.d: Likewise.
+	* testsuite/gas/i386/x86-64-nop-1.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1a.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1b.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1c.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1d.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1g.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-2c.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-6.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-7.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-8.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-1-core2.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-1-k8.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-1.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-2.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-3.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-4-core2.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-4-k8.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-4.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-5-k8.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops-5.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-nops.d:: Likewise.
+
+2020-11-12  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* config/tc-msp430.c (OPTION_MOVE_DATA): Define.
+	(md_parse_option): Ignore OPTION_MOVE_DATA.
+	(md_longopts): Handle -md option.
+	* testsuite/gas/msp430/msp430.exp: Run new test.
+	* testsuite/gas/msp430/empty.s: New test.
+	* testsuite/gas/msp430/ignore-md.d: New test.
+
+2020-11-12  Nick Clifton  <nickc@redhat.com>
+
+	PR 26850
+	* dwarf2dbg.c (dwarf2_gen_line_info_1): Do not record lines in
+	sections that are not executable or not loadable.
+	(out_debug_line): Move warning message into dwarf2_gen_line_info_1.
+	* testsuite/gas/elf/dwarf2-20.s: New test.
+	* testsuite/gas/elf/dwarf2-20.d: New test driver.
+	* testsuite/gas/elf/elf.exp: Run the new test.
+	* testsuite/gas/elf/warn-2.s: Use the .nop directive.
+
+2020-11-11  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* testsuite/gas/aarch64/ls64.s: Update test.
+
+2020-11-09  Denys Zagorui  <dzagorui@cisco.com>
+
+	* config/obj-elf (obj_elf_init_stab_section): Improve
+	reproducibility for stabs debugging data format
+
+2020-11-09  Spencer E. Olson  <olsonse@umich.edu>
+
+	* testsuite/gas/pru/misc.s: Add tests for lmbd (left-most bit
+	detect).
+	* testsuite/gas/pru/misc.d: Update expected disassembly.
+
+2020-11-09  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-aarch64.c: Fix comment.
+	* testsuite/gas/aarch64/ls64.d: New test.
+	* testsuite/gas/aarch64/ls64.s: Test for ACCDATA_EL1 register.
+
+2020-11-09  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-aarch64.c (process_omitted_operand): Add AARCH64_OPND_Rt_LS64.
+	(parse_operands): Parse Rt range for AARCH64_OPND_Rt_LS64.
+	* testsuite/gas/aarch64/ls64-invalid.l: Update test.
+	* testsuite/gas/aarch64/ls64-invalid.s: Update test.
+	* testsuite/gas/aarch64/ls64.s: Update test.
+
+2020-11-09  Andreas Schwab  <schwab@linux-m68k.org>
+
+	* Makefile.am (development.exp): Fix regexp.
+	* Makefile.in: Regenerate.
+
+2020-11-09  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (explicit_mabi): New boolean to indicate if
+	the -mabi= option is explictly set.
+	(md_parse_option): Set explicit_mabi to TRUE if -mabi is set.
+	(riscv_set_abi_by_arch): New function.  If the -mabi option isn't
+	set, then we set the abi according to the architecture string.
+	Otherwise, check if there are conflicts between architecture
+	and abi setting.
+	(riscv_after_parse_args): Move the abi setting to md_assemble nad
+	riscv_elf_final_processing.
+	(md_assemble): Call the riscv_set_abi_by_arch when we set the
+	start_assemble to TRUE.
+	(riscv_elf_final_processing): Likewise, in case the file without
+	any instruction.
+	* testsuite/gas/riscv/mabi-attr-01.s: New testcase.
+	* testsuite/gas/riscv/mabi-attr-02.s: Likewise.
+	* testsuite/gas/riscv/mabi-attr-03.s: Likewise.
+	* testsuite/gas/riscv/mabi-fail-01.d: Likewise.
+	* testsuite/gas/riscv/mabi-fail-01.l: Likewise.
+	* testsuite/gas/riscv/mabi-fail-02.d: Likewise.
+	* testsuite/gas/riscv/mabi-fail-02.l: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-attr-01a.d: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-attr-01b.d: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-attr-02a.d: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-attr-02b.d: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-attr-03a.d: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-attr-03b.d: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-march-01.d: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-march-02.d: Likewise.
+	* testsuite/gas/riscv/mabi-noabi-march-03.d: Likewise.
+
+2020-11-04  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* testsuite/gas/aarch64/armv8-ras-1_1-invalid.d: New test.
+	* testsuite/gas/aarch64/armv8-ras-1_1-invalid.l: New test.
+	* testsuite/gas/aarch64/armv8-ras-1_1-invalid.s: New test.
+	* testsuite/gas/aarch64/armv8-ras-1_1.d: New test.
+	* testsuite/gas/aarch64/armv8-ras-1_1.s: New test.
+	* testsuite/gas/aarch64/illegal-ras-1.d: Remove.
+	* testsuite/gas/aarch64/illegal-ras-1.l: Remove.
+	* testsuite/gas/aarch64/illegal-ras-1.s: Remove.
+	* testsuite/gas/aarch64/illegal-sysreg-2.d: Remove.
+	* testsuite/gas/aarch64/illegal-sysreg-2.l: Remove.
+
+2020-11-03  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Update docs.
+	* config/tc-aarch64.c: Add +ls64 feature to -march flags set.
+	* testsuite/gas/aarch64/ls64-invalid.d: New test.
+	* testsuite/gas/aarch64/ls64-invalid.l: New test.
+	* testsuite/gas/aarch64/ls64-invalid.s: New test.
+	* testsuite/gas/aarch64/ls64.s: New test.
+
+2020-11-03  Christian Eggers  <ceggers@gmx.de>
+
+	* config/obj-elf (elf_frob_symbol): Fix symbol value calculation
+	for versioned symbol aliases.
+
+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* config/tc-i386.c (output_insn): Update for
+	GNU_PROPERTY_X86_ISA_1_BASELINE.
+	* testsuite/gas/i386/property-1.d: Updated.
+	* testsuite/gas/i386/property-2.d: Likewise.
+	* testsuite/gas/i386/property-3.d: Likewise.
+	* testsuite/gas/i386/property-4.d: Likewise.
+	* testsuite/gas/i386/property-5.d: Likewise.
+	* testsuite/gas/i386/property-6.d: Likewise.
+	* testsuite/gas/i386/property-11.d: Likewise.
+	* testsuite/gas/i386/property-12.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-1.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-4.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-6.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-11.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-12.d: Likewise.
+
+2020-10-30  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Update docs.
+	* testsuite/gas/aarch64/system-5.d: Update test with WFIT insn.
+	* testsuite/gas/aarch64/system-5.s: Update test with WFIT insn.
+
+2020-10-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-aarch64.c (parse_operands): Check for C0-C15 value of DSB
+	immediate string operand.
+	* testsuite/gas/aarch64/system-4.d: Update test.
+	* testsuite/gas/aarch64/system-4.s: Update test.
+
+2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Update docs.
+	* config/tc-aarch64.c (parse_csr_operand): New operand parser.
+	(parse_operands): Call to CSR operand parser.
+	* testsuite/gas/aarch64/csre_csr-invalid.d: New test.
+	* testsuite/gas/aarch64/csre_csr-invalid.l: New test.
+	* testsuite/gas/aarch64/csre_csr-invalid.s: New test.
+	* testsuite/gas/aarch64/csre_csr.d: New test.
+	* testsuite/gas/aarch64/csre_csr.s: New test.
+
+2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Update docs.
+	* testsuite/gas/aarch64/system-5.d: New test.
+	* testsuite/gas/aarch64/system-5.s: New test.
+
+2020-10-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26778
+	* * dwarf2dbg.c (num_of_auto_assigned): New.
+	(allocate_filenum): Increment num_of_auto_assigned.
+	(dwarf2_directive_filename): Clear the slots auto-assigned
+	before the first .file <NUMBER> directive was seen.
+	* testsuite/gas/i386/dwarf4-line-1.d: New file.
+	* testsuite/gas/i386/dwarf4-line-1.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run dwarf4-line-1.
+
+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (dump_literals): Fix the literal dump
+	of big vector constant.
+
+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* testsuite/gas/csky/enhance_dsp.s : Change plsl.u16 to plsl.16.
+	* testsuite/gas/csky/enhance_dsp.d : Change plsl.u16 to plsl.16.
+
+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (md_begin): Add version flag in eflag.
+
+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (get_operand_value): Add handler for
+	OPRND_TYPE_IMM5b_VSH and OPRND_TYPE_VREG_WITH_INDEX.
+	* testsuite/gas/csky/csky_vdsp.d : Fix the disassembling for
+	vector register.
+
+2020-10-26  Lili Cui  <lili.cui@intel.com>
+
+	* testsuite/gas/i386/avx-vnni.d: Change psuedo prefix from
+	{vex3} to {vex}
+	* testsuite/gas/i386/x86-64-avx-vnni.d: Likewise.
+
+2020-10-23  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Docs update.
+	* config/tc-aarch64.c (parse_operands): Add
+	AARCH64_OPND_BARRIER_DSB_NXS handler.
+	(md_begin): Add content of aarch64_barrier_dsb_nxs_options to
+	aarch64_barrier_opt_hsh hash.
+	* testsuite/gas/aarch64/system-4-invalid.d: New test.
+	* testsuite/gas/aarch64/system-4-invalid.l: New test.
+	* testsuite/gas/aarch64/system-4-invalid.s: New test.
+	* testsuite/gas/aarch64/system-4.d: New test.
+	* testsuite/gas/aarch64/system-4.s: New test.
+
+2020-10-21  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	PR target/26763
+	* config/tc-arm.c (parse_address_main): Add new MVE addressing mode
+	check.
+	* testsuite/gas/arm/mve-vldr-vstr-bad.d: New test.
+	* testsuite/gas/arm/mve-vldr-vstr-bad.l: Likewise.
+	* testsuite/gas/arm/mve-vldr-vstr-bad.s: Likewise.
+
+2020-10-20  Dr. David Alan Gilbert  <dgilbert@redhat.com>
+
+	* config/tc-arc.c (emit_insn0): Fix printf format.
+
+2020-10-20  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>
+
+	* config/tc-i386.c (cpu_arch): Add CPU_ZNVER3_FLAGS flags.
+	(i386_align_code): Add PROCESSOR_ZNVER cases.
+	* doc/c-i386.texi: Add znver3, snp, invlpgb and tlbsync.
+	* gas/i386/i386.exp: Add new znver3 test cases.
+	* gas/i386/arch-14-znver3.d: New.
+	* gas/i386/arch-14.d: New.
+	* gas/i386/arch-14.s: New.
+	* gas/i386/invlpgb.d: New.
+	* gas/i386/invlpgb64.d: New.
+	* gas/i386/invlpgb.s: New.
+	* gas/i386/snp.d: New.
+	* gas/i386/snp64.d: New.
+	* gas/i386/snp.s: New.
+	* gas/i386/tlbsync.d: New.
+	* gas/i386/tlbsync.s: New.
+	* gas/i386/x86-64-arch-4-znver3.d: New.
+	* gas/i386/x86-64-arch-4.d: New.
+	* gas/i386/x86-64-arch-4.s: New.
+
+2020-10-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25878
+	PR gas/26740
+	* testsuite/gas/i386/dwarf5-line-4.d: New file.
+	* testsuite/gas/i386/dwarf5-line-4.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run dwarf5-line-4.
+
+2020-10-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25878
+	PR gas/26740
+	* testsuite/gas/i386/dwarf5-line-3.s: Replace dwarf5-line-2.S
+	with dwarf5-line-3.S.
+	* testsuite/gas/i386/dwarf5-line-3.d: Updated.
+
+2020-10-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25878
+	PR gas/26740
+	* dwarf2dbg.c (allocate_filename_to_slot): Don't reuse the slot 1
+	here.
+	(dwarf2_where): Restore as_where.
+	(dwarf2_directive_filename): Clear the slot 1 if it was assigned
+	to the input file.
+	* testsuite/gas/i386/dwarf5-line-2.d: New file.
+	* testsuite/gas/i386/dwarf5-line-2.s: Likewise.
+	* testsuite/gas/i386/dwarf5-line-3.d: Likewise.
+	* testsuite/gas/i386/dwarf5-line-3.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run dwarf5-line-2 and
+	dwarf5-line-3.
+
+gas/ChangeLog:
+
+2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Docs update.
+	* config/tc-aarch64.c (armv8.7-a): New arch.
+	* doc/c-aarch64.texi (-march=armv8.7-a): Update docs.
+
+2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* testsuite/gas/aarch64/sysreg-6.d: New test.
+	* testsuite/gas/aarch64/sysreg-6.s: New test.
+
+2020-10-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25878
+	PR gas/26740
+	* dwarf2dbg.c (file_entry): Remove auto_assigned.
+	(assign_file_to_slot): Remove the auto_assign argument.
+	(allocate_filenum): Updated.
+	(allocate_filename_to_slot): Reuse the input file entry in the
+	file table.
+	(dwarf2_where): Replace as_where with as_where_physical.
+	* testsuite/gas/i386/dwarf5-line-1.d: New file.
+	* testsuite/gas/i386/dwarf5-line-1.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run dwarf5-line-1.
+
+2020-10-16  Lili Cui  <lili.cui@intel.com>
+
+	* config/tc-i386.c (cpu_flags_match): Move Pseudo Prefix check
+	to ...
+	(match_template): Here.
+	* testsuite/gas/i386/avx-vnni-inval.l: New file.
+	* testsuite/gas/i386/avx-vnni-inval.s: Likewise.
+	* testsuite/gas/i386/avx-vnni.d: Delete invalid {vex2} test.
+	* testsuite/gas/i386/avx-vnni.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Add AVX VNNI invalid tests.
+	* testsuite/gas/i386/x86-64-avx-vnni-inval.l: New file.
+	* testsuite/gas/i386/x86-64-avx-vnni-inval.s: Likewise.
+	* testsuite/gas/i386/x86-64-avx-vnni.d: Delete invalid {vex2} test.
+	* testsuite/gas/i386/x86-64-avx-vnni.s: Likewise.
+
+2020-10-14  H.J. Lu  <hongjiu.lu@intel.com>
+	    Lili Cui  <lili.cui@intel.com>
+
+	* NEWS: Add Intel AVX VNNI.
+	* config/tc-i386.c (cpu_arch): Add .avx_vnni and noavx_vnni.
+	(cpu_flags_match): Support CpuVEX_PREFIX.
+	* doc/c-i386.texi: Document .avx_vnni, noavx_vnni and how to
+	encode Intel VNNI instructions with VEX prefix.
+	* testsuite/gas/i386/avx-vnni.d: New file.
+	* testsuite/gas/i386/avx-vnni.s: Likewise.
+	* testsuite/gas/i386/x86-64-avx-vnni.d: Likewise.
+	* testsuite/gas/i386/x86-64-avx-vnni.s: Likewise.
+	* testsuite/gas/i386/i386.exp: Run AVX VNNI tests.
+
+2020-10-14  Lili Cui  <lili.cui@intel.com>
+
+	* NEWS: Add Intel HRESET.
+	* config/tc-i386.c (cpu_arch): Add .hreset.
+	(cpu_noarch): Likewise.
+	* doc/c-i386.texi: Document .hreset, nohreset.
+	* testsuite/gas/i386/i386.exp: Run HRESET tests.
+	* testsuite/gas/i386/hreset.d: New file.
+	* testsuite/gas/i386/x86-64-hreset.d: Likewise.
+	* testsuite/gas/i386/hreset.s: Likewise.
+
+2020-10-14  Lili Cui  <lili.cui@intel.com>
+
+	* NEWS: Add Intel UINTR.
+	* config/tc-i386.c (cpu_arch): Add .uintr.
+	(cpu_noarch): Likewise.
+	* doc/c-i386.texi: Document .uintr and nouintr.
+	* testsuite/gas/i386/i386.exp: Run UINTR tests.
+	* testsuite/gas/i386/x86-64-uintr.d: Likewise.
+	* testsuite/gas/i386/x86-64-uintr.s: Likewise.
+
+2020-10-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (load_insn_p): Check opcodeprefix == 0 for
+	base_opcode == 0xfc7.
+	(match_template): Likewise.
+	(process_suffix): Check opcodeprefix == PREFIX_0XF2 for CRC32.
+	(check_byte_reg): Likewise.
+	(output_insn): Don't add the 0xf3 prefix twice for PadLock
+	instructions.  Don't add prefix from non-VEX/EVEX base_opcode.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (build_vex_prefix): Replace vexopcode with
+	opcodeprefix.
+	(build_evex_prefix): Likewise.
+	(is_any_vex_encoding): Don't check vexopcode.
+	(output_insn): Handle opcodeprefix.
+
+2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* config/tc-i386.c (xstate): Add xstate_mask.
+	(md_assemble): Check i.types[j], instead of i.tm.operand_types[j],
+	for xstate.  Set xstate_mask, instead of xstate_zmm, for RegMask.
+	(output_insn): Update for GNU_PROPERTY_X86_ISA_1_V[234].  Update
+	xstate for mask register and VSIB.
+	* testsuite/gas/i386/i386.exp: Run more GNU_PROPERTY tests.
+	* testsuite/gas/i386/property-1.s: Updated to the current
+	GNU_PROPERTY_X86_ISA_1_USED value.
+	* testsuite/gas/i386/property-2.s: Only keep cmove.
+	* testsuite/gas/i386/property-3.s: Changed to addsubpd.
+	* testsuite/gas/i386/property-1.d: Updated.
+	* testsuite/gas/i386/property-2.d: Likewise.
+	* testsuite/gas/i386/property-3.d: Likewise.
+	* testsuite/gas/i386/property-4.d: Likewise.
+	* testsuite/gas/i386/property-5.d: Likewise.
+	* testsuite/gas/i386/property-6.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-1.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-2.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-3.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-4.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-6.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-7.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-8.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-9.d: Likewise.
+	* testsuite/gas/i386/property-11.d: New file.
+	* testsuite/gas/i386/property-11.s: Likewise.
+	* testsuite/gas/i386/property-12.d: Likewise.
+	* testsuite/gas/i386/property-12.s: Likewise.
+	* testsuite/gas/i386/property-13.d: Likewise.
+	* testsuite/gas/i386/property-13.s: Likewise.
+	* testsuite/gas/i386/x86-64-property-11.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-12.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-13.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-14.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-14.s: Likewise.
+
+2020-10-08  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Docs update.
+	* testsuite/gas/aarch64/brbe-invalid.d: New test.
+	* testsuite/gas/aarch64/brbe-invalid.l: New test.
+	* testsuite/gas/aarch64/brbe-invalid.s: New test.
+	* testsuite/gas/aarch64/brbe.d: New test.
+	* testsuite/gas/aarch64/brbe.s: New test.
+
+2020-10-08  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: Docs update.
+	* testsuite/gas/aarch64/csre-invalid.d: New test.
+	* testsuite/gas/aarch64/csre-invalid.l: New test.
+	* testsuite/gas/aarch64/csre-invalid.s: New test.
+	* testsuite/gas/aarch64/csre.d: New test.
+	* testsuite/gas/aarch64/csre.s: New test.
+
+2020-10-06  Alex Coplan  <alex.coplan@arm.com>
+
+	PR 26699
+	* config/tc-aarch64.c (asm_barrier_opt): Delete.
+	(parse_barrier): Fix bogus type punning.
+	* testsuite/gas/aarch64/system.d: Update disassembly.
+	* testsuite/gas/aarch64/system.s: Add isb sy test.
+
+2020-10-06  Sergey Belyashav  <sergey.belyashov@gmail.com>
+
+	PR 26692
+	* config/tc-z80.c (md_begin): Ensure that xpressions are empty
+	before using them.
+	(unify_indexed): Likewise.
+	(z80_start_line_hook): Improve hash sign handling when SDCC
+	compatibility mode enabled.
+	(md_parse_exp_not_indexed): Improve indirect addressing
+	detection.
+	(md_pseudo_table): Accept hd64 as an alias of z810.
+
+2020-10-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/sh-link-zero.s: Don't start directives in
+	first column.  Don't use numeric labels.
+
+2020-10-05  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-arm.c: Update Cortex-X1 feature flags.
+
+2020-10-05  Kamil Rytarowski  <n54@gmx.com>
+
+	* configure.tgt (aarch64*-*-netbsd*): Add target.
+
+2020-10-05  Samanta Navarro  <ferivoz@riseup.net>
+
+	* doc/as.texi: Fix spelling mistakes.
+	* doc/c-wasm32.texi: Likewise.
+
+2020-10-05  T.K. Chia  <u1049321969@caramail.com>
+
+	PR gas/26694
+	* NEWS: Updated for i386 lcall and ljmp change.
+	* config/tc-i386.c (output_interseg_jump): Allow non-absolute
+	segment operand for immediate lcall and ljmp.
+	* testsuite/gas/i386/jump.d,
+	* testsuite/gas/i386/jump.s,
+	* testsuite/gas/i386/jump16.d,
+	* testsuite/gas/i386/jump16.e,
+	* testsuite/gas/i386/jump16.s: Add tests for non-absolute
+	segment operand for immediate ljmp.
+
+2020-10-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26704
+	* testsuite/gas/i386/noreg64-data16.d: Expect sysretl instead of
+	sysret.
+	* testsuite/gas/i386/noreg64.d: Likewise.
+	* testsuite/gas/i386/x86-64-intel64.d: Likewise.
+	* testsuite/gas/i386/x86-64-opcode.d: Likewise.
+
+2020-10-05  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26705
+	* testsuite/gas/i386/x86-64-suffix.s: Add "mov %rsp,%rbp" before
+	sysretq.
+	* testsuite/gas/i386/x86-64-suffix-intel.d: Updated.
+	* testsuite/gas/i386/x86-64-suffix.d: Likewise.
+
+2020-10-05  Nick Clifton  <nickc@redhat.com>
+
+	PR 26253
+	* config/obj-elf.c (obj_elf_section): Accept a numeric value for
+	the "o" section flag.  Interpret it as a section index.  Allow an
+	index of zero.
+	* doc/as.texi: Document the new behaviour.
+	* NEWS: Mention the new feature.  Tidy entries.
+	* testsuite/gas/elf/sh-link-zero.s: New test.
+	* testsuite/gas/elf/sh-link-zero.d: New test driver.
+	* testsuite/gas/elf/elf.exp: Run the new test.
+	* testsuite/gas/elf/section21.l: Updated expected assembler
+	output.
+
+2020-10-05  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-aarch64.c: Update Cortex-X1 feature flags.
+
+2020-10-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26685
+	* config/tc-i386.c (process_suffix): Also check the register
+	operand for the address size prefix if the memory operand has
+	no real registers.
+	* testsuite/gas/i386/enqcmd-16bit.d: New file.
+	* testsuite/gas/i386/enqcmd-16bit.s: Likewise.
+	* testsuite/gas/i386/movdir-16bit.d: Likewise.
+	* testsuite/gas/i386/movdir-16bit.s: Likewise.
+	* testsuite/gas/i386/enqcmd.s: Add tests with symbol and DISP.
+	* testsuite/gas/i386/x86-64-enqcmd.s: Likewise.
+	* testsuite/gas/i386/x86-64-movdir.s: Likewise.
+	* testsuite/gas/i386/movdir.s: Add tests with symbol and DISP.
+	Remove the .code16 test.
+	* testsuite/gas/i386/i386.exp: Run movdir-16bit and enqcmd-16bit.
+	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Updated.
+	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
+	* testsuite/gas/i386/x86-64-movdir-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-movdir.d: Likewise.
+	* testsuite/gas/i386/enqcmd-intel.d: Likewise.
+	* testsuite/gas/i386/enqcmd.d: Likewise.
+	* testsuite/gas/i386/movdir-intel.d: Likewise.
+	* testsuite/gas/i386/movdir.d: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
+	* testsuite/gas/i386/x86-64-movdir-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-movdir.d: Likewise.
+
+2020-10-02  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/gas/arm/mve-vcvtne-it.d: Allow for padding inserted by
+	PE based targets.
+
+2020-10-01  Nick Clifton  <nickc@redhat.com>
+
+	* config/obj-elf (elf_pseudo_table): Add attach_to_group.
+        (obj_elf_attach_to_group): New function.
+        * doc/as.texi: Document the new directive.
+	* NEWS: Mention the new feature.
+        * testsuite/gas/elf/attach-1.s: New test.
+        * testsuite/gas/elf/attach-1.d: New test driver.
+        * testsuite/gas/elf/attach-2.s: New test.
+        * testsuite/gas/elf/attach-2.d: New test driver.
+        * testsuite/gas/elf/attach-err.s: New test.
+        * testsuite/gas/elf/attach-err.d: New test driver.
+        * testsuite/gas/elf/attach-err.err: New test error output.
+        * testsuite/gas/elf/elf.exp: Run the new tests.
+
+2020-09-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26685
+	* config/tc-i386.c (process_suffix): Check the register operand
+	for the address size prefix if the memory operand is symbol(%rip).
+	* testsuite/gas/i386/x86-64-enqcmd.s: Add tests with RIP-relative
+	addressing.
+	* testsuite/gas/i386/x86-64-movdir.s: Likewise.
+	* testsuite/gas/i386/x86-64-enqcmd-intel.d: Updated.
+	* testsuite/gas/i386/x86-64-enqcmd.d: Likewise.
+	* testsuite/gas/i386/x86-64-movdir-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-movdir.d: Likewise.
+
+2020-09-30  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-aarch64.c: Add Cortex-A78 and Cortex-A78AE cores.
+	* doc/c-aarch64.texi: Update docs.
+	* NEWS: Update news.
+
+2020-09-30  Alex Coplan  <alex.coplan@arm.com>
+
+	* NEWS: Mention recent Arm processor support.
+
+2020-09-30  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (aarch64_cpus): Add neoverse-n2.
+	* doc/c-aarch64.texi: Document support for Neoverse N2.
+
+2020-09-30  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c (obj_elf_change_section): Rename variable to
+	avoid shadowing warning.
+	* symbols.c (symbol_entry_find): Init all symbol_flags fields.
+
+2020-09-30  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-arm.c: Add cortex-a78 and cortex-a78ae cores.
+	* doc/c-arm.texi: Update docs.
+	* NEWS: Update news.
+	* testsuite/gas/arm/cpu-cortex-a78.d: New test.
+	* testsuite/gas/arm/cpu-cortex-a78ae.d: New test.
+
+2020-09-29  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* NEWS: TRBE, ETE, ETMv4 and Cortex-X1 news updates.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-arm.c: (arm_cpus): Add Cortex-X1.
+	* doc/c-arm.texi: Document -mcpu=cortex-x1.
+	* testsuite/gas/arm/cpu-cortex-x1.d: New test.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* testsuite/gas/aarch64/etm-ro-invalid.d: New test.
+	* testsuite/gas/aarch64/etm-ro-invalid.l: New test.
+	* testsuite/gas/aarch64/etm-ro-invalid.s: New test.
+	* testsuite/gas/aarch64/etm-ro.s: New test.
+	* testsuite/gas/aarch64/etm-wo-invalid.d: New test.
+	* testsuite/gas/aarch64/etm-wo-invalid.l: New test.
+	* testsuite/gas/aarch64/etm-wo-invalid.s: New test.
+	* testsuite/gas/aarch64/etm-wo.s: New test.
+	* testsuite/gas/aarch64/etm.s: New test.
+	* testsuite/gas/aarch64/sysreg.d: system register s2_1_c0_c3_0
+	disassembled now to trcstatr.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-aarch64.c: (aarch64_cpus): Add Cortex-X1.
+	* doc/c-aarch64.texi: Document -mcpu=cortex-x1.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* testsuite/gas/aarch64/ete.d: New test.
+	* testsuite/gas/aarch64/ete.s: New test.
+
+2020-09-28  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* testsuite/gas/aarch64/trbe-invalid.d: New test.
+	* testsuite/gas/aarch64/trbe-invalid.l: New test.
+	* testsuite/gas/aarch64/trbe-invalid.s: New test.
+	* testsuite/gas/aarch64/trbe.d: New test.
+	* testsuite/gas/aarch64/trbe.s: New test.
+
+2020-09-28  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-arm.c (arm_cpus): Add FP16 to Neoverse V1.
+
+2020-09-28  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (aarch64_cpus): Group Neoverse cores together,
+	add missing F16 bit to Neoverse V1.
+
+2020-09-26  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-csky.c (parse_type_ctrlreg): Don't mask mach_flag
+	for csky_get_control_regno.
+	(csky_get_reg_val): Likewise when calling csky_get_general_regno.
+
+2020-09-24  Jim Wilson  <jimw@sifive.com>
+
+	PR 26400
+	* config/tc-riscv.c (append_insn): If in absolute section, emit
+	error before add_relaxed_insn call.
+	* testsuite/gas/riscv/absolute-sec.d: New.
+	* testsuite/gas/riscv/absolute-sec.l: New.
+	* testsuite/gas/riscv/absolute-sec.s: New.
+
+2020-09-23  Mark Wielaard  <mark@klomp.org>
+
+	* testsuite/gas/elf/dwarf-5-cu.d: Adjust expected output.
+
+2020-09-24  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-arm.c (arm_cpus): Add Neoverse V1.
+	* doc/c-arm.texi: Document Neoverse V1 support.
+
+2020-09-24  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (aarch64_cpu_option_table): Add Neoverse V1.
+	* doc/c-aarch64.texi: Document Neoverse V1 support.
+
+2020-09-24  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-arm.c (arm_cpus): Add Neoverse N2.
+	* doc/c-arm.texi: Document -mcpu=neoverse-n2.
+
+2020-09-24  Lili Cui  <lili.cui@intel.com>
+
+	* NEWS: Add TDX.
+	* config/tc-i386.c (cpu_arch): Add .tdx.
+	(cpu_noarch): Likewise.
+	* doc/c-i386.texi: Document tdx.
+	* testsuite/gas/i386/i386.exp: Run tdx tests.
+	* testsuite/gas/i386/tdx.d: Likewise.
+	* testsuite/gas/i386/tdx.s: Likewise.
+	* testsuite/gas/i386/x86-64-tdx.d: Likewise.
+	* testsuite/gas/i386/x86-64-tdx.s: Likewise.
+
+2020-09-17 Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (parse_type_ctrlreg): Use function
+	csky_get_control_regno to operand.
+	(csky_get_reg_val): Likewise.
+	(is_reg_sp_with_bracket): Use function csky_get_reg_val
+	to parse operand.
+	(is_reg_sp): Refine.
+	(is_oimm_within_range): Fix, report error when operand
+	is not constant.
+	(parse_type_cpreg): Refine.
+	(parse_type_cpcreg): Refine.
+	(get_operand_value): Add handle of OPRND_TYPE_IMM5b_LS.
+	(md_assemble): Fix no error reporting somtimes when
+	operands number are not fit.
+	(csky_addc64): Refine.
+	(csky_subc64): Refine.
+	(csky_or64): Refine.
+	(v1_work_fpu_fo): Refine.
+	(v1_work_fpu_read): Refine.
+	(v1_work_fpu_writed): Refine.
+	(v1_work_fpu_readd): Refine.
+	(v2_work_addc): New function, strengthen the operands legality
+	check of addc.
+	* testsuite/gas/csky/all.d : Use register number format when
+	disassemble register name by default.
+	* testsuite/gas/csky/cskyv2_all.d : Likewise.
+	* testsuite/gas/csky/trust.d: Likewise.
+	* testsuite/gas/csky/cskyv2_ck860.d : Fix.
+	* testsuite/gas/csky/trust.s : Fix.
+
+2020-09-23  Lili Cui  <lili.cui@intel.com>
+
+	* NEWS: Add Key Locker.
+	* config/tc-i386.c (cpu_arch): Add .kl and .wide_kl.
+	(cpu_noarch): Likewise.
+	* doc/c-i386.texi: Document kl and wide_kl.
+	* testsuite/gas/i386/i386.exp: Run keylocker tests.
+	* testsuite/gas/i386/keylocker-intel.d: New test.
+	* testsuite/gas/i386/keylocker.d: Likewise.
+	* testsuite/gas/i386/keylocker.s: Likewise.
+	* testsuite/gas/i386/x86-64-keylocker-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-keylocker.d: Likewise.
+	* testsuite/gas/i386/x86-64-keylocker.s: Likewise.
+	* testsuite/gas/i386/x86-64-property-10.d: Likewise.
+	* testsuite/gas/i386/property-10.d: Likewise.
+	* testsuite/gas/i386/property-10.s: Likewise.
+
+2020-09-21  Alan Modra  <amodra@gmail.com>
+
+	PR 26569
+	* config/tc-riscv.c (append_insn): Don't tie off frags at CALL
+	relocs.
+	(riscv_call): Tie them off after the jalr.
+	(md_apply_fix): Zero fx_size of RELAX fixup.
+
+2020-09-018  David Faust  <david.faust@oracle.com>
+
+	* testsuite/gas/bpf/alu-xbpf.d: New file.
+	* testsuite/gas/bpf/alu-xbpf.s: Likewise.
+	* testsuite/gas/bpf/alu32-xbpf.d: Likewise.
+	* testsuite/gas/bpf/alu32-xbpf.d: Likewise.
+	* testuiste/gas/bpf/bpf.exp: Run new tests.
+
+2020-09-18  Tucker  <tuckkern+sourceware@gmail.com>
+
+	PR 26556
+	* read.c (bss_alloc): Convert size parameter from octets to
+	bytes.
+
+2020-09-17  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/i386/i386.exp: Return early if not x86.
+
+2020-09-16  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c (obj_elf_visibility, elf_frob_symbol): Adjust
+	elf_symbol_from invocation.
+	* config/tc-aarch64.c (s_variant_pcs): Likewise.
+	* config/tc-m68hc11.c (s_m68hc11_mark_symbol): Likewise.
+	* config/tc-ppc.c (ppc_elf_localentry, ppc_force_relocation),
+	(ppc_fix_adjustable): Likewise.
+	* config/tc-xgate.c (xgate_frob_symbol): Likewise.
+
+2020-09-15  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/cfi/reloc-pe-i386.d: Updated.
+	* testsuite/gas/i386/x86-64-w64-pcrel.d: Likewise.
+
+2020-09-15  Alan Modra  <amodra@gmail.com>
+
+	PR 26610
+	* config/tc-arm.c (move_or_literal_pool): Correct extraction of
+	bignum.  Use unsigned "v"
+	(is_double_a_single): Make "v" and "mantissa" unsigned.  Formatting.
+	(double_to_single): Likewise.
+
+2020-09-15  Nick Clifton  <nickc@redhat.com>
+
+	* read.c (s_nop): Preserve the input_line_pointer around the call
+	to md_assemble.
+	* config/tc-s12z.c (md_assemble): Revert previous delta.
+
+2020-09-15  David Faust  <david.faust@oracle.com>
+
+	* config/tc-bpf.h (md_single_noop_insn): Use 'ja 0' for no-op.
+
+2020-09-14  Nick Clifton  <nickc@redhat.com>
+
+	* read.c (s_nop): New function.  Handles the .nop directive.
+	(potable): Add entry for "nop".
+	(s_nops): Code tidy.
+	* read.h (s_nop): Add prototype.
+	* config/tc-bpf.h (md_single_noop_insn): Define.
+	* config/tc-mmix.h (md_single_noop_insn): Define.
+	* config/tc-or1k.h (md_single_noop_insn): Define.
+	* config/tc-ia64.h (md_single_noop_insn): Define.
+	* config/tc-s12z.c (md_assemble): Preserve the input line pointer,
+	rather than corrupting it.
+	* write.c (relax_segment): Update error message regarding
+	non-absolute values passed to .fill and .nops.
+	* NEWS: Mention the new directive.
+	* doc/as.texi: Document the new directive.
+	* doc/internals.texi: Document the new internal macros used to
+	implement the new directive.
+	* testsuite/gas/all/nop.s: New test.
+	* testsuite/gas/all/nop.d: New test control file.
+	* testsuite/gas/all/gas.exp: Run the new test.
+	* testsuite/gas/elf/dwarf-5-nop-for-line-table.s: New test.
+	* testsuite/gas/elf/dwarf-5-nop-for-line-table.d: New test
+	control file.
+	* testsuite/gas/elf/elf.exp: Run the new test.
+	* testsuite/gas/i386/space1.l: Adjust expected output.
+
+2020-09-07  Mark Wielaard  <mark@klomp.org>
+
+	* as.texi (-g): Explicitly mention when .debug_info and .debug_line
+	are generated for the DWARF format.
+	(Loc): Add that it is an error to both use a .loc directive and
+	generate a .debug_line yourself.
+	* dwarf2dbg.c (dwarf2_any_loc_directive_seen): New static variable.
+	(dwarf2_directive_loc): Set dwarf2_any_loc_directive_seen to TRUE.
+	(dwarf2_finish): Check dwarf2_any_loc_directive_seen before emitting
+	an error. Only create .debug_line if it is empty (or doesn't exist).
+	* testsuite/gas/i386/i386.exp: Add dwarf2-line-{1,2,3,4} when testing
+	an elf target.
+	* testsuite/gas/i386/dwarf2-line-{1,2,3,4}.{s,d,l}: New test files.
+
+2020-09-10  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (md_begin): Enable extend lrw by default for
+	CK802, CK803 and CK860.
+
+2020-09-10  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (struct csky_cpu_info): Add new members
+	isa_flag, features and ver.
+	(struct csky_cpu_feature): New.
+	(struct csky_cpu_version): New.
+	(CSKY_FEATURE_MAX): Define.
+	(CSKY_CPU_REVERISON_MAX): Define.
+	(FEATURE_DSP_EXT, FEATURE_DSP, FEATURE_MMU, FEATURE_VDSP,
+	 FEATURE_FLOAT, FEATURE_TRUST, FEATURE_JAVA, FEATURE_SHIELD):
+	Define, each standard one collection of instructions.
+	(CSKY_FEATURES_DEF_NULL, CSKY_FEATURES_DEF_e,
+	 CSKY_FEATURES_DEF_t, CSKY_FEATURES_DEF_f, CSKY_FEATURES_DEF_v,
+	 CSKY_FEATURES_DEF_ef, CSKY_FEATURES_DEF_jt,
+	 CSKY_FEATURES_DEF_efht, CSKY_FEATURES_DEF_efv,
+	 CSKY_FEATURES_DEF_eft, CSKY_FEATURES_DEF_d,
+	 CSKY_FEATURES_DEF_df, CSKY_FEATURES_DEF_ft,
+	 CSKY_FEATURES_DEF_tv, CSKY_FEATURES_DEF_fv,
+	 CSKY_FEATURES_DEF_dft, CSKY_FEATURES_DEF_dfv,
+	 CSKY_FEATURES_DEF_ftv, CSKY_FEATURES_DEF_eftv): Define,
+	the features combination used by cpu.
+	(CSKY_CPU_REVERISON_r0p0, CSKY_CPU_REVERISON_r1p0,
+	 CSKY_CPU_REVERISON_r2p0, CSKY_CPU_REVERISON_r3p0,
+	 CSKY_CPU_REVERISON_RESERVED, CSKY_CPU_REVERISON_R3):
+	Define, version information used by cpu.
+	(csky_cpus): Refine, and add CK804, CK805 and CK800.
+	(parse_cpu): Refine.
+	(parse_arch): Refine.
+	(md_show_usage): Refine.
+	(md_begin): Refine.
+
+2020-09-09  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (md_assemble): Emit prefix insn by parts when
+	valueT is smaller than 64 bits.
+
+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (CSKYV2_ISA_DSP): CSKY_ISA_DSPE60.
+	(CSKY_ISA_860): Likewise.
+
+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (float_abi): New.
+	(md_longopts): Add mfloat-abi.
+	(struct sky_option_value_table): New.
+	(csky_float_abis): New, the possible values for -mfloat-abi.
+	(parse_float_abi): New funtion.
+	(md_show_usage): Show help information for -mfloat-abi.
+	(set_csky_attribute): Store float-abi value.
+
+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (float_work_fpuv3_fmovi): New function,
+	helper function to encode fpuv3 fmovi instructions.
+	(float_work_fpuv3_fstore): New function.
+	(struct literal): Add new member 'offset'.
+	(csky_cpus): New cpu CK860f.
+	(enter_literal): Return literal pool pointer instead of offset.
+	(parse_rt): Adjust the change of enter_literal.
+	(parse_rtf): Likewise.
+	(v1_work_lrw): Likewise.
+	(v1_work_jbsr): Likewise.
+	(v2_work_lrw): Likewise.
+	(v2_work_jbsr): Likewise.
+	(v2_work_jsri): Likewise.
+	(vdsp_work_vlrw): Likewise.
+	(is_freglist_legal): Add handler for FPUV3.
+	(parse_type_freg): Likewise.
+	(is_imm_within_range): Set e.X_add_number if it is a signed and
+	negtive number.
+	(get_operand_value): Add handler for OPRND_TYPE_IMM9b,
+	OPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI
+	and OPRND_TYPE_DFLOAT_FMOVI.
+	(float_to_half): Convert float number to harf float.
+	* testsuite/gas/csky/case-fpuv3-ck860f/ : New folder containing
+	the test cases for FPUV3, they are divided by instruction
+	operands format and both have legal cases and illegal cases.
+
+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+	Kuan-Lin Chen  <kuanlinchentw@gmail.com>
+
+	* config/tc-msp430.c (msp430_insert_uleb128_fixes): New.
+	(msp430_md_end): Call msp430_insert_uleb128_fixes.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (aarch64_cpus): Add Cortex-R82.
+	* doc/c-aarch64.texi: Document -mcpu=cortex-r82.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (parse_sys_reg): Also pass sysreg name to
+	validation function.
+	(parse_sys_ins_reg): Likewise.
+	(print_operands): Pass CPU features to aarch64_print_operand().
+	* testsuite/gas/aarch64/v8-r-bad-sysregs.d: New test.
+	* testsuite/gas/aarch64/v8-r-bad-sysregs.l: Error output.
+	* testsuite/gas/aarch64/v8-r-bad-sysregs.s: Input.
+	* testsuite/gas/aarch64/v8-r-sysregs-need-arch.d: New test.
+	* testsuite/gas/aarch64/v8-r-sysregs-need-arch.l: Error output.
+	* testsuite/gas/aarch64/v8-r-sysregs.d: New test.
+	* testsuite/gas/aarch64/v8-r-sysregs.s: Input for previous two tests.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* testsuite/gas/aarch64/dfb.d: New test.
+	* testsuite/gas/aarch64/dfb.s: Input.
+
+2020-09-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (aarch64_archs): Add armv8-r.
+	* doc/c-aarch64.texi: Document -march=armv8-r.
+
+2020-09-07  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf2dbg.c (add_line_strp): New function.
+	(out_dir_and_file_list): Take line_seg and sizeof_offset as
+	arguments, Use DW_FORM_line_strp for dir and file. Call
+	add_line_strp and set symbol offset for DWARF2_LINE_VERSION 5.
+	(out_debug_line): Call out_dir_and_file_list with line_seg and
+	sizeof_offset.
+	* testsuite/gas/elf/dwarf-5-file0.d: Expect indirect line
+	strings.
+
+2020-09-07  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf2dbg.c (DWARF2_RNGLISTS_VERSION): New constant.
+	(out_debug_ranges): Add ranges_sym argument and set it.
+	(out_debug_rnglists): New function.
+	(out_debug_info): Change ranges_seg argument to ranges_sym
+	and use it to set DW_AT_ranges value.
+	(dwarf2_finish): Remove ranges_seg, add ranges_sym. For
+	DWARF2_VERSION 5 call out_debug_rnglists.
+
+2020-09-07  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf2dbg.c (dwarf2_directive_filename): Initialize with_md5 to
+	FALSE.
+	* testsuite/gas/elf/dwarf-5-file0.s: Add a random bignum.
+
+2020-09-01  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf2dbg.c (out_debug_abbrev): Use DW_FORM_sec_offset for DWARF
+	version 4 or higher.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* expr.c (add_to_result, subtract_from_result): Use unsigned
+	addition and subtraction.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-z80.c (is_overflow): Avoid too large shift.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-sparc.c (in_signed_range): Use an unsigned type for
+	sign mask.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-nios2.c (md_apply_fix): Avoid too large shift.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-mips.c (load_register): Avoid too large shift.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-d30v.c (parallel_ok): Use 1UL for left shift expression.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/rx-parse.y (rx_intop): Avoid too large shifts.
+	(rx_intop, rx_uintop, rx_disp3op, rx_disp5op, displacement),
+	(rtsd_immediate): Use correctly typed unsigned variables.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-macho.c (obj_mach_o_zerofill): Correct type of
+	constant shifted left.
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/bfin-lex.l: Use an unsigned type for "value".
+
+2020-09-02  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-pdp11.c (md_number_to_chars): Condition nbytes=8 code
+	on BFD64.
+
+2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (csky_cpus): Add ck803r3.
+	(CSKY_ISA_803R3): Define.
+	(CSKY_ISA_803R2): Refine, use CSKY_ISA_803R1.
+
+2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* testsuite/gas/csky/cskyv2_dsp.d : Fix Encode of mulsws.
+
+2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (struct literal): New member bignum.
+	(dump_literals): Handle big constant.
+	(enter_literal): Likewise.
+	(parse_type_freg): Handle vector register.
+
+2020-09-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* doc/as.texi: Document the .tls_common directive.
+
+2020-09-01  Alan Modra  <amodra@gmail.com>
+
+	PR 26420
+	PR 26421
+	PR 26425
+	PR 26427
+	* config/tc-arm.c (struct arm_it): Make size, size_req, cond and
+	uncond_value unsigned.
+	(parse_vfp_reg_list): Make setmask unsigned, vpr_str_len size_t.
+	(parse_big_immediate): Cast generic_bignum elements to unsigned.
+	(encode_thumb32_immediate): Shift left 0xffU.
+	(double_to_single): Make sign unsigned.  Tidy.
+	(move_or_literal_pool): Cast LITTLE_NUM elements to uint64_t or
+	valueT.
+	(vfp_or_neon_is_neon): Adjust inst.uncond_value expression.
+	(md_assemble): Likewise.
+	(handle_pred_state): Make cond unsigned.
+	(thumb32_negate_data_op): Make variables unsigned.
+	(md_apply_fix): Make value and newval unsigned, adjust uses.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26510
+	* config/tc-z8k.c (buffer): Use unsigned char.
+	(apply_fix): Use unsigned char* pointers.
+	(build_bytes): Likewise and mask nibbles when packing.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26503
+	* config/tc-v850.c (parse_register_list): Shift 1u left.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26502
+	* config/tc-tic6x.c (md_apply_fix): Use unsigned variables.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26497
+	* config/tc-sh.c (assemble_ppi): Use unsigned variables.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26495
+	* config/tc-score.c (s3_apply_fix): Use unsigned variables.
+	* config/tc-score7.c (s7_apply_fix): Likewise.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26480
+	* config/tc-nios2.c (nios2_parse_reglist): Shift 1UL left.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26479
+	* config/tc-nios2.c (md_chars_to_number): Cast buf[i] before shifting.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26472
+	PR 26473
+	PR 26474
+	* config/tc-mips.c (operand_reg_mask): Shift 1u left.
+	(load_register): Shift 0xffffU left.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26471
+	* config/tc-metag.c (md_chars_to_number): Make retval unsigned.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26468
+	* config/tc-mep.c (md_convert_frag): Use uint32_t for addend and
+	other variables.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26493
+	* config/tc-riscv.c (riscv_ip): Cast X_add_number passed to
+	VALID_* macros to unsigned.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-crx.c: Formatting.
+	(CRX_PRINT): Wrap params in parentheses.  Remove parens from uses
+	throughout file.
+	(reset_vars, get_register, get_copregister, get_optype, get_opbits),
+	(get_opflags, get_number_of_operands, parse_operand, gettrap),
+	(handle_LoadStor, getconstant, check_range, getreg_image),
+	(parse_operands, parse_insn, print_operand, print_constant),
+	(exponent2scale, mask_reg, process_label_constant, set_operand),
+	(assemble_insn, print_insn): Delete unnecessary forward declaration.
+	(print_insn): Make static.
+	(print_constant): Make "constant" unsigned.
+	(assemble_insn): Tidy REVERSE_MATCH index calc.
+	* expr.c (generic_bignum_to_int32): Cast elements to valueT.
+
+2020-08-31  Alan Modra  <amodra@gmail.com>
+
+	PR 26509
+	* config/tc-z80.c (is_overflow): Use 1UL in mask shift expression.
+
+2020-08-30  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-tic4x.c (tic4x_gen_to_words): Rewrite mantissa
+	overflow test without UB.  Avoid other UB shifts by making them
+	unsigned.
+
+2020-08-31  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (csky_error_state): New member 'arg_int'.
+	(SET_ERROR_NUMBER): Rename to SET_ERROR_STRING.
+	(SET_ERROR_INTEGER): New.
+	(err_formats): Add error format for ERROR_FREG_OVER_RANGE and
+	ERROR_VREG_OVER_RANGE.
+	(csky_show_error): Pass an integer argument for some error
+	numbers.
+	(parse_exp): Call SET_ERROR_STRING instead of SET_ERROR_NUMBER.
+	(parse_rt): Likewise.
+	(parse_type_ctrlreg): Likewise.
+	(csky_get_reg_val): Likewise.
+	(is_reglist_legal): Likewise.
+	(is_freglist_legal): Likewise.
+	(is_reglist_dash_comma_legal): Likewise.
+	(is_reg_lshift_illegal): Likewise.
+	(is_psr_bit): Likewise.
+	(parse_type_cpreg): Likewise.
+	(parse_type_cpcreg): Likewise.
+	(parse_type_areg): Likewise.
+	(parse_type_freg): Likewise.
+	(parse_ldst_imm): Likewise and call SET_ERROR_INTEGER.
+	(get_operand_value): Likewise.
+	(parse_operands_op): Likewise and call is_imm_within_range,
+	is_imm_within_range_ext and is_oimm_within_range.
+	(md_assemble): Likewise.
+	(is_imm_within_range): New.
+	(is_imm_within_range_ext): Rename from is_imm_over_range.
+	(is_oimm_within_range): Rename from is_oimm_over_range.
+	(v2_work_add_sub): Call SET_ERROR_INTEGER.
+	(csky_rolc): call is_imm_within_range instead of
+	is_imm_over_range.
+
+2020-08-31  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (md_begin): Add warning when -mdsp and
+	-mcpu=ck803ern are both added.
+	(parse_ldst_imm): Fix error message.
+
+2020-08-30  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/cr16/cbitb_test.d: Update expected output.
+	* testsuite/gas/cr16/cbitw_test.d: Likewise.
+	* testsuite/gas/cr16/sbitb_test.d: Likewise.
+	* testsuite/gas/cr16/sbitw_test.d: Likewise.
+	* testsuite/gas/cr16/storb_test.d: Likewise.
+	* testsuite/gas/cr16/storw_test.d: Likewise.
+	* testsuite/gas/cr16/tbitb_test.d: Likewise.
+	* testsuite/gas/cr16/tbitw_test.d: Likewise.
+
+2020-08-30  Alan Modra  <amodra@gmail.com>
+
+	PR 26437
+	PR 26438
+	* config/tc-cr16.c: Include limits.h, formatting.
+	(CR16_PRINT): Wrap params in parentheses.  Remove parens from uses
+	throughout file.
+	(getconstant): Handle zero nbits.
+	(print_operand): Use unsigned variables.  Simplify handling of
+	index regs.
+	(check_range): Use int32_t variables.  Correct range checks.
+
+2020-08-29  Alan Modra  <amodra@gmail.com>
+
+	PR 26481
+	* config/tc-pj.c (md_assemble): Don't loop past end of
+	opcode->arg array.
+
+2020-08-28  Alan Modra  <amodra@gmail.com>
+
+	PR 26460
+	* config/tc-ia64.c (parse_operands): Don't access past end of
+	idesc->operands.
+
+2020-08-26  Mark Wielaard  <mark@klomp.org>
+
+	* as.c (parse_args): Handle bad -gdwarf options.
+
+2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (md_begin): Set attributes.
+	(isa_flag): Change type to unsigned 64 bits.
+	(struct csky_cpu_info): Likewise.
+	(struct csky_macro_info): Likewise.
+	(set_csky_attribute): New.
+	* testsuite/gas/csky/802j.d: Ignore .csky.attributes section.
+	* testsuite/gas/csky/all.d: Likewise.
+	* testsuite/gas/csky/bsr1.d: Likewise.
+	* testsuite/gas/csky/csky_vdsp.d: Likewise.
+	* testsuite/gas/csky/cskyv2_all.d: Likewise.
+	* testsuite/gas/csky/cskyv2_ck803r2.d: Likewise.
+	* testsuite/gas/csky/cskyv2_ck860.d: Likewise.
+	* testsuite/gas/csky/cskyv2_dsp.d: Likewise.
+	* testsuite/gas/csky/cskyv2_elrw.d: Likewise.
+	* testsuite/gas/csky/cskyv2_float.d: Likewise.
+	* testsuite/gas/csky/enhance_dsp.d: Likewise.
+	* testsuite/gas/csky/java.d: Likewise.
+	* testsuite/gas/csky/v1_float.d: Likewise.
+	* testsuite/gas/csky/v2_float_part1.d: Likewise.
+	* testsuite/gas/csky/v2_float_part2.d: Likewise.
+	* testsuite/gas/csky/v2_tls_gd.d: Likewise.
+	* testsuite/gas/csky/v2_tls_ie.d: Likewise.
+	* testsuite/gas/csky/v2_tls_ld.d: Likewise.
+	* testsuite/gas/csky/v2_tls_le.d: Likewise.
+	* testsuite/gas/elf/elf.exp: Add handler for CSKY.
+	* testsuite/gas/elf/section2.e-csky: New.
+
+2020-08-27  Alan Modra  <amodra@gmail.com>
+
+	PR 26467
+	* cgen.c (weak_operand_overflow_check): Handle opmask for
+	operand length zero.  Use 1UL constant.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26508
+	* config/tc-xtensa.c (xg_get_trampoline_chain): Return early
+	when n_entries is zero.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26448
+	* symbols.c: Include limits.h.
+	(resolve_symbol_value <O_left_shift, O_right_shift>): Do an
+	unsigned shift.  Warn if shift count larger than valueT size.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26447
+	* expr.c (expr <O_left_shift>): Do an unsigned shift.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+2020-08-26  David Faust  <david.faust@oracle.com>
+
+	* config/tc-bpf.c: Add option -mxbpf to select xbpf isa.
+	* testsuite/gas/bpf/indcall-1.d: New file.
+	* testsuite/gas/bpf/indcall-1.s: Likewise.
+	* testsuite/gas/bpf/indcall-bad-1.l: Likewise.
+	* testsuite/gas/bpf/indcall-bad-1.s: Likewise.
+	* testsuite/gas/bpf/bpf.exp: Run new tests.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26501
+	* config/tc-tic54x.c (tic54x_undefined_symbol): Properly treat
+	misc_symbol_hash entries without values.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26500
+	* config/tc-tic4x.c (tic4x_inst_make): Don't die on terminating
+	insn with name = "".
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26441
+	* config/tc-cr16.c (get_b_cc): Return NULL early if op isn't
+	two or three chars, and don't bother copying.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26426
+	* config/tc-arm.c (do_neon_mvn, do_neon_swp): Bail out on
+	NS_NULL shape.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	PR 26410
+	* symbols.c (dollar_label_count, dollar_label_max): Make size_t.
+	(dollar_label_clear): Don't call memset with NULL pointer.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-arc.c (declare_register_set): Avoid false positive
+	format-overflow warning.
+	* config/tc-epiphany.c (md_assemble): Likewise.
+	* config/tc-mips.c (md_begin): Likewise.
+	* config/tc-mmix.c (mmix_md_begin): Likewise.
+	* config/tc-nds32.c (nds32_elf_append_relax_relocs): Avoid false
+	positive "may be used uninitialized" warning.
+
+2020-08-24  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (csky_archs): Add item for CK860,
+	change ck810 and ck807's arch_flag.
+	(csky_cpus): Add item for CK860.
+	(md_begin): Enable DSP for CK810 and CK807 by default.
+	(md_apply_fix): Fix CKCORE_TLS_IE32 relocation failure.
+	* testsuite/gas/csky/cskyv2_all.d: Change 'sync 0' to 'sync'.
+	* testsuite/gas/csky/cskyv2_all.s: Likewise.
+	* testsuite/gas/csky/cskyv2_ck860.d: New.
+	* testsuite/gas/csky/cskyv2_ck860.s: New.
+	* testsuite/gas/csky/enhance_dsp.d: Change plsli.u16 to plsli.16.
+	* testsuite/gas/csky/enhance_dsp.s: Likewise.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-tic54x.c (stag_add_field_symbols): Don't free "name"
+	in case where it isn't copied.
+	* config/tc-tic54x.h (LOCAL_LABELS_FB): Undef.
+	* testsuite/gas/tic54x/field.d: Dump section contents and symbols
+	rather than disassembling.
+	* testsuite/gas/tic54x/set.d: Adjust for newer disassembly.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-aarch64.c (md_begin): Don't bother checking for
+	out of memory failure from str_htab_create.
+	* config/tc-arc.c (arc_insert_opcode, md_begin): Likewise.
+	(arc_extcorereg, arc_stralloc): Likewise.
+	* config/tc-arm.c (md_begin): Likewise.
+	* config/tc-cr16.c (initialise_reg_hash_table, md_begin): Likewise.
+	* config/tc-cris.c (md_begin): Likewise.
+	* config/tc-crx.c (md_begin): Likewise.
+	* config/tc-pdp11.c (md_begin): Likewise.
+	* config/tc-score.c (s3_build_reg_hsh, s3_begin): Likewise.
+	* config/tc-score7.c (s7_build_reg_hsh, s7_begin): Likewise.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-arm.c (move_or_literal_pool): Avoid false positive
+	"may be used uninitialised".
+	(opcode_lookup): Likewise.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	PR 26526
+	* symbols.c (local_symbol_convert): Clear out xtra.
+
+2020-08-21  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (CSKY_ISA_803R2): New.
+	(csky_archs): Add ck803r2 series.
+	(md_begin): Fix warning about -medsp.
+	(csky_get_freg_val): Support lowercase of fpu register name.
+	* testsuite/gas/csky/cskyv2_ck803r2.s: New file.
+	* testsuite/gas/csky/cskyv2_ck803r2.d: New file.
+
+2020-08-23  Alan Modra  <amodra@gmail.com>
+
+	PR 26513
+	* hash.h (htab_insert): Update prototype and comment.
+	(struct string_tuple): Make "value" a const void*.
+	(string_tuple_alloc): Likewise.
+	(str_hash_find, str_hash_find_n): Cast returned value.
+	(str_hash_insert): Add "replace" parameter, and return slot pointer.
+	Free alloc'd element when not inserted.
+	* hash.c (htab_insert): Likewise.  Return slot when element exists,
+	otherwise return NULL.
+	* read.c (pop_insert): Insert into hash table without first searching.
+	* config/tc-avr.c (md_begin): Likewise.
+	* config/tc-msp430.c (md_begin): Likewise.
+	* config/tc-nds32.c (nds32_init_nds32_pseudo_opcodes): Likewise.
+	* config/tc-v850.c (md_begin): Likewise.
+	* macro.c (do_formals, define_macro, macro_expand_body): Likewise.
+	(delete_macro): Delete from hash table.
+	* config/tc-tic54x.c (subsym_create_or_replace): Correct logic.
+
+	* symbols.c (local_symbol_make, symbol_table_insert): Allow
+	replacement of hash table entries.
+	* config/obj-coff-seh.c (seh_hash_insert): Likewise.
+	* config/obj-coff.c (tag_insert): Likewise.
+	* config/tc-iq2000.c (iq2000_add_macro): Likewise.
+	* config/tc-m68k.c (md_begin): Likewise for aliases.
+	* config/tc-tic4x.c (tic4x_asg): Likewise.
+	* config/tc-tic6x.c (md_begin): Likewise.
+
+	* dw2gencfi.c (dwcfi_hash_find_or_make): Disallow replacement of
+	hash table entries.
+	* ecoff.c (add_string, get_tag): Likewise.
+	* macro.c (expand_irp): Likewise.
+	* config/obj-elf.c (build_additional_section_info): Likewise.
+	* config/tc-aarch64.c (insert_reg_alias): Likewise.
+	(checked_hash_insert): Likewise.
+	* config/tc-alpha.c (get_alpha_reloc_tag, md_begin): Likewise.
+	* config/tc-arc.c (arc_insert_opcode, declare_register): Likewise.
+	(declare_addrtype, md_begin, arc_extcorereg): Likewise.
+	* config/tc-arm.c (insert_reg_alias): Likewise.
+	(arm_tc_equal_in_insn, md_begin): Likewise.
+	* config/tc-cr16.c (initialise_reg_hash_table, md_begin): Likewise.
+	* config/tc-cris.c (md_begin): Likewise.
+	* config/tc-crx.c (md_begin): Likewise.
+	* config/tc-csky.c (md_begin): Likewise.
+	* config/tc-d10v.c (md_begin): Likewise.
+	* config/tc-dlx.c (md_begin): Likewise.
+	* config/tc-ft32.c (md_begin): Likewise.
+	* config/tc-h8300.c (md_begin): Likewise.
+	* config/tc-hppa.c (md_begin): Likewise.
+	* config/tc-i386.c (md_begin): Likewise.
+	* config/tc-ia64.c (dot_rot, dot_entry, declare_register): Likewise.
+	(md_begin, dot_alias): Likewise.
+	* config/tc-m68hc11.c (md_begin): Likewise.
+	* config/tc-m68k.c (md_begin): Likewise.
+	* config/tc-mcore.c (md_begin): Likewise.
+	* config/tc-microblaze.c (md_begin): Likewise.
+	* config/tc-mips.c (md_begin): Likewise.
+	* config/tc-mmix.c (md_begin): Likewise.
+	* config/tc-mn10200.c (md_begin): Likewise.
+	* config/tc-mn10300.c (md_begin): Likewise.
+	* config/tc-moxie.c (md_begin): Likewise.
+	* config/tc-nds32.c (nds32_relax_hint, md_begin): Likewise.
+	* config/tc-nios2.c (md_begin): Likewise.
+	* config/tc-ns32k.c (md_begin): Likewise.
+	* config/tc-pdp11.c (md_begin): Likewise.
+	* config/tc-pj.c (fake_opcode, md_begin): Likewise.
+	* config/tc-ppc.c (ppc_setup_opcodes): Likewise.
+	* config/tc-pru.c (md_begin): Likewise.
+	* config/tc-riscv.c (init_ext_version_hash): Likewise.
+	(init_opcode_names_hash, hash_reg_name, init_opcode_hash): Likewise.
+	(riscv_init_csr_hash): Likewise.
+	* config/tc-s390.c (s390_setup_opcodes, md_begin): Likewise.
+	* config/tc-score.c (s3_insert_reg): Likewise.
+	(s3_build_score_ops_hsh, s3_build_dependency_insn_hsh): Likewise.
+	* config/tc-score7.c (s7_build_score_ops_hsh): Likewise.
+	(s7_build_dependency_insn_hsh, s7_insert_reg): Likewise.
+	* config/tc-sh.c (md_begin): Likewise.
+	* config/tc-sparc.c (md_begin): Likewise.
+	* config/tc-spu.c (md_begin): Likewise.
+	* config/tc-tic30.c (md_begin): Likewise.
+	* config/tc-tic4x.c (tic4x_inst_insert): Likewise.
+	* config/tc-tic54x.c (stag_add_field_symbols, md_begin): Likewise.
+	(tic54x_endstruct, tic54x_var, tic54x_macro_info): Likewise.
+	(subsym_substitute): Likewise.
+	* config/tc-tilegx.c (md_begin): Likewise.
+	* config/tc-tilepro.c (md_begin): Likewise.
+	* config/tc-vax.c (vip_begin): Likewise.
+	* config/tc-wasm32.c (md_begin): Likewise.
+	* config/tc-xgate.c (md_begin): Likewise.
+	* config/tc-z8k.c (md_begin): Likewise.
+	* testsuite/gas/ppc/dcbt.d,
+	* testsuite/gas/ppc/dcbt.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+	* ecoff.c (add_string): Report fatal error on duplicates.
+	* config/tc-alpha.c (md_begin): Likewise.
+	* config/tc-arc.c (arc_insert_opcode, declare_register): Likewise.
+	(declare_addrtype, md_begin, arc_extcorereg): Likewise.
+	* config/tc-cr16.c (initialise_reg_hash_table, md_begin): Likewise.
+	* config/tc-cris.c (md_begin): Likewise.
+	* config/tc-crx.c (md_begin): Likewise.
+	* config/tc-dlx.c (md_begin): Likewise.
+	* config/tc-hppa.c (md_begin): Likewise.
+	* config/tc-i386.c (md_begin): Likewise.
+	* config/tc-ia64.c (dot_rot, dot_entry, declare_register): Likewise.
+	(md_begin): Likewise.
+	* config/tc-m68k.c (md_begin): Likewise.
+	* config/tc-mips.c (md_begin): Likewise.
+	* config/tc-nios2.c (md_begin): Likewise.
+	* config/tc-ns32k.c (md_begin): Likewise.
+	* config/tc-ppc.c (ppc_setup_opcodes): Likewise.
+	* config/tc-pru.c (md_begin): Likewise.
+	* config/tc-riscv.c (init_ext_version_hash): Likewise.
+	(init_opcode_names_hash, hash_reg_name, init_opcode_hash): Likewise.
+	* config/tc-s390.c (s390_setup_opcodes, md_begin): Likewise.
+	* config/tc-sparc.c (md_begin): Likewise.
+	* config/tc-tic30.c (md_begin): Likewise.
+	* config/tc-tic4x.c (tic4x_inst_insert): Likewise.
+	* config/tc-tilegx.c (md_begin): Likewise.
+	* config/tc-tilepro.c (md_begin): Likewise.
+	* config/tc-vax.c (vip_begin): Likewise.
+
+	* config/tc-alpha.c,
+	* config/tc-arm.c,
+	* config/tc-avr.c,
+	* config/tc-cr16.c,
+	* config/tc-csky.c,
+	* config/tc-i386.c,
+	* config/tc-m68hc11.c,
+	* config/tc-m68k.c,
+	* config/tc-microblaze.c,
+	* config/tc-ns32k.c,
+	* config/tc-pj.c,
+	* config/tc-ppc.c,
+	* config/tc-score.c,
+	* config/tc-score7.c,
+	* config/tc-tic4x.c,
+	* config/tc-tic54x.c,
+	* config/tc-tilegx.c,
+	* config/tc-tilepro.c,
+	* config/tc-xgate.c: Formatting.
+
+2020-08-21  Alan Modra  <amodra@gmail.com>
+
+	* symbols.c (struct local_symbol): Add "hash" entry.  Reorder fields.
+	Delete union.  Adjust code throughout file.
+	(struct symbol): Add "hash", "name" and "x" entries.  Reorder fields.
+	Split off some to..
+	(struct xsymbol): ..this.  New struct.  Adjust code throughout file
+	accessing these fields.
+	(struct symbol_entry): Delete.
+	(union symbol_entry): New.
+	(hash_symbol_entry): Adjust for symbol_entry_t change.
+	(symbol_entry_find): Likewise.
+	(eq_symbol_entry): Compare hash values too.
+	(symbol_entry_alloc): Delete.
+	(local_symbol_converted_p, local_symbol_mark_converted): Delete.
+	(local_symbol_get_real_symbol, local_symbol_set_real_symbol): Delete.
+	(local_hash): Delete.
+	(abs_symbol_x, dot_symbol_x): New static var.
+	(symbol_init): New function.
+	(symbol_create): Rewrite.
+	(LOCAL_SYMBOL_CHECK): Delete.  Replace uses throughout with simple
+	test of flags.local_symbol.
+	(local_symbol_make): Adjust for struct local_symbol changes.
+	(local_symbol_convert): Rewrite.  Adjust all callers.
+	(symbol_table_insert): Simplify.
+	(symbol_clone): Comment on local sym cloning.  Handle split symbol
+	struct.
+	(get_real_sym): Delete.  Remove all uses.
+	(symbol_find_exact_noref): Simplify.
+	(resolve_local_symbol): Don't resolve non-locals.
+	(S_SET_SEGMENT): Don't special case reg_section.
+	(S_SET_NAME): Set both name and bsym->name.
+	(symbol_mark_resolved, symbol_resolved_p): Simplify.
+	(symbol_symbolS): Update comment.
+	(symbol_begin): Don't create local_hash.  Adjust abs_symbol setup.
+	(dot_symbol_init): Adjust dot_symbol setup.
+	(symbol_print_statistics): Delete local_hash stats.
+
+2020-08-21  Alan Modra  <amodra@gmail.com>
+
+	* symbols.c (struct symbol_flags): Rename sy_volatile to volatil,
+	and remove sy_ from other field names.  Update throughout.
+	(struct symbol): Remove sy_ from field names.  Delete unused
+	TARGET_SYMBOL_FIELDS.  Update throughout file.  Move after..
+	(struct local_symbol): ..here.  Remove lsy_ from field names.
+	Delete unused TC_LOCAL_SYMFIELD_TYPE.  Update throughout file.
+	(local_symbol_resolved_p, local_symbol_mark_resolved): Delete.
+	Expand uses throughout file.
+	(local_symbol_get_frag, local_symbol_set_frag): Likewise.
+	(symbol_new): Move symbol_table_frozen test to..
+	(symbol_append): ..here, and..
+	(symbol_insert): ..here.
+	(resolve_symbol_value, symbol_relc_make_expr): White space fixes.
+	(HANDLE_XADD_OPT1, HANDLE_XADD_OPT2): Likewise.
+	* config/obj-coff.h (RESOLVE_SYMBOL_REDEFINITION): Update.
+
+2020-08-21  Alan Modra  <amodra@gmail.com>
+
+	* symbols.h (symbol_new, symbol_create, local_symbol_make),
+	(symbol_temp_new): Arrange params as section, frag, offset.
+	* symbols.c: Adjust to suit.
+	* as.c: Likewise.
+	* cgen.c: Likewise.
+	* dwarf2dbg.c: Likewise.
+	* ecoff.c: Likewise.
+	* expr.c: Likewise.
+	* itbl-ops.c: Likewise.
+	* read.c: Likewise.
+	* stabs.c: Likewise.
+	* subsegs.c: Likewise.
+	* config/obj-coff.c: Likewise.
+	* config/obj-elf.c: Likewise.
+	* config/obj-macho.c: Likewise.
+	* config/tc-aarch64.c: Likewise.
+	* config/tc-alpha.c: Likewise.
+	* config/tc-arc.c: Likewise.
+	* config/tc-arm.c: Likewise.
+	* config/tc-avr.c: Likewise.
+	* config/tc-cr16.c: Likewise.
+	* config/tc-cris.c: Likewise.
+	* config/tc-csky.c: Likewise.
+	* config/tc-dlx.c: Likewise.
+	* config/tc-hppa.c: Likewise.
+	* config/tc-i386.c: Likewise.
+	* config/tc-ia64.c: Likewise.
+	* config/tc-m32r.c: Likewise.
+	* config/tc-m68k.c: Likewise.
+	* config/tc-mips.c: Likewise.
+	* config/tc-mmix.c: Likewise.
+	* config/tc-mn10200.c: Likewise.
+	* config/tc-mn10300.c: Likewise.
+	* config/tc-nds32.c: Likewise.
+	* config/tc-nios2.c: Likewise.
+	* config/tc-ppc.c: Likewise.
+	* config/tc-riscv.c: Likewise.
+	* config/tc-s390.c: Likewise.
+	* config/tc-sh.c: Likewise.
+	* config/tc-tic4x.c: Likewise.
+	* config/tc-tic54x.c: Likewise.
+	* config/tc-xtensa.c: Likewise.
+
+2020-08-21  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (csky_insn_info): Add member last_isize.
+	(md_assemble): Assign value to csky_insn.last_isize.
+	* testsuite/gas/csky/enhance_dsp.d: Test bloop's two operands form.
+	* testsuite/gas/csky/enhance_dsp.s: Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* NEWS: Mention --reduce-memory-overheads and --hash-size arguments
+	options.
+	* as.c: Remove the options from help.
+	* doc/as.texi: Remove options.
+	* doc/internals.texi: Remove hash from documentation.
+	* hash.c (struct hash_entry): Remove.
+	(struct hash_control): Likewise.
+	(set_gas_hash_table_size): Likewise.
+	(hash_new_sized): Likewise.
+	(hash_new): Likewise.
+	(hash_die): Likewise.
+	(hash_lookup): Likewise.
+	(hash_insert): Likewise.
+	(hash_jam): Likewise.
+	(hash_replace): Likewise.
+	(hash_find): Likewise.
+	(hash_find_n): Likewise.
+	(hash_delete): Likewise.
+	(hash_traverse): Likewise.
+	(hash_print_statistics): Likewise.
+	(TABLES): Likewise.
+	(STATBUFSIZE): Likewise.
+	(main): Likewise.
+	(what): Likewise.
+	(destroy): Likewise.
+	(applicatee): Likewise.
+	(whattable): Likewise.
+	* hash.h (struct hash_control): Likewise.
+	(set_gas_hash_table_size): Likewise.
+	(hash_new): Likewise.
+	(hash_new_sized): Likewise.
+	(hash_die): Likewise.
+	(hash_insert): Likewise.
+	(hash_jam): Likewise.
+	(hash_replace): Likewise.
+	(hash_find): Likewise.
+	(hash_find_n): Likewise.
+	(hash_delete): Likewise.
+	(hash_traverse): Likewise.
+	(hash_print_statistics): Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* config/obj-coff-seh.c (seh_hash_insert): Port to use new
+	str_htab type.
+	(seh_hash_find): Likewise.
+	(seh_hash_find_or_make): Likewise.
+	* config/obj-coff.c (tag_init): Likewise.
+	(tag_insert): Likewise.
+	(tag_find): Likewise.
+	* config/obj-elf.c (struct group_list): Likewise.
+	(build_additional_section_info): Likewise.
+	(free_section_idx): Likewise.
+	(elf_adjust_symtab): Likewise.
+	(elf_frob_file_after_relocs): Likewise.
+	* config/tc-aarch64.c (INSN_SIZE): Likewise.
+	(parse_reg): Likewise.
+	(insert_reg_alias): Likewise.
+	(create_register_alias): Likewise.
+	(s_unreq): Likewise.
+	(parse_shift): Likewise.
+	(parse_pldop): Likewise.
+	(parse_barrier): Likewise.
+	(parse_barrier_psb): Likewise.
+	(parse_bti_operand): Likewise.
+	(parse_sys_reg): Likewise.
+	(parse_sys_ins_reg): Likewise.
+	(lookup_mnemonic): Likewise.
+	(opcode_lookup): Likewise.
+	(parse_operands): Likewise.
+	(checked_hash_insert): Likewise.
+	(sysreg_hash_insert): Likewise.
+	(fill_instruction_hash_table): Likewise.
+	(md_begin): Likewise.
+	* config/tc-alpha.c (struct alpha_reloc_tag): Likewise.
+	(get_alpha_reloc_tag): Likewise.
+	(assemble_tokens_to_insn): Likewise.
+	(assemble_tokens): Likewise.
+	(md_begin): Likewise.
+	* config/tc-arc.c (arc_find_opcode): Likewise.
+	(arc_insert_opcode): Likewise.
+	(find_opcode_match): Likewise.
+	(declare_register): Likewise.
+	(declare_addrtype): Likewise.
+	(md_begin): Likewise.
+	(arc_parse_name): Likewise.
+	(tc_arc_regname_to_dw2regnum): Likewise.
+	(arc_extcorereg): Likewise.
+	* config/tc-arm.c (MVE_BAD_QREG): Likewise.
+	(arm_reg_parse_multi): Likewise.
+	(parse_reloc): Likewise.
+	(insert_reg_alias): Likewise.
+	(create_register_alias): Likewise.
+	(s_unreq): Likewise.
+	(parse_shift): Likewise.
+	(parse_psr): Likewise.
+	(parse_cond): Likewise.
+	(parse_barrier): Likewise.
+	(do_vfp_nsyn_opcode): Likewise.
+	(opcode_lookup): Likewise.
+	(arm_tc_equal_in_insn): Likewise.
+	(md_begin): Likewise.
+	* config/tc-avr.c (md_begin): Likewise.
+	(avr_ldi_expression): Likewise.
+	(md_assemble): Likewise.
+	(avr_update_gccisr): Likewise.
+	(avr_emit_insn): Likewise.
+	* config/tc-cr16.c (get_register): Likewise.
+	(get_register_pair): Likewise.
+	(get_index_register): Likewise.
+	(get_index_register_pair): Likewise.
+	(get_pregister): Likewise.
+	(get_pregisterp): Likewise.
+	(initialise_reg_hash_table): Likewise.
+	(md_begin): Likewise.
+	(cr16_assemble): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-cris.c (cris_insn_first_word_frag): Likewise.
+	(md_begin): Likewise.
+	(cris_process_instruction): Likewise.
+	* config/tc-crx.c (get_register): Likewise.
+	(get_copregister): Likewise.
+	(md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-csky.c (md_begin): Likewise.
+	(parse_opcode): Likewise.
+	(get_operand_value): Likewise.
+	(v1_work_jbsr): Likewise.
+	(v2_work_rotlc): Likewise.
+	(v2_work_bgeni): Likewise.
+	(v2_work_not): Likewise.
+	* config/tc-d10v.c (sizeof): Likewise.
+	(md_begin): Likewise.
+	(do_assemble): Likewise.
+	(md_apply_fix): Likewise.
+	* config/tc-d30v.c (sizeof): Likewise.
+	(md_begin): Likewise.
+	(do_assemble): Likewise.
+	* config/tc-dlx.c (RELOC_DLX_VTENTRY): Likewise.
+	(md_begin): Likewise.
+	(machine_ip): Likewise.
+	* config/tc-ft32.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-h8300.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-hppa.c (pa_ip): Likewise.
+	(md_begin): Likewise.
+	* config/tc-i386.c (md_begin): Likewise.
+	(i386_print_statistics): Likewise.
+	(parse_insn): Likewise.
+	(process_operands): Likewise.
+	(i386_index_check): Likewise.
+	(parse_real_register): Likewise.
+	* config/tc-ia64.c (dot_rot): Likewise.
+	(dot_entry): Likewise.
+	(declare_register): Likewise.
+	(md_begin): Likewise.
+	(ia64_parse_name): Likewise.
+	(md_assemble): Likewise.
+	(dot_alias): Likewise.
+	(do_alias): Likewise.
+	(ia64_adjust_symtab): Likewise.
+	(do_secalias): Likewise.
+	(ia64_frob_file): Likewise.
+	* config/tc-m68hc11.c (m68hc11_print_statistics): Likewise.
+	(md_begin): Likewise.
+	(print_insn_format): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-m68k.c (tc_gen_reloc): Likewise.
+	(m68k_ip): Likewise.
+	(md_begin): Likewise.
+	* config/tc-mcore.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-microblaze.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	(md_apply_fix): Likewise.
+	* config/tc-mips.c (nopic_need_relax): Likewise.
+	(md_begin): Likewise.
+	(macro_build): Likewise.
+	(mips16_macro_build): Likewise.
+	(mips_lookup_insn): Likewise.
+	(mips_ip): Likewise.
+	(mips16_ip): Likewise.
+	* config/tc-mmix.c (sizeof): Likewise.
+	(mmix_md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-mn10200.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-mn10300.c (HAVE_AM30): Likewise.
+	(md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-moxie.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-msp430.c (md_begin): Likewise.
+	(msp430_operands): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-nds32.c (PV_DONT_CARE): Likewise.
+	(builtin_isreg): Likewise.
+	(builtin_regnum): Likewise.
+	(nds32_init_nds32_pseudo_opcodes): Likewise.
+	(nds32_lookup_pseudo_opcode): Likewise.
+	(nds32_relax_hint): Likewise.
+	(md_begin): Likewise.
+	(nds32_find_reloc_table): Likewise.
+	(nds32_elf_append_relax_relocs_traverse): Likewise.
+	(nds32_relax_branch_instructions): Likewise.
+	(md_convert_frag): Likewise.
+	(nds32_elf_analysis_relax_hint): Likewise.
+	(tc_nds32_regname_to_dw2regnum): Likewise.
+	* config/tc-nios2.c (nios2_opcode_lookup): Likewise.
+	(nios2_reg_lookup): Likewise.
+	(nios2_ps_lookup): Likewise.
+	(md_begin): Likewise.
+	* config/tc-ns32k.c (struct hash_control): Likewise.
+	(parse): Likewise.
+	(md_begin): Likewise.
+	* config/tc-pdp11.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-pj.c (fake_opcode): Likewise.
+	(alias): Likewise.
+	(md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-ppc.c (ppc_setup_opcodes): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-pru.c (pru_opcode_lookup): Likewise.
+	(pru_reg_lookup): Likewise.
+	(md_begin): Likewise.
+	(md_end): Likewise.
+	* config/tc-riscv.c (init_ext_version_hash): Likewise.
+	(riscv_get_default_ext_version): Likewise.
+	(riscv_set_arch): Likewise.
+	(init_opcode_names_hash): Likewise.
+	(opcode_name_lookup): Likewise.
+	(enum reg_class): Likewise.
+	(hash_reg_name): Likewise.
+	(riscv_init_csr_hash): Likewise.
+	(reg_csr_lookup_internal): Likewise.
+	(reg_lookup_internal): Likewise.
+	(init_opcode_hash): Likewise.
+	(md_begin): Likewise.
+	(DECLARE_CSR): Likewise.
+	(macro_build): Likewise.
+	(riscv_ip): Likewise.
+	* config/tc-s390.c (register_name): Likewise.
+	(s390_setup_opcodes): Likewise.
+	(md_begin): Likewise.
+	(md_assemble): Likewise.
+	(s390_insn): Likewise.
+	* config/tc-score.c (struct s3_reg_map): Likewise.
+	(s3_score_reg_parse): Likewise.
+	(s3_dependency_type_from_insn): Likewise.
+	(s3_parse_16_32_inst): Likewise.
+	(s3_parse_48_inst): Likewise.
+	(s3_insert_reg): Likewise.
+	(s3_build_reg_hsh): Likewise.
+	(s3_build_score_ops_hsh): Likewise.
+	(s3_build_dependency_insn_hsh): Likewise.
+	(s3_begin): Likewise.
+	* config/tc-score7.c (struct s7_reg_map): Likewise.
+	(s7_score_reg_parse): Likewise.
+	(s7_dependency_type_from_insn): Likewise.
+	(s7_parse_16_32_inst): Likewise.
+	(s7_build_score_ops_hsh): Likewise.
+	(s7_build_dependency_insn_hsh): Likewise.
+	(s7_insert_reg): Likewise.
+	(s7_build_reg_hsh): Likewise.
+	(s7_begin): Likewise.
+	* config/tc-sh.c (EMPTY): Likewise.
+	(md_begin): Likewise.
+	(find_cooked_opcode): Likewise.
+	* config/tc-sparc.c (md_begin): Likewise.
+	(sparc_ip): Likewise.
+	* config/tc-spu.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-tic30.c (md_begin): Likewise.
+	(tic30_operand): Likewise.
+	(tic30_parallel_insn): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-tic4x.c (TIC4X_ALT_SYNTAX): Likewise.
+	(tic4x_asg): Likewise.
+	(tic4x_inst_insert): Likewise.
+	(tic4x_inst_add): Likewise.
+	(md_begin): Likewise.
+	(tic4x_operand_parse): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-tic54x.c (MAX_SUBSYM_HASH): Likewise.
+	(stag_add_field_symbols): Likewise.
+	(tic54x_endstruct): Likewise.
+	(tic54x_tag): Likewise.
+	(tic54x_remove_local_label): Likewise.
+	(tic54x_clear_local_labels): Likewise.
+	(tic54x_var): Likewise.
+	(tic54x_macro_start): Likewise.
+	(tic54x_macro_info): Likewise.
+	(tic54x_macro_end): Likewise.
+	(subsym_isreg): Likewise.
+	(subsym_structsz): Likewise.
+	(md_begin): Likewise.
+	(is_mmreg): Likewise.
+	(is_type): Likewise.
+	(encode_condition): Likewise.
+	(encode_cc3): Likewise.
+	(encode_cc2): Likewise.
+	(encode_operand): Likewise.
+	(tic54x_parse_insn): Likewise.
+	(tic54x_parse_parallel_insn_firstline): Likewise.
+	(subsym_create_or_replace): Likewise.
+	(subsym_lookup): Likewise.
+	(subsym_substitute): Likewise.
+	(tic54x_undefined_symbol): Likewise.
+	* config/tc-tic6x.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-tilegx.c (O_hw2_last_plt): Likewise.
+	(INSERT_SPECIAL_OP): Likewise.
+	(md_begin): Likewise.
+	(tilegx_parse_name): Likewise.
+	(parse_reg_expression): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-tilepro.c (O_tls_ie_load): Likewise.
+	(INSERT_SPECIAL_OP): Likewise.
+	(tilepro_parse_name): Likewise.
+	(parse_reg_expression): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-v850.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-vax.c (md_ri_to_chars): Likewise.
+	(vip_begin): Likewise.
+	(vip): Likewise.
+	(main): Likewise.
+	(md_begin): Likewise.
+	* config/tc-wasm32.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-xgate.c (xgate_parse_operand): Likewise.
+	(md_begin): Likewise.
+	(md_assemble): Likewise.
+	* config/tc-z8k.c (md_begin): Likewise.
+	(md_assemble): Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* dw2gencfi.c (dwcfi_hash_insert): Use htab_t and str_hash_*
+	functions.
+	(dwcfi_hash_find): Likewise.
+	(dwcfi_hash_find_or_make): Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* ecoff.c (INIT_VARRAY): Use htab_t.
+	(add_string): Likewise.
+	(ecoff_read_begin_hook): Use new str_htab_create.
+	(get_tag): Use htab_t.
+	(add_file): Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* hash.h (struct string_tuple): New.
+	(hash_string_tuple): Likewise.
+	(eq_string_tuple): Likewise.
+	(string_tuple_alloc): Likewise.
+	(str_hash_find): Likewise.
+	(str_hash_find_n): Likewise.
+	(str_hash_delete): Likewise.
+	(str_hash_insert): Likewise.
+	(str_htab_create): Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* symbols.c (struct symbol_entry): New.
+	(hash_symbol_entry): Likewise.
+	(eq_symbol_entry): Likewise.
+	(symbol_entry_alloc): Likewise.
+	(symbol_entry_find): Likewise.
+	(local_symbol_make): Use htab hash table.
+	(local_symbol_convert): Likewise.
+	(symbol_table_insert): Likewise.
+	(symbol_find_exact_noref): Likewise.
+	(resolve_local_symbol): Likewise.
+	(resolve_local_symbol_values): Likewise.
+	(symbol_begin): Likewise.
+	(symbol_print_statistics): Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* read.c (struct po_entry): New.
+	(hash_po_entry): Likewise.
+	(eq_po_entry): Likewise.
+	(po_entry_alloc): Likewise.
+	(po_entry_find): Likewise.
+	(pop_insert): Likewise.
+	(pobegin): Use htab hash table.
+	(read_a_source_file): Likewise.
+	(s_macro): Likewise.
+	(read_print_statistics): Likewise.
+	* config/tc-m68k.c (m68k_conditional_pseudoop): Add const qualifier.
+	* config/tc-m68k.h (m68k_conditional_pseudoop): Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* config/tc-iq2000.c (iq2000_add_macro): Use htab hash table.
+	* macro.c (struct hash_control): Use htab.
+	(macro_init): Likewise.
+	(do_formals): Likewise.
+	(free_macro): Likewise.
+	(define_macro): Likewise.
+	(sub_actual): Likewise.
+	(macro_expand_body): Likewise.
+	(macro_expand): Likewise.
+	(check_macro): Likewise.
+	(delete_macro): Likewise.
+	(expand_irp): Likewise.
+	* macro.h (struct macro_hash_entry): New struct.
+	(hash_macro_entry): New.
+	(eq_macro_entry): Likewise.
+	(macro_entry_alloc): Likewise.
+	(macro_entry_find): Likewise.
+	(struct formal_hash_entry): Likewise.
+	(hash_formal_entry): Likewise.
+	(eq_formal_entry): Likewise.
+	(formal_entry_alloc): Likewise.
+	(formal_entry_find): Likewise.
+
+2020-08-20  Martin Liska  <mliska@suse.cz>
+
+	* as.h: Include hashtab.h.
+	* hash.c (htab_insert): New.
+	(htab_print_statistics): Likewise.
+	* hash.h (htab_insert): Likewise.
+	(htab_print_statistics): Likewise.
+
+2020-08-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/int128.s: Correct vcmpuq.
+	* testsuite/gas/ppc/int128.d: Update.
+	* testsuite/gas/ppc/xvtlsbb.d: Update.
+
+2020-08-18  Peter Bergner  <bergner@linux.ibm.com>
+
+	* testsuite/gas/ppc/vsx4.s: Update test to use new mnemonic.
+	* testsuite/gas/ppc/vsx4.d: Likewise.
+
+2020-08-17  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/obj-elf.c (obj_elf_change_section): When repurposing an
+	existing symbol, ensure that we set sy_value as per other (fresh)
+	section symbols.
+	* testsuite/gas/elf/elf.exp: Add new test.
+	* testsuite/gas/elf/section-symbol-redef.d: New test.
+	* testsuite/gas/elf/section-symbol-redef.s: Input for test.
+
+2020-08-13  Nick Clifton  <nickc@redhat.com>
+
+	PR 26359
+	* config/obj-som.c (obj_som_init_stab_section): Do nothing if the
+	$GDB_DEBUG$ section has already been created.
+
+2020-08-12  Joe Ramsay  <joe.ramsay@.arm.com>
+
+	* config/tc-arm.c (do_neon_cvt_1): Parse vcvtne as vcvt-ne for
+	NS_FD shape when MVE is present
+	* testsuite/gas/arm/mve-vcvtne-it-bad.d: New test.
+	* testsuite/gas/arm/mve-vcvtne-it-bad.l: New test.
+	* testsuite/gas/arm/mve-vcvtne-it-bad.s: New test.
+	* testsuite/gas/arm/mve-vcvtne-it.d: New test.
+	* testsuite/gas/arm/mve-vcvtne-it.s: New test.
+
+2020-08-12  Alex Coplan  <alex.coplan@arm.com>
+
+	* testsuite/gas/aarch64/mpam-bad.d: New test.
+	* testsuite/gas/aarch64/mpam-bad.l: Error output.
+	* testsuite/gas/aarch64/mpam-bad.s: Input.
+	* testsuite/gas/aarch64/mpam.d: New test.
+	* testsuite/gas/aarch64/mpam.s: Input.
+
+2020-08-12  Nick Clifton  <nickc@redhat.com>
+
+	PR 26346
+	* doc/c-riscv.texi (RISC-V-Options): Fix typo in the description
+	of the -mno-csr-check option.
+
+2020-08-12  Nick Clifton  <nickc@redhat.com>
+
+	* po/ru.po: Updated Russian translation.
+
+2020-08-10  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (parse_sys_reg): Don't assert when parsing
+	a long system register.
+	(parse_sys_ins_reg): Likewise.
+	(sysreg_hash_insert): New.
+	(md_begin): Use sysreg_hash_insert() to ensure all system
+	registers are no longer than the maximum length at startup.
+	* testsuite/gas/aarch64/invalid-sysreg-assert.d: New test.
+	* testsuite/gas/aarch64/invalid-sysreg-assert.l: Error output.
+	* testsuite/gas/aarch64/invalid-sysreg-assert.s: Input.
+
+2020-08-10  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>
+
+	* config/tc-aarch64.c (parse_sys_reg): Call to
+	aarch64_sys_ins_reg_supported_p instead of
+	aarch64_sys_reg_supported_p.
+	(parse_sys_ins_reg): Add aarch64_sys_reg_deprecated_p check.
+	* testsuite/gas/aarch64/illegal-sysreg-5.d: New test.
+	* testsuite/gas/aarch64/illegal-sysreg-5.l: New test.
+	* testsuite/gas/aarch64/sysreg-5.s: New test.
+
+2020-08-10  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/power8.d,
+	* testsuite/gas/ppc/power8.s: Add miso.
+	* testsuite/gas/ppc/power9.d,
+	* testsuite/gas/ppc/power8.s: Add exser, msgsndu, msgclru.
+
+2020-08-10  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/power8.d: Update.
+	* testsuite/gas/ppc/vsx2.d: Update.
+
+2020-08-10  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (md_assemble): Error for lmw, stmw, lswi, lswx,
+	stswi, or stswx in little-endian mode.
+	* testsuite/gas/ppc/476.d,
+	* testsuite/gas/ppc/476.s: Delete lmw, stmw, lswi, lswx, stswi, stswx.
+	* testsuite/gas/ppc/a2.d,
+	* testsuite/gas/ppc/a2.s: Move lmw, stmw, lswi, lswx, stswi, stswx..
+	* testsuite/gas/ppc/be.d,
+	* testsuite/gas/ppc/be.s: ..to here, new big-endian only test.
+	* testsuite/gas/ppc/le_error.d,
+	* testsuite/gas/ppc/le_error.l: New little-endian test.
+	* testsuite/gas/ppc/ppc.exp: Run new tests.
+
+2020-08-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* read.c (read_a_source_file): Ignore rest of line on overflow
+	error.
+
+2020-08-06  Alex Coplan  <alex.coplan@arm.com>
+
+	* read.c (read_a_source_file): Use long for local labels, detect
+	overflow and raise an error for overly-long labels.
+	* testsuite/gas/all/gas.exp: Add local-label-overflow test.
+	* testsuite/gas/all/local-label-overflow.d: New test.
+	* testsuite/gas/all/local-label-overflow.l: Error output.
+	* testsuite/gas/all/local-label-overflow.s: Input.
+
+2020-08-04  Christian Groessler  <chris@groessler.org>
+
+	* testsuite/gas/z8k/inout.d: Adapt to correct encoding of
+	"sout/soutb #imm,reg"
+
+2020-08-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention {disp16} pseudo prefix.
+
+2020-08-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/x86-64-pseudos.d: Revert an accidental
+	change.
+
+2020-08-04  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf2dbg.c (out_debug_abbrev): When DWARF2_VERSION >= 4, use
+	DW_FORM_udata for DW_AT_high_pc.
+	(out_debug_info): Use emit_leb128_expr for DW_AT_high_pc, when
+	DWARF2_VERSION >= 4.
+	* read.c (emit_leb128_exp): No longer static.
+	* read.h (emit_leb128_exp): Define.
+
+2020-08-02  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf2dbg.c (out_dir_and_file_list): For DWARF5 emit at
+	least one directory if there is at least one file. Use dirs[1]
+	if dirs[0] is not set, or if there is no dirs[1] the current
+	working directory. Use files[1] filename, when files[0] filename
+	isn't set.
+
+2020-08-02  Mark Wielaard  <mark@klomp.org>
+
+	* dwarf2dbg.c (out_debug_info): Emit unit type and abbrev offset
+	for DWARF5.
+	* testsuite/gas/elf/dwarf-4-cu.d: New file.
+	* testsuite/gas/elf/dwarf-4-cu.s: Likewise.
+	* testsuite/gas/elf/dwarf-5-cu.d: Likewise.
+	* testsuite/gas/elf/dwarf-5-cu.s: Likewise.
+	* testsuite/gas/elf/elf.exp: Run dwarf-4-cu and dwarf-5-cu.
+
+2020-08-02  Mark Wielaard  <mark@klomp.org>
+
+	* doc/as.texi (--gdwarf-[345]): Fix typo.
+
+2020-08-03  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* config/tc-msp430.c (OPTION_MOVE_DATA): Remove.
+	(md_parse_option): Remove case for OPTION_MOVE_DATA.
+	(md_longopts): Remove "md" entry.
+	(md_show_usage): Likewise.
+
+2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26305
+	* config/tc-i386.c (_i386_insn::disp_encoding): Add
+	disp_encoding_16bit.
+	(parse_insn): Check Prefix_XXX for pseudo prefixes.  Handle
+	{disp16}.
+	(build_modrm_byte): Handle {disp16}.
+	(i386_index_check): Check invalid {disp16} and {disp32} pseudo
+	prefixes.
+	* doc/c-i386.texi: Update {disp32} documentation and document
+	{disp16}.
+	* testsuite/gas/i386/i386.exp: Run x86-64-inval-pseudo.
+	* testsuite/gas/i386/inval-pseudo.s: Add {disp32}/{disp16}
+	tests.
+	* testsuite/gas/i386/pseudos.s: Add {disp8}/{disp32} vmovaps
+	tests with 128-byte displacement.  Add {disp16} tests.
+	* testsuite/gas/i386/x86-64-pseudos.s: Add {disp8}/{disp32}
+	vmovaps test.  Add (%r13)/(%r13d) tests.
+	* testsuite/gas/i386/x86-64-inval-pseudo.l: New file.
+	* testsuite/gas/i386/x86-64-inval-pseudo.s: Likewise.
+	* testsuite/gas/i386/inval-pseudo.l: Updated.
+	* testsuite/gas/i386/pseudos.d: Likewise.
+	* testsuite/gas/i386/x86-64-pseudos.d: Likewise.
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.
+	* Makefile.in, doc/Makefile.in: Regenerate.
+	* configure: Regenerate.
+
+2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/elf/dwarf2-3.d:Pass --gdwarf-3 to assembler.
+	* testsuite/gas/elf/dwarf2-5.d: Likewise.
+	* testsuite/gas/i386/dw2-compress-3a.d: Likewise.
+	* testsuite/gas/i386/dw2-compress-3b.d: Likewise.
+	* testsuite/gas/i386/dw2-compressed-3a.d: Likewise.
+	* testsuite/gas/i386/dw2-compressed-3b.d: Likewise.
+
+2020-07-30  Nick Clifton  <nickc@redhat.com>
+
+	* as.c (dwarf_level): Initialise to 3 in case this is not set on
+	the command line.
+
+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/gas/mips/global-local-symtab-sort-o32.d: New test.
+	* testsuite/gas/mips/global-local-symtab-sort-o32t.d: New test.
+	* testsuite/gas/mips/global-local-symtab-sort-n32.d: New test.
+	* testsuite/gas/mips/global-local-symtab-sort-n32t.d: New test.
+	* testsuite/gas/mips/global-local-symtab-sort-n64.d: New test.
+	* testsuite/gas/mips/global-local-symtab-sort-n64t.d: New test.
+	* testsuite/gas/mips/mips.exp: Run the new tests.
+
+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/gas/mips/global-local-symtab-o32.d: New test.
+	* testsuite/gas/mips/global-local-symtab-o32t.d: New test.
+	* testsuite/gas/mips/global-local-symtab-n32.d: New test.
+	* testsuite/gas/mips/global-local-symtab-n32t.d: New test.
+	* testsuite/gas/mips/global-local-symtab-n64.d: New test.
+	* testsuite/gas/mips/global-local-symtab.s: New test source.
+	* testsuite/gas/mips/mips.exp: Run the new tests.
+
+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26305
+	* config/tc-i386.c (build_modrm_byte): Use disp32/disp16 on
+	(%bp)/(%ebp)/(%rbp) for {disp32}.
+	* doc/c-i386.texi: Update {disp32} documentation.
+	* testsuite/gas/i386/pseudos.s: Add (%bp)/(%ebp) tests.
+	* testsuite/gas/i386/x86-64-pseudos.s: Add (%ebp)/(%rbp) tests.
+	* testsuite/gas/i386/pseudos.d: Updated.
+	* testsuite/gas/i386/x86-64-pseudos.d: Likewise.
+
+2020-07-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* doc/as.texi: Replace preceeded with preceded.
+
+2020-07-22  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/gas/mips/jal-svr4pic-irix.d: New file.
+	* testsuite/gas/mips/mips1@jal-svr4pic-irix.d: New file.
+	* testsuite/gas/mips/mipsr6@jal-svr4pic-irix.d: New file.
+	* testsuite/gas/mips/micromips@jal-svr4pic-irix.d: New file.
+	* testsuite/gas/mips/r3000@jal-svr4pic-irix.d: New file.
+	* testsuite/gas/mips/jal-svr4pic-local-irix.d: New file.
+	* testsuite/gas/mips/mips1@jal-svr4pic-local-irix.d: New file.
+	* testsuite/gas/mips/micromips@jal-svr4pic-local-irix.d: New
+	file.
+	* testsuite/gas/mips/r3000@jal-svr4pic-local-irix.d: New file.
+	* testsuite/gas/mips/jal-svr4pic-noreorder-irix.d: New file.
+	* testsuite/gas/mips/mips1@jal-svr4pic-noreorder-irix.d: New
+	file.
+	* testsuite/gas/mips/mipsr6@jal-svr4pic-noreorder-irix.d: New
+	file.
+	* testsuite/gas/mips/micromips@jal-svr4pic-noreorder-irix.d: New
+	file.
+	* testsuite/gas/mips/r3000@jal-svr4pic-noreorder-irix.d: New
+	file.
+	* testsuite/gas/mips/jal-xgot-irix.d: New file.
+	* testsuite/gas/mips/jalr2-irix.d: New file.
+	* testsuite/gas/mips/micromips-branch-relax-insn32-pic-irix.d:
+	New file.
+	* testsuite/gas/mips/micromips-branch-relax-pic-irix.d: New
+	file.
+	* testsuite/gas/mips/mips-abi32-pic2-irix.d: New file.
+	* testsuite/gas/mips/jal-svr4pic-local.d: Don't exclude
+	`*-*-irix*' targets.  Add source file designator.
+	* testsuite/gas/mips/mips1@jal-svr4pic-local.d: Don't exclude
+	`*-*-irix*' targets.
+	* testsuite/gas/mips/r3000@jal-svr4pic-local.d: Likewise.
+	* testsuite/gas/mips/micromips@jal-svr4pic-local.d: Likewise.
+	* testsuite/gas/mips/jalr2.d: Add name designator.
+	* testsuite/gas/mips/mips.exp: Use respective IRIX variants for
+	tests involving the JALR relocation throughout.
+
+2020-07-22  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/gas/mips/mips.exp: Use a helper variable for
+	IRIX/non-IRIX test selection.
+
+2020-07-21  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/evex-no-scale-64.d,
+	testsuite/gas/i386/addr32.d,
+	testsuite/gas/i386/x86-64-addr32-intel.d,
+	testsuite/gas/i386/x86-64-addr32.d: Adjust expectations.
+
+2020-07-21  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* config/tc-csky.c (md_begin): Fix tests of arch and mach flags.
+
+2020-07-21  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/evex-no-scale-32.d,
+	testsuite/gas/i386/evex-no-scale-64.d: Add #source and #pass.
+	* testsuite/gas/i386/evex-no-scale-32.s,
+	testsuite/gas/i386/evex-no-scale-64.s: Rename / fold into ...
+	* testsuite/gas/i386/evex-no-scale.s: ... this. Use .struct
+	instead of .section.
+	* testsuite/gas/i386/i386.exp: Move above tests out of ELF-
+	specific section.
+
+2020-07-21  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* config/tc-mips.c (prev_reloc_op_frag): Remove variable.
+	(my_getSmallExpression): Adjust accordingly.
+
+2020-07-20  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/4572
+	* config/tc-i386.c (i386_comment_chars): Drop TE_I386AIX from
+	conditional around it.
+	(md_begin): Insert backslash into operand_chars[] when slash is
+	a comment character.
+	* config/tc-i386-intel.c (i386_operator): Recognize \/, \%, and
+	\* as operators when / may be a comment character.
+	* testsuite/gas/i386/svr4.s, testsuite/gas/i386/svr4.d: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2020-07-20  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/4572
+	* app.c (last_char): Drop TC_ARM conditional around it.
+	(struct app_save): Drop TC_ARM conditional around last_char.
+	(app_push, app_pop): Drop TC_ARM conditional from last_char
+	accesses.
+	(do_scrub_chars): Likewise. Drop TC_ARM conditional from
+	backslash-precedes-comment-character check.
+
+2020-07-20  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (frag_opcode_byte): New.
+	(output_branch): Emit error when in absolute section.
+	(output_jump, output_insn): Use frag_opcode_byte. Handle being
+	in absolute section.
+	(output_interseg_jump, output_disp, output_imm): Handle being in
+	absolute section.
+	* testsuite/gas/i386/sizing.s,
+	testsuite/gas/i386/sizing32.d,
+	testsuite/gas/i386/sizing64.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-07-20  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/i386.exp: Include *-*-vxworks alongside
+	is_elf_format as applicable; merely exclude iamcu tests.
+
+2020-07-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26263
+	* config/tc-i386.c (i386_validate_fix): Change PLT32 reloc
+	against section to PC32 reloc.
+	* testsuite/gas/i386/relax-5.d: Updated.
+	* testsuite/gas/i386/x86-64-relax-4.d: Likewise.
+
+2020-07-15  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26237
+	* testsuite/gas/i386/evex-no-scale-64.d: Updated.
+	* testsuite/gas/i386/addr32.d: Likewise.
+	* testsuite/gas/i386/x86-64-addr32-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-addr32.d: Likewise.
+
+2020-07-15  Nick Clifton  <nickc@redhat.com>
+
+	* write.c (create_note_reloc): Add desc2_size parameter.  Zero out
+	the addend field of REL relocations.  Store the full addend into
+	the note for REL relocations.
+
+2020-07-15  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-stack.s: Adjust 32-bit push
+	immediate.
+	* testsuite/gas/i386/x86-64-stack-intel.d,
+	testsuite/gas/i386/x86-64-stack-suffix.d,
+	testsuite/gas/i386/x86-64-stack.d: Adjust expectations.
+
+2020-07-15  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/disassem.d,
+	testsuite/gas/i386/ilp32/x86-64-branch.d,
+	testsuite/gas/i386/intel.d, testsuite/gas/i386/jump16.d,
+	testsuite/gas/i386/lfence-load.d, testsuite/gas/i386/noreg16.d,
+	testsuite/gas/i386/noreg32.d,
+	testsuite/gas/i386/noreg64-rex64.d,
+	testsuite/gas/i386/noreg64.d, testsuite/gas/i386/notrack.d,
+	testsuite/gas/i386/opcode.d,
+	testsuite/gas/i386/solaris/x86-64-branch-2.d,
+	testsuite/gas/i386/solaris/x86-64-jump.d,
+	testsuite/gas/i386/solaris/x86-64-mpx-branch-1.d,
+	testsuite/gas/i386/solaris/x86-64-nop-3.d,
+	testsuite/gas/i386/solaris/x86-64-nop-4.d,
+	testsuite/gas/i386/solaris/x86-64-nop-5.d,
+	testsuite/gas/i386/solaris/x86-64-relax-2.d,
+	testsuite/gas/i386/solaris/x86-64-relax-3.d,
+	testsuite/gas/i386/x86-64-align-branch-1a.d,
+	testsuite/gas/i386/x86-64-align-branch-1b.d,
+	testsuite/gas/i386/x86-64-align-branch-1c.d,
+	testsuite/gas/i386/x86-64-align-branch-1d.d,
+	testsuite/gas/i386/x86-64-align-branch-1e.d,
+	testsuite/gas/i386/x86-64-align-branch-1f.d,
+	testsuite/gas/i386/x86-64-align-branch-1g.d,
+	testsuite/gas/i386/x86-64-align-branch-1h.d,
+	testsuite/gas/i386/x86-64-align-branch-1i.d,
+	testsuite/gas/i386/x86-64-align-branch-2a.d,
+	testsuite/gas/i386/x86-64-align-branch-2b.d,
+	testsuite/gas/i386/x86-64-align-branch-2c.d,
+	testsuite/gas/i386/x86-64-align-branch-3.d,
+	testsuite/gas/i386/x86-64-align-branch-4a.d,
+	testsuite/gas/i386/x86-64-align-branch-4b.d,
+	testsuite/gas/i386/x86-64-align-branch-5.d,
+	testsuite/gas/i386/x86-64-align-branch-6.d,
+	testsuite/gas/i386/x86-64-branch-2.d,
+	testsuite/gas/i386/x86-64-branch-3.d,
+	testsuite/gas/i386/x86-64-branch.d,
+	testsuite/gas/i386/x86-64-disassem.d,
+	testsuite/gas/i386/x86-64-disp32.d,
+	testsuite/gas/i386/x86-64-gotpcrel-no-relax.d,
+	testsuite/gas/i386/x86-64-gotpcrel.d,
+	testsuite/gas/i386/x86-64-ifunc.d,
+	testsuite/gas/i386/x86-64-jump.d,
+	testsuite/gas/i386/x86-64-lfence-byte.d,
+	testsuite/gas/i386/x86-64-lfence-indbr-a.d,
+	testsuite/gas/i386/x86-64-lfence-indbr-b.d,
+	testsuite/gas/i386/x86-64-lfence-indbr-c.d,
+	testsuite/gas/i386/x86-64-lfence-load.d,
+	testsuite/gas/i386/x86-64-lfence-ret-a.d,
+	testsuite/gas/i386/x86-64-lfence-ret-b.d,
+	testsuite/gas/i386/x86-64-lfence-ret-c.d,
+	testsuite/gas/i386/x86-64-lfence-ret-d.d,
+	testsuite/gas/i386/x86-64-lfence-ret-e.d,
+	testsuite/gas/i386/x86-64-mpx-add-bnd-prefix.d,
+	testsuite/gas/i386/x86-64-mpx-branch-1.d,
+	testsuite/gas/i386/x86-64-mpx.d,
+	testsuite/gas/i386/x86-64-nop-3.d,
+	testsuite/gas/i386/x86-64-nop-4.d,
+	testsuite/gas/i386/x86-64-nop-5.d,
+	testsuite/gas/i386/x86-64-nops-7.d,
+	testsuite/gas/i386/x86-64-notrack.d,
+	testsuite/gas/i386/x86-64-opcode.d,
+	testsuite/gas/i386/x86-64-relax-2.d,
+	testsuite/gas/i386/x86-64-relax-3.d,
+	testsuite/gas/i386/x86-64-relax-4.d,
+	testsuite/gas/i386/x86-64-rtm.d,
+	testsuite/gas/i386/x86-64-stack.d,
+	testsuite/gas/i386/x86-64-unique.d,
+	testsuite/gas/i386/x86_64-intel.d: Adjust expectations.
+
+2020-07-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26237
+	* testsuite/gas/i386/addr32.s: Add tests for 32-bit wrapped around
+	address.
+	* testsuite/gas/i386/x86-64-addr32.s: Likewise.
+	* testsuite/gas/i386/addr32.d: Updated.
+	* testsuite/gas/i386/x86-64-addr32-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-addr32.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-addr32-intel.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-addr32.d: Likewise.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/intel.s: Use dr<N> instead of db<N>.
+	* testsuite/gas/i386/intel-intel.d: Disambiguate name.
+	* testsuite/gas/i386/intel.d,
+	testsuite/gas/i386/opcode-intel.d: Adjust expectations.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/prefix.d: Adjust expectations.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-avx-intel.d,
+	testsuite/gas/i386/x86-64-sse4_2-intel.d: Adjust expectations.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/movbe-suffix.d,
+	testsuite/gas/i386/x86-64-movbe-suffix.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/crc32-suffix.d,
+	testsuite/gas/i386/x86-64-crc32-suffix.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+	* testsuite/gas/i386/arch-10-bdver1.d,
+	testsuite/gas/i386/arch-10-bdver2.d,
+	testsuite/gas/i386/arch-10-bdver3.d,
+	testsuite/gas/i386/arch-10-bdver4.d,
+	testsuite/gas/i386/arch-10-btver1.d,
+	testsuite/gas/i386/arch-10-btver2.d,
+	testsuite/gas/i386/arch-10-lzcnt.d,
+	testsuite/gas/i386/arch-10-prefetchw.d,
+	testsuite/gas/i386/arch-10.d, testsuite/gas/i386/arch-2.d,
+	testsuite/gas/i386/arch-3.d, testsuite/gas/i386/arch-5.d,
+	testsuite/gas/i386/arch-6.d, testsuite/gas/i386/crc32.d,
+	testsuite/gas/i386/sse-noavx.d, testsuite/gas/i386/sse4_2.d,
+	testsuite/gas/i386/x86-64-arch-2-bdver1.d,
+	testsuite/gas/i386/x86-64-arch-2-bdver2.d,
+	testsuite/gas/i386/x86-64-arch-2-bdver3.d,
+	testsuite/gas/i386/x86-64-arch-2-bdver4.d,
+	testsuite/gas/i386/x86-64-arch-2-btver1.d,
+	testsuite/gas/i386/x86-64-arch-2-btver2.d,
+	testsuite/gas/i386/x86-64-arch-2-lzcnt.d,
+	testsuite/gas/i386/x86-64-arch-2-prefetchw.d,
+	testsuite/gas/i386/x86-64-arch-2.d,
+	testsuite/gas/i386/x86-64-crc32.d,
+	testsuite/gas/i386/x86-64-pseudos.d,
+	testsuite/gas/i386/x86-64-sse-noavx.d,
+	testsuite/gas/i386/x86-64-sse4_2.d: Adjust expectations.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-pseudos.s: Add empty-REX tests for
+	ModR/M-encoded byte register cases.
+	* testsuite/gas/i386/x86-64-pseudos.d,
+	testsuite/gas/i386/x86-64-reg-intel.d,
+	testsuite/gas/i386/x86-64-reg.d: Adjust expectations.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-pseudos.s: Add empty-REX tests for
+	not-ModR/M-encoded byte register cases.
+	* testsuite/gas/i386/x86-64-pseudos.d: Adjust expectations.
+
+2020-07-14  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/ilp32/x86-64-arch-1.d,
+	testsuite/gas/i386/ilp32/x86-64-arch-2.d,
+	testsuite/gas/i386/ilp32/x86-64-avx-intel.d,
+	testsuite/gas/i386/ilp32/x86-64-avx.d,
+	testsuite/gas/i386/ilp32/x86-64-crc32-intel.d,
+	testsuite/gas/i386/ilp32/x86-64-crc32.d,
+	testsuite/gas/i386/ilp32/x86-64-gotpcrel.d,
+	testsuite/gas/i386/ilp32/x86-64-ifunc.d,
+	testsuite/gas/i386/ilp32/x86-64-reg-intel.d,
+	testsuite/gas/i386/ilp32/x86-64-reg.d,
+	testsuite/gas/i386/ilp32/x86-64-rep-suffix.d,
+	testsuite/gas/i386/ilp32/x86-64-sse4_2-intel.d,
+	testsuite/gas/i386/ilp32/x86-64-sse4_2.d,
+	testsuite/gas/i386/ilp32/x86-64-stack-intel.d,
+	testsuite/gas/i386/ilp32/x86-64-stack-suffix.d,
+	testsuite/gas/i386/ilp32/x86-64-stack.d: Reference parent dir
+	dump expectations.
+
+2020-07-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (offset_in_range): Remove 32-bit sign
+	extension.
+
+2020-07-13  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2020-07-13  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/dwarf2-7.d: Remove most xfails.
+	* testsuite/gas/elf/dwarf2-12.d: Likewise.
+	* testsuite/gas/elf/dwarf2-13.d: Likewise.
+	* testsuite/gas/elf/dwarf2-14.d: Likewise.
+
+2020-07-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (output_insn): Check i.xstate to set
+	GNU_PROPERTY_X86_FEATURE_2_TMM.
+	* testsuite/gas/i386/i386.exp: Run x86-64-property-7,
+	x86-64-property-8 and x86-64-property-9.
+	* testsuite/gas/i386/x86-64-property-7.d: New file.
+	* testsuite/gas/i386/x86-64-property-7.s: Likewise.
+	* testsuite/gas/i386/x86-64-property-8.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-8.s: Likewise.
+	* testsuite/gas/i386/x86-64-property-9.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-9.s: Likewise.
+
+2020-07-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (_i386_insn): Remove has_regmmx, has_regxmm,
+	has_regymm, has_regzmm and has_regtmm.  Add xstate.
+	(md_assemble): Set i.xstate from operand types in instruction
+	template.
+	(build_modrm_byte): Updated.
+	(output_insn): Check i.xstate.
+	* testsuite/gas/i386/i386.exp: Run property-6 and
+	x86-64-property-6.
+	* testsuite/gas/i386/property-6.d: New file.
+	* testsuite/gas/i386/property-6.s: Updated.
+	* testsuite/gas/i386/x86-64-property-6.d: Likewise.
+
+2020-07-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/property-5.d: Correct test name.
+
+2020-07-10  Lili Cui  <lili.cui@intel.com>
+
+	* NEWS: Mention support for Intel AMX instructions.
+	* config/tc-i386.c (i386_error): Add invalid_sib_address.
+	(cpu_arch): Add .amx_int8, .amx_bf16 and .amx_tile.
+	(cpu_noarch): Add noamx_int8, noamx_bf16 and noamx_tile.
+	(match_simd_size): Add tmmword check.
+	(operand_type_match): Add tmmword.
+	(type_names): Add rTMM.
+	(i386_error): Add invalid_tmm_register_set.
+	(check_VecOperands): Handle invalid_sib_address and
+	invalid_tmm_register_set.
+	(match_template): Handle invalid_sib_address.
+	(build_modrm_byte): Handle non-vector SIB and zmmword.
+	(i386_index_check): Disallow RegIP for non-vector SIB.
+	(check_register): Handle zmmword.
+	* doc/c-i386.texi: Document amx_int8, amx_bf16 and amx_tile.
+	* testsuite/gas/i386/i386.exp: Add AMX new tests.
+	* testsuite/gas/i386/intel-regs.d: Add tmm.
+	* testsuite/gas/i386/intel-regs.s: Add tmm.
+	* testsuite/gas/i386/x86-64-amx-intel.d: New.
+	* testsuite/gas/i386/x86-64-amx-inval.l: New.
+	* testsuite/gas/i386/x86-64-amx-inval.s: New.
+	* testsuite/gas/i386/x86-64-amx.d: New.
+	* testsuite/gas/i386/x86-64-amx.s: New.
+	* testsuite/gas/i386/x86-64-amx-bad.d: New.
+	* testsuite/gas/i386/x86-64-amx-bad.s: New.
+
+2020-07-10  Tom de Vries  <tdevries@suse.de>
+
+	* testsuite/gas/elf/dwarf2-11.d: Update expected output from
+	readelf's line table decoding.
+	* testsuite/gas/elf/dwarf2-12.d: Likewise.
+	* testsuite/gas/elf/dwarf2-13.d: Likewise.
+	* testsuite/gas/elf/dwarf2-14.d: Likewise.
+	* testsuite/gas/elf/dwarf2-15.d: Likewise.
+	* testsuite/gas/elf/dwarf2-16.d: Likewise.
+	* testsuite/gas/elf/dwarf2-17.d: Likewise.
+	* testsuite/gas/elf/dwarf2-18.d: Likewise.
+	* testsuite/gas/elf/dwarf2-19.d: Likewise.
+	* testsuite/gas/elf/dwarf2-5.d: Likewise.
+	* testsuite/gas/elf/dwarf2-6.d: Likewise.
+	* testsuite/gas/elf/dwarf2-7.d: Likewise.
+
+2020-07-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (output_insn): Set YMM/ZMM features for
+	VEX/EVEX vector instructions.
+	* testsuite/gas/i386/property-4.d: New file.
+	* testsuite/gas/i386/property-4.s: Likewise.
+	* testsuite/gas/i386/property-5.d: Likewise.
+	* testsuite/gas/i386/property-5.s: Likewise.
+	* testsuite/gas/i386/x86-64-property-4.d: Likewise.
+	* testsuite/gas/i386/x86-64-property-5.d: Likewise.
+
+2020-07-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention --enable-x86-used-note.
+	* configure.ac: Configure with --enable-x86-used-note by default
+	for Linux/x86.
+	* configure: Regenerated.
+
+2020-07-09  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-coff.h: Remove TE_PE support.
+	* config/tc-ppc.c: Likewise.
+	* config/tc-ppc.h: Likewise.
+	* configure.tgt: Remove powerpc PE and powerpc lynxos.
+	* testsuite/gas/cfi/cfi.exp (cfi-common-6): Remove powerpc PE
+	condition.
+	* testsuite/gas/macros/macros.exp: Don't xfail powerpc PE.
+
+2020-07-08  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/fma4-lig.d, testsuite/gas/i386/xop-lig.d:
+	New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-07-07  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* config/tc-arc.c (find_opcode_match): Add error messages.
+	* testsuite/gas/arc/add_s-err.s: Update test.
+	* testsuite/gas/arc/asm-errors.err: Likewise.
+	* testsuite/gas/arc/cpu-em-err.s: Likewise.
+	* testsuite/gas/arc/hregs-err.s: Likewise.
+	* testsuite/gas/arc/warn.s: Likewise.
+
+2020-07-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26212
+	* doc/c-i386.texi: Remove an incorrect AVX2 entry.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/all/gas.exp: Use is_xcoff_format.
+	* testsuite/gas/ppc/ppc.exp: Likewise.
+	* testsuite/gas/all/weakref1l.d: Likewise.
+
+2020-07-07  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/gas/arm/cde-missing-fp.l: Fix spelling mistake in
+	expected output.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-avx512bw-wig1.d,
+	testsuite/gas/i386/x86-64-avx512bw-wig1-intel.d,
+	testsuite/gas/i386/x86-64-evex-wig1.d,
+	testsuite/gas/i386/x86-64-evex-wig1-intel.d: Adjust
+	expectations.
+
+2020-07-06  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/avx512f-opts.s: Add EVEX movq tests.
+	* testsuite/gas/i386/x86-64-avx512f-opts.s: Add blank line.
+	* testsuite/gas/i386/avx512f-opts-intel.d,
+	testsuite/gas/i386/avx512f-opts.d
+	testsuite/gas/i386/x86-64-avx512f-opts-intel.d
+	testsuite/gas/i386/x86-64-avx512f-opts.d: Adjust expectations.
+
+2020-07-06  Yuri Chornoivan  <yurchor@ukr.net>
+
+	PR 26204
+	* config/tc-arm.c: Fix spelling mistake.
+	* config/tc-riscv.c: Likewise.
+	* config/tc-z80.c: Likewise.
+	* po/gas.pot: Regenerate.
+
+2020-07-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/uk.po: Updated Ukranian translation.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/gas.pot: Regenerate.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	* version.m4: Change version number to 2.35.50.
+	* configure: Regenerate.
+	* po/bfd.pot: Regenerate.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-07-03  Alan Modra  <amodra@gmail.com>
+
+	PR 26028
+	* testsuite/gas/ia64/unwind-ilp32.d: Add -T to readelf options.
+
+2020-07-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (build_modrm_byte): Check vexswapsources to
+	swap two source operands.
+
+2020-07-02  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/gas/all/fill-1.d: Skip for MeP targets.
+
+2020-07-02  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (reg_name_p): Fix cast so that we don't
+	segfault on negative chars.
+	* testsuite/gas/aarch64/reglike-label-unicode-segv.d: New test.
+	* testsuite/gas/aarch64/reglike-label-unicode-segv.s: Input.
+
+2020-07-02  Nick Clifton  <nickc@redhat.com>
+
+	PR 26028
+	* testsuite/gas/ia64/group-2.d: Add -T option to readelf
+	command line.
+	* testsuite/gas/ia64/unwind.d: Likewise.
+	* testsuite/gas/mmix/bspec-1.d: Likewise.
+	* testsuite/gas/mmix/bspec-2.d: Likewise.
+	* testsuite/gas/mmix/comment-1.d: Likewise.
+	* testsuite/gas/tic6x/scomm-directive-4.d: Likewise.
+
+2020-07-01  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-xc16x.c (md_apply_fix): Add FIXME.
+
+2020-07-01  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/all/eqv-dot.d: xfail targets that set linkrelax
+	in data sections, and mep.
+
+2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention x86 NaCl target support removal.
+	* config/tc-i386.c: Remove x86 NaCl target support.
+	* config/tc-i386.h: Likewise.
+	* configure.tgt: Likewise.
+	* testsuite/gas/i386/i386.exp: Likewise.
+	* testsuite/gas/i386/iamcu-1.d: Likewise.
+	* testsuite/gas/i386/iamcu-2.d: Likewise.
+	* testsuite/gas/i386/iamcu-3.d: Likewise.
+	* testsuite/gas/i386/iamcu-4.d: Likewise.
+	* testsuite/gas/i386/iamcu-5.d: Likewise.
+	* testsuite/gas/i386/k1om.d: Likewise.
+	* testsuite/gas/i386/l1om.d: Likewise.
+
+2020-06-30  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (riscv_csr_class_check): Removed.  Move the
+	checking into riscv_csr_address.
+	(riscv_csr_version_check): Likewise.
+	(riscv_csr_address): New function.  Return the suitable CSR address
+	after checking the ISA dependency and versions.  Issue warnings if
+	we find any conflict and -mcsr-check is set.  CSR_CLASS_F and
+	CSR_CLASS_DEBUG are unprivileged CSR for now, so don't check the
+	priv spec versions for them.
+	(reg_csr_lookup_internal): Call riscv_csr_address to find the
+	suitable CSR address.
+	* testsuite/gas/riscv/priv-reg-fail-fext.d: Remove -mpriv-spec=1.11.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-fext.l:  We don't care the
+	priv spec warnings here.  These warnings are added by accident.
+	Remove them and only focus on the ISA dependency warnings.
+	* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Updated since
+	dscratch0 and dscratch1 are regarded as the unprivileged CSR rather
+	than the privileged ones.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p10.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p11.l: Likewise.
+	* testsuite/gas/riscv/priv-reg.s: Likewise.  Add missing debug CSR.
+	* testsuite/gas/riscv/priv-reg-version-1p9.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-version-1p9p1.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-version-1p10.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-version-1p11.d: Likewise.
+	* testsuite/gas/riscv/csr-dw-regnums.d: Likewise.
+	* testsuite/gas/riscv/csr-dw-regnums.s: Likewise.
+
+2020-06-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (build_vex_prefix): Support VEX base opcode
+	length > 1.
+	(md_assemble): Don't process ImmExt without operands.
+
+2020-06-29  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	PR gas/25331
+	* config/tc-mmix.c (md_assemble) <fixup for
+	BFD_RELOC_MMIX_BASE_PLUS_OFFSET>: This fixup affects 1 byte, not 8.
+	Also, set its fx_no_overflow.
+	(md_convert_frag) <case ENCODE_RELAX (STATE_PUSHJSTUB, STATE_ZERO)>: 
+	Similarly this fixup affects 4 bytes, not 8 and needs its
+	fx_no_overflow set.
+	* config/tc-mmix.h (TC_FX_SIZE_SLACK): Don't define.
+	* testsuite/gas/mmix/pr25331.d, testsuite/gas/mmix/pr25331.s: New test.
+
+2020-06-29  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-s12z.c: Use C style comments.
+	* config/tc-z80.c: Likewise.
+	* config/tc-xtensa.c (emit_ld_r_n): Remove commented out code.
+
+2020-06-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (md_assemble): Process ImmExt without
+	operands.
+
+2020-06-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (check_VecOperands): Replace vecsib with sib.
+	Replace VecSIB128, VecSIB256 and VecSIB512 with VECSIB128,
+	VECSIB256 and VECSIB512, respectively.
+	(build_modrm_byte): Replace vecsib with sib.
+
+2020-06-26  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/nop-1-suffix.d: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2020-06-26  Pat Bernardi  <bernardi@adacore.com>
+
+	* config/tc-m68k.c (m68k_elf_gnu_attribute): New function.
+	(md_pseudo_table): Handle "gnu_attribute".
+	* doc/as.texi: Document GNU attribute for M68K.
+
+2020-06-25  Nick Clifton  <nickc@redhat.com>
+
+	PR 26141
+	* config/tc-arm.c (arm_force_relocation): Force resolution of
+	BFD_RELOC_THUMB_PCREL_BRANCH12 relocations.
+	* testsuite/gas/arm/plt-1.d: Adjust expected disassembly.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (md_assemble): Move call to process_immext()
+	...
+	(process_operands): ... here.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Skip ambiguous operand size
+	diagnostic when there is a sizing prefix.  Switch to word/dword/
+	qword encoding when there is a sizing prefix and no (explicit or
+	derived) suffix.
+	(update_imm): Handle presence of a sizing prefix.
+	* testsuite/gas/i386/noreg16-data32.d,
+	testsuite/gas/i386/noreg32-data16.d,
+	testsuite/gas/i386/noreg32-data16.e,
+	testsuite/gas/i386/noreg64-data16.d,
+	testsuite/gas/i386/noreg64-data16.e,
+	testsuite/gas/i386/noreg64-rex64.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+	* testsuite/gas/i386/noreg32.s, testsuite/gas/i386/noreg64.s:
+	Introduce and use pfx* macros.
+	* testsuite/gas/i386/noreg16.s: Likewise. Replace 32-bit
+	addressing.
+	* testsuite/gas/i386/noreg16.d: Adjust expectations.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/avx-16bit.d,
+	testsuite/gas/i386/avx-scalar.d, testsuite/gas/i386/avx.d,
+	testsuite/gas/i386/avx512f-16bit.d,
+	testsuite/gas/i386/avx512f.d,
+	testsuite/gas/i386/evex-lig256.d,
+	testsuite/gas/i386/evex-lig512.d
+	testsuite/gas/i386/evex-wig1.d, testsuite/gas/i386/katmai.d,
+	testsuite/gas/i386/noreg16.d, testsuite/gas/i386/noreg32.d,
+	testsuite/gas/i386/ptwrite.d, testsuite/gas/i386/simd.d,
+	testsuite/gas/i386/sse2-16bit.d,
+	testsuite/gas/i386/sse2.d, testsuite/gas/i386/sse2avx.d: Adjust
+	expectations.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (md_assemble): Also reject explicit REX
+	prefixes with VEX and alike encoded insns. Zap consumed bits
+	from i.rex.
+	(output_insn): Don't ignore REX prefix for VEX and alike
+	encodings; abort() instead if encountered.
+	* testsuite/gas/i386/x86-64-pseudos.s: Move REX-with-VEX cases
+	...
+	* testsuite/gas/i386/x86-64-pseudos-bad.s: ... here.
+	* testsuite/gas/i386/x86-64-pseudos.d,
+	testsuite/gas/i386/x86-64-pseudos-bad.l: Adjust expectations.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_operands): Translate explicit REX
+	prefix into i.rex for SSE2AVX templates.
+	(set_rex_vrex): New helper.
+	(build_modrm_byte): Use it.
+	* testsuite/gas/i386/x86-64-sse2avx.s: Add cases with explicit
+	REX prefixes.
+	* testsuite/gas/i386/x86-64-sse2avx.d: Adjust expectations.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (cpu_flags_match): Only match SSE2AVX
+	templates when there's no data size prefix.
+	(md_assemble): Reject data size prefix also for legacy encoded
+	SIMD templates.
+	* testsuite/gas/i386/prefix32.s, testsuite/gas/i386/prefix64.s:
+	Uncomment previously not working line.
+	* testsuite/gas/i386/sse2avx.s: Add ldmxcsr/stmxcsr cases with
+	data16 prefix.
+	* testsuite/gas/i386/prefix32.l, testsuite/gas/i386/prefix64.l,
+	testsuite/gas/i386/sse2avx.d: Adjust expectations.
+
+2020-06-25  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (build_evex_prefix): Drop early setting of
+	vec_length.
+
+2020-06-23  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (explicit_priv_attr): Rename explicit_csr to
+	explicit_priv_attr.  It used to indicate CSR or priv instructions are
+	explicitly used.
+	(riscv_is_priv_insn): Return True if it is a privileged instruction.
+	(riscv_ip): Call riscv_is_priv_insn to check whether the instruction
+	is privileged or not.  If it is, then set explicit_priv_attr to TRUE.
+	(riscv_write_out_attrs): Clarification of when to generate the elf
+	priv spec attributes.
+	* testsuite/gas/riscv/attribute-11.s: Add comments.
+	* testsuite/gas/riscv/attribute-14.s: New testcase.  Use symbol
+	`priv_insn_<n>` to decide which priv instruction is expected to used.
+	(<n> is a to e.)
+	* testsuite/gas/riscv/attribute-14a.d: Likewise.
+	* testsuite/gas/riscv/attribute-14b.d: Likewise.
+	* testsuite/gas/riscv/attribute-14c.d: Likewise.
+	* testsuite/gas/riscv/attribute-14d.d: Likewise.
+	* testsuite/gas/riscv/attribute-14e.d: Likewise.
+
+2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (buf_size, buf): Remove the unused variables.
+	(riscv_set_default_priv_spec): Get the priv spec version from the
+	priv spec attributes by riscv_get_priv_spec_class_from_numbers.
+
+2020-06-20  Alan Modra  <amodra@gmail.com>
+
+	* configure.tgt: Set bfd_gas for all SH targets.
+
+2020-06-18  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/arch-13.s: Add alternative VMGEXIT case.
+	* testsuite/gas/i386/arch-13.d: Extend -march=. Adjust
+	expectations.
+
+2020-06-16  Lili Cui  <lili.cui@intel.com>
+
+	* config/tc-i386.c (cpu_arch): Correct noavx512_vp2intersect
+	cpu_arch to CPU_ANY_VP2INTERSECT_FLAGS.
+	* doc/c-i386.texi: Add avx512_vp2intersect.
+
+2020-06-16  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (md_assemble): Drop SSE4a from SSE check
+	conditional.
+	* testsuite/gas/i386/sse-check.s: Adjust comment.
+	* testsuite/gas/i386/sse-check-error.l,
+	testsuite/gas/i386/sse-check-warn.e,
+	testsuite/gas/i386/x86-64-sse-check-error.l: Adjust
+	expectations.
+
+2020-06-16  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-tic30.h: Remove OBJ_AOUT support.
+	* configure.tgt: Delete tic30-*-*aout* entry.
+
+2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* config/tc-xtensa.c (XTHAL_ABI_WINDOWED, XTHAL_ABI_CALL0): New
+	macros.
+	(elf32xtensa_abi): New declaration.
+	(option_abi_windowed, option_abi_call0): New enum constants.
+	(md_longopts): Add entries for --abi-windowed and --abi-call0.
+	(md_parse_option): Add handlers for --abi-windowed and
+	--abi-call0.
+	(xtensa_add_config_info): Use xtensa_abi_choice instead of
+	XSHAL_ABI to format ABI tag.
+	* doc/as.texi (Target Xtensa options): Add --abi-windowed and
+	--abi-call0 to the list of options.
+	* doc/c-xtensa.texi: Add description for options --abi-windowed
+	and --abi-call0.
+	* testsuite/gas/xtensa/abi-call0.d: New test definition.
+	* testsuite/gas/xtensa/abi-windowed.d: New test definition.
+	* testsuite/gas/xtensa/abi.s: New test source.
+
+2020-06-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26115
+	* testsuite/gas/i386/tsxldtrk.d: Replace xsuspldtrk with
+	xsusldtrk.
+	* testsuite/gas/i386/tsxldtrk.s: Likewise.
+	* testsuite/gas/i386/x86-64-tsxldtrk.d: Likewise.
+	* testsuite/gas/i386/x86-64-tsxldtrk.s: Likewise.
+
+2020-06-12  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9.d: Removed.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-version-1p9.d: Likewise.
+
+2020-06-09  Seth Girvan  <snth@snthhacks.com>
+
+	* doc/c-avr.texi: Improve wording.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-pseudos-bad.s,
+	testsuite/gas/i386/x86-64-pseudos-bad.l: New.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/prefix.s: Add bogus prefix-with-VEX/EVEX
+	encoding tests.
+	* testsuite/gas/i386/prefix.d: Adjust expectations.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/prefix.s: Add bogus REP / EVEX.W prefix
+	with VEX/EVEX encoding tests.
+	* testsuite/gas/i386/prefix.d: Adjust expectations.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Restrict defaulting to 'q'
+	suffix.
+	* testsuite/gas/i386/noreg64.s: Add lcall/ljmp cases.
+	* testsuite/gas/i386/noreg64.d: Adjust expectations.
+	* testsuite/gas/i386/noreg-intel64.d,
+	testsuite/gas/i386/noreg-intel64.l,
+	testsuite/gas/i386/noreg-intel64.s: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-06-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (vex_encoding_error): New enumerator.
+	(VEX_check_operands): Rename to VEX_check_encoding. Check
+	for vex_encoding_error. Move Imm4 handling ...
+	(check_VecOperands): ... here.
+	(match_template): Call VEX_check_encoding when there are no
+	operands. Split construct calling check_VecOperands and
+	VEX_check_encoding (when there are operands).
+	(check_register): Don't blindly set vex_encoding_evex.
+	* testsuite/gas/i386/pseudos-bad.s,
+	testsuite/gas/i386/pseudos-bad.l: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+	* testsuite/gas/i386/xmmhi64.s: Drop {vex2}.
+
+2020-06-08  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-arm.c (insns): Add dfb.
+	* testsuite/gas/arm/dfb.d: New test.
+	* testsuite/gas/arm/dfb.s: Input for test.
+
+2020-06-08  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/gas/cfi/cfi-i386-2.d: Skip for PE based targets.
+
+2020-06-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (pi): Add checks for RegMask and RegBND.
+
+2020-06-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (check_byte_reg): Drop dead conditional
+	around as_bad().
+
+2020-06-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (check_register): Split RegTR handling, to
+	fail recognition also in 64-bit mode as well as with i586 or
+	i686 explicitly enabled.
+	* testsuite/gas/i386/x86_64.s: Add insns referencing tr<N>.
+	* testsuite/gas/i386/x86_64-intel.d,
+	testsuite/gas/i386/x86_64.d: Adjust expectations.
+
+2020-06-08  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/cfi/cfi-i386-2.d: Adjust expectations.
+	* testsuite/gas/cfi/cfi.exp: Run this test.
+
+2020-06-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (parse_real_register): Add allow_pseudo_reg
+	check to %st(N) parsing logic.
+	* testsuite/gas/cfi/cfi-i386.s: Set "generic32" arch.
+
+2020-06-08  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (bad_reg): New.
+	(check_VecOperations, i386_att_operand, i386_parse_name): Check
+	for it.
+	(check_register): New, broken out from ...
+	(parse_real_register): ... here. Call it.
+	(parse_register): Call it, and error upon failure.
+	* testsuite/gas/i386/equ-bad.s, testsuite/gas/i386/equ-bad.l,
+	testsuite/gas/i386/x86-64-equ-bad.s,
+	testsuite/gas/i386/x86-64-equ-bad.l: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (md_show_usage): Mention -mpower10 and -mpwr10.
+	* doc/c-ppc.texi: Likewise.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c: Update throughout for reloc renaming.
+
+2020-06-05  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* config/tc-bpf.c (md_apply_fix): Avoid GCC 10 warning
+	stringop-overflow.
+
+2020-06-05  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (explicit_csr): New static boolean.
+	Used to indicate CSR are explicitly used.
+	(riscv_ip): Set explicit_csr to TRUE if any CSR is used.
+	(riscv_write_out_attrs): If we already have set elf priv
+	attributes, then generate them.  Otherwise, don't generate
+	them when no CSR are used.
+	* testsuite/gas/riscv/attribute-01.d: Remove the priv attributes.
+	* testsuite/gas/riscv/attribute-02.d: Likewise.
+	* testsuite/gas/riscv/attribute-03.d: Likewise.
+	* testsuite/gas/riscv/attribute-04.d: Likewise.
+	* testsuite/gas/riscv/attribute-05.d: Likewise.
+	* testsuite/gas/riscv/attribute-06.d: Likewise.
+	* testsuite/gas/riscv/attribute-07.d: Likewise.
+	* testsuite/gas/riscv/attribute-08.d: Likewise.
+	* testsuite/gas/riscv/attribute-09.d: Likewise.
+	* testsuite/gas/riscv/attribute-10.d: Likewise.
+	* testsuite/gas/riscv/attribute-unknown.d: Likewise.
+	* testsuite/gas/riscv/attribute-11.s: New testcase.
+	* testsuite/gas/riscv/attribute-11.d: New testcase.  The CSR is
+	used, so we should output the ELF priv attributes.
+	* testsuite/gas/riscv/attribute-12.d: New testcase.  The CSR is
+	used, so output the priv attributes according to the -mpriv-spec.
+	* testsuite/gas/riscv/attribute-13.d: New testcase.  The CSR isn't
+	used, so ignore the -mpriv-spec setting.
+
+2020-06-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-ip2k. (ip2k_apply_fix): Pass endianness to
+	cgen_get_insn_value.
+	* config/tc-xstormy16.c (xstormy16_md_apply_fix): Pass
+	endianness to cgen_get_insn_value and cgen_put_insn_value.
+
+2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* config/tc-bpf.c (md_apply_fix): Simplify and avoid using
+	cgen_put_insn_value.
+
+2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* config/tc-bpf.c (md_begin): Pass CGEN_CPU_OPEN_INSN_ENDIAN to
+	bpf_cgen_cpu_open.
+	(md_assemble): Remove no longer needed hack.
+
+2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* cgen.c (gas_cgen_finish_insn): Pass the endianness to
+	cgen_put_insn_value.
+	(gas_cgen_md_apply_fix): Likewise.
+	(gas_cgen_md_apply_fix): Likewise.
+	* config/tc-bpf.c (md_apply_fix): Pass data endianness to
+	cgen_put_insn_value.
+	* config/tc-mep.c (mep_check_ivc2_scheduling): Pass endianness to
+	cgen_put_insn_value.
+
+2020-06-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/config/default.exp: Remove global directive outside
+	proc body.
+	* testsuite/gas/mep/complex-relocs.exp: Likewise.
+	* testsuite/gas/microblaze/relax_size.exp: Likewise.
+	* testsuite/gas/microblaze/reloc_sym.exp: Likewise.
+	* testsuite/gas/mt/relocs.exp: Likewise.
+	* testsuite/gas/rx/rx.exp: Likewise.
+
+2020-06-03  Stephen Casner  <casner@acm.org>
+
+	* doc/c-riscv.texi (RISC-V-Options): Fix non-ASCII apostrophe.
+
+2020-06-02  Frédéric Pétrot  <frederic.petrot@univ-grenoble-alpes.fr>
+	    Jim Wilson  <jimw@sifive.com>
+
+	PR 26051
+	* doc/c-riscv.texi (RISC-V-Formats): Add missing I format using
+	simm12(rs1).  Correct S format to use simm12(rs1).  Drop SB and B
+	formats using simm12(rs1).  Correct SB and B to use rs1 and rs2.
+	Move B before SB.  Move J before UJ.
+
+2020-06-01  Alex Coplan  <alex.coplan@arm.com>
+
+	* write.c (relax_segment): Fix handling of negative offset when
+	relaxing an rs_org frag.
+	* testsuite/gas/aarch64/org-neg.d: New test.
+	* testsuite/gas/aarch64/org-neg.l: Error output for test.
+	* testsuite/gas/aarch64/org-neg.s: Input for test.
+	* testsuite/gas/arm/org-neg.d: New test.
+	* testsuite/gas/arm/org-neg.l: Error output for test.
+	* testsuite/gas/arm/org-neg.s: Input for test.
+
+2020-05-28  Stephen Casner  <casner@acm.org>
+
+	Fix unexpected failures in gas testsuite for pdp11-aout target.
+	These are caused by the PDP11's mix of little-endian octets in
+	shorts but shorts in big endian order for long or quad.
+
+	* config/tc-pdp11.c (md_number_to_chars): Implement .quad
+	* testsuite/gas/all/gas.exp: Select alternate test scripts for
+	pdp11, skip octa test completely.
+	* testsuite/gas/all/eqv-dot-pdp11.s: Identical to eqv-dot.s
+	* testsuite/gas/all/eqv-dot-pdp11.d: Match different octet order.
+	* testsuite/gas/all/cond-pdp11.l: Match different octet order.
+
+2020-05-28  Alex Coplan  <alex.coplan@arm.com>
+
+	* frags.c (frag_grow): Fix comment.
+
+2020-05-27  Stephen Casner  <casner@acm.org>
+
+	PR gas/26001
+	* config/tc-pdp11.c (parse_reg): Distinguish register names from
+	symbols that begin with a register name.
+	* testsuite/gas/pdp11/pdp11.exp: Add test of such symbols.
+	* testsuite/gas/pdp11/pr26001.s: Likewise.
+	* testsuite/gas/pdp11/pr26001.d: Likewise.
+
+2020-05-27  Simon Cook  <simon.cook@embecosm.com>
+
+	* config/tc-riscv.c (riscv_init_csr_hash): NULL initilize next
+	pointer when creating struct riscv_csr_extra.
+
+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/align-branch-9.d: Updated for PECOFF.
+	* testsuite/gas/i386/inval-avx512f.s: Add .p2align for PECOFF.
+	* testsuite/gas/i386/inval-avx512f.l: Updated.
+
+2020-05-26  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>
+
+	* testsuite/gas/s390/zarch-z13.d: Add regexp checks for vector
+	load/store instruction variants with alignment hints.
+	* testsuite/gas/s390/zarch-z13.s: Emit new vector load/store
+	instruction variants with alignment hints.
+
+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26044
+	* config/tc-xgate.c (md_apply_fix): Check BFD_RELOC_XGATE_PCREL_X
+	instead of R_XGATE_PCREL_X.
+	(xgate_parse_operand): Replace R_XGATE_PCREL_X with
+	BFD_RELOC_XGATE_PCREL_X.
+
+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26044
+	* config/tc-visium.c (md_convert_frag): Replace fragP->fr_literal
+	with &fragP->fr_literal[0].
+
+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26044
+	* config/tc-vax.c (md_estimate_size_before_relax): Replace
+	fragP->fr_literal with &fragP->fr_literal[0].
+	(md_convert_frag): Likewise.
+
+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26044
+	* config/tc-v850.c (md_convert_frag): Replace fragP->fr_literal
+	with &fragP->fr_literal[0].
+
+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26044
+	* config/tc-crx.c (getreg_image): Change argument type to int.
+	(md_convert_frag): Replace fragP->fr_literal with
+	&fragP->fr_literal[0].
+
+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26044
+	* onfig/tc-score.c (s3_do_macro_bcmp): Replace overlapping
+	sprintf with memmove.
+
+2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-mcore.c (md_convert_frag): Replace fragP->fr_literal
+	with &fragP->fr_literal[0].
+
+2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26041
+	* config/tc-cr16.c (md_assemble): Use memmove to concatenate
+	2 overlapping strings.
+
+2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-cr16.c (md_convert_frag): Replace fragP->fr_literal
+	with &fragP->fr_literal[0].
+
+2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-csky.c (md_convert_frag): Replace fragp->fr_literal
+	with &fragp->fr_literal[0].
+	* config/tc-microblaze.c (md_apply_fix): Likewise.
+	* config/tc-sh.c (md_convert_frag): Likewise.
+
+2020-05-24  Jim Wilson  <jimw@sifive.com>
+
+	PR 26025
+	* config/tc-riscv.c (riscv_pre_output_hook): Change s type from const
+	asection to segT.  New locals seg and subseg.  Call subseg_set before
+	fix_new_exp.  Call subseg_set after loop to restore original values.
+
+2020-05-21  Alan Modra  <amodra@gmail.com>
+
+	* atof-generic.c: Replace "if (x) free (x)" with "free (x)"
+	throughout.
+	* config/obj-elf.c: Likewise.
+	* config/tc-aarch64.c: Likewise.
+	* config/tc-arm.c: Likewise.
+	* config/tc-m68k.c: Likewise.
+	* config/tc-nios2.c: Likewise.
+	* config/tc-tic30.c: Likewise.
+	* ecoff.c: Likewise.
+	* read.c: Likewise.
+	* stabs.c: Likewise.
+	* symbols.c: Likewise.
+	* testsuite/gas/all/test-gen.c: Likewise.
+
+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/gas/riscv/priv-reg-fail-read-only-01.s: Updated.
+	* config/tc-riscv.c (default_arch_with_ext, default_isa_spec):
+	Static variables which are used to set the ISA extensions. You can
+	use -march (or ELF build attributes) and -misa-spec to set them,
+	respectively.
+	(ext_version_hash): The hash table used to handle the extensions
+	with versions.
+	(init_ext_version_hash): Initialize the ext_version_hash according
+	to riscv_ext_version_table.
+	(riscv_get_default_ext_version): The callback function of
+	riscv_parse_subset_t.  According to the choosed ISA spec,
+	get the default version for the specific extension.
+	(riscv_set_arch): Set the callback function.
+	(enum options, struct option md_longopts): Add new option -misa-spec.
+	(md_parse_option): Do not call riscv_set_arch for -march.  We will
+	call it later in riscv_after_parse_args.  Call riscv_get_isa_spec_class
+	to set default_isa_spec class.
+	(riscv_after_parse_args): Call init_ext_version_hash to initialize the
+	ext_version_hash, and then call riscv_set_arch to set the architecture
+	with versions according to default_arch_with_ext.
+	* testsuite/gas/riscv/attribute-02.d: Set 0p0 as default version for
+	x extensions.
+	* testsuite/gas/riscv/attribute-03.d: Likewise.
+	* testsuite/gas/riscv/attribute-09.d: New testcase.  For i-ext, we
+	already set it's version to 2p1 by march, so no need to use the default
+	2p2 version.  For m-ext, we do not set the version by -march and ELF arch
+	attribute, so set the default 2p0 to it.  For zicsr, it is not defined in
+	ISA spec 2p2, so set 0p0 to it.
+	* testsuite/gas/riscv/attribute-10.d: New testcase.  The version of
+	zicsr is 2p0 according to ISA spec 20191213.
+	* config/tc-riscv.c (DEFAULT_RISCV_ARCH_WITH_EXT)
+	(DEFAULT_RISCV_ISA_SPEC): Default configure option settings.
+	You can set them by configure options --with-arch and
+	--with-isa-spec, respectively.
+	(riscv_set_default_isa_spec): New function used to set the
+	default ISA spec.
+	(md_parse_option): Call riscv_set_default_isa_spec rather than
+	call riscv_get_isa_spec_class directly.
+	(riscv_after_parse_args): If the -isa-spec is not set, then we
+	set the default ISA spec according to DEFAULT_RISCV_ISA_SPEC by
+	calling riscv_set_default_isa_spec.
+	* testsuite/gas/riscv/attribute-01.d: Add -misa-spec=2.2, since
+	the --with-isa-spec may be set to different ISA spec.
+	* testsuite/gas/riscv/attribute-02.d: Likewise.
+	* testsuite/gas/riscv/attribute-03.d: Likewise.
+	* testsuite/gas/riscv/attribute-04.d: Likewise.
+	* testsuite/gas/riscv/attribute-05.d: Likewise.
+	* testsuite/gas/riscv/attribute-06.d: Likewise.
+	* testsuite/gas/riscv/attribute-07.d: Likewise.
+	* configure.ac: Add configure options, --with-arch and
+	--with-isa-spec.
+	* configure: Regenerated.
+	* config.in: Regenerated.
+	* config/tc-riscv.c (default_priv_spec): Static variable which is
+	used to check if the CSR is valid for the chosen privilege spec. You
+	can use -mpriv-spec to set it.
+	(enum reg_class): We now get the CSR address from csr_extra_hash rather
+	than reg_names_hash.  Therefore, move RCLASS_CSR behind RCLASS_MAX.
+	(riscv_init_csr_hashes): Only need to initialize one hash table
+	csr_extra_hash.
+	(riscv_csr_class_check): Change the return type to void.  Don't check
+	the ISA dependency if -mcsr-check isn't set.
+	(riscv_csr_version_check): New function.  Check and find the CSR address
+	from csr_extra_hash, according to default_priv_spec.  Report warning
+	for the invalid CSR if -mcsr-check is set.
+	(reg_csr_lookup_internal): Updated.
+	(reg_lookup_internal): Likewise.
+	(md_begin): Updated since DECLARE_CSR and DECLARE_CSR_ALIAS are changed.
+	(enum options, struct option md_longopts): Add new GAS option -mpriv-spec.
+	(md_parse_option): Call riscv_set_default_priv_version to set
+	default_priv_spec.
+	(riscv_after_parse_args): If -mpriv-spec isn't set, then set the default
+	privilege spec to the newest one.
+	(enum riscv_csr_class, struct riscv_csr_extra): Move them to
+	include/opcode/riscv.h.
+	* testsuite/gas/riscv/priv-reg-fail-fext.d: This test case just want
+	to check the ISA dependency for CSR, so fix the spec version by adding
+	-mpriv-spec=1.11.
+	* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.  There are some
+	version warnings for the test case.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-02.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9.d: New test case.
+	Check whether the CSR is valid when privilege version 1.9 is choosed.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: New test case.
+	Check whether the CSR is valid when privilege version 1.9.1 is choosed.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p10.d: New test case.
+	Check whether the CSR is valid when privilege version 1.10 is choosed.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p10.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p11.d: New test case.
+	Check whether the CSR is valid when privilege version 1.11 is choosed.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p11.l: Likewise.
+	* config/tc-riscv.c (DEFAULT_RISCV_ISA_SPEC): Default configure option
+	setting.  You can set it by configure option --with-priv-spec.
+	(riscv_set_default_priv_spec): New function used to set the default
+	privilege spec.
+	(md_parse_option): Call riscv_set_default_priv_spec rather than
+	call riscv_get_priv_spec_class directly.
+	(riscv_after_parse_args): If -mpriv-spec isn't set, then we set the
+	default privilege spec according to DEFAULT_RISCV_PRIV_SPEC by
+	calling riscv_set_default_priv_spec.
+	* testsuite/gas/riscv/csr-dw-regnums.d: Add -mpriv-spec=1.11, since
+	the --with-priv-spec may be set to different privilege spec.
+	* testsuite/gas/riscv/priv-reg.d: Likewise.
+	* configure.ac: Add configure option --with-priv-spec.
+	* configure: Regenerated.
+	* config.in: Regenerated.
+	* config/tc-riscv.c (explicit_attr): Rename explicit_arch_attr to
+	explicit_attr.  Set it to TRUE if any ELF attribute is found.
+	(riscv_set_default_priv_spec): Try to set the default_priv_spec if
+	the priv attributes are set.
+	(md_assemble): Set the default_priv_spec according to the priv
+	attributes when we start to assemble instruction.
+	(riscv_write_out_attrs): Rename riscv_write_out_arch_attr to
+	riscv_write_out_attrs.  Update the arch and priv attributes.  If we
+	don't set the corresponding ELF attributes, then try to output the
+	default ones.
+	(riscv_set_public_attributes): If any ELF attribute or -march-attr
+	options is set (explicit_attr is TRUE), then call riscv_write_out_attrs
+	to update the arch and priv attributes.
+	(s_riscv_attribute): Make sure all arch and priv attributes are set
+	before any instruction.
+	* testsuite/gas/riscv/attribute-01.d: Update the priv attributes if any
+	ELF attribute or -march-attr is set.  If the priv attributes are not
+	set, then try to update them by the default setting (-mpriv-spec or
+	--with-priv-spec).
+	* testsuite/gas/riscv/attribute-02.d: Likewise.
+	* testsuite/gas/riscv/attribute-03.d: Likewise.
+	* testsuite/gas/riscv/attribute-04.d: Likewise.
+	* testsuite/gas/riscv/attribute-06.d: Likewise.
+	* testsuite/gas/riscv/attribute-07.d: Likewise.
+	* testsuite/gas/riscv/attribute-08.d: Likewise.
+	* testsuite/gas/riscv/attribute-09.d: Likewise.
+	* testsuite/gas/riscv/attribute-10.d: Likewise.
+	* testsuite/gas/riscv/attribute-unknown.d: Likewise.
+	* testsuite/gas/riscv/attribute-05.d: Likewise.  Also, the priv spec
+	set by priv attributes must be supported.
+	* testsuite/gas/riscv/attribute-05.s: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9.d: Likewise.  Updated
+	priv attributes according to the -mpriv-spec option.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p10.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-version-1p11.d: Likewise.
+	* testsuite/gas/riscv/priv-reg.d: Removed.
+	* testsuite/gas/riscv/priv-reg-version-1p9.d: New test case.  Dump the
+	CSR according to the priv spec 1.9.
+	* testsuite/gas/riscv/priv-reg-version-1p9p1.d: New test case.  Dump the
+	CSR according to the priv spec 1.9.1.
+	* testsuite/gas/riscv/priv-reg-version-1p10.d: New test case.  Dump the
+	CSR according to the priv spec 1.10.
+	* testsuite/gas/riscv/priv-reg-version-1p11.d: New test case.  Dump the
+	CSR according to the priv spec 1.11.
+	* config/tc-riscv.c (md_show_usage): Add descriptions about
+	the new GAS options.
+	* doc/c-riscv.texi: Likewise.
+
+2020-05-19  Peter Bergner  <bergner@linux.ibm.com>
+
+	* testsuite/gas/ppc/power9.s <dcbf, dcbfl, dcbflp>: Add tests.
+	* testsuite/gas/ppc/power9.d: Likewise.
+	* testsuite/gas/ppc/power10.s <dcbf, dcbfps, dcbstps, hwsync, lwsync,
+	pause_short, phwsync, plwsync, ptesync, stcisync, stncisync, stsync,
+	sync, wait, waitrsv>: Add tests.
+	* testsuite/gas/ppc/power10.d: Likewise.
+
+2020-05-19  Alexander Fedotov  <alfedotov@gmail.com>
+
+	PR 25992
+	* config/tc-arm.c : Add arm_ext_v8r feature.
+	(it_fsm_post_encode): Check arm_ext_v8r feature.
+	(get_aeabi_cpu_arch_from_fset): Check arm_ext_v8r feature.
+
+2020-05-19  Alan Modra  <amodra@gmail.com>
+
+	* write.c (write_contents): Use bfd_get_filename rather than
+	accessing bfd->filename directly.  Use bfd_section_name rather
+	than accessing section->name directly.
+
+2020-05-19  Alan Modra  <amodra@gmail.com>
+
+	* symbols.c (local_symbol_make): Init all of lsy_flags.
+
+2020-05-18  Alan Modra  <amodra@gmail.com>
+
+	* symbols.c (resolve_symbol_value): Invoke LOCAL_SYMBOL_CHECK
+	before looking at add_symbol->sy_flags.
+
+2020-05-18  Hongtao Liu  <hongtao.liu@intel.com>
+
+	* config/tc-i386.c: Not handle lret/iret.
+	* testsuite/gas/i386/lfence-ret-a.d: Adjust testcase.
+	* testsuite/gas/i386/lfence-ret-b.d: Ditto.
+	* testsuite/gas/i386/lfence-ret-c.d: Ditto.
+	* testsuite/gas/i386/lfence-ret-d.d: Ditto.
+	* testsuite/gas/i386/lfence-ret.s: Ditto.
+	* testsuite/gas/i386/x86-64-lfence-ret-a.d: Ditto.
+	* testsuite/gas/i386/x86-64-lfence-ret-b.d: Ditto.
+	* testsuite/gas/i386/x86-64-lfence-ret-c.d: Ditto.
+	* testsuite/gas/i386/x86-64-lfence-ret-d.d: Ditto.
+	* testsuite/gas/i386/x86-64-lfence-ret-e.d: Ditto.
+	* testsuite/gas/i386/x86-64-lfence-ret.s: Ditto.
+	* testsuite/gas/i386/x86-64-lfence-ret.e: Deleted.
+
+2020-05-15  Alan Modra  <amodra@gmail.com>
+	    Alex Coplan  <alex.coplan@arm.com>
+
+	* symbols.c (struct local_symbol): Update comment.
+	(resolve_symbol_value): For resolved symbols equated to other
+	symbols, verify that the referenced symbol is not a local_symbol
+	before accessing sy_value.  Don't leave symbol loops during
+	finalize_syms resolution.
+	* testsuite/gas/all/assign-bad-recursive.d: New test.
+	* testsuite/gas/all/assign-bad-recursive.l: Error output for test.
+	* testsuite/gas/all/assign-bad-recursive.s: Assembly for test.
+	* testsuite/gas/all/gas.exp: Run it.
+
+2020-05-14  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/scalarquad.d,
+	* testsuite/gas/ppc/scalarquad.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/rightmost.d,
+	* testsuite/gas/ppc/rightmost.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/xvtlsbb.d,
+	* testsuite/gas/ppc/xvtlsbb.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/stringop.d,
+	* testsuite/gas/ppc/stringop.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+
+	* testsuite/gas/ppc/set_bool.d,
+	* testsuite/gas/ppc/set_bool.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/bitmanip.d,
+	* testsuite/gas/ppc/bitmanip.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/genpcv.d,
+	* testsuite/gas/ppc/genpcv.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/maskmanip.d,
+	* testsuite/gas/ppc/maskmanip.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+	    Peter Bergner  <bergner@linux.ibm.com>
+
+	* config/tc-ppc.c (pre_defined_registers): Add accumulators.
+	(md_assemble): Check acc specified in correct operand.
+	* testsuite/gas/ppc/outerprod.d,
+	* testsuite/gas/ppc/outerprod.s,
+	* testsuite/gas/ppc/vsx4.d,
+	* testsuite/gas/ppc/vsx4.s: New tests.
+	* testsuite/gas/ppc/ppc.exp: Run them.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/simd_perm.d,
+	* testsuite/gas/ppc/simd_perm.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/int128.d,
+	* testsuite/gas/ppc/int128.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/vsx_32byte.d,
+	* testsuite/gas/ppc/vsx_32byte.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/ppc/vec_mul.s,
+	* testsuite/gas/ppc/vec_mul.d: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+
+	* testsuite/gas/ppc/byte_rev.d,
+	* testsuite/gas/ppc/byte_rev.s: New test.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+
+	* testsuite/gas/ppc/power10.d: Add paste. tests.
+	* testsuite/gas/ppc/power10.s: Likewise.
+
+2020-05-11  Peter Bergner  <bergner@linux.ibm.com>
+
+	* testsuite/gas/ppc/power10.s: New test.
+	* testsuite/gas/ppc/power10.d: Likewise.
+	* testsuite/gas/ppc/ppc.exp: Run it.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (md_assemble): Update for PPC_OPCODE_POWER10
+	renaming.
+	* testsuite/gas/ppc/prefix-align.d: Use -mpower10/-Mpower10 in
+	place of -mfuture/-Mfuture.
+	* testsuite/gas/ppc/prefix-pcrel.d: Likewise.
+	* testsuite/gas/ppc/prefix-reloc.d: Likewise.
+
+2020-05-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2020-05-06  Nick Clifton  <nickc@redhat.com>
+
+	PR 25927
+	* doc/as.texi (Preprocessing): Replace cross reference to not
+	existant document with a URL to the equivalent page in the GCC
+	manual.
+
+2020-05-05  Nick Clifton  <nickc@redhat.com>
+
+	* dwarf2dbg.c (out_dir_and_file_list): Add comments describing the
+	construction of a DWARF-5 directory name table.
+	* testsuite/gas/elf/pr25917.d: Update expected output.
+
+2020-05-05  Gunther Nikl <gnikl@justmail.de>
+
+	* config/tc-rx.c (elf_flags): Initialize for non-linux targets.
+	(md_parse_option): Remove initialization of elf_flags.
+
+2020-05-04  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	PR gas/25863
+	* config/tc-arm.c (do_mve_vmull): Fix scalar and NEON parsing of vmul.
+	* testsuite/gas/arm/mve-scalar-vmult-it.d: New test.
+	* testsuite/gas/arm/mve-scalar-vmult-it.s: New test.
+
+2020-05-04  Nick Clifton  <nickc@redhat.com>
+
+	PR 25917
+	* dwarf2dbg.c (out_dir_and_file_list): Check for the directory
+	table's existence before looking at its entries.
+	Also do not emit a default directory entry if there are no
+	directories in use.
+
+	* testsuite/gas/elf/pr25917.s: New test source file.
+	* testsuite/gas/elf/pr25917.d: New test driver.
+	* testsuite/gas/elf/elf.exp (run_elf_list_test): Run the new test.
+
+2020-04-30  Alex Coplan  <alex.coplan@arm.com>
+
+	* config/tc-aarch64.c (fix_insn): Implement for
+	AARCH64_OPND_UNDEFINED.
+	(parse_operands): Implement for AARCH64_OPND_UNDEFINED.
+	* testsuite/gas/aarch64/udf.s: New.
+	* testsuite/gas/aarch64/udf.d: New.
+	* testsuite/gas/aarch64/udf-invalid.s: New.
+	* testsuite/gas/aarch64/udf-invalid.l: New.
+	* testsuite/gas/aarch64/udf-invalid.d: New.
+
+2020-04-30  Yoshinori Sato <ysato@users.sourceforge.jp>
+
+	* config/tc-rx.c (elf_flags): Reset default value.
+	(md_parse_option): For rx-elf Initialize elf_flags with RX_ABI.
+
+2020-04-29  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* config/tc-xtensa.c (XTENSA_MARCH_EARLIEST): Define macro as 0
+	if it's not defined.
+	(microarch_earliest): New static variable.
+	(xg_translate_idioms): Translate "simcall" to "simcall 0" when
+	simcall opcode has mandatory parameter.
+	(xg_init_global_config): Initialize microarch_earliest.
+
+2020-04-29  Nick Clifton  <nickc@redhat.com>
+
+	PR 22699
+	* config/tc-sh.c (build_Mytes): Change operand type IMM0_8 to
+	IMM0_8S and add support for IMM0_8U.
+	* testsuite/gas/sh/sh4a.s: Add test of a logical insn using an
+	unsigned 8-bit immediate.
+	* testsuite/gas/sh/sh4a.d: Extended expected disassembly.
+	* testsuite/gas/sh/sh4al-dsp.d: Update expected disassembly.
+
+2020-04-27  Tamar Christina  <tamar.christina@arm.com>
+
+	* NEWS: Add news entry for big-obj.
+	* config/tc-i386.c (i386_target_format): Support new format.
+	* doc/c-i386.texi: Add i386 support.
+	* testsuite/gas/pe/big-obj.d: Rename test to not be x64 specific.
+	* testsuite/gas/pe/pe.exp (big-obj): Make test run on i386 as well.
+
+2020-04-27  Nick Clifton  <nickc@redhat.com>
+
+	PR 25878
+	* dwarf2dbg.c (struct file_entry): Add auto_assigned field.
+	(assign_file_to_slot): New function.  Fills in an entry in the
+	files table.
+	(allocate_filenum): Use new function.
+	(allocate_filename_to_slot): Use new function.  If the specified
+	slot entry is already in use, but was chosen automatically then
+	reassign the automatic entry.
+
+2020-04-26  Hongtao Liu  <hongtao.liu@intel.com
+
+	* config/tc-i386.c (lfence_before_ret_shl): New member.
+	(load_insn_p): implict load for POP/POPA/POPF/XLATB, no load
+	for Anysize insns.
+	(insert_after_load): Issue warning for REP CMPS/SCAS.
+	(insert_before_before): Handle iret, Handle
+	-mlfence-before-ret=shl, Adjust operand size of or/not/shl to ret's,
+	(md_parse_option): Change -mlfence-before-ret=[none|not|or] to
+	-mlfence-before-ret=[none/not/or/shl/yes].
+	Enable -mlfence-before-ret=shl when
+	-mlfence-beofre-indirect-branch=all and no explicit -mlfence-before-ret option.
+	(md_show_usage): Ditto.
+	* doc/c-i386.texi: Ditto.
+	* testsuite/gas/i386/i386.exp: Add new testcases.
+	* testsuite/gas/i386/lfence-load-b.d: New.
+	* testsuite/gas/i386/lfence-load-b.e: New.
+	* testsuite/gas/i386/lfence-load.d: Modified.
+	* testsuite/gas/i386/lfence-load.e: New.
+	* testsuite/gas/i386/lfence-load.s: Modified.
+	* testsuite/gas/i386/lfence-ret-a.d: Modified.
+	* testsuite/gas/i386/lfence-ret-b.d: Modified.
+	* testsuite/gas/i386/lfence-ret-c.d: New.
+	* testsuite/gas/i386/lfence-ret-d.d: New.
+	* testsuite/gas/i386/lfence-ret.s: Modified.
+	* testsuite/gas/i386/x86-64-lfence-load-b.d: New.
+	* testsuite/gas/i386/x86-64-lfence-load.d: Modified.
+	* testsuite/gas/i386/x86-64-lfence-load.s: Modified.
+	* testsuite/gas/i386/x86-64-lfence-ret-a.d: Modified.
+	* testsuite/gas/i386/x86-64-lfence-ret-b.d: Modified.
+	* testsuite/gas/i386/x86-64-lfence-ret-c.d: New.
+	* testsuite/gas/i386/x86-64-lfence-ret-d.d: New
+	* testsuite/gas/i386/x86-64-lfence-ret-e.d: New.
+	* testsuite/gas/i386/x86-64-lfence-ret.e: New.
+	* testsuite/gas/i386/x86-64-lfence-ret.s: New.
+
+2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
+
+	PR ld/25861
+	* config/tc-xtensa.c (md_apply_fix): Replace
+	BFD_RELOC_XTENSA_DIFF{8,16,32} generation with
+	BFD_RELOC_XTENSA_PDIFF{8,16,32} and
+	BFD_RELOC_XTENSA_NDIFF{8,16,32} generation.
+	* testsuite/gas/xtensa/loc.d: Replace BFD_RELOC_XTENSA_DIFF16
+	with BFD_RELOC_XTENSA_PDIFF16 in the expected output.
+
+2020-04-22  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c (elf_frob_symbol): Unconditionally remove
+	symbol for ".symver .. remove".
+	* doc/as.texi (.symver): Update.
+	* testsuite/gas/symver/symver11.s: Make foo weak.
+	* testsuite/gas/symver/symver11.d: Expect an error.
+	* testsuite/gas/symver/symver7.d: Allow other random symbols.
+
+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/symver/symver11.s: Add ".balign 8".
+
+2020-04-21  Andreas Schwab  <schwab@linux-m68k.org>
+
+	PR 25848
+	* testsuite/gas/m68k/operands.s: Add tests for cmpi.
+	* testsuite/gas/m68k/operands.d: Update.
+	* testsuite/gas/m68k/op68000.d: Update for new error messages.
+
+2020-04-21  Tamar Christina  <tamar.christina@arm.com>
+
+	PR binutils/24753
+	* testsuite/gas/arm/pr24753.d: New test.
+	* testsuite/gas/arm/pr24753.s: New test.
+
+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/23840
+	PR gas/25295
+	* NEWS: Mention .symver extension.
+	* config/obj-elf.c (obj_elf_find_and_add_versioned_name): New
+	function.
+	(obj_elf_symver): Call obj_elf_find_and_add_versioned_name to
+	add a version name.  Add local, hidden and remove visibility
+	support.
+	(elf_frob_symbol): Handle the list of version names.  Update the
+	original symbol to local, hidden or remove it from the symbol
+	table.
+	(elf_frob_file_before_adjust): Handle the list of version names.
+	* config/obj-elf.h (elf_visibility): New.
+	(elf_versioned_name_list): Likewise.
+	(elf_obj_sy): Change local to bitfield. Add rename, bad_version
+	and visibility.  Change versioned_name pointer to struct
+	elf_versioned_name_list.
+	* doc/as.texi: Update .symver directive.
+	* testsuite/gas/symver/symver.exp: Run all *.d tests.  Add more
+	error checking tests.
+	* testsuite/gas/symver/symver6.d: New file.
+	* testsuite/gas/symver/symver7.d: Likewise.
+	* testsuite/gas/symver/symver7.s: Likewise.
+	* testsuite/gas/symver/symver8.d: Likewise.
+	* testsuite/gas/symver/symver8.s: Likewise.
+	* testsuite/gas/symver/symver9.s: Likewise.
+	* testsuite/gas/symver/symver9a.d: Likewise.
+	* testsuite/gas/symver/symver9b.d: Likewise.
+	* testsuite/gas/symver/symver10.s: Likewise.
+	* testsuite/gas/symver/symver10a.d: Likewise.
+	* testsuite/gas/symver/symver10b.d: Likewise.
+	* testsuite/gas/symver/symver11.d: Likewise.
+	* testsuite/gas/symver/symver11.s: Likewise.
+	* testsuite/gas/symver/symver12.d: Likewise.
+	* testsuite/gas/symver/symver12.s: Likewise.
+	* testsuite/gas/symver/symver13.d: Likewise.
+	* testsuite/gas/symver/symver13.s: Likewise.
+	* testsuite/gas/symver/symver14.d: Likewise.
+	* testsuite/gas/symver/symver14.l: Likewise.
+	* testsuite/gas/symver/symver15.d: Likewise.
+	* testsuite/gas/symver/symver15.l: Likewise.
+	* testsuite/gas/symver/symver6.l: Removed.
+	* testsuite/gas/symver/symver6.s: Updated.
+
+2020-04-20  Sudakshina Das  <sudi.das@arm.com>
+
+	* config/tc-aarch64.c (parse_barrier_psb): Update error messages
+	to include TSB.
+	* testsuite/gas/aarch64/system-2.d: Update -march and new tsb tests.
+	* testsuite/gas/aarch64/system-2.s: Add new tsb tests.
+	* testsuite/gas/aarch64/system.d: Update.
+
+2020-04-20  Sudakshina Das  <sudi.das@arm.com>
+
+	* testsuite/gas/aarch64/bti.d: Update -march option.
+	* testsuite/gas/aarch64/illegal-bti.d: Remove.
+	* testsuite/gas/aarch64/illegal-bti.l: Remove.
+	* testsuite/gas/aarch64/illegal-ras-1.l: Remove esb.
+	* testsuite/gas/aarch64/illegal-ras-1.s: Remove esb.
+
+2020-04-17  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-bfin.h (TC_EQUAL_IN_INSN): Allow assignment to dot.
+
+2020-04-16  Gagan Singh Sidhu  <broly@mac.com>
+	    Nick Clifton  <nickc@redhat.com>
+
+	PR 25803
+	* config/obj-elf.c (obj_elf_type): Reject ifunc symbols on MIPS
+	targets.
+	* testsuite/gas/elf/elf.exp: Add MIPS targets to the list to skip
+	for the type-2 test.
+	* testsuite/gas/elf/type-noifunc.e: Update to allow for MIPS
+	targets running this test.
+
+2020-02-16  David Faust  <david.faust@oracle.com>
+
+	* testsuite/gas/bpf/bpf.exp: Run jump32 tests.
+	* testsuite/gas/bpf/jump32.s: New file.
+	* testsuite/gas/bpf/jump32.d: Likewise.
+
+2020-04-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* doc/c-i386.texi: Correct -mlfence-before-indirect-branch=
+	documentation.
+
+2020-04-08  Gunther Nikl  <gnikl@justmail.de>
+
+	* config/tc-moxie.h (MD_PCREL_FROM_SECTION): Delete define.
+	(md_pcrel_from): Remove prototytpe.
+	* config/tc-m32c.h (MD_PCREL_FROM_SECTION): Delete duplicate
+	define.
+	(md_pcrel_from_section): Remove duplicate prototype.
+	* tc.h (md_pcrel_from_section): Add prototype.
+	* config/tc-aarch64.h (md_pcrel_from_section): Remove prototype.
+	* config/tc-arc.h (md_pcrel_from_section): Likewise.
+	* config/tc-arm.h (md_pcrel_from_section): Likewise.
+	* config/tc-avr.h (md_pcrel_from_section): Likewise.
+	* config/tc-bfin.h (md_pcrel_from_section): Likewise.
+	* config/tc-bpf.h (md_pcrel_from_section): Likewise.
+	* config/tc-csky.h (md_pcrel_from_section): Likewise.
+	* config/tc-d10v.h (md_pcrel_from_section): Likewise.
+	* config/tc-d30v.h (md_pcrel_from_section): Likewise.
+	* config/tc-epiphany.h (md_pcrel_from_section): Likewise.
+	* config/tc-fr30.h (md_pcrel_from_section): Likewise.
+	* config/tc-frv.h (md_pcrel_from_section): Likewise.
+	* config/tc-iq2000.h (md_pcrel_from_section): Likewise.
+	* config/tc-lm32.h (md_pcrel_from_section): Likewise.
+	* config/tc-m32c.h (md_pcrel_from_section): Likewise.
+	* config/tc-m32r.h (md_pcrel_from_section): Likewise.
+	* config/tc-mcore.h (md_pcrel_from_section): Likewise.
+	* config/tc-mep.h (md_pcrel_from_section): Likewise.
+	* config/tc-metag.h (md_pcrel_from_section): Likewise.
+	* config/tc-microblaze.h (md_pcrel_from_section): Likewise.
+	* config/tc-mmix.h (md_pcrel_from_section): Likewise.
+	* config/tc-moxie.h (md_pcrel_from_section): Likewise.
+	* config/tc-msp430.h (md_pcrel_from_section): Likewise.
+	* config/tc-mt.h (md_pcrel_from_section): Likewise.
+	* config/tc-or1k.h (md_pcrel_from_section): Likewise.
+	* config/tc-ppc.h (md_pcrel_from_section): Likewise.
+	* config/tc-rl78.h (md_pcrel_from_section): Likewise.
+	* config/tc-rx.h (md_pcrel_from_section): Likewise.
+	* config/tc-s390.h (md_pcrel_from_section): Likewise.
+	* config/tc-sh.h (md_pcrel_from_section): Likewise.
+	* config/tc-xc16x.h (md_pcrel_from_section): Likewise.
+	* config/tc-xstormy16.h (md_pcrel_from_section): Likewise.
+	* config/tc-microblaze.h (md_begin, md_assemble, md_undefined_symbol,
+	md_show_usage, md_convert_frag, md_operand, md_number_to_chars,
+	md_estimate_size_before_relax, md_section_align, tc_gen_reloc,
+	md_apply_fix3): Delete prototypes.
+
+2020-04-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention support for Intel SERIALIZE and TSXLDTRK
+	instructions.
+
+2020-04-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* doc/c-z80.texi: Fix @xref warnings.
+
+2020-04-07  Lili Cui  <lili.cui@intel.com>
+
+	* config/tc-i386.c (cpu_arch): Add .TSXLDTRK.
+	(cpu_noarch): Likewise.
+	* doc/c-i386.texi: Document TSXLDTRK.
+	* testsuite/gas/i386/i386.exp: Run TSXLDTRK tests.
+	* testsuite/gas/i386/tsxldtrk.d: Likewise.
+	* testsuite/gas/i386/tsxldtrk.s: Likewise.
+	* testsuite/gas/i386/x86-64-tsxldtrk.d: Likewise.
+
+2020-04-02  Lili Cui  <lili.cui@intel.com>
+
+	* config/tc-i386.c (cpu_arch): Add .serialize.
+	(cpu_noarch): Likewise.
+	* doc/c-i386.texi: Document serialize.
+	* testsuite/gas/i386/i386.exp: Run serialize tests
+	* testsuite/gas/i386/serialize.d: Likewise.
+	* testsuite/gas/i386/x86-64-serialize.d: Likewise.
+	* testsuite/gas/i386/serialize.s: Likewise.
+
+2020-04-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* testsuite/gas/elf/section12a.d: Use notarget instead of xfail.
+	* testsuite/gas/elf/section12b.d: Likewise.
+	* testsuite/gas/elf/section16a.d: Likewise.
+	* testsuite/gas/elf/section16b.d: Likewise.
+
+2020-04-02  Gunther Nikl  <gnikl@justmail.de>
+
+	* config/tc-m68k.c (m68k_ip): Fix range check for index register
+	with a suppressed address register.
+
+2020-04-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25756
+	* config/tc-i386.h (TC_FORCE_RELOCATION_ABS): New.
+	* testsuite/gas/i386/localpic.s: Add a test for relocation
+	against local absolute symbol.
+	* testsuite/gas/i386/x86-64-localpic.s: Likewise.
+	* testsuite/gas/i386/localpic.d: Updated.
+	* testsuite/gas/i386/x86-64-localpic.d: Likewise.
+	* testsuite/gas/i386/ilp32/x86-64-localpic.d: Likewise.
+
+2020-04-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	PR gas/25732
+	* testsuite/gas/i386/solaris/x86-64-branch-2.d: New file.
+	* testsuite/gas/i386/solaris/x86-64-branch-3.d: New file.
+	* testsuite/gas/i386/solaris/x86-64-jump.d: Incorporate changes to
+	testsuite/gas/i386/x86-64-jump.d.
+	* testsuite/gas/i386/solaris/x86-64-mpx-branch-1.d:
+	Incorporate changes to
+	gas/testsuite/gas/i386/x86-64-mpx-branch-1.d.
+	* testsuite/gas/i386/solaris/x86-64-mpx-branch-2.d : Incorporate
+	changes to testsuite/gas/i386/x86-64-mpx-branch-2.d.
+	* testsuite/gas/i386/x86-64-branch-2.d: Skip on *-*-solaris*.
+	* testsuite/gas/i386/x86-64-branch-3.d: Likewise.
+
+2020-03-31  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	PR 25611
+	PR 25614
+	* dwarf2dbg.c: Do not include "bignum.h".
+
+2020-03-30  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/gas/riscv/alias-csr.d: Move this to priv-reg-pseudo.
+	* testsuite/gas/riscv/alias-csr.s: Likewise.
+	* testsuite/gas/riscv/no-aliases-csr.d: Move this
+	to priv-reg-pseudo-noalias.
+	* testsuite/gas/riscv/bad-csr.d: Rename to priv-reg-fail-nonexistent.
+	* testsuite/gas/riscv/bad-csr.l: Likewise.
+	* testsuite/gas/riscv/bad-csr.s: Likewise.
+	* testsuite/gas/riscv/satp.d: Removed.  Already included in priv-reg.
+	* testsuite/gas/riscv/satp.s: Likewise.
+	* testsuite/gas/riscv/priv-reg-pseudo.d: New testcase for all pseudo
+	csr instruction, including alias-csr testcase.
+	* testsuite/gas/riscv/priv-reg-pseudo.s: Likewise.
+	* testsuite/gas/riscv/priv-reg-pseudo-noalias.d: New testcase for all
+	pseudo instruction with objdump -Mno-aliases.
+	* testsuite/gas/riscv/priv-reg-fail-nonexistent.d: New testcase.
+	* testsuite/gas/riscv/priv-reg-fail-nonexistent.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-nonexistent.s: Likewise.
+	* testsuite/gas/riscv/priv-reg.d: Update CSR to 1.11.
+	* testsuite/gas/riscv/priv-reg.s: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.
+	* testsuite/gas/riscv/csr-dw-regnums.d: Likewise.
+	* testsuite/gas/riscv/csr-dw-regnums.s: Likewise.
+
+2020-03-25  J.W. Jagersma  <jwjagersma@gmail.com>
+
+	* config/obj-coff.c (obj_coff_section): Set the bss flag on
+	sections with the "b" attribute.
+
+2020-03-22  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/s12z/truncated.d: Update expected output.
+
+2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25690
+	* config/tc-z80.c (md_pseudo_table): Add xdef anf xref pseudo ops.
+	* doc/c-z80.texi: Update documentation.
+
+2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25641
+	PR 25668
+	PR 25633
+	Fix disassembling ED+A4/AC/B4/BC opcodes.
+	Fix assembling lines containing colonless label and instruction
+	with first operand inside parentheses.
+	Fix registration of unsupported by target CPU registers.
+	* config/tc-z80.c: See above.
+	* config/tc-z80.h: See above.
+	* testsuite/gas/z80/colonless.d: Update test.
+	* testsuite/gas/z80/colonless.s: Likewise.
+	* testsuite/gas/z80/ez80_adl_all.d: Likewise.
+	* testsuite/gas/z80/ez80_unsup_regs.d: Likewise.
+	* testsuite/gas/z80/ez80_z80_all.d: Likewise.
+	* testsuite/gas/z80/gbz80_unsup_regs.d: Likewise.
+	* testsuite/gas/z80/r800_unsup_regs.d: Likewise.
+	* testsuite/gas/z80/unsup_regs.s: Likewise.
+	* testsuite/gas/z80/z180_unsup_regs.d: Likewise.
+	* testsuite/gas/z80/z80.exp: Likewise.
+	* testsuite/gas/z80/z80_strict_unsup_regs.d: Likewise.
+	* testsuite/gas/z80/z80_unsup_regs.d: Likewise.
+	* testsuite/gas/z80/z80n_unsup_regs.d: Likewise.
+
+2020-03-13  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	PR 25660
+	*  config/tc-arm.c (operand_parse_code): Add OP_RNSDMQR and OP_oRNSDMQ.
+	(parse_operands): Handle new operand codes.
+	(do_neon_dyadic_long): Make shape check accept the scalar variants.
+	(asm_opcode_insns): Fix operand codes for vaddl and vsubl.
+	* testsuite/gas/arm/mve-vaddsub-it.s: New test.
+	* testsuite/gas/arm/mve-vaddsub-it.d: New test.
+	* testsuite/gas/arm/mve-vaddsub-it-bad.s: New test.
+	* testsuite/gas/arm/mve-vaddsub-it-bad.l: New test.
+	* testsuite/gas/arm/mve-vaddsub-it-bad.d: New test.
+	* testsuite/gas/arm/nomve-vaddsub-it.d: New test.
+
+2020-03-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention x86 assembler options for CVE-2020-0551.
+
+2020-03-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/i386.exp: Run new tests.
+	* testsuite/gas/i386/lfence-byte.d: New file.
+	* testsuite/gas/i386/lfence-byte.e: Likewise.
+	* testsuite/gas/i386/lfence-byte.s: Likewise.
+	* testsuite/gas/i386/lfence-indbr-a.d: Likewise.
+	* testsuite/gas/i386/lfence-indbr-b.d: Likewise.
+	* testsuite/gas/i386/lfence-indbr-c.d: Likewise.
+	* testsuite/gas/i386/lfence-indbr.e: Likewise.
+	* testsuite/gas/i386/lfence-indbr.s: Likewise.
+	* testsuite/gas/i386/lfence-load.d: Likewise.
+	* testsuite/gas/i386/lfence-load.s: Likewise.
+	* testsuite/gas/i386/lfence-ret-a.d: Likewise.
+	* testsuite/gas/i386/lfence-ret-b.d: Likewise.
+	* testsuite/gas/i386/lfence-ret.s: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-byte.d: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-byte.e: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-byte.s: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-indbr-a.d: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-indbr-b.d: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-indbr-c.d: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-indbr.e: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-indbr.s: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-load.d: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-load.s: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-ret-a.d: Likewise.
+	* testsuite/gas/i386/x86-64-lfence-ret-b.d: Likewise.
+
+2020-03-11  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (lfence_after_load): New.
+	(lfence_before_indirect_branch_kind): New.
+	(lfence_before_indirect_branch): New.
+	(lfence_before_ret_kind): New.
+	(lfence_before_ret): New.
+	(last_insn): New.
+	(load_insn_p): New.
+	(insert_lfence_after): New.
+	(insert_lfence_before): New.
+	(md_assemble): Call insert_lfence_before and insert_lfence_after.
+	Set last_insn.
+	(OPTION_MLFENCE_AFTER_LOAD): New.
+	(OPTION_MLFENCE_BEFORE_INDIRECT_BRANCH): New.
+	(OPTION_MLFENCE_BEFORE_RET): New.
+	(md_longopts): Add -mlfence-after-load=,
+	-mlfence-before-indirect-branch= and -mlfence-before-ret=.
+	(md_parse_option): Handle -mlfence-after-load=,
+	-mlfence-before-indirect-branch= and -mlfence-before-ret=.
+	(md_show_usage): Display -mlfence-after-load=,
+	-mlfence-before-indirect-branch= and -mlfence-before-ret=.
+	(i386_cons_align): New.
+	* config/tc-i386.h (i386_cons_align): New.
+	(md_cons_align): New.
+	* doc/c-i386.texi: Document -mlfence-after-load=,
+	-mlfence-before-indirect-branch= and -mlfence-before-ret=.
+
+2020-03-11  Nick Clifton  <nickc@redhat.com>
+
+	PR 25611
+	PR 25614
+	* dwarf2dbg.c (DWARF2_FILE_TIME_NAME): Default to -1.
+	(DWARF2_FILE_SIZE_NAME): Default to -1.
+	(DWARF2_LINE_VERSION): Default to the current dwarf level or 3,
+	whichever is higher.
+	(DWARF2_LINE_MAX_OPS_PER_INSN): Provide a default value of 1.
+	(NUM_MD5_BYTES): Define.
+	(struct file entry): Add md5 field.
+	(get_filenum): Delete and replace with...
+	(get_basename): New function.
+	(get_directory_table_entry): New function.
+	(allocate_filenum): New function.
+	(allocate_filename_to_slot): New function.
+	(dwarf2_where): Use new functions.
+	(dwarf2_directive_filename): Add support for extended .file
+	pseudo-op.
+	(dwarf2_directive_loc): Allow the use of file number zero with
+	DWARF 5 or higher.
+	(out_file_list): Rename to...
+	(out_dir_and_file_list): Add DWARF 5 support.
+	(out_debug_line): Emit extra values into the section header for
+	DWARF 5.
+	(out_debug_str): Allow for file 0 to be used with DWARF 5.
+	* doc/as.texi (.file): Update the description of this pseudo-op.
+	* testsuite/gas/elf-dwarf-5-file0.s: Add more lines.
+	* testsuite/gas/elf-dwarf-5-file0.d: Update expected dump output.
+	* testsuite/gas/lns/lns-diag-1.l: Update expected error message.
+	* NEWS: Mention the new feature.
+
+2020-03-10  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-csky.c (get_operand_value): Rewrite 1 << 31 expressions
+	to avoid signed overflow.
+	* config/tc-mcore.c (md_assemble): Likewise.
+	* config/tc-mips.c (gpr_read_mask, gpr_write_mask): Likewise.
+	* config/tc-nds32.c (SET_ADDEND): Likewise.
+	* config/tc-nios2.c (nios2_assemble_arg_R): Likewise.
+
+2020-03-09  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/avx.s: Add long-form VCMP[PS][SD] pseudos.
+	* testsuite/gas/i386/avx.d, testsuite/gas/i386/avx-16bit.d,
+	testsuite/gas/i386/avx-intel.d: Adjust expectations.
+
+2020-03-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/dwarf-5-file0.s: Don't start directives in
+	first column.
+
+2020-03-06  Nick Clifton  <nickc@redhat.com>
+
+	PR 25614
+	* dwarf2dbg.c (dwarf2_directive_filename): Allow a file number of
+	0 if the dwarf_level is 5 or more.  Complain if a filename follows
+	a file 0.
+	* testsuite/gas/elf/dwarf-5-file0.s: New test.
+	* testsuite/gas/elf/dwarf-5-file0.d: New test driver.
+	* testsuite/gas/elf/elf.exp: Run the new test.
+
+	PR 25612
+	* config/tc-ia64.h (DWARF2_VERISION): Fix typo.
+	* doc/as.texi: Fix another typo.
+
+2020-03-06  Nick Clifton  <nickc@redhat.com>
+
+	PR 25612
+	* as.c (dwarf_level): Define.
+	(show_usage): Add --gdwarf-3, --gdwarf-4 and --gdwarf-5.
+	(parse_args): Add support for the new options.
+	as.h (dwarf_level): Prototype.
+	* dwarf2dbg.c (DWARF2_VERSION): Use dwarf_level as default version
+	value.
+	* config/tc-ia64.h (DWARF2_VERISION): Update definition.
+	(DWARF2_LINE_VERSION): Remove definition.
+	* doc/as.texi: Document the new options.
+
+2020-03-06  Nick Clifton  <nickc@redhat.com>
+
+	PR 25572
+	* as.c (main): Allow matching input and outputs when they are
+	not regular files.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (match_mem_size): Generalize broadcast special
+	casing.
+	(check_VecOperands): Zap xmmword/ymmword/zmmword when more than
+	one of byte/word/dword/qword is set alongside a SIMD register in
+	a template's operand.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (match_template): Extend code in logic
+	rejecting certain suffixes in certain modes to also cover mask
+	register use and VecSIB. Drop special casing of broadcast. Skip
+	immediates in the check.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (match_template): Fold duplicate code in
+	logic rejecting certain suffixes in certain modes. Drop
+	pointless "else".
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Exlucde !vexw insns
+	alongside !norex64 ones.
+	* testsuite/gas/i386/x86-64-avx512bw.s: Test VPEXTR* and VPINSR*
+	with both 32- and 64-bit GPR operands.
+	* testsuite/gas/i386/x86-64-avx512f.s: Test VEXTRACTPS with both
+	32- and 64-bit GPR operands.
+	* testsuite/gas/i386/x86-64-avx512bw-intel.d,
+	testsuite/gas/i386/x86-64-avx512bw.d,
+	testsuite/gas/i386/x86-64-avx512f-intel.d,
+	testsuite/gas/i386/x86-64-avx512f.d: Adjust expectations.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (md_assemble): Drop use of rex64.
+	(process_suffix): For REX.W for 64-bit CRC32.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (i386_addressing_mode): For 32-bit
+	addressing for MPX insns without base/index.
+	* testsuite/gas/i386/mpx-16bit.s,
+	* testsuite/gas/i386/mpx-16bit.d: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/adx.s, testsuite/gas/i386/cet.s,
+	testsuite/gas/i386/ept.s, testsuite/gas/i386/fsgs.s,
+	testsuite/gas/i386/invpcid.s, testsuite/gas/i386/movdir.s,
+	testsuite/gas/i386/ptwrite.s, testsuite/gas/i386/vmx.s,
+	* testsuite/gas/i386/code16.s: Add CR, DR, and TR access cases
+	as well as a BSWAP one.
+	* testsuite/gas/i386/rdpid.s: Add 16-bit case.
+	* testsuite/gas/i386/sse2-16bit.s: Cover more insns.
+	* testsuite/gas/i386/adx-intel.d, testsuite/gas/i386/adx.d,
+	testsuite/gas/i386/cet-intel.d, testsuite/gas/i386/cet.d,
+	testsuite/gas/i386/code16.d, testsuite/gas/i386/ept-intel.d,
+	testsuite/gas/i386/ept.d, testsuite/gas/i386/fsgs-intel.d,
+	testsuite/gas/i386/fsgs.d, testsuite/gas/i386/invpcid-intel.d,
+	testsuite/gas/i386/invpcid.d, testsuite/gas/i386/movdir-intel.d,
+	testsuite/gas/i386/movdir.d, testsuite/gas/i386/ptwrite-intel.d,
+	testsuite/gas/i386/ptwrite.d, testsuite/gas/i386/rdpid-intel.d,
+	testsuite/gas/i386/rdpid.d, testsuite/gas/i386/sse2-16bit.d,
+	testsuite/gas/i386/vmx.d: Adjust expectations.
+
+2020-03-06  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (md_assemble): Also exclude tpause and umwait
+	from having their operands swapped.
+	* testsuite/gas/i386/waitpkg.s,
+	testsuite/gas/i386/x86-64-waitpkg.s: Add tpause and umwait
+	3-operand cases as well as testing of 16-bit code generation.
+	* testsuite/gas/i386/waitpkg.d,
+	testsuite/gas/i386/waitpkg-intel.d,
+	testsuite/gas/i386/x86-64-waitpkg.d,
+	testsuite/gas/i386/x86-64-waitpkg-intel.d: Adjust expectations.
+
+2020-03-04  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (percent_op_utype): Support the modifier
+	%got_pcrel_hi.
+	* doc/c-riscv.texi: Add documentation.
+	* testsuite/gas/riscv/no-relax-reloc.d: Add test case for the new
+	modifier %got_pcrel_hi.
+	* testsuite/gas/riscv/no-relax-reloc.s: Likewise.
+	* testsuite/gas/riscv/relax-reloc.d: Likewise.
+	* testsuite/gas/riscv/relax-reloc.s: Likewise.
+
+	* doc/c-riscv.texi (relocation modifiers): Add documentation.
+	(RISC-V-Formats): Update the section name from "Instruction Formats"
+	to "RISC-V Instruction Formats".
+
+2020-03-04  Alexandre Oliva  <oliva@adacore.com>
+
+	* config/tc-arm.c (md_apply_fix): Warn if a PC-relative load is
+	detected in a section which does not have at least 4 byte
+	alignment.
+	* testsuite/gas/arm/armv8-ar-it-bad.s: Add alignment directive.
+	* testsuite/gas/arm/ldr-t.s: Likewise.
+	* testsuite/gas/arm/sp-pc-usage-t.s: Likewise.
+	* testsuite/gas/arm/sp-pc-usage-t.d: Finish test at end of
+	disassembly, ignoring any NOPs that may have been inserted because
+	of section alignment.
+	* testsuite/gas/arm/ldr-t.d: Likewise.
+
+2020-03-04  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (cpu_arch): Add .sev_es entry.
+	* doc/c-i386.texi: Mention sev_es.
+	* testsuite/gas/i386/arch-13.s: Add SEV-ES case.
+	* testsuite/gas/i386/arch-13.d: Extend -march=. Adjust
+	expectations.
+	* testsuite/gas/i386/arch-13-znver1.d,
+	testsuite/gas/i386/arch-13-znver2.d: Extend -march=.
+
+2020-03-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (match_template): Replace ignoresize and
+	defaultsize with mnemonicsize.
+	(process_suffix): Likewise.
+
+2020-03-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25627
+	* config/tc-z80.c (emit_ld_rr_m): Fix invalid compilation of
+	instruction LD IY,(HL).
+	* testsuite/gas/z80/ez80_adl_all.d: Update expected disassembly.
+	* testsuite/gas/z80/ez80_adl_all.s: Add tests of the instruction.
+	* testsuite/gas/z80/ez80_z80_all.d: Update expected disassembly.
+	* testsuite/gas/z80/ez80_z80_all.s: Add tests of the instruction.
+
+2020-03-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25622
+	* testsuite/gas/i386/i386.exp: Run x86-64-default-suffix and
+	x86-64-default-suffix-avx.
+	* testsuite/gas/i386/noreg64.s: Remove cvtsi2sd, cvtsi2ss,
+	vcvtsi2sd, vcvtsi2ss, vcvtusi2sd and vcvtusi2ss entries.
+	* testsuite/gas/i386/noreg64.d: Updated.
+	* testsuite/gas/i386/noreg64.l: Likewise.
+	* testsuite/gas/i386/x86-64-default-suffix-avx.d: New file.
+	* testsuite/gas/i386/x86-64-default-suffix.d: Likewise.
+	* testsuite/gas/i386/x86-64-default-suffix.s: Likewise.
+
+2020-03-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25604
+	* config/tc-z80.c (contains_register): Prevent an illegal memory
+	access when checking an expression for a register name.
+
+2020-03-03  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-coff.h: Remove vestiges of coff-m68k and pe-mips
+	support.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-m32r.c (md_begin): Set SEC_SMALL_DATA on .scommon section.
+	* config/tc-mips.c (s_change_sec): Set SEC_SMALL_DATA for .sdata
+	and .sbss sections.
+	* config/tc-score.c: Delete !BFD_ASSEMBLER code throughout.
+	(s3_s_change_sec): Set SEC_SMALL_DATA for .sbss section.
+	(s3_s_score_lcomm): Likewise.
+	* config/tc-score7.c: Similarly.
+	* read.c (bss_alloc): Set SEC_SMALL_DATA for .sbss section.
+
+2020-02-28  YunQiang Su  <syq@debian.org>
+
+	PR gas/25539
+	* config/tc-mips.c (fix_loongson3_llsc): Compare label value
+	to handle multi-labels.
+	(has_label_name): New.
+
+2020-02-26  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-arm.c (enum pred_instruction_type): Remove
+	NEUTRAL_IT_NO_VPT_INSN predication type.
+	(cxn_handle_predication): Modify to require condition suffixes.
+	(handle_pred_state): Remove NEUTRAL_IT_NO_VPT_INSN cases.
+	* testsuite/gas/arm/cde-scalar.s: Update test.
+	* testsuite/gas/arm/cde-warnings.l: Update test.
+	* testsuite/gas/arm/cde-warnings.s: Update test.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-arm.c (reg_expected_msgs[REG_TYPE_RNB]): Don't use
+	N_() on empty string.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* read.c (read_a_source_file): Call strncpy with length one
+	less than size of original_case_string.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c: Indent labels correctly.
+	* config/obj-macho.c: Likewise.
+	* config/tc-aarch64.c: Likewise.
+	* config/tc-alpha.c: Likewise.
+	* config/tc-arm.c: Likewise.
+	* config/tc-cr16.c: Likewise.
+	* config/tc-crx.c: Likewise.
+	* config/tc-frv.c: Likewise.
+	* config/tc-i386-intel.c: Likewise.
+	* config/tc-i386.c: Likewise.
+	* config/tc-ia64.c: Likewise.
+	* config/tc-mn10200.c: Likewise.
+	* config/tc-mn10300.c: Likewise.
+	* config/tc-nds32.c: Likewise.
+	* config/tc-riscv.c: Likewise.
+	* config/tc-s12z.c: Likewise.
+	* config/tc-xtensa.c: Likewise.
+	* config/tc-z80.c: Likewise.
+	* read.c: Likewise.
+	* symbols.c: Likewise.
+	* write.c: Likewise.
+
+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* config/tc-riscv.c (riscv_ip): New boolean insn_with_csr to indicate
+	we are assembling instruction with CSR.  Call riscv_csr_read_only_check
+	after parsing all arguments.
+	(enum csr_insn_type): New enum is used to classify the CSR instruction.
+	(riscv_csr_insn_type, riscv_csr_read_only_check): New functions.  These
+	are used to check if we write a read-only CSR by the CSR instruction.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-01.s: New testcase.  Test
+	all CSR for the read-only CSR checking.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-02.s: New testcase.  Test
+	all CSR instructions for the read-only CSR checking.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-02.d: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-read-only-02.l: Likewise.
+
+	* config/tc-riscv.c (struct riscv_set_options): New field csr_check.
+	(riscv_opts): Initialize it.
+	(reg_lookup_internal): Check the `riscv_opts.csr_check`
+	before doing the CSR checking.
+	(enum options): Add OPTION_CSR_CHECK and OPTION_NO_CSR_CHECK.
+	(md_longopts): Add mcsr-check and mno-csr-check.
+	(md_parse_option): Handle new enum option values.
+	(s_riscv_option): Handle new long options.
+	* doc/c-riscv.texi: Add description for the new .option and assembler
+	options.
+	* testsuite/gas/riscv/priv-reg-fail-fext.d: Add `-mcsr-check` to enable
+	the CSR checking.
+	* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.
+
+	* config/tc-riscv.c (csr_extra_hash): New.
+	(enum riscv_csr_class): New enum.  Used to decide
+	whether or not this CSR is legal in the current ISA string.
+	(struct riscv_csr_extra): New structure to hold all extra information
+	of CSR.
+	(riscv_init_csr_hashes): New.  According to the DECLARE_CSR and
+	DECLARE_CSR_ALIAS, insert CSR extra information into csr_extra_hash.
+	Call hash_reg_name to insert CSR address into reg_names_hash.
+	(reg_csr_lookup_internal, riscv_csr_class_check): New functions.
+	Decide whether the CSR is valid according to the csr_extra_hash.
+	(reg_lookup_internal): Call reg_csr_lookup_internal for CSRs.
+	(init_opcode_hash): Update 'if (hash_error != NULL)' as hash_error is
+	not a boolean.  This is same as riscv_init_csr_hash, so keep the
+	consistent usage.
+	(md_begin): Call riscv_init_csr_hashes for each DECLARE_CSR.
+	* testsuite/gas/riscv/csr-dw-regnums.d: Add -march=rv32if option.
+	* testsuite/gas/riscv/priv-reg.d: Add f-ext by -march option.
+	* testsuite/gas/riscv/priv-reg-fail-fext.d: New testcase.  The source
+	file is `priv-reg.s`, and the ISA is rv32i without f-ext, so the
+	f-ext CSR are not allowed.
+	* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.
+	* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: New testcase.  The
+	source file is `priv-reg.s`, and the ISA is rv64if, so the
+	rv32-only CSR are not allowed.
+	* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.
+
+2020-02-21  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-pdp11.c (md_apply_fix): Handle BFD_RELOC_32.
+	(tc_gen_reloc): Only give a BAD_CASE assertion on pcrel relocs.
+
+2020-02-21  Alan Modra  <amodra@gmail.com>
+
+	PR 25569
+	* config/obj-aout.c (obj_aout_frob_file_before_fix): Don't loop
+	on section size adjustment, instead perform another write if
+	exec header size is larger than section size.
+
+2020-02-19  Nelson Chu  <nelson.chu@sifive.com>
+
+	* doc/c-riscv.texi: Add the doc entries for -march-attr/
+	-mno-arch-attr command line options.
+
+2020-02-19  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/gas/riscv/c-add-addi.d: New testcase.
+	* testsuite/gas/riscv/c-add-addi.s: Likewise.
+
+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25576
+	* config/tc-z80.c (md_parse_option): Do not use an underscore
+	prefix for local labels in SDCC compatability mode.
+	(z80_start_line_hook): Remove SDCC dollar label support.
+	* testsuite/gas/z80/sdcc.d: Update expected disassembly.
+	* testsuite/gas/z80/sdcc.s: Likewise.
+
+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25517
+	* config/tc-z80.c: Add -march option.
+	* doc/as.texi: Update Z80 documentation.
+	* doc/c-z80.texi: Likewise.
+	* testsuite/gas/z80/ez80_adl_all.d: Update command line.
+	* testsuite/gas/z80/ez80_adl_suf.d: Likewise.
+	* testsuite/gas/z80/ez80_pref_dis.d: Likewise.
+	* testsuite/gas/z80/ez80_z80_all.d: Likewise.
+	* testsuite/gas/z80/ez80_z80_suf.d: Likewise.
+	* testsuite/gas/z80/gbz80_all.d: Likewise.
+	* testsuite/gas/z80/r800_extra.d: Likewise.
+	* testsuite/gas/z80/r800_ii8.d: Likewise.
+	* testsuite/gas/z80/r800_z80_doc.d: Likewise.
+	* testsuite/gas/z80/sdcc.d: Likewise.
+	* testsuite/gas/z80/z180.d: Likewise.
+	* testsuite/gas/z80/z180_z80_doc.d: Likewise.
+	* testsuite/gas/z80/z80_doc.d: Likewise.
+	* testsuite/gas/z80/z80_ii8.d: Likewise.
+	* testsuite/gas/z80/z80_in_f_c.d: Likewise.
+	* testsuite/gas/z80/z80_op_ii_ld.d: Likewise.
+	* testsuite/gas/z80/z80_out_c_0.d: Likewise.
+	* testsuite/gas/z80/z80_sli.d: Likewise.
+	* testsuite/gas/z80/z80n_all.d: Likewise.
+	* testsuite/gas/z80/z80n_reloc.d: Likewise.
+
+2020-02-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (output_insn): Mark cvtpi2ps and cvtpi2pd
+	with GNU_PROPERTY_X86_FEATURE_2_MMX.
+	* testsuite/gas/i386/i386.exp: Run property-3 and
+	x86-64-property-3.
+	* testsuite/gas/i386/property-3.d: New file.
+	* testsuite/gas/i386/property-3.s: Likewise.
+	* testsuite/gas/i386/x86-64-property-3.d: Likewise.
+
+2020-02-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (cpu_arch): Add .popcnt.
+	* doc/c-i386.texi: Remove abm and .abm.  Add popcnt and .popcnt.
+	Add a tab before @samp{.sse4a}.
+
+2020-02-17  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Don't try to guess a suffix
+	for AddrPrefixOpReg templates. Combine the two pieces of
+	addrprefixopreg handling. Reject 16-bit address reg in 64-bit
+	mode.
+
+2020-02-17  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/14439
+	* config/tc-i386.c (md_assemble): Also suppress operand
+	swapping for MONITOR{,X} and MWAIT{,X}.
+	* testsuite/gas/i386/sse3.s, testsuite/gas/i386/x86-64-sse3.s:
+	Add Intel syntax monitor/mwait tests.
+	* testsuite/gas/i386/sse3.d, testsuite/gas/i386/x86-64-sse3.d:
+	Adjust expectations.
+	*testsuite/gas/i386/sse3-intel.d,
+	testsuite/gas/i386/x86-64-sse3-intel.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-02-17  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/6518
+	* config/tc-i386.c (process_suffix): Re-work Intel-syntax
+	[XYZ]MMWord memory operand ambiguity recognition logic (largely
+	re-indentation).
+	* testsuite/gas/i386/avx512dq-inval.s: Add vcvtqq2ps/vcvtuqq2ps
+	cases.
+	* testsuite/gas/i386/inval-avx512f.s: Also test vcvtneps2bf16.
+	* testsuite/gas/i386/avx512dq-inval.l,
+	testsuite/gas/i386/inval-avx.l,
+	testsuite/gas/i386/inval-avx512f.l: Adjust expectations.
+	* testsuite/gas/i386/avx512vl-ambig.s,
+	testsuite/gas/i386/avx512vl-ambig.l: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2020-02-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (cpu_arch): Add .sse4a and nosse4a.  Restore
+	nosse4.
+	* doc/c-i386.texi: Document sse4a and nosse4a.
+
+2020-02-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* doc/c-i386.texi: Remove the old movsx and movzx documentation
+	for AT&T syntax.
+
+2020-02-14  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/25438
+	* config/tc-i386.c (md_assemble): Move movsx/movzx special
+	casing ...
+	(process_suffix): ... here. Consider just the first operand
+	initially.
+	(check_long_reg): Drop opcode 0x63 special case again.
+	* testsuite/gas/i386/i386.s, testsuite/gas/i386/iamcu-1.s,
+	testsuite/gas/i386/ilp32/x86-64.s, testsuite/gas/i386/x86_64.s:
+	Move ambiguous operand size tests ...
+	* testsuite/gas/i386/noreg16.s, testsuite/gas/i386/noreg32.s,
+	testsuite/gas/i386/noreg64.s: ... here.
+	* testsuite/gas/i386/i386.d, testsuite/gas/i386/i386-intel.d
+	testsuite/gas/i386/iamcu-1.d, testsuite/gas/i386/ilp32/x86-64.d,
+	testsuite/gas/i386/k1om.d, testsuite/gas/i386/l1om.d,
+	testsuite/gas/i386/movx16.l, testsuite/gas/i386/movx32.l,
+	testsuite/gas/i386/movx64.l, testsuite/gas/i386/noreg16.d,
+	testsuite/gas/i386/noreg32.d, testsuite/gas/i386/noreg64.d,
+	testsuite/gas/i386/x86-64-movsxd.d,
+	testsuite/gas/i386/x86-64-movsxd-intel.d,
+	testsuite/gas/i386/x86_64.d, testsuite/gas/i386/x86_64-intel.d:
+	Adjust expectations.	
+	* testsuite/gas/i386/movx16.s, testsuite/gas/i386/movx16.l,
+	testsuite/gas/i386/movx32.s, testsuite/gas/i386/movx32.l,
+	testsuite/gas/i386/movx64.s, testsuite/gas/i386/movx64.l: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-02-14  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_operands): Also skip segment
+	override prefix emission if it matches an already present one.
+	* testsuite/gas/i386/prefix32.s: Add double segment override
+	cases.
+	* testsuite/gas/i386/prefix32.l: Adjust expectations.
+
+2020-02-14  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_operands): Drop ineffectual segment
+	overrides when optimizing.
+	* testsuite/gas/i386/lea-optimize.d: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2020-02-14  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_operands): Also check insn prefix
+	for ineffectual segment override warning. Don't cover possible
+	VEX/EVEX encoded insns there.
+	* testsuite/gas/i386/lea.s, testsuite/gas/i386/lea.d,
+	testsuite/gas/i386/lea.e: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2020-02-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25438
+	* doc/c-i386.texi: Document movsx, movsxd and movzx for AT&T
+	syntax.
+
+2020-02-13  Fangrui Song   <maskray@google.com>
+	    H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25551
+	* config/tc-i386.c (tc_i386_fix_adjustable): Don't check
+	BFD_RELOC_386_PLT32 nor BFD_RELOC_X86_64_PLT32.
+	* testsuite/gas/i386/i386.exp: Run relax-5 and x86-64-relax-4.
+	* testsuite/gas/i386/relax-5.d: New file.
+	* testsuite/gas/i386/relax-5.s: Likewise.
+	* testsuite/gas/i386/x86-64-relax-4.d: Likewise.
+	* testsuite/gas/i386/x86-64-relax-4.s: Likewise.
+
+2020-02-13  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (cpu_noarch): Use CPU_ANY_SSE4_FLAGS in
+	"nosse4" entry.
+
+2020-02-12  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (avx512): New (at file scope), moved from
+	(check_VecOperands): ... here.
+	(process_suffix): Add [XYZ]MMword operand size handling.
+	* testsuite/gas/i386/avx512dq-inval.s: Add VFPCLASS tests.
+	* testsuite/gas/i386/noavx512-2.s: Add Intel syntax VFPCLASS
+	tests.
+	* testsuite/gas/i386/avx512dq-inval.l,
+	testsuite/gas/i386/noavx512-2.l: Adjust expectations.
+
+2020-02-12  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/24546
+	* config/tc-i386.c (match_template): Apply AMD64 check to 64-bit
+	code only.
+	* config/tc-i386-intel.c (i386_intel_operand): Also handle
+	CALL/JMP in O_tbyte_ptr case.
+	* doc/c-i386.texi: Mention far call and full pointer load ISA
+	differences.
+	* testsuite/gas/i386/x86-64-branch-3.s,
+	testsuite/gas/i386/x86-64-intel64.s: Add 64-bit far call cases.
+	* testsuite/gas/i386/x86-64-branch-3.d,
+	testsuite/gas/i386/x86-64-intel64.d: Adjust expectations.
+	* testsuite/gas/i386/x86-64-branch-5.l,
+	testsuite/gas/i386/x86-64-branch-5.s: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2020-02-12  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/25438
+	* config/tc-i386.c (REGISTER_WARNINGS): Delete.
+	(check_byte_reg): Skip only source operand of CRC32. Drop Non-
+	64-bit-only warning.
+	(check_word_reg): Consistently error on mismatching register
+	size and suffix.
+	* testsuite/gas/i386/general.s: Replace dword GPR with word one
+	for movw. Replace suffix / GPR for orb.
+	* testsuite/gas/i386/inval.s: Add tests for movw with dword and
+	byte GPRs as well as ones for inb/outb with a word accumulator.
+	* testsuite/gas/i386/general.l, testsuite/gas/i386/intelbad.l,
+	testsuite/gas/i386/inval.l: Adjust expectations.
+
+2020-02-12  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (operand_type_register_match): Also fall
+	through initial two if()-s when the template allows for a GPR
+	operand. Adjust comment.
+
+2020-02-11  Jan Beulich  <jbeulich@suse.com>
+
+	(struct _i386_insn): New field "short_form".
+	(optimize_encoding): Drop setting of shortform field.
+	(process_suffix): Set i.short_form. Replace shortform use.
+	(process_operands): Replace shortform use.
+
+2020-02-11  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-arm.c (vcx_handle_register_arguments): Remove `for`
+	loop initial declaration.
+
+2020-02-10  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-arm.c (NEON_MAX_TYPE_ELS): Increment to account for
+	instructions that can have 5 arguments.
+	(enum operand_parse_code): Add new operands.
+	(parse_operands): Account for new operands.
+	(S5): New macro.
+	(enum neon_shape_el): Introduce P suffixes for coprocessor.
+	(neon_select_shape): Account for P suffix.
+	(LOW1): Move macro to global position.
+	(HI4): Move macro to global position.
+	(vcx_assign_vec_d): New.
+	(vcx_assign_vec_m): New.
+	(vcx_assign_vec_n): New.
+	(enum vcx_reg_type): New.
+	(vcx_get_reg_type): New.
+	(vcx_size_pos): New.
+	(vcx_vec_pos): New.
+	(vcx_handle_shape): New.
+	(vcx_ensure_register_in_range): New.
+	(vcx_handle_register_arguments): New.
+	(vcx_handle_insn_block): New.
+	(vcx_handle_common_checks): New.
+	(do_vcx1): New.
+	(do_vcx2): New.
+	(do_vcx3): New.
+	* testsuite/gas/arm/cde-missing-fp.d: New test.
+	* testsuite/gas/arm/cde-missing-fp.l: New test.
+	* testsuite/gas/arm/cde-missing-mve.d: New test.
+	* testsuite/gas/arm/cde-missing-mve.l: New test.
+	* testsuite/gas/arm/cde-mve-or-neon.d: New test.
+	* testsuite/gas/arm/cde-mve-or-neon.s: New test.
+	* testsuite/gas/arm/cde-mve.s: New test.
+	* testsuite/gas/arm/cde-warnings.l:
+	* testsuite/gas/arm/cde-warnings.s:
+	* testsuite/gas/arm/cde.d:
+	* testsuite/gas/arm/cde.s:
+
+2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>
+	    Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-arm.c (arm_ext_cde*): New feature sets for each
+	CDE coprocessor that can be enabled.
+	(enum pred_instruction_type): New pred type.
+	(BAD_NO_VPT): New error message.
+	(BAD_CDE): New error message.
+	(BAD_CDE_COPROC): New error message.
+	(enum operand_parse_code): Add new immediate operands.
+	(parse_operands): Account for new immediate operands.
+	(check_cde_operand): New.
+	(cde_coproc_enabled): New.
+	(cde_coproc_pos): New.
+	(cde_handle_coproc): New.
+	(cxn_handle_predication): New.
+	(do_custom_instruction_1): New.
+	(do_custom_instruction_2): New.
+	(do_custom_instruction_3): New.
+	(do_cx1): New.
+	(do_cx1a): New.
+	(do_cx1d): New.
+	(do_cx1da): New.
+	(do_cx2): New.
+	(do_cx2a): New.
+	(do_cx2d): New.
+	(do_cx2da): New.
+	(do_cx3): New.
+	(do_cx3a): New.
+	(do_cx3d): New.
+	(do_cx3da): New.
+	(handle_pred_state): Define new IT block behaviour.
+	(insns): Add newn CX*{,d}{,a} instructions.
+	(CDE_EXTENSIONS,armv8m_main_ext_table,armv8_1m_main_ext_table):
+	Define new cdecp extension strings.
+	* doc/c-arm.texi: Document new cdecp extension arguments.
+	* testsuite/gas/arm/cde-scalar.d: New test.
+	* testsuite/gas/arm/cde-scalar.s: New test.
+	* testsuite/gas/arm/cde-warnings.d: New test.
+	* testsuite/gas/arm/cde-warnings.l: New test.
+	* testsuite/gas/arm/cde-warnings.s: New test.
+	* testsuite/gas/arm/cde.d: New test.
+	* testsuite/gas/arm/cde.s: New test.
+
+2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25516
+	* config/tc-i386.c (intel64): Renamed to ...
+	(isa64): This.
+	(match_template): Accept Intel64 only instruction by default.
+	(i386_displacement): Updated.
+	(md_parse_option): Updated.
+	* c-i386.texi: Update -mamd64/-mintel64 documentation.
+	* testsuite/gas/i386/i386.exp: Run x86-64-sysenter.  Pass
+	-mamd64 to x86-64-sysenter-amd.
+	* testsuite/gas/i386/x86-64-sysenter.d: New file.
+
+2020-02-10  Alan Modra  <amodra@gmail.com>
+
+	* config/obj-elf.c (obj_elf_change_section): Error for section
+	type, attr or entsize changes in assembly.
+	* testsuite/gas/elf/elf.exp: Pass -Z to gas for section5 test.
+	* testsuite/gas/elf/section5.l: Update.
+
+2020-02-10  Alan Modra  <amodra@gmail.com>
+
+	* output-file.c (output_file_close): Do a normal close when
+	flag_always_generate_output.
+	* write.c (write_object_file): Don't stop output when
+	flag_always_generate_output.
+
+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25469
+	* config/tc-z80.c: Add -gbz80 command line option to generate code
+	for the GameBoy Z80.  Add support for generating DWARF.
+	* config/tc-z80.h: Add support for DWARF debug information
+	generation.
+	* doc/c-z80.texi: Document new command line option.
+	* testsuite/gas/z80/gbz80_all.d: New file.
+	* testsuite/gas/z80/gbz80_all.s: New file.
+	* testsuite/gas/z80/z80.exp: Run the new tests.
+	* testsuite/gas/z80/z80n_all.d: New file.
+	* testsuite/gas/z80/z80n_all.s: New file.
+	* testsuite/gas/z80/z80n_reloc.d: New file.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25381
+	* config/obj-elf.c (get_section): Also check
+	linked_to_symbol_name.
+	(obj_elf_change_section): Also set map_head.linked_to_symbol_name.
+	(obj_elf_parse_section_letters): Handle the 'o' flag.
+	(build_group_lists): Renamed to ...
+	(build_additional_section_info): This.  Set elf_linked_to_section
+	from map_head.linked_to_symbol_name.
+	(elf_adjust_symtab): Updated.
+	* config/obj-elf.h (elf_section_match): Add linked_to_symbol_name.
+	* doc/as.texi: Document the 'o' flag.
+	* testsuite/gas/elf/elf.exp: Run PR gas/25381 tests.
+	* testsuite/gas/elf/section18.d: New file.
+	* testsuite/gas/elf/section18.s: Likewise.
+	* testsuite/gas/elf/section19.d: Likewise.
+	* testsuite/gas/elf/section19.s: Likewise.
+	* testsuite/gas/elf/section20.d: Likewise.
+	* testsuite/gas/elf/section20.s: Likewise.
+	* testsuite/gas/elf/section21.d: Likewise.
+	* testsuite/gas/elf/section21.l: Likewise.
+	* testsuite/gas/elf/section21.s: Likewise.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention x86 assembler options to align branches for
+	binutils 2.34.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/i386/i386.exp: Run unique and x86-64-unique
+	only for ELF targets.
+	* testsuite/gas/i386/unique.d: Don't xfail.
+	* testsuite/gas/i386/x86-64-unique.d: Likewise.
+
+2020-02-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/i386/unique.d: xfail for non-elf targets.
+	* testsuite/gas/i386/x86-64-unique.d: Likewise.
+
+2020-02-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/section12a.d: Use supports_gnu_osabi in
+	xfail, and rename test.
+	* testsuite/gas/elf/section12b.d: Likewise.
+	* testsuite/gas/elf/section16a.d: Likewise.
+	* testsuite/gas/elf/section16b.d: Likewise.
+
+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25380
+	* config/obj-elf.c (section_match): Removed.
+	(get_section): Also match SEC_ASSEMBLER_SECTION_ID and
+	section_id.
+	(obj_elf_change_section): Replace info and group_name arguments
+	with match_p.  Also update the section ID and flags from match_p.
+	(obj_elf_section): Handle "unique,N".  Update call to
+	obj_elf_change_section.
+	* config/obj-elf.h (elf_section_match): New.
+	(obj_elf_change_section): Updated.
+	* config/tc-arm.c (start_unwind_section): Update call to
+	obj_elf_change_section.
+	* config/tc-ia64.c (obj_elf_vms_common): Likewise.
+	* config/tc-microblaze.c (microblaze_s_data): Likewise.
+	(microblaze_s_sdata): Likewise.
+	(microblaze_s_rdata): Likewise.
+	(microblaze_s_bss): Likewise.
+	* config/tc-mips.c (s_change_section): Likewise.
+	* config/tc-msp430.c (msp430_profiler): Likewise.
+	* config/tc-rx.c (parse_rx_section): Likewise.
+	* config/tc-tic6x.c (tic6x_start_unwind_section): Likewise.
+	* doc/as.texi: Document "unique,N" in .section directive.
+	* testsuite/gas/elf/elf.exp: Run "unique,N" tests.
+	* testsuite/gas/elf/section15.d: New file.
+	* testsuite/gas/elf/section15.s: Likewise.
+	* testsuite/gas/elf/section16.s: Likewise.
+	* testsuite/gas/elf/section16a.d: Likewise.
+	* testsuite/gas/elf/section16b.d: Likewise.
+	* testsuite/gas/elf/section17.d: Likewise.
+	* testsuite/gas/elf/section17.l: Likewise.
+	* testsuite/gas/elf/section17.s: Likewise.
+	* testsuite/gas/i386/unique.d: Likewise.
+	* testsuite/gas/i386/unique.s: Likewise.
+	* testsuite/gas/i386/x86-64-unique.d: Likewise.
+	* testsuite/gas/i386/i386.exp: Run unique and x86-64-unique.
+
+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gas/elf/section13.s: Replace @nobits with %nobits.
+
+2020-02-01  Anthony Green  <green@moxielogic.com>
+
+	* config/tc-moxie.c (md_begin): Don't force big-endian mode.
+
+2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>
+
+	* config/tc-nios2.c (nios2_cons): Handle %gotoff as well as
+	%tls_ldo.
+
+2020-01-31  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	PR gas/25472
+	* config/tc-arm.c (armv8m_main_ext_table): Refactored +dsp adding.
+	(armv8_1m_main_ext_table): Refactored +dsp adding and enabled dsp for
+	+mve.
+	* testsuite/gas/arm/mve_dsp.d: New test.
+
+2020-01-31  Nick Clifton  <nickc@redhat.com>
+
+	* config/tc-s390.c (s390_elf_suffix): Return ELF_SUFFIX_NONE
+	rather than BFD_RELOC_NONE.
+
+2020-01-31  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
+
+	* config/tc-arm.c (fldmias): Moved inside "THUMB_VARIANT & arm_ext_v6t2"
+	to support VLDMIA instruction for MVE.
+	(fldmdbs): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VLDMDB
+	instruction for MVE.
+	(fstmias): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VSTMIA
+	instruction for MVE.
+	(fstmdbs): Moved inside "THUMB_VARIANT & arm_ext_v6t2" to support VSTMDB
+	instruction for MVE.
+	* testsuite/gas/arm/mve-ldst.d: New test.
+	* testsuite/gas/arm/mve-ldst.s: Likewise.
+
+2020-01-31  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+	* po/ru.po: Updated Russian translation.
+
+2020-01-31  Richard Sandiford  <richard.sandiford@arm.com>
+
+	* testsuite/gas/aarch64/sve-bfloat-movprfx.s: Use .h rather than
+	.s for the movprfx.
+	* testsuite/gas/aarch64/sve-bfloat-movprfx.d: Update accordingly.
+	* testsuite/gas/aarch64/sve-movprfx_28.d,
+	* testsuite/gas/aarch64/sve-movprfx_28.l,
+	* testsuite/gas/aarch64/sve-movprfx_28.s: New test.
+
+2020-01-30  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (output_disp): Tighten base_opcode check.
+	* testsuite/gas/i386/got.s: Add LSL, MOVLPS, and BNDCN cases.
+	* testsuite/gas/i386/got-no-relax.d, testsuite/gas/i386/got.d:
+	Adjust expectations.
+
+2020-01-30  Jose E. Marchesi  <jose.marchesi@oracle.com>
+
+	* testsuite/gas/bpf/alu.d: Update expected opcode for `neg'.
+	* testsuite/gas/bpf/alu-be.d: Likewise.
+	* testsuite/gas/bpf/alu32.d: Likewise for `neg32'.
+	* testsuite/gas/bpf/alu32-be.d: Likewise.
+
+2020-01-30  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-branch-2.s,
+	testsuite/gas/i386/x86-64-branch-4.s,
+	testsuite/gas/i386/x86-64-branch.s: Add RETW cases.
+	* testsuite/gas/i386/ilp32/x86-64-branch.d,
+	testsuite/gas/i386/x86-64-branch-2.d,
+	testsuite/gas/i386/x86-64-branch-4.l,
+	testsuite/gas/i386/x86-64-branch.d: Adjust expectations.
+
+2020-01-30  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): .
+	testsuite/gas/i386/noreg64.s: Add IRET and LRET cases.
+	testsuite/gas/i386/x86-64-opcode.s: Add suffix to IRET and LRET.
+	Add LRETQ case.
+	testsuite/gas/i386/x86-64-suffix.s: Drop IRET case without
+	suffix.
+	testsuite/gas/i386/x86_64.s: Add RETF cases.
+	* testsuite/gas/i386/k1om.d, testsuite/gas/i386/l1om.d,
+	testsuite/gas/i386/noreg64.d, testsuite/gas/i386/noreg64.l,
+	testsuite/gas/i386/x86-64-opcode.d,
+	testsuite/gas/i386/x86-64-suffix-intel.d,
+	testsuite/gas/i386/x86-64-suffix.d,
+	testsuite/gas/i386/x86_64-intel.d
+	testsuite/gas/i386/x86_64.d: Adjust expectations.
+	* testsuite/gas/i386/x86-64-suffix.e,
+	testsuite/gas/i386/x86_64.e: New.
+
+2020-01-30  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Redo and move FLDENV et al
+	special case.
+
+2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25445
+	* config/tc-i386.c (check_long_reg): Also convert to QWORD for
+	movsxd.
+	* doc/c-i386.texi: Add a node for AMD64 vs. Intel64 ISA
+	differences.  Document movslq and movsxd.
+	* testsuite/gas/i386/i386.exp: Run PR binutils/25445 tests.
+	* testsuite/gas/i386/x86-64-movsxd-intel.d: New file.
+	* testsuite/gas/i386/x86-64-movsxd-intel64-intel.d: Likewise.
+	* testsuite/gas/i386/x86-64-movsxd-intel64-inval.l: Likewise.
+	* testsuite/gas/i386/x86-64-movsxd-intel64-inval.s: Likewise.
+	* testsuite/gas/i386/x86-64-movsxd-intel64.d: Likewise.
+	* testsuite/gas/i386/x86-64-movsxd-intel64.s: Likewise.
+	* testsuite/gas/i386/x86-64-movsxd-inval.l: Likewise.
+	* testsuite/gas/i386/x86-64-movsxd-inval.s: Likewise.
+	* testsuite/gas/i386/x86-64-movsxd.d: Likewise.
+	* testsuite/gas/i386/x86-64-movsxd.s: Likewise.
+
+2020-01-27  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/all/gas.exp: Replace case statements with switch
+	statements.
+	* testsuite/gas/elf/elf.exp: Likewise.
+	* testsuite/gas/macros/macros.exp: Likewise.
+	* testsuite/lib/gas-defs.exp: Likewise.
+
+2020-01-27  Tamar Christina  <tamar.christina@arm.com>
+
+	PR 25403
+	* testsuite/gas/aarch64/armv8_4-a.d: Add cfinv.
+	* testsuite/gas/aarch64/armv8_4-a.s: Likewise.
+
+2020-01-22  Maxim Blinov  <maxim.blinov@embecosm.com>
+
+	* testsuite/gas/riscv/march-ok-s.d: sx is no longer valid and
+	s exts must be known, so rename *ok* to *fail*.
+	* testsuite/gas/riscv/march-ok-sx.d: Likewise.
+	* testsuite/gas/riscv/march-ok-s-with-version: Likewise.
+	* testsuite/gas/riscv/march-fail-s.l: Expected error messages for
+	above change.
+	* testsuite/gas/riscv/march-fail-sx.l: Likewise.
+	* testsuite/gas/riscv/march-fail-sx-with-version.l: Likewise.
+
+2020-01-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25438
+	* config/tc-i386.c (check_long_reg): Always disallow double word
+	suffix in mnemonic with word general register.
+	* testsuite/gas/i386/general.s: Replace word general register
+	with double word general register for movl.
+	* testsuite/gas/i386/inval.s: Add tests for movl with word general
+	register.
+	* testsuite/gas/i386/general.l: Updated.
+	* testsuite/gas/i386/inval.l: Likewise.
+
+2020-01-22  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-ppc.c (parse_tls_arg): Handle tls arg for
+	__tls_get_addr_desc and __tls_get_addr_opt.
+
+2020-01-21  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/inval-crc32.s,
+	testsuite/gas/i386/x86-64-inval-crc32.s: Add alignment directive.
+	* testsuite/gas/i386/inval-crc32.l,
+	testsuite/gas/i386/x86-64-inval-crc32.l: Adjust expectations.
+
+2020-01-21  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Merge CRC32 handling into
+	generic code path. Deal with No_lSuf being set in a template.
+	* testsuite/gas/i386/inval-crc32.l,
+	testsuite/gas/i386/x86-64-inval-crc32.l: Expect warning(s)
+	instead of error(s) when operand size is ambiguous.
+	* testsuite/gas/i386/noreg16.s, testsuite/gas/i386/noreg32.s,
+	testsuite/gas/i386/noreg64.s: Add CRC32 tests.
+	* testsuite/gas/i386/noreg16.d, testsuite/gas/i386/noreg16.l,
+	testsuite/gas/i386/noreg32.d, testsuite/gas/i386/noreg32.l,
+	testsuite/gas/i386/noreg64.d, testsuite/gas/i386/noreg64.l:
+	Adjust expectations.
+
+2020-01-21  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (process_suffix): Drop SYSRET special case
+	and an intel_syntax check. Re-write lack-of-suffix processing
+	logic.
+	* doc/c-i386.texi: Document operand size defaults for suffix-
+	less AT&T syntax insns.
+	* testsuite/gas/i386/bundle.s, testsuite/gas/i386/lock-1.s,
+	testsuite/gas/i386/opcode.s, testsuite/gas/i386/sse3.s,
+	testsuite/gas/i386/x86-64-avx-scalar.s,
+	testsuite/gas/i386/x86-64-avx.s,
+	testsuite/gas/i386/x86-64-bundle.s,
+	testsuite/gas/i386/x86-64-intel64.s,
+	testsuite/gas/i386/x86-64-lock-1.s,
+	testsuite/gas/i386/x86-64-opcode.s,
+	testsuite/gas/i386/x86-64-sse2avx.s,
+	testsuite/gas/i386/x86-64-sse3.s: Add missing suffixes.
+	* testsuite/gas/i386/nops.s, testsuite/gas/i386/sse-noavx.s,
+	testsuite/gas/i386/x86-64-nops.s,
+	testsuite/gas/i386/x86-64-ptwrite.s,
+	testsuite/gas/i386/x86-64-simd.s,
+	testsuite/gas/i386/x86-64-sse-noavx.s,
+	testsuite/gas/i386/x86-64-suffix.s: Drop bogus suffix-less
+	insns.
+	* testsuite/gas/i386/noreg16.s, testsuite/gas/i386/noreg32.s,
+	testsuite/gas/i386/noreg64.s: Add further tests.
+	* testsuite/gas/i386/ilp32/x86-64-nops.d,
+	testsuite/gas/i386/nops.d, testsuite/gas/i386/noreg16.d,
+	testsuite/gas/i386/noreg32.d, testsuite/gas/i386/noreg64.d,
+	testsuite/gas/i386/sse-noavx.d,
+	testsuite/gas/i386/x86-64-intel64.d,
+	testsuite/gas/i386/x86-64-nops.d,
+	testsuite/gas/i386/x86-64-opcode.d,
+	testsuite/gas/i386/x86-64-ptwrite-intel.d,
+	testsuite/gas/i386/x86-64-ptwrite.d,
+	testsuite/gas/i386/x86-64-simd-intel.d,
+	testsuite/gas/i386/x86-64-simd-suffix.d,
+	testsuite/gas/i386/x86-64-simd.d,
+	testsuite/gas/i386/x86-64-sse-noavx.d
+	testsuite/gas/i386/x86-64-suffix.d,
+	testsuite/gas/i386/x86-64-suffix-intel.d: Adjust expectations.
+	* testsuite/gas/i386/noreg16.l, testsuite/gas/i386/noreg32.l,
+	testsuite/gas/i386/noreg64.l: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-01-21  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/avx512_bf16_vl.s,
+	testsuite/gas/i386/x86-64-avx512_bf16_vl.s: Add broadcast forms
+	of VCVTNEPS2BF16{X,Y}. Add operand-size less Intel syntax
+	broadcast forms of VCVTNEPS2BF16.
+	* testsuite/gas/i386/avx512_bf16_vl.d,
+	testsuite/gas/i386/x86-64-avx512_bf16_vl.d: Adjust expectations.
+
+2020-01-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/uk.po: Updated Ukranian translation.
+
+2020-01-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25416
+	* config/tc-i386.c (output_insn): Add a dummy REX_OPCODE prefix
+	for lea with R_X86_64_GOTPC32_TLSDESC relocation when generating
+	x32 object.
+	* testsuite/gas/i386/ilp32/x32-tls.d: Updated.
+	* testsuite/gas/i386/ilp32/x32-tls.s: Add tests for lea with
+	R_X86_64_GOTPC32_TLSDESC relocation.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/gas.pot: Regenerate.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* config/tc-i386.c (_i386_insn): Replace vex_encoding_vex2
+	with vex_encoding_vex.
+	(parse_insn): Likewise.
+	* doc/c-i386.texi: Replace {vex2} with {vex}.  Update {vex}
+	and {vex3} documentation.
+	* testsuite/gas/i386/pseudos.s: Replace 3 {vex2} tests with
+	{vex}.
+	* testsuite/gas/i386/x86-64-pseudos.s: Likewise.
+
+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>
+
+	PR 25376
+	* config/tc-arm.c (mve_ext, mve_fp_ext): Use CORE_HIGH.
+	(armv8_1m_main_ext_table): Use CORE_HIGH for mve.
+	* testsuite/arm/armv8_1-m-fpu-mve-1.s: New.
+	* testsuite/arm/armv8_1-m-fpu-mve-1.d: New.
+	* testsuite/arm/armv8_1-m-fpu-mve-2.s: New.
+	* testsuite/arm/armv8_1-m-fpu-mve-2.d: New.
+
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (match_template): Drop found_cpu_match local
+	variable.
+
+2020-01-16  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/avx512dq-inval.l,
+	testsuite/gas/i386/avx512dq-inval.s: New.
+	* testsuite/gas/i386/i386.exp: Run new test.
+
+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* config/tc-msp430.c (CHECK_RELOC_MSP430): Always generate 430X
+	relocations when the target is 430X, except when extracting part of an
+	expression.
+	(msp430_srcoperand): Adjust comment.
+	Initialize the expp member of the msp430_operand_s struct as
+	appropriate.
+	(msp430_dstoperand): Likewise.
+	* testsuite/gas/msp430/msp430.exp: Run new test.
+	* testsuite/gas/msp430/reloc-lo-430x.d: New test.
+	* testsuite/gas/msp430/reloc-lo-430x.s: New test.
+
+2020-01-15  Alan Modra  <amodra@gmail.com>
+
+	* configure.tgt: Add sparc-*-freebsd case.
+
+2020-01-14  Lili Cui <lili.cui@intel.com>
+
+	* testsuite/gas/i386/align-branch-1a.d: Updated for Darwin.
+	* testsuite/gas/i386/align-branch-1b.d: Likewise.
+	* testsuite/gas/i386/align-branch-1c.d: Likewise.
+	* testsuite/gas/i386/align-branch-1d.d: Likewise.
+	* testsuite/gas/i386/align-branch-1e.d: Likewise.
+	* testsuite/gas/i386/align-branch-1f.d: Likewise.
+	* testsuite/gas/i386/align-branch-1g.d: Likewise.
+	* testsuite/gas/i386/align-branch-1h.d: Likewise.
+	* testsuite/gas/i386/align-branch-1i.d: Likewise.
+	* testsuite/gas/i386/align-branch-5.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1a.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1b.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1c.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1d.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1e.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1f.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1g.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1h.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-1i.d: Likewise.
+	* testsuite/gas/i386/x86-64-align-branch-5.d: Likewise.
+	* testsuite/gas/i386/i386.exp: Skip x86-64-align-branch-2a,
+	x86-64-align-branch-2b and x86-64-align-branch-2c on Darwin.
+
+2020-01-14  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25377
+	* config/tc-z80.c: Add support for half precision, single
+	precision and double precision floating point values.
+	* config/tc-z80.h b/gas/config/tc-z80.h: Disable string escapes.
+	* doc/as.texi: Add new z80 command line options.
+	* doc/c-z80.texi: Document new z80 command line options.
+	* testsuite/gas/z80/ez80_pref_dis.s: New test.
+	* testsuite/gas/z80/ez80_pref_dis.d: New test driver.
+	* testsuite/gas/z80/z80.exp: Run the new test.
+	* testsuite/gas/z80/fp_math48.d: Use correct command line option.
+	* testsuite/gas/z80/fp_zeda32.d: Likewise.
+	* testsuite/gas/z80/strings.d: Update expected output.
+
+2020-01-13  Matthew Malcomson  <matthew.malcomson@arm.com>
+
+	* config/tc-aarch64.c (f64mm, f32mm): Add sve as a feature
+	dependency.
+
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
+
+	* config/tc-arc.c (arc_select_cpu): Re-init the bfd if we change
+	the CPU.
+	* config/tc-arc.h: Add header if/defs.
+	* testsuite/gas/arc/pseudos.d: Improve matching pattern.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/wasm32/allinsn.d: Update expected output.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-tic4x.c (tic4x_operands_match): Correct tic3x trap
+	insertion.
+
+2020-01-10  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/gas/elf/pr14891.s: Don't start directives in first column.
+	* testsuite/gas/elf/pr21661.d: Don't run on hpux.
+
+2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25224
+	* config/tc-z80.c (emit_ld_m_rr): Use integer types when checking
+	opcode byte values.
+	(emit_ld_r_r): Likewise.
+	(emit_ld_rr_m): Likewise.
+	(emit_ld_rr_nn): Likewise.
+
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (optimize_encoding): Add
+	is_any_vex_encoding() invocations. Drop respective
+	i.tm.extension_opcode == None checks.
+
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (md_assemble): Check RegRex is clear during
+	REX transformations. Correct comment indentation.
+
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
+
+	* config/tc-i386.c (optimize_encoding): Generalize register
+	transformation for TEST optimization.
+
+2020-01-09  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/i386/x86-64-sysenter-amd.s,
+	testsuite/gas/i386/x86-64-sysenter-amd.d,
+	testsuite/gas/i386/x86-64-sysenter-amd.l,
+	testsuite/gas/i386/x86-64-sysenter-intel.d,
+	testsuite/gas/i386/x86-64-sysenter-mixed.d: New.
+	* testsuite/gas/i386/i386.exp: Run new tests.
+
+2020-01-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 25284
+	* doc/as.texi (Align): Document the fact that all arguments can be
+	omitted.
+	(Balign): Likewise.
+	(P2align): Likewise.
+
+2020-01-08  Nick Clifton  <nickc@redhat.com>
+
+	PR 14891
+	* config/obj-elf.c (obj_elf_section): Fail if the section name is
+	already defined as a different symbol type.
+	* testsuite/gas/elf/pr14891.s: New test source file.
+	* testsuite/gas/elf/pr14891.d: New test driver.
+	* testsuite/gas/elf/pr14891.s: New test expected error output.
+	* testsuite/gas/elf/elf.exp: Run the new test.
+
+2020-01-08  Alan Modra  <amodra@gmail.com>
+
+	* config/tc-z8k.c (md_begin): Make idx unsigned.
+	(get_specific): Likewise for this_index.
+
+2020-01-07  Claudiu Zissulescu  <claziss@synopsys.com>
+
+	* onfig/tc-arc.c (parse_reloc_symbol): New function.
+	(tokenize_arguments): Clean up, use parse_reloc_symbol function.
+	(md_operand): Set X_md to absent.
+	(arc_parse_name): Check for X_md.
+
+2020-01-03  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25311
+	* as.h (TC_STRING_ESCAPES): Provide a default definition.
+	* app.c (do_scrub_chars): Use TC_STRING_ESCAPES instead of
+	NO_STRING_ESCAPES.
+	* read.c (next_char_of_string): Likewise.
+	* config/tc-ppc.h (TC_STRING_ESCAPES): Define.
+	* config/tc-z80.h (TC_STRING_ESCAPES): Define.
+
+2020-01-03  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/f64mm.s: Scale index of LD1RO{H,W,D}.
+	* testsuite/gas/aarch64/f64mm.d: Adjust expectations.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/i8mm.s: Add 128-bit form tests for
+	by-element usdot. Add 64-bit form tests for by-element sudot.
+	* testsuite/gas/aarch64/i8mm.d: Adjust expectations.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/f64mm.s: Drop 'i' from uzip<n>.
+	* testsuite/gas/aarch64/f64mm.d: Adjust expectations.
+
+2020-01-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/gas/aarch64/f64mm.d,
+	testsuite/gas/aarch64/sve-movprfx-mm.d: Adjust expectations.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* config/tc-z80.c: Add new architectures: Z180 and eZ80. Add
+	support for assembler code generated by SDCC. Add new relocation
+	types. Add z80-elf target support.
+	* config/tc-z80.h: Add z80-elf target support. Enable dollar local
+	labels. Local labels starts from ".L".
+	* NEWS: Mention the new support.
+	* testsuite/gas/all/fwdexp.d: Fix failure due to symbol conflict.
+	* testsuite/gas/all/fwdexp.s: Likewise.
+	* testsuite/gas/all/cond.l: Likewise.
+	* testsuite/gas/all/cond.s: Likewise.
+	* testsuite/gas/all/fwdexp.d: Likewise.
+	* testsuite/gas/all/fwdexp.s: Likewise.
+	* testsuite/gas/elf/section2.e-mips: Likewise.
+	* testsuite/gas/elf/section2.l: Likewise.
+	* testsuite/gas/elf/section2.s: Likewise.
+	* testsuite/gas/macros/app1.d: Likewise.
+	* testsuite/gas/macros/app1.s: Likewise.
+	* testsuite/gas/macros/app2.d: Likewise.
+	* testsuite/gas/macros/app2.s: Likewise.
+	* testsuite/gas/macros/app3.d: Likewise.
+	* testsuite/gas/macros/app3.s: Likewise.
+	* testsuite/gas/macros/app4.d: Likewise.
+	* testsuite/gas/macros/app4.s: Likewise.
+	* testsuite/gas/macros/app4b.s: Likewise.
+	* testsuite/gas/z80/suffix.d: Fix failure on ELF target.
+	* testsuite/gas/z80/z80.exp: Add new tests
+	* testsuite/gas/z80/dollar.d: New file.
+	* testsuite/gas/z80/dollar.s: New file.
+	* testsuite/gas/z80/ez80_adl_all.d: New file.
+	* testsuite/gas/z80/ez80_adl_all.s: New file.
+	* testsuite/gas/z80/ez80_adl_suf.d: New file.
+	* testsuite/gas/z80/ez80_isuf.s: New file.
+	* testsuite/gas/z80/ez80_z80_all.d: New file.
+	* testsuite/gas/z80/ez80_z80_all.s: New file.
+	* testsuite/gas/z80/ez80_z80_suf.d: New file.
+	* testsuite/gas/z80/r800_extra.d: New file.
+	* testsuite/gas/z80/r800_extra.s: New file.
+	* testsuite/gas/z80/r800_ii8.d: New file.
+	* testsuite/gas/z80/r800_z80_doc.d: New file.
+	* testsuite/gas/z80/z180.d: New file.
+	* testsuite/gas/z80/z180.s: New file.
+	* testsuite/gas/z80/z180_z80_doc.d: New file.
+	* testsuite/gas/z80/z80_doc.d: New file.
+	* testsuite/gas/z80/z80_doc.s: New file.
+	* testsuite/gas/z80/z80_ii8.d: New file.
+	* testsuite/gas/z80/z80_ii8.s: New file.
+	* testsuite/gas/z80/z80_in_f_c.d: New file.
+	* testsuite/gas/z80/z80_in_f_c.s: New file.
+	* testsuite/gas/z80/z80_op_ii_ld.d: New file.
+	* testsuite/gas/z80/z80_op_ii_ld.s: New file.
+	* testsuite/gas/z80/z80_out_c_0.d: New file.
+	* testsuite/gas/z80/z80_out_c_0.s: New file.
+	* testsuite/gas/z80/z80_reloc.d: New file.
+	* testsuite/gas/z80/z80_reloc.s: New file.
+	* testsuite/gas/z80/z80_sli.d: New file.
+	* testsuite/gas/z80/z80_sli.s: New file.
+
+2020-01-02  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	* config/tc-arm.c (parse_reg_list): Use REG_TYPE_RN instead of
+	REGLIST_RN.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/gas/ChangeLog-9295 b/gas/ChangeLog-9295
index c84475b7eb6..2ea3bb382a9 100644
--- a/gas/ChangeLog-9295
+++ b/gas/ChangeLog-9295
@@ -1931,7 +1931,7 @@ Tue Aug  1 17:35:26 1995  Ian Lance Taylor  <ian@cygnus.com>
 Tue Aug  1 11:35:18 1995  steve chamberlain  <sac@slash.cygnus.com>
 
 	* config/tc-sh.c (md_convert_frag): Make some error messages
-	more explict.
+	more explicit.
 
 Mon Jul 31 21:40:47 1995  Ken Raeburn  <raeburn@cygnus.com>
 
diff --git a/ld/ChangeLog-9899 b/ld/ChangeLog-9899
index 7370a32ff8f..c04d0a1434b 100644
--- a/ld/ChangeLog-9899
+++ b/ld/ChangeLog-9899
@@ -1873,7 +1873,7 @@ Thu Mar 19 14:54:45 1998  Geoffrey Noer  <noer@cygnus.com>
 	section to avoid copying certain data on fork.  The linker used to
 	include this between __data_start__ and __data_end__, but that
 	breaks building the cygwin32 dll.  The fix is to rename the
-	section	".data_cygwin_nocopy" and explictly include it after
+	section	".data_cygwin_nocopy" and explicitly include it after
 	__data_end__.
 
 Wed Mar 18 09:42:24 1998  Nick Clifton  <nickc@cygnus.com>
diff --git a/ld/ChangeLog-2020 b/ld/ChangeLog-2020
new file mode 100644
index 00000000000..03b4b224b7b
--- /dev/null
+++ b/ld/ChangeLog-2020
@@ -0,0 +1,4556 @@
+2020-12-31  H.J. Lu  <hongjiu.lu@intel.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	PR 27128
+	* testsuite/ld-elf/pr27128.s: New file.
+	* testsuite/ld-elf/pr27128.t: Likewise.
+	* testsuite/ld-elf/pr27128a.d: Likewise.
+	* testsuite/ld-elf/pr27128b.d: Likewise.
+	* testsuite/ld-elf/pr27128c.d: Likewise.
+	* testsuite/ld-elf/pr27128d.d: Likewise.
+	* testsuite/ld-elf/pr27128e.d: Likewise.
+
+2020-12-24  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/retain7a.d: Don't run on hppa-linux.
+	* testsuite/ld-elf/retain7b.d: Correct name.  Don't run on tic6x.
+	Allow OSABI FreeBSD.
+
+2020-12-24  Alan Modra  <amodra@gmail.com>
+
+	PR 27100
+	* ldlang.h (lang_output_section_statement_type): Add dup_output.
+	* ldlang.c (lang_output_section_statement_lookup): Set dup_output.
+	(init_os): Test dup_output rather than constraint.
+	* testsuite/ld-scripts/pr27100.d,
+	* testsuite/ld-scripts/pr27100.s,
+	* testsuite/ld-scripts/pr27100.t: New test.
+	* testsuite/ld-scripts/data.exp: Run it.  Don't exclude aout here.
+	* testsuite/ld-scripts/data.d: Do so here instead.
+	* testsuite/ld-scripts/fill.d: Likewise.
+	* testsuite/ld-scripts/fill16.d: Likewise.
+
+2020-12-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention LAM_U48 and LAM_U57 support.
+	* ld.texi: Document LAM_U48 and LAM_U57 support.
+	* emulparams/cet.sh: Updated.
+	* emulparams/elf_x86_64.sh: Source x86-64-lam.sh.
+	* emulparams/x86-64-lam.sh: New file.
+	* testsuite/ld-x86-64/property-x86-lam-u48-1a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u48-1b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u48-2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u48-3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u48-3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u48-4.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u48-5.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u48.s: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u57-1a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u57-1b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u57-2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u57-3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u57-3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u57-4.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u57-5.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-lam-u57.s: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Run LAM tests.
+
+2020-12-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/27082
+	* Makefile.am
+	(libdep_la_LDFLAGS): Add -module -avoid-version.
+	(libdep_la_LINK): New.
+	(install-data-local): Depend on $(install-bfdpluginLTLIBRARIES)
+	and remove libdep.la.
+
+2020-12-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/27091
+	* testsuite/ld-elf/retain7.s: New file.
+	* testsuite/ld-elf/retain7a.d: Likewise.
+	* testsuite/ld-elf/retain7b.d: Likewise.
+
+2020-12-16  Howard Chu <hyc@symas.com>
+	    H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/27081
+	* libdep_plugin.c (onload): Skip if not all required plugin hooks
+	are available.
+	* testsuite/config/default.exp (dep_plug_opt): New.
+	* testsuite/ld-elf/elf.exp: Pass $dep_plug_opt to nm.
+	* testsuite/ld-elf/pr26391.fd: New file.
+
+2020-12-16  Alan Modra  <amodra@gmail.com>
+
+	* ld.h (ld_config_type): Delete maxpagesize and commonpagesize.
+	* emultempl/elf.em: Use link_info rather than config
+	for maxpagesize and commonpagesize.
+	* emultempl/ppc32elf.em: Likewise.
+	* ldexp.c (fold_binary, fold_name): Likewise.
+	* ldemul.c (after_parse_default): Likewise.
+	(set_output_arch_default): Don't call bfd_emul_set_maxpagesize
+	or bfd_emul_set_commonpagesize.
+
+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>
+
+	* emultempl/elf.em (gld${EMULATION_NAME}_handle_option):
+	Parse -z unique / -z nounique options.
+	* ld.texi (Options): Document -z unique and -z nounique.
+	* lexsup.c (elf_shlib_list_options): Likewise.
+
+2020-12-14  Howard Chu  <hyc@symas.com>
+
+	* libdep_plugin.c: New file: Processes archives that contain a
+	special library dependencies element.
+	* Makefile.am: Add build rules for libdep_plugin.
+	* Makefile.in: Regenerate.
+	* NEWS: Mention the new plugin.
+	* ld.texi: Document the new plugin.
+
+2020-12-14  Alan Modra  <amodra@gmail.com>
+
+	PR 26836
+	* lexsup.c (parse_args): Free really_longopts, longopts and
+	shortopts.
+
+2020-12-14  Nick Clifton  <nickc@redhat.com>
+
+	PR 27050
+	* lexsup.c (parse_args): Ensure that the longind local variable is
+	set.
+
+2020-12-14  Alan Modra  <amodra@gmail.com>
+
+	PR 27064
+	* deffilep.y (SHARED_K): Rename from SHARED.  Update uses.
+
+2020-12-05  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/ld-vax-elf/got-local-exe-off-hidden.dd: New test
+	dump.
+	* testsuite/ld-vax-elf/got-local-exe-off-visible.dd: New test
+	dump.
+	* testsuite/ld-vax-elf/got-local-lib-off-hidden.dd: New test
+	dump.
+	* testsuite/ld-vax-elf/got-local-lib-off-visible.ed: New test
+	dump.
+	* testsuite/ld-vax-elf/got-local-off-external.ed: New test dump.
+	* testsuite/ld-vax-elf/got-local-exe-off.xd: New test dump.
+	* testsuite/ld-vax-elf/got-local-lib-off.xd: New test dump.
+	* testsuite/ld-vax-elf/got-local.ld: New test linker script.
+	* testsuite/ld-vax-elf/got-local-aux-off.s: New test source.
+	* testsuite/ld-vax-elf/got-local-def-off.s: New test source.
+	* testsuite/ld-vax-elf/got-local-ref-off-external.s: New test
+	source.
+	* testsuite/ld-vax-elf/got-local-ref-off-hidden.s: New test
+	source.
+	* testsuite/ld-vax-elf/got-local-ref-off-visible.s: New test
+	source.
+	* testsuite/ld-vax-elf/vax-elf.exp: Run the new tests.
+
+2020-12-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/27016
+	* testsuite/ld-x86-64/x86-64.exp: Run pr27016a and pr27016b.
+	* testsuite/ld-x86-64/pr27016a.d: New file.
+	* testsuite/ld-x86-64/pr27016a.s: Likewise.
+	* testsuite/ld-x86-64/pr27016b.d: Likewise.
+	* testsuite/ld-x86-64/pr27016b.s: Likewise.
+
+2020-12-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/pr26978a.d,
+	* testsuite/ld-elf/pr26978a.s,
+	* testsuite/ld-elf/pr26978b.d,
+	* testsuite/ld-elf/pr26978b.s: New tests.
+
+2020-12-03  Andreas Krebbel  <krebbel@linux.ibm.com>
+
+	* testsuite/ld-s390/tlsbin_64.dd: The newly added jgnop mnemonic
+	replaces long relative branches with empty condition code masks.
+
+2020-12-03  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/ld-vax-elf/vax-elf.exp: Wrap excessively long lines
+	throughout.
+
+2020-12-02  Hans-Peter Nilsson  <hp@axis.com>
+
+	* testsuite/ld-elf/pr26936.d: Pass -W.
+
+2020-12-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26970
+	* scripttempl/elfarc.sc (TEXT_START_ADDR): New.  Add SEGMENT_START.
+	(SHLIB_TEXT_START_ADDR): Likewise.
+
+2020-12-01  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/elf.exp: Set ASFLAGS for tic6x.
+	* testsuite/ld-elf/reloc-discard.d: Remove tic6x xfail.
+
+2020-12-01  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/pr26979a.s,
+	* testsuite/ld-elf/pr26979b.s,
+	* testsuite/ld-elf/pr26979c.s,
+	* testsuite/ld-elf/pr26979.ver,
+	* testsuite/ld-elf/pr26979a.d,
+	* testsuite/ld-elf/pr26979b.d: New tests.
+
+2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26936
+	* testsuite/ld-elf/pr26936.d: Xfail targets which don't support
+	mixing linkonce and comdat sections.
+
+2020-11-28  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/pr26907.ld,
+	* testsuite/ld-elf/pr26907.s,
+	* testsuite/ld-elf/pr26907.d: New test.
+
+2020-11-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* emulparams/armelf.sh (OTHER_SECTIONS): Remove .noinit section
+	definition.
+	Define HAVE_{NOINIT,PERSISTENT}=yes.
+	* scripttempl/avr.sc (.noinit): Add .noinit.* and .gnu.linkonce.n.*
+	input section wildcard patterns.
+	* scripttempl/elf.sc: Define .noinit and .persistent sections when
+	HAVE_NOINIT or HAVE_PERSISTENT are defined to "yes".
+	* scripttempl/elf32msp430.sc (.noinit): Add .noinit.* and
+	.gnu.linkonce.n.*. input section wildcard patterns.
+	(.persistent): Add .persistent.* and
+	.gnu.linkonce.p.*. input section wildcard patterns.
+	* scripttempl/elfarcv2.sc (.noinit): Add .noinit.* and
+	.gnu.linkonce.n.*. input section wildcard patterns.
+	* scripttempl/pru.sc: Likewise.
+	* testsuite/ld-elf/noinit-sections-1.d: New test.
+	* testsuite/ld-elf/noinit-sections-2.d: New test.
+	* testsuite/ld-elf/noinit-sections-2.l: New test.
+	* testsuite/ld-elf/noinit-sections.s: New test.
+	* testsuite/ld-elf/persistent-sections-1.d: New test.
+	* testsuite/ld-elf/persistent-sections-2.d: New test.
+	* testsuite/ld-elf/persistent-sections-2.l: New test.
+	* testsuite/ld-elf/persistent-sections.s: New test.
+
+2020-11-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26936
+	* testsuite/ld-elf/pr26936.d: Pass --gen-debug to gas rather than -g.
+	Only run when -shared -z options are supported.
+	* testsuite/ld-elf/pr26936b.s: Define more entry symbols.
+
+2020-11-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26936
+	* testsuite/ld-elf/pr26936.d: New file.
+	* testsuite/ld-elf/pr26936a.s: Likewise.
+	* testsuite/ld-elf/pr26936b.s: Likewise.
+	* testsuite/ld-elf/pr26936c.s: Likewise.
+
+2020-11-25  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (lang_output_section_statement_lookup): Change "create"
+	parameter to a tristate, if 2 then always create a new output
+	section statement.  Update all callers, with
+	lang_enter_output_section_statement using "2".
+	(map_input_to_output_sections): Don't ignore SPECIAL constraint
+	here.
+	* ldlang.h (lang_output_section_statement_type): Update prototype.
+	(lang_output_section_find): Update.
+
+2020-11-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/26939
+	* testsuite/ld-x86-64/pr26939-x32.d: New file.
+	* testsuite/ld-x86-64/pr26939.d: Likewise.
+	* testsuite/ld-x86-64/pr26939.s: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Run PR gold/26939 tests.
+
+2020-11-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26918
+	* testsuite/ld-s390/pr26918-1.d: New file.
+	* testsuite/ld-s390/pr26918-1.s: Likewise.
+	* testsuite/ld-s390/s390.exp: Run all *.d tests.
+
+2020-11-23  Shahab Vahedi  <shahab@synopsys.org>
+
+	* testsuite/ld-arc/tls_ie-01.d: Use a more general pattern.
+
+2020-11-21  Nelson Chu  <nelson.chu@sifive.com>
+
+	* emultempl/riscvelf.em (riscv_elf_before_allocation): Change
+	link_info.relax_pass from 3 to 4.
+	* testsuite/ld-riscv-elf/pcgp-relax.d: New testcase.
+	* testsuite/ld-riscv-elf/pcgp-relax.s: Likewise.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Updated.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/ld-ctf/data-func-conflicted.d: Shrink the expected
+	size of the type section now that function types are being
+	deduplicated properly.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/ld-ctf/array.d: Adjust for nonzero flags word and
+	public symbols in the data section rather than variables: use
+	sysv hash style to keep test results the same on non-GNU targets.
+	* testsuite/ld-ctf/diag-cttname-null.d: Likewise.
+	* testsuite/ld-ctf/diag-cuname.d: Likewise.
+	* testsuite/ld-ctf/diag-parlabel.d: Likewise.
+	* testsuite/ld-ctf/slice.d: Likewise.
+	* testsuite/ld-ctf/function.d: Likewise, but in the function section.
+	* testsuite/ld-ctf/conflicting-cycle-1.B-1.d:  Adjust for nonzero
+	flags word.
+	* testsuite/ld-ctf/conflicting-cycle-1.B-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-1.parent.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.A-1.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.A-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-2.parent.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.C-1.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.C-2.d: Likewise.
+	* testsuite/ld-ctf/conflicting-cycle-3.parent.d: Likewise.
+	* testsuite/ld-ctf/cross-tu-noncyclic.d: Likewise.
+	* testsuite/ld-ctf/cycle-1.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.A.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.B.d: Likewise.
+	* testsuite/ld-ctf/cycle-2.C.d: Likewise.
+	* testsuite/ld-ctf/diag-wrong-magic-number-mixed.d:  Likewise.
+	* testsuite/ld-ctf/super-sub-cycles.d:  Likewise.
+	* testsuite/ld-ctf/data-func-1.c: New test.
+	* testsuite/ld-ctf/data-func-2.c: Likewise.
+	* testsuite/ld-ctf/data-func-conflicted.d: Likewise.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ldelfgen.c (struct ctf_strsym_iter_cb_arg): Rename to...
+	(struct ctf_strtab_iter_cb_arg): ... this, changing fields:
+	<syms>: Remove.
+	<symcount>: Remove.
+	<symstrtab>: Rename to...
+	<strtab>: ... this.
+	(ldelf_ctf_strtab_iter_cb): Adjust.
+	(ldelf_ctf_symbols_iter_cb): Remove.
+	(ldelf_new_dynsym_for_ctf): New, tell libctf about a single
+	symbol.
+	(ldelf_examine_strtab_for_ctf): Rename to...
+	(ldelf_acquire_strings_for_ctf): ... this, only doing the strtab
+	portion and not symbols.
+	* ldelfgen.h: Adjust declarations accordingly.
+	* ldemul.c (ldemul_examine_strtab_for_ctf): Rename to...
+	(ldemul_acquire_strings_for_ctf): ... this.
+	(ldemul_new_dynsym_for_ctf): New.
+	* ldemul.h: Adjust declarations accordingly.
+	* ldlang.c (ldlang_ctf_apply_strsym): Rename to...
+	(ldlang_ctf_acquire_strings): ... this.
+	(ldlang_ctf_new_dynsym): New.
+	(lang_write_ctf): Call ldemul_new_dynsym_for_ctf with NULL to do
+	the actual symbol shuffle.
+	* ldlang.h (struct elf_strtab_hash): Adjust accordingly.
+	* ldmain.c (bfd_link_callbacks): Wire up new/renamed callbacks.
+
+	* emultempl/aix.em: Adjust for emulation changes:
+	ldemul_examine_strtab_for_ctf renamed to
+	ldemul_acquire_strings_for_ctf, new ldemul_new_dynsym_for_ctf.
+	* emultempl/armcoff.em: Likewise.
+	* emultempl/beos.em: Likewise.
+	* emultempl/elf.em: Likewise.
+	* emultempl/elf-generic.em: Likewise.
+	* emultempl/linux.em: Likewise.
+	* emultempl/msp430.em: Likewise.
+	* emultempl/pe.em: Likewise.
+	* emultempl/pep.em: Likewise.
+	* emultempl/ticoff.em: Likewise.
+	* emultempl/vanilla.em: Likewise.
+
+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ldlang.c (ctf_output): This is a ctf_dict_t now.
+	(lang_ctf_errs_warnings): Rename ctf_file_t to ctf_dict_t.
+	(ldlang_open_ctf): Adjust comment.
+	(lang_merge_ctf): Use ctf_dict_close, not ctf_file_close.
+	* ldelfgen.h (ldelf_examine_strtab_for_ctf): Rename ctf_file_t to
+	ctf_dict_t.  Change opaque declaration accordingly.
+	* ldelfgen.c (ldelf_examine_strtab_for_ctf): Adjust.
+	* ldemul.h (examine_strtab_for_ctf): Likewise.
+	(ldemul_examine_strtab_for_ctf): Likewise.
+	* ldeuml.c (ldemul_examine_strtab_for_ctf): Likewise.
+
+2020-11-20  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* testsuite/ld-elf/retain3.s: Move symbolic reference into writeable
+	.data section from read-only .text section.
+	* testsuite/ld-elf/retain5.d: Don't pass --print-gc-sections for test
+	that doesn't require it.
+	* testsuite/ld-elf/retain6a.d: Adjust test.
+	* testsuite/ld-elf/retain6main.s: Move symbolic reference into writeable
+	.data section from read-only .text section.
+
+2020-11-18  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/group1.d,
+	* testsuite/ld-powerpc/group1.s,
+	* testsuite/ld-powerpc/group1.sym,
+	* testsuite/ld-powerpc/group2.d,
+	* testsuite/ld-powerpc/group2.s,
+	* testsuite/ld-powerpc/group2.sym,
+	* testsuite/ld-powerpc/group3.s,
+	* testsuite/ld-powerpc/group3.sym: New test files.
+	* testsuite/ld-powerpc/powerpc.exp: Run new tests.
+
+2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* NEWS: Announce support for SHF_GNU_RETAIN.
+	* ld.texi (garbage collection): Document SHF_GNU_RETAIN.
+	(Output Section Discarding): Likewise.
+	* testsuite/ld-elf/elf.exp: Run new tests.
+	* testsuite/ld-elf/retain1.s: New test.
+	* testsuite/ld-elf/retain1a.d: New test.
+	* testsuite/ld-elf/retain1b.d: New test.
+	* testsuite/ld-elf/retain2.d: New test.
+	* testsuite/ld-elf/retain2.ld: New test.
+	* testsuite/ld-elf/retain2.map: New test.
+	* testsuite/ld-elf/retain3.d: New test.
+	* testsuite/ld-elf/retain3.s: New test.
+	* testsuite/ld-elf/retain4.d: New test.
+	* testsuite/ld-elf/retain4.s: New test.
+	* testsuite/ld-elf/retain5.d: New test.
+	* testsuite/ld-elf/retain5.map: New test.
+	* testsuite/ld-elf/retain5lib.s: New test.
+	* testsuite/ld-elf/retain5main.s: New test.
+	* testsuite/ld-elf/retain6a.d: New test.
+	* testsuite/ld-elf/retain6b.d: New test.
+	* testsuite/ld-elf/retain6lib.s: New test.
+	* testsuite/ld-elf/retain6main.s: New test.
+
+2020-11-17  Alan Modra  <amodra@gmail.com>
+
+	PR 26882
+	* testsuite/ld-powerpc/dotsym3.d: Add "-z notext" to ld options.
+	* testsuite/ld-powerpc/dotsym4.d: Likewise.
+	* testsuite/ld-powerpc/ppc476-shared.d: Likewise.
+	* testsuite/ld-powerpc/ppc476-shared2.d: Likewise.
+	* testsuite/ld-powerpc/powerpc.exp: Likewise for various tests.
+	* testsuite/ld-undefined/weak-fundef.s: Add BLPLT variant.
+	* testsuite/ld-undefined/weak-undef.exp: Define BLPLT for ppc32.
+
+2020-11-16  Nick Clifton  <nickc@redhat.com>
+
+	* po/es.po: Updated Spanish translation.
+
+2020-11-16  Shahab Vahedi  <shahab@synopsys.org>
+
+	* testsuite/ld-arc/tls_ie-01.d: Update the dump command.
+
+2020-11-14  Borislav Petkov  <bp@suse.de>
+
+	* testsuite/ld-x86-64/pe-x86-64-4.od: Adjust regexes.
+	* testsuite/ld-x86-64/tlsld3.dd: Likewise.
+	* testsuite/ld-x86-64/tlsld4.dd: Likewise.
+
+2020-11-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26869
+	* ldelf.c (ldelf_before_allocation): Set rel_from_abs to 1 for
+	__ehdr_start.
+	* testsuite/ld-i386/i386.exp: Run pr26869.
+	* testsuite/ld-i386/pr26869.d: New file.
+	* testsuite/ld-i386/pr26869.s: Likewise.
+
+2020-11-09  Andreas Schwab  <schwab@linux-m68k.org>
+
+	* Makefile.am (development.exp): Fix regexp.
+	* Makefile.in: Regenerate.
+
+2020-11-06  Nick Clifton  <nickc@redhat.com>
+
+	* lexsup.c (parse_args): Add more checks of the mapfile.  If it is
+	a directory use the basename of the output file as the file
+	component.  If the % character is present, replace it with the
+	full output filepath.
+	* testsuite/ld-scripts/map-address.exp: Add test of %
+	functionality.
+	* ld.texi: Document the new behaviour.
+
+2020-11-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: Updated Serbian translation.
+
+2020-11-03  Nick Clifton  <nickc@redhat.com>
+
+	* emulparams/x86-64-level.sh
+	(PARSE_AND_LIST_ARGS_CASE_Z_X86_64_LEVEL): Fix indentation.
+
+2020-11-02  Alan Modra  <amodra@gmail.com>
+
+	PR 26806
+	* testsuite/ld-plugin/lto-19.h,
+	* testsuite/ld-plugin/lto-19a.c,
+	* testsuite/ld-plugin/lto-19b.c,
+	* testsuite/ld-plugin/lto-19c.c: New test.
+	* testsuite/ld-plugin/pr26806.c,
+	* testsuite/ld-plugin/pr26806.d: New test.
+	* testsuite/ld-plugin/lto.exp: Run them.
+
+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* NEWS: Mention -z x86-64-baseline.
+	* ld.texi: Document -z x86-64-baseline.
+	* emulparams/x86-64-level.sh: Handle -z x86-64-baseline.
+	* testsuite/ld-elf/x86-feature-1a.rd: Update.
+	* testsuite/ld-elf/x86-feature-1b.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1c.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1d.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1e.rd: Likewise.
+	* testsuite/ld-i386/pr23372c.d: Likewise.
+	* testsuite/ld-i386/pr23486c.d: Likewise.
+	* testsuite/ld-i386/pr23486d.d: Likewise.
+	* testsuite/ld-i386/pr24322a.d: Likewise.
+	* testsuite/ld-i386/pr24322b.d: Likewise.
+	* testsuite/ld-i386/property-1a.r: Likewise.
+	* testsuite/ld-i386/property-2a.r: Likewise.
+	* testsuite/ld-i386/property-3.r: Likewise.
+	* testsuite/ld-i386/property-3a.r: Likewise.
+	* testsuite/ld-i386/property-4.r: Likewise.
+	* testsuite/ld-i386/property-4a.r: Likewise.
+	* testsuite/ld-i386/property-5.r: Likewise.
+	* testsuite/ld-i386/property-5a.r: Likewise.
+	* testsuite/ld-i386/property-7a.r: Likewise.
+	* testsuite/ld-i386/property-x86-3.d: Likewise.
+	* testsuite/ld-i386/property-x86-4a.d: Likewise.
+	* testsuite/ld-i386/property-x86-5.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet1.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet2a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet5a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet5b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt1a.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt1b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt2.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt3a.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt3b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt4.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt5.d: Likewise.
+	* testsuite/ld-i386/property-x86-isa1.d: Likewise.
+	* testsuite/ld-i386/property-x86-isa2.d: Likewise.
+	* testsuite/ld-i386/property-x86-isa3.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk1a.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk1b.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk2.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk3a.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk3b.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk4.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk5.d: Likewise.
+	* testsuite/ld-x86-64/pr23372c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23372c.d: Likewise.
+	* testsuite/ld-x86-64/pr23486c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23486c.d: Likewise.
+	* testsuite/ld-x86-64/pr23486d-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23486d.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a.d: Likewise.
+	* testsuite/ld-x86-64/pr24322b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24322b.d: Likewise.
+	* testsuite/ld-x86-64/pr24458a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458a.d: Likewise.
+	* testsuite/ld-x86-64/pr24458b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458b.d: Likewise.
+	* testsuite/ld-x86-64/pr24458c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458c.d: Likewise.
+	* testsuite/ld-x86-64/property-1a.r: Likewise.
+	* testsuite/ld-x86-64/property-2a.r: Likewise.
+	* testsuite/ld-x86-64/property-3.r: Likewise.
+	* testsuite/ld-x86-64/property-3a.r: Likewise.
+	* testsuite/ld-x86-64/property-4.r: Likewise.
+	* testsuite/ld-x86-64/property-4a.r: Likewise.
+	* testsuite/ld-x86-64/property-5.r: Likewise.
+	* testsuite/ld-x86-64/property-5a.r: Likewise.
+	* testsuite/ld-x86-64/property-7a.r: Likewise.
+	* testsuite/ld-x86-64/property-x86-3-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-3.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-4a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-4a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-5.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet1-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet1.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt2-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt4-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt4.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa1-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa1.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa2-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa3-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa3.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt5.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk2-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk4-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk4.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk5.d: Likewise.
+	* testsuite/ld-i386/i386.exp: Run property-x86-isa4.
+	* testsuite/ld-i386/property-x86-isa4.d: New file.
+	* testsuite/ld-x86-64/property-x86-isa4-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa4.d: Likewise.
+	* ld/testsuite/ld-x86-64/x86-64.exp: Run property-x86-isa4
+	and property-x86-isa4-x32.
+
+2020-10-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elfweak/elfweak.exp: Pass $NOLTO_CFLAGS to CC.
+
+2020-10-26  Nick Clifton  <nickc@redhat.com>
+
+	PR 26626
+	* ldmain.c (undefined_symbol): Use the keyword undefined-symbol
+	when invoking the error handling script for undefined symbols.
+	* ld.texi: Update documentation.
+
+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>
+
+	* emulparams/cskyelf.sh (TEXT_START_ADDR): Change to 0x60000000.
+	(DATA_ADDR) : Define.
+	(OTHER_SYMBOLS) : Define.
+	(OTHER_BSS_SYMBOLS) : Set symbol __sbss__.
+	(OTHER_BSS_END_SYMBOLS) : Set symbol __ebss__.
+	* ld/emulparams/cskyelf_linux.sh : Don't include cskyelf.sh.
+	* testsuite/ld-csky/data.d : Fix '/s*' to match spaces.
+	* testsuite/ld-csky/hilo16.d : Likewise.
+
+2020-10-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/config/default.exp (plug_opt): Set only if compiler
+	is available.
+
+2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-plugin/lto.exp (plug_opt): Moved to ...
+	* testsuite/config/default.exp (plug_opt): Here.  New.
+	* testsuite/ld-bootstrap/bootstrap.exp: Skip when linker is
+	compiled with -fprofile-generate=.
+
+2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/config/default.exp (NOLTO_CFLAGS): New.
+	* ld/testsuite/ld-elfcomm/elfcomm.exp: Add $NOLTO_CFLAGS to CC.
+	* testsuite/ld-elfvers/vers.exp: Likewise.
+	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
+	* testsuite/ld-gc/gc.exp: Likewise.
+	* testsuite/ld-plugin/plugin.exp: Likewise.
+	* testsuite/ld-scripts/crossref.exp: Likewise.
+	* testsuite/ld-selective/selective.exp: Likewise.
+	* testsuite/ld-undefined/undefined.exp: Likewise.
+	* testsuite/ld-srec/srec.exp: Add $NOLTO_CFLAGS to CC.  Override
+	CXXFLAGS.
+	* testsuite/lib/ld-lib.exp (run_ld_link_tests): Prepend -fno-lto
+	to cflags.
+
+2020-10-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/config/default.exp: Provide dummy libraries for
+	alpha-dec-vms.
+	(compiler_supports): New proc.  Use it for compiler tests.
+	* testsuite/lib/ld-lib.exp (default_ld_assemble): Don't die if
+	subdir not set.
+	(run_ld_link_tests): Pass LDFLAGS to ld.
+	* testsuite/ld-checks/checks.exp (section_check): Likewise.
+	* testsuite/ld-scripts/assert.exp: Likewise.
+	* testsuite/ld-scripts/extern.exp: Likewise.
+	* testsuite/ld-scripts/log2.exp: Likewise.
+	* testsuite/ld-scripts/map-address.exp: Likewise.
+	* testsuite/ld-scripts/script.exp: Likewise.
+	* testsuite/ld-scripts/sizeof.exp: Likewise.
+
+2020-10-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ldlang.c (lang_process): Add extra call to
+	lang_do_memory_regions, and pass parameter.
+	(lang_do_memory_regions): Add parameter, only define origin and
+	length when requested.  Reindent.
+	* testsuite/ld-scripts/provide-10.d: New file.
+	* testsuite/ld-scripts/provide-10.map: New file.
+	* testsuite/ld-scripts/provide-11.d: New file.
+	* testsuite/ld-scripts/provide-11.map: New file.
+	* testsuite/ld-scripts/provide-12.d: New file.
+	* testsuite/ld-scripts/provide-12.map: New file.
+	* testsuite/ld-scripts/provide-9.d: New file.
+	* testsuite/ld-scripts/provide-9.map: New file.
+	* testsuite/ld-scripts/provide-9.t: New file.
+
+2020-10-16  Andrew Burgess  <andrew.burgess@embecosm.com>
+
+	* ld.texi (Options): Extend the description of --defsym.
+
+2020-10-16  Nick Clifton  <nickc@redhat.com>
+
+	PR 26626
+	* ldmain.c (undefined_symbol): If an error handlign script is
+	available, call it.
+	* ldfile.c  (error_handling_script): Declare.
+	(ldfile_open_file): If a library cannot be found and an error
+	handling script is available, call it.
+	* ldmain.h  (error_handling_script): Prototype.
+	* ldlex.h (OPTION_ERROR_HANDLING_SCRIPT): Define.
+	* lexsup.c (ld_options): Add --error-handling-script.
+	(parse_args): Add support for --errror-handling-script.
+	* ld.texi: Document the new feature.
+	* configure.ac: Add --error-handling-script option to disable
+	support for the new feature.
+	* NEWS: Mention the new feature.
+	* config.in: Regenerate.
+	* configure: Regenerate.
+
+2020-10-16  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/ifunc-plt-got-overwrite.s: New testcase.
+	* testsuite/ld-riscv-elf/ifunc-plt-got-overwrite.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-got-overwrite-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-got-overwrite-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-got-overwrite-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Updated.
+
+2020-10-16  Nelson Chu  <nelson.chu@sifive.com>
+
+	* emulparams/elf32lriscv-defs.sh: Add IREL_IN_PLT.
+	* testsuite/ld-ifunc/ifunc.exp: Enable ifunc tests for RISC-V.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp (run_dump_test_ifunc):
+	New dump test for ifunc.  There are two arguments, 'target` and
+	`output`.  The `target` is rv32 or rv64, and the `output` is used
+	to choose which output you want to test (exe, pie or .so).
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-01.s: New testcase.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-01.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-01-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-01-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-01-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-02.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-02.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-02-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-02-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-call-02-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-data.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-data.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-data-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-data-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-data-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-got.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-got.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-got-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-got-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-got-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-pcrel.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-pcrel.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-pcrel-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-pcrel-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-reloc-pcrel-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-nonplt.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-nonplt.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-nonplt-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-nonplt-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-nonplt-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-01.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-01.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-01-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-01-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-01-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-02.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-02.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-02-exe.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-02-pic.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-plt-02-pie.rd: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-seperate-resolver.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-seperate-caller.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-seperate-exe.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-seperate-pic.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-seperate-pie.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-seperate-caller-pcrel.s: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-seperate-pcrel-pic.d: Likewise.
+	* testsuite/ld-riscv-elf/ifunc-seperate-pcrel-pie.d: Likewise.
+
+2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26703
+	* NEWS: Mention -z x86-64-v[234].
+	* ld.texi: Document -z x86-64-v[234].
+	* emulparams/elf32_x86_64.sh: Use x86-64-level.sh.
+	* emulparams/elf_i386.sh: Likewise.
+	* emulparams/elf_x86_64.sh: Likewise.
+	* emulparams/x86-64-level.sh: New file.
+	* testsuite/ld-elf/x86-feature-1a.rd: Update.
+	* testsuite/ld-elf/x86-feature-1b.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1c.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1d.rd: Likewise.
+	* testsuite/ld-elf/x86-feature-1e.rd: Likewise.
+	* testsuite/ld-i386/pr23372c.d: Likewise.
+	* testsuite/ld-i386/pr23486c.d: Likewise.
+	* testsuite/ld-i386/pr23486d.d: Likewise.
+	* testsuite/ld-i386/pr24322a.d: Likewise.
+	* testsuite/ld-i386/pr24322b.d: Likewise.
+	* testsuite/ld-i386/property-1a.r: Likewise.
+	* testsuite/ld-i386/property-2a.r: Likewise.
+	* testsuite/ld-i386/property-3.r: Likewise.
+	* testsuite/ld-i386/property-3a.r: Likewise.
+	* testsuite/ld-i386/property-4.r: Likewise.
+	* testsuite/ld-i386/property-4a.r: Likewise.
+	* testsuite/ld-i386/property-5.r: Likewise.
+	* testsuite/ld-i386/property-5a.r: Likewise.
+	* testsuite/ld-i386/property-7a.r: Likewise.
+	* testsuite/ld-i386/property-x86-3.d: Likewise.
+	* testsuite/ld-i386/property-x86-4a.d: Likewise.
+	* testsuite/ld-i386/property-x86-5.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet1.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet2a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet5a.d: Likewise.
+	* testsuite/ld-i386/property-x86-cet5b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt1a.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt1b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt2.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt3a.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt3b.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt4.d: Likewise.
+	* testsuite/ld-i386/property-x86-ibt5.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk1a.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk1b.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk2.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk3a.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk3b.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk4.d: Likewise.
+	* testsuite/ld-i386/property-x86-shstk5.d: Likewise.
+	* testsuite/ld-x86-64/pr23372c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23372c.d: Likewise.
+	* testsuite/ld-x86-64/pr23486c.d: Likewise.
+	* testsuite/ld-x86-64/pr23486d-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr23486d.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24322a.d: Likewise.
+	* testsuite/ld-x86-64/pr24322b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24322b.d: Likewise.
+	* testsuite/ld-x86-64/pr24458a-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458a.d: Likewise.
+	* testsuite/ld-x86-64/pr24458b-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458b.d: Likewise.
+	* testsuite/ld-x86-64/pr24458c-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr24458c.d: Likewise.
+	* testsuite/ld-x86-64/property-1a.r: Likewise.
+	* testsuite/ld-x86-64/property-2a.r: Likewise.
+	* testsuite/ld-x86-64/property-3.r: Likewise.
+	* testsuite/ld-x86-64/property-3a.r: Likewise.
+	* testsuite/ld-x86-64/property-4.r: Likewise.
+	* testsuite/ld-x86-64/property-4a.r: Likewise.
+	* testsuite/ld-x86-64/property-5.r: Likewise.
+	* testsuite/ld-x86-64/property-5a.r: Likewise.
+	* testsuite/ld-x86-64/property-7a.r: Likewise.
+	* testsuite/ld-x86-64/property-x86-3-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-3.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-4a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-4a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-5.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet1-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet1.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet2a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-cet5b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt1b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt2-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt4-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt4.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-ibt5.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk1b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk2-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3a-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3a.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3b-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk3b.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk4-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk4.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk5-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-shstk5.d: Likewise.
+	* testsuite/ld-i386/i386.exp: Run property-x86-6,
+	property-x86-isa1, property-x86-isa2 and property-x86-isa3.
+	* testsuite/ld-i386/property-x86-1.S: Updated to the current
+	GNU_PROPERTY_X86_ISA_1_USED and GNU_PROPERTY_X86_ISA_1_NEEDED
+	values.
+	* testsuite/ld-i386/property-x86-2.S: Likewise.
+	* testsuite/ld-i386/property-x86-3.s: Likewise.
+	* testsuite/ld-x86-64/pr23372d.s: Likewise.
+	* testsuite/ld-x86-64/pr23372e.s: Likewise.
+	* testsuite/ld-x86-64/pr23372f.s: Likewise.
+	* testsuite/ld-x86-64/pr23486c.s: Likewise.
+	* testsuite/ld-x86-64/pr23486d.s: Likewise.
+	* testsuite/ld-x86-64/property-x86-1.S: Likewise.
+	* testsuite/ld-x86-64/property-x86-2.S: Likewise.
+	* testsuite/ld-x86-64/property-x86-3.s: Likewise.
+	* testsuite/ld-x86-64/property-x86-5a.s: Likewise.
+	* testsuite/ld-x86-64/property-x86-5b.s: Likewise.
+	* testsuite/ld-i386/property-x86-6.d: New file.
+	* testsuite/ld-i386/property-x86-isa1.d: Likewise.
+	* testsuite/ld-i386/property-x86-isa2.d: Likewise.
+	* testsuite/ld-i386/property-x86-isa3.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-6-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-6.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-6.s: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa1-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa1.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa1.s: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa2-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa2.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa3-x32.d: Likewise.
+	* testsuite/ld-x86-64/property-x86-isa3.d: Likewise.
+	* testsuite/ld-x86-64/simple.s: Likewise.
+	* ld/testsuite/ld-x86-64/x86-64.exp: Run property-x86-6,
+	property-x86-6-x32, property-x86-isa1, property-x86-isa1-x32,
+	property-x86-isa2, property-x86-isa2-x32, property-x86-isa3-x32
+	and property-x86-isa3.
+
+2020-10-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-i386/property-3.r: Updated for Fedora binary
+	annotation plugin for GCC.
+	* testsuite/ld-i386/property-4.r: Likewise.
+	* testsuite/ld-i386/property-5.r: Likewise.
+	* testsuite/ld-x86-64/property-3.r: Likewise.
+	* testsuite/ld-x86-64/property-4.r: Likewise.
+	* testsuite/ld-x86-64/property-5.r: Likewise.
+
+2020-10-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26711
+	* testsuite/ld-i386/i386.exp: Run ld/26711 tests.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-i386/pr26711-1.d: Likewise.
+	* testsuite/ld-i386/pr26711-2.d: Likewise.
+	* testsuite/ld-i386/pr26711-3.d: Likewise.
+	* testsuite/ld-x86-64/pr26711-1-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr26711-1.d: Likewise.
+	* testsuite/ld-x86-64/pr26711-2-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr26711-2.d: Likewise.
+	* testsuite/ld-x86-64/pr26711-3-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr26711-3.d: Likewise.
+	* testsuite/ld-x86-64/pr26711.s: Likewise.
+
+2020-10-06  Brandon Bergren  <bdragon@FreeBSD.org>
+
+	* Makefile.am (ALL_64_EMULATION_SOURCES): Add eelf64lppc_fbsd.c.
+	Include $(DEPDIR)/eelf64lppc_fbsd.Pc.
+	* configure.tgt: Add powerpc64le-*-freebsd*.
+	* emulparams/elf64lppc_fbsd.sh: New file.
+	* Makefile.in: Regenerate.
+	* po/BLD-POTFILES.in: Regenerate.
+
+2020-10-05  T.K. Chia  <u1049321969@caramail.com>
+
+	PR gas/26694
+	* testsuite/ld-i386/ljmp.s,
+	* testsuite/ld-i386/ljmp1.d,
+	* testsuite/ld-i386/ljmp1.s,
+	* testsuite/ld-i386/ljmp2.d,
+	* testsuite/ld-i386/ljmp2.s,
+	* testsuite/ld-x86-64/ljmp1.d,
+	* testsuite/ld-x86-64/ljmp2.d: New testcases.
+	* testsuite/ld-i386/i386.exp,
+	* testsuite/ld-x86-64/x86-64.exp: Run them.
+
+2020-10-05  Nick Clifton  <nickc@redhat.com>
+
+	* lexsup.c (parse_args): Generate an error or warning message when
+	multiple short options are used together.
+
+2020-10-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR 26681
+	* testsuite/ld-elf/pr26681.s: New test.
+	* testsuite/ld-elf/pr26681.d: New test driver.
+	* testsuite/ld-elf/pr26681.l: New test output.
+
+2020-09-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26675
+	* plugin.c (plugin_notice): Override the IR definition before
+	all LTO symbols have been read for non-ELF targets.
+
+2020-09-30  Jeremy Drake  <sourceware-bugzilla@jdrake.com>
+
+	PR 26588
+	* emultempl/pe.em (_finish): Generate an import library for DLLs,
+	even if they have no exports.
+	* emultempl/pep.em (_finish): Likewise.
+
+2020-09-28  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsget.d,
+	* testsuite/ld-powerpc/tlsget.s,
+	* testsuite/ld-powerpc/tlsget.wf,
+	* testsuite/ld-powerpc/tlsget2.d.
+	* testsuite/ld-powerpc/tlsget2.wf: New testcases.
+	* testsuite/ld-powerpc/powerpc.exp: Run them.
+
+2020-09-26  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/elfv2so.d,
+	* testsuite/ld-powerpc/notoc2.d,
+	* testsuite/ld-powerpc/tlsdesc.wf,
+	* testsuite/ld-powerpc/tlsdesc2.d,
+	* testsuite/ld-powerpc/tlsdesc2.wf,
+	* testsuite/ld-powerpc/tlsopt5.d,
+	* testsuite/ld-powerpc/tlsopt5.wf,
+	* testsuite/ld-powerpc/tlsopt6.d,
+	* testsuite/ld-powerpc/tlsopt6.wf: Update __glink_PLTresolve.
+
+2020-09-24  Alan Modra  <amodra@gmail.com>
+
+	PR 26655
+	* emultempl/ppc64elf.em (params): Add ppc_edit.
+	(ppc_before_allocation): Split off some edit functions to..
+	(ppc_edit): ..this, new function.
+
+2020-09-22  Frediano Ziglio  <fziglio@redhat.com>
+
+	* emultempl/pe.em (set_entry_point): Only use the DLL entry point
+	for DLLs.
+	* emultempl/pep.em (set_entry_point): Likewise.
+
+2020-09-16  Mikael Pettersson  <mikpelinux@gmail.com>
+
+	* testsuite/ld-elf/shared.exp: Add -Av9 to AFLAGS_PIE on sparc.
+	* testsuite/ld-elf/tls.exp: Add -Av9 to AFLAGS_PIC on sparc.
+
+2020-09-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26583
+	* testsuite/ld-x86-64/pe-x86-64-1.od: New file.
+	* testsuite/ld-x86-64/pe-x86-64-1a.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-1b.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-1c.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-2.od: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-2a.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-2b.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-2c.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-3.od: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-3a.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-3b.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-3c.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-3d.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-4.od: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-4a.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-4b.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-4c.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64-4d.obj.bz2: Likewise.
+	* testsuite/ld-x86-64/pe-x86-64.exp: Likewise.
+	* testsuite/lib/ld-lib.exp (run_ld_link_tests): Handle bz2 binary
+	inputs.
+
+2020-09-16  Alan Modra  <amodra@gmail.com>
+
+	* plugin.c (asymbol_from_plugin_symbol): Adjust elf_symbol_from
+	invocation.
+
+2020-09-15  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* ldelf.c (ldelf_after_open): Check bfd_target_elf_flavour first.
+
+2020-09-15  Hans-Peter Nilsson  <hp@axis.com>
+
+	PR ld/26589
+	* testsuite/ld-elf/pr26589.d, testsuite/ld-elf/locref3.s: New test.
+
+2020-09-13  Alan Modra  <amodra@gmail.com>
+
+	PR 26391
+	* testsuite/ld-elf/pr26391.nd: Adjust to match powerpc64 function
+	descriptors.
+
+2020-09-12  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26391
+	* NEWS: Mention "-z unique-symbol".
+	* emultempl/elf.em (gld${EMULATION_NAME}_handle_option): Handle
+	"-z unique-symbol" and "-z nounique-symbol".
+	* ld.texi: Document "-z unique-symbol" and "-z nounique-symbol".
+	* lexsup.c (elf_static_list_options): Add "-z unique-symbol" and
+	"-z nounique-symbol".
+	* testsuite/ld-elf/elf.exp: Add PR ld/26391 tests.
+	* testsuite/ld-elf/pr26391.nd: New file.
+	* testsuite/ld-elf/pr26391.out: Likewise.
+	* testsuite/ld-elf/pr26391a.c: Likewise.
+	* testsuite/ld-elf/pr26391b.c: Likewise.
+	* testsuite/ld-elf/pr26391c.c: Likewise.
+	* testsuite/ld-elf/pr26391d.c: Likewise.
+
+2020-09-11  Jeremy Drake  <sourceware-bugzilla@jdrake.com>
+
+	PR 26588
+	* emultempl/pe.em (_finish): Only generate a import library if not
+	exporting relocs.
+	* emultempl/pep.em: Likewise.
+
+2020-09-10  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>
+
+	* testsuite/ld-aarch64/emit-relocs-560.d: Expect error instead
+	of valid output.
+
+2020-09-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26590
+	* testsuite/ld-elf/pr26590.err: New file.
+	* testsuite/ld-elf/pr26590a.c: Likewise.
+	* testsuite/ld-elf/pr26590b.c: Likewise.
+	* testsuite/ld-elf/pr26590c.c: Likewise.
+	* testsuite/ld-elf/pr26590d.c: Likewise.
+	* testsuite/ld-elf/shared.exp: Run ld/26590 tests.
+
+2020-09-10  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/pr26580-2.sd: Accept undefined symbol.
+
+2020-09-10  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-plugin/lto-18b.c (select): Remove.
+	* testsuite/ld-plugin/lto-18c.c (select): Remove.
+	* testsuite/ld-plugin/lto.exp: Build archives for lto-18 too,
+	and run static versions of the test.
+
+2020-09-09  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-plugin/lto-18a.c,
+	* testsuite/ld-plugin/lto-18b.c,
+	* testsuite/ld-plugin/lto-18c.c,
+	* testsuite/ld-plugin/lto-18d.c,
+	* testsuite/ld-plugin/lto-18.out: New test.
+	* testsuite/ld-plugin/lto.exp: Run it.
+
+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new tests.
+	* testsuite/ld-msp430-elf/uleb128.s: New test.
+	* testsuite/ld-msp430-elf/uleb128_430.d: New test.
+	* testsuite/ld-msp430-elf/uleb128_430x.d: New test.
+
+2020-09-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/pr26580-a.s,
+	* testsuite/ld-elf/pr26580-b.s,
+	* testsuite/ld-elf/pr26580-1.sd,
+	* testsuite/ld-elf/pr26580-2.sd: New tests
+	* testsuite/ld-elf/comm-data.exp: Run new tests.
+	* testsuite/ld-elf/pr26580-a.c,
+	* testsuite/ld-elf/pr26580-b.c,
+	* testsuite/ld-elf/pr26580-3.out,
+	* testsuite/ld-elf/pr26580-4.out: New tests.
+	* testsuite/ld-elf/shared.exp: Run new tests.
+
+2020-09-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-plugin/lto.exp: Don't run pr15146 tests.
+	* testsuite/ld-plugin/pr15146.d: Delete.
+	* testsuite/ld-plugin/pr15146a.c: Delete.
+	* testsuite/ld-plugin/pr15146b.c: Delete.
+	* testsuite/ld-plugin/pr15146c.c: Delete.
+	* testsuite/ld-plugin/pr15146d.c: Delete.
+
+2020-09-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/config/default.exp: Change NOSANTIZE_CFLAGS to
+	NOSANITIZE_CFLAGS.
+	* testsuite/ld-elf/dwarf.exp: Likewise.
+	* testsuite/ld-elf/indirect.exp: Likewise.
+	* testsuite/ld-elf/linux-x86.exp: Likewise.
+	* testsuite/ld-elf/shared.exp: Likewise.
+	* testsuite/ld-elf/tls.exp: Likewise.
+	* testsuite/ld-elfcomm/elfcomm.exp: Likewise.
+	* testsuite/ld-elfvers/vers.exp: Likewise.
+	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
+	* testsuite/ld-elfweak/elfweak.exp: Likewise.
+	* testsuite/ld-gc/gc.exp: Likewise.
+	* testsuite/ld-plugin/lto.exp: Likewise.
+	* testsuite/ld-plugin/plugin.exp: Likewise.
+	* testsuite/ld-scripts/crossref.exp: Likewise.
+	* testsuite/ld-selective/selective.exp: Likewise.
+	* testsuite/ld-shared/shared.exp: Likewise.
+	* testsuite/ld-size/size.exp: Likewise.
+	* testsuite/ld-srec/srec.exp: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+
+2020-09-03  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-01.d: Remove
+	the useless `warnings` keywords.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-04.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-05.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-06.d: Likewise.
+
+2020-09-03  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01.d: Update the
+	message from error to warning.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-02.d: New testcases.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-02a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-02b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-02c.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-02d.s: Likewise.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Updated.
+
+2020-09-03  Kito Cheng  <kito.cheng@sifive.com>
+
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01.d: Updated.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-failed-01b.s: Likewise.
+
+2020-09-03  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/sysroot-prefix.exp (single_sysroot_prefix_test):
+	Log $scriptname.
+
+2020-08-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/dwarf.exp: Append $NOSANTIZE_CFLAGS to CFLAGS.
+	* testsuite/ld-elf/shared.exp: Likewise.
+	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
+	* testsuite/ld-shared/shared.exp: Likewise.
+	* testsuite/ld-size/size.exp: Likewise.
+
+2020-08-28  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* emultempl/msp430.em (input_section_exists): New.
+	(check_array_section_alignment): New.
+	(gld${EMULATION_NAME}_finish): New.
+	* scripttempl/elf32msp430.sc: Add ALIGN directives before the
+	definition of __*_array_start symbols.
+	* testsuite/ld-msp430-elf/finiarray-warn.ld: New test.
+	* testsuite/ld-msp430-elf/finiarray-warn.r: New test.
+	* testsuite/ld-msp430-elf/initarray-nowarn.ld: New test.
+	* testsuite/ld-msp430-elf/initarray-warn.ld: New test.
+	* testsuite/ld-msp430-elf/initarray-warn.r: New test.
+	* testsuite/ld-msp430-elf/initarray.s: New test.
+	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new tests.
+	* testsuite/ld-msp430-elf/preinitarray-warn.ld: New test.
+	* testsuite/ld-msp430-elf/preinitarray-warn.r: New test.
+
+2020-08-28  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* ldmisc.c (vfinfo): Support new "%pU" format specifier.
+
+2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>
+
+	* emulparams/cskyelf.sh: Support attribute section.
+	* testsuite/ld-csky/tls-le-v1.d: Match .csky.attributes section.
+	* ld/testsuite/ld-csky/tls-le.d: Likewise.
+	* testsuite/ld-elf/non-contiguous.ld: Ignore .csky.attributes
+	section.
+
+2020-08-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 19011
+	* testsuite/lib/ld-lib.exp (ld_link_defsyms): For PE based targets
+	define the __main and ___main symbols in terms of the main symbol.
+
+2020-08-28  Alan Modra  <amodra@gmail.com>
+
+	PR 19011
+	* testsuite/ld-plugin/plugin.exp: Use modified CFLAGS throughout
+	file.  Add --image-base for pecoff.
+
+2020-08-28  Nelson Chu  <nelson.chu@sifive.com>
+
+	testsuite/ld-riscv-elf/lib-nopic-01a.s: Use R_RISCV_JAL rather
+	than R_RISCV_CALL.
+	testsuite/ld-riscv-elf/lib-nopic-01b.d: Likewise.
+	testsuite/ld-riscv-elf/lib-nopic-01b.s: Likewise.
+
+2020-08-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* emultempl/msp430.em: Remove unused variable "buf".
+
+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ldlang.c (dump_ctf_errs): Unquote CTF error messages.
+	(ldlang_open_ctf): Likewise.
+	(lang_merge_ctf): Likewise.
+	(lang_write_ctf): Likewise.
+	* testsuite/ld-ctf/diag-ctf-version-f.d: Adjust.
+	* testsuite/ld-ctf/diag-cttname-invalid.d: Adjust.
+	* testsuite/ld-ctf/diag-decompression-failure.d: Adjust.
+	* testsuite/ld-ctf/diag-parname.d: Adjust.
+	* testsuite/ld-ctf/diag-unsupported-flag.d: Adjust.
+	* testsuite/ld-ctf/diag-wrong-magic-number-mixed.d: Adjust.
+	* testsuite/ld-ctf/diag-wrong-magic-number.d: Adjust.
+
+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ldlang.c (lang_ctf_errs_warnings): Support calls with NULL fp.
+	Adjust for new err parameter to ctf_errwarning_next.  Only
+	check for assertion failures when fp is non-NULL.
+	(ldlang_open_ctf): Call it on open errors.
+	* testsuite/ld-ctf/ctf.exp: Always use the C locale to avoid
+	breaking the diags tests.
+
+2020-08-27  Jeremy Drake  <sourceware-bugzilla@jdrake.com>
+
+	PR 19011
+	* emultempl/pe.em (DEFAULT_DLL_CHARACTERISTICS): Define.
+	(pe_dll_characteristics): Initialise to DEFAULT_DLL_CHARACTERISTICS.
+	(add_options): Add options to disable DLL characteristics.
+	(list_options): List the new options.
+	(handle_options): Handle the new options.
+	* emultempl/pep.em: Similar changes to above.
+	(NT_EXE_IMAGE_BASE): Default to an address above 4G.
+	(NT_DLL_IMAGE_BASE, NT_DLL_AUTO_IMAGE_BASE,
+	(NT_DLL_AUTO_IMAGE_MASK): Likewise.
+	* ld.texi: Document the new options.
+	* pe-dll.c (pe_dll_enable_reloc_section): Change to default to
+	true.
+	(generate_reloc): Do nothing if there is no reloc section.
+	(pe_exe_fill_sections): Only assign the reloc section contents if
+	the section exists.
+	* testsuite/ld-pe/pe.exp: Add the --disable-reloc-section flag to
+	the .secrel32 tests.
+	* testsuite/ld-scripts/provide-8.d: Expect for fail on PE targets.
+	* NEWS: Mention the change in DLL generation.
+
+2020-08-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/indirect.exp: Append $NOSANTIZE_CFLAGS to CC.
+	* testsuite/ld-elf/shared.exp: Likewise.
+	* testsuite/ld-elfcomm/elfcomm.exp: Likewise.
+	* testsuite/ld-elfvers/vers.exp: Likewise.
+	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
+	* testsuite/ld-elfweak/elfweak.exp: Likewise.
+	* testsuite/ld-plugin/lto.exp: Likewise.
+	* testsuite/ld-plugin/plugin.exp: Likewise.
+	* testsuite/ld-scripts/crossref.exp: Likewise.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26499
+	* emultempl/spuelf.em (spu_elf_relink): Check for NULL tmp_file_list.
+
+2020-08-26  Alan Modra  <amodra@gmail.com>
+
+	PR 26431
+	* pe-dll.c (auto_export): Don't call bsearch with zero count.
+
+2020-08-25  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-libs/libs.exp: Don't run on sh-pe, tic30 or tic54x.
+	* testsuite/ld-scripts/data.d: xfail tic4x and tic54x.
+	* testsuite/ld-scripts/empty-address-2a.d: xfail tic54x.
+	* testsuite/ld-scripts/empty-address-2b.d: Likewise.
+	* testsuite/ld-scripts/include-1.d: xfail tic4x and tic54x.
+	* testsuite/ld-scripts/provide-1.d: xfail tic54x.
+	* testsuite/ld-scripts/provide-2.d: Likewise.
+	* testsuite/ld-scripts/provide-4.d: Likewise.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-sparc/tlssunbin32.rd: Update for new readelf output.
+	* testsuite/ld-sparc/tlssunbin64.rd: Likewise.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tls32.d: Update for TPREL_HA/LO optimisation.
+	* testsuite/ld-powerpc/tlsexe32.d: Likewise.
+	* testsuite/ld-powerpc/tlsldopt32.d: Likewise.
+	* testsuite/ld-powerpc/tlsmark32.d: Likewise.
+	* testsuite/ld-powerpc/tlsopt4_32.d: Likewise.
+	* testsuite/ld-powerpc/tprel.s,
+	* testsuite/ld-powerpc/tprel.d,
+	* testsuite/ld-powerpc/tprel32.d: New tests.
+	* testsuite/ld-powerpc/tprelbad.s,
+	* testsuite/ld-powerpc/tprelbad.d: New test.
+	* testsuite/ld-powerpc/powerpc.exp: Run them.
+
+2020-08-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26382
+	* testsuite/ld-elf/pr26302.nd: Updated.
+	* testsuite/ld-elf/pr26302.rd: New file.
+	* testsuite/ld-elf/shared.exp: Add a test for readelf -sW.
+
+2020-08-20  Nick Clifton  <nickc@redhat.com>
+
+	PR 26428
+	* testsuite/ld-elf/zlibbegin.rS: Update expected output.
+	* testsuite/ld-elf/zlibnormal.rS: Likewise.
+
+2020-08-16  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/inline.s,
+	* testsuite/ld-powerpc/inline-1.d,
+	* testsuite/ld-powerpc/inline-2.d,
+	* testsuite/ld-powerpc/inline-3.d,
+	* testsuite/ld-powerpc/inline-4.d,
+	* testsuite/ld-powerpc/inlinepcrel.s,
+	* testsuite/ld-powerpc/inlinepcrel-1.d,
+	* testsuite/ld-powerpc/inlinepcrel-2.d,
+	* testsuite/ld-powerpc/inlinepcrel-3.d: New tests.
+	* testsuite/ld-powerpc/powerpc.exp: Run them.
+
+2020-08-16  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26389
+	* testsuite/ld-plugin/lto.exp: Run PR binutils/26389 test.
+	* testsuite/ld-plugin/pr26389.c: New file.
+	* testsuite/ld-plugin/pr26389.d: Likewise.
+
+2020-08-14  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/ld-arm/thumb-plt-got.d: Relax regexpr.
+	* testsuite/ld-arm/thumb-plt.d: Likewise.
+
+2020-08-13  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/ppc64elf.em (params): Init new field.
+	(enum ppc64_opt): Add OPTION_NO_PCREL_OPT.
+	(PARSE_AND_LIST_LONGOPTS, PARSE_AND_LIST_OPTIONS),
+	(PARSE_AND_LIST_ARGS_CASES): Support --no-pcrel-optimize.
+
+2020-08-10  Nick Clifton  <nickc@redhat.com>
+
+	PR ld/21351
+	* ld.texi: Clarify the behaviour of the --relax and --no-relax
+	options on systems that do not support them.
+
+2020-08-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/26302
+	* testsuite/ld-elf/pr26302.nd: New file.
+	* testsuite/ld-elf/pr26302.ver: Likewise.
+	* testsuite/ld-elf/pr26302a.c: Likewise.
+	* testsuite/ld-elf/pr26302b.c: Likewise.
+	* testsuite/ld-elf/shared.exp: Run binutils/26302 tests.
+
+2020-08-07  David Faust  <david.faust@oracle.com>
+
+	* testsuite/ld-bpf/call-3.s: New file.
+	* testsuite/ld-bpf/call-3.d: Likewise.
+
+2020-08-05  David Faust  <david.faust@oracle.com>
+
+	* testsuite/ld-bpf/call-2.s: New file.
+	* testsuite/ld-bpf/call-2.d: Likewise.
+	* testsuite/ld-bpf/reloc-data-be.d: Likewise.
+	* testsuite/ld-bpf/reloc-data-le.d: Likewise.
+	* testsuite/ld-bpf/reloc-data.s: Likewise.
+	* testsuite/ld-bpf/reloc-insn-external-be.d: Likewise.
+	* testsuite/ld-bpf/reloc-insn-external-le.d: Likewise.
+	* testsuite/ld-bpf/reloc-insn-external.s: Likewise.
+	* testsuite/ld-bpf/reloc-insn32-be.d: Likewise.
+	* testsuite/ld-bpf/reloc-insn32-le.d: Likewise.
+	* testsuite/ld-bpf/reloc-insn32.s: Likewise.
+	* testsuite/ld-bpf/reloc-insn64-be.d: Likewise.
+	* testsuite/ld-bpf/reloc-insn64-le.d: Likewise.
+	* testsuite/ld-bpf/reloc-insn64.s: Likewise.
+
+2020-08-06  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* emultempl/msp430.em (change_output_section): Update the tail
+	of the output section statement list when moving the original
+	tail to a different output section.
+	(eval_upper_either_sections): Don't move sections from the upper
+	region to the lower region unless the upper region is
+	overflowing.
+
+2020-08-03  Alan Modra  <amodra@gmail.com>
+
+	* ldlex.l (yy_create_string_buffer): Use xmalloc rather than malloc.
+	* lexsup.c (parse_args): Likewise.
+
+2020-08-03  Alan Modra  <amodra@gmail.com>
+
+	PR 26328
+	* configure.ac: AC_CHECK_DECLS asprintf.
+	* configure: Regenerate.
+	* config.in: Regenerate.
+
+2020-08-03  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elfvers/vers.exp (objdump_symstuff): Remove unused
+	variable.  Init list_a and list_b to empty.
+	(objdump_dynsymstuff): Likewise, and remove undefined list_a
+	handling.
+	* testsuite/ld-elfweak/elfweak.exp (objdump_symstuff): Similarly.
+	(objdump_dynsymstuff): Similarly.
+
+2020-07-31  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/indirect.exp: Append -fno-lto to CC.
+	* testsuite/ld-elfvers/vers.exp: Likewise.
+	* testsuite/ld-elfweak/elfweak.exp: Likewise.
+	* testsuite/ld-ifunc/ifunc.exp: Likewise.
+	* testsuite/ld-plugin/lto.exp (no_lto): New.
+	Add $no_lto to build pr15146c.so.
+	* testsuite/lib/ld-lib.exp (at_least_gcc_version): Filter out
+	-Wl,xxx options.
+	(check_gcc_plugin_enabled): Likewise.
+	(run_ld_link_exec_tests): Prepend -fno-lto to $cflags.
+	(run_cc_link_tests): Likewise.
+
+2020-07-31  Shahab Vahedi  <shahab@synopsys.com>
+
+	* scripttempl/elfarc.sc (.init_array): Keep ".init_array.*".
+	(.fini_array): Keep ".fini_array.*".
+
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+
+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/ld-elf/sec64k.exp: Also accept a section symbol with
+	a name.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-o32.d: New
+	test.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-o32t.d: New
+	test.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-n32.d: New
+	test.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-n32t.d: New
+	test.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-n64.d: New
+	test.
+	* testsuite/ld-mips-elf/global-local-symtab-sort-n64t.d: New
+	test.
+	* testsuite/ld-mips-elf/global-local-symtab-final-o32.d: New
+	test.
+	* testsuite/ld-mips-elf/global-local-symtab-final-n32.d: New
+	test.
+	* testsuite/ld-mips-elf/global-local-symtab-final-n64.d: New
+	test.
+	* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.
+
+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>
+
+	* testsuite/ld-mips-elf/global-local-symtab-o32.d: New test.
+	* testsuite/ld-mips-elf/global-local-symtab-o32t.d: New test.
+	* testsuite/ld-mips-elf/global-local-symtab-n32.d: New test.
+	* testsuite/ld-mips-elf/global-local-symtab-n32t.d: New test.
+	* testsuite/ld-mips-elf/global-local-symtab-n64.d: New test.
+	* testsuite/ld-mips-elf/global-local-symtab.ld: New test linker
+	script.
+	* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.
+
+2020-07-29  Alan Modra  <amodra@gmail.com>
+
+	* ldelf.c (ldelf_before_place_orphans): Set SEC_EXCLUDE for
+	discarded sections.
+
+2020-07-28  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (lang_check): Don't complain about relocs or merge
+	attributes from --just-symbols input.
+	* testsuite/ld-misc/just-symbols.exp: Just dump .data section.
+	Don't run test on a number of targets.
+
+2020-07-28  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-misc/just-symbols-1.dd: Revert last change.
+
+2020-07-27  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-misc/just-symbols.exp: Run for x86_64 PE too.
+	Set LDFLAGS for PE and XCOFF.
+	* testsuite/ld-misc/just-symbols.ld: Accept XCOFF mapped .data.
+	* testsuite/ld-misc/just-symbols-1.dd: Don't check format or
+	"Contents of section" lines.
+
+2020-07-27  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/ld-lib.exp (check_ctf_available): Check first that
+	target compiler is available.
+
+2020-07-23  Maciej W. Rozycki  <macro@wdc.com>
+
+	PR ld/26288
+	* ldelf.c (ldelf_after_open): Do not reject ET_EXEC input
+	supplied with `--just-symbols'.
+	* testsuite/ld-misc/just-symbols.exp: New test script.
+	* testsuite/ld-misc/just-symbols-1.dd: New test dump.
+	* testsuite/ld-misc/just-symbols.ld: New test linker script.
+	* testsuite/ld-misc/just-symbols-0.s: New test source.
+	* testsuite/ld-misc/just-symbols-1.s: New test source.
+
+2020-07-23  Maciej W. Rozycki  <macro@wdc.com>
+
+	PR ld/26288
+
+	Revert:
+	PR 26047
+	* ldelf.c (ldelf_after_open): Fail if attempting to link one
+	executable into another.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* testsuite/ld-ctf/ctf.exp: Skip on non-ELF for now.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ldlang.c (ldlang_open_ctf): Set SEC_EXCLUDE on all but the
+	first input .ctf section.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac (enable_libctf): Substitute it.
+	* Makefile.am (enablings.exp): New.
+	(EXTRA_DEJAGNU_SITE_CONFIG): Add it.
+	(DISTCLEANFILES): Likewise.
+	* Makefile.in: Regenerate.
+	* configure: Likewise.
+	* testsuite/lib/ld-lib.exp (compile_one_cc): New.
+	(check_ctf_available): Likewise.
+	(skip_ctf_tests): Likewise.
+	* testsuite/ld-ctf/ctf.exp: Call skip_ctf_tests.
+
+2020-07-22  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>
+
+	* testsuite/ld-ctf/ctf.exp: New file.
+	* testsuite/ld-ctf/A-2.c: New file.
+	* testsuite/ld-ctf/A.c: New file.
+	* testsuite/ld-ctf/B-2.c: New file.
+	* testsuite/ld-ctf/B.c: New file.
+	* testsuite/ld-ctf/C-2.c: New file.
+	* testsuite/ld-ctf/C.c: New file.
+	* testsuite/ld-ctf/array-char.c: New file.
+	* testsuite/ld-ctf/array-int.c: New file.
+	* testsuite/ld-ctf/array.d: New file.
+	* testsuite/ld-ctf/child-float.c: New file.
+	* testsuite/ld-ctf/child-int.c: New file.
+	* testsuite/ld-ctf/conflicting-cycle-1.B-1.d: New file.
+	* testsuite/ld-ctf/conflicting-cycle-1.B-2.d: New file.
+	* testsuite/ld-ctf/conflicting-cycle-1.parent.d: New file.
+	* testsuite/ld-ctf/conflicting-cycle-2.A-1.d: New file.
+	* testsuite/ld-ctf/conflicting-cycle-2.A-2.d: New file.
+	* testsuite/ld-ctf/conflicting-cycle-2.parent.d: New file.
+	* testsuite/ld-ctf/conflicting-cycle-3.C-1.d: New file.
+	* testsuite/ld-ctf/conflicting-cycle-3.C-2.d: New file.
+	* testsuite/ld-ctf/conflicting-cycle-3.parent.d: New file.
+	* testsuite/ld-ctf/conflicting-enums.d: New file.
+	* testsuite/ld-ctf/conflicting-typedefs.d: New file.
+	* testsuite/ld-ctf/cross-tu-1.c: New file.
+	* testsuite/ld-ctf/cross-tu-2.c: New file.
+	* testsuite/ld-ctf/cross-tu-conflicting-2.c: New file.
+	* testsuite/ld-ctf/cross-tu-cyclic-1.c: New file.
+	* testsuite/ld-ctf/cross-tu-cyclic-2.c: New file.
+	* testsuite/ld-ctf/cross-tu-cyclic-3.c: New file.
+	* testsuite/ld-ctf/cross-tu-cyclic-4.c: New file.
+	* testsuite/ld-ctf/cross-tu-cyclic-conflicting.d: New file.
+	* testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d: New file.
+	* testsuite/ld-ctf/cross-tu-into-cycle.d: New file.
+	* testsuite/ld-ctf/cross-tu-noncyclic.d: New file.
+	* testsuite/ld-ctf/cycle-1.c: New file.
+	* testsuite/ld-ctf/cycle-1.d: New file.
+	* testsuite/ld-ctf/cycle-2.A.d: New file.
+	* testsuite/ld-ctf/cycle-2.B.d: New file.
+	* testsuite/ld-ctf/cycle-2.C.d: New file.
+	* testsuite/ld-ctf/diag-ctf-version-0.d: New file.
+	* testsuite/ld-ctf/diag-ctf-version-0.s: New file.
+	* testsuite/ld-ctf/diag-ctf-version-2-unsupported-feature.d: New file.
+	* testsuite/ld-ctf/diag-ctf-version-2-unsupported-feature.s: New file.
+	* testsuite/ld-ctf/diag-ctf-version-f.d: New file.
+	* testsuite/ld-ctf/diag-ctf-version-f.s: New file.
+	* testsuite/ld-ctf/diag-cttname-invalid.d: New file.
+	* testsuite/ld-ctf/diag-cttname-invalid.s: New file.
+	* testsuite/ld-ctf/diag-cttname-null.d: New file.
+	* testsuite/ld-ctf/diag-cttname-null.s: New file.
+	* testsuite/ld-ctf/diag-cuname.d: New file.
+	* testsuite/ld-ctf/diag-cuname.s: New file.
+	* testsuite/ld-ctf/diag-decompression-failure.d: New file.
+	* testsuite/ld-ctf/diag-decompression-failure.s: New file.
+	* testsuite/ld-ctf/diag-parlabel.d: New file.
+	* testsuite/ld-ctf/diag-parlabel.s: New file.
+	* testsuite/ld-ctf/diag-parname.d: New file.
+	* testsuite/ld-ctf/diag-parname.s: New file.
+	* testsuite/ld-ctf/diag-unsupported-flag.d: New file.
+	* testsuite/ld-ctf/diag-unsupported-flag.s: New file.
+	* testsuite/ld-ctf/diag-wrong-magic-number-mixed.d: New file.
+	* testsuite/ld-ctf/diag-wrong-magic-number.d: New file.
+	* testsuite/ld-ctf/diag-wrong-magic-number.s: New file.
+	* testsuite/ld-ctf/enum-2.c: New file.
+	* testsuite/ld-ctf/enum.c: New file.
+	* testsuite/ld-ctf/function.c: New file.
+	* testsuite/ld-ctf/function.d: New file.
+	* testsuite/ld-ctf/slice.c: New file.
+	* testsuite/ld-ctf/slice.d: New file.
+	* testsuite/ld-ctf/super-sub-cycles.c: New file.
+	* testsuite/ld-ctf/super-sub-cycles.d: New file.
+	* testsuite/ld-ctf/typedef-int.c: New file.
+	* testsuite/ld-ctf/typedef-long.c: New file.
+	* testsuite/ld-ctf/union-1.c: New file.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ldlex.h (option_values) <OPTION_CTF_VARIABLES,
+	OPTION_NO_CTF_VARIABLES, OPTION_CTF_SHARE_TYPES>: New.
+	* ld.h (ld_config_type) <ctf_variables, ctf_share_duplicated>:
+	New fields.
+	* ldlang.c (lang_merge_ctf): Use them.
+	* lexsup.c (ld_options): Add ctf-variables, no-ctf-variables,
+	ctf-share-types.
+	(parse_args) <OPTION_CTF_VARIABLES, OPTION_NO_CTF_VARIABLES,
+	OPTION_CTF_SHARE_TYPES>: New cases.
+	* ld.texi: Document new options.
+	* NEWS: Likewise.
+
+2020-07-22  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>
+
+	* ldlang.c (lang_merge_ctf): Turn errors into warnings.
+	Fix a comment typo.
+	(lang_write_ctf): Turn an error into a warning.
+	(ldlang_open_ctf): Reformat warnings. Fix printing file names.
+
+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>
+
+	* ldlang.c (lang_ctf_errs_warnings): New, print CTF errors
+	and warnings.  Assert when libctf asserts.
+	(lang_merge_ctf): Call it.
+	(land_write_ctf): Likewise.
+
+2020-07-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26262
+	PR ld/26267
+	* ldlang.c (lang_process): Set lto_all_symbols_read after all
+	LTO IR symbols have been read.
+	* plugin.c (plugin_notice): Override the IR definition only if
+	all LTO IR symbols have been read or the new definition is
+	non-weak and the the IR definition is weak
+	* testsuite/ld-plugin/lto.exp: Run PR ld/26262 and ld/26267
+	tests.
+	* testsuite/ld-plugin/pr26262a.c: New file.
+	* testsuite/ld-plugin/pr26262b.c: Likewise.
+	* testsuite/ld-plugin/pr26262c.c: Likewise.
+	* testsuite/ld-plugin/pr26267.err: Likewise.
+	* testsuite/ld-plugin/pr26267a.c: Likewise.
+	* testsuite/ld-plugin/pr26267b.c: Likewise.
+	* testsuite/ld-plugin/pr26267c.c: Likewise.
+
+2020-07-20  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/ld-powerpc/powerpc.exp (ppcelftests): Use section name
+	.PPC.EMB.apuinfo instead of section number 2 in apuinfo tests.
+
+2020-07-20  Alan Modra  <amodra@gmail.com>
+
+	PR 26265
+	* ldlang.c (undef_from_cmdline): Delete.
+	(ldlang_add_undef): Mark "cmdline" param unused.
+	(lang_end): Traverse gc_sym_list to determine whether a symbol root
+	has been specified.  Update error message.
+	* testsuite/ld-gc/noent.d: Adjust for changed error message.
+
+2020-07-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26263
+	* testsuite/ld-i386/pr26263.d: Updated.
+	* testsuite/ld-x86-64/pr26263.d: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Run gas/26263 test for all ELF
+	targets.
+
+2020-07-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/26263
+	* testsuite/ld-i386/i386.exp: Run PR gas/26263 test.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-i386/pr26263.d: New file.
+	* testsuite/ld-x86-64/pr26263.d: Likewise.
+	* testsuite/ld-x86-64/pr26263.s: Likewise.
+
+2020-07-19  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* scripttempl/elf.sc (ETEXT_LAST_IN_RODATA_SEGMENT): New variable.
+	* emulparams/elf64mmix.sh (ETEXT_LAST_IN_RODATA_SEGMENT): Define.
+	* testsuite/ld-mmix/sec-1.d: Adjust.
+
+2020-07-19  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/ppc64elf.em (power10-stubs): Accept optional "auto" arg.
+	* ld.texi (power10-stubs): Update.
+	* testsuite/ld-powerpc/callstub-1.d: Force --power10-stubs.
+	* testsuite/ld-powerpc/callstub-2.d: Relax branch offset comparison.
+	* testsuite/ld-powerpc/callstub-4.d: New test.
+	* testsuite/ld-powerpc/notoc.d: Force --no-power10-stubs.
+	* testsuite/ld-powerpc/notoc3.d,
+	* testsuite/ld-powerpc/notoc3.s,
+	* testsuite/ld-powerpc/notoc3.wf: New test.
+	* testsuite/ld-powerpc/powerpc.exp: Run new tests.  Pass
+	--no-power10-stubs for notoc link.
+
+2020-07-17  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* scripttempt/mmo.sc: Move .init first in .text output section.
+	* testsuite/ld-mmix/bpo-9m.d: Adjust accordingly.
+
+2020-07-15  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/ld-i386/ibt-plt-1.d, testsuite/ld-i386/ibt-plt-2a.d,
+	testsuite/ld-i386/ibt-plt-2c.d, testsuite/ld-i386/ibt-plt-3a.d,
+	testsuite/ld-i386/ibt-plt-3c.d, testsuite/ld-i386/plt-pic.pd,
+	testsuite/ld-i386/plt-pic2.dd, testsuite/ld-i386/plt.pd,
+	testsuite/ld-i386/plt2.dd, testsuite/ld-i386/pr19636-1d.d,
+	testsuite/ld-i386/pr19636-1l.d, testsuite/ld-i386/pr19636-2c.d,
+	testsuite/ld-i386/pr20830.d, testsuite/ld-i386/vxworks1-lib.dd,
+	testsuite/ld-i386/vxworks1.dd,
+	testsuite/ld-ifunc/ifunc-2-i386-now.d,
+	testsuite/ld-ifunc/ifunc-2-local-i386-now.d,
+	testsuite/ld-ifunc/ifunc-2-local-x86-64-now.d,
+	testsuite/ld-ifunc/ifunc-2-x86-64-now.d,
+	testsuite/ld-ifunc/ifunc-21-x86-64.d,
+	testsuite/ld-ifunc/ifunc-22-x86-64.d,
+	testsuite/ld-ifunc/pr17154-i386-now.d,
+	testsuite/ld-ifunc/pr17154-i386.d,
+	testsuite/ld-ifunc/pr17154-x86-64-now.d,
+	testsuite/ld-ifunc/pr17154-x86-64.d,
+	testsuite/ld-x86-64/align-branch-1.d,
+	testsuite/ld-x86-64/bnd-branch-1-now.d,
+	testsuite/ld-x86-64/bnd-branch-1.d,
+	testsuite/ld-x86-64/bnd-ifunc-1-now.d,
+	testsuite/ld-x86-64/bnd-ifunc-1.d,
+	testsuite/ld-x86-64/bnd-ifunc-2-now.d,
+	testsuite/ld-x86-64/bnd-ifunc-2.d,
+	testsuite/ld-x86-64/bnd-plt-1-now.d,
+	testsuite/ld-x86-64/bnd-plt-1.d,
+	testsuite/ld-x86-64/call1a.d, testsuite/ld-x86-64/call1b.d,
+	testsuite/ld-x86-64/call1d.d, testsuite/ld-x86-64/call1e.d,
+	testsuite/ld-x86-64/call1f.d, testsuite/ld-x86-64/call1g.d,
+	testsuite/ld-x86-64/call1h.d, testsuite/ld-x86-64/call1i.d,
+	testsuite/ld-x86-64/gotpcrel1.dd,
+	testsuite/ld-x86-64/hidden2.d,
+	testsuite/ld-x86-64/ibt-plt-1-x32.d,
+	testsuite/ld-x86-64/ibt-plt-1.d,
+	testsuite/ld-x86-64/ibt-plt-2a-x32.d,
+	testsuite/ld-x86-64/ibt-plt-2a.d,
+	testsuite/ld-x86-64/ibt-plt-2c-x32.d,
+	testsuite/ld-x86-64/ibt-plt-2c.d,
+	testsuite/ld-x86-64/ibt-plt-3a-x32.d,
+	testsuite/ld-x86-64/ibt-plt-3a.d,
+	testsuite/ld-x86-64/ibt-plt-3c-x32.d,
+	testsuite/ld-x86-64/ibt-plt-3c.d,
+	testsuite/ld-x86-64/libno-plt-1b.dd,
+	testsuite/ld-x86-64/mpx3.dd, testsuite/ld-x86-64/mpx3n.dd,
+	testsuite/ld-x86-64/mpx4.dd, testsuite/ld-x86-64/mpx4n.dd,
+	testsuite/ld-x86-64/no-plt-1a.dd,
+	testsuite/ld-x86-64/no-plt-1b.dd,
+	testsuite/ld-x86-64/no-plt-1c.dd,
+	testsuite/ld-x86-64/no-plt-1d.dd,
+	testsuite/ld-x86-64/no-plt-1e.dd,
+	testsuite/ld-x86-64/no-plt-1f.dd,
+	testsuite/ld-x86-64/no-plt-1g.dd,
+	testsuite/ld-x86-64/plt-main-bnd.dd,
+	testsuite/ld-x86-64/plt-main-ibt-x32.dd,
+	testsuite/ld-x86-64/plt-main-ibt.dd,
+	testsuite/ld-x86-64/plt.pd, testsuite/ld-x86-64/plt2.dd,
+	testsuite/ld-x86-64/pr19609-5a.d,
+	testsuite/ld-x86-64/pr19609-5b.d,
+	testsuite/ld-x86-64/pr19609-5c.d,
+	testsuite/ld-x86-64/pr19609-5e.d,
+	testsuite/ld-x86-64/pr19609-7b.d,
+	testsuite/ld-x86-64/pr19609-7d.d,
+	testsuite/ld-x86-64/pr19636-2d.d,
+	testsuite/ld-x86-64/pr19636-2l.d,
+	testsuite/ld-x86-64/pr20253-1b.d,
+	testsuite/ld-x86-64/pr20253-1d.d,
+	testsuite/ld-x86-64/pr20253-1f.d,
+	testsuite/ld-x86-64/pr20253-1h.d,
+	testsuite/ld-x86-64/pr20253-1j.d,
+	testsuite/ld-x86-64/pr20253-1l.d,
+	testsuite/ld-x86-64/pr20830a-now.d,
+	testsuite/ld-x86-64/pr20830a.d,
+	testsuite/ld-x86-64/pr20830b-now.d,
+	testsuite/ld-x86-64/pr20830b.d,
+	testsuite/ld-x86-64/pr21038a-now.d,
+	testsuite/ld-x86-64/pr21038a.d,
+	testsuite/ld-x86-64/pr21038b-now.d,
+	testsuite/ld-x86-64/pr21038b.d,
+	testsuite/ld-x86-64/pr21038c-now.d,
+	testsuite/ld-x86-64/pr21038c.d,
+	testsuite/ld-x86-64/pr23930-x32.d,
+	testsuite/ld-x86-64/pr23930.d,
+	testsuite/ld-x86-64/pr25416-1a.d,
+	testsuite/ld-x86-64/pr25416-2a.d,
+	testsuite/ld-x86-64/pr26018.d,
+	testsuite/ld-x86-64/protected2-k1om.d,
+	testsuite/ld-x86-64/protected2-l1om.d,
+	testsuite/ld-x86-64/protected2.d,
+	testsuite/ld-x86-64/protected3.d,
+	testsuite/ld-x86-64/protected8.d,
+	testsuite/ld-x86-64/tlsbin.dd, testsuite/ld-x86-64/tlsbin2.dd,
+	testsuite/ld-x86-64/tlsbindesc.dd,
+	testsuite/ld-x86-64/tlsdesc.dd,
+	testsuite/ld-x86-64/tlsdesc.pd,
+	testsuite/ld-x86-64/tlsgd10.dd,
+	testsuite/ld-x86-64/tlsgd7.dd, testsuite/ld-x86-64/tlsgd8.dd,
+	testsuite/ld-x86-64/tlsgd9.dd,
+	testsuite/ld-x86-64/tlsgdesc.dd,
+	testsuite/ld-x86-64/tlsld3.dd, testsuite/ld-x86-64/tlsld4.dd,
+	testsuite/ld-x86-64/tlspic.dd, testsuite/ld-x86-64/tlspic2.dd,
+	testsuite/ld-x86-64/tlspie2b.d, testsuite/ld-x86-64/tlspie2c.d:
+	Adjust expectations.
+
+2020-07-15  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* testsuite/ld-mmix/undef-1.d, testsuite/ld-mmix/undef-1m.d,
+	testsuite/ld-mmix/undef-2.d, testsuite/ld-mmix/undef-2m.d: Add
+	start- and end-anchors to error-string to match just a
+	single-line error-message.
+
+2020-07-13  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/default-script1.d: Don't skip, xfail
+	using is_pecoff_format.
+	* testsuite/ld-scripts/default-script2.d: Likewise.
+	* testsuite/ld-scripts/default-script3.d: Likewise.
+	* testsuite/ld-scripts/default-script4.d: Likewise.
+	* testsuite/ld-scripts/pr20302.d: Remove x86_64-*-cygwin from notarget.
+	* testsuite/ld-scripts/provide-6.d: Remove x86_64-*-cygwin from xfail.
+	* testsuite/ld-scripts/provide-8.d: Likewise.
+
+2020-07-10  Alan Modra  <amodra@gmail.com>
+
+	* ld.texi (PowerPC64 ELF64): Document --no-inline-optimize,
+	--power10-stubs and --no-power10-stubs.
+
+2020-07-10  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/ppc64elf.em (params): Init new field.
+	(enum ppc64_opt): Add OPTION_POWER10_STUBS and OPTION_NO_POWER10_STUBS.
+	(PARSE_AND_LIST_LONGOPTS): Support --power10-stubs and
+	--no-power10-stubs.
+	(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Likewise.
+	* testsuite/ld-powerpc/callstub-3.d: New test.
+	* testsuite/ld-powerpc/powerpc.exp: Run it.
+
+2020-07-09  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/ppcpe.sh: Delete.
+	* scripttempl/ppcpe.sc: Delete.
+	* emulparams/ppclynx.sh: Delete.
+	* Makefile.am (ALL_EMULATION_SOURCES): Remove ppc PE and lynxos.
+	* configure.tgt: Likewise.
+	* emultempl/beos.em: Remove powerpc PE support.
+	* emultempl/pe.em: Likewise.
+	* po/BLD-POTFILES.in: Regenerate.
+	* Makefile.in: Regenerate.
+
+2020-07-09  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-gc/gc.exp: Don't set -mminimal-toc for powerpc64,
+	and remove powerpc64 xfail.  Use -fno-PIE for ppc32.
+
+2020-07-09  Alan Modra  <amodra@gmail.com>
+
+	PR 18841
+	* testsuite/ld-ifunc/ifunc.exp: Run pr18841 tests non-pie.
+
+2020-07-08  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/ld-lib.exp (ar_simple_create): Pass options before
+	ar command.
+	* testsuite/ld-powerpc/aix52.exp: Run for rs6000-aix5.2.  Update
+	match files.
+	* testsuite/ld-powerpc/aix-abs-branch-1.dd: Update.
+	* testsuite/ld-powerpc/aix-core-sec-1.hd: Update.
+	* testsuite/ld-powerpc/aix-gc-1-32.dd: Update.
+	* testsuite/ld-powerpc/aix-gc-1-64.dd: Update.
+	* testsuite/ld-powerpc/aix-glink-1-32.dd: Update.
+	* testsuite/ld-powerpc/aix-glink-1-64.dd: Update.
+	* testsuite/ld-powerpc/aix-glink-2-32.dd: Update.
+	* testsuite/ld-powerpc/aix-glink-2-64.dd: Update.
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-rel.rd: Update.
+	* testsuite/ld-powerpc/aix-ref-1-32.od: Update.
+	* testsuite/ld-powerpc/aix-ref-1-64.od: Update.
+	* testsuite/ld-powerpc/aix-toc-1-32.dd: Update.
+	* testsuite/ld-powerpc/aix-toc-1-64.dd: Update.
+	* testsuite/ld-powerpc/aix-weak-3-32.dd: Update.
+	* testsuite/ld-powerpc/aix-weak-3-64.dd: Update.
+	* testsuite/ld-powerpc/aix-abs-branch-1.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-abs-branch-1-32.nd,
+	* testsuite/ld-powerpc/aix-abs-branch-1-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-abs-reloc-1.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-abs-reloc-1-32.nd,
+	* testsuite/ld-powerpc/aix-abs-reloc-1-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-abs-reloc-1.od: Delete, replace with..
+	* testsuite/ld-powerpc/aix-abs-reloc-1-32.od,
+	* testsuite/ld-powerpc/aix-abs-reloc-1-64.od: ..these new files.
+	* testsuite/ld-powerpc/aix-export-1-all.dd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-export-1-all-32.dd,
+	* testsuite/ld-powerpc/aix-export-1-all-64.dd: ..these new files.
+	* testsuite/ld-powerpc/aix-export-1-full.dd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-export-1-full-32.dd,
+	* testsuite/ld-powerpc/aix-export-1-full-64.dd: ..these new files.
+	* testsuite/ld-powerpc/aix-export-2.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-export-2-32.nd,
+	* testsuite/ld-powerpc/aix-export-2-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-gc-1.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-gc-1-32.nd,
+	* testsuite/ld-powerpc/aix-gc-1-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-glink-3.dd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-glink-3-32.dd,
+	* testsuite/ld-powerpc/aix-glink-3-64.dd: ..these new files.
+	* testsuite/ld-powerpc/aix-lineno-1a.dd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-lineno-1a-32.dd,
+	* testsuite/ld-powerpc/aix-lineno-1a-64.dd: ..these new files.
+	* testsuite/ld-powerpc/aix-lineno-1a.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-lineno-1a-32.nd,
+	* testsuite/ld-powerpc/aix-lineno-1a-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-lineno-1b.dd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-lineno-1b-32.dd,
+	* testsuite/ld-powerpc/aix-lineno-1b-64.dd: ..these new files.
+	* testsuite/ld-powerpc/aix-lineno-1b.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-lineno-1b-32.nd,
+	* testsuite/ld-powerpc/aix-lineno-1b-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso.dnd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso-32.dnd,
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso-64.dnd: ..these new files.
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso.drd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso-32.drd,
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso-64.drd: ..these new files.
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso-32.nd,
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso.rd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso-32.rd,
+	* testsuite/ld-powerpc/aix-no-dup-syms-1-dso-64.rd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-1-dso.dnd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-1-dso-32.dnd,
+	* testsuite/ld-powerpc/aix-weak-1-dso-64.dnd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-1-dso.hd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-1-dso-32.hd,
+	* testsuite/ld-powerpc/aix-weak-1-dso-64.hd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-1-dso.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-1-dso-32.nd,
+	* testsuite/ld-powerpc/aix-weak-1-dso-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-1-gcdso.dnd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-1-gcdso-32.dnd,
+	* testsuite/ld-powerpc/aix-weak-1-gcdso-64.dnd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-1-gcdso.hd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-1-gcdso-32.hd,
+	* testsuite/ld-powerpc/aix-weak-1-gcdso-64.hd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-1-gcdso.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-1-gcdso-32.nd,
+	* testsuite/ld-powerpc/aix-weak-1-gcdso-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-2a.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-2a-32.nd,
+	* testsuite/ld-powerpc/aix-weak-2a-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-2b.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-2b-32.nd,
+	* testsuite/ld-powerpc/aix-weak-2b-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-2c.nd: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-2c-32.nd,
+	* testsuite/ld-powerpc/aix-weak-2c-64.nd: ..these new files.
+	* testsuite/ld-powerpc/aix-weak-2c.od: Delete, replace with..
+	* testsuite/ld-powerpc/aix-weak-2c-32.od,
+	* testsuite/ld-powerpc/aix-weak-2c-64.od: ..these new files.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/section-match-1.d: xfail h8300.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/align.exp: Don't exclude xcoff.  Pass
+	-bnogc ld option for xcoff.
+	* testsuite/ld-scripts/provide.exp: Likewise.
+	* testsuite/ld-scripts/data.exp: Pass -bnogc ld option for xcoff.
+	* testsuite/ld-scripts/default-script.exp: Likewise.
+	* testsuite/ld-scripts/defined.exp: Likewise.
+	* testsuite/ld-scripts/empty-address.exp: Likewise.
+	* testsuite/ld-scripts/expr.exp: Likewise.
+	* testsuite/ld-scripts/include.exp: Likewise.
+	* testsuite/ld-scripts/script.exp: Likewise.
+	* testsuite/ld-scripts/assign-loc.d: Don't exclude xcoff.
+	* testsuite/ld-scripts/defined3.d: Likewise.
+	* testsuite/ld-scripts/defined4.d: Likewise.
+	* testsuite/ld-scripts/pr18963.d: Likewise.
+	* testsuite/ld-scripts/sane1.d: Likewise.
+	* testsuite/ld-scripts/segment-start.d: Likewise.
+	* testsuite/ld-scripts/include-1.d: Likewise, and relax text vma.
+	* testsuite/ld-scripts/defined5.d: Update xfail and comment.
+	* testsuite/ld-scripts/defined5.s: Tweak "defined" to be at
+	non-zero section offset.
+	* testsuite/ld-scripts/fill16.d: xfail for xcoff.
+	* testsuite/ld-scripts/provide-2.d: Accept more symbols.
+	* testsuite/ld-scripts/provide-4.d: Likewise.
+	* testsuite/ld-scripts/provide-5.d: Likewise.
+	* testsuite/ld-scripts/provide-6.d: Likewise.
+	* testsuite/ld-scripts/provide-7.d: Likewise.
+	* testsuite/ld-scripts/align.t: Accept xcoff mapped .text and .data.
+	* testsuite/ld-scripts/defined3.t: Likewise.
+	* testsuite/ld-scripts/defined4.t: Likewise.
+	* testsuite/ld-scripts/defined5.t: Likewise.
+	* testsuite/ld-scripts/fill.t: Likewise.
+	* testsuite/ld-scripts/include-subdata.t: Likewise.
+	* testsuite/ld-scripts/provide-1.t: Likewise.
+	* testsuite/ld-scripts/provide-2.t: Likewise.
+	* testsuite/ld-scripts/provide-3.t: Likewise.
+	* testsuite/ld-scripts/provide-4.t: Likewise.
+	* testsuite/ld-scripts/provide-5.t: Likewise.
+	* testsuite/ld-scripts/provide-6.t: Likewise.
+	* testsuite/ld-scripts/provide-7.t: Likewise.
+	* testsuite/ld-scripts/provide-8.t: Likewise.
+	* testsuite/ld-scripts/assign-loc.t: Add required xcoff sections.
+	* testsuite/ld-scripts/sizeof.t: Likewise.
+	* testsuite/ld-scripts/align2.t: Likewise, and mapped sections.
+	* testsuite/ld-scripts/align5.t: Likewise.
+	* testsuite/ld-scripts/default-script.t: Likewise.
+	* testsuite/ld-scripts/empty-address-1.t: Likewise.
+	* testsuite/ld-scripts/empty-address-2a.t: Likewise.
+	* testsuite/ld-scripts/empty-address-2b.t: Likewise.
+	* testsuite/ld-scripts/empty-address-3a.t: Likewise.
+	* testsuite/ld-scripts/empty-address-3b.t: Likewise.
+	* testsuite/ld-scripts/empty-address-3c.t: Likewise.
+	* testsuite/ld-scripts/include-sections.t: Likewise.
+	* testsuite/ld-scripts/pr14962.t: Likewise.
+	* testsuite/ld-scripts/sane1.t: Likewise.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/align.exp: Use is_pecoff_format.
+	* testsuite/ld-scripts/defined.exp: Likewise.
+	* testsuite/ld-scripts/provide.exp: Likewise.
+	* testsuite/ld-scripts/weak.exp: Likewise.
+	* testsuite/ld-scripts/empty-address.exp: Likewise.  Reset LDFLAGS
+	on exit.
+	* testsuite/ld-scripts/expr.exp: Set LDFLAGS earlier, and with
+	--image-base for PE.
+	* testsuite/ld-scripts/include.exp: Set LDFLAGS for PE.
+	* testsuite/ld-scripts/script.exp: Use is_pecoff_format, and
+	set LDFLAGS as well as flags.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-checks/checks.exp: Use is_xcoff_format.
+	* testsuite/ld-powerpc/powerpc.exp: Likewise.
+	* testsuite/ld-scripts/print-memory-usage.exp: Likewise.
+	* testsuite/ld-srec/srec.exp: Likewise.
+	* testsuite/ld-undefined/require-defined.exp: Likewise.
+	* testsuite/ld-scripts/expr2.d: Likewise.
+	* testsuite/ld-scripts/section-match-1.d: Only run for ELF.
+	* testsuite/ld-elfvers/vers.exp: Delete dead code.
+	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
+	* testsuite/ld-elfweak/elfweak.exp: Likewise.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/aix.em (gld${EMULATION_NAME}_find_exp_assignment): Handle
+	etree_provided.
+
+2020-07-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-sh/vxworks1-lib.rd: Update expected output.
+	* testsuite/ld-sh/vxworks4.d: Likewise.
+
+2020-07-06  Yuri Chornoivan  <yurchor@ukr.net>
+
+	PR 26204
+	* lexsup.c: Fix spelling mistake.
+	* po/ld.pot: Regenerate.
+
+2020-07-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/bg.po: Updated Bulgarian translation.
+	* po/fr.po: Updated French translation.
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-07-03  Alan Modra  <amodra@gmail.com>
+
+	PR 26028
+	* testsuite/ld-arm/arm-elf.exp (vxworks1): Pass --wide to readelf
+	when dumping relocs.
+	* testsuite/ld-i386/i386.exp (vxworks1): Likewise.
+	* testsuite/ld-sh/sh-vxworks.exp (vxworks1): Likewise.
+	* testsuite/ld-sparc/sparc.exp (vxworks1): Likewise.
+	* testsuite/ld-arm/vxworks1.rd: Adjust to suit.
+	* testsuite/ld-i386/vxworks1.rd: Adjust.
+	* testsuite/ld-sh/vxworks1.rd: Adjust.
+	* testsuite/ld-sparc/vxworks1.rd: Adjust.
+
+2020-07-02  Nick Clifton  <nickc@redhat.com>
+
+	PR 26028
+	* testsuite/ld-powerpc/powerpc.exp: Add -T option to readelf
+	command line when running some tests.
+	* testsuite/ld-arm/arm-elf.exp: Likewise.
+	* testsuite/ld-mips-elf/mips-elf.exp: Likewise.
+	* testsuite/ld-mmix/local1.d: Likewise.
+	* testsuite/ld-mmix/local3.d: Likewise.
+	* testsuite/ld-mmix/local5.d: Likewise.
+	* testsuite/ld-mmix/local7.d: Likewise.
+	* testsuite/ld-powerpc/powerpc.exp: Likewise.
+
+2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* Makefile.am (ALL_EMULATION_SOURCES): Remove eelf_i386_nacl.c,
+	eelf32_x86_64_nacl.c, eelf_x86_64_nacl.c.
+	Remove x86 NaCl dep files.
+	* NEWS: Mention x86 NaCl target support removal.
+	* configure.tgt: Remove x86 NaCl target support.
+	* testsuite/ld-elf/binutils.exp: Likewise.
+	* testsuite/ld-elf/elf.exp: Likewise.
+	* testsuite/ld-elfvers/vers.exp: Likewise.
+	* testsuite/ld-i386/align-branch-1.d: Likewise.
+	* testsuite/ld-i386/export-class.exp: Likewise.
+	* testsuite/ld-i386/i386.exp: Likewise.
+	* testsuite/ld-i386/load1.d: Likewise.
+	* testsuite/ld-i386/pie1.d: Likewise.
+	* testsuite/ld-i386/pr12570a.d: Likewise.
+	* testsuite/ld-i386/pr12570b.d: Likewise.
+	* testsuite/ld-i386/pr19636-1d.d: Likewise.
+	* testsuite/ld-i386/pr19636-1l.d: Likewise.
+	* testsuite/ld-i386/pr19636-2c.d: Likewise.
+	* testsuite/ld-i386/pr19636-2d.d: Likewise.
+	* testsuite/ld-i386/pr19636-2e.d: Likewise.
+	* testsuite/ld-i386/pr20244-1a.d: Likewise.
+	* testsuite/ld-i386/pr20244-1b.d: Likewise.
+	* testsuite/ld-i386/pr20244-2a.d: Likewise.
+	* testsuite/ld-i386/pr20244-2b.d: Likewise.
+	* testsuite/ld-i386/pr20244-2c.d: Likewise.
+	* testsuite/ld-i386/pr20244-4a.d: Likewise.
+	* testsuite/ld-i386/pr20244-4b.d: Likewise.
+	* testsuite/ld-i386/pr21884.d: Likewise.
+	* testsuite/ld-ifunc/binutils.exp: Likewise.
+	* testsuite/ld-ifunc/ifunc-10-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-10-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-11-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-11-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-12-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-12-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-13-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-13-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14a-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14a-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14b-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14b-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14c-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14c-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14d-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14d-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14e-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14e-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14f-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-14f-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-15-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-15-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-16-i386-now.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-16-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-16-x86-64-now.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-16-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-17a-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-17a-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-17b-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-17b-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-18a-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-18a-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-18b-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-18b-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-19a-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-19a-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-19b-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-19b-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-2-i386-now.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-2-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-2-local-i386-now.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-2-local-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-2-local-x86-64-now.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-2-local-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-2-x86-64-now.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-2-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-20-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-20-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-21-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-21-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-22-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-22-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5a-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5a-local-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5a-local-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5a-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5b-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5b-local-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5b-local-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5b-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5r-local-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-5r-local-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-6a-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-6a-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-6b-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-6b-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-7a-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-7a-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-7b-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-7b-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-8-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-8-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-9-i386.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-9-x86-64.d: Likewise.
+	* testsuite/ld-ifunc/pr17154-i386-now.d: Likewise.
+	* testsuite/ld-ifunc/pr17154-i386.d: Likewise.
+	* testsuite/ld-ifunc/pr17154-x86-64-now.d: Likewise.
+	* testsuite/ld-ifunc/pr17154-x86-64.d: Likewise.
+	* testsuite/ld-plugin/lto.exp: Likewise.
+	* testsuite/ld-x86-64/align-branch-1.d: Likewise.
+	* testsuite/ld-x86-64/dwarfreloc.exp: Likewise.
+	* testsuite/ld-x86-64/line.exp: Likewise.
+	* testsuite/ld-x86-64/load1a.d: Likewise.
+	* testsuite/ld-x86-64/load1b.d: Likewise.
+	* testsuite/ld-x86-64/load1c.d: Likewise.
+	* testsuite/ld-x86-64/load1d.d: Likewise.
+	* testsuite/ld-x86-64/pie3.d: Likewise.
+	* testsuite/ld-x86-64/pr18160.d: Likewise.
+	* testsuite/ld-x86-64/pr19013-x32.d: Likewise.
+	* testsuite/ld-x86-64/pr19013.d: Likewise.
+	* testsuite/ld-x86-64/pr19636-2d.d: Likewise.
+	* testsuite/ld-x86-64/pr19636-2l.d: Likewise.
+	* testsuite/ld-x86-64/pr20253-1b.d: Likewise.
+	* testsuite/ld-x86-64/pr20253-1d.d: Likewise.
+	* testsuite/ld-x86-64/pr20253-1f.d: Likewise.
+	* testsuite/ld-x86-64/pr20253-1h.d: Likewise.
+	* testsuite/ld-x86-64/pr20253-1j.d: Likewise.
+	* testsuite/ld-x86-64/pr20253-1l.d: Likewise.
+	* testsuite/ld-x86-64/pr21884.d: Likewise.
+	* testsuite/ld-x86-64/pr22393-3a.rd: Likewise.
+	* testsuite/ld-x86-64/pr22393-3b.rd: Likewise.
+	* testsuite/ld-x86-64/tlsgd10.dd: Likewise.
+	* testsuite/ld-x86-64/tlsgd5.dd: Likewise.
+	* testsuite/ld-x86-64/tlsgd8.dd: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* emulparams/elf32_x86_64_nacl.sh: Removed.
+	* emulparams/elf_i386_nacl.sh: Likewise.
+	* emulparams/elf_x86_64_nacl.sh: Likewise.
+	* testsuite/ld-i386/emit-relocs-nacl.rd: Likewise.
+	* testsuite/ld-i386/load1-nacl.d: Likewise.
+	* testsuite/ld-i386/pie1-nacl.d: Likewise.
+	* testsuite/ld-i386/plt-nacl.pd: Likewise.
+	* testsuite/ld-i386/plt-pic-nacl.pd: Likewise.
+	* testsuite/ld-i386/pr17709-nacl.rd: Likewise.
+	* testsuite/ld-i386/pr19636-1d-nacl.d: Likewise.
+	* testsuite/ld-i386/pr19636-2c-nacl.d: Likewise.
+	* testsuite/ld-i386/pr19636-2d-nacl.d: Likewise.
+	* testsuite/ld-i386/pr19636-2e-nacl.d: Likewise.
+	* testsuite/ld-i386/pr19827-nacl.rd: Likewise.
+	* testsuite/ld-i386/pr21884-nacl.d: Likewise.
+	* testsuite/ld-i386/pr21884-nacl.t: Likewise.
+	* testsuite/ld-i386/tlsbin-nacl.rd: Likewise.
+	* testsuite/ld-i386/tlsbin2-nacl.rd: Likewise.
+	* testsuite/ld-i386/tlsbindesc-nacl.rd: Likewise.
+	* testsuite/ld-i386/tlsdesc-nacl.rd: Likewise.
+	* testsuite/ld-i386/tlsgdesc-nacl.rd: Likewise.
+	* testsuite/ld-i386/tlsnopic-nacl.rd: Likewise.
+	* testsuite/ld-i386/tlspic-nacl.rd: Likewise.
+	* testsuite/ld-i386/tlspic2-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/ilp32-4-nacl.d: Likewise.
+	* testsuite/ld-x86-64/load1a-nacl.d: Likewise.
+	* testsuite/ld-x86-64/load1b-nacl.d: Likewise.
+	* testsuite/ld-x86-64/load1c-nacl.d: Likewise.
+	* testsuite/ld-x86-64/load1d-nacl.d: Likewise.
+	* testsuite/ld-x86-64/pie3-nacl.d: Likewise.
+	* testsuite/ld-x86-64/plt-nacl.pd: Likewise.
+	* testsuite/ld-x86-64/pr17709-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/pr19013-nacl.d: Likewise.
+	* testsuite/ld-x86-64/pr19636-2d-nacl.d: Likewise.
+	* testsuite/ld-x86-64/pr19827-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/pr21884-nacl.d: Likewise.
+	* testsuite/ld-x86-64/pr21884-nacl.t: Likewise.
+	* testsuite/ld-x86-64/split-by-file-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/tlsbin-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/tlsbin2-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/tlsbindesc-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/tlsdesc-nacl.pd: Likewise.
+	* testsuite/ld-x86-64/tlsdesc-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/tlsgdesc-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/tlspic-nacl.rd: Likewise.
+	* testsuite/ld-x86-64/tlspic2-nacl.rd: Likewise.
+	* Makefile.in: Regenerated.
+	* po/BLD-POTFILES.in: Likewise.
+
+2020-06-30  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/group1.d: Don't xfail all solaris targets, just
+	ix86 and x86_64.
+
+2020-06-30  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/reloc-discard.d: Don't xfail nds32.
+
+2020-06-30  Alan Modra  <amodra@gmail.com>
+
+	* scripttempl/elfmicroblaze.sc (.data): Add .data.* entry.
+	* testsuite/ld-elf/var1.d: Don't xfail microblaze.
+
+2020-06-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-tic6x/shlib-1.rd: Move C6000_DSBT_BASE,
+	C6000_DSBT_SIZE and C6000_DSBT_INDEX dynamic tags to the last.
+	* testsuite/ld-tic6x/shlib-1b.rd: Likewise.
+	* testsuite/ld-tic6x/shlib-1r.rd: Likewise.
+	* testsuite/ld-tic6x/shlib-1rb.rd: Likewise.
+	* testsuite/ld-tic6x/shlib-app-1.rd: Likewise.
+	* testsuite/ld-tic6x/shlib-app-1b.rd: Likewise.
+	* testsuite/ld-tic6x/shlib-app-1r.rd: Likewise.
+	* testsuite/ld-tic6x/shlib-app-1rb.rd: Likewise.
+	* testsuite/ld-tic6x/shlib-noindex.rd: Likewise.
+	* testsuite/ld-tic6x/static-app-1.rd: Likewise.
+	* testsuite/ld-tic6x/static-app-1b.rd: Likewise.
+	* testsuite/ld-tic6x/static-app-1r.rd: Likewise.
+	* testsuite/ld-tic6x/static-app-1rb.rd: Likewise.
+
+2020-06-29  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-x86-64/abs-k1om.d: Run only on x86_64-*-linux*.
+	* testsuite/ld-x86-64/protected2-k1om.d: Likewise.
+	* testsuite/ld-x86-64/protected3-k1om.d: Likewise.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac [--enable-libctf]: New, default yes.
+	Set ENABLE_LIBCTF accordingly.
+	* Makefile.am [!ENABLE_LIBCTF]: Empty LIBCTF.
+	* configure: Regenerate.
+	* config.in: Regenerate.
+	* Makefile.in: Regenerate.
+	* aclocal.m4: Regenerate.
+	* ldlang.c (ctf_output): Conditionalize on ENABLE_LIBCTF.
+	(ldlang_open_ctf): Likewise.
+	(lang_merge_ctf): Likewise.
+	(ldlang_ctf_apply_strsym): Likewise.
+	(lang_write_ctf): Likewise.
+	(ldlang_write_ctf_late): Likewise.
+	(ldlang_open_ctf) [!ENABLE_LIBCTF]: Warn about the presence of CTF
+	sections.
+	(lang_merge_ctf) [!ENABLE_LIBCTF]: New stub.
+	(ldlang_ctf_apply_strsym) [!ENABLE_LIBCTF]: Likewise.
+	(lang_write_ctf) [!ENABLE_LIBCTF]: Likewise.
+	(ldlang_write_ctf_late) [!ENABLE_LIBCTF]: Likewise.
+	* ldelfgen.c (ldelf_emit_ctf_early): Conditionalize on
+	ENABLE_LIBCTF.
+	(struct ctf_strsym_iter_cb_arg): Likewise.
+	(ldelf_ctf_strtab_iter_cb): Likewise.
+	(ldelf_ctf_symbols_iter_cb): Likewise.
+	(ldelf_examine_strtab_for_ctf): Likewise.
+	(ldelf_emit_ctf_early) [!ENABLE_LIBCTF]: New stub.
+	(ldelf_examine_strtab_for_ctf) [!ENABLE_LIBCTF]: New stub.
+
+2020-06-26  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/ld-x86-64/x86-64.exp: Run K1OM tests.
+
+2020-06-26  Pat Bernardi  <bernardi@adacore.com>
+
+	* testsuite/ld-m68k/attr-gnu-4-0.s: New file.
+	* testsuite/ld-m68k/attr-gnu-4-1.s: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-2.s: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-00.d: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-01.d: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-02.d: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-10.d: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-11.d: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-12.d: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-20.d: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-21.d: Likewise.
+	* testsuite/ld-m68k/attr-gnu-4-22.d: Likewise.
+	* testsuite/ld-m68k/m68k.exp: Run the new tests.
+
+2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26165
+	* lexsup.c (ld_options): Correct --dependency-file order.
+
+2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26083
+	* testsuite/ld-csky/tls-ie-v1.d: Updated.
+	* testsuite/ld-csky/tls-ie.d: Likewise.
+
+2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26083
+	* testsuite/ld-cris/libdso-15b.d: Updated.
+	* testsuite/ld-cris/libdso-1c.d: Likewise.
+	* testsuite/ld-cris/libdso-1d.d: Likewise.
+	* testsuite/ld-cris/libdso-15c.d: New file.
+
+2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26163
+	* ldexp.c (exp_fold_tree_1): Set non_ir_ref_regular on the source
+	for assignment.
+	* testsuite/ld-plugin/lto.exp: Run ld/26163 test.
+	* testsuite/ld-plugin/pr26163a.c: New file.
+	* testsuite/ld-plugin/pr26163b.c: Likewise.
+
+2020-06-24  Alan Modra  <amodra@gmail.com>
+
+	* lexsup.c (elf_shlib_list_options): Properly format help message.
+	(elf_plt_unwind_list_options): Likewise.
+	* emultempl/cskyelf.em (PARSE_AND_LIST_OPTIONS): Likewise.
+
+2020-06-23  Roland McGrath  <mcgrathr@google.com>
+
+	PR 22843
+	* NEWS: Note --dependency-file.
+	* ld.texi (Options): Document --dependency-file.
+	* ldlex.h (enum option_values): Add OPTION_DEPENDENCY_FILE.
+	* ld.h (ld_config_type): New member dependency_file.
+	* lexsup.c (ld_options, parse_args): Parse --dependency-file.
+	* ldmain.c (struct dependency_file): New type.
+	(dependency_files, dependency_files_tail): New static variables.
+	(track_dependency_files): New function.
+	(write_dependency_file): New function.
+	(main): Call it when --dependency-file was passed.
+	* ldfile.c (ldfile_try_open_bfd): Call track_dependency_files.
+	(ldfile_open_command_file_1): Likewise.
+	* ldelf.c (ldelf_try_needed): Likewise.
+	* pe-dll.c (pe_implied_import_dll): Likewise.
+
+2020-06-23  Alan Modra  <amodra@gmail.com>
+
+	PR 26150
+	* ldlang.c (ldlang_add_file): Assert that we aren't adding the
+	current end of link.next list again too.
+	* ldmain.c (add_archive_element): Don't load archive elements
+	again that have already been loaded.
+
+2020-06-23  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/shared.exp (pr14170): Clear xfail for
+	bfin-*-linux*.
+	(pr17068, symbolic-func.so, pr22374): Likewise.
+
+2020-06-22  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-01.d: Updated.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-02.d: Updated.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-03.d: Updated.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-04.d: Updated.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-05.d: Updated.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-06.d: Updated.
+
+2020-06-21  Alan Modra  <amodra@gmail.com>
+
+	* ldfile.c: Replace uses of ENABLE_PLUGINS with BFD_SUPPORTS_PLUGINS.
+	* ldlang.c: Likewise.
+	* ldlang.h: Likewise.
+	* ldlex.h: Likewise.
+	* ldmain.c: Likewise.
+	* lexsup.c: Likewise.
+	* plugin.c: Wrap body of file in #if BFD_SUPPORTS_PLUGINS.
+	* testplug.c: Likewise.
+	* testplug2.c: Likewise.
+	* testplug3.c: Likewise.
+	* testplug4.c: Likewise.
+	* configure.ac (ENABLE_PLUGINS): Don't define AM_CONTITIONAL.
+	* Makefile.am: Remove ENABLE_PLUGINS conditionals.
+	(PLUGIN_CFLAGS): Don't define.
+	(PLUGIN_C, PLUGIN_H, PLUGIN_OBJECT): Likewise.  Substitute all
+	uses with plugin file name.
+	* configure: Regenerate.
+	* Makefile.in: Regenerate.
+
+2020-06-20  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/ld-lib.exp (default_ld_compile): Don't perror on
+	a compiler error.
+	(default_ld_assemble): Similarly for an assembler error.
+	(default_ld_nm): Similarly for an nm error.
+	(run_ld_link_tests): Report ld_assemble errors as a fail.
+	(check_as_cfi): Remove now unnecessary perror substitution.
+	* testsuite/ld-elf/exclude.exp: Report ld_nm error return as test
+	fails rather then unresolved.
+	* testsuite/ld-gc/gc.exp: Likewise.
+	* testsuite/ld-scripts/alignof.exp: Likewise.
+	* testsuite/ld-scripts/defined.exp: Likewise.
+	* testsuite/ld-scripts/script.exp: Likewise.
+	* testsuite/ld-scripts/sizeof.exp: Likewise.
+	* testsuite/ld-selective/selective.exp: Likewise.
+	* testsuite/ld-scripts/extern.exp: Likewise.  Return on ld_link
+	failure.
+	* testsuite/ld-elfweak/elfweak.exp: Report compiler errors as
+	test unresolved.
+	* testsuite/ld-fastcall/fastcall.exp: Report assember errors as
+	test fails.
+	* testsuite/ld-i386/i386.exp (iamcu_tests): Likewise.
+	* testsuite/ld-ia64/line.exp: Likewise.
+	* testsuite/ld-mep/mep.exp: Likewise.
+	* testsuite/ld-mips-elf/mips-elf-flags.exp: Likewise.
+	* testsuite/ld-nios2/nios2.exp: Likewise.
+	* testsuite/ld-scripts/alignof.exp: Likewise.
+	* testsuite/ld-x86-64/line.exp: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-scripts/log2.exp: Formatting.
+	* testsuite/ld-tic6x/tic6x.exp: Report ld_link errors as a test fail.
+
+2020-06-20  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-alpha/alpha.exp: Exclude *ecoff targets.
+	* testsuite/ld-elf/binutils.exp: Likewise.
+	* testsuite/ld-elf/tls.exp: Likewise.
+	* testsuite/ld-elf/tls_common.exp: Likewise.
+	* testsuite/ld-scripts/phdrs2.exp: Likewise.
+
+2020-06-20  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-sh/sh.exp: Don't run relax tests for non-ELF.
+	Fail when ld_assemble fails.  Use elseif to reduce indentation.
+
+2020-06-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/dynamic-1.rd: Accept st_other notations.
+	* testsuite/ld-elf/rdynamic-1.rd: Likewise.
+	* testsuite/ld-elf/pr9676.rd: Likewise.
+	* testsuite/ld-elf/pr9679.rd: Likewise.
+	* testsuite/ld-elfvers/vers30.dsym: Likewise.
+	* testsuite/ld-elfvers/vers31.dsym: Likewise.
+	* testsuite/ld-plugin/pr22983.1.d: Likewise.
+	* testsuite/ld-plugin/pr22983.2.d: Likewise.
+	* testsuite/ld-plugin/pr22983.3.d: Likewise.
+	* testsuite/ld-plugin/pr22983.4.d: Likewise.
+	* testsuite/ld-ifunc/ifunc.exp: Exclude alpha.
+
+2020-06-19  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/elf.em (gld${EMULATION_NAME}_handle_option): Omit
+	-z relro and -z norelro when target support for GNU_RELRO is lacking.
+	(gld${EMULATION_NAME}_before_parse): Ignore RELRO default too.
+	* emultempl/aarch64elf.em (gld${EMULATION_NAME}_before_parse): Ignore
+	RELRO default when target support for GNU_RELRO is lacking.
+	* emultempl/armelf.em (gld${EMULATION_NAME}_before_parse): Likewise.
+	* emultempl/linux.em (gld${EMULATION_NAME}_before_parse): Likewise.
+	* emultempl/scoreelf.em (gld${EMULATION_NAME}_before_parse): Likewise.
+	* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.
+	* testsuite/ld-elf/pr16322.d: xfail when no relro support.
+	* testsuite/ld-elf/pr22393-1a.d: Likewise.
+	* testsuite/ld-elf/pr22393-1b.d: Likewise.
+	* testsuite/ld-elf/shared.exp (pr20995-2.so, pr20995-2): Likewise.
+	* testsuite/lib/ld-lib.exp (run_ld_link_tests): Use check_relro_support
+	to decide whether to pass extra ld option "-z norelro".
+
+2020-06-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/linux-x86.exp (check_pr25749a): Append "-w"
+	to cflags.
+
+2020-06-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/linux-x86.exp: Require GCC 5 for Build
+	pr25749-1b (-pie -fPIE).
+
+2020-06-16  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/pr23428.c: Define _DEFAULT_SOURCE.
+	* testsuite/ld-elf/indirect1b.c: Replace asm with __asm__.
+	* testsuite/ld-elf/indirect2.c: Likewise.
+	* testsuite/ld-elf/indirect3b.c: Likewise.
+	* testsuite/ld-elf/indirect4b.c: Likewise.
+	* testsuite/ld-elf/pr14323-2.c: Likewise.
+	* testsuite/ld-elf/pr18720b.c: Likewise.
+	* testsuite/ld-elf/pr19553c.c: Likewise.
+	* testsuite/ld-elf/pr23428.c: Likewise.
+	* testsuite/ld-elfvers/vers27b.c: Likewise.
+	* testsuite/ld-elfvsb/common.c: Likewise.
+	* testsuite/ld-elfvsb/main.c: Likewise.
+	* testsuite/ld-elfvsb/sh1.c: Likewise.
+	* testsuite/ld-elfvsb/test.c: Likewise.
+	* testsuite/ld-pe/aligncomm-1.c: Likewise.
+	* testsuite/ld-pe/aligncomm-2.c: Likewise.
+	* testsuite/ld-pe/aligncomm-3.c: Likewise.
+	* testsuite/ld-pe/aligncomm-4.c: Likewise.
+	* testsuite/ld-plugin/pr23958.c: Likewise.
+	* testsuite/ld-size/size-1b.c: Likewise.
+	* testsuite/ld-size/size-2b.c: Likewise.
+	* testsuite/ld-size/size-3a.c: Likewise.
+	* testsuite/ld-size/size-3b.c: Likewise.
+	* testsuite/ld-size/size-3c.c: Likewise.
+	* testsuite/ld-size/size-4b.c: Likewise.
+	* testsuite/ld-size/size-5b.c: Likewise.
+	* testsuite/ld-size/size-6a.c: Likewise.
+	* testsuite/ld-size/size-7a.c: Likewise.
+	* testsuite/ld-size/size-8a.c: Likewise.
+	* testsuite/ld-size/size-9b.c: Likewise.
+	* testsuite/ld-size/size-10b.c: Likewise.
+
+2020-06-16  Alan Modra  <amodra@gmail.com>
+
+	* emulparams/tic30aout.sh: Delete file.
+	* scripttempl/tic30aout.sc: Delete file.
+	* Makefile.am: Remove etic30aout.c from ALL_EMULATION_SOURCES and
+	delete dependency.
+	* configure.tgt: Delete tic30-*-*aout* entry.
+	* testsuite/ld-scripts/sane1.d: Delete tic30-*-aout mention.
+	* testsuite/ld-scripts/segment-start.d: Likewise.
+	* Makefile.in: Regenerate.
+	* po/BLD-POTFILES.in: Regenerate.
+
+2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* emultempl/xtensaelf.em (XSHAL_ABI): Remove macro definition.
+	(XTHAL_ABI_UNDEFINED, XTHAL_ABI_WINDOWED, XTHAL_ABI_CALL0): New
+	macros.
+	(elf32xtensa_abi): New declaration.
+	(xt_config_info_unpack_and_check): Set elf32xtensa_abi if it is
+	undefined.  Use xtensa_abi_choice instead of XSHAL_ABI to test
+	ABI tag consistency.
+	(xtensa_add_config_info): Use xtensa_abi_choice instead of
+	XSHAL_ABI to format ABI tag.
+	(PARSE_AND_LIST_PROLOGUE): Define OPTION_ABI_WINDOWED,
+	OPTION_ABI_CALL0 and declare elf32xtensa_abi.
+	(PARSE_AND_LIST_LONGOPTS): Add entries for --abi-windowed and
+	--abi-call0.
+	(PARSE_AND_LIST_OPTIONS): Add help text for --abi-windowed and
+	--abi-call0.
+	(PARSE_AND_LIST_ARGS_CASES): Add handlers for --abi-windowed and
+	--abi-call0.
+	* ld.texi: Add description for options --abi-windowed and
+	--abi-call0.
+
+2020-06-15  Roland McGrath  <mcgrathr@google.com>
+
+	* NEWS: Mention -z start-stop-visibility=... option for ELF.
+	* ld.texi (Options): Document -z start-stop-visibility=... option.
+	* ldmain.c (main): Initialize link_info.start_stop_visibility.
+	* emultempl/elf.em (gld${EMULATION_NAME}_handle_option):
+	Parse -z start-stop-visibility=... option.
+
+2020-06-15  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/include.exp: Don't load ld-lib.exp.
+	* testsuite/ld-scripts/phdrs3.exp: Likewise.
+	* testsuite/ld-scripts/rgn-at.exp: Likewise.
+	* testsuite/ld-scripts/rgn-over.exp: Likewise.
+	* testsuite/ld-scripts/sort.exp: Likewise.
+	* testsuite/ld-discard/discard.exp: Likewise.  Use is_elf_format.
+
+2020-06-15  Alan Modra  <amodra@gmail.com>
+
+	PR 26103
+	* testsuite/ld-linkonce/ref1.s,
+	* testsuite/ld-linkonce/ref2.s,
+	* testsuite/ld-linkonce/sym1.s,
+	* testsuite/ld-linkonce/sym2.s,
+	* testsuite/ld-linkonce/sym3.s: New test files.
+	* testsuite/ld-linkonce/linkonce.exp: Run tests for PE too.
+	Add pr26103 test.  Remove unnecessary load_lib.
+
+2020-06-15  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-linkonce/zeroeh_x.s: Rename from x.s.
+	* testsuite/ld-linkonce/zeroeh_y.s: Rename from y.s.
+	* testsuite/ld-linkonce/zeroehl32.d: Adjust for renaming.  Support
+	big-endian output.  Run for powerpc.
+
+2020-06-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-plugin/lto.exp (lto_link_tests): Move lto-6,
+	pr12760, pr23818 and pr23958 tests to..
+	(lto_link_elf_tests): ..here.
+
+2020-06-11  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/ld-elf/pr26094-1b.c (main): Change return type to
+	int.
+
+2020-06-10  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/linux-x86.exp: Build tests when non-native.
+	(check_pr25749b): Add optional args.  Set expected pass file
+	from args.  Run -1b and -2a tests with passall.out.
+	* testsuite/ld-elf/passall.out: New file.
+	* testsuite/ld-elf/pr25749-1.c: Adjust to pass with older glibc.
+	* testsuite/ld-elf/pr25749-2.c: Likewise.
+	* testsuite/lib/ld-lib.exp (run_ld_link_exec_tests): Use
+	regexp_diff to compare expected output from running binary.
+
+2020-06-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26094
+	* testsuite/ld-elf/pr26094-1.ver: New fike.
+	* testsuite/ld-elf/pr26094-1a.c: Likewise.
+	* testsuite/ld-elf/pr26094-1a.rd: Likewise.
+	* testsuite/ld-elf/pr26094-1b.c: Likewise.
+	* testsuite/ld-elf/pr26094-1b.rd: Likewise.
+	* testsuite/ld-elf/pr26094-1c.c: Likewise.
+	* testsuite/ld-elf/shared.exp: Run ld/26094 tests.
+
+2020-06-09  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/18801
+	* testsuite/ld-i386/i386.exp: Run ifunc-textrel-1a,
+	ifunc-textrel-1b, ifunc-textrel-2a and ifunc-textrel-2b.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-i386/ifunc-textrel-1a.d: Likewise.
+	* testsuite/ld-i386/ifunc-textrel-1b.d: Likewise.
+	* testsuite/ld-i386/ifunc-textrel-2a.d: Likewise.
+	* testsuite/ld-i386/ifunc-textrel-2b.d: Likewise.
+	* testsuite/ld-x86-64/ifunc-textrel-1.s: Likewise.
+	* testsuite/ld-x86-64/ifunc-textrel-1a.d: Likewise.
+	* testsuite/ld-x86-64/ifunc-textrel-1b.d: Likewise.
+	* testsuite/ld-x86-64/ifunc-textrel-2.s: Likewise.
+	* testsuite/ld-x86-64/ifunc-textrel-2a.d: Likewise.
+	* testsuite/ld-x86-64/ifunc-textrel-2b.d: Likewise.
+	* testsuite/ld-i386/pr18801a.d: Expect warning for IFUNC
+	resolvers.
+	* testsuite/ld-i386/pr18801b.d: Likewise.
+	* estsuite/ld-x86-64/pr18801a.d: Likewise.
+	* estsuite/ld-x86-64/pr18801b.d: Likewise.
+
+2020-06-09  Alan Modra  <amodra@gmail.com>
+
+	PR 26065
+	* testsuite/ld-elf/shared.exp: Compile dl4main.c -fPIC.
+	(dl4e, dl4f): Expect dl4a.out.
+	* testsuite/ld-elf/dl4e.out: Delete.
+
+2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/shared.exp: Pass $LFLAGS to PR ld/21703
+	shared test.
+
+2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/shared.exp: Xfail pr20995/pr20995-2 for
+	tic6x-*-*.
+
+2020-06-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/pr11304.d: Skip tic6x-*-elf.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/comm-data.exp: Don't xfail arm or bfin-linux.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* lexsup.c (ld_options): Accept -plugin and -plugin-opt when
+	!ENABLE_PLUGINS.
+	* testsuite/lib/ld-lib.exp (check_plugin_api_available): Adjust.
+
+2020-06-05  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec.d: Rename to
+	attr-merge-priv-spec-01.d.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-c.s: Set spec to 1.11.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-d.s: Empty priv spec set.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-02.d: New testcase.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-04.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-05.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-06.d: Likewise.
+	* testsuite/ld-riscv-elf/ld-riscv-elf.exp: Updated.
+
+2020-06-05  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/attr-merge-arch-01.d: The CSR isn't used,
+	so ignore the -mpriv-spec setting.
+	* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-stack-align.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-01.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-04.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-05.d: Likewise.
+	* testsuite/ld-riscv-elf/call-relax.d: Add -mno-arch-attr.
+
+2020-06-04  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26080
+	* testsuite/ld-elf/comm-data.exp: Remove copy_reloc.
+	* testsuite/ld-elf/comm-data2r.rd: Removed.
+	* testsuite/ld-elf/comm-data2r.sd: Likewise.
+	* testsuite/ld-elf/comm-data2r.xd: Likewise.
+
+2020-06-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/config/default.exp: Remove global directive outside
+	proc body.
+	* testsuite/ld-bootstrap/bootstrap.exp: Likewise.
+	* testsuite/ld-elf/compress.exp: Likewise.
+	* testsuite/ld-elf/elf.exp: Likewise.
+	* testsuite/ld-elf/exclude.exp: Likewise.
+	* testsuite/ld-elf/frame.exp: Likewise.
+	* testsuite/ld-elf/indirect.exp: Likewise.
+	* testsuite/ld-elf/linux-x86.exp: Likewise.
+	* testsuite/ld-elf/shared.exp: Likewise.
+	* testsuite/ld-elf/tls.exp: Likewise.
+	* testsuite/ld-elf/tls_common.exp: Likewise.
+	* testsuite/ld-elfcomm/elfcomm.exp: Likewise.
+	* testsuite/ld-elfweak/elfweak.exp: Likewise.
+	* testsuite/ld-frv/fdpic.exp: Likewise.
+	* testsuite/ld-frv/tls.exp: Likewise.
+	* testsuite/ld-gc/gc.exp: Likewise.
+	* testsuite/ld-i386/i386.exp: Likewise.
+	* testsuite/ld-i386/no-plt.exp: Likewise.
+	* testsuite/ld-ifunc/ifunc.exp: Likewise.
+	* testsuite/ld-mips-elf/mips-elf-flags.exp: Likewise.
+	* testsuite/ld-nios2/nios2.exp: Likewise.
+	* testsuite/ld-plugin/lto.exp: Likewise.
+	* testsuite/ld-plugin/plugin.exp: Likewise.
+	* testsuite/ld-powerpc/export-class.exp: Likewise.
+	* testsuite/ld-scripts/align.exp: Likewise.
+	* testsuite/ld-scripts/crossref.exp: Likewise.
+	* testsuite/ld-scripts/defined.exp: Likewise.
+	* testsuite/ld-scripts/overlay-size.exp: Likewise.
+	* testsuite/ld-scripts/provide.exp: Likewise.
+	* testsuite/ld-scripts/weak.exp: Likewise.
+	* testsuite/ld-selective/selective.exp: Likewise.
+	* testsuite/ld-sh/rd-sh.exp: Likewise.
+	* testsuite/ld-size/size.exp: Likewise.
+	* testsuite/ld-srec/srec.exp: Likewise.
+	* testsuite/ld-x86-64/mpx.exp: Likewise.
+	* testsuite/ld-x86-64/no-plt.exp: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+
+2020-06-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-dynamic/export-dynamic-symbol-2.d: Match output for
+	mips-sgi-irix6.
+	* testsuite/ld-dynamic/export-dynamic-symbol-glob.d: Likewise.
+	* testsuite/ld-dynamic/export-dynamic-symbol-list-2.d: Likewise.
+	* testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d: Likewise.
+	* testsuite/ld-dynamic/export-dynamic-symbol.exp: Exclude targets
+	with poor PIE support.
+
+2020-06-04  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-plugin/lto.exp (pr12758.exe): Add NOPIE_LDFLAGS.
+	* testsuite/ld-unique/unique.exp: Add NOPIE_LDFLAGS to unique
+	executable and dynamic executable tests.
+
+2020-06-03  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/config/default.exp (NOSANTIZE_CFLAGS): New.
+	* testsuite/ld-elf/linux-x86.exp: Add $NOSANTIZE_CFLAGS to
+	tests with run_ld_link_exec_tests.
+	* testsuite/ld-elf/shared.exp: Add $NOSANTIZE_CFLAGS to tests
+	with run_ld_link_tests.
+	* testsuite/ld-elf/tls.exp: Likewise.
+	* testsuite/ld-elfweak/elfweak.exp: Add $NOSANTIZE_CFLAGS to
+	tests with ld_link.
+	* testsuite/ld-gc/gc.exp: Add $NOSANTIZE_CFLAGS to cflags.
+	* testsuite/ld-plugin/lto.exp: Add $NOSANTIZE_CFLAGS to tests
+	with run_ld_link_tests.a
+	* testsuite/ld-plugin/plugin.exp: Append $NOSANTIZE_CFLAGS to
+	CFLAGS.
+	* testsuite/ld-selective/selective.exp: Add $NOSANTIZE_CFLAGS
+	to cflags and cxxflags.
+	* testsuite/ld-srec/srec.exp: Append $NOSANTIZE_CFLAGS to CC
+	and CXX.
+	* testsuite/ld-x86-64/plt-main-ibt-x32.dd: Updated for
+	-fsanitize=undefined.
+	* testsuite/ld-x86-64/plt-main-ibt.dd: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Add $NOSANTIZE_CFLAGS to
+	tests with run_cc_link_tests and run_ld_link_tests.
+
+2020-06-03  Fangrui Song  <maskray@google.com>
+	    H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25910
+	* NEWS: Mention --export-dynamic-symbol[-list].
+	* ld.texi: Document --export-dynamic-symbol[-list].
+	* ldgram.y: Pass current_dynamic_list_p to
+	lang_append_dynamic_list.
+	* ldlang.c (current_dynamic_list_p): New.
+	(ang_append_dynamic_list): Updated to take a pointer to
+	struct bfd_elf_dynamic_list * argument instead of using
+	link_info.dynamic_list.
+	(lang_append_dynamic_list_cpp_typeinfo): Pass
+	&link_info.dynamic_list to ang_append_dynamic_list.
+	(lang_append_dynamic_list_cpp_new): Likewise.
+	* ldlang.h (current_dynamic_list_p): New.
+	(lang_append_dynamic_list): Add a pointer to
+	struct bfd_elf_dynamic_list * argument.
+	* ldlex.h (option_values): Add OPTION_EXPORT_DYNAMIC_SYMBOL and
+	OPTION_EXPORT_DYNAMIC_SYMBOL_LIST.
+	* lexsup.c (ld_options): Add entries for
+	OPTION_EXPORT_DYNAMIC_SYMBOL and
+	OPTION_EXPORT_DYNAMIC_SYMBOL_LIST.
+	(parse_args): Handle --export-dynamic-symbol and
+	--export-dynamic-symbol-list.
+	* testsuite/ld-dynamic/export-dynamic-symbol-1.d: New.
+	* testsuite/ld-dynamic/export-dynamic-symbol-2.d: New.
+	* testsuite/ld-dynamic/export-dynamic-symbol-glob.d: New.
+	* testsuite/ld-dynamic/export-dynamic-symbol-list-1.d: New.
+	* testsuite/ld-dynamic/export-dynamic-symbol-list-2.d: New.
+	* testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d: New.
+	* testsuite/ld-dynamic/export-dynamic-symbol.exp: New.
+	* testsuite/ld-dynamic/export-dynamic-symbol.s: New.
+	* testsuite/ld-dynamic/foo-bar.list: New.
+	* testsuite/ld-dynamic/foo.list: New.
+	* testsuite/ld-dynamic/foo.s: New.
+	* testsuite/ld-dynamic/fstar.list: New.
+	* testsuite/ld-elf/dlempty.list: New.
+	* testsuite/ld-elf/shared.exp: Add tests for
+	--export-dynamic-symbol and --export-dynamic-symbol-list.
+
+2020-06-03  Jan Beulich  <jbeulich@suse.com>
+
+	* testsuite/ld-elf/linux-x86.exp: Make copied source files
+	writeable.
+
+2020-05-28  Nick Clifton  <nickc@redhat.com>
+
+	PR 26047
+	* ldelf.c (ldelf_after_open): Fail if attempting to link one
+	executable into another.  Ensure that the test is made for all
+	forms of linking.
+
+2020-05-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* NEWS: Mention --enable-textrel-check=yes is default for
+	Linux/x86 targets.
+	* configure.tgt (ac_default_ld_textrel_check): Set to yes if
+	unset for Linux/x86 targets.
+
+2020-05-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/20824
+	* NEWS: Mention --enable-textrel-check=[no|yes|warning|error].
+	* configure.ac: Add --enable-textrel-check=[no|yes|warning|error].
+	(DEFAULT_LD_TEXTREL_CHECK): New AC_DEFINE_UNQUOTED.
+	(DEFAULT_LD_TEXTREL_CHECK_WARNING): Likewise.
+	* ldmain.c (main): Initialize link_info.textrel_check to
+	DEFAULT_LD_TEXTREL_CHECK.
+	* lexsup.c (ld_options): Check DEFAULT_LD_TEXTREL_CHECK_WARNING.
+	* config.in: Regenerated.
+	* configure: Likewise.
+
+2020-05-28  Nick Clifton  <nickc@redhat.com>
+
+	* lexsup.c (parse_args): Generate an error if a name is not
+	provided to the -Map option.
+	(ld_options): Mention that the -Map option supports a directory
+	name as an argument.
+	* NEWS: Remove mention of support for an empty string as an
+	argument to -Map.
+	* ld.texi: Likewise.
+
+2020-05-27  Hans-Peter Nilsson  <hp@axis.com>
+
+	PR ld/22909
+	* testsuite/ld-elf/pr19539.d: Don't xfail for cris*-*-*.
+
+2020-05-27  Rasmus Villemoes <rv@rasmusvillemoes.dk>
+	    Nick Clifton  <nickc@redhat.com>
+
+	* lexsup.c (parse_args): If the map filename is defined but empty
+	create a name based upon the output file name.  If the name is
+	defined but refers to a directory create a file inside the
+	directory based on the output file name.
+	* ld.texi: Document the new feature.
+	* testsuite/ld-script/map-address.exp: Add test of new feature.
+	* NEWS: Mention the new feature.
+
+2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/22909
+	* NEWS: Mention --warn-textrel.
+	* ld.texi: Update -z text/notext/textoff.  Add --warn-textrel.
+	Remove --warn-shared-textrel.
+	* ldlex.h (option_values): Rename OPTION_WARN_SHARED_TEXTREL to
+	OPTION_WARN_TEXTREL.
+	* lexsup.c (ld_options): Add --warn-textrel.  Obsolete
+	--warn-shared-textrel.
+	(parse_args): Updated.
+	(elf_shlib_list_options): Check link_info.textrel_check.
+	* emultempl/elf.em: Updated.
+	* testsuite/ld-elf/pr19539.d: Replace -z notext with
+	--warn-textrel.  Expect a warning.
+	* testsuite/ld-i386/warn1.d: Update expected warning.
+
+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-ifunc/ifunc-23a-x86.d: Skip *-*-lynxos *-*-nto*.
+	* testsuite/ld-ifunc/ifunc-24a-x86.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-25a-x86.d: Likewise.
+
+2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-x86-64/x86-64.exp: Pass -z notext to linker.
+
+2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/eh6.d: Pass -z notext to linker.
+	* testsuite/ld-elf/ehdr_start-shared.d: Likewise.
+	* testsuite/ld-elf/pr19539.d: Likewise.
+	* testsuite/ld-elfvers/vers.exp: Likewise.
+	* testsuite/ld-elfvsb/elfvsb.exp: Likewise.
+	* testsuite/ld-i386/i386.exp: Likewise.
+	* testsuite/ld-i386/nogot1.d: Likewise.
+	* testsuite/ld-i386/pr19539.d: Likewise.
+	* testsuite/ld-i386/pr19636-2a.d: Likewise.
+	* testsuite/ld-i386/pr19636-2b.d: Likewise.
+	* testsuite/ld-i386/pr19636-2c.d: Likewise.
+	* testsuite/ld-i386/pr19636-2d.d: Likewise.
+	* testsuite/ld-i386/pr19636-2e.d: Likewise.
+	* testsuite/ld-i386/pr19636-3d.d: Likewise.
+	* testsuite/ld-i386/pr19636-3e.d: Likewise.
+	* testsuite/ld-i386/pr19939b.d: Likewise.
+	* testsuite/ld-i386/undefweaka.d: Likewise.
+	* testsuite/ld-i386/undefweakb.d: Likewise.
+	* testsuite/ld-shared/shared.exp: Likewise.
+	* testsuite/ld-size/size.exp: Likewise.
+	* testsuite/ld-unique/unique.exp: Likewise.
+	* testsuite/ld-x86-64/pie1.d: Likewise.
+	* testsuite/ld-x86-64/pr19539a.d: Likewise.
+	* testsuite/ld-x86-64/pr19539b.d: Likewise.
+	* testsuite/ld-x86-64/pr19636-1d.d: Likewise.
+	* testsuite/ld-x86-64/pr19636-1e.d: Likewise.
+	* testsuite/ld-x86-64/pr19807-1a.d: Likewise.
+	* testsuite/ld-x86-64/pr19807-1b.d: Likewise.
+	* testsuite/ld-x86-64/pr19807-2b.d: Likewise.
+	* testsuite/ld-x86-64/pr19807-2c.d: Likewise.
+	* testsuite/ld-x86-64/pr19807-2d.d: Likewise.
+	* testsuite/ld-x86-64/pr19807-2e.d: Likewise.
+	* testsuite/ld-x86-64/pr19939b.d: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+
+2020-05-24  Fangrui Song <maskray@google.com>
+
+	PR ld/26018
+	* lexsup.c (parse_args): Simplify.
+	* testsuite/ld-elf/dl4e.out: New.
+	* testsuite/ld-elf/shared.exp: Updated for PR ld/26018 tests.
+
+2020-05-23  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26018
+	* testsuite/ld-i386/i386.exp: Add a -Bsymbolic-functions test.
+	* testsuite/ld-x86-64/x86-64.exp: Likewise.
+	* testsuite/ld-i386/pr26018.d: New file.
+	* testsuite/ld-x86-64/pr26018.d: Likewise.
+	* testsuite/ld-x86-64/pr26018.s: Likewise.
+
+2020-05-21  Alan Modra  <amodra@gmail.com>
+
+	* deffilep.y: Replace "if (x) free (x)" with "free (x)" thoughout.
+	* emultempl/elf.em: Likewise.
+	* emultempl/msp430.em: Likewise.
+	* emultempl/pe.em: Likewise.
+	* emultempl/pep.em: Likewise.
+	* emultempl/ppc64elf.em: Likewise.
+	* emultempl/xtensaelf.em: Likewise.
+	* ldelf.c: Likewise.
+	* ldfile.c: Likewise.
+	* ldmain.c: Likewise.
+	* ldmisc.c: Likewise.
+	* lexsup.c: Likewise.
+	* pe-dll.c: Likewise.
+
+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>
+
+	* testsuite/ld-riscv-elf/attr-merge-arch-01.d: Updated
+        priv attributes according to the -mpriv-spec option.
+	* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-priv-spec.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-stack-align.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-01.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-02.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-03.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-04.d: Likewise.
+	* testsuite/ld-riscv-elf/attr-merge-strict-align-05.d: Likewise.
+
+2020-05-20  Alan Modra  <amodra@gmail.com>
+
+	PR 25993
+	* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Don't copy
+	other_bfd_filename for bfd_set_filename, and test result of
+	bfd_set_filename call.  Don't create a new is->filename, simply
+	copy from bfd filename.  Free new_name after bfd_set_filename.
+	* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.
+
+2020-05-19  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>
+
+	* testsuite/ld-aarch64/aarch64-elf.exp: New test
+	emit-relocs-560.
+	* testsuite/ld-aarch64/emit-relocs-560.d: New file.
+	* testsuite/ld-aarch64/emit-relocs-560.s: New file.
+
+2020-05-19  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/beos.em (sort_by_file_name): Use bfd_get_filename
+	rather than accessing bfd->filename directly.
+	* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Likewise.
+	* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.
+	* emultempl/spuelf.em (embedded_spu_file): Likewise.
+	* ldlang.c (input_statement_is_archive_path, wild_sort),
+	(check_excluded_libs): Likewise.
+	* ldmain.c (add_archive_element): Likewise.
+	* ldmisc.c (vfinfo): Likewise.
+	* pe-dll.c (auto_export, generate_edata, pe_create_import_fixup),
+	(pe_dll_generate_implib, pe_process_import_defs): Likewise.
+	* plugin.c (plugin_object_p): Likewise.
+
+2020-05-18  Douglas B Rupp  <rupp@adacore.com>
+
+	* ldemul.h (ldemul_print_symbol): New.
+	(ld_emulation_xfer_type) <print_symbol): Likewise.
+	* ldemul.c (ldemul_print_symbol): New.
+	* ldlang.c (SECTION_NAME_MAP_LANGTH): Move to ...
+	(print_one_symbol): Make global and move declaration to ...
+	(print_all_symbols): Rename print_one_symbol to ldemul_print_symbol
+	(print_input_section): Likewise
+	* ldlang.h: ... here.
+	* emultempl/aix.em (gld${EMULATION_NAME}_print_symbol): New.
+	(ld_emulation_xfer_struct): Use it.
+	* emultempl/armcoff.em (ld_emulation_xfer_struct): Add print_symbol
+	and default to NULL.
+	* emultempl/beos.em (ld_emulation_xfer_struct): Likewise
+	* emultempl/elf.em (ld_emulation_xfer_struct): Likewise
+	* emultempl/generic.em (ld_emulation_xfer_struct): Likewise
+	* emultempl/linux.em (ld_emulation_xfer_struct): Likewise
+	* emultempl/msp430.em (ld_emulation_xfer_struct): Likewise
+	* emultempl/pe.em (ld_emulation_xfer_struct): Likewise
+	* emultempl/pep.em (ld_emulation_xfer_struct): Likewise
+	* emultempl/ticoff.em (ld_emulation_xfer_struct): Likewise
+	* emultempl/vanilla.em (ld_emulation_xfer_struct): Likewise
+
+2020-05-18  Sergei Trofimovich  <siarheit@google.com>
+
+	* ldmain.c (add_archive_element): Fix s/claimi/claim/ typo
+	in info message.
+
+2020-05-18  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Update Swedish translation.
+
+2020-05-18  Nick Clifton  <nickc@redhat.com>
+
+	PR 25993
+	* emultempl/pe.em (_after_open): Check for duplicate filename
+	pointers before renaming the dll.
+	* emultempl/pep.em (_after_open): Likewise.
+
+2020-05-13  Nick Clifton  <nickc@redhat.com>
+
+	PR 25979
+	* lexsup.c (elf_shlib_list_options): Include the default value for
+	the hash style in the output text.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/pcrelopt.s: Add lxvp and stxvp.
+	* testsuite/ld-powerpc/pcrelopt.d: Update.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/callstub-1.d: Use -mpower10/-Mpower10 in
+	place of -mfuture/-Mfuture.
+	* testsuite/ld-powerpc/notoc2.d: Likewise.
+	* testsuite/ld-powerpc/powerpc.exp: Likewise.
+	* testsuite/ld-powerpc/tlsgd.d: Likewise.
+	* testsuite/ld-powerpc/tlsie.d: Likewise.
+	* testsuite/ld-powerpc/tlsld.d: Likewise.
+
+2020-05-11  Nick Clifton  <nickc@redhat.com>
+
+	* po/es.po: Updated Spanish translation.
+
+2020-05-01  Wilco Dijkstra  <wdijkstr@arm.com>
+
+	PR ld/25665
+	* testsuite/ld-aarch64/farcall-group.s: New large group test.
+	* testsuite/ld-aarch64/farcall-group.d: New test driver.
+	* testsuite/ld-aarch64/aarch64-elf.exp: Run the new test.
+
+2020-05-01  Alan Modra  <amodra@gmail.com>
+
+	PR 25882
+	* ldlang.c (lang_check): Call bfd_merge_private_bfd_data for
+	shared libraries.
+
+2020-05-01  Alan Modra  <amodra@gmail.com>
+
+	* po/BLD-POTFILES.in: Regenerate.
+
+2020-04-30  Alex Coplan  <alex.coplan@arm.com>
+
+	* testsuite/ld-aarch64/erratum843419_tls_ie.d: Use udf in disassembly.
+	* testsuite/ld-aarch64/farcall-b-section.d: Likewise.
+	* testsuite/ld-aarch64/farcall-back.d: Likewise.
+	* testsuite/ld-aarch64/farcall-bl-section.d: Likewise.
+
+2020-04-30  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/ld-elf/compress1c.d: XFAIL if thet target linker does
+	not support the -shared command line option.
+	* /ld-elf/compressed1c.d: Likewise.
+	* /ld-elf/compressed1e.d: Likewise.
+	* /ld-elf/dynamic1.d: Likewise.
+	* /ld-elf/dynsym1.d: Likewise.
+	* /ld-elf/ehdr_start-shared.d: Likewise.
+	* /ld-elf/exclude3b.d: Likewise.
+	* /ld-elf/global1.d: Likewise.
+	* /ld-elf/hash.d: Likewise.
+	* /ld-elf/local1.d: Likewise.
+	* /ld-elf/mbind1b.d: Likewise.
+	* /ld-elf/now-1.d: Likewise.
+	* /ld-elf/now-2.d: Likewise.
+	* /ld-elf/now-3.d: Likewise.
+	* /ld-elf/now-4.d: Likewise.
+	* /ld-elf/pr12975.d: Likewise.
+	* /ld-elf/pr13177.d: Likewise.
+	* /ld-elf/pr13195.d: Likewise.
+	* /ld-elf/pr16322.d: Likewise.
+	* /ld-elf/pr16498a.d: Likewise.
+	* /ld-elf/pr16498b.d: Likewise.
+	* /ld-elf/pr17615.d: Likewise.
+	* /ld-elf/pr19162.d: Likewise.
+	* /ld-elf/pr19698.d: Likewise.
+	* /ld-elf/pr20513c.d: Likewise.
+	* /ld-elf/pr20513d.d: Likewise.
+	* /ld-elf/pr21389a.d: Likewise.
+	* /ld-elf/pr21389b.d: Likewise.
+	* /ld-elf/pr21389c.d: Likewise.
+	* /ld-elf/pr21562a.d: Likewise.
+	* /ld-elf/pr21562b.d: Likewise.
+	* /ld-elf/pr21562c.d: Likewise.
+	* /ld-elf/pr21562d.d: Likewise.
+	* /ld-elf/pr21562e.d: Likewise.
+	* /ld-elf/pr21562f.d: Likewise.
+	* /ld-elf/pr21562g.d: Likewise.
+	* /ld-elf/pr21562h.d: Likewise.
+	* /ld-elf/pr21562i.d: Likewise.
+	* /ld-elf/pr21562j.d: Likewise.
+	* /ld-elf/pr21562k.d: Likewise.
+	* /ld-elf/pr21562l.d: Likewise.
+	* /ld-elf/pr21562m.d: Likewise.
+	* /ld-elf/pr21562n.d: Likewise.
+	* /ld-elf/pr21903a.d: Likewise.
+	* /ld-elf/pr21903b.d: Likewise.
+	* /ld-elf/pr22269b.d: Likewise.
+	* /ld-elf/pr22393-1a.d: Likewise.
+	* /ld-elf/pr22393-1b.d: Likewise.
+	* /ld-elf/pr23658-1c.d: Likewise.
+	* /ld-elf/pr25708.d: Likewise.
+	* /ld-elf/rpath-1.d: Likewise.
+	* /ld-elf/rpath-2.d: Likewise.
+	* /ld-elf/runpath-1.d: Likewise.
+	* /ld-elf/runpath-2.d: Likewise.
+	* /ld-elf/sizeofb.d: Likewise.
+	* /ld-elf/startofb.d: Likewise.
+	* /ld-elf/strtab.d: Likewise.
+	* /ld-elf/textaddr2.d: Likewise.
+	* /ld-elf/textaddr5.d: Likewise.
+	* /ld-elf/textaddr6.d: Likewise.
+	* /ld-elf/unknown2.d: Likewise.
+	* /ld-undefined/entry-3.d: Likewise.
+	* /ld-undefined/entry-4.d: Likewise.
+	* /ld-elf/mbind1c.d: XFAIL if the target linker does not support
+	the -pie option.
+	* /ld-elf/pie.d: Likewise.
+	* /ld-elf/pr19539.d: Likewise.
+	* /ld-elf/pr21903d.d: Likewise.
+	* /ld-elf/pr22269a.d: Likewise.
+	* /ld-elf/pr22393-1c.d: Likewise.
+	* /ld-elf/pr22393-1d.d: Likewise.
+	* /ld-elf/pr22423.d: Likewise.
+	* /ld-elf/loadaddr1.d: Expect to fail on the rx-linux target.
+	* /ld-elf/loadaddr2.d: Likewise.
+	* /ld-elf/pr22393-1e.d: Likewise.
+	* /ld-elf/pr22393-1f.d: Likewise.
+	* /ld-elf/textaddr1.d: Likewise.
+	* /ld-elf/textaddr4.d: Likewise.
+
+2020-04-30  Yoshinori Sato <ysato@users.sourceforge.jp>
+
+	* emulparams/elf32rx_linux.sh: New rx-linux emulation.
+	* emultempl/rxlinux.em: New.
+	* configure.tgt: Add rx-linux.
+	* Makefile.am: Add eelf32rx_linux.c
+	* Makefile.in: Regenerate.
+
+2020-04-29  Max Filippov  <jcmvbkbc@gmail.com>
+
+	* testsuite/ld-xtensa/relax-diff1.d: New test definition.
+	* testsuite/ld-xtensa/relax-diff1.s: New test source.
+	* testsuite/ld-xtensa/relax-ndiff.d: New test definition.
+	* testsuite/ld-xtensa/relax-ndiff.s: New test source.
+	* testsuite/ld-xtensa/xtensa.exp: (relax-diff1)
+	(relax-ndiff): New tests.
+
+2020-04-29  Stephen Casner  <casner@acm.org>
+
+	PR 25829
+	* testsuite/ld-scripts/default-script.exp: Add --image-base=0 to
+	LDFLAGS for targets *-*-mingw64 x86_64-*-cygwin.
+	* testsuite/ld-scripts/default-script1.d: No longer have to skip
+	test for those targets.
+	* testsuite/ld-scripts/default-script2.d: Likewise.
+	* testsuite/ld-scripts/default-script3.d: Likewise.
+	* testsuite/ld-scripts/default-script4.d: Likewise.
+
+2020-04-27  Tamar Christina  <tamar.christina@arm.com>
+
+	* pe-dll.c (pe_detail_list):  Add pe-bigobj-i386.
+
+2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>
+
+	PR ld/25861
+	* testsuite/ld-xtensa/relax-loc.d: New test definition.
+	* testsuite/ld-xtensa/relax-loc.s: New test source.
+	* testsuite/ld-xtensa/xtensa.exp (relax-loc): New test.
+
+2020-04-22  Fangrui Song <maskray@google.com>
+
+	PR ld/25806
+	* ldlang.h (struct lang_input_statement_struct): Add extra_search_path.
+	* ldlang.c (current_input_file): New.
+	(ldirname): New.
+	(new_afile): Add from_filename parameter.  Set extra_search_path.
+	(lang_add_input_file): Pass current_input_file to new_afile.
+	(load_symbols): Set current_input_file.
+	* ldfile.c (ldfile_open_file): If extra_search_path has been set
+	then scan it for the file that needs to be opened.
+	* ld.texi: Document the new behaviour.
+	* NEWS: Mention the new feature.
+
+2020-04-22  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-scripts/default-script1.d: Correct mingw skip.
+	* testsuite/ld-scripts/default-script2.d: Likewise.
+	* testsuite/ld-scripts/default-script3.d: Likewise.
+	* testsuite/ld-scripts/default-script4.d: Likewise.
+
+2020-04-21  Stephen Casner  <casner@acm.org>
+
+	PR 25829
+	* testsuite/ld-scripts/script.exp (check_script)
+	(extract_symbol_test): Make test addresses fit in 16 bits.
+	* testsuite/ld-scripts/memory.t: Likewise.
+	* testsuite/ld-scripts/memory_sym.t (TXT_LENGTH): Likewise.
+	* testsuite/ld-scripts/default-script.t (_START): Likewise.
+	* testsuite/ld-scripts/default-script1.d: Likewise.
+	* testsuite/ld-scripts/default-script2.d: Likewise.
+	* testsuite/ld-scripts/default-script3.d: Likewise.
+	* testsuite/ld-scripts/default-script4.d: Likewise.
+	* testsuite/ld-scripts/empty-address-1.t: Likewise.
+	* testsuite/ld-scripts/empty-address-1.d: Likewise.
+	* testsuite/ld-scripts/empty-address-2a.d: Likewise.
+	* testsuite/ld-scripts/empty-address-2b.d: Likewise.
+	* testsuite/ld-misc/start.s: .long -> .dc.a to allow relocation to
+	fit target address size.
+	* testsuite/ld-scripts/empty-address-1.s: Likewise.
+	* testsuite/ld-scripts/empty-address-2.s: Likewise.
+
+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25849
+	* ldelfgen.c (ldelf_map_segments): Call
+	elf_backend_strip_zero_sized_dynamic_sections.
+	* testsuite/ld-alpha/tlsbinr.rd: Updated.
+
+2020-04-20  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsopt5.s: Rename foo to aaaaa.
+	* testsuite/ld-powerpc/tlsopt5.d: Adjust to suit.
+	* testsuite/ld-powerpc/tlsopt6.d: Likewise.
+
+2020-04-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* testsuite/ld-elf/warn1.d: Don't xfail on 64-bit Solaris/SPARC.
+	* testsuite/ld-elf/warn2.d: Likewise.
+
+2020-04-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/elf.exp (ASFLAGS): Add "--defsym NO_SET=1" for
+	alpha target.
+	* testsuite/ld-elf/pr19789.s: Use "=" if NO_SET is defined.
+
+2020-04-16  Stephen Casner  <casner@acm.org>
+
+	PR 18963
+	* testsuite/ld-scripts/pr18963.t: Reduce section sizes to fit in
+	16-bit address space.
+	* testsuite/ld-scripts/pr18963.d: Likewise.
+
+2020-04-17  Juan Manuel Guerrero  <juan.guerrero@gmx.de>
+            Jan W. Jagersma  <jwjagersma@gmail.com>
+
+	* scripttempl/i386go32.sc: Provide symbol _environ.  Link in
+	.ctors and .dtors.  Discard LTO sections.
+
+2020-04-17  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/config/default.exp: If not already set then create the
+	CCC_OVERRIDE_OPTIONS environment variable to help when running the
+	testsuite with clang.
+	* testsuite/ld-elf/pr22269-1.c: Add a missing return statement.
+	* testsuite/ld-elfvers/vers.exp: Add checks to detect if files
+	were built before attempting to copy them.
+
+2020-04-15  Fangrui Song <maskray@google.com>
+
+	PR binutils/24613
+	* lexsup.c (parse_args): Change RM_GENERATE_WARNING and
+	RM_GENERATE_ERROR to RM_DIAGNOSE.
+	* emultempl/aix.em (ld_${EMULATION_NAME}_emulation): Change
+	RM_GENERATE_ERROR to RM_DIAGNOSE.
+	* emultempl/elf.em (ld_${EMULATION_NAME}_emulation): Likewise.
+
+2020-04-14  Stephen Casner  <casner@acm.org>
+
+	PR ld/25677
+	* emulparams/pdp11.sh (SCRIPT_NAME): Change to pdp11.
+	(EXTRA_EM_FILE): New, add emulation file pdp11.
+	* scripttempl/pdp11.sc: New, derived from aout.sc without
+	irrelevant input sections.
+	* emultempl/pdp11.em (_add_options, _handle_option)
+	(_list_options): New. Add options -z, --imagic for pdp11-aout.
+	(_before_parse): Make --omagic be default instead of --nmagic.
+	(_get_script): Modify special-case linker script for --imagic.
+	* lexsup.c (parse_args): Explictly set config.text_read_only for -n.
+	* ld.texi (Options): Add documentation of PDP11-specific options.
+	(Options): Fix unrelated typo to --no-compact-branches.
+	* gen-doc.texi: @set PDP11.
+	* testsuite/ld-pdp11/pdp11.exp: New, start pdp11 testing.
+	* testsuite/ld-pdp11/sections.s: New, source for options tests.
+	* testsuite/ld-pdp11/imagic.d: New, test --imagic format.
+	* testsuite/ld-pdp11/imagicz.d: New, test -z (imagic) format.
+	* testsuite/ld-pdp11/nmagic.d: New, test --nmagic format.
+	* testsuite/ld-pdp11/omagic.d: New, test --omagic format.
+
+2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25707
+	* testsuite/ld-arm/armthumb-lib.sym: Updated.
+	* testsuite/ld-arm/farcall-mixed-app.sym: Likewise.
+	* testsuite/ld-arm/farcall-mixed-app2.sym: Likewise.
+	* testsuite/ld-arm/fdpic-main-m.sym: Likewise.
+	* testsuite/ld-arm/fdpic-main.sym: Likewise.
+	* testsuite/ld-arm/fdpic-shared-m.sym: Likewise.
+	* testsuite/ld-arm/fdpic-shared.sym: Likewise.
+	* testsuite/ld-arm/mixed-app.sym: Likewise.
+	* testsuite/ld-arm/mixed-lib.sym: Likewise.
+	* testsuite/ld-arm/preempt-app.sym: Likewise.
+	* testsuite/ld-elf/hash.d: Likewise.
+	* testsuite/ld-elf/pr13195.d: Likewise.
+	* testsuite/ld-elfvsb/hidden2.d: Likewise.
+	* testsuite/ld-mips-elf/hash2.d: Likewise.
+
+2020-04-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* testsuite/ld-shared/shared.exp: Remove dangling comments.
+	xfail shared non PIC tests on Solaris.
+
+2020-04-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* testsuite/ld-elf/shared.exp: Add -Av9 to AFLAGS_PIC on sparc*-*-*.
+
+2020-04-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/config/default.exp (NOCF_PROTECTION_CFLAGS): Replace
+	nopie with available.
+
+2020-04-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/config/default.exp (NOCF_PROTECTION_CFLAGS): New.
+	Set to "-fcf-protection=none" if target compiler supports it.
+	* testsuite/ld-srec/srec.exp: Add $NOCF_PROTECTION_CFLAGS to
+	CC and CXX.
+	* testsuite/ld-x86-64/x86-64.exp: Add $NOCF_PROTECTION_CFLAGS
+	to PLT BND tests.
+
+2020-04-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/linux-x86.exp (check_pr25749a): Compile with
+	-I../bfd.
+	(check_pr25749b): Likewise.
+
+2020-04-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* testsuite/ld-ifunc/ifunc-10-i386.d: Remove *-*-solaris2* from
+	notarget.
+	* ifunc-11-i386.d: Likewise.
+	* ifunc-12-i386.d: Likewise.
+	* ifunc-13-i386.d: Likewise.
+	* ifunc-14a-i386.d: Likewise.
+	* ifunc-14b-i386.d: Likewise.
+	* ifunc-14c-i386.d: Likewise.
+	* ifunc-14d-i386.d: Likewise.
+	* ifunc-14e-i386.d: Likewise.
+	* ifunc-14f-i386.d: Likewise.
+	* ifunc-15-i386.d: Likewise.
+	* ifunc-16-i386-now.d: Likewise.
+	* ifunc-16-i386.d: Likewise.
+	* ifunc-17a-i386.d: Likewise.
+	* ifunc-17b-i386.d: Likewise.
+	* ifunc-18a-i386.d: Likewise.
+	* ifunc-18b-i386.d: Likewise.
+	* ifunc-19a-i386.d: Likewise.
+	* ifunc-19b-i386.d: Likewise.
+	* ifunc-2-i386-now.d: Likewise.
+	* ifunc-2-i386.d: Likewise.
+	* ifunc-2-local-i386-now.d: Likewise.
+	* ifunc-2-local-i386.d: Likewise.
+	* ifunc-20-i386.d: Likewise.
+	* ifunc-21-i386.d: Likewise.
+	* ifunc-22-i386.d: Likewise.
+	* ifunc-5a-i386.d: Likewise.
+	* ifunc-5a-local-i386.d: Likewise.
+	* ifunc-5b-i386.d: Likewise.
+	* ifunc-5b-local-i386.d: Likewise.
+	* ifunc-5r-local-i386.d: Likewise.
+	* ifunc-6a-i386.d: Likewise.
+	* ifunc-6b-i386.d: Likewise.
+	* ifunc-7a-i386.d: Likewise.
+	* ifunc-7b-i386.d: Likewise.
+	* ifunc-8-i386.d: Likewise.
+	* ifunc-9-i386.d: Likewise.
+	* pr17154-i386-now.d: Likewise.
+	* pr17154-i386.d: Likewise.
+
+	* ifunc-23a-x86.d: Remove notarget.
+	* ifunc-24a-x86.d: Likewise.
+	* ifunc-25a-x86.d: Likewise.
+
+2020-04-02  Nick Clifton  <nickc@redhat.com>
+
+	PR ld/25747
+	* ldfile.c (ldfile_open_file): Fix typo in warning message.
+
+2020-04-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25749
+	PR ld/25754
+	* testsuite/ld-elf/linux-x86.exp: Run ld/25749 tests.
+	* testsuite/ld-elf/pr25749-1.c: New file.
+	* testsuite/ld-elf/pr25749-1a.c: Likewise.
+	* testsuite/ld-elf/pr25749-1b.c: Likewise.
+	* testsuite/ld-elf/pr25749-1b.err: Likewise.
+	* testsuite/ld-elf/pr25749-1c.c: Likewise.
+	* testsuite/ld-elf/pr25749-1d.c: Likewise.
+	* testsuite/ld-elf/pr25749-2.c: Likewise.
+	* testsuite/ld-elf/pr25749-2a.s: Likewise.
+	* testsuite/ld-elf/pr25749-2b.s: Likewise.
+	* testsuite/ld-elf/pr25749.rd: Likewise.
+	* testsuite/ld-elf/pr25754-1a.c: Likewise.
+	* testsuite/ld-elf/pr25754-1b.s: Likewise.
+	* testsuite/ld-elf/pr25754-2a.c: Likewise.
+	* testsuite/ld-elf/pr25754-2b.err: Likewise.
+	* testsuite/ld-elf/pr25754-2b.s: Likewise.
+	* testsuite/ld-elf/pr25754-3a.c: Likewise.
+	* testsuite/ld-elf/pr25754-3b.s: Likewise.
+	* testsuite/ld-elf/pr25754-4a.c: Likewise.
+	* testsuite/ld-elf/pr25754-4b.s: Likewise.
+	* testsuite/ld-elf/pr25754-4c.s: Likewise.
+	* testsuite/ld-elf/pr25754-5a.c: Likewise.
+	* testsuite/ld-elf/pr25754-5b.s: Likewise.
+	* testsuite/ld-elf/pr25754-5c.s: Likewise.
+	* testsuite/ld-elf/pr25754-6a.c: Likewise.
+	* testsuite/ld-elf/pr25754-6b.s: Likewise.
+	* testsuite/ld-x86-64/pr19609-6a.d: Don't expect linker error.
+
+2020-04-01  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/16017
+	* testsuite/ld-arm/arm-elf.exp (thumb-plt, thumb-plt-got): Skip for NaCL.
+
+2020-04-01  Nick Clifton  <nickc@redhat.com>
+
+	PR ld/25747
+	* ldfile.c (ldfile_open_file): If a search for a library fails,
+	but there is a file that would match if it had a "lib" prefix to
+	its name, then tell the user.
+
+2020-04-01  Tamar Christina  <tamar.christina@arm.com>
+
+	PR ld/16017
+	* testsuite/ld-arm/arm-elf.exp (thumb-plt-got): New.
+	* testsuite/ld-arm/thumb-plt-got.d: New test.
+
+2020-04-01  Tamar Christina  <tamar.christina@arm.com>
+
+	* testsuite/ld-arm/arm-elf.exp (thumb-plt): New.
+	* testsuite/ld-arm/thumb-plt.d: New test.
+	* testsuite/ld-arm/thumb-plt.s: New test.
+
+2020-04-01  Hans-Peter Nilsson  <hp@bitrange.com>
+
+	* testsuite/ld-scripts/defined4.d: Don't xfail mmix-*-*.
+
+2020-03-30  Nick Clifton  <nickc@redhat.com>
+
+	PR binutils/25662
+	* emultempl/pe.em (after_open): Replace initialisation of the
+	insert_timestamp field in the pe_data structure with an
+	initialisation of the timestamp field.
+	* emultemp/pep.em: Likewise.
+	* pe-dll.c (fill_edata): Use the timestamp field in the pe_data
+	structure instead of the insert_timestamp field.
+
+2020-03-28  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR 25732
+	* emulparams/elf_i386_ldso.sh (COMMONPAGESIZE): New.
+	* testsuite/ld-elf/shared.exp:Don't xfail pr20995-2 tests for
+	Solaris.
+
+2020-03-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR 25732
+	* testsuite/ld-elf/shared.exp: Xfail pr20995-2 tests for Solaris.
+
+2020-03-27  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR 25732
+	* testsuite/ld-ifunc/ifunc-23a-x86.d: Add notarget for Solaris.
+	* testsuite/ld-ifunc/ifunc-24a-x86.d: Likewise.
+	* testsuite/ld-ifunc/ifunc-25a-x86.d: Likewise.
+
+2020-03-25  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/compress1c.d: xfail h8300.
+	* testsuite/ld-elf/compressed1c.d: Likewise.
+	* testsuite/ld-elf/compressed1e.d: Likewise.
+	* testsuite/ld-elf/dynamic1.d: Likewise.
+	* testsuite/ld-elf/dynsym1.d: Likewise.
+	* testsuite/ld-elf/ehdr_start-shared.d: Likewise.
+	* testsuite/ld-elf/exclude3b.d: Likewise.
+	* testsuite/ld-elf/export-class.exp: Don't run without -shared support.
+	* testsuite/ld-elf/global1.d: xfail h8300.
+	* testsuite/ld-elf/hash.d: Likewise.
+	* testsuite/ld-elf/loadaddr1.d: Likewise.
+	* testsuite/ld-elf/loadaddr2.d: Likewise.
+	* testsuite/ld-elf/local1.d: Likewise.
+	* testsuite/ld-elf/mbind1b.d: Likewise.
+	* testsuite/ld-elf/mbind1c.d: Likewise.
+	* testsuite/ld-elf/now-1.d: Likewise.
+	* testsuite/ld-elf/now-2.d: Likewise.
+	* testsuite/ld-elf/now-3.d: Likewise.
+	* testsuite/ld-elf/now-4.d: Likewise.
+	* testsuite/ld-elf/pie.d: Likewise.
+	* testsuite/ld-elf/pr12975.d: Likewise.
+	* testsuite/ld-elf/pr13177.d: Likewise.
+	* testsuite/ld-elf/pr13195.d: Likewise.
+	* testsuite/ld-elf/pr16322.d: Likewise.
+	* testsuite/ld-elf/pr16498a.d: Likewise.
+	* testsuite/ld-elf/pr16498b.d: Likewise.
+	* testsuite/ld-elf/pr17615.d: Likewise.
+	* testsuite/ld-elf/pr19162.d: Likewise.
+	* testsuite/ld-elf/pr19539.d: Likewise.
+	* testsuite/ld-elf/pr19617a.d: Likewise.
+	* testsuite/ld-elf/pr19698.d: Likewise.
+	* testsuite/ld-elf/pr20513c.d: Likewise.
+	* testsuite/ld-elf/pr20513d.d: Likewise.
+	* testsuite/ld-elf/pr21389a.d: Likewise.
+	* testsuite/ld-elf/pr21389b.d: Likewise.
+	* testsuite/ld-elf/pr21389c.d: Likewise.
+	* testsuite/ld-elf/pr21562a.d: Likewise.
+	* testsuite/ld-elf/pr21562b.d: Likewise.
+	* testsuite/ld-elf/pr21562c.d: Likewise.
+	* testsuite/ld-elf/pr21562d.d: Likewise.
+	* testsuite/ld-elf/pr21562e.d: Likewise.
+	* testsuite/ld-elf/pr21562f.d: Likewise.
+	* testsuite/ld-elf/pr21562g.d: Likewise.
+	* testsuite/ld-elf/pr21562h.d: Likewise.
+	* testsuite/ld-elf/pr21562i.d: Likewise.
+	* testsuite/ld-elf/pr21562j.d: Likewise.
+	* testsuite/ld-elf/pr21562k.d: Likewise.
+	* testsuite/ld-elf/pr21562l.d: Likewise.
+	* testsuite/ld-elf/pr21562m.d: Likewise.
+	* testsuite/ld-elf/pr21562n.d: Likewise.
+	* testsuite/ld-elf/pr21903a.d: Likewise.
+	* testsuite/ld-elf/pr21903b.d: Likewise.
+	* testsuite/ld-elf/pr21903d.d: Likewise.
+	* testsuite/ld-elf/pr22269a.d: Likewise.
+	* testsuite/ld-elf/pr22269b.d: Likewise.
+	* testsuite/ld-elf/pr22393-1a.d: Likewise.
+	* testsuite/ld-elf/pr22393-1b.d: Likewise.
+	* testsuite/ld-elf/pr22393-1c.d: Likewise.
+	* testsuite/ld-elf/pr22393-1d.d: Likewise.
+	* testsuite/ld-elf/pr22393-1e.d: Likewise.
+	* testsuite/ld-elf/pr22393-1f.d: Likewise.
+	* testsuite/ld-elf/pr22423.d: Likewise.
+	* testsuite/ld-elf/pr22450.d: xfail avr, crx, h8300, ip2k, m68hc11,
+	and xc16x.
+	* testsuite/ld-elf/pr23658-1c.d: xfail h8300.
+	* testsuite/ld-elf/pr25708.d: xfail h8300 and hppa64.
+	* testsuite/ld-elf/rpath-1.d: xfail h8300.
+	* testsuite/ld-elf/rpath-2.d: Likewise.
+	* testsuite/ld-elf/runpath-1.d: Likewise.
+	* testsuite/ld-elf/runpath-2.d: Likewise.
+	* testsuite/ld-elf/sizeofb.d: Likewise.
+	* testsuite/ld-elf/startofb.d: Likewise.
+	* testsuite/ld-elf/strtab.d: Likewise.
+	* testsuite/ld-elf/textaddr1.d: Likewise.
+	* testsuite/ld-elf/textaddr2.d: Likewise.
+	* testsuite/ld-elf/textaddr4.d: Likewise.
+	* testsuite/ld-elf/textaddr5.d: Likewise.
+	* testsuite/ld-elf/textaddr6.d: Likewise.
+	* testsuite/ld-elf/unknown2.d: Likewise.
+	* testsuite/ld-undefined/entry-3.d: Likewise.
+	* testsuite/ld-undefined/entry-4.d: Likewise.
+	* testsuite/ld-h8300/h8300.exp: Pass appropriate ld -m option.
+	* testsuite/ld-h8300/gcsection.d: Remove ld -m option and relax
+	file format match.
+	* testsuite/ld-h8300/relax-2.d: Likewise.
+	* testsuite/ld-h8300/relax-3.d: Likewise.
+	* testsuite/ld-h8300/relax-4.d: Likewise.
+	* testsuite/ld-h8300/relax-5.d: Likewise.
+	* testsuite/ld-h8300/relax-6.d: Likewise.
+	* testsuite/ld-h8300/relax-7.d: Likewise.
+	* testsuite/ld-h8300/relax.d: Relax file format match.
+
+2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25708
+	* testsuite/ld-elf/pr25708.d: New file.
+
+2020-03-23  Alan Modra  <amodra@gmail.com>
+
+	* Makefile.am (ALL_EMULATION_SOURCES): Reinstate ei386aout.c.
+	Include ei386aout dep file.
+	* Makefile.in: Regenerate.
+	* po/BLD-POTFILES.in: Regenerate.
+
+2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-plugin/lto.exp (lto_link_tests): Run PR ld/25355
+	test only for GCC 10 or newer.
+
+2020-03-20  Alan Modra  <amodra@gmail.com>
+
+	* testplug.c (parse_symdefstr): Use %hhi to read sym->def, and
+	clear new fields.
+	* testplug2.c (parse_symdefstr): Likewise.
+	* testplug3.c (parse_symdefstr): Likewise.
+	* testplug4.c (parse_symdefstr): Likewise.
+
+2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* testsuite/ld-arm/non-contiguous-arm4.d: Fix expected output.
+	* testsuite/ld-powerpc/non-contiguous-powerpc.d: Likewise.
+
+2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* emultempl/xtensaelf.em: Emit a fatal error message
+	instead of calling abort.
+	* ldlang.c: Likewise.
+
+2020-03-14  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elf/non-contiguous.d: Don't xfail generic ELF
+	targets.  Don't skip xtensa, xfail instead.
+
+2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>
+
+	* ldlang.c (lang_add_section): Add support for
+	non_contiguous_regions.
+	(size_input_section): Likewise.
+	(lang_size_sections_1): Likewise.
+	(process_insert_statements): Likewise.
+	* ldlex.h (option_values): Add OPTION_NON_CONTIGUOUS_REGIONS and
+	OPTION_NON_CONTIGUOUS_REGIONS_WARNINGS.
+	* lexsup.c (ld_options): Add entries for
+	--enable-non-contiguous-regions and
+	--enable-non-contiguous-regions-warnings.
+	(parse_args): Handle it.
+	* NEWS: Add --enable-non-contiguous-regions and
+	--enable-non-contiguous-regions-warnings.
+	* ld.texi: Add --enable-non-contiguous-regions and
+	--enable-non-contiguous-regions-warnings documentation.
+	* emultempl/armelf.em (elf32_arm_add_stub_section): Add
+	SEC_LINKER_CREATED flag.
+	* emultempl/xtensaelf.em (ld_build_required_section_dependence):
+	Emit an error when --enable-non-contiguous-regions is used.
+	* testsuite/ld-elf/non-contiguous.d: New.
+	* testsuite/ld-elf/non-contiguous.ld: New.
+	* testsuite/ld-elf/non-contiguous.s: New.
+	* testsuite/ld-arm/arm-elf.exp: Run the new tests.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm.s: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm.d: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm.ld: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm2.d: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.ld: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.d: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm3.ld: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm4.d: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm4.ld: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm5.d: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm5.ld: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm6.d: New.
+	* testsuite/ld-arm/arm-elf/non-contiguous-arm6.ld: New.
+	* testsuite/ld-powerpc/powerpc.exp: Run new tests.
+	* testsuite/ld-powerpc/non-contiguous-powerpc.d: New.
+	* testsuite/ld-powerpc/non-contiguous-powerpc.ld: New.
+	* testsuite/ld-powerpc/non-contiguous-powerpc.sd: New.
+	* testsuite/ld-powerpc/non-contiguous-powerpc64.d: New.
+
+2020-03-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24920
+	* emulparams/elf32_x86_64.sh: Use static.sh.
+	* emulparams/elf_i386.sh: Likewise.
+	* emulparams/elf_x86_64.sh: Likewise.
+	* emulparams/static.sh: New file.
+	* emultempl/elf-x86.em: Include "ldlex.h".
+	* testsuite/ld-elf/pr24920.err: New file.
+	* testsuite/ld-elf/linux-x86.exp: Run ld/24920 tests.
+
+2020-03-13  Christian Eggers  <ceggers@gmx.de>
+
+	* ldexp.c (fold_name): Return SIZEOF_HEADERS in bytes.
+
+2020-03-11  Alan Modra  <amodra@gmail.com>
+
+	* ldelf.c (elf_orphan_compatible): Return false when two sections
+	have differing SHF_MASKPROC or SHF_MASKOS flags.
+
+2020-03-05  Alan Modra  <amodra@gmail.com>
+
+	PR 25570
+	* ldlang.c (lang_size_sections_1): Don't report changes on
+	second and subsequent iterations that make no change in
+	alignment from that already reported.
+
+2020-03-05  Alan Modra  <amodra@gmail.com>
+
+	PR 25570
+	* ldlang.c (lang_sizing_iteration): New static var.
+	(lang_size_sections_1): Warn about no memory region only on first
+	iteration.  Warn about changing start address on first iteration
+	then any delta from that on subsequent iterations.  Report a signed
+	delta.
+	(one_lang_size_sections_pass): Increment lang_sizing_iteration.
+
+2020-03-03  Nick Clifton  <nickc@redhat.com>
+
+	PR 25588
+	* ld.texi (Options): Update the description of the --rpath-link
+	option.
+
+2020-03-02  Alan Modra  <amodra@gmail.com>
+
+	* plugin.c (plugin_object_p): Return a bfd_cleanup.
+	(plugin_cleanup): New function.
+
+2020-03-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25618
+	* plugin.c (plugin_object_p): Copy the no_export field to the IR
+	dummy object.
+	* testsuite/ld-plugin/lto.exp (lto_link_elf_tests): Add
+	PR ld/25618 tests.
+	* testsuite/ld-plugin/pr25618.d: New file.
+	* testsuite/ld-plugin/pr25618a.cc: Likewise.
+	* testsuite/ld-plugin/pr25618a.h: Likewise.
+	* testsuite/ld-plugin/pr25618b.cc: Likewise.
+	* testsuite/ld-plugin/pr25618b.h: Likewise.
+
+2020-02-27  Alan Modra  <amodra@gmail.com>
+
+	PR 24511
+	* testsuite/ld-mmix/b-fixo2.d: Adjust for .data change.
+	* testsuite/ld-mmix/sec-2.d: Likewise.
+	* testsuite/ld-mmix/sec-3.d: Likewise.
+	* testsuite/ld-mmix/sec-4.d: Likewise.
+	* testsuite/ld-mmix/spec802.d: Likewise.
+	* testsuite/ld-mmix/spec803.d: Likewise.
+	* testsuite/ld-mmix/spec804.d: Likewise.
+	* testsuite/ld-mmix/spec805.d: Likewise.
+	* testsuite/ld-mmix/spec806.d: Likewise.
+	* testsuite/ld-mmix/spec807.d: Likewise.
+	* testsuite/ld-mmix/spec808.d: Likewise.
+
+2020-02-26  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25593
+	* testsuite/ld-plugin/lto.exp: Run PR ld/25593 tests.
+	* testsuite/ld-plugin/pr25593.d: New file.
+	* testsuite/ld-plugin/pr25593a-1.c: Likewise.
+	* testsuite/ld-plugin/pr25593a-2.c: Likewise.
+	* testsuite/ld-plugin/pr25593b.c: Likewise.
+	* testsuite/ld-plugin/pr25593c.c: Likewise.
+	* testsuite/ld-plugin/pr25593d.c: Likewise.
+	* testsuite/ld-plugin/pr25593e.c: Likewise.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/cskyelf.em: Indent labels correctly.
+	* ldfile.c: Likewise.
+	* ldlang.c: Likewise.
+	* plugin.c: Likewise.
+
+2020-02-26  Alan Modra  <amodra@gmail.com>
+
+	PR 25593
+	* ldelf.c (ldelf_try_needed): Add DT_NEEDED lib to input_bfds.
+	(ldelf_after_open): Save state of input_bfds list before loading
+	DT_NEEDED libs.  Traverse input_bfds list adding DT_NEEDED tags.
+	Restore input_bfds list.
+	* testsuite/ld-cris/gotplt1.d: Adjust for changed .dynstr order.
+
+2020-02-24  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Update French translation.
+
+2020-02-22  Alan Modra  <amodra@gmail.com>
+
+	PR 25585
+	* NEWS: Mention better "PHDR segment not covered by LOAD segment"
+	checking.
+
+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25537
+	* emultempl/z80.em: Remove machine compatability checking.
+
+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25517
+	* testsuite/ld-z80/arch_ez80_adl.d: Update command line.
+	* testsuite/ld-z80/arch_ez80_z80.d: Likewise.
+	* testsuite/ld-z80/arch_r800.d: Likewise.
+	* testsuite/ld-z80/arch_z180.d: Likewise.
+	* testsuite/ld-z80/arch_z80n.d: Likewise.
+	* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.
+	* testsuite/ld-z80/comb_arch_z180_z80.d: Likewise.
+	* testsuite/ld-z80/comb_arch_z80_ez80.d: Likewise.
+	* testsuite/ld-z80/comb_arch_z80_z180.d: Likewise.
+	* testsuite/ld-z80/comb_arch_z80_z80n.d: Likewise.
+	* testsuite/ld-z80/relocs_b_ez80.d: Likewise.
+	* testsuite/ld-z80/relocs_b_z80.d: Likewise.
+	* testsuite/ld-z80/relocs_f_ez80.d: Likewise.
+	* testsuite/ld-z80/relocs_f_z80.d: Likewise.
+	* testsuite/ld-z80/relocs_f_z80n.d: Likewise.
+
+2020-02-19  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-plugin/pr25355.d: Allow alpha-linux nm result.
+
+2020-02-10  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR binutils/25355
+	* testsuite/ld-plugin/lto.exp: Run PR binutils/25355 test.
+	* testsuite/ld-plugin/pr25355.c: New file.
+	* testsuite/ld-plugin/pr25355.d: Likewise.
+	* testsuite/lib/ld-lib.exp (run_cc_link_tests): Support compile
+	only dump.
+
+2020-02-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-unique/unique.exp (contains_unique_symbol): Updated.
+
+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	PR 25469
+	* emulparams/elf32z80.sh: Use z80 emulation.
+	* emultempl/z80.em: Make generic to both COFF and ELF Z80 emulations.
+	* emultempl/z80elf.em: Delete.
+	* testsuite/ld-elf/pr22450.d: Expect to fail for the Z80.
+	* testsuite/ld-elf/sec64k.exp: Fix Z80 assembly.
+	* testsuite/ld-unique/pr21529.s: Avoid register name conflict.
+	* testsuite/ld-unique/unique.s: Likewise.
+	* testsuite/ld-unique/unique_empty.s: Likewise.
+	* testsuite/ld-unique/unique_shared.s: Likewise.
+	* testsuite/ld-unique/unique.d: Updated expected output.
+	* testsuite/ld-z80/arch_z80n.d: New file.
+	* testsuite/ld-z80/comb_arch_z80_z80n.d: New file.
+	* testsuite/ld-z80/labels.s: Add more labels.
+	* testsuite/ld-z80/relocs.s: Add more reloc tests.
+	* testsuite/ld-z80/relocs_f_z80n.d: New file
+
+2020-02-07  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25022
+	* testsuite/ld-elf/pr25022.d: Xfail more targets which don't use
+	ldelf_before_place_orphans.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25022
+	* emultempl/aix.em (ld_${EMULATION_NAME}_emulation): Add
+	before_place_orphans_default.
+	* emultempl/armcoff.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/beos.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/generic.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/linux.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/msp430.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/pe.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/pep.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/ticoff.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/vanilla.em (ld_${EMULATION_NAME}_emulation): Likewise.
+	* emultempl/elf.em (ld_${EMULATION_NAME}_emulation): Use
+	ldelf_before_place_orphans.
+	* ldelf.c (ldelf_before_place_orphans): New.
+	* ldelf.h (ldelf_before_place_orphans): Likewise.
+	* ldemul.c (ldemul_before_place_orphans): Likewise.
+	(before_place_orphans_default): Likewise.
+	* ldemul.h (ldemul_before_place_orphans): Likewise.
+	(before_place_orphans_default): Likewise.
+	(ld_emulation_xfer_struct): Add before_place_orphans.
+	* ldlang.c (lang_process): Call ldemul_before_place_orphans
+	before lang_place_orphans.
+	* testsuite/ld-elf/pr25022.d: New file.
+	* testsuite/ld-elf/pr25022.s: Likewise.
+	* testsuite/ld-elf/pr25022.t: Likewise.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25490
+	* testsuite/ld-elf/pr25490-1.d: New file.
+	* testsuite/ld-elf/pr25490-1.s: Likewise.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/24526
+	PR ld/25021
+	PR ld/25490
+	* testsuite/ld-elf/elf.exp: Run PR ld/25490 tests.
+	* testsuite/ld-elf/pr24526.d: New file.
+	* testsuite/ld-elf/pr24526.s: Likewise.
+	* testsuite/ld-elf/pr25021.d: Likewise.
+	* testsuite/ld-elf/pr25021.s: Likewise.
+	* testsuite/ld-elf/pr25490-2-16.rd: Likewise.
+	* testsuite/ld-elf/pr25490-2-32.rd: Likewise.
+	* testsuite/ld-elf/pr25490-2-64.rd: Likewise.
+	* testsuite/ld-elf/pr25490-2.s: Likewise.
+	* testsuite/ld-elf/pr25490-3-16.rd: Likewise.
+	* testsuite/ld-elf/pr25490-3-32.rd: Likewise.
+	* testsuite/ld-elf/pr25490-3-64.rd: Likewise.
+	* testsuite/ld-elf/pr25490-3.s: Likewise.
+	* testsuite/ld-elf/pr25490-4-16.rd: Likewise.
+	* testsuite/ld-elf/pr25490-4-32.rd: Likewise.
+	* testsuite/ld-elf/pr25490-4-64.rd: Likewise.
+	* testsuite/ld-elf/pr25490-4.s: Likewise.
+	* testsuite/ld-elf/pr25490-5-16.rd: Likewise.
+	* testsuite/ld-elf/pr25490-5-32.rd: Likewise.
+	* testsuite/ld-elf/pr25490-5-64.rd: Likewise.
+	* testsuite/ld-elf/pr25490-5.s: Likewise.
+	* testsuite/ld-elf/pr25490-6-16.rd: Likewise.
+	* testsuite/ld-elf/pr25490-6-32.rd: Likewise.
+	* testsuite/ld-elf/pr25490-6-64.rd: Likewise.
+	* testsuite/ld-elf/pr25490-6.s: Likewise.
+
+2020-02-06  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/lib/ld-lib.exp (check_gc_sections_available): Mark
+	z80 as not supported.
+
+2020-02-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-ifunc/ifunc.exp: Enable for more targets, specifying
+	targets that don't support ifunc rather than ones that do.
+	(contains_irelative_reloc): Match R_PARISC_IPLT.
+	* testsuite/ld-ifunc/lib.c: Don't use .set in asm.
+	* testsuite/ld-ifunc/ifunc-23-x86.s,
+	* testsuite/ld-ifunc/ifunc-24-x86.s,
+	* testsuite/ld-ifunc/ifunc-25-x86.s,
+	* testsuite/ld-ifunc/ifunc-4-local-x86.s,
+	* testsuite/ld-ifunc/ifunc-4-x86.s: Define _main.
+	* testsuite/ld-ifunc/ifunc-10-i386.d,
+	* testsuite/ld-ifunc/ifunc-11-i386.d,
+	* testsuite/ld-ifunc/ifunc-12-i386.d,
+	* testsuite/ld-ifunc/ifunc-13-i386.d,
+	* testsuite/ld-ifunc/ifunc-14a-i386.d,
+	* testsuite/ld-ifunc/ifunc-14b-i386.d,
+	* testsuite/ld-ifunc/ifunc-14c-i386.d,
+	* testsuite/ld-ifunc/ifunc-14d-i386.d,
+	* testsuite/ld-ifunc/ifunc-14e-i386.d,
+	* testsuite/ld-ifunc/ifunc-14f-i386.d,
+	* testsuite/ld-ifunc/ifunc-15-i386.d,
+	* testsuite/ld-ifunc/ifunc-16-i386-now.d,
+	* testsuite/ld-ifunc/ifunc-16-i386.d,
+	* testsuite/ld-ifunc/ifunc-17a-i386.d,
+	* testsuite/ld-ifunc/ifunc-17b-i386.d,
+	* testsuite/ld-ifunc/ifunc-18a-i386.d,
+	* testsuite/ld-ifunc/ifunc-18b-i386.d,
+	* testsuite/ld-ifunc/ifunc-19a-i386.d,
+	* testsuite/ld-ifunc/ifunc-19b-i386.d,
+	* testsuite/ld-ifunc/ifunc-2-i386-now.d,
+	* testsuite/ld-ifunc/ifunc-2-i386.d,
+	* testsuite/ld-ifunc/ifunc-2-local-i386-now.d,
+	* testsuite/ld-ifunc/ifunc-2-local-i386.d,
+	* testsuite/ld-ifunc/ifunc-20-i386.d,
+	* testsuite/ld-ifunc/ifunc-21-i386.d,
+	* testsuite/ld-ifunc/ifunc-22-i386.d,
+	* testsuite/ld-ifunc/ifunc-26.d,
+	* testsuite/ld-ifunc/ifunc-5a-i386.d,
+	* testsuite/ld-ifunc/ifunc-5a-local-i386.d,
+	* testsuite/ld-ifunc/ifunc-5b-i386.d,
+	* testsuite/ld-ifunc/ifunc-5b-local-i386.d,
+	* testsuite/ld-ifunc/ifunc-5r-local-i386.d,
+	* testsuite/ld-ifunc/ifunc-6a-i386.d,
+	* testsuite/ld-ifunc/ifunc-6b-i386.d,
+	* testsuite/ld-ifunc/ifunc-7a-i386.d,
+	* testsuite/ld-ifunc/ifunc-7b-i386.d,
+	* testsuite/ld-ifunc/ifunc-8-i386.d,
+	* testsuite/ld-ifunc/ifunc-9-i386.d,
+	* testsuite/ld-ifunc/pr17154-i386-now.d,
+	* testsuite/ld-ifunc/pr17154-i386.d: xfail lynxos, nto, and solaris.
+
+2020-02-06  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/lib/ld-lib.exp (is_generic): Delete.
+	* testsuite/ld-unique/unique.exp: Exclude tic6x.
+
+2020-02-06  Alan Modra  <amodra@gmail.com>
+
+	* configure.tgt (i[3-7]86-*-moss*): Don't clear targ_extra_ofiles.
+	(i[3-7]86-*-openbsd*, x86_64-*-openbsd*): Add.
+
+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gas/25380
+	* testsuite/ld-i386/pr22001-1c.S: Use "unique,N" in .section
+	directives.
+	* testsuite/ld-i386/tls-gd1.S: Likewise.
+	* testsuite/ld-x86-64/pr21481b.S: Likewise.
+
+2020-01-30  Jan Beulich  <jbeulich@suse.com>
+
+	* ld.texi: Remove space between @option and brace.
+
+2020-01-29  Alan Modra  <amodra@gmail.com>
+
+	PR 25477
+	* ldelf.c (ldelf_check_ld_so_conf): Add prefix parameter and
+	correct concat.
+	(ldelf_after_open): Add prefix parameter.
+	* ldelf.h (ldelf_after_open): Update prototype.
+	* emultempl/elf.em (gld${EMULATION_NAME}_after_open): Pass $prefix
+	to ldelf_after_open.
+	* Makefile.am: Correct z80 dependencies.
+	* Makefile.in: Regenerate.
+
+2020-01-28  Alan Modra  <amodra@gmail.com>
+
+	* ldexp.c (fold_name): Don't print bfd_link_hash_lookup failed
+	in first phase.
+
+2020-01-27  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-elfvers/vers.exp: Replace case statements with
+	switch statements.
+	* testsuite/ld-ifunc/ifunc.exp: Likewise.
+	* testsuite/ld-unique/unique.exp: Likewise.
+
+2020-01-27  H.J. Lu  <hongjiu.lu@intel.com>
+	    Alan Modra  <amodra@gmail.com>
+
+	PR ld/25458
+	* testsuite/ld-elf/pr25458.map: New file.
+	* testsuite/ld-elf/pr25458.rd: Likewise.
+	* testsuite/ld-elf/pr25458a.s: Likewise.
+	* testsuite/ld-elf/pr25458b.s: Likewise.
+	* testsuite/ld-elf/shared.exp: Run PR ld/25458 test.
+
+2020-01-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25416
+	* testsuite/ld-x86-64/tls.exp: Skip GNU2 TLS tests only without
+	compiler support.
+
+2020-01-22  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsdesc3.d,
+	* testsuite/ld-powerpc/tlsdesc3.wf,
+	* testsuite/ld-powerpc/tlsdesc4.d,
+	* testsuite/ld-powerpc/tlsdesc4.s,
+	* testsuite/ld-powerpc/tlsdesc4.wf: New tests.
+	* testsuite/ld-powerpc/powerpc.exp: Run them.
+
+2020-01-22  Alan Modra  <amodra@gmail.com>
+
+	* emultempl/ppc64elf.em (ppc64_opt, PARSE_AND_LIST_LONGOPTS),
+	(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Support
+	--tls-get-addr-regsave and --no-tls-get-addr-regsave.
+	(params): Init new field.
+	* ld.texi (--tls-get-addr-regsave, --no-tls-get-addr-regsave):
+	Document.
+	* testsuite/ld-powerpc/tlsdesc.s,
+	* testsuite/ld-powerpc/tlsdesc.d,
+	* testsuite/ld-powerpc/tlsdesc.wf,
+	* testsuite/ld-powerpc/tlsdesc2.d,
+	* testsuite/ld-powerpc/tlsdesc2.wf,
+	* testsuite/ld-powerpc/tlsexenors.d,
+	* testsuite/ld-powerpc/tlsexenors.r,
+	* testsuite/ld-powerpc/tlsexers.d,
+	* testsuite/ld-powerpc/tlsexers.r,
+	* testsuite/ld-powerpc/tlsexetocnors.d,
+	* testsuite/ld-powerpc/tlsexetocrs.d,
+	* testsuite/ld-powerpc/tlsexetocrs.r,
+	* testsuite/ld-powerpc/tlsopt6.d,
+	* testsuite/ld-powerpc/tlsopt6.wf: New.
+	* testsuite/ld-powerpc/powerpc.exp: Run new tests.
+
+2020-01-22  Yuri Chornoivan  <yurchor@mageia.org>
+
+	PR 25417
+	* ldlang.c (ldlang_open_ctf): Fix error message typo.
+	* emultempl/z80elf.em (z80_elf_after_open): Likewise.
+
+2020-01-21  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/pr23900-1.d: Adjusted.
+
+2020-01-21  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ld-elf/pr23900-1.d: Also pass -l to readelf.
+
+2020-01-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-01-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/25416
+	* testsuite/ld-x86-64/pr25416-1.s: New file
+	* testsuite/ld-x86-64/pr25416-1a.d: Likewise.
+	* testsuite/ld-x86-64/pr25416-1b.d: Likewise.
+	* testsuite/ld-x86-64/pr25416-1.s: Likewise.
+	* testsuite/ld-x86-64/pr25416-2.s: Likewise.
+	* testsuite/ld-x86-64/pr25416-2a.d: Likewise.
+	* testsuite/ld-x86-64/pr25416-2b.d: Likewise.
+	* testsuite/ld-x86-64/pr25416-3.d: Likewise.
+	* testsuite/ld-x86-64/pr25416-3.s: Likewise.
+	* testsuite/ld-x86-64/pr25416-4.d: Likewise.
+	* testsuite/ld-x86-64/pr25416-4.s: Likewise.
+	* testsuite/ld-x86-64/pr25416-5a.c: Likewise.
+	* testsuite/ld-x86-64/pr25416-5b.s: Likewise.
+	* testsuite/ld-x86-64/pr25416-5c.s: Likewise.
+	* testsuite/ld-x86-64/pr25416-5d.s: Likewise.
+	* testsuite/ld-x86-64/pr25416-5e.s: Likewise.
+	* testsuite/ld-x86-64/x86-64.exp: Run PR ld/25416 tests.
+
+2020-01-20  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/tlsexe.d: Match new __tls_get_addr stub.
+	* testsuite/ld-powerpc/tlsexeno.d: Likewise.
+	* testsuite/ld-powerpc/tlsexetoc.d: Likewise.
+	* testsuite/ld-powerpc/tlsexetocno.d: Likewise.
+	* testsuite/ld-powerpc/tlsopt5.d: Likewise.
+
+2020-01-18  Roland McGrath  <mcgrathr@google.com>
+
+	* testsuite/ld-x86-64/align-branch-1.d: Loosen instruction regexps
+	to admit whatever absolute address.  The label-relative address is
+	what the test needs to verify.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/ld.pot: Regenerate.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* scripttempl/elf32msp430_3.sc: Remove.
+
+2020-01-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* scripttempl/elf32msp430.sc: Add input section rules for
+	.upper.{text,data,rodata,bss}.
+	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.
+	* testsuite/ld-msp430-elf/upper-input-sections.s: New test.
+
+2020-01-15  Lars Brinkhoff  <lars@nocrew.org>
+
+	PR 20694
+	* temulparams/pdp11.sh (TARGET_PAGE_SIZE): Set to 8192.
+
+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
+
+	* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.
+	* testsuite/ld-msp430-elf/reloc-lo-430x.s: New test.
+
+2020-01-15  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-powerpc/ambiguousv1b.d: Adjust expected output.
+	* testsuite/ld-powerpc/funref.s: Align func_tab.
+	* testsuite/ld-powerpc/funref2.s: Likewise.
+	* testsuite/ld-powerpc/funv1.s: Add dot symbols.
+
+2020-01-14  Lili Cui <lili.cui@intel.com>
+
+	* testsuite/ld-i386/align-branch-1.d: Updated for i686-pc-elf.
+
+2020-01-13  Alan Modra  <amodra@gmail.com>
+
+	* po/BLD-POTFILES.in: Regenerate.
+
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
+
+	* testsuite/ld-arc/relax-local-pic.d: Improve matching patterns.
+
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
+
+	* Makefile.am: Remove earcelf_prof.c and earclinux_prof.c
+	emulations.
+	* configure.tgt: Likewise.
+	* Makefile.in: Regenerate.
+	* emulparams/arcelf_prof.sh: Remove file.
+	* emulparams/arclinux_prof.sh: Likewise.
+
+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>
+
+	* scripttempl/elfarcv2.sc : Allow interrupt vector table to be
+	located at an arbitrary address.  Use DWARF.sc file.
+	* scripttempl/elfarc.sc: Use DWARF.sc file.
+
+2020-01-07  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/ld-mips-elf/eh-frame5.s,
+	* testsuite/ld-mips-elf/ehdr_start-new.s,
+	* testsuite/ld-mips-elf/ehdr_start-o32.s,
+	* testsuite/ld-mips-elf/mips16-call-global-1.s,
+	* testsuite/ld-mips-elf/mips16-intermix-1.s,
+	* testsuite/ld-mips-elf/mips16-pic-1b.s,
+	* testsuite/ld-mips-elf/mips16-pic-4c.s,
+	* testsuite/ld-mips-elf/no-shared-1-n64.s,
+	* testsuite/ld-mips-elf/no-shared-1-o32.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-1b-micromips.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-1b.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-2a.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-3b.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-4b.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-5a.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-n32c.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-n64c.s,
+	* testsuite/ld-mips-elf/pic-and-nonpic-6-o32c.s,
+	* testsuite/ld-mips-elf/pie.s,
+	* testsuite/ld-mips-elf/relax-jalr.s: Revert 2019-12-17 change.
+
+2020-01-06  Nick Clifton  <nickc@redhat.com>
+
+	PR 25327
+	* testsuite/ld-elf/shared.exp: Add -fcommon option to compiler
+	command line when building libcomm1.o and pr13250 tests.
+	* testsuite/ld-plugin/lto.exp: Likewise for pr20267 tests.
+
+2020-01-06  Nick Clifton  <nickc@redhat.com>
+
+	PR 25326
+	* testsuite/ld-elf/shared.exp: Add -fcommon option to compiler
+	command line when building pr19579 binaries.
+
+2020-01-03  Hannes Domani  <ssbssa@yahoo.de>
+
+	* emultempl/pe.em: Add new option --enable-reloc-section.
+	* emultempl/pep.em: Likewise.
+	* ld.texi: Document --enable-reloc-section.
+	* pe-dll.c (pe_dll_build_sections): Use pe_dll_enable_reloc_section.
+	(pe_dll_fill_sections): Simplify by calling pe_exe_fill_sections.
+	* pe-dll.h: Add extern declaration of option flag.
+	* pep-dll.c (pe_dll_enable_reloc_section):
+	Add alias define for pep_dll_enable_reloc_section.
+	* pep-dll.h: Add extern declaration of option flag.
+
+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>
+
+	* Makefile.am: Add new target z80-elf
+	* configure.tgt: Likewise.
+	* Makefile.in: Regenerate.
+	* emultempl/z80.em: Add support for eZ80 and Z180 architectures.
+	* emulparams/elf32z80.sh: New file.
+	* emultempl/z80elf.em: Likewise.
+	* testsuite/ld-elf/comm-data4.s: Fix for Z80.
+	* testsuite/ld-elf/comm-data5.s: Fix for Z80.
+	* testsuite/ld-scripts/fill16.d: Fix for Z80.
+	* testsuite/ld-z80/arch_ez80_adl.d: Likewise.
+	* testsuite/ld-z80/arch_ez80_z80.d: Likewise.
+	* testsuite/ld-z80/arch_r800.d: Likewise.
+	* testsuite/ld-z80/arch_z180.d: Likewise.
+	* testsuite/ld-z80/arch_z80.d: Likewise.
+	* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.
+	* testsuite/ld-z80/comb_arch_z180.d: Likewise.
+	* testsuite/ld-z80/labels.s: Likewise.
+	* testsuite/ld-z80/relocs.s: Likewise.
+	* testsuite/ld-z80/relocs_b_ez80.d: Likewise.
+	* testsuite/ld-z80/relocs_b_z80.d: Likewise.
+	* testsuite/ld-z80/relocs_f_z80.d: Likewise.
+	* testsuite/ld-z80/z80.exp: Likewise.
+	* NEWS: Mention the new support.
+
+2020-01-02  Tamar Christina  <tamar.christina@arm.com>
+
+	PR 25210
+	PR 24753
+	* emultempl/aarch64elf.em (elf${ELFSIZE}_aarch64_add_stub_section):
+	Remove SEC_LINKER_CREATED.
+	* testsuite/ld-aarch64/aarch64-elf.exp: Add erratum835769-843419.
+	* testsuite/ld-aarch64/erratum835769-843419.d: New test.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/gold/ChangeLog-2020 b/gold/ChangeLog-2020
new file mode 100644
index 00000000000..9614a87f76d
--- /dev/null
+++ b/gold/ChangeLog-2020
@@ -0,0 +1,580 @@
+2020-12-19  H.J. Lu  <hjl.tools@gmail.com>
+
+	PR gold/27097
+	* incremental.cc (Sized_relobj_incr::do_add_symbols): Move sym
+	declaration just before use.
+	(Sized_incr_dynobj::do_add_symbols): Likewise.
+	* plugin.cc (Sized_pluginobj::do_add_symbols): Likewise.
+
+2020-12-15  Cary Coutant  <ccoutant@gmail.com>
+
+	* dwp.cc (class Dwo_file): Use new Ehdr::get_ei_osabi and
+	get_ei_abiversion methods.
+	* incremental.cc (make_sized_incremental_binary): Likewise.
+	* object.cc (Sized_relobj_file::Sized_relobj_file): Likewise.
+	(make_elf_sized_object): Likewise.
+	* object.h (class Osabi): Make the class untemplated.
+
+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>
+
+	Implement -z unique / -z nounique options.
+	* layout.cc (Layout::finish_dynamic_section): Set DF_GNU_1_UNIQUE.
+	* options.h (class General_options): Handle -z unique, -z nounique.
+
+2020-12-14  H.J. Lu  <hjl.tools@gmail.com>
+	    Cary Coutant  <ccoutant@gmail.com>
+
+	PR gold/27039
+	* layout.cc (Layout::layout): Strip SHF_GNU_RETAIN.
+	* object.cc (Sized_relobj_file::Sized_relobj_file): Initialize osabi_.
+	(Sized_relobj_file::do_layout): Keep SHF_GNU_RETAIN sections for
+	GNU/FreBSD ELFOSABIs.
+	* object.h (Osabi) New class.
+	(Sized_relobj_file): Add osabi() and osabi_.
+	* testsuite/Makefile.am (check_SCRIPTS): Add retain.sh.
+	(check_DATA): Add retain_1.out retain_2.out.
+	(MOSTLYCLEANFILES): Add retain_1 retain_2.
+	(retain_1.out): New target.
+	(retain_1): Likewise.
+	(retain_1.o): Likewise.
+	(retain_2.out): Likewise.
+	(retain_2): Likewise.
+	(retain_2.o): Likewise.
+	* testsuite/Makefile.in: Regenerate.
+	* testsuite/retain.sh: New file.
+	* testsuite/retain_1.s: Likewise.
+	* testsuite/retain_2.s: Likewise.
+
+2020-12-13  Cary Coutant  <ccoutant@gmail.com>
+
+	PR gold/23539
+	PR gold/24123
+	* testsuite/Makefile.am (incremental_copy_test): Re-enable for GCC 9+.
+	(incremental_comdat_test_1): Likewise.
+	* testsuite/Makefile.in: Regenerate.
+
+2020-12-13  Cary Coutant  <ccoutant@gmail.com>
+
+	PR gold/23539
+	* object.cc (Sized_relobj_file::layout_gnu_property_section): Ignore
+	Gnu properties during incremental links.
+
+2020-12-13  Cary Coutant  <ccoutant@gmail.com>
+
+	PR gold/24123
+	* layout.cc (Layout::init_fixed_output_section): Mask out flags that
+	should be ignored when matching sections.
+
+2020-12-07  Alan Modra  <amodra@gmail.com>
+
+	* plugin.cc (Plugin_recorder::init): Replace strncpy with memcpy.
+
+2020-12-03  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/Makefile.am (pr26936a.o): Pass -mx86-used-note=yes.
+	(pr26936b.o, pr26936c.o, pr26936d.o): Likewise.
+	* testsuite/Makefile.in: Regenerate.
+
+2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR ld/26972
+	* x86_64.cc (Output_data_plt_x86_64_ibt::tlsdesc_plt_entry): Add
+	endbr64.
+	(Output_data_plt_x86_64_ibt::do_fill_tlsdesc_entry): Adjusted.
+
+2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/26939
+	* x86_64.cc (Target_x86_64<size>::Scan::local): Check
+	get_r_addend() == -4 for GOTPCRELX conversion.
+	(Target_x86_64<size>::Scan::global): Likewise.
+	(Target_x86_64<size>::Relocate::relocate): Likewise.
+	* testsuite/Makefile.am (check_DATA): Add
+	x86_64_mov_to_lea15.stdout and x86_64_mov_to_lea16.stdout.
+	(MOSTLYCLEANFILES): Add x86_64_mov_to_lea15 and
+	x86_64_mov_to_lea16.
+	(x86_64_mov_to_lea9.o): New target.
+	(x86_64_mov_to_lea10.o): Likewise.
+	(x86_64_mov_to_lea15): Likewise.
+	(x86_64_mov_to_lea16): Likewise.
+	(x86_64_mov_to_lea15.stdout): Likewise.
+	(x86_64_mov_to_lea16.stdout): Likewise.
+	* testsuite/Makefile.in: Regenerated.
+	* testsuite/x86_64_mov_to_lea.sh: Updated.
+	* testsuite/x86_64_mov_to_lea5.s: New file.
+
+2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/26937
+	* object.cc (Sized_relobj_file::map_to_kept_section): Get the
+	section index for linkonce section.  Also check the single
+	comdat section.
+	* testsuite/Makefile.am (check_SCRIPTS): Add pr26936.sh.
+	(check_DATA): Add pr26936a.stdout and pr26936b.stdout.
+	(MOSTLYCLEANFILES): Add pr26936a and pr26936b.
+	(pr26936a.stdout): New target.
+	(pr26936a): Likewise.
+	(pr26936b.stdout): Likewise.
+	(pr26936b): Likewise.
+	(pr26936a.o): Likewise.
+	(pr26936b.o): Likewise.
+	(pr26936c.o): Likewise.
+	(pr26936d.o): Likewise.
+	* testsuite/Makefile.in: Regenerated.
+	* testsuite/pr26936.sh: New file.
+	* testsuite/pr26936a.s: Likewise.
+	* testsuite/pr26936b.s: Likewise.
+	* testsuite/pr26936c.s: Likewise.
+	* testsuite/pr26936d.s: Likewise.
+
+2020-11-17  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::no_tprel_opt_): Rename from tprel_opt_.
+	Init to false.
+	(Target_powerpc::tprel_opt): Test parameters->options().tls_optimize().
+	(Target_powerpc::set_tprel_opt): Delete.
+	(Target_powerpc::set_no_tprel_opt): New function.  Update all uses
+	of set_tprel_opt.
+
+2020-11-16  Michael Hudson-Doyle  <michael.hudson@canonical.com>
+
+	PR 26902
+	* powerpc.cc (Relocate::relocate): Do not include local entry
+	offset of target function when computing the address of a stub.
+
+2020-11-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/26200
+	* plugin.cc (Plugin_manager::claim_file): Don't share Plugin_list
+	iterator.
+	(Plugin_manager::all_symbols_read): Likewise.
+	(Plugin_manager::cleanup): Likewise.
+
+2020-11-03  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::tocsave_loc): Return a pointer.
+	(Target_powerpc::Relocate::relocate): Avoid -Wdangling-gsl error.
+
+2020-11-03  Nick Gasson  <nick.gasson@arm.com>
+
+	PR 26827
+	* fileread.cc (File_read::open): Ensure file_counts_lock is
+	initialized.
+	* testsuite/Makefile.am (check_PROGRAMS): Add a test that passes
+	-Wl,--threads.
+	* testsuite/Makefile.in: Regenerate.
+
+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/gnu_property_test.sh: Updated.
+
+2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* Makefile.am (bootstrap-test): Skip for LTO build.
+	(bootstrap-test-r): Likewise.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/23539
+	* configure.ac: Check for GCC 9 or later and for -fcf-protection.
+	* configure: Regenerated.
+	* testsuite/Makefile.am (check_PROGRAMS): Skip incremental_test_2,
+	incremental_test_3, incremental_test_4, incremental_test_5,
+	incremental_copy_test, incremental_common_test_1 and
+	incremental_comdat_test_1 for -fcf-protection.  Also Skip
+	incremental_copy_test and incremental_comdat_test_1 for GCC 9 or
+	later.
+	* testsuite/Makefile.in: Regenerated.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/23503
+	* testsuite/Makefile.am (justsyms_lib): Pass
+	-T $(srcdir)/justsyms_lib.t to gold.
+	* testsuite/Makefile.in: Regenerated.
+	* testsuite/justsyms_lib.t: New file.
+	* testsuite/script_test_10.t: Discard .note.gnu.property section.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* x86_64.cc (Target_x86_64::Target_x86_64): Initialize
+	feature_2_used_, feature_2_needed_ and object_feature_2_used_.
+	(Target_x86_64::feature_2_used_): New data member.
+	(Target_x86_64::feature_2_needed_): Likewise.
+	(Target_x86_64::object_isa_1_used_): Likewise.
+	(Target_x86_64::record_gnu_property): Support
+	GNU_PROPERTY_X86_COMPAT_ISA_1_USED,
+	GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED,
+	GNU_PROPERTY_X86_COMPAT_2_ISA_1_USED,
+	GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED,
+	GNU_PROPERTY_X86_FEATURE_2_USED and
+	GNU_PROPERTY_X86_FEATURE_2_NEEDED.
+	(Target_x86_64::merge_gnu_properties): Merge FEATURE_2_USED bits.
+	Initialize object_feature_2_used_.
+	(Target_x86_64::do_finalize_gnu_properties): Support
+	GNU_PROPERTY_X86_FEATURE_2_USED and
+	GNU_PROPERTY_X86_FEATURE_2_NEEDED.
+	* testsuite/gnu_property_a.S (GNU_PROPERTY_X86_ISA_1_USED): Set
+	to 0xc0010002.
+	(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.
+	* testsuite/gnu_property_b.S (GNU_PROPERTY_X86_ISA_1_USED): Set
+	to 0xc0010002.
+	(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.
+	* testsuite/gnu_property_c.S (GNU_PROPERTY_X86_ISA_1_USED): Set
+	to 0xc0010002.
+	(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.
+	* testsuite/gnu_property_test.sh: Updated.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/22914
+	PR gold/23535
+	* layout.cc (Layout::attach_allocated_section_to_segment): Place
+	a note section in a PT_NOTE segment with the same alignment.  Set
+	the alignment of the PT_NOTE segment from the alignment of the
+	note section.
+	(Layout::create_note): Align the NT_GNU_PROPERTY_TYPE_0 note to 8
+	bytes for 64-bit ELF.
+	(Layout::segment_precedes): Place segments with larger alignments
+	first.
+	* output.cc (Output_segment::Output_segment): Initialize align_.
+	* output.h (Output_segment): Add align, set_align and align_.
+	* testsuite/Makefile.am (gnu_property_test.stdout): Pass -lhSWn
+	to $(TEST_READELF).
+	(gnu_property_test): Pass --build-id to ld.
+	* testsuite/Makefile.in: Regenerated.
+	* testsuite/gnu_property_test.sh (check_alignment): New.
+	Use check_alignment to check the NT_GNU_PROPERTY_TYPE_0 note
+	alignment.  Verify that there are 2 PT_NOTE segments.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/21452
+	* x86_64.cc (Scan::local_reloc_may_be_function_pointer): Remove
+	check for shared library.
+	(Scan::global_reloc_may_be_function_pointer): Remove check for
+	shared library and symbol visibility.
+	* testsuite/icf_safe_so_test.cc (bar_static): New function.
+	(main): Take function address of bar_static and use it.
+	* testsuite/icf_safe_so_test.sh (arch_specific_safe_fold): Also
+	check fold on x86-64.  Check bar_static isn't folded.
+
+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* icf.cc (Icf::find_identical_sections): Skip zero-sized sections.
+
+2020-10-09  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Powerpc_relobj::do_relocate_sections): Don't do
+	local entry offset optimisation for lplt_section.
+	(Target_powerpc::Branch_info::make_stub): Don't add local
+	entry offset to long branch dest passed to
+	add_long_branch_entry.  Do pass st_other bits.
+	(Stub_table::Branch_stub_ent): Add "other_" field.
+	(Stub_table::add_long_branch_entry): Add "other" param, and
+	save.
+	(Stub_table::branch_stub_size): Adjust long branch offset.
+	(Stub_table::do_write): Likewise.
+	(Target_powerpc::Relocate::relocate): Likewise.
+
+2020-10-09  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (is_got_reloc): New function.
+	(Target_powerpc::Relocate::relocate): Use it here, exclude GOT
+	relocs when looking for stubs.
+
+2020-10-08  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/split_i386.sh: Updated for --split-stack-adjust-size
+	default change.
+	* testsuite/split_x86_64.sh: Likewise.
+
+2020-10-08  Alan Modra  <amodra@gmail.com>
+
+	* options.h (split_stack_adjust_size): Default to 0x100000.
+
+2020-09-26  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc): Rename power10_stubs_ to
+	power10_relocs_.
+	(Target_powerpc::set_power10_relocs): New accessor.
+	(Target_powerpc::set_power10_stubs): Delete.
+	(Target_powerpc::power10_stubs): Adjust.
+	(Target_powerpc::has_localentry0): New accessor.
+	(ld_0_11): New constant.
+	(glink_eh_frame_fde_64v1, glink_eh_frame_fde_64v2): Adjust.
+	(glink_eh_frame_fde_64v2_localentry0): New.
+	(Output_data_glink::pltresolve_size): Update.
+	(Output_data_glink::add_eh_frame): Use localentry0 version eh_frame.
+	(Output_data_glink::do_write): Move r2 save to start of ELFv2 stub
+	and only emit for has_localentry0.  Don't use r2 in the stub.
+	(Target_powerpc::Scan::local, global): Adjust for
+	set_power10_relocs renaming.
+	(Target_powerpc::scan_relocs): Warn and reset plt_localentry0_.
+
+2020-09-24  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc::Relocate::relocate): Don't skip
+	first insn of __tls_get_addr_opt stub.
+
+2020-08-24  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc (Target_powerpc): Add tprel_opt_ and accessors.
+	(Target_powerpc::Scan::local): Sanity check tprel high relocs.
+	(Target_powerpc::Scan::global): Likewise.
+	(Target_powerpc::Relocate::relocate): Control tprel optimisation
+	with tprel_opt_ and enable for 32-bit.
+
+2020-08-12  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: Updated Serbian translation.
+
+2020-07-27  Alan Modra  <amodra@gmail.com>
+
+	* options.h (DEFINE_enum): Add optional_arg__ param, adjust
+	all uses.
+	(General_options): Add --power10-stubs and --no-power10-stubs.
+	* options.cc (General_options::parse_no_power10_stubs): New.
+	(General_options::finalize): Handle --power10-stubs.
+	* powerpc.cc (set_power10_stubs): Don't set when --power10-stubs=no.
+	(power10_stubs_auto): New.
+	(struct Plt_stub_ent): Add toc_ and tocoff_.  Don't use a bitfield
+	for indx_.
+	(struct Branch_stub_ent): Add toc_and tocoff_.  Use bitfields for
+	iter_, notoc_ and save_res_.
+	(add_plt_call_entry): Set toc_.  Adjust resizing conditions for
+	--power10-stubs=auto.
+	(add_long_branch_entry): Set toc_.
+	(add_eh_frame, define_stub_syms): No longer use const_iterators
+	for plt and long branch stub iteration.
+	(build_tls_opt_head, build_tls_opt_tail): Change parameters and
+	return value.  Move tests for __tls_get_addr to callers.
+	(plt_call_size): Handle --power10-stubs=auto.
+	(branch_stub_size): Likewise.
+	(Stub_table::do_write): Likewise.
+	(relocate): Likewise.
+
+2020-07-19  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/bnd_ifunc_1.sh: Updated.
+	* testsuite/bnd_plt_1.sh: Likewise.
+	* testsuite/split_x32.sh: Likewise.
+	* testsuite/split_x86_64.sh: Likewise.
+	* testsuite/x86_64_indirect_call_to_direct.sh: Likewise.
+
+2020-07-08  Nick Clifton  <nickc@redhat.com>
+
+	* testsuite/script_test_7.sh: Adjust expected address of the .bss
+	section.
+	* testsuite/script_test_9.sh: Do not expect the .init section to
+	immediately follow the .text section in the mapping of sections to
+	segments.
+
+2020-07-07  Nick Clifton  <nickc@redhat.com>
+
+	* target-reloc.h: (Default_comdat_behaviour:get): Ignore discarded
+	relocs that refer to the .gnu.build.attributes section.
+
+2020-07-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-07-03  Alan Modra  <amodra@gmail.com>
+
+	PR 26028
+	* testsuite/Makefile.am (file_in_many_sections.stdout): Add -W
+	to readelf options.
+	* testsuite/Makefile.in: Regenerate.
+
+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>
+
+	* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.
+	* configure: Regenerated.
+	* config.h.in: Likewise.
+
+2020-06-24  Nick Clifton  <nickc@redhat.com>
+
+	* target-reloc.h (issue_discarded_error): Initialise the
+	key_symndx variable.
+
+2020-06-23  Roland McGrath  <mcgrathr@google.com>
+
+	PR 22843
+	* options.h (class General_options): Add --dependency-file option.
+	* fileread.cc (File_read::files_read): New static variable.
+	(File_read::open): Add the file to the files_read list.
+	(File_read::record_file_read): New static member function.
+	(File_read::write_dependency_file): New static member function.
+	* fileread.h (class File_read): Declare them.
+	* layout.cc (Layout::read_layout_from_file): Call record_file_read.
+	(Close_task_runner::run): Call write_dependency_file if
+	--dependency-file was passed.
+
+2020-06-18  Fangrui Song  <i@maskray.me>
+
+	PR gold/26039
+	* layout.cc (Layout::finish_dynamic_section): Set DF_1_PIE.
+
+2020-06-16  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/discard_locals_test.c: Replace uses of asm with __asm__.
+	* testsuite/discard_locals_relocatable_test.c: Likewise.
+
+2020-06-16  Alan Modra  <amodra@gmail.com>
+
+	* testsuite/Makefile.am (export_dynamic_plugin.o): Use CXXCOMPILE.
+	(plugin_test_wrap_symbols_1.o): Likewise.
+	(plugin_test_wrap_symbols_2.o): Likewise.
+	* testsuite/Makefile.in: Regenerate.
+
+2020-06-15  Roland McGrath  <mcgrathr@google.com>
+
+	Implement -z start-stop-visibility=... option.
+	* options.h (class General_options): Handle -z start-stop-visibility=.
+	(General_options::start_stop_visibility_enum): New public method.
+	(General_options::set_start_stop_visibility_enum): New private method.
+	(General_options::start_stop_visibility_enum_): New private member.
+	* options.cc (General_options::General_options): Add initializer.
+	(General_options::finalize): Set this->start_stop_visibility_enum_
+	from string value.
+	* layout.cc (Layout::define_section_symbols): Use option setting.
+
+2020-06-06  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc: Update throughout for reloc renaming.
+
+2020-05-22  Alan Modra  <amodra@gmail.com>
+
+	PR 25882
+	* powerpc.cc (merge_object_attributes): Replace name param with
+	obj param.  Update callers.  Don't init FP attributes from shared
+	libraries, and do not emit an error if they don't match.
+
+2020-05-15  Nikita Ermakov  <coffe92@gmail.com>
+
+	* powerpc.cc (do_gc_mark_symbol): Don't segfault on plugin symbols.
+
+2020-05-14  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: New Serbian translation.
+
+2020-05-11  Alan Modra  <amodra@gmail.com>
+
+	* powerpc.cc: Rename powerxx to power10 throughout.
+
+2020-05-02  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/25904
+	* testsuite/Makefile.am (COMMON_TEST_C_CFLAGS): New.
+	(common_test_1.o): New rule.
+	(common_test_2.o): Likewise.
+	(common_test_3.o): Likewise.
+	(plugin_common_test_1.o): Likewise.
+	(plugin_common_test_2.o): Likewise.
+	(common_test_1_v1.o): Likewise.
+	(common_test_1_v2.o): Likewise.
+	(common_test_2_pic.o): Compile with $(COMMON_TEST_C_CFLAGS).
+	(common_test_3_pic.o): Likewise.
+	* testsuite/Makefile.in: Regenerated.
+
+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/25426
+	* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):
+	For x32, relax "rex leal foo@tlsdesc(%rip), %reg" to
+	"rex movl foo@gottpoff(%rip), %eax" and relax ""call *(%eax)"
+	to "nopl (%rax)".
+	(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): For x32,
+	relax "rex leal foo@tlsdesc(%rip), %reg" to
+	"rex movl foo@tpoff, %eax" and relax "call *foo@tlscall(%eax)"
+	to "nopl (%rax)".
+	* testsuite/Makefile.am (tls_test_gnu2.o): Depend on
+	gcctestdir/as.
+	(tls_test_file2_gnu2.o): Likewise.
+	(tls_test_c_gnu2.o): Likewise.
+	* testsuite/Makefile.in: Regenerated.
+
+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/25473
+	* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):
+	Properly check r8 - r15 in "lea foo@TLSDESC(%rip), %reg".
+	(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): Properly
+	relax r8 - r15 in "lea foo@TLSDESC(%rip), %reg".
+	* testsuite/Makefile.am (check_SCRIPTS): Add x86_64_gd_to_le.sh.
+	(check_DATA): Add x86_64_gd_to_le.stdout.
+	(MOSTLYCLEANFILES): Add x86_64_gd_to_le.
+	(x86_64_gd_to_le.o): New target.
+	(x86_64_gd_to_le): Likewise.
+	(x86_64_gd_to_le.stdout): Likewise.
+	* testsuite/Makefile.in: Regenerated.
+	* testsuite/x86_64_gd_to_le.s: New file.
+	* testsuite/x86_64_gd_to_le.sh: Likewise.
+
+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/odr_violation2.cc (Ordering::operator()): Make
+	expression even more complex.
+
+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	* testsuite/ver_test_pr16504.sh: Updated.
+
+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/25872
+	* x86_64.cc (Output_data_plt_x86_64_bnd::do_write): Increment
+	plt_offset after setting the reserved TLSDESC PLT entry.
+	(Output_data_plt_x86_64_ibt<size>::do_write): Likewise.
+
+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR gold/25872
+	* x86_64.cc (Output_data_plt_x86_64_bnd::do_address_for_local):
+	Handle local IFUNC symbol.
+	(Output_data_plt_x86_64_ibt::do_address_for_local): Likewise.
+
+2020-03-19  Fangrui Song  <maskray@google.com>
+
+    * options.h (General_options): Add --no-rosegment option.
+
+2020-02-24  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Update French translation.
+
+2020-01-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/uk.po: Updated Ukranian translation.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+	* po/gold.pot: Regenerate.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
diff --git a/gprof/ChangeLog-2020 b/gprof/ChangeLog-2020
new file mode 100644
index 00000000000..316d71d5635
--- /dev/null
+++ b/gprof/ChangeLog-2020
@@ -0,0 +1,86 @@
+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.
+	* Makefile.in: Regenerate.
+	* configure: Regenerate.
+
+2020-07-09  Nick Clifton  <nickc@redhat.com>
+
+	* po/tr.po: Updated Turkish translation.
+
+2020-07-06  Nick Clifton  <nickc@redhat.com>
+
+	* po/bg.po: Updated Bulgarian translation.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+
+2020-07-04  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.35 branch created.
+
+2020-06-25  Nick Clifton  <nickc@redhat.com>
+
+	* po/sv.po: Updated Swedish translation.
+
+2020-05-21  Alan Modra  <amodra@gmail.com>
+
+	* utils.c (print_name_only): Free demangled without checking
+	first for non-NULL.
+
+2020-05-18  Nick Clifton  <nickc@redhat.com>
+
+	* po/es.po: Update Spanish translation.
+
+2020-05-07  Nick Clifton  <nickc@redhat.com>
+
+	* po/fr.po: Updated French translation.
+
+2020-04-01  Nick Clifton  <nickc@redhat.com>
+
+	* po/sr.po: Updated Serbian translation.
+
+2020-02-24  Nick Clifton  <nickc@redhat.com>
+
+	* po/ms.po: Update Malasian translation.
+
+2020-01-23  Nick Clifton  <nickc@redhat.com>
+
+	* po/es.po: Updated Esperanto translation.
+	* po/fi.po: Updated Finish translation.
+
+2020-01-20  Nick Clifton  <nickc@redhat.com>
+
+	* po/de.po: Updated German translation.
+	* po/pt_BR.po: Updated Brazilian Portuguese translation.
+	* po/ru.po: Updated Russian translation.
+	* po/tr.po: Updated Turkish translation.
+	* po/uk.po: Updated Ukranian translation.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	* configure: Regenerate.
+
+2020-01-18  Nick Clifton  <nickc@redhat.com>
+
+	Binutils 2.34 branch created.
+
+2020-01-01  Alan Modra  <amodra@gmail.com>
+
+	Update year range in copyright notice of all files.
+
+For older changes see ChangeLog-2019
+
+Copyright (C) 2020 Free Software Foundation, Inc.
+
+Copying and distribution of this file, with or without modification,
+are permitted in any medium without royalty provided the copyright
+notice and this notice are preserved.
+
+Local Variables:
+mode: change-log
+left-margin: 8
+fill-column: 74
+version-control: never
+End:
